/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.domains.v1alpha2.model;

/**
 * A unit of data that is returned by the DNS servers.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Domains API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResourceRecordSet extends com.google.api.client.json.GenericJson {

  /**
   * For example, www.example.com.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Configures dynamic query responses based on either the geo location of the querying user or a
   * weighted round robin based routing policy. A valid `ResourceRecordSet` contains only `rrdata`
   * (for static resolution) or a `routing_policy` (for dynamic resolution).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RRSetRoutingPolicy routingPolicy;

  /**
   * As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> rrdata;

  /**
   * As defined in RFC 4034 (section 3.2).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> signatureRrdata;

  /**
   * Number of seconds that this `ResourceRecordSet` can be cached by resolvers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer ttl;

  /**
   * The identifier of a supported record type. See the list of Supported DNS record types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * For example, www.example.com.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * For example, www.example.com.
   * @param name name or {@code null} for none
   */
  public ResourceRecordSet setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Configures dynamic query responses based on either the geo location of the querying user or a
   * weighted round robin based routing policy. A valid `ResourceRecordSet` contains only `rrdata`
   * (for static resolution) or a `routing_policy` (for dynamic resolution).
   * @return value or {@code null} for none
   */
  public RRSetRoutingPolicy getRoutingPolicy() {
    return routingPolicy;
  }

  /**
   * Configures dynamic query responses based on either the geo location of the querying user or a
   * weighted round robin based routing policy. A valid `ResourceRecordSet` contains only `rrdata`
   * (for static resolution) or a `routing_policy` (for dynamic resolution).
   * @param routingPolicy routingPolicy or {@code null} for none
   */
  public ResourceRecordSet setRoutingPolicy(RRSetRoutingPolicy routingPolicy) {
    this.routingPolicy = routingPolicy;
    return this;
  }

  /**
   * As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRrdata() {
    return rrdata;
  }

  /**
   * As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
   * @param rrdata rrdata or {@code null} for none
   */
  public ResourceRecordSet setRrdata(java.util.List<java.lang.String> rrdata) {
    this.rrdata = rrdata;
    return this;
  }

  /**
   * As defined in RFC 4034 (section 3.2).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSignatureRrdata() {
    return signatureRrdata;
  }

  /**
   * As defined in RFC 4034 (section 3.2).
   * @param signatureRrdata signatureRrdata or {@code null} for none
   */
  public ResourceRecordSet setSignatureRrdata(java.util.List<java.lang.String> signatureRrdata) {
    this.signatureRrdata = signatureRrdata;
    return this;
  }

  /**
   * Number of seconds that this `ResourceRecordSet` can be cached by resolvers.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTtl() {
    return ttl;
  }

  /**
   * Number of seconds that this `ResourceRecordSet` can be cached by resolvers.
   * @param ttl ttl or {@code null} for none
   */
  public ResourceRecordSet setTtl(java.lang.Integer ttl) {
    this.ttl = ttl;
    return this;
  }

  /**
   * The identifier of a supported record type. See the list of Supported DNS record types.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The identifier of a supported record type. See the list of Supported DNS record types.
   * @param type type or {@code null} for none
   */
  public ResourceRecordSet setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public ResourceRecordSet set(String fieldName, Object value) {
    return (ResourceRecordSet) super.set(fieldName, value);
  }

  @Override
  public ResourceRecordSet clone() {
    return (ResourceRecordSet) super.clone();
  }

}
