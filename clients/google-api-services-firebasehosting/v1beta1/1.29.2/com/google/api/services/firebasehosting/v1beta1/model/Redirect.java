/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebasehosting.v1beta1.model;

/**
 * A [`redirect`](/docs/hosting/full-config#redirects) represents the configuration for returning an
 * HTTP redirect response given a matching request URL path.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Hosting API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Redirect extends com.google.api.client.json.GenericJson {

  /**
   * Required. The user-supplied [glob pattern](/docs/hosting/full-config#glob_pattern_matching) to
   * match against the request URL path.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String glob;

  /**
   * Required. The value to put in the HTTP location header of the response. The location can
   * contain capture group values from the pattern using a `:` prefix to identify the segment and an
   * optional `*` to capture the rest of the URL. For example: "glob": "/:capture*", "statusCode":
   * 301, "location": "https://example.com/foo/:capture"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * Required. The status HTTP code to return in the response. It must be a valid 3xx status code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer statusCode;

  /**
   * Required. The user-supplied [glob pattern](/docs/hosting/full-config#glob_pattern_matching) to
   * match against the request URL path.
   * @return value or {@code null} for none
   */
  public java.lang.String getGlob() {
    return glob;
  }

  /**
   * Required. The user-supplied [glob pattern](/docs/hosting/full-config#glob_pattern_matching) to
   * match against the request URL path.
   * @param glob glob or {@code null} for none
   */
  public Redirect setGlob(java.lang.String glob) {
    this.glob = glob;
    return this;
  }

  /**
   * Required. The value to put in the HTTP location header of the response. The location can
   * contain capture group values from the pattern using a `:` prefix to identify the segment and an
   * optional `*` to capture the rest of the URL. For example: "glob": "/:capture*", "statusCode":
   * 301, "location": "https://example.com/foo/:capture"
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * Required. The value to put in the HTTP location header of the response. The location can
   * contain capture group values from the pattern using a `:` prefix to identify the segment and an
   * optional `*` to capture the rest of the URL. For example: "glob": "/:capture*", "statusCode":
   * 301, "location": "https://example.com/foo/:capture"
   * @param location location or {@code null} for none
   */
  public Redirect setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * Required. The status HTTP code to return in the response. It must be a valid 3xx status code.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStatusCode() {
    return statusCode;
  }

  /**
   * Required. The status HTTP code to return in the response. It must be a valid 3xx status code.
   * @param statusCode statusCode or {@code null} for none
   */
  public Redirect setStatusCode(java.lang.Integer statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  @Override
  public Redirect set(String fieldName, Object value) {
    return (Redirect) super.set(fieldName, value);
  }

  @Override
  public Redirect clone() {
    return (Redirect) super.clone();
  }

}
