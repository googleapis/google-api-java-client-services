/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datamigration.v1.model;

/**
 * Details of the mappings of a database entity.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Database Migration API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EntityMapping extends com.google.api.client.json.GenericJson {

  /**
   * Target entity full name. The draft entity can also include a column, index or constraint using
   * the same naming notation schema.table.column.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String draftEntity;

  /**
   * Entity mapping log entries. Multiple rules can be effective and contribute changes to a
   * converted entity, such as a rule can handle the entity name, another rule can handle an entity
   * type. In addition, rules which did not change the entity are also logged along with the reason
   * preventing them to do so.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<EntityMappingLogEntry> mappingLog;

  /**
   * Source entity full name. The source entity can also be a column, index or constraint using the
   * same naming notation schema.table.column.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceEntity;

  /**
   * Target entity full name. The draft entity can also include a column, index or constraint using
   * the same naming notation schema.table.column.
   * @return value or {@code null} for none
   */
  public java.lang.String getDraftEntity() {
    return draftEntity;
  }

  /**
   * Target entity full name. The draft entity can also include a column, index or constraint using
   * the same naming notation schema.table.column.
   * @param draftEntity draftEntity or {@code null} for none
   */
  public EntityMapping setDraftEntity(java.lang.String draftEntity) {
    this.draftEntity = draftEntity;
    return this;
  }

  /**
   * Entity mapping log entries. Multiple rules can be effective and contribute changes to a
   * converted entity, such as a rule can handle the entity name, another rule can handle an entity
   * type. In addition, rules which did not change the entity are also logged along with the reason
   * preventing them to do so.
   * @return value or {@code null} for none
   */
  public java.util.List<EntityMappingLogEntry> getMappingLog() {
    return mappingLog;
  }

  /**
   * Entity mapping log entries. Multiple rules can be effective and contribute changes to a
   * converted entity, such as a rule can handle the entity name, another rule can handle an entity
   * type. In addition, rules which did not change the entity are also logged along with the reason
   * preventing them to do so.
   * @param mappingLog mappingLog or {@code null} for none
   */
  public EntityMapping setMappingLog(java.util.List<EntityMappingLogEntry> mappingLog) {
    this.mappingLog = mappingLog;
    return this;
  }

  /**
   * Source entity full name. The source entity can also be a column, index or constraint using the
   * same naming notation schema.table.column.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceEntity() {
    return sourceEntity;
  }

  /**
   * Source entity full name. The source entity can also be a column, index or constraint using the
   * same naming notation schema.table.column.
   * @param sourceEntity sourceEntity or {@code null} for none
   */
  public EntityMapping setSourceEntity(java.lang.String sourceEntity) {
    this.sourceEntity = sourceEntity;
    return this;
  }

  @Override
  public EntityMapping set(String fieldName, Object value) {
    return (EntityMapping) super.set(fieldName, value);
  }

  @Override
  public EntityMapping clone() {
    return (EntityMapping) super.clone();
  }

}
