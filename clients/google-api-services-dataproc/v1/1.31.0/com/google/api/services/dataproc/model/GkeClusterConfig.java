/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * The cluster's GKE config.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GkeClusterConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. A target GKE cluster to deploy to. It must be in the same project and region as the
   * Dataproc cluster (the GKE cluster can be zonal or regional). Format:
   * 'projects/{project}/locations/{location}/clusters/{cluster_id}'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gkeClusterTarget;

  /**
   * Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the
   * deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NamespacedGkeDeploymentTarget namespacedGkeDeploymentTarget;

  /**
   * Optional. GKE node pools where workloads will be scheduled. At least one node pool must be
   * assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc
   * constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget.
   * All node pools must have the same location settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GkeNodePoolTarget> nodePoolTarget;

  /**
   * Optional. A target GKE cluster to deploy to. It must be in the same project and region as the
   * Dataproc cluster (the GKE cluster can be zonal or regional). Format:
   * 'projects/{project}/locations/{location}/clusters/{cluster_id}'
   * @return value or {@code null} for none
   */
  public java.lang.String getGkeClusterTarget() {
    return gkeClusterTarget;
  }

  /**
   * Optional. A target GKE cluster to deploy to. It must be in the same project and region as the
   * Dataproc cluster (the GKE cluster can be zonal or regional). Format:
   * 'projects/{project}/locations/{location}/clusters/{cluster_id}'
   * @param gkeClusterTarget gkeClusterTarget or {@code null} for none
   */
  public GkeClusterConfig setGkeClusterTarget(java.lang.String gkeClusterTarget) {
    this.gkeClusterTarget = gkeClusterTarget;
    return this;
  }

  /**
   * Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the
   * deployment.
   * @return value or {@code null} for none
   */
  public NamespacedGkeDeploymentTarget getNamespacedGkeDeploymentTarget() {
    return namespacedGkeDeploymentTarget;
  }

  /**
   * Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the
   * deployment.
   * @param namespacedGkeDeploymentTarget namespacedGkeDeploymentTarget or {@code null} for none
   */
  public GkeClusterConfig setNamespacedGkeDeploymentTarget(NamespacedGkeDeploymentTarget namespacedGkeDeploymentTarget) {
    this.namespacedGkeDeploymentTarget = namespacedGkeDeploymentTarget;
    return this;
  }

  /**
   * Optional. GKE node pools where workloads will be scheduled. At least one node pool must be
   * assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc
   * constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget.
   * All node pools must have the same location settings.
   * @return value or {@code null} for none
   */
  public java.util.List<GkeNodePoolTarget> getNodePoolTarget() {
    return nodePoolTarget;
  }

  /**
   * Optional. GKE node pools where workloads will be scheduled. At least one node pool must be
   * assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc
   * constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget.
   * All node pools must have the same location settings.
   * @param nodePoolTarget nodePoolTarget or {@code null} for none
   */
  public GkeClusterConfig setNodePoolTarget(java.util.List<GkeNodePoolTarget> nodePoolTarget) {
    this.nodePoolTarget = nodePoolTarget;
    return this;
  }

  @Override
  public GkeClusterConfig set(String fieldName, Object value) {
    return (GkeClusterConfig) super.set(fieldName, value);
  }

  @Override
  public GkeClusterConfig clone() {
    return (GkeClusterConfig) super.clone();
  }

}
