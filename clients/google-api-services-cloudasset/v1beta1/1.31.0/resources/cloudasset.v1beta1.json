{
  "canonicalName": "Cloud Asset",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "title": "Cloud Asset API",
  "documentationLink": "https://cloud.google.com/asset-inventory/docs/quickstart",
  "rootUrl": "https://cloudasset.googleapis.com/",
  "mtlsRootUrl": "https://cloudasset.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    }
  },
  "schemas": {
    "GcsDestination": {
      "properties": {
        "uri": {
          "description": "The uri of the Cloud Storage object. It's the same uri that is used by gsutil. For example: \"gs://bucket_name/object_name\". See [Viewing and Editing Object Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata) for more information.",
          "type": "string"
        },
        "uriPrefix": {
          "description": "The uri prefix of all generated Cloud Storage objects. For example: \"gs://bucket_name/object_name_prefix\". Each object uri is in format: \"gs://bucket_name/object_name_prefix// and only contains assets for that type. starts from 0. For example: \"gs://bucket_name/object_name_prefix/google.compute.disk/0\" is the first shard of output objects containing all google.compute.disk assets. An INVALID_ARGUMENT error will be returned if file with the same name \"gs://bucket_name/object_name_prefix\" already exists.",
          "type": "string"
        }
      },
      "description": "A Cloud Storage location.",
      "id": "GcsDestination",
      "type": "object"
    },
    "Asset": {
      "description": "An asset in Google Cloud. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. Cloud IAM policy). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.",
      "id": "Asset",
      "type": "object",
      "properties": {
        "accessLevel": {
          "description": "Please also refer to the [access level user guide](https://cloud.google.com/access-context-manager/docs/overview#access-levels).",
          "$ref": "GoogleIdentityAccesscontextmanagerV1AccessLevel"
        },
        "orgPolicy": {
          "type": "array",
          "description": "A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one organization policy with different constraints set on a given resource.",
          "items": {
            "$ref": "GoogleCloudOrgpolicyV1Policy"
          }
        },
        "servicePerimeter": {
          "description": "Please also refer to the [service perimeter user guide](https://cloud.google.com/vpc-service-controls/docs/overview).",
          "$ref": "GoogleIdentityAccesscontextmanagerV1ServicePerimeter"
        },
        "resource": {
          "$ref": "Resource",
          "description": "A representation of the resource."
        },
        "name": {
          "type": "string",
          "description": "The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information."
        },
        "iamPolicy": {
          "description": "A representation of the Cloud IAM policy set on a Google Cloud resource. There can be a maximum of one Cloud IAM policy set on any given resource. In addition, Cloud IAM policies inherit their granted access scope from any policies set on parent resources in the resource hierarchy. Therefore, the effectively policy is the union of both the policy set on this resource and each policy set on all of the resource's ancestry resource levels in the hierarchy. See [this topic](https://cloud.google.com/iam/docs/policies#inheritance) for more information.",
          "$ref": "Policy"
        },
        "accessPolicy": {
          "description": "Please also refer to the [access policy user guide](https://cloud.google.com/access-context-manager/docs/overview#access-policies).",
          "$ref": "GoogleIdentityAccesscontextmanagerV1AccessPolicy"
        },
        "assetType": {
          "type": "string",
          "description": "The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information."
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1IngressFrom": {
      "type": "object",
      "id": "GoogleIdentityAccesscontextmanagerV1IngressFrom",
      "properties": {
        "identityType": {
          "description": "Specifies the type of identities that are allowed access from outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.",
          "type": "string",
          "enum": [
            "IDENTITY_TYPE_UNSPECIFIED",
            "ANY_IDENTITY",
            "ANY_USER_ACCOUNT",
            "ANY_SERVICE_ACCOUNT"
          ],
          "enumDescriptions": [
            "No blanket identity group specified.",
            "Authorize access from all identities outside the perimeter.",
            "Authorize access from all human users outside the perimeter.",
            "Authorize access from all service accounts outside the perimeter."
          ]
        },
        "identities": {
          "type": "array",
          "description": "A list of identities that are allowed access through this ingress policy. Should be in the format of email address. The email address should represent individual user or service account only.",
          "items": {
            "type": "string"
          }
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1IngressSource"
          },
          "description": "Sources that this IngressPolicy authorizes access from."
        }
      },
      "description": "Defines the conditions under which an IngressPolicy matches a request. Conditions are based on information about the source of the request."
    },
    "Policy": {
      "properties": {
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array"
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "type": "array"
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy"
    },
    "GoogleIdentityAccesscontextmanagerV1CustomLevel": {
      "type": "object",
      "description": "`CustomLevel` is an `AccessLevel` using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request. See CEL spec at: https://github.com/google/cel-spec",
      "id": "GoogleIdentityAccesscontextmanagerV1CustomLevel",
      "properties": {
        "expr": {
          "$ref": "Expr",
          "description": "Required. A Cloud CEL expression evaluating to a boolean."
        }
      }
    },
    "GoogleCloudAssetV1p7beta1Resource": {
      "description": "A representation of a Google Cloud resource.",
      "type": "object",
      "properties": {
        "discoveryDocumentUri": {
          "description": "The URL of the discovery document containing the resource's JSON schema. Example: `https://www.googleapis.com/discovery/v1/apis/compute/v1/rest` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The location of the resource in Google Cloud, such as its zone and region. For more information, see https://cloud.google.com/about/locations/."
        },
        "resourceUrl": {
          "description": "The REST URL for accessing the resource. An HTTP `GET` request using this URL returns the resource itself. Example: `https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123` This value is unspecified for resources without a REST API.",
          "type": "string"
        },
        "discoveryName": {
          "description": "The JSON schema name listed in the discovery document. Example: `Project` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable.",
          "type": "string"
        },
        "version": {
          "description": "The API version. Example: `v1`",
          "type": "string"
        },
        "data": {
          "type": "object",
          "description": "The content of the resource, in which some sensitive fields are removed and may not be present.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "parent": {
          "type": "string",
          "description": "The full name of the immediate parent of this resource. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information. For Google Cloud assets, this value is the parent resource defined in the [Cloud IAM policy hierarchy](https://cloud.google.com/iam/docs/overview#policy_hierarchy). Example: `//cloudresourcemanager.googleapis.com/projects/my_project_123` For third-party assets, this field may be set differently."
        }
      },
      "id": "GoogleCloudAssetV1p7beta1Resource"
    },
    "GoogleCloudAssetV1p7beta1Asset": {
      "properties": {
        "relatedAssets": {
          "$ref": "GoogleCloudAssetV1p7beta1RelatedAssets",
          "description": "The related assets of the asset of one relationship type. One asset only represents one type of relationship."
        },
        "accessLevel": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1AccessLevel",
          "description": "Please also refer to the [access level user guide](https://cloud.google.com/access-context-manager/docs/overview#access-levels)."
        },
        "iamPolicy": {
          "description": "A representation of the Cloud IAM policy set on a Google Cloud resource. There can be a maximum of one Cloud IAM policy set on any given resource. In addition, Cloud IAM policies inherit their granted access scope from any policies set on parent resources in the resource hierarchy. Therefore, the effectively policy is the union of both the policy set on this resource and each policy set on all of the resource's ancestry resource levels in the hierarchy. See [this topic](https://cloud.google.com/iam/docs/policies#inheritance) for more information.",
          "$ref": "Policy"
        },
        "servicePerimeter": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1ServicePerimeter",
          "description": "Please also refer to the [service perimeter user guide](https://cloud.google.com/vpc-service-controls/docs/overview)."
        },
        "accessPolicy": {
          "description": "Please also refer to the [access policy user guide](https://cloud.google.com/access-context-manager/docs/overview#access-policies).",
          "$ref": "GoogleIdentityAccesscontextmanagerV1AccessPolicy"
        },
        "orgPolicy": {
          "items": {
            "$ref": "GoogleCloudOrgpolicyV1Policy"
          },
          "description": "A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one organization policy with different constraints set on a given resource.",
          "type": "array"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update timestamp of an asset. update_time is updated when create/update/delete operation is performed."
        },
        "resource": {
          "$ref": "GoogleCloudAssetV1p7beta1Resource",
          "description": "A representation of the resource."
        },
        "name": {
          "description": "The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.",
          "type": "string"
        },
        "ancestors": {
          "items": {
            "type": "string"
          },
          "description": "The ancestry path of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the asset is a project, folder, or organization, the ancestry path starts from the asset itself. Example: `[\"projects/123456789\", \"folders/5432\", \"organizations/1234\"]`",
          "type": "array"
        },
        "assetType": {
          "type": "string",
          "description": "The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information."
        }
      },
      "id": "GoogleCloudAssetV1p7beta1Asset",
      "type": "object",
      "description": "An asset in Google Cloud. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. Cloud IAM policy). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information."
    },
    "GoogleIdentityAccesscontextmanagerV1BasicLevel": {
      "properties": {
        "conditions": {
          "description": "Required. A list of requirements for the `AccessLevel` to be granted.",
          "type": "array",
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1Condition"
          }
        },
        "combiningFunction": {
          "enum": [
            "AND",
            "OR"
          ],
          "description": "How the `conditions` list should be combined to determine if a request is granted this `AccessLevel`. If AND is used, each `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. If OR is used, at least one `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. Default behavior is AND.",
          "type": "string",
          "enumDescriptions": [
            "All `Conditions` must be true for the `BasicLevel` to be true.",
            "If at least one `Condition` is true, then the `BasicLevel` is true."
          ]
        }
      },
      "id": "GoogleIdentityAccesscontextmanagerV1BasicLevel",
      "type": "object",
      "description": "`BasicLevel` is an `AccessLevel` using a set of recommended features."
    },
    "GoogleIdentityAccesscontextmanagerV1Condition": {
      "properties": {
        "regions": {
          "description": "The request must originate from one of the provided countries/regions. Must be valid ISO 3166-1 alpha-2 codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "members": {
          "items": {
            "type": "string"
          },
          "description": "The request must be made by one of the provided user or service accounts. Groups are not supported. Syntax: `user:{emailid}` `serviceAccount:{emailid}` If not specified, a request may come from any user.",
          "type": "array"
        },
        "requiredAccessLevels": {
          "items": {
            "type": "string"
          },
          "description": "A list of other access levels defined in the same `Policy`, referenced by resource name. Referencing an `AccessLevel` which does not exist is an error. All access levels listed must be granted for the Condition to be true. Example: \"`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME\"`",
          "type": "array"
        },
        "ipSubnetworks": {
          "description": "CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for a CIDR IP address block, the specified IP address portion must be properly truncated (i.e. all the host bits must be zero) or the input is considered malformed. For example, \"192.0.2.0/24\" is accepted but \"192.0.2.1/24\" is not. Similarly, for IPv6, \"2001:db8::/32\" is accepted whereas \"2001:db8::1/32\" is not. The originating IP of a request must be in one of the listed subnets in order for this Condition to be true. If empty, all IP addresses are allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "negate": {
          "description": "Whether to negate the Condition. If true, the Condition becomes a NAND over its non-empty fields, each field must be false for the Condition overall to be satisfied. Defaults to false.",
          "type": "boolean"
        },
        "devicePolicy": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1DevicePolicy",
          "description": "Device specific restrictions, all restrictions must hold for the Condition to be true. If not specified, all devices are allowed."
        }
      },
      "id": "GoogleIdentityAccesscontextmanagerV1Condition",
      "description": "A condition necessary for an `AccessLevel` to be granted. The Condition is an AND over its fields. So a Condition is true if: 1) the request IP is from one of the listed subnetworks AND 2) the originating device complies with the listed device policy AND 3) all listed access levels are granted AND 4) the request was sent at a time allowed by the DateTimeRestriction.",
      "type": "object"
    },
    "GoogleIdentityAccesscontextmanagerV1EgressFrom": {
      "properties": {
        "identities": {
          "description": "A list of identities that are allowed access through this [EgressPolicy]. Should be in the format of email address. The email address should represent individual user or service account only.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identityType": {
          "type": "string",
          "enumDescriptions": [
            "No blanket identity group specified.",
            "Authorize access from all identities outside the perimeter.",
            "Authorize access from all human users outside the perimeter.",
            "Authorize access from all service accounts outside the perimeter."
          ],
          "description": "Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.",
          "enum": [
            "IDENTITY_TYPE_UNSPECIFIED",
            "ANY_IDENTITY",
            "ANY_USER_ACCOUNT",
            "ANY_SERVICE_ACCOUNT"
          ]
        }
      },
      "id": "GoogleIdentityAccesscontextmanagerV1EgressFrom",
      "description": "Defines the conditions under which an EgressPolicy matches a request. Conditions based on information about the source of the request. Note that if the destination of the request is protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed.",
      "type": "object"
    },
    "TimeWindow": {
      "properties": {
        "endTime": {
          "description": "End time of the time window (inclusive). If not specified, the current timestamp is used instead.",
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "Start time of the time window (exclusive).",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "A time window specified by its `start_time` and `end_time`.",
      "id": "TimeWindow",
      "type": "object"
    },
    "GoogleIdentityAccesscontextmanagerV1ApiOperation": {
      "properties": {
        "serviceName": {
          "description": "The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods AND permissions for all services.",
          "type": "string"
        },
        "methodSelectors": {
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1MethodSelector"
          },
          "type": "array",
          "description": "API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the `method` field will allow all methods AND permissions for the service specified in `service_name`."
        }
      },
      "id": "GoogleIdentityAccesscontextmanagerV1ApiOperation",
      "type": "object",
      "description": "Identification for an API Operation."
    },
    "GoogleIdentityAccesscontextmanagerV1EgressPolicy": {
      "description": "Policy for egress from perimeter. EgressPolicies match requests based on `egress_from` and `egress_to` stanzas. For an EgressPolicy to match, both `egress_from` and `egress_to` stanzas must be matched. If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter boundary. For example, an EgressPolicy can be used to allow VMs on networks within the ServicePerimeter to access a defined set of projects outside the perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket or query against a BigQuery dataset). EgressPolicies are concerned with the *resources* that a request relates as well as the API services and API actions being used. They do not related to the direction of data movement. More detailed documentation for this concept can be found in the descriptions of EgressFrom and EgressTo.",
      "properties": {
        "egressTo": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1EgressTo",
          "description": "Defines the conditions on the ApiOperation and destination resources that cause this EgressPolicy to apply."
        },
        "egressFrom": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1EgressFrom",
          "description": "Defines conditions on the source of a request causing this EgressPolicy to apply."
        }
      },
      "type": "object",
      "id": "GoogleIdentityAccesscontextmanagerV1EgressPolicy"
    },
    "GoogleIdentityAccesscontextmanagerV1ServicePerimeter": {
      "type": "object",
      "description": "`ServicePerimeter` describes a set of Google Cloud resources which can freely import and export data amongst themselves, but not export outside of the `ServicePerimeter`. If a request with a source within this `ServicePerimeter` has a target outside of the `ServicePerimeter`, the request will be blocked. Otherwise the request is allowed. There are two types of Service Perimeter - Regular and Bridge. Regular Service Perimeters cannot overlap, a single Google Cloud project can only belong to a single regular Service Perimeter. Service Perimeter Bridges can contain only Google Cloud projects as members, a single Google Cloud project may belong to multiple Service Perimeter Bridges.",
      "id": "GoogleIdentityAccesscontextmanagerV1ServicePerimeter",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Resource name for the ServicePerimeter. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/servicePerimeters/{short_name}`"
        },
        "perimeterType": {
          "enum": [
            "PERIMETER_TYPE_REGULAR",
            "PERIMETER_TYPE_BRIDGE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Regular Perimeter.",
            "Perimeter Bridge."
          ],
          "description": "Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, the restricted service list as well as access level lists must be empty."
        },
        "description": {
          "description": "Description of the `ServicePerimeter` and its use. Does not affect behavior.",
          "type": "string"
        },
        "status": {
          "description": "Current ServicePerimeter configuration. Specifies sets of resources, restricted services and access levels that determine perimeter content and boundaries.",
          "$ref": "GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig"
        },
        "spec": {
          "description": "Proposed (or dry run) ServicePerimeter configuration. This configuration allows to specify and test ServicePerimeter configuration without enforcing actual access restrictions. Only allowed to be set when the \"use_explicit_dry_run_spec\" flag is set.",
          "$ref": "GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig"
        },
        "useExplicitDryRunSpec": {
          "description": "Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists for all Service Perimeters, and that spec is identical to the status for those Service Perimeters. When this flag is set, it inhibits the generation of the implicit spec, thereby allowing the user to explicitly provide a configuration (\"spec\") to use in a dry-run version of the Service Perimeter. This allows the user to test changes to the enforced config (\"status\") without actually enforcing them. This testing is done through analyzing the differences between currently enforced and suggested restrictions. use_explicit_dry_run_spec must bet set to True if any of the fields in the spec are set to non-default values.",
          "type": "boolean"
        },
        "title": {
          "type": "string",
          "description": "Human readable title. Must be unique within the Policy."
        }
      }
    },
    "OutputConfig": {
      "type": "object",
      "properties": {
        "gcsDestination": {
          "description": "Destination on Cloud Storage.",
          "$ref": "GcsDestination"
        }
      },
      "description": "Output configuration for export assets destination.",
      "id": "OutputConfig"
    },
    "GoogleIdentityAccesscontextmanagerV1IngressSource": {
      "id": "GoogleIdentityAccesscontextmanagerV1IngressSource",
      "properties": {
        "accessLevel": {
          "description": "An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If `*` is specified, then all IngressSources will be allowed.",
          "type": "string"
        },
        "resource": {
          "description": "A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects are allowed. Format: `projects/{project_number}` The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of allowing all Google Cloud resources only is not supported.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The source that IngressPolicy authorizes access from."
    },
    "Status": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object"
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "id": "AuditLogConfig",
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string"
        }
      }
    },
    "AnalyzeIamPolicyLongrunningResponse": {
      "type": "object",
      "description": "A response message for AssetService.AnalyzeIamPolicyLongrunning.",
      "id": "AnalyzeIamPolicyLongrunningResponse",
      "properties": {}
    },
    "GoogleIdentityAccesscontextmanagerV1EgressTo": {
      "properties": {
        "resources": {
          "description": "A list of resources, currently only projects in the form `projects/`, that match this to stanza. A request matches if it contains a resource in this list. If `*` is specified for resources, then this EgressTo rule will authorize access to all resources outside the perimeter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operations": {
          "description": "A list of ApiOperations that this egress rule applies to. A request matches if it contains an operation/service in this list.",
          "type": "array",
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1ApiOperation"
          }
        }
      },
      "id": "GoogleIdentityAccesscontextmanagerV1EgressTo",
      "description": "Defines the conditions under which an EgressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the `resources` specified. Note that if the destination of the request is protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed.",
      "type": "object"
    },
    "Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "id": "Binding",
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
        }
      }
    },
    "ExportAssetsRequest": {
      "id": "ExportAssetsRequest",
      "description": "Export asset request.",
      "properties": {
        "assetTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of asset types of which to take a snapshot for. For example: \"google.compute.Disk\". If specified, only matching assets will be returned. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/resource-manager/docs/cloud-asset-inventory/overview) for all supported asset types."
        },
        "readTime": {
          "description": "Timestamp to take an asset snapshot. This can only be set to a timestamp between 2018-10-02 UTC (inclusive) and the current time. If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.",
          "type": "string",
          "format": "google-datetime"
        },
        "outputConfig": {
          "$ref": "OutputConfig",
          "description": "Required. Output configuration indicating where the results will be output to. All results will be in newline delimited JSON format."
        },
        "contentType": {
          "type": "string",
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "RESOURCE",
            "IAM_POLICY"
          ],
          "description": "Asset content type. If not specified, no content but the asset name will be returned.",
          "enumDescriptions": [
            "Unspecified content type.",
            "Resource metadata.",
            "The actual IAM policy set on a resource."
          ]
        }
      },
      "type": "object"
    },
    "GoogleIdentityAccesscontextmanagerV1AccessPolicy": {
      "type": "object",
      "description": "`AccessPolicy` is a container for `AccessLevels` (which define the necessary attributes to use Google Cloud services) and `ServicePerimeters` (which define regions of services able to freely pass data within a perimeter). An access policy is globally visible within an organization, and the restrictions it specifies apply to all projects within an organization.",
      "properties": {
        "parent": {
          "description": "Required. The parent of this `AccessPolicy` in the Cloud Resource Hierarchy. Currently immutable once created. Format: `organizations/{organization_id}`",
          "type": "string"
        },
        "etag": {
          "description": "Output only. An opaque identifier for the current version of the `AccessPolicy`. This will always be a strongly validated etag, meaning that two Access Polices will be identical if and only if their etags are identical. Clients should not expect this to be in any specific format.",
          "type": "string"
        },
        "title": {
          "description": "Required. Human readable title. Does not affect behavior.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{policy_id}`",
          "type": "string"
        }
      },
      "id": "GoogleIdentityAccesscontextmanagerV1AccessPolicy"
    },
    "GoogleCloudOrgpolicyV1Policy": {
      "properties": {
        "constraint": {
          "description": "The name of the `Constraint` the `Policy` is configuring, for example, `constraints/serviceuser.services`. A [list of available constraints](/resource-manager/docs/organization-policy/org-policy-constraints) is available. Immutable after creation.",
          "type": "string"
        },
        "restoreDefault": {
          "$ref": "GoogleCloudOrgpolicyV1RestoreDefault",
          "description": "Restores the default behavior of the constraint; independent of `Constraint` type."
        },
        "version": {
          "type": "integer",
          "description": "Version of the `Policy`. Default version is 0;",
          "format": "int32"
        },
        "listPolicy": {
          "description": "List of values either allowed or disallowed.",
          "$ref": "GoogleCloudOrgpolicyV1ListPolicy"
        },
        "booleanPolicy": {
          "description": "For boolean `Constraints`, whether to enforce the `Constraint` or not.",
          "$ref": "GoogleCloudOrgpolicyV1BooleanPolicy"
        },
        "etag": {
          "type": "string",
          "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. When the `Policy` is returned from either a `GetPolicy` or a `ListOrgPolicy` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset. When the `Policy` is used in a `SetOrgPolicy` method, use the `etag` value that was returned from a `GetOrgPolicy` request as part of a read-modify-write loop for concurrency control. Not setting the `etag`in a `SetOrgPolicy` request will result in an unconditional write of the `Policy`.",
          "format": "byte"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time stamp the `Policy` was previously updated. This is set by the server, not specified by the caller, and represents the last time a call to `SetOrgPolicy` was made for that `Policy`. Any value set by the client will be ignored."
        }
      },
      "id": "GoogleCloudOrgpolicyV1Policy",
      "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources.",
      "type": "object"
    },
    "GoogleIdentityAccesscontextmanagerV1IngressPolicy": {
      "type": "object",
      "properties": {
        "ingressTo": {
          "description": "Defines the conditions on the ApiOperation and request destination that cause this IngressPolicy to apply.",
          "$ref": "GoogleIdentityAccesscontextmanagerV1IngressTo"
        },
        "ingressFrom": {
          "description": "Defines the conditions on the source of a request causing this IngressPolicy to apply.",
          "$ref": "GoogleIdentityAccesscontextmanagerV1IngressFrom"
        }
      },
      "id": "GoogleIdentityAccesscontextmanagerV1IngressPolicy",
      "description": "Policy for ingress into ServicePerimeter. IngressPolicies match requests based on `ingress_from` and `ingress_to` stanzas. For an ingress policy to match, both the `ingress_from` and `ingress_to` stanzas must be matched. If an IngressPolicy matches a request, the request is allowed through the perimeter boundary from outside the perimeter. For example, access from the internet can be allowed either based on an AccessLevel or, for traffic hosted on Google Cloud, the project of the source network. For access from private networks, using the project of the hosting network is required. Individual ingress policies can be limited by restricting which services and/or actions they match using the `ingress_to` field."
    },
    "BatchGetAssetsHistoryResponse": {
      "properties": {
        "assets": {
          "description": "A list of assets with valid time windows.",
          "items": {
            "$ref": "TemporalAsset"
          },
          "type": "array"
        }
      },
      "description": "Batch get assets history response.",
      "id": "BatchGetAssetsHistoryResponse",
      "type": "object"
    },
    "GoogleIdentityAccesscontextmanagerV1IngressTo": {
      "type": "object",
      "id": "GoogleIdentityAccesscontextmanagerV1IngressTo",
      "description": "Defines the conditions under which an IngressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the destination of the request.",
      "properties": {
        "resources": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of resources, currently only projects in the form `projects/`, protected by this ServicePerimeter that are allowed to be accessed by sources defined in the corresponding IngressFrom. A request matches if it contains a resource in this list. If `*` is specified for resources, then this IngressTo rule will authorize access to all resources inside the perimeter, provided that the request also matches the `operations` field."
        },
        "operations": {
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1ApiOperation"
          },
          "type": "array",
          "description": "A list of ApiOperations the sources specified in corresponding IngressFrom are allowed to perform in this ServicePerimeter."
        }
      }
    },
    "GoogleCloudAssetV1p7beta1RelatedAsset": {
      "type": "object",
      "properties": {
        "ancestors": {
          "description": "The ancestors of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. Example: `[\"projects/123456789\", \"folders/5432\", \"organizations/1234\"]`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "asset": {
          "description": "The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.",
          "type": "string"
        },
        "assetType": {
          "description": "The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.",
          "type": "string"
        }
      },
      "description": "An asset identify in Google Cloud which contains its name, type and ancestors. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. Cloud IAM policy). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.",
      "id": "GoogleCloudAssetV1p7beta1RelatedAsset"
    },
    "GoogleIdentityAccesscontextmanagerV1DevicePolicy": {
      "properties": {
        "requireAdminApproval": {
          "description": "Whether the device needs to be approved by the customer admin.",
          "type": "boolean"
        },
        "osConstraints": {
          "description": "Allowed OS versions, an empty list allows all types and all versions.",
          "type": "array",
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1OsConstraint"
          }
        },
        "requireCorpOwned": {
          "description": "Whether the device needs to be corp owned.",
          "type": "boolean"
        },
        "requireScreenlock": {
          "description": "Whether or not screenlock is required for the DevicePolicy to be true. Defaults to `false`.",
          "type": "boolean"
        },
        "allowedDeviceManagementLevels": {
          "description": "Allowed device management levels, an empty list allows all management levels.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "The device's management level is not specified or not known.",
              "The device is not managed.",
              "Basic management is enabled, which is generally limited to monitoring and wiping the corporate account.",
              "Complete device management. This includes more thorough monitoring and the ability to directly manage the device (such as remote wiping). This can be enabled through the Android Enterprise Platform."
            ],
            "enum": [
              "MANAGEMENT_UNSPECIFIED",
              "NONE",
              "BASIC",
              "COMPLETE"
            ],
            "type": "string"
          }
        },
        "allowedEncryptionStatuses": {
          "items": {
            "type": "string",
            "enum": [
              "ENCRYPTION_UNSPECIFIED",
              "ENCRYPTION_UNSUPPORTED",
              "UNENCRYPTED",
              "ENCRYPTED"
            ],
            "enumDescriptions": [
              "The encryption status of the device is not specified or not known.",
              "The device does not support encryption.",
              "The device supports encryption, but is currently unencrypted.",
              "The device is encrypted."
            ]
          },
          "description": "Allowed encryptions statuses, an empty list allows all statuses.",
          "type": "array"
        }
      },
      "description": "`DevicePolicy` specifies device specific restrictions necessary to acquire a given access level. A `DevicePolicy` specifies requirements for requests from devices to be granted access levels, it does not do any enforcement on the device. `DevicePolicy` acts as an AND over all specified fields, and each repeated field is an OR over its elements. Any unset fields are ignored. For example, if the proto is { os_type : DESKTOP_WINDOWS, os_type : DESKTOP_LINUX, encryption_status: ENCRYPTED}, then the DevicePolicy will be true for requests originating from encrypted Linux desktops and encrypted Windows desktops.",
      "type": "object",
      "id": "GoogleIdentityAccesscontextmanagerV1DevicePolicy"
    },
    "GoogleCloudOrgpolicyV1RestoreDefault": {
      "properties": {},
      "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. Suppose that `constraint_default` is set to `ALLOW` for the `Constraint` `constraints/serviceuser.services`. Suppose that organization foo.com sets a `Policy` at their Organization resource node that restricts the allowed service activations to deny all service activations. They could then set a `Policy` with the `policy_type` `restore_default` on several experimental projects, restoring the `constraint_default` enforcement of the `Constraint` for only those projects, allowing those projects to have all services activated.",
      "id": "GoogleCloudOrgpolicyV1RestoreDefault",
      "type": "object"
    },
    "GoogleIdentityAccesscontextmanagerV1AccessLevel": {
      "id": "GoogleIdentityAccesscontextmanagerV1AccessLevel",
      "properties": {
        "name": {
          "description": "Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length of the `short_name` component is 50 characters.",
          "type": "string"
        },
        "custom": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1CustomLevel",
          "description": "A `CustomLevel` written in the Common Expression Language."
        },
        "description": {
          "type": "string",
          "description": "Description of the `AccessLevel` and its use. Does not affect behavior."
        },
        "title": {
          "type": "string",
          "description": "Human readable title. Must be unique within the Policy."
        },
        "basic": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1BasicLevel",
          "description": "A `BasicLevel` composed of `Conditions`."
        }
      },
      "type": "object",
      "description": "An `AccessLevel` is a label that can be applied to requests to Google Cloud services, along with a list of requirements necessary for the label to be applied."
    },
    "GoogleCloudAssetV1p7beta1RelationshipAttributes": {
      "properties": {
        "targetResourceType": {
          "description": "The target asset type. Example: `compute.googleapis.com/Disk`",
          "type": "string"
        },
        "sourceResourceType": {
          "description": "The source asset type. Example: `compute.googleapis.com/Instance`",
          "type": "string"
        },
        "action": {
          "type": "string",
          "description": "The detail of the relationship, e.g. `contains`, `attaches`"
        },
        "type": {
          "description": "The unique identifier of the relationship type. Example: `INSTANCE_TO_INSTANCEGROUP`",
          "type": "string"
        }
      },
      "id": "GoogleCloudAssetV1p7beta1RelationshipAttributes",
      "type": "object",
      "description": "The relationship attributes which include `type`, `source_resource_type`, `target_resource_type` and `action`."
    },
    "TemporalAsset": {
      "type": "object",
      "description": "An asset in Google Cloud and its temporal metadata, including the time window when it was observed and its status during that window.",
      "properties": {
        "deleted": {
          "description": "Whether the asset has been deleted or not.",
          "type": "boolean"
        },
        "asset": {
          "description": "An asset in Google Cloud.",
          "$ref": "Asset"
        },
        "window": {
          "description": "The time window when the asset data and state was observed.",
          "$ref": "TimeWindow"
        }
      },
      "id": "TemporalAsset"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleIdentityAccesscontextmanagerV1MethodSelector": {
      "properties": {
        "method": {
          "description": "Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed.",
          "type": "string"
        },
        "permission": {
          "type": "string",
          "description": "Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation."
        }
      },
      "id": "GoogleIdentityAccesscontextmanagerV1MethodSelector",
      "type": "object",
      "description": "An allowed method or permission of a service specified in ApiOperation."
    },
    "AuditConfig": {
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AuditConfig"
    },
    "GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig": {
      "id": "GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig",
      "properties": {
        "restrictedServices": {
          "type": "array",
          "description": "Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter's access restrictions.",
          "items": {
            "type": "string"
          }
        },
        "accessLevels": {
          "items": {
            "type": "string"
          },
          "description": "A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `\"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL\"`. For Service Perimeter Bridge, must be empty.",
          "type": "array"
        },
        "ingressPolicies": {
          "description": "List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.",
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1IngressPolicy"
          },
          "type": "array"
        },
        "vpcAccessibleServices": {
          "$ref": "GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices",
          "description": "Configuration for APIs allowed within Perimeter."
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Google Cloud resources that are inside of the service perimeter. Currently only projects are allowed. Format: `projects/{project_number}`"
        },
        "egressPolicies": {
          "type": "array",
          "description": "List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge.",
          "items": {
            "$ref": "GoogleIdentityAccesscontextmanagerV1EgressPolicy"
          }
        }
      },
      "type": "object",
      "description": "`ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration."
    },
    "GoogleCloudAssetV1p7beta1RelatedAssets": {
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAssetV1p7beta1RelatedAsset"
          },
          "description": "The peer resources of the relationship."
        },
        "relationshipAttributes": {
          "$ref": "GoogleCloudAssetV1p7beta1RelationshipAttributes",
          "description": "The detailed relation attributes."
        }
      },
      "description": "The detailed related assets with the `relationship_type`.",
      "type": "object",
      "id": "GoogleCloudAssetV1p7beta1RelatedAssets"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      },
      "id": "Expr",
      "type": "object"
    },
    "Resource": {
      "description": "A representation of a Google Cloud resource.",
      "type": "object",
      "id": "Resource",
      "properties": {
        "version": {
          "description": "The API version. Example: `v1`",
          "type": "string"
        },
        "parent": {
          "description": "The full name of the immediate parent of this resource. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information. For Google Cloud assets, this value is the parent resource defined in the [Cloud IAM policy hierarchy](https://cloud.google.com/iam/docs/overview#policy_hierarchy). Example: `//cloudresourcemanager.googleapis.com/projects/my_project_123` For third-party assets, this field may be set differently.",
          "type": "string"
        },
        "resourceUrl": {
          "type": "string",
          "description": "The REST URL for accessing the resource. An HTTP `GET` request using this URL returns the resource itself. Example: `https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123` This value is unspecified for resources without a REST API."
        },
        "discoveryDocumentUri": {
          "description": "The URL of the discovery document containing the resource's JSON schema. Example: `https://www.googleapis.com/discovery/v1/apis/compute/v1/rest` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable.",
          "type": "string"
        },
        "discoveryName": {
          "description": "The JSON schema name listed in the discovery document. Example: `Project` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable.",
          "type": "string"
        },
        "data": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The content of the resource, in which some sensitive fields are removed and may not be present.",
          "type": "object"
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1OsConstraint": {
      "type": "object",
      "description": "A restriction on the OS type and version of devices making requests.",
      "id": "GoogleIdentityAccesscontextmanagerV1OsConstraint",
      "properties": {
        "osType": {
          "enum": [
            "OS_UNSPECIFIED",
            "DESKTOP_MAC",
            "DESKTOP_WINDOWS",
            "DESKTOP_LINUX",
            "DESKTOP_CHROME_OS",
            "ANDROID",
            "IOS"
          ],
          "enumDescriptions": [
            "The operating system of the device is not specified or not known.",
            "A desktop Mac operating system.",
            "A desktop Windows operating system.",
            "A desktop Linux operating system.",
            "A desktop ChromeOS operating system.",
            "An Android operating system.",
            "An iOS operating system."
          ],
          "type": "string",
          "description": "Required. The allowed OS type."
        },
        "minimumVersion": {
          "type": "string",
          "description": "The minimum allowed OS version. If not set, any version of this OS satisfies the constraint. Format: `\"major.minor.patch\"`. Examples: `\"10.5.301\"`, `\"9.2.1\"`."
        },
        "requireVerifiedChromeOs": {
          "description": "Only allows requests from devices with a verified Chrome OS. Verifications includes requirements that the device is enterprise-managed, conformant to domain policies, and the caller has permission to call the API targeted by the request.",
          "type": "boolean"
        }
      }
    },
    "GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices": {
      "id": "GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices",
      "type": "object",
      "description": "Specifies how APIs are allowed to communicate within the Service Perimeter.",
      "properties": {
        "allowedServices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of APIs usable within the Service Perimeter. Must be empty unless 'enable_restriction' is True. You can specify a list of individual services, as well as include the 'RESTRICTED-SERVICES' value, which automatically includes all of the services protected by the perimeter."
        },
        "enableRestriction": {
          "description": "Whether to restrict API calls within the Service Perimeter to the list of APIs specified in 'allowed_services'.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudOrgpolicyV1BooleanPolicy": {
      "type": "object",
      "properties": {
        "enforced": {
          "type": "boolean",
          "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. Suppose you have a `Constraint` `constraints/compute.disableSerialPortAccess` with `constraint_default` set to `ALLOW`. A `Policy` for that `Constraint` exhibits the following behavior: - If the `Policy` at this resource has enforced set to `false`, serial port connection attempts will be allowed. - If the `Policy` at this resource has enforced set to `true`, serial port connection attempts will be refused. - If the `Policy` at this resource is `RestoreDefault`, serial port connection attempts will be allowed. - If no `Policy` is set at this resource or anywhere higher in the resource hierarchy, serial port connection attempts will be allowed. - If no `Policy` is set at this resource, but one exists higher in the resource hierarchy, the behavior is as if the`Policy` were set at this resource. The following examples demonstrate the different possible layerings: Example 1 (nearest `Constraint` wins): `organizations/foo` has a `Policy` with: {enforced: false} `projects/bar` has no `Policy` set. The constraint at `projects/bar` and `organizations/foo` will not be enforced. Example 2 (enforcement gets replaced): `organizations/foo` has a `Policy` with: {enforced: false} `projects/bar` has a `Policy` with: {enforced: true} The constraint at `organizations/foo` is not enforced. The constraint at `projects/bar` is enforced. Example 3 (RestoreDefault): `organizations/foo` has a `Policy` with: {enforced: true} `projects/bar` has a `Policy` with: {RestoreDefault: {}} The constraint at `organizations/foo` is enforced. The constraint at `projects/bar` is not enforced, because `constraint_default` for the `Constraint` is `ALLOW`."
        }
      },
      "description": "Used in `policy_type` to specify how `boolean_policy` will behave at this resource.",
      "id": "GoogleCloudOrgpolicyV1BooleanPolicy"
    },
    "GoogleCloudOrgpolicyV1ListPolicy": {
      "id": "GoogleCloudOrgpolicyV1ListPolicy",
      "type": "object",
      "description": "Used in `policy_type` to specify how `list_policy` behaves at this resource. `ListPolicy` can define specific values and subtrees of Cloud Resource Manager resource hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or denied by setting the `allowed_values` and `denied_values` fields. This is achieved by using the `under:` and optional `is:` prefixes. The `under:` prefix is used to denote resource subtree values. The `is:` prefix is used to denote specific values, and is required only if the value contains a \":\". Values prefixed with \"is:\" are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - \"projects/\", e.g. \"projects/tokyo-rain-123\" - \"folders/\", e.g. \"folders/1234\" - \"organizations/\", e.g. \"organizations/1234\" The `supports_under` field of the associated `Constraint` defines whether ancestry prefixes can be used. You can set `allowed_values` and `denied_values` in the same `Policy` if `all_values` is `ALL_VALUES_UNSPECIFIED`. `ALLOW` or `DENY` are used to allow or deny all values. If `all_values` is set to either `ALLOW` or `DENY`, `allowed_values` and `denied_values` must be unset.",
      "properties": {
        "suggestedValue": {
          "type": "string",
          "description": "Optional. The Google Cloud Console will try to default to a configuration that matches the value specified in this `Policy`. If `suggested_value` is not set, it will inherit the value specified higher in the hierarchy, unless `inherit_from_parent` is `false`."
        },
        "allowedValues": {
          "items": {
            "type": "string"
          },
          "description": "List of values allowed at this resource. Can only be set if `all_values` is set to `ALL_VALUES_UNSPECIFIED`.",
          "type": "array"
        },
        "inheritFromParent": {
          "type": "boolean",
          "description": "Determines the inheritance behavior for this `Policy`. By default, a `ListPolicy` set at a resource supersedes any `Policy` set anywhere up the resource hierarchy. However, if `inherit_from_parent` is set to `true`, then the values from the effective `Policy` of the parent resource are inherited, meaning the values set in this `Policy` are added to the values inherited up the hierarchy. Setting `Policy` hierarchies that inherit both allowed values and denied values isn't recommended in most circumstances to keep the configuration simple and understandable. However, it is possible to set a `Policy` with `allowed_values` set that inherits a `Policy` with `denied_values` set. In this case, the values that are allowed must be in `allowed_values` and not present in `denied_values`. For example, suppose you have a `Constraint` `constraints/serviceuser.services`, which has a `constraint_type` of `list_constraint`, and with `constraint_default` set to `ALLOW`. Suppose that at the Organization level, a `Policy` is applied that restricts the allowed API activations to {`E1`, `E2`}. Then, if a `Policy` is applied to a project below the Organization that has `inherit_from_parent` set to `false` and field all_values set to DENY, then an attempt to activate any API will be denied. The following examples demonstrate different possible layerings for `projects/bar` parented by `organizations/foo`: Example 1 (no inherited values): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values:\"E2\"} `projects/bar` has `inherit_from_parent` `false` and values: {allowed_values: \"E3\" allowed_values: \"E4\"} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are `E3`, and `E4`. Example 2 (inherited values): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values:\"E2\"} `projects/bar` has a `Policy` with values: {value: \"E3\" value: \"E4\" inherit_from_parent: true} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are `E1`, `E2`, `E3`, and `E4`. Example 3 (inheriting both allowed and denied values): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values: \"E2\"} `projects/bar` has a `Policy` with: {denied_values: \"E1\"} The accepted values at `organizations/foo` are `E1`, `E2`. The value accepted at `projects/bar` is `E2`. Example 4 (RestoreDefault): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values:\"E2\"} `projects/bar` has a `Policy` with values: {RestoreDefault: {}} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are either all or none depending on the value of `constraint_default` (if `ALLOW`, all; if `DENY`, none). Example 5 (no policy inherits parent policy): `organizations/foo` has no `Policy` set. `projects/bar` has no `Policy` set. The accepted values at both levels are either all or none depending on the value of `constraint_default` (if `ALLOW`, all; if `DENY`, none). Example 6 (ListConstraint allowing all): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values: \"E2\"} `projects/bar` has a `Policy` with: {all: ALLOW} The accepted values at `organizations/foo` are `E1`, E2`. Any value is accepted at `projects/bar`. Example 7 (ListConstraint allowing none): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values: \"E2\"} `projects/bar` has a `Policy` with: {all: DENY} The accepted values at `organizations/foo` are `E1`, E2`. No value is accepted at `projects/bar`. Example 10 (allowed and denied subtrees of Resource Manager hierarchy): Given the following resource hierarchy O1-\u003e{F1, F2}; F1-\u003e{P1}; F2-\u003e{P2, P3}, `organizations/foo` has a `Policy` with values: {allowed_values: \"under:organizations/O1\"} `projects/bar` has a `Policy` with: {allowed_values: \"under:projects/P3\"} {denied_values: \"under:folders/F2\"} The accepted values at `organizations/foo` are `organizations/O1`, `folders/F1`, `folders/F2`, `projects/P1`, `projects/P2`, `projects/P3`. The accepted values at `projects/bar` are `organizations/O1`, `folders/F1`, `projects/P1`."
        },
        "allValues": {
          "enumDescriptions": [
            "Indicates that allowed_values or denied_values must be set.",
            "A policy with this set allows all values.",
            "A policy with this set denies all values."
          ],
          "type": "string",
          "description": "The policy all_values state.",
          "enum": [
            "ALL_VALUES_UNSPECIFIED",
            "ALLOW",
            "DENY"
          ]
        },
        "deniedValues": {
          "items": {
            "type": "string"
          },
          "description": "List of values denied at this resource. Can only be set if `all_values` is set to `ALL_VALUES_UNSPECIFIED`.",
          "type": "array"
        }
      }
    }
  },
  "batchPath": "batch",
  "ownerName": "Google",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "description": "The cloud asset API manages the history and inventory of cloud resources.",
  "id": "cloudasset:v1beta1",
  "revision": "20210305",
  "baseUrl": "https://cloudasset.googleapis.com/",
  "resources": {
    "folders": {
      "methods": {
        "exportAssets": {
          "flatPath": "v1beta1/folders/{foldersId}:exportAssets",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "parent"
          ],
          "path": "v1beta1/{+parent}:exportAssets",
          "request": {
            "$ref": "ExportAssetsRequest"
          },
          "description": "Exports assets with time and resource types to a given Cloud Storage location. The output format is newline-delimited JSON. This API implements the google.longrunning.Operation API allowing you to keep track of the export. We recommend intervals of at least 2 seconds with exponential retry to poll the export operation result. For regular-size resource parent, the export operation usually finishes within 5 minutes.",
          "response": {
            "$ref": "Operation"
          },
          "id": "cloudasset.folders.exportAssets",
          "httpMethod": "POST",
          "parameters": {
            "parent": {
              "description": "Required. The relative name of the root asset. This can only be an organization number (such as \"organizations/123\"), a project ID (such as \"projects/my-project-id\"), a project number (such as \"projects/12345\"), or a folder number (such as \"folders/123\").",
              "pattern": "^folders/[^/]+$",
              "type": "string",
              "location": "path",
              "required": true
            }
          }
        }
      },
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "cloudasset.folders.operations.get",
              "path": "v1beta1/{+name}",
              "parameters": {
                "name": {
                  "description": "The name of the operation resource.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^folders/[^/]+/operations/[^/]+/.*$"
                }
              },
              "flatPath": "v1beta1/folders/{foldersId}/operations/{operationsId}/{operationsId1}",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "httpMethod": "GET"
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "path": "v1beta1/{+name}",
              "response": {
                "$ref": "Operation"
              },
              "flatPath": "v1beta1/projects/{projectsId}/operations/{operationsId}/{operationsId1}",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "cloudasset.projects.operations.get",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/operations/[^/]+/.*$",
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "required": true,
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "methods": {
        "batchGetAssetsHistory": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1beta1/{+parent}:batchGetAssetsHistory",
          "description": "Batch gets the update history of assets that overlap a time window. For IAM_POLICY content, this API outputs history when the asset and its attached IAM POLICY both exist. This can create gaps in the output history. Otherwise, this API outputs history with asset in both non-delete or deleted status. If a specified asset does not exist, this API returns an INVALID_ARGUMENT error.",
          "flatPath": "v1beta1/projects/{projectsId}:batchGetAssetsHistory",
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "contentType": {
              "enumDescriptions": [
                "Unspecified content type.",
                "Resource metadata.",
                "The actual IAM policy set on a resource."
              ],
              "location": "query",
              "enum": [
                "CONTENT_TYPE_UNSPECIFIED",
                "RESOURCE",
                "IAM_POLICY"
              ],
              "type": "string",
              "description": "Optional. The content type."
            },
            "assetNames": {
              "location": "query",
              "repeated": true,
              "description": "A list of the full names of the assets. For example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info. The request becomes a no-op if the asset name list is empty, and the max size of the asset name list is 100 in one request.",
              "type": "string"
            },
            "parent": {
              "required": true,
              "description": "Required. The relative name of the root asset. It can only be an organization number (such as \"organizations/123\"), a project ID (such as \"projects/my-project-id\")\", or a project number (such as \"projects/12345\").",
              "location": "path",
              "type": "string",
              "pattern": "^projects/[^/]+$"
            },
            "readTimeWindow.startTime": {
              "description": "Start time of the time window (exclusive).",
              "format": "google-datetime",
              "type": "string",
              "location": "query"
            },
            "readTimeWindow.endTime": {
              "type": "string",
              "description": "End time of the time window (inclusive). If not specified, the current timestamp is used instead.",
              "format": "google-datetime",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "id": "cloudasset.projects.batchGetAssetsHistory",
          "response": {
            "$ref": "BatchGetAssetsHistoryResponse"
          }
        },
        "exportAssets": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "ExportAssetsRequest"
          },
          "httpMethod": "POST",
          "path": "v1beta1/{+parent}:exportAssets",
          "parameterOrder": [
            "parent"
          ],
          "id": "cloudasset.projects.exportAssets",
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "v1beta1/projects/{projectsId}:exportAssets",
          "parameters": {
            "parent": {
              "required": true,
              "pattern": "^projects/[^/]+$",
              "description": "Required. The relative name of the root asset. This can only be an organization number (such as \"organizations/123\"), a project ID (such as \"projects/my-project-id\"), a project number (such as \"projects/12345\"), or a folder number (such as \"folders/123\").",
              "location": "path",
              "type": "string"
            }
          },
          "description": "Exports assets with time and resource types to a given Cloud Storage location. The output format is newline-delimited JSON. This API implements the google.longrunning.Operation API allowing you to keep track of the export. We recommend intervals of at least 2 seconds with exponential retry to poll the export operation result. For regular-size resource parent, the export operation usually finishes within 5 minutes."
        }
      }
    },
    "organizations": {
      "methods": {
        "batchGetAssetsHistory": {
          "flatPath": "v1beta1/organizations/{organizationsId}:batchGetAssetsHistory",
          "parameters": {
            "assetNames": {
              "type": "string",
              "description": "A list of the full names of the assets. For example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info. The request becomes a no-op if the asset name list is empty, and the max size of the asset name list is 100 in one request.",
              "repeated": true,
              "location": "query"
            },
            "readTimeWindow.startTime": {
              "type": "string",
              "description": "Start time of the time window (exclusive).",
              "format": "google-datetime",
              "location": "query"
            },
            "contentType": {
              "enum": [
                "CONTENT_TYPE_UNSPECIFIED",
                "RESOURCE",
                "IAM_POLICY"
              ],
              "description": "Optional. The content type.",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "Unspecified content type.",
                "Resource metadata.",
                "The actual IAM policy set on a resource."
              ]
            },
            "readTimeWindow.endTime": {
              "description": "End time of the time window (inclusive). If not specified, the current timestamp is used instead.",
              "location": "query",
              "format": "google-datetime",
              "type": "string"
            },
            "parent": {
              "required": true,
              "location": "path",
              "description": "Required. The relative name of the root asset. It can only be an organization number (such as \"organizations/123\"), a project ID (such as \"projects/my-project-id\")\", or a project number (such as \"projects/12345\").",
              "type": "string",
              "pattern": "^organizations/[^/]+$"
            }
          },
          "description": "Batch gets the update history of assets that overlap a time window. For IAM_POLICY content, this API outputs history when the asset and its attached IAM POLICY both exist. This can create gaps in the output history. Otherwise, this API outputs history with asset in both non-delete or deleted status. If a specified asset does not exist, this API returns an INVALID_ARGUMENT error.",
          "httpMethod": "GET",
          "id": "cloudasset.organizations.batchGetAssetsHistory",
          "response": {
            "$ref": "BatchGetAssetsHistoryResponse"
          },
          "parameterOrder": [
            "parent"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1beta1/{+parent}:batchGetAssetsHistory"
        },
        "exportAssets": {
          "parameters": {
            "parent": {
              "pattern": "^organizations/[^/]+$",
              "location": "path",
              "type": "string",
              "description": "Required. The relative name of the root asset. This can only be an organization number (such as \"organizations/123\"), a project ID (such as \"projects/my-project-id\"), a project number (such as \"projects/12345\"), or a folder number (such as \"folders/123\").",
              "required": true
            }
          },
          "request": {
            "$ref": "ExportAssetsRequest"
          },
          "flatPath": "v1beta1/organizations/{organizationsId}:exportAssets",
          "path": "v1beta1/{+parent}:exportAssets",
          "response": {
            "$ref": "Operation"
          },
          "id": "cloudasset.organizations.exportAssets",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "parent"
          ],
          "description": "Exports assets with time and resource types to a given Cloud Storage location. The output format is newline-delimited JSON. This API implements the google.longrunning.Operation API allowing you to keep track of the export. We recommend intervals of at least 2 seconds with exponential retry to poll the export operation result. For regular-size resource parent, the export operation usually finishes within 5 minutes.",
          "httpMethod": "POST"
        }
      },
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "id": "cloudasset.organizations.operations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/operations/[^/]+/.*$",
                  "required": true,
                  "description": "The name of the operation resource.",
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/organizations/{organizationsId}/operations/{operationsId}/{operationsId1}",
              "response": {
                "$ref": "Operation"
              }
            }
          }
        }
      }
    }
  },
  "protocol": "rest",
  "servicePath": "",
  "version_module": true,
  "ownerDomain": "google.com",
  "name": "cloudasset",
  "version": "v1beta1"
}
