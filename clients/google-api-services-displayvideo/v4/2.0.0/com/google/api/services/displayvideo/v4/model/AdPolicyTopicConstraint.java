/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.displayvideo.v4.model;

/**
 * Details on ad serving constraints.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Display & Video 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AdPolicyTopicConstraint extends com.google.api.client.json.GenericJson {

  /**
   * Countries where the resource's domain is not covered by the certificates associated with it.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AdPolicyTopicConstraintAdPolicyCountryConstraintList certificateDomainMismatchCountryList;

  /**
   * Countries where a certificate is required for serving.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AdPolicyTopicConstraintAdPolicyCountryConstraintList certificateMissingCountryList;

  /**
   * Countries where the ad cannot serve.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AdPolicyTopicConstraintAdPolicyCountryConstraintList countryConstraint;

  /**
   * Certificate is required to serve in any country and the existing certificate does not cover the
   * ad's domain.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AdPolicyTopicConstraintAdPolicyGlobalCertificateDomainMismatchConstraint globalCertificateDomainMismatch;

  /**
   * Certificate is required to serve in any country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AdPolicyTopicConstraintAdPolicyGlobalCertificateMissingConstraint globalCertificateMissing;

  /**
   * Link to the form to request a certificate for the constraint.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String requestCertificateFormLink;

  /**
   * Reseller constraint.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AdPolicyTopicConstraintAdPolicyResellerConstraint resellerConstraint;

  /**
   * Countries where the resource's domain is not covered by the certificates associated with it.
   * @return value or {@code null} for none
   */
  public AdPolicyTopicConstraintAdPolicyCountryConstraintList getCertificateDomainMismatchCountryList() {
    return certificateDomainMismatchCountryList;
  }

  /**
   * Countries where the resource's domain is not covered by the certificates associated with it.
   * @param certificateDomainMismatchCountryList certificateDomainMismatchCountryList or {@code null} for none
   */
  public AdPolicyTopicConstraint setCertificateDomainMismatchCountryList(AdPolicyTopicConstraintAdPolicyCountryConstraintList certificateDomainMismatchCountryList) {
    this.certificateDomainMismatchCountryList = certificateDomainMismatchCountryList;
    return this;
  }

  /**
   * Countries where a certificate is required for serving.
   * @return value or {@code null} for none
   */
  public AdPolicyTopicConstraintAdPolicyCountryConstraintList getCertificateMissingCountryList() {
    return certificateMissingCountryList;
  }

  /**
   * Countries where a certificate is required for serving.
   * @param certificateMissingCountryList certificateMissingCountryList or {@code null} for none
   */
  public AdPolicyTopicConstraint setCertificateMissingCountryList(AdPolicyTopicConstraintAdPolicyCountryConstraintList certificateMissingCountryList) {
    this.certificateMissingCountryList = certificateMissingCountryList;
    return this;
  }

  /**
   * Countries where the ad cannot serve.
   * @return value or {@code null} for none
   */
  public AdPolicyTopicConstraintAdPolicyCountryConstraintList getCountryConstraint() {
    return countryConstraint;
  }

  /**
   * Countries where the ad cannot serve.
   * @param countryConstraint countryConstraint or {@code null} for none
   */
  public AdPolicyTopicConstraint setCountryConstraint(AdPolicyTopicConstraintAdPolicyCountryConstraintList countryConstraint) {
    this.countryConstraint = countryConstraint;
    return this;
  }

  /**
   * Certificate is required to serve in any country and the existing certificate does not cover the
   * ad's domain.
   * @return value or {@code null} for none
   */
  public AdPolicyTopicConstraintAdPolicyGlobalCertificateDomainMismatchConstraint getGlobalCertificateDomainMismatch() {
    return globalCertificateDomainMismatch;
  }

  /**
   * Certificate is required to serve in any country and the existing certificate does not cover the
   * ad's domain.
   * @param globalCertificateDomainMismatch globalCertificateDomainMismatch or {@code null} for none
   */
  public AdPolicyTopicConstraint setGlobalCertificateDomainMismatch(AdPolicyTopicConstraintAdPolicyGlobalCertificateDomainMismatchConstraint globalCertificateDomainMismatch) {
    this.globalCertificateDomainMismatch = globalCertificateDomainMismatch;
    return this;
  }

  /**
   * Certificate is required to serve in any country.
   * @return value or {@code null} for none
   */
  public AdPolicyTopicConstraintAdPolicyGlobalCertificateMissingConstraint getGlobalCertificateMissing() {
    return globalCertificateMissing;
  }

  /**
   * Certificate is required to serve in any country.
   * @param globalCertificateMissing globalCertificateMissing or {@code null} for none
   */
  public AdPolicyTopicConstraint setGlobalCertificateMissing(AdPolicyTopicConstraintAdPolicyGlobalCertificateMissingConstraint globalCertificateMissing) {
    this.globalCertificateMissing = globalCertificateMissing;
    return this;
  }

  /**
   * Link to the form to request a certificate for the constraint.
   * @return value or {@code null} for none
   */
  public java.lang.String getRequestCertificateFormLink() {
    return requestCertificateFormLink;
  }

  /**
   * Link to the form to request a certificate for the constraint.
   * @param requestCertificateFormLink requestCertificateFormLink or {@code null} for none
   */
  public AdPolicyTopicConstraint setRequestCertificateFormLink(java.lang.String requestCertificateFormLink) {
    this.requestCertificateFormLink = requestCertificateFormLink;
    return this;
  }

  /**
   * Reseller constraint.
   * @return value or {@code null} for none
   */
  public AdPolicyTopicConstraintAdPolicyResellerConstraint getResellerConstraint() {
    return resellerConstraint;
  }

  /**
   * Reseller constraint.
   * @param resellerConstraint resellerConstraint or {@code null} for none
   */
  public AdPolicyTopicConstraint setResellerConstraint(AdPolicyTopicConstraintAdPolicyResellerConstraint resellerConstraint) {
    this.resellerConstraint = resellerConstraint;
    return this;
  }

  @Override
  public AdPolicyTopicConstraint set(String fieldName, Object value) {
    return (AdPolicyTopicConstraint) super.set(fieldName, value);
  }

  @Override
  public AdPolicyTopicConstraint clone() {
    return (AdPolicyTopicConstraint) super.clone();
  }

}
