/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.serviceuser.v1;

/**
 * Service definition for ServiceUser (v1).
 *
 * <p>
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/service-management/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ServiceUserRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ServiceUser extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.26.0-SNAPSHOT of the Service User API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://serviceuser.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ServiceUser(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ServiceUser(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ServiceUser serviceuser = new ServiceUser(...);}
   *   {@code ServiceUser.Projects.List request = serviceuser.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Services collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ServiceUser serviceuser = new ServiceUser(...);}
     *   {@code ServiceUser.Services.List request = serviceuser.services().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Services services() {
      return new Services();
    }

    /**
     * The "services" collection of methods.
     */
    public class Services {

      /**
       * Disable a service so it can no longer be used with a project. This prevents unintended usage that
       * may cause unexpected billing charges or security leaks.
       *
       * Operation
       *
       * Create a request for the method "services.disable".
       *
       * This request holds the parameters needed by the serviceuser server.  After setting any optional
       * parameters, call the {@link Disable#execute()} method to invoke the remote operation.
       *
       * @param name Name of the consumer and the service to disable for that consumer.
      The Service User implementation
       *        accepts the following forms for consumer:
      - "project:"
      A valid path would be:
      - projects
       *        /my-project/services/servicemanagement.googleapis.com
       * @param content the {@link com.google.serviceuser.v1.model.DisableServiceRequest}
       * @return the request
       */
      public Disable disable(java.lang.String name, com.google.serviceuser.v1.model.DisableServiceRequest content) throws java.io.IOException {
        Disable result = new Disable(name, content);
        initialize(result);
        return result;
      }

      public class Disable extends ServiceUserRequest<com.google.serviceuser.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}:disable";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/services/[^/]+$");

        /**
         * Disable a service so it can no longer be used with a project. This prevents unintended usage
         * that may cause unexpected billing charges or security leaks.
         *
         * Operation
         *
         * Create a request for the method "services.disable".
         *
         * This request holds the parameters needed by the the serviceuser server.  After setting any
         * optional parameters, call the {@link Disable#execute()} method to invoke the remote operation.
         * <p> {@link
         * Disable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the consumer and the service to disable for that consumer.
      The Service User implementation
       *        accepts the following forms for consumer:
      - "project:"
      A valid path would be:
      - projects
       *        /my-project/services/servicemanagement.googleapis.com
         * @param content the {@link com.google.serviceuser.v1.model.DisableServiceRequest}
         * @since 1.13
         */
        protected Disable(java.lang.String name, com.google.serviceuser.v1.model.DisableServiceRequest content) {
          super(ServiceUser.this, "POST", REST_PATH, content, com.google.serviceuser.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/services/[^/]+$");
          }
        }

        @Override
        public Disable set$Xgafv(java.lang.String $Xgafv) {
          return (Disable) super.set$Xgafv($Xgafv);
        }

        @Override
        public Disable setAccessToken(java.lang.String accessToken) {
          return (Disable) super.setAccessToken(accessToken);
        }

        @Override
        public Disable setAlt(java.lang.String alt) {
          return (Disable) super.setAlt(alt);
        }

        @Override
        public Disable setCallback(java.lang.String callback) {
          return (Disable) super.setCallback(callback);
        }

        @Override
        public Disable setFields(java.lang.String fields) {
          return (Disable) super.setFields(fields);
        }

        @Override
        public Disable setKey(java.lang.String key) {
          return (Disable) super.setKey(key);
        }

        @Override
        public Disable setOauthToken(java.lang.String oauthToken) {
          return (Disable) super.setOauthToken(oauthToken);
        }

        @Override
        public Disable setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Disable) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Disable setQuotaUser(java.lang.String quotaUser) {
          return (Disable) super.setQuotaUser(quotaUser);
        }

        @Override
        public Disable setUploadType(java.lang.String uploadType) {
          return (Disable) super.setUploadType(uploadType);
        }

        @Override
        public Disable setUploadProtocol(java.lang.String uploadProtocol) {
          return (Disable) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the consumer and the service to disable for that consumer.
         *
         * The Service User implementation accepts the following forms for consumer: - "project:"
         *
         * A valid path would be: - projects/my-project/services/servicemanagement.googleapis.com
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the consumer and the service to disable for that consumer.

       The Service User implementation accepts the following forms for consumer: - "project:"

       A valid path would be: - projects/my-project/services/servicemanagement.googleapis.com
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the consumer and the service to disable for that consumer.
         *
         * The Service User implementation accepts the following forms for consumer: - "project:"
         *
         * A valid path would be: - projects/my-project/services/servicemanagement.googleapis.com
         */
        public Disable setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/services/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Disable set(String parameterName, Object value) {
          return (Disable) super.set(parameterName, value);
        }
      }
      /**
       * Enable a service so it can be used with a project. See [Cloud Auth
       * Guide](https://cloud.google.com/docs/authentication) for more information.
       *
       * Operation
       *
       * Create a request for the method "services.enable".
       *
       * This request holds the parameters needed by the serviceuser server.  After setting any optional
       * parameters, call the {@link Enable#execute()} method to invoke the remote operation.
       *
       * @param name Name of the consumer and the service to enable for that consumer.
      A valid path would be:
      - projects
       *        /my-project/services/servicemanagement.googleapis.com
       * @param content the {@link com.google.serviceuser.v1.model.EnableServiceRequest}
       * @return the request
       */
      public Enable enable(java.lang.String name, com.google.serviceuser.v1.model.EnableServiceRequest content) throws java.io.IOException {
        Enable result = new Enable(name, content);
        initialize(result);
        return result;
      }

      public class Enable extends ServiceUserRequest<com.google.serviceuser.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}:enable";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/services/[^/]+$");

        /**
         * Enable a service so it can be used with a project. See [Cloud Auth
         * Guide](https://cloud.google.com/docs/authentication) for more information.
         *
         * Operation
         *
         * Create a request for the method "services.enable".
         *
         * This request holds the parameters needed by the the serviceuser server.  After setting any
         * optional parameters, call the {@link Enable#execute()} method to invoke the remote operation.
         * <p> {@link
         * Enable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the consumer and the service to enable for that consumer.
      A valid path would be:
      - projects
       *        /my-project/services/servicemanagement.googleapis.com
         * @param content the {@link com.google.serviceuser.v1.model.EnableServiceRequest}
         * @since 1.13
         */
        protected Enable(java.lang.String name, com.google.serviceuser.v1.model.EnableServiceRequest content) {
          super(ServiceUser.this, "POST", REST_PATH, content, com.google.serviceuser.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/services/[^/]+$");
          }
        }

        @Override
        public Enable set$Xgafv(java.lang.String $Xgafv) {
          return (Enable) super.set$Xgafv($Xgafv);
        }

        @Override
        public Enable setAccessToken(java.lang.String accessToken) {
          return (Enable) super.setAccessToken(accessToken);
        }

        @Override
        public Enable setAlt(java.lang.String alt) {
          return (Enable) super.setAlt(alt);
        }

        @Override
        public Enable setCallback(java.lang.String callback) {
          return (Enable) super.setCallback(callback);
        }

        @Override
        public Enable setFields(java.lang.String fields) {
          return (Enable) super.setFields(fields);
        }

        @Override
        public Enable setKey(java.lang.String key) {
          return (Enable) super.setKey(key);
        }

        @Override
        public Enable setOauthToken(java.lang.String oauthToken) {
          return (Enable) super.setOauthToken(oauthToken);
        }

        @Override
        public Enable setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Enable) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Enable setQuotaUser(java.lang.String quotaUser) {
          return (Enable) super.setQuotaUser(quotaUser);
        }

        @Override
        public Enable setUploadType(java.lang.String uploadType) {
          return (Enable) super.setUploadType(uploadType);
        }

        @Override
        public Enable setUploadProtocol(java.lang.String uploadProtocol) {
          return (Enable) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the consumer and the service to enable for that consumer.
         *
         * A valid path would be: - projects/my-project/services/servicemanagement.googleapis.com
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the consumer and the service to enable for that consumer.

       A valid path would be: - projects/my-project/services/servicemanagement.googleapis.com
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the consumer and the service to enable for that consumer.
         *
         * A valid path would be: - projects/my-project/services/servicemanagement.googleapis.com
         */
        public Enable setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/services/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Enable set(String parameterName, Object value) {
          return (Enable) super.set(parameterName, value);
        }
      }
      /**
       * List enabled services for the specified consumer.
       *
       * Create a request for the method "services.list".
       *
       * This request holds the parameters needed by the serviceuser server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent List enabled services for the specified parent.
      An example valid parent would be:
      - projects/my-
       *        project
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ServiceUserRequest<com.google.serviceuser.v1.model.ListEnabledServicesResponse> {

        private static final String REST_PATH = "v1/{+parent}/services";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * List enabled services for the specified consumer.
         *
         * Create a request for the method "services.list".
         *
         * This request holds the parameters needed by the the serviceuser server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent List enabled services for the specified parent.
      An example valid parent would be:
      - projects/my-
       *        project
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(ServiceUser.this, "GET", REST_PATH, null, com.google.serviceuser.v1.model.ListEnabledServicesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * List enabled services for the specified parent.
         *
         * An example valid parent would be: - projects/my-project
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** List enabled services for the specified parent.

       An example valid parent would be: - projects/my-project
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * List enabled services for the specified parent.
         *
         * An example valid parent would be: - projects/my-project
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Requested size of the next page of data. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested size of the next page of data.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Requested size of the next page of data. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Token identifying which result to start with; returned by a previous list call.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Token identifying which result to start with; returned by a previous list call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Token identifying which result to start with; returned by a previous list call.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Services collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ServiceUser serviceuser = new ServiceUser(...);}
   *   {@code ServiceUser.Services.List request = serviceuser.services().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Services services() {
    return new Services();
  }

  /**
   * The "services" collection of methods.
   */
  public class Services {

    /**
     * Search available services.
     *
     * When no filter is specified, returns all accessible services. For authenticated users, also
     * returns all services the calling user has "servicemanagement.services.bind" permission for.
     *
     * Create a request for the method "services.search".
     *
     * This request holds the parameters needed by the serviceuser server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Search search() throws java.io.IOException {
      Search result = new Search();
      initialize(result);
      return result;
    }

    public class Search extends ServiceUserRequest<com.google.serviceuser.v1.model.SearchServicesResponse> {

      private static final String REST_PATH = "v1/services:search";

      /**
       * Search available services.
       *
       * When no filter is specified, returns all accessible services. For authenticated users, also
       * returns all services the calling user has "servicemanagement.services.bind" permission for.
       *
       * Create a request for the method "services.search".
       *
       * This request holds the parameters needed by the the serviceuser server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Search() {
        super(ServiceUser.this, "GET", REST_PATH, null, com.google.serviceuser.v1.model.SearchServicesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Search set$Xgafv(java.lang.String $Xgafv) {
        return (Search) super.set$Xgafv($Xgafv);
      }

      @Override
      public Search setAccessToken(java.lang.String accessToken) {
        return (Search) super.setAccessToken(accessToken);
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setCallback(java.lang.String callback) {
        return (Search) super.setCallback(callback);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUploadType(java.lang.String uploadType) {
        return (Search) super.setUploadType(uploadType);
      }

      @Override
      public Search setUploadProtocol(java.lang.String uploadProtocol) {
        return (Search) super.setUploadProtocol(uploadProtocol);
      }

      /** Requested size of the next page of data. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Requested size of the next page of data.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** Requested size of the next page of data. */
      public Search setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Token identifying which result to start with; returned by a previous list call.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Token identifying which result to start with; returned by a previous list call.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Token identifying which result to start with; returned by a previous list call.
       */
      public Search setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link ServiceUser}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ServiceUser}. */
    @Override
    public ServiceUser build() {
      return new ServiceUser(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ServiceUserRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setServiceUserRequestInitializer(
        ServiceUserRequestInitializer serviceuserRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(serviceuserRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
