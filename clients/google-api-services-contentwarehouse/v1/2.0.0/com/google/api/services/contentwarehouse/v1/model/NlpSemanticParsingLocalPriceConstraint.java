/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for NlpSemanticParsingLocalPriceConstraint.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingLocalPriceConstraint extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean cheap;

  /**
   * The currency codes are expected to be string from the list in i18n/identifiers/currencycode.*
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String currencyCode;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean expensive;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double maxPrice;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double minPrice;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean moderatelyPriced;

  /**
   * The user mentioned something about price, but didn't mention a specific constraint. This is
   * used to indicate an intent to remove all price constraints, in queries like [forget the price].
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean unspecified;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCheap() {
    return cheap;
  }

  /**
   * @param cheap cheap or {@code null} for none
   */
  public NlpSemanticParsingLocalPriceConstraint setCheap(java.lang.Boolean cheap) {
    this.cheap = cheap;
    return this;
  }

  /**
   * The currency codes are expected to be string from the list in i18n/identifiers/currencycode.*
   * @return value or {@code null} for none
   */
  public java.lang.String getCurrencyCode() {
    return currencyCode;
  }

  /**
   * The currency codes are expected to be string from the list in i18n/identifiers/currencycode.*
   * @param currencyCode currencyCode or {@code null} for none
   */
  public NlpSemanticParsingLocalPriceConstraint setCurrencyCode(java.lang.String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getExpensive() {
    return expensive;
  }

  /**
   * @param expensive expensive or {@code null} for none
   */
  public NlpSemanticParsingLocalPriceConstraint setExpensive(java.lang.Boolean expensive) {
    this.expensive = expensive;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getMaxPrice() {
    return maxPrice;
  }

  /**
   * @param maxPrice maxPrice or {@code null} for none
   */
  public NlpSemanticParsingLocalPriceConstraint setMaxPrice(java.lang.Double maxPrice) {
    this.maxPrice = maxPrice;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getMinPrice() {
    return minPrice;
  }

  /**
   * @param minPrice minPrice or {@code null} for none
   */
  public NlpSemanticParsingLocalPriceConstraint setMinPrice(java.lang.Double minPrice) {
    this.minPrice = minPrice;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getModeratelyPriced() {
    return moderatelyPriced;
  }

  /**
   * @param moderatelyPriced moderatelyPriced or {@code null} for none
   */
  public NlpSemanticParsingLocalPriceConstraint setModeratelyPriced(java.lang.Boolean moderatelyPriced) {
    this.moderatelyPriced = moderatelyPriced;
    return this;
  }

  /**
   * The user mentioned something about price, but didn't mention a specific constraint. This is
   * used to indicate an intent to remove all price constraints, in queries like [forget the price].
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUnspecified() {
    return unspecified;
  }

  /**
   * The user mentioned something about price, but didn't mention a specific constraint. This is
   * used to indicate an intent to remove all price constraints, in queries like [forget the price].
   * @param unspecified unspecified or {@code null} for none
   */
  public NlpSemanticParsingLocalPriceConstraint setUnspecified(java.lang.Boolean unspecified) {
    this.unspecified = unspecified;
    return this;
  }

  @Override
  public NlpSemanticParsingLocalPriceConstraint set(String fieldName, Object value) {
    return (NlpSemanticParsingLocalPriceConstraint) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingLocalPriceConstraint clone() {
    return (NlpSemanticParsingLocalPriceConstraint) super.clone();
  }

}
