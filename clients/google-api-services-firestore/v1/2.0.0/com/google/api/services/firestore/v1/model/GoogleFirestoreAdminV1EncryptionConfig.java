/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firestore.v1.model;

/**
 * Encryption configuration for a new database being created from another source. The source could
 * be a Backup .
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Firestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirestoreAdminV1EncryptionConfig extends com.google.api.client.json.GenericJson {

  /**
   * Use Customer Managed Encryption Keys (CMEK) for encryption.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleFirestoreAdminV1CustomerManagedEncryptionOptions customerManagedEncryption;

  /**
   * Use Google default encryption.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleFirestoreAdminV1GoogleDefaultEncryptionOptions googleDefaultEncryption;

  /**
   * The database will use the same encryption configuration as the source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleFirestoreAdminV1SourceEncryptionOptions useSourceEncryption;

  /**
   * Use Customer Managed Encryption Keys (CMEK) for encryption.
   * @return value or {@code null} for none
   */
  public GoogleFirestoreAdminV1CustomerManagedEncryptionOptions getCustomerManagedEncryption() {
    return customerManagedEncryption;
  }

  /**
   * Use Customer Managed Encryption Keys (CMEK) for encryption.
   * @param customerManagedEncryption customerManagedEncryption or {@code null} for none
   */
  public GoogleFirestoreAdminV1EncryptionConfig setCustomerManagedEncryption(GoogleFirestoreAdminV1CustomerManagedEncryptionOptions customerManagedEncryption) {
    this.customerManagedEncryption = customerManagedEncryption;
    return this;
  }

  /**
   * Use Google default encryption.
   * @return value or {@code null} for none
   */
  public GoogleFirestoreAdminV1GoogleDefaultEncryptionOptions getGoogleDefaultEncryption() {
    return googleDefaultEncryption;
  }

  /**
   * Use Google default encryption.
   * @param googleDefaultEncryption googleDefaultEncryption or {@code null} for none
   */
  public GoogleFirestoreAdminV1EncryptionConfig setGoogleDefaultEncryption(GoogleFirestoreAdminV1GoogleDefaultEncryptionOptions googleDefaultEncryption) {
    this.googleDefaultEncryption = googleDefaultEncryption;
    return this;
  }

  /**
   * The database will use the same encryption configuration as the source.
   * @return value or {@code null} for none
   */
  public GoogleFirestoreAdminV1SourceEncryptionOptions getUseSourceEncryption() {
    return useSourceEncryption;
  }

  /**
   * The database will use the same encryption configuration as the source.
   * @param useSourceEncryption useSourceEncryption or {@code null} for none
   */
  public GoogleFirestoreAdminV1EncryptionConfig setUseSourceEncryption(GoogleFirestoreAdminV1SourceEncryptionOptions useSourceEncryption) {
    this.useSourceEncryption = useSourceEncryption;
    return this;
  }

  @Override
  public GoogleFirestoreAdminV1EncryptionConfig set(String fieldName, Object value) {
    return (GoogleFirestoreAdminV1EncryptionConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleFirestoreAdminV1EncryptionConfig clone() {
    return (GoogleFirestoreAdminV1EncryptionConfig) super.clone();
  }

}
