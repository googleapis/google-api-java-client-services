/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * catalog-specific fields.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class OceanDocTagCatalogSpecific extends com.google.api.client.json.GenericJson {

  /**
   * Is this the latest issue of this catalog series? This is required to filter results if the
   * latest restrict is on.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean latest;

  /**
   * time_t date corresponding to the catalog publication date. Approximate when the catalog does
   * not have an exact "date" of publication, e.g. For "Spring 2002", year, month and day are 2002,
   * 03 and 21, respectivley. This value is used to compare catalog issues to determine the latest.
   * The value is stored in seconds-since-epoch, 1/1/1970. This is not a problem for catalogs
   * because we are not dealing with any catalogs from before the 70's.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer publicationDate;

  /**
   * String to be displayed as catalog publication time, e.g. "Spring 2002".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publicationTimeToDisplay;

  /**
   * Is this the latest issue of this catalog series? This is required to filter results if the
   * latest restrict is on.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLatest() {
    return latest;
  }

  /**
   * Is this the latest issue of this catalog series? This is required to filter results if the
   * latest restrict is on.
   * @param latest latest or {@code null} for none
   */
  public OceanDocTagCatalogSpecific setLatest(java.lang.Boolean latest) {
    this.latest = latest;
    return this;
  }

  /**
   * time_t date corresponding to the catalog publication date. Approximate when the catalog does
   * not have an exact "date" of publication, e.g. For "Spring 2002", year, month and day are 2002,
   * 03 and 21, respectivley. This value is used to compare catalog issues to determine the latest.
   * The value is stored in seconds-since-epoch, 1/1/1970. This is not a problem for catalogs
   * because we are not dealing with any catalogs from before the 70's.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPublicationDate() {
    return publicationDate;
  }

  /**
   * time_t date corresponding to the catalog publication date. Approximate when the catalog does
   * not have an exact "date" of publication, e.g. For "Spring 2002", year, month and day are 2002,
   * 03 and 21, respectivley. This value is used to compare catalog issues to determine the latest.
   * The value is stored in seconds-since-epoch, 1/1/1970. This is not a problem for catalogs
   * because we are not dealing with any catalogs from before the 70's.
   * @param publicationDate publicationDate or {@code null} for none
   */
  public OceanDocTagCatalogSpecific setPublicationDate(java.lang.Integer publicationDate) {
    this.publicationDate = publicationDate;
    return this;
  }

  /**
   * String to be displayed as catalog publication time, e.g. "Spring 2002".
   * @return value or {@code null} for none
   */
  public java.lang.String getPublicationTimeToDisplay() {
    return publicationTimeToDisplay;
  }

  /**
   * String to be displayed as catalog publication time, e.g. "Spring 2002".
   * @param publicationTimeToDisplay publicationTimeToDisplay or {@code null} for none
   */
  public OceanDocTagCatalogSpecific setPublicationTimeToDisplay(java.lang.String publicationTimeToDisplay) {
    this.publicationTimeToDisplay = publicationTimeToDisplay;
    return this;
  }

  @Override
  public OceanDocTagCatalogSpecific set(String fieldName, Object value) {
    return (OceanDocTagCatalogSpecific) super.set(fieldName, value);
  }

  @Override
  public OceanDocTagCatalogSpecific clone() {
    return (OceanDocTagCatalogSpecific) super.clone();
  }

}
