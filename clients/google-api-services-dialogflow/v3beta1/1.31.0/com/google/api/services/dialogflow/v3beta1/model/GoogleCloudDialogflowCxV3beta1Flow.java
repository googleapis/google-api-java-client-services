/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v3beta1.model;

/**
 * Flows represents the conversation flows when you build your chatbot agent. A flow consists of
 * many pages connected by the transition routes. Conversations always start with the built-in Start
 * Flow (with an all-0 ID). Transition routes can direct the conversation session from the current
 * flow (parent flow) to another flow (sub flow). When the sub flow is finished, Dialogflow will
 * bring the session back to the parent flow, where the sub flow is started. Usually, when a
 * transition route is followed by a matched intent, the intent will be "consumed". This means the
 * intent won't activate more transition routes. However, when the followed transition route moves
 * the conversation session into a different flow, the matched intent can be carried over and to be
 * consumed in the target flow.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowCxV3beta1Flow extends com.google.api.client.json.GenericJson {

  /**
   * The description of the flow. The maximum length is 500 characters. If exceeded, the request is
   * rejected.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. The human-readable name of the flow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * A flow's event handlers serve two purposes: * They are responsible for handling events (e.g. no
   * match, webhook errors) in the flow. * They are inherited by every page's event handlers, which
   * can be used to handle common events regardless of the current page. Event handlers defined in
   * the page have higher priority than those defined in the flow. Unlike transition_routes, these
   * handlers are evaluated on a first-match basis. The first one that matches the event get
   * executed, with the rest being ignored.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDialogflowCxV3beta1EventHandler> eventHandlers;

  static {
    // hack to force ProGuard to consider GoogleCloudDialogflowCxV3beta1EventHandler used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudDialogflowCxV3beta1EventHandler.class);
  }

  /**
   * The unique identifier of the flow. Format: `projects//locations//agents//flows/`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * NLU related settings of the flow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDialogflowCxV3beta1NluSettings nluSettings;

  /**
   * A flow's transition route group serve two purposes: * They are responsible for matching the
   * user's first utterances in the flow. * They are inherited by every page's transition route
   * groups. Transition route groups defined in the page have higher priority than those defined in
   * the flow. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> transitionRouteGroups;

  /**
   * A flow's transition routes serve two purposes: * They are responsible for matching the user's
   * first utterances in the flow. * They are inherited by every page's transition routes and can
   * support use cases such as the user saying "help" or "can I talk to a human?", which can be
   * handled in a common way regardless of the current page. Transition routes defined in the page
   * have higher priority than those defined in the flow. TransitionRoutes are evalauted in the
   * following order: * TransitionRoutes with intent specified.. * TransitionRoutes with only
   * condition specified. TransitionRoutes with intent specified are inherited by pages in the flow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDialogflowCxV3beta1TransitionRoute> transitionRoutes;

  /**
   * The description of the flow. The maximum length is 500 characters. If exceeded, the request is
   * rejected.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * The description of the flow. The maximum length is 500 characters. If exceeded, the request is
   * rejected.
   * @param description description or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Flow setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The human-readable name of the flow.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The human-readable name of the flow.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Flow setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * A flow's event handlers serve two purposes: * They are responsible for handling events (e.g. no
   * match, webhook errors) in the flow. * They are inherited by every page's event handlers, which
   * can be used to handle common events regardless of the current page. Event handlers defined in
   * the page have higher priority than those defined in the flow. Unlike transition_routes, these
   * handlers are evaluated on a first-match basis. The first one that matches the event get
   * executed, with the rest being ignored.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDialogflowCxV3beta1EventHandler> getEventHandlers() {
    return eventHandlers;
  }

  /**
   * A flow's event handlers serve two purposes: * They are responsible for handling events (e.g. no
   * match, webhook errors) in the flow. * They are inherited by every page's event handlers, which
   * can be used to handle common events regardless of the current page. Event handlers defined in
   * the page have higher priority than those defined in the flow. Unlike transition_routes, these
   * handlers are evaluated on a first-match basis. The first one that matches the event get
   * executed, with the rest being ignored.
   * @param eventHandlers eventHandlers or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Flow setEventHandlers(java.util.List<GoogleCloudDialogflowCxV3beta1EventHandler> eventHandlers) {
    this.eventHandlers = eventHandlers;
    return this;
  }

  /**
   * The unique identifier of the flow. Format: `projects//locations//agents//flows/`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The unique identifier of the flow. Format: `projects//locations//agents//flows/`.
   * @param name name or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Flow setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * NLU related settings of the flow.
   * @return value or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1NluSettings getNluSettings() {
    return nluSettings;
  }

  /**
   * NLU related settings of the flow.
   * @param nluSettings nluSettings or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Flow setNluSettings(GoogleCloudDialogflowCxV3beta1NluSettings nluSettings) {
    this.nluSettings = nluSettings;
    return this;
  }

  /**
   * A flow's transition route group serve two purposes: * They are responsible for matching the
   * user's first utterances in the flow. * They are inherited by every page's transition route
   * groups. Transition route groups defined in the page have higher priority than those defined in
   * the flow. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTransitionRouteGroups() {
    return transitionRouteGroups;
  }

  /**
   * A flow's transition route group serve two purposes: * They are responsible for matching the
   * user's first utterances in the flow. * They are inherited by every page's transition route
   * groups. Transition route groups defined in the page have higher priority than those defined in
   * the flow. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
   * @param transitionRouteGroups transitionRouteGroups or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Flow setTransitionRouteGroups(java.util.List<java.lang.String> transitionRouteGroups) {
    this.transitionRouteGroups = transitionRouteGroups;
    return this;
  }

  /**
   * A flow's transition routes serve two purposes: * They are responsible for matching the user's
   * first utterances in the flow. * They are inherited by every page's transition routes and can
   * support use cases such as the user saying "help" or "can I talk to a human?", which can be
   * handled in a common way regardless of the current page. Transition routes defined in the page
   * have higher priority than those defined in the flow. TransitionRoutes are evalauted in the
   * following order: * TransitionRoutes with intent specified.. * TransitionRoutes with only
   * condition specified. TransitionRoutes with intent specified are inherited by pages in the flow.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDialogflowCxV3beta1TransitionRoute> getTransitionRoutes() {
    return transitionRoutes;
  }

  /**
   * A flow's transition routes serve two purposes: * They are responsible for matching the user's
   * first utterances in the flow. * They are inherited by every page's transition routes and can
   * support use cases such as the user saying "help" or "can I talk to a human?", which can be
   * handled in a common way regardless of the current page. Transition routes defined in the page
   * have higher priority than those defined in the flow. TransitionRoutes are evalauted in the
   * following order: * TransitionRoutes with intent specified.. * TransitionRoutes with only
   * condition specified. TransitionRoutes with intent specified are inherited by pages in the flow.
   * @param transitionRoutes transitionRoutes or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Flow setTransitionRoutes(java.util.List<GoogleCloudDialogflowCxV3beta1TransitionRoute> transitionRoutes) {
    this.transitionRoutes = transitionRoutes;
    return this;
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1Flow set(String fieldName, Object value) {
    return (GoogleCloudDialogflowCxV3beta1Flow) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1Flow clone() {
    return (GoogleCloudDialogflowCxV3beta1Flow) super.clone();
  }

}
