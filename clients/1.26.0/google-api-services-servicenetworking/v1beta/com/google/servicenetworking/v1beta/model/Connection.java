/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.servicenetworking.v1beta.model;

/**
 * Message returning the created service connection.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Service Networking API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Connection extends com.google.api.client.json.GenericJson {

  /**
   * Name of VPC network connected with service producer network. Must be in a form
   * 'projects/{project}/global/networks/{network}'. {project} is a project number, as in '12345'
   * {network} is a network name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String network;

  /**
   * Output only. Name of the peering connection that is created by the peering service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String peering;

  /**
   * Named IP address range(s) of PEERING type allocated for this service provider. Note that
   * invoking this method with a different range when connection is already established will not
   * modify already provisioned service producer subnetworks.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> reservedPeeringRanges;

  /**
   * Name of VPC network connected with service producer network. Must be in a form
   * 'projects/{project}/global/networks/{network}'. {project} is a project number, as in '12345'
   * {network} is a network name.
   * @return value or {@code null} for none
   */
  public java.lang.String getNetwork() {
    return network;
  }

  /**
   * Name of VPC network connected with service producer network. Must be in a form
   * 'projects/{project}/global/networks/{network}'. {project} is a project number, as in '12345'
   * {network} is a network name.
   * @param network network or {@code null} for none
   */
  public Connection setNetwork(java.lang.String network) {
    this.network = network;
    return this;
  }

  /**
   * Output only. Name of the peering connection that is created by the peering service.
   * @return value or {@code null} for none
   */
  public java.lang.String getPeering() {
    return peering;
  }

  /**
   * Output only. Name of the peering connection that is created by the peering service.
   * @param peering peering or {@code null} for none
   */
  public Connection setPeering(java.lang.String peering) {
    this.peering = peering;
    return this;
  }

  /**
   * Named IP address range(s) of PEERING type allocated for this service provider. Note that
   * invoking this method with a different range when connection is already established will not
   * modify already provisioned service producer subnetworks.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getReservedPeeringRanges() {
    return reservedPeeringRanges;
  }

  /**
   * Named IP address range(s) of PEERING type allocated for this service provider. Note that
   * invoking this method with a different range when connection is already established will not
   * modify already provisioned service producer subnetworks.
   * @param reservedPeeringRanges reservedPeeringRanges or {@code null} for none
   */
  public Connection setReservedPeeringRanges(java.util.List<java.lang.String> reservedPeeringRanges) {
    this.reservedPeeringRanges = reservedPeeringRanges;
    return this;
  }

  @Override
  public Connection set(String fieldName, Object value) {
    return (Connection) super.set(fieldName, value);
  }

  @Override
  public Connection clone() {
    return (Connection) super.clone();
  }

}
