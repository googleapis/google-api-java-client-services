/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.classroom.model;

/**
 * The rubric of the course work. A rubric is a scoring guide used to evaluate student work and give
 * feedback. For further details, see [Rubrics structure and known
 * limitations](/classroom/rubrics/limitations).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Classroom API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Rubric extends com.google.api.client.json.GenericJson {

  /**
   * Identifier of the course. Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String courseId;

  /**
   * Identifier for the course work this corresponds to. Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String courseWorkId;

  /**
   * Output only. Timestamp when this rubric was created. Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String creationTime;

  /**
   * List of criteria. Each criterion is a dimension on which performance is rated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Criterion> criteria;

  static {
    // hack to force ProGuard to consider Criterion used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Criterion.class);
  }

  /**
   * Classroom-assigned identifier for the rubric. This is unique among rubrics for the relevant
   * course work. Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Input only. Immutable. Google Sheets ID of the spreadsheet. This spreadsheet must contain
   * formatted rubric settings. See [Create or reuse a rubric for an
   * assignment](https://support.google.com/edu/classroom/answer/9335069). Use of this field
   * requires the `https://www.googleapis.com/auth/spreadsheets.readonly` or
   * `https://www.googleapis.com/auth/spreadsheets` scope.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceSpreadsheetId;

  /**
   * Output only. Timestamp of the most recent change to this rubric. Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Identifier of the course. Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getCourseId() {
    return courseId;
  }

  /**
   * Identifier of the course. Read-only.
   * @param courseId courseId or {@code null} for none
   */
  public Rubric setCourseId(java.lang.String courseId) {
    this.courseId = courseId;
    return this;
  }

  /**
   * Identifier for the course work this corresponds to. Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getCourseWorkId() {
    return courseWorkId;
  }

  /**
   * Identifier for the course work this corresponds to. Read-only.
   * @param courseWorkId courseWorkId or {@code null} for none
   */
  public Rubric setCourseWorkId(java.lang.String courseWorkId) {
    this.courseWorkId = courseWorkId;
    return this;
  }

  /**
   * Output only. Timestamp when this rubric was created. Read-only.
   * @return value or {@code null} for none
   */
  public String getCreationTime() {
    return creationTime;
  }

  /**
   * Output only. Timestamp when this rubric was created. Read-only.
   * @param creationTime creationTime or {@code null} for none
   */
  public Rubric setCreationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * List of criteria. Each criterion is a dimension on which performance is rated.
   * @return value or {@code null} for none
   */
  public java.util.List<Criterion> getCriteria() {
    return criteria;
  }

  /**
   * List of criteria. Each criterion is a dimension on which performance is rated.
   * @param criteria criteria or {@code null} for none
   */
  public Rubric setCriteria(java.util.List<Criterion> criteria) {
    this.criteria = criteria;
    return this;
  }

  /**
   * Classroom-assigned identifier for the rubric. This is unique among rubrics for the relevant
   * course work. Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Classroom-assigned identifier for the rubric. This is unique among rubrics for the relevant
   * course work. Read-only.
   * @param id id or {@code null} for none
   */
  public Rubric setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Input only. Immutable. Google Sheets ID of the spreadsheet. This spreadsheet must contain
   * formatted rubric settings. See [Create or reuse a rubric for an
   * assignment](https://support.google.com/edu/classroom/answer/9335069). Use of this field
   * requires the `https://www.googleapis.com/auth/spreadsheets.readonly` or
   * `https://www.googleapis.com/auth/spreadsheets` scope.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceSpreadsheetId() {
    return sourceSpreadsheetId;
  }

  /**
   * Input only. Immutable. Google Sheets ID of the spreadsheet. This spreadsheet must contain
   * formatted rubric settings. See [Create or reuse a rubric for an
   * assignment](https://support.google.com/edu/classroom/answer/9335069). Use of this field
   * requires the `https://www.googleapis.com/auth/spreadsheets.readonly` or
   * `https://www.googleapis.com/auth/spreadsheets` scope.
   * @param sourceSpreadsheetId sourceSpreadsheetId or {@code null} for none
   */
  public Rubric setSourceSpreadsheetId(java.lang.String sourceSpreadsheetId) {
    this.sourceSpreadsheetId = sourceSpreadsheetId;
    return this;
  }

  /**
   * Output only. Timestamp of the most recent change to this rubric. Read-only.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp of the most recent change to this rubric. Read-only.
   * @param updateTime updateTime or {@code null} for none
   */
  public Rubric setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Rubric set(String fieldName, Object value) {
    return (Rubric) super.set(fieldName, value);
  }

  @Override
  public Rubric clone() {
    return (Rubric) super.clone();
  }

}
