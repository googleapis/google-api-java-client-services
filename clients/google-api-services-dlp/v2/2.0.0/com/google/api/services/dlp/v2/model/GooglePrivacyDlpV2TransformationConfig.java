/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * User specified templates and configs for how to deidentify structured, unstructures, and image
 * files. User must provide either a unstructured deidentify template or at least one redact image
 * config.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2TransformationConfig extends com.google.api.client.json.GenericJson {

  /**
   * De-identify template. If this template is specified, it will serve as the default de-identify
   * template. This template cannot contain `record_transformations` since it can be used for
   * unstructured content such as free-form text files. If this template is not set, a default
   * `ReplaceWithInfoTypeConfig` will be used to de-identify unstructured content.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deidentifyTemplate;

  /**
   * Image redact template. If this template is specified, it will serve as the de-identify template
   * for images. If this template is not set, all findings in the image will be redacted with a
   * black box.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageRedactTemplate;

  /**
   * Structured de-identify template. If this template is specified, it will serve as the de-
   * identify template for structured content such as delimited files and tables. If this template
   * is not set but the `deidentify_template` is set, then `deidentify_template` will also apply to
   * the structured content. If neither template is set, a default `ReplaceWithInfoTypeConfig` will
   * be used to de-identify structured content.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String structuredDeidentifyTemplate;

  /**
   * De-identify template. If this template is specified, it will serve as the default de-identify
   * template. This template cannot contain `record_transformations` since it can be used for
   * unstructured content such as free-form text files. If this template is not set, a default
   * `ReplaceWithInfoTypeConfig` will be used to de-identify unstructured content.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeidentifyTemplate() {
    return deidentifyTemplate;
  }

  /**
   * De-identify template. If this template is specified, it will serve as the default de-identify
   * template. This template cannot contain `record_transformations` since it can be used for
   * unstructured content such as free-form text files. If this template is not set, a default
   * `ReplaceWithInfoTypeConfig` will be used to de-identify unstructured content.
   * @param deidentifyTemplate deidentifyTemplate or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationConfig setDeidentifyTemplate(java.lang.String deidentifyTemplate) {
    this.deidentifyTemplate = deidentifyTemplate;
    return this;
  }

  /**
   * Image redact template. If this template is specified, it will serve as the de-identify template
   * for images. If this template is not set, all findings in the image will be redacted with a
   * black box.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageRedactTemplate() {
    return imageRedactTemplate;
  }

  /**
   * Image redact template. If this template is specified, it will serve as the de-identify template
   * for images. If this template is not set, all findings in the image will be redacted with a
   * black box.
   * @param imageRedactTemplate imageRedactTemplate or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationConfig setImageRedactTemplate(java.lang.String imageRedactTemplate) {
    this.imageRedactTemplate = imageRedactTemplate;
    return this;
  }

  /**
   * Structured de-identify template. If this template is specified, it will serve as the de-
   * identify template for structured content such as delimited files and tables. If this template
   * is not set but the `deidentify_template` is set, then `deidentify_template` will also apply to
   * the structured content. If neither template is set, a default `ReplaceWithInfoTypeConfig` will
   * be used to de-identify structured content.
   * @return value or {@code null} for none
   */
  public java.lang.String getStructuredDeidentifyTemplate() {
    return structuredDeidentifyTemplate;
  }

  /**
   * Structured de-identify template. If this template is specified, it will serve as the de-
   * identify template for structured content such as delimited files and tables. If this template
   * is not set but the `deidentify_template` is set, then `deidentify_template` will also apply to
   * the structured content. If neither template is set, a default `ReplaceWithInfoTypeConfig` will
   * be used to de-identify structured content.
   * @param structuredDeidentifyTemplate structuredDeidentifyTemplate or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationConfig setStructuredDeidentifyTemplate(java.lang.String structuredDeidentifyTemplate) {
    this.structuredDeidentifyTemplate = structuredDeidentifyTemplate;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2TransformationConfig set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2TransformationConfig) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2TransformationConfig clone() {
    return (GooglePrivacyDlpV2TransformationConfig) super.clone();
  }

}
