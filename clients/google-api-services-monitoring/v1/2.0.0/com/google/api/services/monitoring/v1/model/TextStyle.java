/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * Properties that determine how the title and content are styled
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TextStyle extends com.google.api.client.json.GenericJson {

  /**
   * The background color as a hex string. "#RRGGBB" or "#RGB"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backgroundColor;

  /**
   * Font sizes for both the title and content. The title will still be larger relative to the
   * content.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fontSize;

  /**
   * The horizontal alignment of both the title and content
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String horizontalAlignment;

  /**
   * The amount of padding around the widget
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String padding;

  /**
   * The text color as a hex string. "#RRGGBB" or "#RGB"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String textColor;

  /**
   * The vertical alignment of both the title and content
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String verticalAlignment;

  /**
   * The background color as a hex string. "#RRGGBB" or "#RGB"
   * @return value or {@code null} for none
   */
  public java.lang.String getBackgroundColor() {
    return backgroundColor;
  }

  /**
   * The background color as a hex string. "#RRGGBB" or "#RGB"
   * @param backgroundColor backgroundColor or {@code null} for none
   */
  public TextStyle setBackgroundColor(java.lang.String backgroundColor) {
    this.backgroundColor = backgroundColor;
    return this;
  }

  /**
   * Font sizes for both the title and content. The title will still be larger relative to the
   * content.
   * @return value or {@code null} for none
   */
  public java.lang.String getFontSize() {
    return fontSize;
  }

  /**
   * Font sizes for both the title and content. The title will still be larger relative to the
   * content.
   * @param fontSize fontSize or {@code null} for none
   */
  public TextStyle setFontSize(java.lang.String fontSize) {
    this.fontSize = fontSize;
    return this;
  }

  /**
   * The horizontal alignment of both the title and content
   * @return value or {@code null} for none
   */
  public java.lang.String getHorizontalAlignment() {
    return horizontalAlignment;
  }

  /**
   * The horizontal alignment of both the title and content
   * @param horizontalAlignment horizontalAlignment or {@code null} for none
   */
  public TextStyle setHorizontalAlignment(java.lang.String horizontalAlignment) {
    this.horizontalAlignment = horizontalAlignment;
    return this;
  }

  /**
   * The amount of padding around the widget
   * @return value or {@code null} for none
   */
  public java.lang.String getPadding() {
    return padding;
  }

  /**
   * The amount of padding around the widget
   * @param padding padding or {@code null} for none
   */
  public TextStyle setPadding(java.lang.String padding) {
    this.padding = padding;
    return this;
  }

  /**
   * The text color as a hex string. "#RRGGBB" or "#RGB"
   * @return value or {@code null} for none
   */
  public java.lang.String getTextColor() {
    return textColor;
  }

  /**
   * The text color as a hex string. "#RRGGBB" or "#RGB"
   * @param textColor textColor or {@code null} for none
   */
  public TextStyle setTextColor(java.lang.String textColor) {
    this.textColor = textColor;
    return this;
  }

  /**
   * The vertical alignment of both the title and content
   * @return value or {@code null} for none
   */
  public java.lang.String getVerticalAlignment() {
    return verticalAlignment;
  }

  /**
   * The vertical alignment of both the title and content
   * @param verticalAlignment verticalAlignment or {@code null} for none
   */
  public TextStyle setVerticalAlignment(java.lang.String verticalAlignment) {
    this.verticalAlignment = verticalAlignment;
    return this;
  }

  @Override
  public TextStyle set(String fieldName, Object value) {
    return (TextStyle) super.set(fieldName, value);
  }

  @Override
  public TextStyle clone() {
    return (TextStyle) super.clone();
  }

}
