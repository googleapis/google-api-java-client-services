/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Vertex AI Model Monitoring Service serves as a central hub for the analysis and visualization of
 * data quality and performance related to models. ModelMonitor stands as a top level resource for
 * overseeing your model monitoring tasks.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1ModelMonitor extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Timestamp when this ModelMonitor was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * The display name of the ModelMonitor. The name can be up to 128 characters long and can consist
   * of any UTF-8.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Optional model explanation spec. It is used for feature attribution monitoring.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1ExplanationSpec explanationSpec;

  /**
   * Monitoring Schema is to specify the model's features, prediction outputs and ground truth
   * properties. It is used to extract pertinent data from the dataset and to process features based
   * on their properties. Make sure that the schema aligns with your dataset, if it does not, we
   * will be unable to extract data from the dataset. It is required for most models, but optional
   * for Vertex AI AutoML Tables unless the schem information is not available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1ModelMonitoringSchema modelMonitoringSchema;

  /**
   * The entity that is subject to analysis. Currently only models in Vertex AI Model Registry are
   * supported. If you want to analyze the model which is outside the Vertex AI, you could register
   * a model in Vertex AI Model Registry using just a display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1ModelMonitorModelMonitoringTarget modelMonitoringTarget;

  /**
   * Immutable. Resource name of the ModelMonitor. Format:
   * `projects/{project}/locations/{location}/modelMonitors/{model_monitor}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional default notification spec, it can be overridden in the ModelMonitoringJob notification
   * spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1ModelMonitoringNotificationSpec notificationSpec;

  /**
   * Optional default monitoring metrics/logs export spec, it can be overridden in the
   * ModelMonitoringJob output spec. If not specified, a default Google Cloud Storage bucket will be
   * created under your project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1ModelMonitoringOutputSpec outputSpec;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzi;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzs;

  /**
   * Optional default tabular model monitoring objective.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveSpecTabularObjective tabularObjective;

  /**
   * Optional training dataset used to train the model. It can serve as a reference dataset to
   * identify changes in production.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1ModelMonitoringInput trainingDataset;

  /**
   * Output only. Timestamp when this ModelMonitor was updated most recently.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Timestamp when this ModelMonitor was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp when this ModelMonitor was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The display name of the ModelMonitor. The name can be up to 128 characters long and can consist
   * of any UTF-8.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The display name of the ModelMonitor. The name can be up to 128 characters long and can consist
   * of any UTF-8.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional model explanation spec. It is used for feature attribution monitoring.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ExplanationSpec getExplanationSpec() {
    return explanationSpec;
  }

  /**
   * Optional model explanation spec. It is used for feature attribution monitoring.
   * @param explanationSpec explanationSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setExplanationSpec(GoogleCloudAiplatformV1beta1ExplanationSpec explanationSpec) {
    this.explanationSpec = explanationSpec;
    return this;
  }

  /**
   * Monitoring Schema is to specify the model's features, prediction outputs and ground truth
   * properties. It is used to extract pertinent data from the dataset and to process features based
   * on their properties. Make sure that the schema aligns with your dataset, if it does not, we
   * will be unable to extract data from the dataset. It is required for most models, but optional
   * for Vertex AI AutoML Tables unless the schem information is not available.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitoringSchema getModelMonitoringSchema() {
    return modelMonitoringSchema;
  }

  /**
   * Monitoring Schema is to specify the model's features, prediction outputs and ground truth
   * properties. It is used to extract pertinent data from the dataset and to process features based
   * on their properties. Make sure that the schema aligns with your dataset, if it does not, we
   * will be unable to extract data from the dataset. It is required for most models, but optional
   * for Vertex AI AutoML Tables unless the schem information is not available.
   * @param modelMonitoringSchema modelMonitoringSchema or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setModelMonitoringSchema(GoogleCloudAiplatformV1beta1ModelMonitoringSchema modelMonitoringSchema) {
    this.modelMonitoringSchema = modelMonitoringSchema;
    return this;
  }

  /**
   * The entity that is subject to analysis. Currently only models in Vertex AI Model Registry are
   * supported. If you want to analyze the model which is outside the Vertex AI, you could register
   * a model in Vertex AI Model Registry using just a display name.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitorModelMonitoringTarget getModelMonitoringTarget() {
    return modelMonitoringTarget;
  }

  /**
   * The entity that is subject to analysis. Currently only models in Vertex AI Model Registry are
   * supported. If you want to analyze the model which is outside the Vertex AI, you could register
   * a model in Vertex AI Model Registry using just a display name.
   * @param modelMonitoringTarget modelMonitoringTarget or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setModelMonitoringTarget(GoogleCloudAiplatformV1beta1ModelMonitorModelMonitoringTarget modelMonitoringTarget) {
    this.modelMonitoringTarget = modelMonitoringTarget;
    return this;
  }

  /**
   * Immutable. Resource name of the ModelMonitor. Format:
   * `projects/{project}/locations/{location}/modelMonitors/{model_monitor}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. Resource name of the ModelMonitor. Format:
   * `projects/{project}/locations/{location}/modelMonitors/{model_monitor}`.
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional default notification spec, it can be overridden in the ModelMonitoringJob notification
   * spec.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitoringNotificationSpec getNotificationSpec() {
    return notificationSpec;
  }

  /**
   * Optional default notification spec, it can be overridden in the ModelMonitoringJob notification
   * spec.
   * @param notificationSpec notificationSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setNotificationSpec(GoogleCloudAiplatformV1beta1ModelMonitoringNotificationSpec notificationSpec) {
    this.notificationSpec = notificationSpec;
    return this;
  }

  /**
   * Optional default monitoring metrics/logs export spec, it can be overridden in the
   * ModelMonitoringJob output spec. If not specified, a default Google Cloud Storage bucket will be
   * created under your project.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitoringOutputSpec getOutputSpec() {
    return outputSpec;
  }

  /**
   * Optional default monitoring metrics/logs export spec, it can be overridden in the
   * ModelMonitoringJob output spec. If not specified, a default Google Cloud Storage bucket will be
   * created under your project.
   * @param outputSpec outputSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setOutputSpec(GoogleCloudAiplatformV1beta1ModelMonitoringOutputSpec outputSpec) {
    this.outputSpec = outputSpec;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzi() {
    return satisfiesPzi;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzi satisfiesPzi or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setSatisfiesPzi(java.lang.Boolean satisfiesPzi) {
    this.satisfiesPzi = satisfiesPzi;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzs satisfiesPzs or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setSatisfiesPzs(java.lang.Boolean satisfiesPzs) {
    this.satisfiesPzs = satisfiesPzs;
    return this;
  }

  /**
   * Optional default tabular model monitoring objective.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveSpecTabularObjective getTabularObjective() {
    return tabularObjective;
  }

  /**
   * Optional default tabular model monitoring objective.
   * @param tabularObjective tabularObjective or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setTabularObjective(GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveSpecTabularObjective tabularObjective) {
    this.tabularObjective = tabularObjective;
    return this;
  }

  /**
   * Optional training dataset used to train the model. It can serve as a reference dataset to
   * identify changes in production.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitoringInput getTrainingDataset() {
    return trainingDataset;
  }

  /**
   * Optional training dataset used to train the model. It can serve as a reference dataset to
   * identify changes in production.
   * @param trainingDataset trainingDataset or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setTrainingDataset(GoogleCloudAiplatformV1beta1ModelMonitoringInput trainingDataset) {
    this.trainingDataset = trainingDataset;
    return this;
  }

  /**
   * Output only. Timestamp when this ModelMonitor was updated most recently.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp when this ModelMonitor was updated most recently.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelMonitor setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1ModelMonitor set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1ModelMonitor) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1ModelMonitor clone() {
    return (GoogleCloudAiplatformV1beta1ModelMonitor) super.clone();
  }

}
