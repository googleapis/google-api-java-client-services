/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.classroom.model;

/**
 * An instruction to Classroom to send notifications from the `feed` to the provided destination.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Classroom API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Registration extends com.google.api.client.json.GenericJson {

  /**
   * The Cloud Pub/Sub topic that notifications are to be sent to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudPubsubTopic cloudPubsubTopic;

  /**
   * The time until which the `Registration` is effective.
   *
   * This is a read-only field assigned by the server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expiryTime;

  /**
   * Specification for the class of notifications that Classroom should deliver to the destination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Feed feed;

  /**
   * A server-generated unique identifier for this `Registration`.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String registrationId;

  /**
   * The Cloud Pub/Sub topic that notifications are to be sent to.
   * @return value or {@code null} for none
   */
  public CloudPubsubTopic getCloudPubsubTopic() {
    return cloudPubsubTopic;
  }

  /**
   * The Cloud Pub/Sub topic that notifications are to be sent to.
   * @param cloudPubsubTopic cloudPubsubTopic or {@code null} for none
   */
  public Registration setCloudPubsubTopic(CloudPubsubTopic cloudPubsubTopic) {
    this.cloudPubsubTopic = cloudPubsubTopic;
    return this;
  }

  /**
   * The time until which the `Registration` is effective.
   *
   * This is a read-only field assigned by the server.
   * @return value or {@code null} for none
   */
  public String getExpiryTime() {
    return expiryTime;
  }

  /**
   * The time until which the `Registration` is effective.
   *
   * This is a read-only field assigned by the server.
   * @param expiryTime expiryTime or {@code null} for none
   */
  public Registration setExpiryTime(String expiryTime) {
    this.expiryTime = expiryTime;
    return this;
  }

  /**
   * Specification for the class of notifications that Classroom should deliver to the destination.
   * @return value or {@code null} for none
   */
  public Feed getFeed() {
    return feed;
  }

  /**
   * Specification for the class of notifications that Classroom should deliver to the destination.
   * @param feed feed or {@code null} for none
   */
  public Registration setFeed(Feed feed) {
    this.feed = feed;
    return this;
  }

  /**
   * A server-generated unique identifier for this `Registration`.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegistrationId() {
    return registrationId;
  }

  /**
   * A server-generated unique identifier for this `Registration`.
   *
   * Read-only.
   * @param registrationId registrationId or {@code null} for none
   */
  public Registration setRegistrationId(java.lang.String registrationId) {
    this.registrationId = registrationId;
    return this;
  }

  @Override
  public Registration set(String fieldName, Object value) {
    return (Registration) super.set(fieldName, value);
  }

  @Override
  public Registration clone() {
    return (Registration) super.clone();
  }

}
