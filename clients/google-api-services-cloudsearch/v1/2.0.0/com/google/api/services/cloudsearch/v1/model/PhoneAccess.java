/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Phone access contains information required to dial into a conference using a regional phone
 * number and a PIN that is specific to that phone number.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PhoneAccess extends com.google.api.client.json.GenericJson {

  /**
   * The phone number to dial for this meeting space in INTERNATIONAL format. Full phone number with
   * a leading '+' character and whitespace separations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String formattedPhoneNumber;

  /**
   * The BCP 47/LDML language code for the language associated with this phone access. To be parsed
   * by the i18n LanguageCode utility. Examples: "es-419" for Latin American Spanish, "fr-CA" for
   * Canadian French.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * The phone number to dial for this meeting space in E.164 format. Full phone number with a
   * leading '+' character.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String phoneNumber;

  /**
   * The PIN that users must enter after dialing the given number. The PIN consists of only decimal
   * digits and the length may vary.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pin;

  /**
   * The CLDR/ISO 3166 region code for the country associated with this phone access. To be parsed
   * by the i18n RegionCode utility. Example: "SE" for Sweden.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * The phone number to dial for this meeting space in INTERNATIONAL format. Full phone number with
   * a leading '+' character and whitespace separations.
   * @return value or {@code null} for none
   */
  public java.lang.String getFormattedPhoneNumber() {
    return formattedPhoneNumber;
  }

  /**
   * The phone number to dial for this meeting space in INTERNATIONAL format. Full phone number with
   * a leading '+' character and whitespace separations.
   * @param formattedPhoneNumber formattedPhoneNumber or {@code null} for none
   */
  public PhoneAccess setFormattedPhoneNumber(java.lang.String formattedPhoneNumber) {
    this.formattedPhoneNumber = formattedPhoneNumber;
    return this;
  }

  /**
   * The BCP 47/LDML language code for the language associated with this phone access. To be parsed
   * by the i18n LanguageCode utility. Examples: "es-419" for Latin American Spanish, "fr-CA" for
   * Canadian French.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * The BCP 47/LDML language code for the language associated with this phone access. To be parsed
   * by the i18n LanguageCode utility. Examples: "es-419" for Latin American Spanish, "fr-CA" for
   * Canadian French.
   * @param languageCode languageCode or {@code null} for none
   */
  public PhoneAccess setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The phone number to dial for this meeting space in E.164 format. Full phone number with a
   * leading '+' character.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhoneNumber() {
    return phoneNumber;
  }

  /**
   * The phone number to dial for this meeting space in E.164 format. Full phone number with a
   * leading '+' character.
   * @param phoneNumber phoneNumber or {@code null} for none
   */
  public PhoneAccess setPhoneNumber(java.lang.String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * The PIN that users must enter after dialing the given number. The PIN consists of only decimal
   * digits and the length may vary.
   * @return value or {@code null} for none
   */
  public java.lang.String getPin() {
    return pin;
  }

  /**
   * The PIN that users must enter after dialing the given number. The PIN consists of only decimal
   * digits and the length may vary.
   * @param pin pin or {@code null} for none
   */
  public PhoneAccess setPin(java.lang.String pin) {
    this.pin = pin;
    return this;
  }

  /**
   * The CLDR/ISO 3166 region code for the country associated with this phone access. To be parsed
   * by the i18n RegionCode utility. Example: "SE" for Sweden.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * The CLDR/ISO 3166 region code for the country associated with this phone access. To be parsed
   * by the i18n RegionCode utility. Example: "SE" for Sweden.
   * @param regionCode regionCode or {@code null} for none
   */
  public PhoneAccess setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  @Override
  public PhoneAccess set(String fieldName, Object value) {
    return (PhoneAccess) super.set(fieldName, value);
  }

  @Override
  public PhoneAccess clone() {
    return (PhoneAccess) super.clone();
  }

}
