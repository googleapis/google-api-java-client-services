/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.metastore.v1beta;

/**
 * Service definition for DataprocMetastore (v1beta).
 *
 * <p>
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/dataproc-metastore/docs" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DataprocMetastoreRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class DataprocMetastore extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Dataproc Metastore API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://metastore.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://metastore.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public DataprocMetastore(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  DataprocMetastore(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DataprocMetastore metastore = new DataprocMetastore(...);}
   *   {@code DataprocMetastore.Projects.List request = metastore.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DataprocMetastore metastore = new DataprocMetastore(...);}
     *   {@code DataprocMetastore.Locations.List request = metastore.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the metastore server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Location> {

        private static final String REST_PATH = "v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the metastore server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the metastore server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1beta/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the metastore server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like "displayName=tokyo", and is documented in more detail in AIP-160
         * (https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       "displayName=tokyo", and is documented in more detail in AIP-160 (https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like "displayName=tokyo", and is documented in more detail in AIP-160
         * (https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the next_page_token field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the next_page_token field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the next_page_token field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Federations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DataprocMetastore metastore = new DataprocMetastore(...);}
       *   {@code DataprocMetastore.Federations.List request = metastore.federations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Federations federations() {
        return new Federations();
      }

      /**
       * The "federations" collection of methods.
       */
      public class Federations {

        /**
         * Creates a metastore federation in a project and location.
         *
         * Create a request for the method "federations.create".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The relative resource name of the location in which to create a federation service, in the
         *        following form:projects/{project_number}/locations/{location_id}.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.Federation}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.metastore.v1beta.model.Federation content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+parent}/federations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a metastore federation in a project and location.
           *
           * Create a request for the method "federations.create".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The relative resource name of the location in which to create a federation service, in the
         *        following form:projects/{project_number}/locations/{location_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.Federation}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.metastore.v1beta.model.Federation content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the location in which to create a federation
           * service, in the following form:projects/{project_number}/locations/{location_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The relative resource name of the location in which to create a federation service, in
         the following form:projects/{project_number}/locations/{location_id}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The relative resource name of the location in which to create a federation
           * service, in the following form:projects/{project_number}/locations/{location_id}.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID of the metastore federation, which is used as the final component of
           * the metastore federation's name.This value must be between 2 and 63 characters long
           * inclusive, begin with a letter, end with a letter or number, and consist of alpha-
           * numeric ASCII characters or hyphens.
           */
          @com.google.api.client.util.Key
          private java.lang.String federationId;

          /** Required. The ID of the metastore federation, which is used as the final component of the metastore
         federation's name.This value must be between 2 and 63 characters long inclusive, begin with a
         letter, end with a letter or number, and consist of alpha-numeric ASCII characters or hyphens.
           */
          public java.lang.String getFederationId() {
            return federationId;
          }

          /**
           * Required. The ID of the metastore federation, which is used as the final component of
           * the metastore federation's name.This value must be between 2 and 63 characters long
           * inclusive, begin with a letter, end with a letter or number, and consist of alpha-
           * numeric ASCII characters or hyphens.
           */
          public Create setFederationId(java.lang.String federationId) {
            this.federationId = federationId;
            return this;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
         has completed. The server will ignore subsequent requests that provide a duplicate request ID for
         at least 60 minutes after the first request.For example, if an initial request times out, followed
         by another request with the same request ID, the server ignores the second request to prevent the
         creation of duplicate commitments.The request ID must be a valid UUID
         (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
         (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single federation.
         *
         * Create a request for the method "federations.delete".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The relative resource name of the metastore federation to delete, in the following
         *        form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/federations/[^/]+$");

          /**
           * Deletes a single federation.
           *
           * Create a request for the method "federations.delete".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The relative resource name of the metastore federation to delete, in the following
         *        form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(DataprocMetastore.this, "DELETE", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the metastore federation to delete, in the
           * following
           * form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The relative resource name of the metastore federation to delete, in the following
         form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The relative resource name of the metastore federation to delete, in the
           * following
           * form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
         has completed. The server will ignore subsequent requests that provide a duplicate request ID for
         at least 60 minutes after the first request.For example, if an initial request times out, followed
         by another request with the same request ID, the server ignores the second request to prevent the
         creation of duplicate commitments.The request ID must be a valid UUID
         (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
         (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the details of a single federation.
         *
         * Create a request for the method "federations.get".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The relative resource name of the metastore federation to retrieve, in the following
         *        form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Federation> {

          private static final String REST_PATH = "v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/federations/[^/]+$");

          /**
           * Gets the details of a single federation.
           *
           * Create a request for the method "federations.get".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The relative resource name of the metastore federation to retrieve, in the following
         *        form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Federation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the metastore federation to retrieve, in the
           * following
           * form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The relative resource name of the metastore federation to retrieve, in the following
         form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The relative resource name of the metastore federation to retrieve, in the
           * following
           * form:projects/{project_number}/locations/{location_id}/federations/{federation_id}.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "federations.getIamPolicy".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

          private static final String REST_PATH = "v1beta/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/federations/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "federations.getIamPolicy".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy.Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset.The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1.To learn which resources support
           * conditions in their IAM policies, see the IAM documentation
           * (https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected.Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset.The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1.To learn
         which resources support conditions in their IAM policies, see the IAM documentation
         (https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy.Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset.The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1.To learn which resources support
           * conditions in their IAM policies, see the IAM documentation
           * (https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists federations in a project and location.
         *
         * Create a request for the method "federations.list".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The relative resource name of the location of metastore federations to list, in the
         *        following form: projects/{project_number}/locations/{location_id}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.ListFederationsResponse> {

          private static final String REST_PATH = "v1beta/{+parent}/federations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists federations in a project and location.
           *
           * Create a request for the method "federations.list".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The relative resource name of the location of metastore federations to list, in the
         *        following form: projects/{project_number}/locations/{location_id}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.ListFederationsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the location of metastore federations to list,
           * in the following form: projects/{project_number}/locations/{location_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The relative resource name of the location of metastore federations to list, in the
         following form: projects/{project_number}/locations/{location_id}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The relative resource name of the location of metastore federations to list,
           * in the following form: projects/{project_number}/locations/{location_id}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The filter to apply to list results. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. The filter to apply to list results.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. The filter to apply to list results. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Specify the ordering of results as described in Sorting Order
           * (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not specified,
           * the results will be sorted in the default order.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Specify the ordering of results as described in Sorting Order
         (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not specified, the results
         will be sorted in the default order.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. Specify the ordering of results as described in Sorting Order
           * (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not specified,
           * the results will be sorted in the default order.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of federations to return. The response may contain less
           * than the maximum number. If unspecified, no more than 500 services are returned. The
           * maximum value is 1000; values above 1000 are changed to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of federations to return. The response may contain less than the
         maximum number. If unspecified, no more than 500 services are returned. The maximum value is 1000;
         values above 1000 are changed to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of federations to return. The response may contain less
           * than the maximum number. If unspecified, no more than 500 services are returned. The
           * maximum value is 1000; values above 1000 are changed to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token, received from a previous ListFederationServices call. Provide
           * this token to retrieve the subsequent page.To retrieve the first page, supply an empty
           * page token.When paginating, other parameters provided to ListFederationServices must
           * match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token, received from a previous ListFederationServices call. Provide this token to
         retrieve the subsequent page.To retrieve the first page, supply an empty page token.When
         paginating, other parameters provided to ListFederationServices must match the call that provided
         the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token, received from a previous ListFederationServices call. Provide
           * this token to retrieve the subsequent page.To retrieve the first page, supply an empty
           * page token.When paginating, other parameters provided to ListFederationServices must
           * match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the fields of a federation.
         *
         * Create a request for the method "federations.patch".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The relative resource name of the federation, of the form:
         *        projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.Federation}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.metastore.v1beta.model.Federation content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/federations/[^/]+$");

          /**
           * Updates the fields of a federation.
           *
           * Create a request for the method "federations.patch".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The relative resource name of the federation, of the form:
         *        projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.Federation}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.metastore.v1beta.model.Federation content) {
            super(DataprocMetastore.this, "PATCH", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The relative resource name of the federation, of the form:
           * projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The relative resource name of the federation, of the form:
         projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The relative resource name of the federation, of the form:
           * projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
         has completed. The server will ignore subsequent requests that provide a duplicate request ID for
         at least 60 minutes after the first request.For example, if an initial request times out, followed
         by another request with the same request ID, the server ignores the second request to prevent the
         creation of duplicate commitments.The request ID must be a valid UUID
         (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
         (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Required. A field mask used to specify the fields to be overwritten in the metastore
           * federation resource by the update. Fields specified in the update_mask are relative to
           * the resource (not to the full request). A field is overwritten if it is in the mask.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. A field mask used to specify the fields to be overwritten in the metastore federation
         resource by the update. Fields specified in the update_mask are relative to the resource (not to
         the full request). A field is overwritten if it is in the mask.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. A field mask used to specify the fields to be overwritten in the metastore
           * federation resource by the update. Fields specified in the update_mask are relative to
           * the resource (not to the full request). A field is overwritten if it is in the mask.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
         * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
         *
         * Create a request for the method "federations.setIamPolicy".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

          private static final String REST_PATH = "v1beta/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/federations/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can
           * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "federations.setIamPolicy".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "federations.testIamPermissions".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1beta/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/federations/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
           * is designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "federations.testIamPermissions".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/federations/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DataprocMetastore metastore = new DataprocMetastore(...);}
       *   {@code DataprocMetastore.Operations.List request = metastore.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns google.rpc.Code.UNIMPLEMENTED.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Empty> {

          private static final String REST_PATH = "v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns google.rpc.Code.UNIMPLEMENTED.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(DataprocMetastore.this, "DELETE", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the
         * binding to use different resource name schemes, such as users/operations. To override the
         * binding, API services can add a binding such as "/v1/{name=users}/operations" to their service
         * configuration. For backwards compatibility, the default name includes the operations collection
         * id, however overriding users must ensure the name binding is the parent resource, without the
         * operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1beta/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override
           * the binding to use different resource name schemes, such as users/operations. To override the
           * binding, API services can add a binding such as "/v1/{name=users}/operations" to their service
           * configuration. For backwards compatibility, the default name includes the operations collection
           * id, however overriding users must ensure the name binding is the parent resource, without the
           * operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Services collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DataprocMetastore metastore = new DataprocMetastore(...);}
       *   {@code DataprocMetastore.Services.List request = metastore.services().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Services services() {
        return new Services();
      }

      /**
       * The "services" collection of methods.
       */
      public class Services {

        /**
         * Alter metadata resource location. The metadata resource can be a database, table, or partition.
         * This functionality only updates the parent directory for the respective metadata resource and
         * does not transfer any existing data to the new location.
         *
         * Create a request for the method "services.alterLocation".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link AlterLocation#execute()} method to invoke the remote operation.
         *
         * @param service Required. The relative resource name of the metastore service to mutate metadata, in the following
         *        format:projects/{project_id}/locations/{location_id}/services/{service_id}.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.AlterMetadataResourceLocationRequest}
         * @return the request
         */
        public AlterLocation alterLocation(java.lang.String service, com.google.api.services.metastore.v1beta.model.AlterMetadataResourceLocationRequest content) throws java.io.IOException {
          AlterLocation result = new AlterLocation(service, content);
          initialize(result);
          return result;
        }

        public class AlterLocation extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+service}:alterLocation";

          private final java.util.regex.Pattern SERVICE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Alter metadata resource location. The metadata resource can be a database, table, or partition.
           * This functionality only updates the parent directory for the respective metadata resource and
           * does not transfer any existing data to the new location.
           *
           * Create a request for the method "services.alterLocation".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link AlterLocation#execute()} method to invoke the remote
           * operation. <p> {@link AlterLocation#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param service Required. The relative resource name of the metastore service to mutate metadata, in the following
         *        format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.AlterMetadataResourceLocationRequest}
           * @since 1.13
           */
          protected AlterLocation(java.lang.String service, com.google.api.services.metastore.v1beta.model.AlterMetadataResourceLocationRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.service = com.google.api.client.util.Preconditions.checkNotNull(service, "Required parameter service must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public AlterLocation set$Xgafv(java.lang.String $Xgafv) {
            return (AlterLocation) super.set$Xgafv($Xgafv);
          }

          @Override
          public AlterLocation setAccessToken(java.lang.String accessToken) {
            return (AlterLocation) super.setAccessToken(accessToken);
          }

          @Override
          public AlterLocation setAlt(java.lang.String alt) {
            return (AlterLocation) super.setAlt(alt);
          }

          @Override
          public AlterLocation setCallback(java.lang.String callback) {
            return (AlterLocation) super.setCallback(callback);
          }

          @Override
          public AlterLocation setFields(java.lang.String fields) {
            return (AlterLocation) super.setFields(fields);
          }

          @Override
          public AlterLocation setKey(java.lang.String key) {
            return (AlterLocation) super.setKey(key);
          }

          @Override
          public AlterLocation setOauthToken(java.lang.String oauthToken) {
            return (AlterLocation) super.setOauthToken(oauthToken);
          }

          @Override
          public AlterLocation setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AlterLocation) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AlterLocation setQuotaUser(java.lang.String quotaUser) {
            return (AlterLocation) super.setQuotaUser(quotaUser);
          }

          @Override
          public AlterLocation setUploadType(java.lang.String uploadType) {
            return (AlterLocation) super.setUploadType(uploadType);
          }

          @Override
          public AlterLocation setUploadProtocol(java.lang.String uploadProtocol) {
            return (AlterLocation) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the metastore service to mutate metadata, in
           * the following
           * format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String service;

          /** Required. The relative resource name of the metastore service to mutate metadata, in the following
         format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public java.lang.String getService() {
            return service;
          }

          /**
           * Required. The relative resource name of the metastore service to mutate metadata, in
           * the following
           * format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public AlterLocation setService(java.lang.String service) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.service = service;
            return this;
          }

          @Override
          public AlterLocation set(String parameterName, Object value) {
            return (AlterLocation) super.set(parameterName, value);
          }
        }
        /**
         * Creates a metastore service in a project and location.
         *
         * Create a request for the method "services.create".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The relative resource name of the location in which to create a metastore service, in the
         *        following form:projects/{project_number}/locations/{location_id}.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.Service}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.metastore.v1beta.model.Service content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+parent}/services";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a metastore service in a project and location.
           *
           * Create a request for the method "services.create".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The relative resource name of the location in which to create a metastore service, in the
         *        following form:projects/{project_number}/locations/{location_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.Service}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.metastore.v1beta.model.Service content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the location in which to create a metastore
           * service, in the following form:projects/{project_number}/locations/{location_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The relative resource name of the location in which to create a metastore service, in the
         following form:projects/{project_number}/locations/{location_id}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The relative resource name of the location in which to create a metastore
           * service, in the following form:projects/{project_number}/locations/{location_id}.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
         has completed. The server will ignore subsequent requests that provide a duplicate request ID for
         at least 60 minutes after the first request.For example, if an initial request times out, followed
         by another request with the same request ID, the server ignores the second request to prevent the
         creation of duplicate commitments.The request ID must be a valid UUID
         (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
         (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Required. The ID of the metastore service, which is used as the final component of the
           * metastore service's name.This value must be between 2 and 63 characters long inclusive,
           * begin with a letter, end with a letter or number, and consist of alpha-numeric ASCII
           * characters or hyphens.
           */
          @com.google.api.client.util.Key
          private java.lang.String serviceId;

          /** Required. The ID of the metastore service, which is used as the final component of the metastore
         service's name.This value must be between 2 and 63 characters long inclusive, begin with a letter,
         end with a letter or number, and consist of alpha-numeric ASCII characters or hyphens.
           */
          public java.lang.String getServiceId() {
            return serviceId;
          }

          /**
           * Required. The ID of the metastore service, which is used as the final component of the
           * metastore service's name.This value must be between 2 and 63 characters long inclusive,
           * begin with a letter, end with a letter or number, and consist of alpha-numeric ASCII
           * characters or hyphens.
           */
          public Create setServiceId(java.lang.String serviceId) {
            this.serviceId = serviceId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single service.
         *
         * Create a request for the method "services.delete".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The relative resource name of the metastore service to delete, in the following
         *        form:projects/{project_number}/locations/{location_id}/services/{service_id}.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Deletes a single service.
           *
           * Create a request for the method "services.delete".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The relative resource name of the metastore service to delete, in the following
         *        form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(DataprocMetastore.this, "DELETE", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the metastore service to delete, in the
           * following form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The relative resource name of the metastore service to delete, in the following
         form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The relative resource name of the metastore service to delete, in the
           * following form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
         has completed. The server will ignore subsequent requests that provide a duplicate request ID for
         at least 60 minutes after the first request.For example, if an initial request times out, followed
         by another request with the same request ID, the server ignores the second request to prevent the
         creation of duplicate commitments.The request ID must be a valid UUID
         (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
         (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Exports metadata from a service.
         *
         * Create a request for the method "services.exportMetadata".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link ExportMetadata#execute()} method to invoke the remote operation.
         *
         * @param service Required. The relative resource name of the metastore service to run export, in the following
         *        form:projects/{project_id}/locations/{location_id}/services/{service_id}.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.ExportMetadataRequest}
         * @return the request
         */
        public ExportMetadata exportMetadata(java.lang.String service, com.google.api.services.metastore.v1beta.model.ExportMetadataRequest content) throws java.io.IOException {
          ExportMetadata result = new ExportMetadata(service, content);
          initialize(result);
          return result;
        }

        public class ExportMetadata extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+service}:exportMetadata";

          private final java.util.regex.Pattern SERVICE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Exports metadata from a service.
           *
           * Create a request for the method "services.exportMetadata".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link ExportMetadata#execute()} method to invoke the remote
           * operation. <p> {@link ExportMetadata#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param service Required. The relative resource name of the metastore service to run export, in the following
         *        form:projects/{project_id}/locations/{location_id}/services/{service_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.ExportMetadataRequest}
           * @since 1.13
           */
          protected ExportMetadata(java.lang.String service, com.google.api.services.metastore.v1beta.model.ExportMetadataRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.service = com.google.api.client.util.Preconditions.checkNotNull(service, "Required parameter service must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public ExportMetadata set$Xgafv(java.lang.String $Xgafv) {
            return (ExportMetadata) super.set$Xgafv($Xgafv);
          }

          @Override
          public ExportMetadata setAccessToken(java.lang.String accessToken) {
            return (ExportMetadata) super.setAccessToken(accessToken);
          }

          @Override
          public ExportMetadata setAlt(java.lang.String alt) {
            return (ExportMetadata) super.setAlt(alt);
          }

          @Override
          public ExportMetadata setCallback(java.lang.String callback) {
            return (ExportMetadata) super.setCallback(callback);
          }

          @Override
          public ExportMetadata setFields(java.lang.String fields) {
            return (ExportMetadata) super.setFields(fields);
          }

          @Override
          public ExportMetadata setKey(java.lang.String key) {
            return (ExportMetadata) super.setKey(key);
          }

          @Override
          public ExportMetadata setOauthToken(java.lang.String oauthToken) {
            return (ExportMetadata) super.setOauthToken(oauthToken);
          }

          @Override
          public ExportMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ExportMetadata) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ExportMetadata setQuotaUser(java.lang.String quotaUser) {
            return (ExportMetadata) super.setQuotaUser(quotaUser);
          }

          @Override
          public ExportMetadata setUploadType(java.lang.String uploadType) {
            return (ExportMetadata) super.setUploadType(uploadType);
          }

          @Override
          public ExportMetadata setUploadProtocol(java.lang.String uploadProtocol) {
            return (ExportMetadata) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the metastore service to run export, in the
           * following form:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String service;

          /** Required. The relative resource name of the metastore service to run export, in the following
         form:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public java.lang.String getService() {
            return service;
          }

          /**
           * Required. The relative resource name of the metastore service to run export, in the
           * following form:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public ExportMetadata setService(java.lang.String service) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.service = service;
            return this;
          }

          @Override
          public ExportMetadata set(String parameterName, Object value) {
            return (ExportMetadata) super.set(parameterName, value);
          }
        }
        /**
         * Gets the details of a single service.
         *
         * Create a request for the method "services.get".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The relative resource name of the metastore service to retrieve, in the following
         *        form:projects/{project_number}/locations/{location_id}/services/{service_id}.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Service> {

          private static final String REST_PATH = "v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Gets the details of a single service.
           *
           * Create a request for the method "services.get".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The relative resource name of the metastore service to retrieve, in the following
         *        form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Service.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the metastore service to retrieve, in the
           * following form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The relative resource name of the metastore service to retrieve, in the following
         form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The relative resource name of the metastore service to retrieve, in the
           * following form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "services.getIamPolicy".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

          private static final String REST_PATH = "v1beta/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "services.getIamPolicy".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy.Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset.The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1.To learn which resources support
           * conditions in their IAM policies, see the IAM documentation
           * (https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected.Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset.The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1.To learn
         which resources support conditions in their IAM policies, see the IAM documentation
         (https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy.Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset.The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1.To learn which resources support
           * conditions in their IAM policies, see the IAM documentation
           * (https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists services in a project and location.
         *
         * Create a request for the method "services.list".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The relative resource name of the location of metastore services to list, in the following
         *        form:projects/{project_number}/locations/{location_id}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.ListServicesResponse> {

          private static final String REST_PATH = "v1beta/{+parent}/services";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists services in a project and location.
           *
           * Create a request for the method "services.list".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The relative resource name of the location of metastore services to list, in the following
         *        form:projects/{project_number}/locations/{location_id}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.ListServicesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the location of metastore services to list, in
           * the following form:projects/{project_number}/locations/{location_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The relative resource name of the location of metastore services to list, in the
         following form:projects/{project_number}/locations/{location_id}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The relative resource name of the location of metastore services to list, in
           * the following form:projects/{project_number}/locations/{location_id}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The filter to apply to list results. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. The filter to apply to list results.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. The filter to apply to list results. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Specify the ordering of results as described in Sorting Order
           * (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not specified,
           * the results will be sorted in the default order.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Specify the ordering of results as described in Sorting Order
         (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not specified, the results
         will be sorted in the default order.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. Specify the ordering of results as described in Sorting Order
           * (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not specified,
           * the results will be sorted in the default order.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of services to return. The response may contain less than
           * the maximum number. If unspecified, no more than 500 services are returned. The maximum
           * value is 1000; values above 1000 are changed to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of services to return. The response may contain less than the maximum
         number. If unspecified, no more than 500 services are returned. The maximum value is 1000; values
         above 1000 are changed to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of services to return. The response may contain less than
           * the maximum number. If unspecified, no more than 500 services are returned. The maximum
           * value is 1000; values above 1000 are changed to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token, received from a previous DataprocMetastore.ListServices call.
           * Provide this token to retrieve the subsequent page.To retrieve the first page, supply
           * an empty page token.When paginating, other parameters provided to
           * DataprocMetastore.ListServices must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token, received from a previous DataprocMetastore.ListServices call. Provide this
         token to retrieve the subsequent page.To retrieve the first page, supply an empty page token.When
         paginating, other parameters provided to DataprocMetastore.ListServices must match the call that
         provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token, received from a previous DataprocMetastore.ListServices call.
           * Provide this token to retrieve the subsequent page.To retrieve the first page, supply
           * an empty page token.When paginating, other parameters provided to
           * DataprocMetastore.ListServices must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Move a table to another database.
         *
         * Create a request for the method "services.moveTableToDatabase".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link MoveTableToDatabase#execute()} method to invoke the remote operation.
         *
         * @param service Required. The relative resource name of the metastore service to mutate metadata, in the following
         *        format:projects/{project_id}/locations/{location_id}/services/{service_id}.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.MoveTableToDatabaseRequest}
         * @return the request
         */
        public MoveTableToDatabase moveTableToDatabase(java.lang.String service, com.google.api.services.metastore.v1beta.model.MoveTableToDatabaseRequest content) throws java.io.IOException {
          MoveTableToDatabase result = new MoveTableToDatabase(service, content);
          initialize(result);
          return result;
        }

        public class MoveTableToDatabase extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+service}:moveTableToDatabase";

          private final java.util.regex.Pattern SERVICE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Move a table to another database.
           *
           * Create a request for the method "services.moveTableToDatabase".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link MoveTableToDatabase#execute()} method to invoke the remote
           * operation. <p> {@link MoveTableToDatabase#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param service Required. The relative resource name of the metastore service to mutate metadata, in the following
         *        format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.MoveTableToDatabaseRequest}
           * @since 1.13
           */
          protected MoveTableToDatabase(java.lang.String service, com.google.api.services.metastore.v1beta.model.MoveTableToDatabaseRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.service = com.google.api.client.util.Preconditions.checkNotNull(service, "Required parameter service must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public MoveTableToDatabase set$Xgafv(java.lang.String $Xgafv) {
            return (MoveTableToDatabase) super.set$Xgafv($Xgafv);
          }

          @Override
          public MoveTableToDatabase setAccessToken(java.lang.String accessToken) {
            return (MoveTableToDatabase) super.setAccessToken(accessToken);
          }

          @Override
          public MoveTableToDatabase setAlt(java.lang.String alt) {
            return (MoveTableToDatabase) super.setAlt(alt);
          }

          @Override
          public MoveTableToDatabase setCallback(java.lang.String callback) {
            return (MoveTableToDatabase) super.setCallback(callback);
          }

          @Override
          public MoveTableToDatabase setFields(java.lang.String fields) {
            return (MoveTableToDatabase) super.setFields(fields);
          }

          @Override
          public MoveTableToDatabase setKey(java.lang.String key) {
            return (MoveTableToDatabase) super.setKey(key);
          }

          @Override
          public MoveTableToDatabase setOauthToken(java.lang.String oauthToken) {
            return (MoveTableToDatabase) super.setOauthToken(oauthToken);
          }

          @Override
          public MoveTableToDatabase setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (MoveTableToDatabase) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public MoveTableToDatabase setQuotaUser(java.lang.String quotaUser) {
            return (MoveTableToDatabase) super.setQuotaUser(quotaUser);
          }

          @Override
          public MoveTableToDatabase setUploadType(java.lang.String uploadType) {
            return (MoveTableToDatabase) super.setUploadType(uploadType);
          }

          @Override
          public MoveTableToDatabase setUploadProtocol(java.lang.String uploadProtocol) {
            return (MoveTableToDatabase) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the metastore service to mutate metadata, in
           * the following
           * format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String service;

          /** Required. The relative resource name of the metastore service to mutate metadata, in the following
         format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public java.lang.String getService() {
            return service;
          }

          /**
           * Required. The relative resource name of the metastore service to mutate metadata, in
           * the following
           * format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public MoveTableToDatabase setService(java.lang.String service) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.service = service;
            return this;
          }

          @Override
          public MoveTableToDatabase set(String parameterName, Object value) {
            return (MoveTableToDatabase) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single service.
         *
         * Create a request for the method "services.patch".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The relative resource name of the metastore service, in the following
         *        format:projects/{project_number}/locations/{location_id}/services/{service_id}.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.Service}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.metastore.v1beta.model.Service content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Updates the parameters of a single service.
           *
           * Create a request for the method "services.patch".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The relative resource name of the metastore service, in the following
         *        format:projects/{project_number}/locations/{location_id}/services/{service_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.Service}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.metastore.v1beta.model.Service content) {
            super(DataprocMetastore.this, "PATCH", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The relative resource name of the metastore service, in the following
           * format:projects/{project_number}/locations/{location_id}/services/{service_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The relative resource name of the metastore service, in the following
         format:projects/{project_number}/locations/{location_id}/services/{service_id}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The relative resource name of the metastore service, in the following
           * format:projects/{project_number}/locations/{location_id}/services/{service_id}.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
         has completed. The server will ignore subsequent requests that provide a duplicate request ID for
         at least 60 minutes after the first request.For example, if an initial request times out, followed
         by another request with the same request ID, the server ignores the second request to prevent the
         creation of duplicate commitments.The request ID must be a valid UUID
         (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
         (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
           * request if it has completed. The server will ignore subsequent requests that provide a
           * duplicate request ID for at least 60 minutes after the first request.For example, if an
           * initial request times out, followed by another request with the same request ID, the
           * server ignores the second request to prevent the creation of duplicate commitments.The
           * request ID must be a valid UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           * (00000000-0000-0000-0000-000000000000) is not supported.
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Required. A field mask used to specify the fields to be overwritten in the metastore
           * service resource by the update. Fields specified in the update_mask are relative to the
           * resource (not to the full request). A field is overwritten if it is in the mask.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. A field mask used to specify the fields to be overwritten in the metastore service
         resource by the update. Fields specified in the update_mask are relative to the resource (not to
         the full request). A field is overwritten if it is in the mask.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. A field mask used to specify the fields to be overwritten in the metastore
           * service resource by the update. Fields specified in the update_mask are relative to the
           * resource (not to the full request). A field is overwritten if it is in the mask.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Query DPMS metadata.
         *
         * Create a request for the method "services.queryMetadata".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link QueryMetadata#execute()} method to invoke the remote operation.
         *
         * @param service Required. The relative resource name of the metastore service to query metadata, in the following
         *        format:projects/{project_id}/locations/{location_id}/services/{service_id}.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.QueryMetadataRequest}
         * @return the request
         */
        public QueryMetadata queryMetadata(java.lang.String service, com.google.api.services.metastore.v1beta.model.QueryMetadataRequest content) throws java.io.IOException {
          QueryMetadata result = new QueryMetadata(service, content);
          initialize(result);
          return result;
        }

        public class QueryMetadata extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+service}:queryMetadata";

          private final java.util.regex.Pattern SERVICE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Query DPMS metadata.
           *
           * Create a request for the method "services.queryMetadata".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link QueryMetadata#execute()} method to invoke the remote
           * operation. <p> {@link QueryMetadata#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param service Required. The relative resource name of the metastore service to query metadata, in the following
         *        format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.QueryMetadataRequest}
           * @since 1.13
           */
          protected QueryMetadata(java.lang.String service, com.google.api.services.metastore.v1beta.model.QueryMetadataRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.service = com.google.api.client.util.Preconditions.checkNotNull(service, "Required parameter service must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public QueryMetadata set$Xgafv(java.lang.String $Xgafv) {
            return (QueryMetadata) super.set$Xgafv($Xgafv);
          }

          @Override
          public QueryMetadata setAccessToken(java.lang.String accessToken) {
            return (QueryMetadata) super.setAccessToken(accessToken);
          }

          @Override
          public QueryMetadata setAlt(java.lang.String alt) {
            return (QueryMetadata) super.setAlt(alt);
          }

          @Override
          public QueryMetadata setCallback(java.lang.String callback) {
            return (QueryMetadata) super.setCallback(callback);
          }

          @Override
          public QueryMetadata setFields(java.lang.String fields) {
            return (QueryMetadata) super.setFields(fields);
          }

          @Override
          public QueryMetadata setKey(java.lang.String key) {
            return (QueryMetadata) super.setKey(key);
          }

          @Override
          public QueryMetadata setOauthToken(java.lang.String oauthToken) {
            return (QueryMetadata) super.setOauthToken(oauthToken);
          }

          @Override
          public QueryMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (QueryMetadata) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public QueryMetadata setQuotaUser(java.lang.String quotaUser) {
            return (QueryMetadata) super.setQuotaUser(quotaUser);
          }

          @Override
          public QueryMetadata setUploadType(java.lang.String uploadType) {
            return (QueryMetadata) super.setUploadType(uploadType);
          }

          @Override
          public QueryMetadata setUploadProtocol(java.lang.String uploadProtocol) {
            return (QueryMetadata) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the metastore service to query metadata, in the
           * following format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String service;

          /** Required. The relative resource name of the metastore service to query metadata, in the following
         format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public java.lang.String getService() {
            return service;
          }

          /**
           * Required. The relative resource name of the metastore service to query metadata, in the
           * following format:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public QueryMetadata setService(java.lang.String service) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.service = service;
            return this;
          }

          @Override
          public QueryMetadata set(String parameterName, Object value) {
            return (QueryMetadata) super.set(parameterName, value);
          }
        }
        /**
         * Removes the attached IAM policies for a resource
         *
         * Create a request for the method "services.removeIamPolicy".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link RemoveIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource Required. The relative resource name of the dataplane resource to remove IAM policy, in the
         *        following form:projects/{project_id}/locations/{location_id}/services/{service_id}/databas
         *        es/{database_id} or projects/{project_id}/locations/{location_id}/services/{service_id}/da
         *        tabases/{database_id}/tables/{table_id}.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.RemoveIamPolicyRequest}
         * @return the request
         */
        public RemoveIamPolicy removeIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.RemoveIamPolicyRequest content) throws java.io.IOException {
          RemoveIamPolicy result = new RemoveIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class RemoveIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.RemoveIamPolicyResponse> {

          private static final String REST_PATH = "v1beta/{+resource}:removeIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/.*$");

          /**
           * Removes the attached IAM policies for a resource
           *
           * Create a request for the method "services.removeIamPolicy".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link RemoveIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link RemoveIamPolicy#initialize(com.google.api.client.googleapis.services.Abst
           * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param resource Required. The relative resource name of the dataplane resource to remove IAM policy, in the
         *        following form:projects/{project_id}/locations/{location_id}/services/{service_id}/databas
         *        es/{database_id} or projects/{project_id}/locations/{location_id}/services/{service_id}/da
         *        tabases/{database_id}/tables/{table_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.RemoveIamPolicyRequest}
           * @since 1.13
           */
          protected RemoveIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.RemoveIamPolicyRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.RemoveIamPolicyResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+/.*$");
            }
          }

          @Override
          public RemoveIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (RemoveIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public RemoveIamPolicy setAccessToken(java.lang.String accessToken) {
            return (RemoveIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public RemoveIamPolicy setAlt(java.lang.String alt) {
            return (RemoveIamPolicy) super.setAlt(alt);
          }

          @Override
          public RemoveIamPolicy setCallback(java.lang.String callback) {
            return (RemoveIamPolicy) super.setCallback(callback);
          }

          @Override
          public RemoveIamPolicy setFields(java.lang.String fields) {
            return (RemoveIamPolicy) super.setFields(fields);
          }

          @Override
          public RemoveIamPolicy setKey(java.lang.String key) {
            return (RemoveIamPolicy) super.setKey(key);
          }

          @Override
          public RemoveIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (RemoveIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public RemoveIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (RemoveIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public RemoveIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (RemoveIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public RemoveIamPolicy setUploadType(java.lang.String uploadType) {
            return (RemoveIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public RemoveIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (RemoveIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the dataplane resource to remove IAM policy, in
           * the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/
           * databases/{database_id} or projects/{project_id}/locations/{location_id}/services/{serv
           * ice_id}/databases/{database_id}/tables/{table_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** Required. The relative resource name of the dataplane resource to remove IAM policy, in the
         following
         form:projects/{project_id}/locations/{location_id}/services/{service_id}/databases/{database_id} or
         projects/{project_id}/locations/{location_id}/services/{service_id}/databases/{database_id}/tables/
         {table_id}.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * Required. The relative resource name of the dataplane resource to remove IAM policy, in
           * the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/
           * databases/{database_id} or projects/{project_id}/locations/{location_id}/services/{serv
           * ice_id}/databases/{database_id}/tables/{table_id}.
           */
          public RemoveIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+/.*$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public RemoveIamPolicy set(String parameterName, Object value) {
            return (RemoveIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Restores a service from a backup.
         *
         * Create a request for the method "services.restore".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link Restore#execute()} method to invoke the remote operation.
         *
         * @param service Required. The relative resource name of the metastore service to run restore, in the following
         *        form:projects/{project_id}/locations/{location_id}/services/{service_id}.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.RestoreServiceRequest}
         * @return the request
         */
        public Restore restore(java.lang.String service, com.google.api.services.metastore.v1beta.model.RestoreServiceRequest content) throws java.io.IOException {
          Restore result = new Restore(service, content);
          initialize(result);
          return result;
        }

        public class Restore extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

          private static final String REST_PATH = "v1beta/{+service}:restore";

          private final java.util.regex.Pattern SERVICE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Restores a service from a backup.
           *
           * Create a request for the method "services.restore".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
           * <p> {@link
           * Restore#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param service Required. The relative resource name of the metastore service to run restore, in the following
         *        form:projects/{project_id}/locations/{location_id}/services/{service_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.RestoreServiceRequest}
           * @since 1.13
           */
          protected Restore(java.lang.String service, com.google.api.services.metastore.v1beta.model.RestoreServiceRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
            this.service = com.google.api.client.util.Preconditions.checkNotNull(service, "Required parameter service must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public Restore set$Xgafv(java.lang.String $Xgafv) {
            return (Restore) super.set$Xgafv($Xgafv);
          }

          @Override
          public Restore setAccessToken(java.lang.String accessToken) {
            return (Restore) super.setAccessToken(accessToken);
          }

          @Override
          public Restore setAlt(java.lang.String alt) {
            return (Restore) super.setAlt(alt);
          }

          @Override
          public Restore setCallback(java.lang.String callback) {
            return (Restore) super.setCallback(callback);
          }

          @Override
          public Restore setFields(java.lang.String fields) {
            return (Restore) super.setFields(fields);
          }

          @Override
          public Restore setKey(java.lang.String key) {
            return (Restore) super.setKey(key);
          }

          @Override
          public Restore setOauthToken(java.lang.String oauthToken) {
            return (Restore) super.setOauthToken(oauthToken);
          }

          @Override
          public Restore setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Restore) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Restore setQuotaUser(java.lang.String quotaUser) {
            return (Restore) super.setQuotaUser(quotaUser);
          }

          @Override
          public Restore setUploadType(java.lang.String uploadType) {
            return (Restore) super.setUploadType(uploadType);
          }

          @Override
          public Restore setUploadProtocol(java.lang.String uploadProtocol) {
            return (Restore) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The relative resource name of the metastore service to run restore, in the
           * following form:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          @com.google.api.client.util.Key
          private java.lang.String service;

          /** Required. The relative resource name of the metastore service to run restore, in the following
         form:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public java.lang.String getService() {
            return service;
          }

          /**
           * Required. The relative resource name of the metastore service to run restore, in the
           * following form:projects/{project_id}/locations/{location_id}/services/{service_id}.
           */
          public Restore setService(java.lang.String service) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SERVICE_PATTERN.matcher(service).matches(),
                  "Parameter service must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.service = service;
            return this;
          }

          @Override
          public Restore set(String parameterName, Object value) {
            return (Restore) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
         * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
         *
         * Create a request for the method "services.setIamPolicy".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

          private static final String REST_PATH = "v1beta/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can
           * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "services.setIamPolicy".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "services.testIamPermissions".
         *
         * This request holds the parameters needed by the metastore server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1beta/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
           * is designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "services.testIamPermissions".
           *
           * This request holds the parameters needed by the the metastore server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) {
            super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Backups collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DataprocMetastore metastore = new DataprocMetastore(...);}
         *   {@code DataprocMetastore.Backups.List request = metastore.backups().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Backups backups() {
          return new Backups();
        }

        /**
         * The "backups" collection of methods.
         */
        public class Backups {

          /**
           * Creates a new backup in a given project and location.
           *
           * Create a request for the method "backups.create".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The relative resource name of the service in which to create a backup of the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.Backup}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.metastore.v1beta.model.Backup content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

            private static final String REST_PATH = "v1beta/{+parent}/backups";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

            /**
             * Creates a new backup in a given project and location.
             *
             * Create a request for the method "backups.create".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The relative resource name of the service in which to create a backup of the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}.
             * @param content the {@link com.google.api.services.metastore.v1beta.model.Backup}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.metastore.v1beta.model.Backup content) {
              super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The relative resource name of the service in which to create a backup of
             * the following
             * form:projects/{project_number}/locations/{location_id}/services/{service_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The relative resource name of the service in which to create a backup of the following
           form:projects/{project_number}/locations/{location_id}/services/{service_id}.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The relative resource name of the service in which to create a backup of
             * the following
             * form:projects/{project_number}/locations/{location_id}/services/{service_id}.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID of the backup, which is used as the final component of the backup's
             * name.This value must be between 1 and 64 characters long, begin with a letter, end
             * with a letter or number, and consist of alpha-numeric ASCII characters or hyphens.
             */
            @com.google.api.client.util.Key
            private java.lang.String backupId;

            /** Required. The ID of the backup, which is used as the final component of the backup's name.This
           value must be between 1 and 64 characters long, begin with a letter, end with a letter or number,
           and consist of alpha-numeric ASCII characters or hyphens.
             */
            public java.lang.String getBackupId() {
              return backupId;
            }

            /**
             * Required. The ID of the backup, which is used as the final component of the backup's
             * name.This value must be between 1 and 64 characters long, begin with a letter, end
             * with a letter or number, and consist of alpha-numeric ASCII characters or hyphens.
             */
            public Create setBackupId(java.lang.String backupId) {
              this.backupId = backupId;
              return this;
            }

            /**
             * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
             * request if it has completed. The server will ignore subsequent requests that provide
             * a duplicate request ID for at least 60 minutes after the first request.For example,
             * if an initial request times out, followed by another request with the same request
             * ID, the server ignores the second request to prevent the creation of duplicate
             * commitments.The request ID must be a valid UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
             * (00000000-0000-0000-0000-000000000000) is not supported.
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
           has completed. The server will ignore subsequent requests that provide a duplicate request ID for
           at least 60 minutes after the first request.For example, if an initial request times out, followed
           by another request with the same request ID, the server ignores the second request to prevent the
           creation of duplicate commitments.The request ID must be a valid UUID
           (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           (00000000-0000-0000-0000-000000000000) is not supported.
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
             * request if it has completed. The server will ignore subsequent requests that provide
             * a duplicate request ID for at least 60 minutes after the first request.For example,
             * if an initial request times out, followed by another request with the same request
             * ID, the server ignores the second request to prevent the creation of duplicate
             * commitments.The request ID must be a valid UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
             * (00000000-0000-0000-0000-000000000000) is not supported.
             */
            public Create setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single backup.
           *
           * Create a request for the method "backups.delete".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The relative resource name of the backup to delete, in the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{back
           *        up_id}.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

            private static final String REST_PATH = "v1beta/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");

            /**
             * Deletes a single backup.
             *
             * Create a request for the method "backups.delete".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The relative resource name of the backup to delete, in the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{back
           *        up_id}.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DataprocMetastore.this, "DELETE", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The relative resource name of the backup to delete, in the following form:p
             * rojects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backu
             * p_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The relative resource name of the backup to delete, in the following
           form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The relative resource name of the backup to delete, in the following form:p
             * rojects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backu
             * p_id}.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
             * request if it has completed. The server will ignore subsequent requests that provide
             * a duplicate request ID for at least 60 minutes after the first request.For example,
             * if an initial request times out, followed by another request with the same request
             * ID, the server ignores the second request to prevent the creation of duplicate
             * commitments.The request ID must be a valid UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
             * (00000000-0000-0000-0000-000000000000) is not supported.
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
           has completed. The server will ignore subsequent requests that provide a duplicate request ID for
           at least 60 minutes after the first request.For example, if an initial request times out, followed
           by another request with the same request ID, the server ignores the second request to prevent the
           creation of duplicate commitments.The request ID must be a valid UUID
           (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           (00000000-0000-0000-0000-000000000000) is not supported.
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
             * request if it has completed. The server will ignore subsequent requests that provide
             * a duplicate request ID for at least 60 minutes after the first request.For example,
             * if an initial request times out, followed by another request with the same request
             * ID, the server ignores the second request to prevent the creation of duplicate
             * commitments.The request ID must be a valid UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
             * (00000000-0000-0000-0000-000000000000) is not supported.
             */
            public Delete setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single backup.
           *
           * Create a request for the method "backups.get".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The relative resource name of the backup to retrieve, in the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{back
           *        up_id}.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Backup> {

            private static final String REST_PATH = "v1beta/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");

            /**
             * Gets details of a single backup.
             *
             * Create a request for the method "backups.get".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The relative resource name of the backup to retrieve, in the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{back
           *        up_id}.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Backup.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The relative resource name of the backup to retrieve, in the following form
             * :projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{bac
             * kup_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The relative resource name of the backup to retrieve, in the following
           form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The relative resource name of the backup to retrieve, in the following form
             * :projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{bac
             * kup_id}.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "backups.getIamPolicy".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

            private static final String REST_PATH = "v1beta/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "backups.getIamPolicy".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See Resource names
             * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             * this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See Resource names
           (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See Resource names
             * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             * this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy.Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be
             * rejected.Requests for policies with any conditional role bindings must specify
             * version 3. Policies with no conditional role bindings may specify any valid value or
             * leave the field unset.The policy in the response might use the policy version that
             * you specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1.To learn which resources support conditions in their IAM policies, see the IAM
             * documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected.Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset.The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1.To learn
           which resources support conditions in their IAM policies, see the IAM documentation
           (https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy.Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be
             * rejected.Requests for policies with any conditional role bindings must specify
             * version 3. Policies with no conditional role bindings may specify any valid value or
             * leave the field unset.The policy in the response might use the policy version that
             * you specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1.To learn which resources support conditions in their IAM policies, see the IAM
             * documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists backups in a service.
           *
           * Create a request for the method "backups.list".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The relative resource name of the service whose backups to list, in the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.ListBackupsResponse> {

            private static final String REST_PATH = "v1beta/{+parent}/backups";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

            /**
             * Lists backups in a service.
             *
             * Create a request for the method "backups.list".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The relative resource name of the service whose backups to list, in the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.ListBackupsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The relative resource name of the service whose backups to list, in the
             * following
             * form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The relative resource name of the service whose backups to list, in the following
           form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The relative resource name of the service whose backups to list, in the
             * following
             * form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The filter to apply to list results. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. The filter to apply to list results.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Optional. The filter to apply to list results. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Optional. Specify the ordering of results as described in Sorting Order
             * (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not
             * specified, the results will be sorted in the default order.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. Specify the ordering of results as described in Sorting Order
           (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not specified, the results
           will be sorted in the default order.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * Optional. Specify the ordering of results as described in Sorting Order
             * (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not
             * specified, the results will be sorted in the default order.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Optional. The maximum number of backups to return. The response may contain less than
             * the maximum number. If unspecified, no more than 500 backups are returned. The
             * maximum value is 1000; values above 1000 are changed to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of backups to return. The response may contain less than the maximum
           number. If unspecified, no more than 500 backups are returned. The maximum value is 1000; values
           above 1000 are changed to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of backups to return. The response may contain less than
             * the maximum number. If unspecified, no more than 500 backups are returned. The
             * maximum value is 1000; values above 1000 are changed to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token, received from a previous DataprocMetastore.ListBackups call.
             * Provide this token to retrieve the subsequent page.To retrieve the first page, supply
             * an empty page token.When paginating, other parameters provided to
             * DataprocMetastore.ListBackups must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token, received from a previous DataprocMetastore.ListBackups call. Provide this
           token to retrieve the subsequent page.To retrieve the first page, supply an empty page token.When
           paginating, other parameters provided to DataprocMetastore.ListBackups must match the call that
           provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token, received from a previous DataprocMetastore.ListBackups call.
             * Provide this token to retrieve the subsequent page.To retrieve the first page, supply
             * an empty page token.When paginating, other parameters provided to
             * DataprocMetastore.ListBackups must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
           * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "backups.setIamPolicy".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

            private static final String REST_PATH = "v1beta/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy.Can
             * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
             *
             * Create a request for the method "backups.setIamPolicy".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
             * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) {
              super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See Resource names
             * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             * this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See Resource names
           (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See Resource names
             * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             * this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "backups.testIamPermissions".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1beta/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
             * is designed to be used for building permission-aware UIs and command-line tools, not for
             * authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "backups.testIamPermissions".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
             * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) {
              super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See Resource
             * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
           (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See Resource
             * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/backups/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Databases collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DataprocMetastore metastore = new DataprocMetastore(...);}
         *   {@code DataprocMetastore.Databases.List request = metastore.databases().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Databases databases() {
          return new Databases();
        }

        /**
         * The "databases" collection of methods.
         */
        public class Databases {

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "databases.getIamPolicy".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

            private static final String REST_PATH = "v1beta/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "databases.getIamPolicy".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See Resource names
             * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             * this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See Resource names
           (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See Resource names
             * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             * this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy.Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be
             * rejected.Requests for policies with any conditional role bindings must specify
             * version 3. Policies with no conditional role bindings may specify any valid value or
             * leave the field unset.The policy in the response might use the policy version that
             * you specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1.To learn which resources support conditions in their IAM policies, see the IAM
             * documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected.Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset.The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1.To learn
           which resources support conditions in their IAM policies, see the IAM documentation
           (https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy.Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be
             * rejected.Requests for policies with any conditional role bindings must specify
             * version 3. Policies with no conditional role bindings may specify any valid value or
             * leave the field unset.The policy in the response might use the policy version that
             * you specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1.To learn which resources support conditions in their IAM policies, see the IAM
             * documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
           * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "databases.setIamPolicy".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

            private static final String REST_PATH = "v1beta/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy.Can
             * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
             *
             * Create a request for the method "databases.setIamPolicy".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
             * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) {
              super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See Resource names
             * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             * this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See Resource names
           (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See Resource names
             * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             * this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "databases.testIamPermissions".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1beta/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
             * is designed to be used for building permission-aware UIs and command-line tools, not for
             * authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "databases.testIamPermissions".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
           *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           *        field.
             * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) {
              super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See Resource
             * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
           (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See Resource
             * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Tables collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DataprocMetastore metastore = new DataprocMetastore(...);}
           *   {@code DataprocMetastore.Tables.List request = metastore.tables().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Tables tables() {
            return new Tables();
          }

          /**
           * The "tables" collection of methods.
           */
          public class Tables {

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
             * does not have a policy set.
             *
             * Create a request for the method "tables.getIamPolicy".
             *
             * This request holds the parameters needed by the metastore server.  After setting any optional
             * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
             *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             *        field.
             * @return the request
             */
            public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
              GetIamPolicy result = new GetIamPolicy(resource);
              initialize(result);
              return result;
            }

            public class GetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

              private static final String REST_PATH = "v1beta/{+resource}:getIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+/tables/[^/]+$");

              /**
               * Gets the access control policy for a resource. Returns an empty policy if the resource exists
               * and does not have a policy set.
               *
               * Create a request for the method "tables.getIamPolicy".
               *
               * This request holds the parameters needed by the the metastore server.  After setting any
               * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
             *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             *        field.
               * @since 1.13
               */
              protected GetIamPolicy(java.lang.String resource) {
                super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+/tables/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (GetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (GetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public GetIamPolicy setAlt(java.lang.String alt) {
                return (GetIamPolicy) super.setAlt(alt);
              }

              @Override
              public GetIamPolicy setCallback(java.lang.String callback) {
                return (GetIamPolicy) super.setCallback(callback);
              }

              @Override
              public GetIamPolicy setFields(java.lang.String fields) {
                return (GetIamPolicy) super.setFields(fields);
              }

              @Override
              public GetIamPolicy setKey(java.lang.String key) {
                return (GetIamPolicy) super.setKey(key);
              }

              @Override
              public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (GetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (GetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetIamPolicy setUploadType(java.lang.String uploadType) {
                return (GetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See Resource names
               * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               * this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being requested. See Resource names
             (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See Resource names
               * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               * this field.
               */
              public GetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+/tables/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy.Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be
               * rejected.Requests for policies with any conditional role bindings must specify
               * version 3. Policies with no conditional role bindings may specify any valid value
               * or leave the field unset.The policy in the response might use the policy version
               * that you specified, or it might use a lower policy version. For example, if you
               * specify version 3, but the policy has no conditional role bindings, the response
               * uses version 1.To learn which resources support conditions in their IAM policies,
               * see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              @com.google.api.client.util.Key("options.requestedPolicyVersion")
              private java.lang.Integer optionsRequestedPolicyVersion;

              /** Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1,
             and 3. Requests specifying an invalid value will be rejected.Requests for policies with any
             conditional role bindings must specify version 3. Policies with no conditional role bindings may
             specify any valid value or leave the field unset.The policy in the response might use the policy
             version that you specified, or it might use a lower policy version. For example, if you specify
             version 3, but the policy has no conditional role bindings, the response uses version 1.To learn
             which resources support conditions in their IAM policies, see the IAM documentation
             (https://cloud.google.com/iam/help/conditions/resource-policies).
               */
              public java.lang.Integer getOptionsRequestedPolicyVersion() {
                return optionsRequestedPolicyVersion;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy.Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be
               * rejected.Requests for policies with any conditional role bindings must specify
               * version 3. Policies with no conditional role bindings may specify any valid value
               * or leave the field unset.The policy in the response might use the policy version
               * that you specified, or it might use a lower policy version. For example, if you
               * specify version 3, but the policy has no conditional role bindings, the response
               * uses version 1.To learn which resources support conditions in their IAM policies,
               * see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
                this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
                return this;
              }

              @Override
              public GetIamPolicy set(String parameterName, Object value) {
                return (GetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
             * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
             *
             * Create a request for the method "tables.setIamPolicy".
             *
             * This request holds the parameters needed by the metastore server.  After setting any optional
             * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
             *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             *        field.
             * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
             * @return the request
             */
            public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) throws java.io.IOException {
              SetIamPolicy result = new SetIamPolicy(resource, content);
              initialize(result);
              return result;
            }

            public class SetIamPolicy extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Policy> {

              private static final String REST_PATH = "v1beta/{+resource}:setIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+/tables/[^/]+$");

              /**
               * Sets the access control policy on the specified resource. Replaces any existing policy.Can
               * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
               *
               * Create a request for the method "tables.setIamPolicy".
               *
               * This request holds the parameters needed by the the metastore server.  After setting any
               * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
             *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             *        field.
               * @param content the {@link com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest}
               * @since 1.13
               */
              protected SetIamPolicy(java.lang.String resource, com.google.api.services.metastore.v1beta.model.SetIamPolicyRequest content) {
                super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+/tables/[^/]+$");
                }
              }

              @Override
              public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (SetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public SetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (SetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public SetIamPolicy setAlt(java.lang.String alt) {
                return (SetIamPolicy) super.setAlt(alt);
              }

              @Override
              public SetIamPolicy setCallback(java.lang.String callback) {
                return (SetIamPolicy) super.setCallback(callback);
              }

              @Override
              public SetIamPolicy setFields(java.lang.String fields) {
                return (SetIamPolicy) super.setFields(fields);
              }

              @Override
              public SetIamPolicy setKey(java.lang.String key) {
                return (SetIamPolicy) super.setKey(key);
              }

              @Override
              public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (SetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (SetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public SetIamPolicy setUploadType(java.lang.String uploadType) {
                return (SetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See Resource names
               * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               * this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being specified. See Resource names
             (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See Resource names
               * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               * this field.
               */
              public SetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+/tables/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public SetIamPolicy set(String parameterName, Object value) {
                return (SetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not exist,
             * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
             * designed to be used for building permission-aware UIs and command-line tools, not for
             * authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "tables.testIamPermissions".
             *
             * This request holds the parameters needed by the metastore server.  After setting any optional
             * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
             *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             *        field.
             * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
             * @return the request
             */
            public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) throws java.io.IOException {
              TestIamPermissions result = new TestIamPermissions(resource, content);
              initialize(result);
              return result;
            }

            public class TestIamPermissions extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse> {

              private static final String REST_PATH = "v1beta/{+resource}:testIamPermissions";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+/tables/[^/]+$");

              /**
               * Returns permissions that a caller has on the specified resource. If the resource does not
               * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
               * is designed to be used for building permission-aware UIs and command-line tools, not for
               * authorization checking. This operation may "fail open" without warning.
               *
               * Create a request for the method "tables.testIamPermissions".
               *
               * This request holds the parameters needed by the the metastore server.  After setting any
               * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
               * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
               * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
             *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             *        field.
               * @param content the {@link com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest}
               * @since 1.13
               */
              protected TestIamPermissions(java.lang.String resource, com.google.api.services.metastore.v1beta.model.TestIamPermissionsRequest content) {
                super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.TestIamPermissionsResponse.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+/tables/[^/]+$");
                }
              }

              @Override
              public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
                return (TestIamPermissions) super.set$Xgafv($Xgafv);
              }

              @Override
              public TestIamPermissions setAccessToken(java.lang.String accessToken) {
                return (TestIamPermissions) super.setAccessToken(accessToken);
              }

              @Override
              public TestIamPermissions setAlt(java.lang.String alt) {
                return (TestIamPermissions) super.setAlt(alt);
              }

              @Override
              public TestIamPermissions setCallback(java.lang.String callback) {
                return (TestIamPermissions) super.setCallback(callback);
              }

              @Override
              public TestIamPermissions setFields(java.lang.String fields) {
                return (TestIamPermissions) super.setFields(fields);
              }

              @Override
              public TestIamPermissions setKey(java.lang.String key) {
                return (TestIamPermissions) super.setKey(key);
              }

              @Override
              public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
                return (TestIamPermissions) super.setOauthToken(oauthToken);
              }

              @Override
              public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
                return (TestIamPermissions) super.setQuotaUser(quotaUser);
              }

              @Override
              public TestIamPermissions setUploadType(java.lang.String uploadType) {
                return (TestIamPermissions) super.setUploadType(uploadType);
              }

              @Override
              public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
                return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See Resource
               * names (https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
             (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See Resource
               * names (https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public TestIamPermissions setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/services/[^/]+/databases/[^/]+/tables/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public TestIamPermissions set(String parameterName, Object value) {
                return (TestIamPermissions) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the MetadataImports collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DataprocMetastore metastore = new DataprocMetastore(...);}
         *   {@code DataprocMetastore.MetadataImports.List request = metastore.metadataImports().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public MetadataImports metadataImports() {
          return new MetadataImports();
        }

        /**
         * The "metadataImports" collection of methods.
         */
        public class MetadataImports {

          /**
           * Creates a new MetadataImport in a given project and location.
           *
           * Create a request for the method "metadataImports.create".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The relative resource name of the service in which to create a metastore import, in the
           *        following form:projects/{project_number}/locations/{location_id}/services/{service_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.MetadataImport}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.metastore.v1beta.model.MetadataImport content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

            private static final String REST_PATH = "v1beta/{+parent}/metadataImports";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

            /**
             * Creates a new MetadataImport in a given project and location.
             *
             * Create a request for the method "metadataImports.create".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The relative resource name of the service in which to create a metastore import, in the
           *        following form:projects/{project_number}/locations/{location_id}/services/{service_id}.
             * @param content the {@link com.google.api.services.metastore.v1beta.model.MetadataImport}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.metastore.v1beta.model.MetadataImport content) {
              super(DataprocMetastore.this, "POST", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The relative resource name of the service in which to create a metastore
             * import, in the following
             * form:projects/{project_number}/locations/{location_id}/services/{service_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The relative resource name of the service in which to create a metastore import, in the
           following form:projects/{project_number}/locations/{location_id}/services/{service_id}.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The relative resource name of the service in which to create a metastore
             * import, in the following
             * form:projects/{project_number}/locations/{location_id}/services/{service_id}.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID of the metadata import, which is used as the final component of the
             * metadata import's name.This value must be between 1 and 64 characters long, begin
             * with a letter, end with a letter or number, and consist of alpha-numeric ASCII
             * characters or hyphens.
             */
            @com.google.api.client.util.Key
            private java.lang.String metadataImportId;

            /** Required. The ID of the metadata import, which is used as the final component of the metadata
           import's name.This value must be between 1 and 64 characters long, begin with a letter, end with a
           letter or number, and consist of alpha-numeric ASCII characters or hyphens.
             */
            public java.lang.String getMetadataImportId() {
              return metadataImportId;
            }

            /**
             * Required. The ID of the metadata import, which is used as the final component of the
             * metadata import's name.This value must be between 1 and 64 characters long, begin
             * with a letter, end with a letter or number, and consist of alpha-numeric ASCII
             * characters or hyphens.
             */
            public Create setMetadataImportId(java.lang.String metadataImportId) {
              this.metadataImportId = metadataImportId;
              return this;
            }

            /**
             * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
             * request if it has completed. The server will ignore subsequent requests that provide
             * a duplicate request ID for at least 60 minutes after the first request.For example,
             * if an initial request times out, followed by another request with the same request
             * ID, the server ignores the second request to prevent the creation of duplicate
             * commitments.The request ID must be a valid UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
             * (00000000-0000-0000-0000-000000000000) is not supported.
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
           has completed. The server will ignore subsequent requests that provide a duplicate request ID for
           at least 60 minutes after the first request.For example, if an initial request times out, followed
           by another request with the same request ID, the server ignores the second request to prevent the
           creation of duplicate commitments.The request ID must be a valid UUID
           (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           (00000000-0000-0000-0000-000000000000) is not supported.
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
             * request if it has completed. The server will ignore subsequent requests that provide
             * a duplicate request ID for at least 60 minutes after the first request.For example,
             * if an initial request times out, followed by another request with the same request
             * ID, the server ignores the second request to prevent the creation of duplicate
             * commitments.The request ID must be a valid UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
             * (00000000-0000-0000-0000-000000000000) is not supported.
             */
            public Create setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single import.
           *
           * Create a request for the method "metadataImports.get".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The relative resource name of the metadata import to retrieve, in the following form:proje
           *        cts/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{import
           *        _id}.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.MetadataImport> {

            private static final String REST_PATH = "v1beta/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/metadataImports/[^/]+$");

            /**
             * Gets details of a single import.
             *
             * Create a request for the method "metadataImports.get".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The relative resource name of the metadata import to retrieve, in the following form:proje
           *        cts/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{import
           *        _id}.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.MetadataImport.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/metadataImports/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The relative resource name of the metadata import to retrieve, in the
             * following form:projects/{project_number}/locations/{location_id}/services/{service_id
             * }/metadataImports/{import_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The relative resource name of the metadata import to retrieve, in the following form:proj
           ects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{import_id}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The relative resource name of the metadata import to retrieve, in the
             * following form:projects/{project_number}/locations/{location_id}/services/{service_id
             * }/metadataImports/{import_id}.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/metadataImports/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists imports in a service.
           *
           * Create a request for the method "metadataImports.list".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The relative resource name of the service whose metadata imports to list, in the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImpor
           *        ts.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.ListMetadataImportsResponse> {

            private static final String REST_PATH = "v1beta/{+parent}/metadataImports";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+$");

            /**
             * Lists imports in a service.
             *
             * Create a request for the method "metadataImports.list".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The relative resource name of the service whose metadata imports to list, in the following
           *        form:projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImpor
           *        ts.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DataprocMetastore.this, "GET", REST_PATH, null, com.google.api.services.metastore.v1beta.model.ListMetadataImportsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The relative resource name of the service whose metadata imports to list,
             * in the following form:projects/{project_number}/locations/{location_id}/services/{ser
             * vice_id}/metadataImports.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The relative resource name of the service whose metadata imports to list, in the
           following
           form:projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The relative resource name of the service whose metadata imports to list,
             * in the following form:projects/{project_number}/locations/{location_id}/services/{ser
             * vice_id}/metadataImports.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The filter to apply to list results. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. The filter to apply to list results.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Optional. The filter to apply to list results. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Optional. Specify the ordering of results as described in Sorting Order
             * (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not
             * specified, the results will be sorted in the default order.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. Specify the ordering of results as described in Sorting Order
           (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not specified, the results
           will be sorted in the default order.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * Optional. Specify the ordering of results as described in Sorting Order
             * (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not
             * specified, the results will be sorted in the default order.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Optional. The maximum number of imports to return. The response may contain less than
             * the maximum number. If unspecified, no more than 500 imports are returned. The
             * maximum value is 1000; values above 1000 are changed to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of imports to return. The response may contain less than the maximum
           number. If unspecified, no more than 500 imports are returned. The maximum value is 1000; values
           above 1000 are changed to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of imports to return. The response may contain less than
             * the maximum number. If unspecified, no more than 500 imports are returned. The
             * maximum value is 1000; values above 1000 are changed to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token, received from a previous DataprocMetastore.ListServices call.
             * Provide this token to retrieve the subsequent page.To retrieve the first page, supply
             * an empty page token.When paginating, other parameters provided to
             * DataprocMetastore.ListServices must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token, received from a previous DataprocMetastore.ListServices call. Provide this
           token to retrieve the subsequent page.To retrieve the first page, supply an empty page token.When
           paginating, other parameters provided to DataprocMetastore.ListServices must match the call that
           provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token, received from a previous DataprocMetastore.ListServices call.
             * Provide this token to retrieve the subsequent page.To retrieve the first page, supply
             * an empty page token.When paginating, other parameters provided to
             * DataprocMetastore.ListServices must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a single import. Only the description field of MetadataImport is supported to be updated.
           *
           * Create a request for the method "metadataImports.patch".
           *
           * This request holds the parameters needed by the metastore server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. The relative resource name of the metadata import, of the form:projects/{project_number}/
           *        locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}.
           * @param content the {@link com.google.api.services.metastore.v1beta.model.MetadataImport}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.metastore.v1beta.model.MetadataImport content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DataprocMetastoreRequest<com.google.api.services.metastore.v1beta.model.Operation> {

            private static final String REST_PATH = "v1beta/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/[^/]+/metadataImports/[^/]+$");

            /**
             * Updates a single import. Only the description field of MetadataImport is supported to be
             * updated.
             *
             * Create a request for the method "metadataImports.patch".
             *
             * This request holds the parameters needed by the the metastore server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. The relative resource name of the metadata import, of the form:projects/{project_number}/
           *        locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}.
             * @param content the {@link com.google.api.services.metastore.v1beta.model.MetadataImport}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.metastore.v1beta.model.MetadataImport content) {
              super(DataprocMetastore.this, "PATCH", REST_PATH, content, com.google.api.services.metastore.v1beta.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/metadataImports/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. The relative resource name of the metadata import, of the form:projects/{p
             * roject_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadat
             * a_import_id}.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. The relative resource name of the metadata import, of the form:projects/{project_number}
           /locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. The relative resource name of the metadata import, of the form:projects/{p
             * roject_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadat
             * a_import_id}.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/[^/]+/metadataImports/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
             * request if it has completed. The server will ignore subsequent requests that provide
             * a duplicate request ID for at least 60 minutes after the first request.For example,
             * if an initial request times out, followed by another request with the same request
             * ID, the server ignores the second request to prevent the creation of duplicate
             * commitments.The request ID must be a valid UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
             * (00000000-0000-0000-0000-000000000000) is not supported.
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it
           has completed. The server will ignore subsequent requests that provide a duplicate request ID for
           at least 60 minutes after the first request.For example, if an initial request times out, followed
           by another request with the same request ID, the server ignores the second request to prevent the
           creation of duplicate commitments.The request ID must be a valid UUID
           (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
           (00000000-0000-0000-0000-000000000000) is not supported.
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. A request ID. Specify a unique request ID to allow the server to ignore the
             * request if it has completed. The server will ignore subsequent requests that provide
             * a duplicate request ID for at least 60 minutes after the first request.For example,
             * if an initial request times out, followed by another request with the same request
             * ID, the server ignores the second request to prevent the creation of duplicate
             * commitments.The request ID must be a valid UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero UUID
             * (00000000-0000-0000-0000-000000000000) is not supported.
             */
            public Patch setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            /**
             * Required. A field mask used to specify the fields to be overwritten in the metadata
             * import resource by the update. Fields specified in the update_mask are relative to
             * the resource (not to the full request). A field is overwritten if it is in the mask.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. A field mask used to specify the fields to be overwritten in the metadata import resource
           by the update. Fields specified in the update_mask are relative to the resource (not to the full
           request). A field is overwritten if it is in the mask.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. A field mask used to specify the fields to be overwritten in the metadata
             * import resource by the update. Fields specified in the update_mask are relative to
             * the resource (not to the full request). A field is overwritten if it is in the mask.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link DataprocMetastore}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link DataprocMetastore}. */
    @Override
    public DataprocMetastore build() {
      return new DataprocMetastore(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DataprocMetastoreRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDataprocMetastoreRequestInitializer(
        DataprocMetastoreRequestInitializer dataprocmetastoreRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(dataprocmetastoreRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
