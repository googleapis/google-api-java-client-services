/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A message holding all of the color information about a signal: -Color primaries identify the
 * meaning of red, green, and blue ( and the white point). -The transfer characteristic identifies
 * the mapping used to go between linear and coded values of light. -The matrix coefficients
 * identifies, e.g., the conversion between Ycbcr to RGB (in the space of the primaries) -And the
 * color range defines the min/max of the levels used.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoFileColorInfo extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matrixCoefficients;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaries;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String range;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String transferCharacteristics;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getMatrixCoefficients() {
    return matrixCoefficients;
  }

  /**
   * @param matrixCoefficients matrixCoefficients or {@code null} for none
   */
  public VideoFileColorInfo setMatrixCoefficients(java.lang.String matrixCoefficients) {
    this.matrixCoefficients = matrixCoefficients;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaries() {
    return primaries;
  }

  /**
   * @param primaries primaries or {@code null} for none
   */
  public VideoFileColorInfo setPrimaries(java.lang.String primaries) {
    this.primaries = primaries;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getRange() {
    return range;
  }

  /**
   * @param range range or {@code null} for none
   */
  public VideoFileColorInfo setRange(java.lang.String range) {
    this.range = range;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getTransferCharacteristics() {
    return transferCharacteristics;
  }

  /**
   * @param transferCharacteristics transferCharacteristics or {@code null} for none
   */
  public VideoFileColorInfo setTransferCharacteristics(java.lang.String transferCharacteristics) {
    this.transferCharacteristics = transferCharacteristics;
    return this;
  }

  @Override
  public VideoFileColorInfo set(String fieldName, Object value) {
    return (VideoFileColorInfo) super.set(fieldName, value);
  }

  @Override
  public VideoFileColorInfo clone() {
    return (VideoFileColorInfo) super.clone();
  }

}
