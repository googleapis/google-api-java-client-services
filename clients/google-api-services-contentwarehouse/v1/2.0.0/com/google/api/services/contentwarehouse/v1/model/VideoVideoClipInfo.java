/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * VideoClipInfo : meta information extracted from video file Next id: 26
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoVideoClipInfo extends com.google.api.client.json.GenericJson {

  /**
   * Lists the artist of the original subject of the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String artist;

  /**
   * Audio vendor ID
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String audioVendorId;

  /**
   * Different containers use different video clip info. The following fields include info from
   * popular formats: AVI, MOV, and WMV.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String author;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String comment;

  /**
   * Lists the name of the person or organization that commissioned the subject of the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String commissioned;

  /**
   * Records the copyright information for the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String copyright;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String digitizationTime;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String director;

  /**
   * The engineer who worked on the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String engineer;

  /**
   * Optional geo-location information in WGS 84.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoVideoGeoLocation geolocation;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String info;

  /**
   * Provides a list of keywords that refer to the file or subject of the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String keywords;

  /**
   * The camera make such as Apple, Samsung etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String make;

  /**
   * Describes the original subject of the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String medium;

  /**
   * Container level metadata
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VideoClipInfo> metadata;

  static {
    // hack to force ProGuard to consider VideoClipInfo used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(VideoClipInfo.class);
  }

  /**
   * The camera model such as iPhone7 or Pixel, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String model;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String performer;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String producer;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String requirements;

  /**
   * Identifies the name of the software packages used to create the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String software;

  /**
   * Identifies the name of the person or organization who supplied the original subject of the
   * file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceProvider;

  /**
   * Describes the contents of the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subject;

  /**
   * Identifies the technician who digitized the subject file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String technician;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Video vendor ID
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String videoVendorId;

  /**
   * Lists the artist of the original subject of the file.
   * @see #decodeArtist()
   * @return value or {@code null} for none
   */
  public java.lang.String getArtist() {
    return artist;
  }

  /**
   * Lists the artist of the original subject of the file.
   * @see #getArtist()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeArtist() {
    return com.google.api.client.util.Base64.decodeBase64(artist);
  }

  /**
   * Lists the artist of the original subject of the file.
   * @see #encodeArtist()
   * @param artist artist or {@code null} for none
   */
  public VideoVideoClipInfo setArtist(java.lang.String artist) {
    this.artist = artist;
    return this;
  }

  /**
   * Lists the artist of the original subject of the file.
   * @see #setArtist()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeArtist(byte[] artist) {
    this.artist = com.google.api.client.util.Base64.encodeBase64URLSafeString(artist);
    return this;
  }

  /**
   * Audio vendor ID
   * @see #decodeAudioVendorId()
   * @return value or {@code null} for none
   */
  public java.lang.String getAudioVendorId() {
    return audioVendorId;
  }

  /**
   * Audio vendor ID
   * @see #getAudioVendorId()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeAudioVendorId() {
    return com.google.api.client.util.Base64.decodeBase64(audioVendorId);
  }

  /**
   * Audio vendor ID
   * @see #encodeAudioVendorId()
   * @param audioVendorId audioVendorId or {@code null} for none
   */
  public VideoVideoClipInfo setAudioVendorId(java.lang.String audioVendorId) {
    this.audioVendorId = audioVendorId;
    return this;
  }

  /**
   * Audio vendor ID
   * @see #setAudioVendorId()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeAudioVendorId(byte[] audioVendorId) {
    this.audioVendorId = com.google.api.client.util.Base64.encodeBase64URLSafeString(audioVendorId);
    return this;
  }

  /**
   * Different containers use different video clip info. The following fields include info from
   * popular formats: AVI, MOV, and WMV.
   * @see #decodeAuthor()
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthor() {
    return author;
  }

  /**
   * Different containers use different video clip info. The following fields include info from
   * popular formats: AVI, MOV, and WMV.
   * @see #getAuthor()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeAuthor() {
    return com.google.api.client.util.Base64.decodeBase64(author);
  }

  /**
   * Different containers use different video clip info. The following fields include info from
   * popular formats: AVI, MOV, and WMV.
   * @see #encodeAuthor()
   * @param author author or {@code null} for none
   */
  public VideoVideoClipInfo setAuthor(java.lang.String author) {
    this.author = author;
    return this;
  }

  /**
   * Different containers use different video clip info. The following fields include info from
   * popular formats: AVI, MOV, and WMV.
   * @see #setAuthor()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeAuthor(byte[] author) {
    this.author = com.google.api.client.util.Base64.encodeBase64URLSafeString(author);
    return this;
  }

  /**
   * @see #decodeComment()
   * @return value or {@code null} for none
   */
  public java.lang.String getComment() {
    return comment;
  }

  /**

   * @see #getComment()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeComment() {
    return com.google.api.client.util.Base64.decodeBase64(comment);
  }

  /**
   * @see #encodeComment()
   * @param comment comment or {@code null} for none
   */
  public VideoVideoClipInfo setComment(java.lang.String comment) {
    this.comment = comment;
    return this;
  }

  /**

   * @see #setComment()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeComment(byte[] comment) {
    this.comment = com.google.api.client.util.Base64.encodeBase64URLSafeString(comment);
    return this;
  }

  /**
   * Lists the name of the person or organization that commissioned the subject of the file.
   * @see #decodeCommissioned()
   * @return value or {@code null} for none
   */
  public java.lang.String getCommissioned() {
    return commissioned;
  }

  /**
   * Lists the name of the person or organization that commissioned the subject of the file.
   * @see #getCommissioned()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeCommissioned() {
    return com.google.api.client.util.Base64.decodeBase64(commissioned);
  }

  /**
   * Lists the name of the person or organization that commissioned the subject of the file.
   * @see #encodeCommissioned()
   * @param commissioned commissioned or {@code null} for none
   */
  public VideoVideoClipInfo setCommissioned(java.lang.String commissioned) {
    this.commissioned = commissioned;
    return this;
  }

  /**
   * Lists the name of the person or organization that commissioned the subject of the file.
   * @see #setCommissioned()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeCommissioned(byte[] commissioned) {
    this.commissioned = com.google.api.client.util.Base64.encodeBase64URLSafeString(commissioned);
    return this;
  }

  /**
   * Records the copyright information for the file.
   * @see #decodeCopyright()
   * @return value or {@code null} for none
   */
  public java.lang.String getCopyright() {
    return copyright;
  }

  /**
   * Records the copyright information for the file.
   * @see #getCopyright()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeCopyright() {
    return com.google.api.client.util.Base64.decodeBase64(copyright);
  }

  /**
   * Records the copyright information for the file.
   * @see #encodeCopyright()
   * @param copyright copyright or {@code null} for none
   */
  public VideoVideoClipInfo setCopyright(java.lang.String copyright) {
    this.copyright = copyright;
    return this;
  }

  /**
   * Records the copyright information for the file.
   * @see #setCopyright()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeCopyright(byte[] copyright) {
    this.copyright = com.google.api.client.util.Base64.encodeBase64URLSafeString(copyright);
    return this;
  }

  /**
   * @see #decodeDigitizationTime()
   * @return value or {@code null} for none
   */
  public java.lang.String getDigitizationTime() {
    return digitizationTime;
  }

  /**

   * @see #getDigitizationTime()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeDigitizationTime() {
    return com.google.api.client.util.Base64.decodeBase64(digitizationTime);
  }

  /**
   * @see #encodeDigitizationTime()
   * @param digitizationTime digitizationTime or {@code null} for none
   */
  public VideoVideoClipInfo setDigitizationTime(java.lang.String digitizationTime) {
    this.digitizationTime = digitizationTime;
    return this;
  }

  /**

   * @see #setDigitizationTime()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeDigitizationTime(byte[] digitizationTime) {
    this.digitizationTime = com.google.api.client.util.Base64.encodeBase64URLSafeString(digitizationTime);
    return this;
  }

  /**
   * @see #decodeDirector()
   * @return value or {@code null} for none
   */
  public java.lang.String getDirector() {
    return director;
  }

  /**

   * @see #getDirector()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeDirector() {
    return com.google.api.client.util.Base64.decodeBase64(director);
  }

  /**
   * @see #encodeDirector()
   * @param director director or {@code null} for none
   */
  public VideoVideoClipInfo setDirector(java.lang.String director) {
    this.director = director;
    return this;
  }

  /**

   * @see #setDirector()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeDirector(byte[] director) {
    this.director = com.google.api.client.util.Base64.encodeBase64URLSafeString(director);
    return this;
  }

  /**
   * The engineer who worked on the file.
   * @see #decodeEngineer()
   * @return value or {@code null} for none
   */
  public java.lang.String getEngineer() {
    return engineer;
  }

  /**
   * The engineer who worked on the file.
   * @see #getEngineer()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeEngineer() {
    return com.google.api.client.util.Base64.decodeBase64(engineer);
  }

  /**
   * The engineer who worked on the file.
   * @see #encodeEngineer()
   * @param engineer engineer or {@code null} for none
   */
  public VideoVideoClipInfo setEngineer(java.lang.String engineer) {
    this.engineer = engineer;
    return this;
  }

  /**
   * The engineer who worked on the file.
   * @see #setEngineer()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeEngineer(byte[] engineer) {
    this.engineer = com.google.api.client.util.Base64.encodeBase64URLSafeString(engineer);
    return this;
  }

  /**
   * Optional geo-location information in WGS 84.
   * @return value or {@code null} for none
   */
  public VideoVideoGeoLocation getGeolocation() {
    return geolocation;
  }

  /**
   * Optional geo-location information in WGS 84.
   * @param geolocation geolocation or {@code null} for none
   */
  public VideoVideoClipInfo setGeolocation(VideoVideoGeoLocation geolocation) {
    this.geolocation = geolocation;
    return this;
  }

  /**
   * @see #decodeInfo()
   * @return value or {@code null} for none
   */
  public java.lang.String getInfo() {
    return info;
  }

  /**

   * @see #getInfo()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeInfo() {
    return com.google.api.client.util.Base64.decodeBase64(info);
  }

  /**
   * @see #encodeInfo()
   * @param info info or {@code null} for none
   */
  public VideoVideoClipInfo setInfo(java.lang.String info) {
    this.info = info;
    return this;
  }

  /**

   * @see #setInfo()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeInfo(byte[] info) {
    this.info = com.google.api.client.util.Base64.encodeBase64URLSafeString(info);
    return this;
  }

  /**
   * Provides a list of keywords that refer to the file or subject of the file.
   * @see #decodeKeywords()
   * @return value or {@code null} for none
   */
  public java.lang.String getKeywords() {
    return keywords;
  }

  /**
   * Provides a list of keywords that refer to the file or subject of the file.
   * @see #getKeywords()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeKeywords() {
    return com.google.api.client.util.Base64.decodeBase64(keywords);
  }

  /**
   * Provides a list of keywords that refer to the file or subject of the file.
   * @see #encodeKeywords()
   * @param keywords keywords or {@code null} for none
   */
  public VideoVideoClipInfo setKeywords(java.lang.String keywords) {
    this.keywords = keywords;
    return this;
  }

  /**
   * Provides a list of keywords that refer to the file or subject of the file.
   * @see #setKeywords()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeKeywords(byte[] keywords) {
    this.keywords = com.google.api.client.util.Base64.encodeBase64URLSafeString(keywords);
    return this;
  }

  /**
   * The camera make such as Apple, Samsung etc.
   * @see #decodeMake()
   * @return value or {@code null} for none
   */
  public java.lang.String getMake() {
    return make;
  }

  /**
   * The camera make such as Apple, Samsung etc.
   * @see #getMake()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeMake() {
    return com.google.api.client.util.Base64.decodeBase64(make);
  }

  /**
   * The camera make such as Apple, Samsung etc.
   * @see #encodeMake()
   * @param make make or {@code null} for none
   */
  public VideoVideoClipInfo setMake(java.lang.String make) {
    this.make = make;
    return this;
  }

  /**
   * The camera make such as Apple, Samsung etc.
   * @see #setMake()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeMake(byte[] make) {
    this.make = com.google.api.client.util.Base64.encodeBase64URLSafeString(make);
    return this;
  }

  /**
   * Describes the original subject of the file.
   * @see #decodeMedium()
   * @return value or {@code null} for none
   */
  public java.lang.String getMedium() {
    return medium;
  }

  /**
   * Describes the original subject of the file.
   * @see #getMedium()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeMedium() {
    return com.google.api.client.util.Base64.decodeBase64(medium);
  }

  /**
   * Describes the original subject of the file.
   * @see #encodeMedium()
   * @param medium medium or {@code null} for none
   */
  public VideoVideoClipInfo setMedium(java.lang.String medium) {
    this.medium = medium;
    return this;
  }

  /**
   * Describes the original subject of the file.
   * @see #setMedium()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeMedium(byte[] medium) {
    this.medium = com.google.api.client.util.Base64.encodeBase64URLSafeString(medium);
    return this;
  }

  /**
   * Container level metadata
   * @return value or {@code null} for none
   */
  public java.util.List<VideoClipInfo> getMetadata() {
    return metadata;
  }

  /**
   * Container level metadata
   * @param metadata metadata or {@code null} for none
   */
  public VideoVideoClipInfo setMetadata(java.util.List<VideoClipInfo> metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * The camera model such as iPhone7 or Pixel, etc.
   * @see #decodeModel()
   * @return value or {@code null} for none
   */
  public java.lang.String getModel() {
    return model;
  }

  /**
   * The camera model such as iPhone7 or Pixel, etc.
   * @see #getModel()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeModel() {
    return com.google.api.client.util.Base64.decodeBase64(model);
  }

  /**
   * The camera model such as iPhone7 or Pixel, etc.
   * @see #encodeModel()
   * @param model model or {@code null} for none
   */
  public VideoVideoClipInfo setModel(java.lang.String model) {
    this.model = model;
    return this;
  }

  /**
   * The camera model such as iPhone7 or Pixel, etc.
   * @see #setModel()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeModel(byte[] model) {
    this.model = com.google.api.client.util.Base64.encodeBase64URLSafeString(model);
    return this;
  }

  /**
   * @see #decodePerformer()
   * @return value or {@code null} for none
   */
  public java.lang.String getPerformer() {
    return performer;
  }

  /**

   * @see #getPerformer()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodePerformer() {
    return com.google.api.client.util.Base64.decodeBase64(performer);
  }

  /**
   * @see #encodePerformer()
   * @param performer performer or {@code null} for none
   */
  public VideoVideoClipInfo setPerformer(java.lang.String performer) {
    this.performer = performer;
    return this;
  }

  /**

   * @see #setPerformer()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodePerformer(byte[] performer) {
    this.performer = com.google.api.client.util.Base64.encodeBase64URLSafeString(performer);
    return this;
  }

  /**
   * @see #decodeProducer()
   * @return value or {@code null} for none
   */
  public java.lang.String getProducer() {
    return producer;
  }

  /**

   * @see #getProducer()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeProducer() {
    return com.google.api.client.util.Base64.decodeBase64(producer);
  }

  /**
   * @see #encodeProducer()
   * @param producer producer or {@code null} for none
   */
  public VideoVideoClipInfo setProducer(java.lang.String producer) {
    this.producer = producer;
    return this;
  }

  /**

   * @see #setProducer()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeProducer(byte[] producer) {
    this.producer = com.google.api.client.util.Base64.encodeBase64URLSafeString(producer);
    return this;
  }

  /**
   * @see #decodeRequirements()
   * @return value or {@code null} for none
   */
  public java.lang.String getRequirements() {
    return requirements;
  }

  /**

   * @see #getRequirements()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeRequirements() {
    return com.google.api.client.util.Base64.decodeBase64(requirements);
  }

  /**
   * @see #encodeRequirements()
   * @param requirements requirements or {@code null} for none
   */
  public VideoVideoClipInfo setRequirements(java.lang.String requirements) {
    this.requirements = requirements;
    return this;
  }

  /**

   * @see #setRequirements()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeRequirements(byte[] requirements) {
    this.requirements = com.google.api.client.util.Base64.encodeBase64URLSafeString(requirements);
    return this;
  }

  /**
   * Identifies the name of the software packages used to create the file.
   * @see #decodeSoftware()
   * @return value or {@code null} for none
   */
  public java.lang.String getSoftware() {
    return software;
  }

  /**
   * Identifies the name of the software packages used to create the file.
   * @see #getSoftware()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeSoftware() {
    return com.google.api.client.util.Base64.decodeBase64(software);
  }

  /**
   * Identifies the name of the software packages used to create the file.
   * @see #encodeSoftware()
   * @param software software or {@code null} for none
   */
  public VideoVideoClipInfo setSoftware(java.lang.String software) {
    this.software = software;
    return this;
  }

  /**
   * Identifies the name of the software packages used to create the file.
   * @see #setSoftware()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeSoftware(byte[] software) {
    this.software = com.google.api.client.util.Base64.encodeBase64URLSafeString(software);
    return this;
  }

  /**
   * Identifies the name of the person or organization who supplied the original subject of the
   * file.
   * @see #decodeSourceProvider()
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceProvider() {
    return sourceProvider;
  }

  /**
   * Identifies the name of the person or organization who supplied the original subject of the
   * file.
   * @see #getSourceProvider()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeSourceProvider() {
    return com.google.api.client.util.Base64.decodeBase64(sourceProvider);
  }

  /**
   * Identifies the name of the person or organization who supplied the original subject of the
   * file.
   * @see #encodeSourceProvider()
   * @param sourceProvider sourceProvider or {@code null} for none
   */
  public VideoVideoClipInfo setSourceProvider(java.lang.String sourceProvider) {
    this.sourceProvider = sourceProvider;
    return this;
  }

  /**
   * Identifies the name of the person or organization who supplied the original subject of the
   * file.
   * @see #setSourceProvider()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeSourceProvider(byte[] sourceProvider) {
    this.sourceProvider = com.google.api.client.util.Base64.encodeBase64URLSafeString(sourceProvider);
    return this;
  }

  /**
   * Describes the contents of the file.
   * @see #decodeSubject()
   * @return value or {@code null} for none
   */
  public java.lang.String getSubject() {
    return subject;
  }

  /**
   * Describes the contents of the file.
   * @see #getSubject()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeSubject() {
    return com.google.api.client.util.Base64.decodeBase64(subject);
  }

  /**
   * Describes the contents of the file.
   * @see #encodeSubject()
   * @param subject subject or {@code null} for none
   */
  public VideoVideoClipInfo setSubject(java.lang.String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Describes the contents of the file.
   * @see #setSubject()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeSubject(byte[] subject) {
    this.subject = com.google.api.client.util.Base64.encodeBase64URLSafeString(subject);
    return this;
  }

  /**
   * Identifies the technician who digitized the subject file.
   * @see #decodeTechnician()
   * @return value or {@code null} for none
   */
  public java.lang.String getTechnician() {
    return technician;
  }

  /**
   * Identifies the technician who digitized the subject file.
   * @see #getTechnician()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeTechnician() {
    return com.google.api.client.util.Base64.decodeBase64(technician);
  }

  /**
   * Identifies the technician who digitized the subject file.
   * @see #encodeTechnician()
   * @param technician technician or {@code null} for none
   */
  public VideoVideoClipInfo setTechnician(java.lang.String technician) {
    this.technician = technician;
    return this;
  }

  /**
   * Identifies the technician who digitized the subject file.
   * @see #setTechnician()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeTechnician(byte[] technician) {
    this.technician = com.google.api.client.util.Base64.encodeBase64URLSafeString(technician);
    return this;
  }

  /**
   * @see #decodeTitle()
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**

   * @see #getTitle()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeTitle() {
    return com.google.api.client.util.Base64.decodeBase64(title);
  }

  /**
   * @see #encodeTitle()
   * @param title title or {@code null} for none
   */
  public VideoVideoClipInfo setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**

   * @see #setTitle()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeTitle(byte[] title) {
    this.title = com.google.api.client.util.Base64.encodeBase64URLSafeString(title);
    return this;
  }

  /**
   * Video vendor ID
   * @see #decodeVideoVendorId()
   * @return value or {@code null} for none
   */
  public java.lang.String getVideoVendorId() {
    return videoVendorId;
  }

  /**
   * Video vendor ID
   * @see #getVideoVendorId()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeVideoVendorId() {
    return com.google.api.client.util.Base64.decodeBase64(videoVendorId);
  }

  /**
   * Video vendor ID
   * @see #encodeVideoVendorId()
   * @param videoVendorId videoVendorId or {@code null} for none
   */
  public VideoVideoClipInfo setVideoVendorId(java.lang.String videoVendorId) {
    this.videoVendorId = videoVendorId;
    return this;
  }

  /**
   * Video vendor ID
   * @see #setVideoVendorId()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoVideoClipInfo encodeVideoVendorId(byte[] videoVendorId) {
    this.videoVendorId = com.google.api.client.util.Base64.encodeBase64URLSafeString(videoVendorId);
    return this;
  }

  @Override
  public VideoVideoClipInfo set(String fieldName, Object value) {
    return (VideoVideoClipInfo) super.set(fieldName, value);
  }

  @Override
  public VideoVideoClipInfo clone() {
    return (VideoVideoClipInfo) super.clone();
  }

}
