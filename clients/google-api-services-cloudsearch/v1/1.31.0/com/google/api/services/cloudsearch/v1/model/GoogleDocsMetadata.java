/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * The corpus specific metadata for office-type documents, from Google Docs and other sources. This
 * message is passed to the scorer and beyond. Next tag: 7
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleDocsMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Contains number of users and groups which can access the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AclInfo aclInfo;

  /**
   * The conceptual type (presentation, document, etc.) of this document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String documentType;

  /**
   * The file extension of the document. NOTE: As of October 2018 this field is not backfilled for
   * old documents.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileExtension;

  /**
   * The last time this document was modified, in seconds since epoch. Only counts content
   * modifications.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long lastContentModifiedTimestamp;

  /**
   * Additional per-result information, akin to Gmail's SingleThreadResponse. Note: GWS no longer
   * seems to use this field, but there's still one reference to it for Scribe, so we can't remove
   * it.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleDocsResultInfo resultInfo;

  /**
   * Contains additional information about the document depending on its type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TypeInfo typeInfo;

  /**
   * Contains number of users and groups which can access the document.
   * @return value or {@code null} for none
   */
  public AclInfo getAclInfo() {
    return aclInfo;
  }

  /**
   * Contains number of users and groups which can access the document.
   * @param aclInfo aclInfo or {@code null} for none
   */
  public GoogleDocsMetadata setAclInfo(AclInfo aclInfo) {
    this.aclInfo = aclInfo;
    return this;
  }

  /**
   * The conceptual type (presentation, document, etc.) of this document.
   * @return value or {@code null} for none
   */
  public java.lang.String getDocumentType() {
    return documentType;
  }

  /**
   * The conceptual type (presentation, document, etc.) of this document.
   * @param documentType documentType or {@code null} for none
   */
  public GoogleDocsMetadata setDocumentType(java.lang.String documentType) {
    this.documentType = documentType;
    return this;
  }

  /**
   * The file extension of the document. NOTE: As of October 2018 this field is not backfilled for
   * old documents.
   * @return value or {@code null} for none
   */
  public java.lang.String getFileExtension() {
    return fileExtension;
  }

  /**
   * The file extension of the document. NOTE: As of October 2018 this field is not backfilled for
   * old documents.
   * @param fileExtension fileExtension or {@code null} for none
   */
  public GoogleDocsMetadata setFileExtension(java.lang.String fileExtension) {
    this.fileExtension = fileExtension;
    return this;
  }

  /**
   * The last time this document was modified, in seconds since epoch. Only counts content
   * modifications.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLastContentModifiedTimestamp() {
    return lastContentModifiedTimestamp;
  }

  /**
   * The last time this document was modified, in seconds since epoch. Only counts content
   * modifications.
   * @param lastContentModifiedTimestamp lastContentModifiedTimestamp or {@code null} for none
   */
  public GoogleDocsMetadata setLastContentModifiedTimestamp(java.lang.Long lastContentModifiedTimestamp) {
    this.lastContentModifiedTimestamp = lastContentModifiedTimestamp;
    return this;
  }

  /**
   * Additional per-result information, akin to Gmail's SingleThreadResponse. Note: GWS no longer
   * seems to use this field, but there's still one reference to it for Scribe, so we can't remove
   * it.
   * @return value or {@code null} for none
   */
  public GoogleDocsResultInfo getResultInfo() {
    return resultInfo;
  }

  /**
   * Additional per-result information, akin to Gmail's SingleThreadResponse. Note: GWS no longer
   * seems to use this field, but there's still one reference to it for Scribe, so we can't remove
   * it.
   * @param resultInfo resultInfo or {@code null} for none
   */
  public GoogleDocsMetadata setResultInfo(GoogleDocsResultInfo resultInfo) {
    this.resultInfo = resultInfo;
    return this;
  }

  /**
   * Contains additional information about the document depending on its type.
   * @return value or {@code null} for none
   */
  public TypeInfo getTypeInfo() {
    return typeInfo;
  }

  /**
   * Contains additional information about the document depending on its type.
   * @param typeInfo typeInfo or {@code null} for none
   */
  public GoogleDocsMetadata setTypeInfo(TypeInfo typeInfo) {
    this.typeInfo = typeInfo;
    return this;
  }

  @Override
  public GoogleDocsMetadata set(String fieldName, Object value) {
    return (GoogleDocsMetadata) super.set(fieldName, value);
  }

  @Override
  public GoogleDocsMetadata clone() {
    return (GoogleDocsMetadata) super.clone();
  }

}
