/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.run.v1alpha1.model;

/**
 * The desired state of the CloudSchedulerSource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Run Admin API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CloudSchedulerSourceSpec extends com.google.api.client.json.GenericJson {

  /**
   * CloudEventOverrides defines overrides to control the output format and modifications of the
   * event sent to the sink.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudEventOverrides ceOverrides;

  /**
   * Data to send in the payload of the Event.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String data;

  /**
   * Location to create the Scheduler job in.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * Project is the ID of the Google Cloud Project that the CloudPubSubSource Topic exists in. If
   * omitted, defaults to same as the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String project;

  /**
   * CloudPubSubSourceSecret is the credential to use to create Topic / PullSubscription resources.
   * If omitted, uses Secret.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecretKeySelector pubsubSecret;

  /**
   * Schedule in cron format, for example: "* * * * *" would be run every minute.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String schedule;

  /**
   * Secret is the credential to use to create the Scheduler Job. If not specified, defaults to:
   * Name: google-cloud-key Key: key.json
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecretKeySelector secret;

  /**
   * Sink is a reference to an object that will resolve to a domain name or a URI directly to use as
   * the sink.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Destination sink;

  /**
   * CloudEventOverrides defines overrides to control the output format and modifications of the
   * event sent to the sink.
   * @return value or {@code null} for none
   */
  public CloudEventOverrides getCeOverrides() {
    return ceOverrides;
  }

  /**
   * CloudEventOverrides defines overrides to control the output format and modifications of the
   * event sent to the sink.
   * @param ceOverrides ceOverrides or {@code null} for none
   */
  public CloudSchedulerSourceSpec setCeOverrides(CloudEventOverrides ceOverrides) {
    this.ceOverrides = ceOverrides;
    return this;
  }

  /**
   * Data to send in the payload of the Event.
   * @return value or {@code null} for none
   */
  public java.lang.String getData() {
    return data;
  }

  /**
   * Data to send in the payload of the Event.
   * @param data data or {@code null} for none
   */
  public CloudSchedulerSourceSpec setData(java.lang.String data) {
    this.data = data;
    return this;
  }

  /**
   * Location to create the Scheduler job in.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * Location to create the Scheduler job in.
   * @param location location or {@code null} for none
   */
  public CloudSchedulerSourceSpec setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * Project is the ID of the Google Cloud Project that the CloudPubSubSource Topic exists in. If
   * omitted, defaults to same as the cluster.
   * @return value or {@code null} for none
   */
  public java.lang.String getProject() {
    return project;
  }

  /**
   * Project is the ID of the Google Cloud Project that the CloudPubSubSource Topic exists in. If
   * omitted, defaults to same as the cluster.
   * @param project project or {@code null} for none
   */
  public CloudSchedulerSourceSpec setProject(java.lang.String project) {
    this.project = project;
    return this;
  }

  /**
   * CloudPubSubSourceSecret is the credential to use to create Topic / PullSubscription resources.
   * If omitted, uses Secret.
   * @return value or {@code null} for none
   */
  public SecretKeySelector getPubsubSecret() {
    return pubsubSecret;
  }

  /**
   * CloudPubSubSourceSecret is the credential to use to create Topic / PullSubscription resources.
   * If omitted, uses Secret.
   * @param pubsubSecret pubsubSecret or {@code null} for none
   */
  public CloudSchedulerSourceSpec setPubsubSecret(SecretKeySelector pubsubSecret) {
    this.pubsubSecret = pubsubSecret;
    return this;
  }

  /**
   * Schedule in cron format, for example: "* * * * *" would be run every minute.
   * @return value or {@code null} for none
   */
  public java.lang.String getSchedule() {
    return schedule;
  }

  /**
   * Schedule in cron format, for example: "* * * * *" would be run every minute.
   * @param schedule schedule or {@code null} for none
   */
  public CloudSchedulerSourceSpec setSchedule(java.lang.String schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Secret is the credential to use to create the Scheduler Job. If not specified, defaults to:
   * Name: google-cloud-key Key: key.json
   * @return value or {@code null} for none
   */
  public SecretKeySelector getSecret() {
    return secret;
  }

  /**
   * Secret is the credential to use to create the Scheduler Job. If not specified, defaults to:
   * Name: google-cloud-key Key: key.json
   * @param secret secret or {@code null} for none
   */
  public CloudSchedulerSourceSpec setSecret(SecretKeySelector secret) {
    this.secret = secret;
    return this;
  }

  /**
   * Sink is a reference to an object that will resolve to a domain name or a URI directly to use as
   * the sink.
   * @return value or {@code null} for none
   */
  public Destination getSink() {
    return sink;
  }

  /**
   * Sink is a reference to an object that will resolve to a domain name or a URI directly to use as
   * the sink.
   * @param sink sink or {@code null} for none
   */
  public CloudSchedulerSourceSpec setSink(Destination sink) {
    this.sink = sink;
    return this;
  }

  @Override
  public CloudSchedulerSourceSpec set(String fieldName, Object value) {
    return (CloudSchedulerSourceSpec) super.set(fieldName, value);
  }

  @Override
  public CloudSchedulerSourceSpec clone() {
    return (CloudSchedulerSourceSpec) super.clone();
  }

}
