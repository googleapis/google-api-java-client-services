/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.secretmanager.v1.model;

/**
 * A secret version resource in the Secret Manager API.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Secret Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SecretVersion extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The time at which the SecretVersion was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The time this SecretVersion was destroyed. Only present if state is DESTROYED.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String destroyTime;

  /**
   * Output only. The resource name of the SecretVersion in the format `projects/secrets/versions`.
   * SecretVersion IDs in a Secret start at 1 and are incremented for each subsequent version of the
   * secret.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The replication status of the SecretVersion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReplicationStatus replicationStatus;

  /**
   * Output only. The current state of the SecretVersion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The time at which the SecretVersion was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time at which the SecretVersion was created.
   * @param createTime createTime or {@code null} for none
   */
  public SecretVersion setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The time this SecretVersion was destroyed. Only present if state is DESTROYED.
   * @return value or {@code null} for none
   */
  public String getDestroyTime() {
    return destroyTime;
  }

  /**
   * Output only. The time this SecretVersion was destroyed. Only present if state is DESTROYED.
   * @param destroyTime destroyTime or {@code null} for none
   */
  public SecretVersion setDestroyTime(String destroyTime) {
    this.destroyTime = destroyTime;
    return this;
  }

  /**
   * Output only. The resource name of the SecretVersion in the format `projects/secrets/versions`.
   * SecretVersion IDs in a Secret start at 1 and are incremented for each subsequent version of the
   * secret.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the SecretVersion in the format `projects/secrets/versions`.
   * SecretVersion IDs in a Secret start at 1 and are incremented for each subsequent version of the
   * secret.
   * @param name name or {@code null} for none
   */
  public SecretVersion setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The replication status of the SecretVersion.
   * @return value or {@code null} for none
   */
  public ReplicationStatus getReplicationStatus() {
    return replicationStatus;
  }

  /**
   * The replication status of the SecretVersion.
   * @param replicationStatus replicationStatus or {@code null} for none
   */
  public SecretVersion setReplicationStatus(ReplicationStatus replicationStatus) {
    this.replicationStatus = replicationStatus;
    return this;
  }

  /**
   * Output only. The current state of the SecretVersion.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The current state of the SecretVersion.
   * @param state state or {@code null} for none
   */
  public SecretVersion setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public SecretVersion set(String fieldName, Object value) {
    return (SecretVersion) super.set(fieldName, value);
  }

  @Override
  public SecretVersion clone() {
    return (SecretVersion) super.clone();
  }

}
