/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.storage.model;

/**
 * A bucket.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Storage JSON API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Bucket extends com.google.api.client.json.GenericJson {

  /**
   * Access controls on the bucket.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<BucketAccessControl> acl;

  /**
   * Default access controls to apply to new objects when no ACL is provided.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ObjectAccessControl> defaultObjectAcl;

  /**
   * The name of the bucket.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * The kind of item this is. For buckets, this is always storage#bucket.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The location of the bucket. Object data for objects in the bucket resides in physical storage
   * in this location. Can be US or EU. Defaults to US.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * The owner of the bucket. This will always be the project team's owner group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Owner owner;

  /**
   * The project the bucket belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger projectId;

  /**
   * The URI of this bucket.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String selfLink;

  /**
   * Creation time of the bucket in RFC 3339 format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime timeCreated;

  /**
   * The bucket's website configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Website website;

  /**
   * Access controls on the bucket.
   * @return value or {@code null} for none
   */
  public java.util.List<BucketAccessControl> getAcl() {
    return acl;
  }

  /**
   * Access controls on the bucket.
   * @param acl acl or {@code null} for none
   */
  public Bucket setAcl(java.util.List<BucketAccessControl> acl) {
    this.acl = acl;
    return this;
  }

  /**
   * Default access controls to apply to new objects when no ACL is provided.
   * @return value or {@code null} for none
   */
  public java.util.List<ObjectAccessControl> getDefaultObjectAcl() {
    return defaultObjectAcl;
  }

  /**
   * Default access controls to apply to new objects when no ACL is provided.
   * @param defaultObjectAcl defaultObjectAcl or {@code null} for none
   */
  public Bucket setDefaultObjectAcl(java.util.List<ObjectAccessControl> defaultObjectAcl) {
    this.defaultObjectAcl = defaultObjectAcl;
    return this;
  }

  /**
   * The name of the bucket.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * The name of the bucket.
   * @param id id or {@code null} for none
   */
  public Bucket setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * The kind of item this is. For buckets, this is always storage#bucket.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * The kind of item this is. For buckets, this is always storage#bucket.
   * @param kind kind or {@code null} for none
   */
  public Bucket setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The location of the bucket. Object data for objects in the bucket resides in physical storage
   * in this location. Can be US or EU. Defaults to US.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * The location of the bucket. Object data for objects in the bucket resides in physical storage
   * in this location. Can be US or EU. Defaults to US.
   * @param location location or {@code null} for none
   */
  public Bucket setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * The owner of the bucket. This will always be the project team's owner group.
   * @return value or {@code null} for none
   */
  public Owner getOwner() {
    return owner;
  }

  /**
   * The owner of the bucket. This will always be the project team's owner group.
   * @param owner owner or {@code null} for none
   */
  public Bucket setOwner(Owner owner) {
    this.owner = owner;
    return this;
  }

  /**
   * The project the bucket belongs to.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getProjectId() {
    return projectId;
  }

  /**
   * The project the bucket belongs to.
   * @param projectId projectId or {@code null} for none
   */
  public Bucket setProjectId(java.math.BigInteger projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * The URI of this bucket.
   * @return value or {@code null} for none
   */
  public java.lang.String getSelfLink() {
    return selfLink;
  }

  /**
   * The URI of this bucket.
   * @param selfLink selfLink or {@code null} for none
   */
  public Bucket setSelfLink(java.lang.String selfLink) {
    this.selfLink = selfLink;
    return this;
  }

  /**
   * Creation time of the bucket in RFC 3339 format.
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getTimeCreated() {
    return timeCreated;
  }

  /**
   * Creation time of the bucket in RFC 3339 format.
   * @param timeCreated timeCreated or {@code null} for none
   */
  public Bucket setTimeCreated(com.google.api.client.util.DateTime timeCreated) {
    this.timeCreated = timeCreated;
    return this;
  }

  /**
   * The bucket's website configuration.
   * @return value or {@code null} for none
   */
  public Website getWebsite() {
    return website;
  }

  /**
   * The bucket's website configuration.
   * @param website website or {@code null} for none
   */
  public Bucket setWebsite(Website website) {
    this.website = website;
    return this;
  }

  @Override
  public Bucket set(String fieldName, Object value) {
    return (Bucket) super.set(fieldName, value);
  }

  @Override
  public Bucket clone() {
    return (Bucket) super.clone();
  }

  /**
   * The owner of the bucket. This will always be the project team's owner group.
   */
  public static final class Owner extends com.google.api.client.json.GenericJson {

    /**
     * The entity, in the form group-groupId.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String entity;

    /**
     * The ID for the entity.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String entityId;

    /**
     * The entity, in the form group-groupId.
     * @return value or {@code null} for none
     */
    public java.lang.String getEntity() {
      return entity;
    }

    /**
     * The entity, in the form group-groupId.
     * @param entity entity or {@code null} for none
     */
    public Owner setEntity(java.lang.String entity) {
      this.entity = entity;
      return this;
    }

    /**
     * The ID for the entity.
     * @return value or {@code null} for none
     */
    public java.lang.String getEntityId() {
      return entityId;
    }

    /**
     * The ID for the entity.
     * @param entityId entityId or {@code null} for none
     */
    public Owner setEntityId(java.lang.String entityId) {
      this.entityId = entityId;
      return this;
    }

    @Override
    public Owner set(String fieldName, Object value) {
      return (Owner) super.set(fieldName, value);
    }

    @Override
    public Owner clone() {
      return (Owner) super.clone();
    }

  }

  /**
   * The bucket's website configuration.
   */
  public static final class Website extends com.google.api.client.json.GenericJson {

    /**
     * Behaves as the bucket's directory index where missing objects are treated as potential
     * directories.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String mainPageSuffix;

    /**
     * The custom object to return when a requested resource is not found.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String notFoundPage;

    /**
     * Behaves as the bucket's directory index where missing objects are treated as potential
     * directories.
     * @return value or {@code null} for none
     */
    public java.lang.String getMainPageSuffix() {
      return mainPageSuffix;
    }

    /**
     * Behaves as the bucket's directory index where missing objects are treated as potential
     * directories.
     * @param mainPageSuffix mainPageSuffix or {@code null} for none
     */
    public Website setMainPageSuffix(java.lang.String mainPageSuffix) {
      this.mainPageSuffix = mainPageSuffix;
      return this;
    }

    /**
     * The custom object to return when a requested resource is not found.
     * @return value or {@code null} for none
     */
    public java.lang.String getNotFoundPage() {
      return notFoundPage;
    }

    /**
     * The custom object to return when a requested resource is not found.
     * @param notFoundPage notFoundPage or {@code null} for none
     */
    public Website setNotFoundPage(java.lang.String notFoundPage) {
      this.notFoundPage = notFoundPage;
      return this;
    }

    @Override
    public Website set(String fieldName, Object value) {
      return (Website) super.set(fieldName, value);
    }

    @Override
    public Website clone() {
      return (Website) super.clone();
    }

  }
}
