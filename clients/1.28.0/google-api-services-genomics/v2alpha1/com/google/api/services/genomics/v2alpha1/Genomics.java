/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.v2alpha1;

/**
 * Service definition for Genomics (v2alpha1).
 *
 * <p>
 * Uploads, processes, queries, and searches Genomics data in the cloud.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/genomics" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GenomicsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Genomics extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.28.0 of the Genomics API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://genomics.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Genomics(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Genomics(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Pipelines collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Genomics genomics = new Genomics(...);}
   *   {@code Genomics.Pipelines.List request = genomics.pipelines().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Pipelines pipelines() {
    return new Pipelines();
  }

  /**
   * The "pipelines" collection of methods.
   */
  public class Pipelines {

    /**
     * Runs a pipeline.
     *
     * **Note:** Before you can use this method, the Genomics Service Agent must have access to your
     * project. This is done automatically when the Cloud Genomics API is first enabled, but if you
     * delete this permission, or if you enabled the Cloud Genomics API before the v2alpha1 API launch,
     * you must disable and re-enable the API to grant the Genomics Service Agent the required
     * permissions. Authorization requires the following [Google IAM](https://cloud.google.com/iam/)
     * permission:
     *
     * * `genomics.operations.create`
     *
     * [1]: /genomics/gsa
     *
     * Create a request for the method "pipelines.run".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link Run#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.genomics.v2alpha1.model.RunPipelineRequest}
     * @return the request
     */
    public Run run(com.google.api.services.genomics.v2alpha1.model.RunPipelineRequest content) throws java.io.IOException {
      Run result = new Run(content);
      initialize(result);
      return result;
    }

    public class Run extends GenomicsRequest<com.google.api.services.genomics.v2alpha1.model.Operation> {

      private static final String REST_PATH = "v2alpha1/pipelines:run";

      /**
       * Runs a pipeline.
       *
       * **Note:** Before you can use this method, the Genomics Service Agent must have access to your
       * project. This is done automatically when the Cloud Genomics API is first enabled, but if you
       * delete this permission, or if you enabled the Cloud Genomics API before the v2alpha1 API
       * launch, you must disable and re-enable the API to grant the Genomics Service Agent the required
       * permissions. Authorization requires the following [Google IAM](https://cloud.google.com/iam/)
       * permission:
       *
       * * `genomics.operations.create`
       *
       * [1]: /genomics/gsa
       *
       * Create a request for the method "pipelines.run".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link Run#execute()} method to invoke the remote operation. <p>
       * {@link Run#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.genomics.v2alpha1.model.RunPipelineRequest}
       * @since 1.13
       */
      protected Run(com.google.api.services.genomics.v2alpha1.model.RunPipelineRequest content) {
        super(Genomics.this, "POST", REST_PATH, content, com.google.api.services.genomics.v2alpha1.model.Operation.class);
      }

      @Override
      public Run set$Xgafv(java.lang.String $Xgafv) {
        return (Run) super.set$Xgafv($Xgafv);
      }

      @Override
      public Run setAccessToken(java.lang.String accessToken) {
        return (Run) super.setAccessToken(accessToken);
      }

      @Override
      public Run setAlt(java.lang.String alt) {
        return (Run) super.setAlt(alt);
      }

      @Override
      public Run setCallback(java.lang.String callback) {
        return (Run) super.setCallback(callback);
      }

      @Override
      public Run setFields(java.lang.String fields) {
        return (Run) super.setFields(fields);
      }

      @Override
      public Run setKey(java.lang.String key) {
        return (Run) super.setKey(key);
      }

      @Override
      public Run setOauthToken(java.lang.String oauthToken) {
        return (Run) super.setOauthToken(oauthToken);
      }

      @Override
      public Run setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Run) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Run setQuotaUser(java.lang.String quotaUser) {
        return (Run) super.setQuotaUser(quotaUser);
      }

      @Override
      public Run setUploadType(java.lang.String uploadType) {
        return (Run) super.setUploadType(uploadType);
      }

      @Override
      public Run setUploadProtocol(java.lang.String uploadProtocol) {
        return (Run) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Run set(String parameterName, Object value) {
        return (Run) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Genomics genomics = new Genomics(...);}
   *   {@code Genomics.Projects.List request = genomics.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Genomics genomics = new Genomics(...);}
     *   {@code Genomics.Operations.List request = genomics.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
       * cancel the operation, but success is not guaranteed. Clients may use Operations.GetOperation or
       * Operations.ListOperations to check whether the cancellation succeeded or the operation completed
       * despite cancellation. Authorization requires the following [Google
       * IAM](https://cloud.google.com/iam) permission
       *
       * * `genomics.operations.cancel`
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the genomics server.  After setting any optional
       * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be cancelled.
       * @param content the {@link com.google.api.services.genomics.v2alpha1.model.CancelOperationRequest}
       * @return the request
       */
      public Cancel cancel(java.lang.String name, com.google.api.services.genomics.v2alpha1.model.CancelOperationRequest content) throws java.io.IOException {
        Cancel result = new Cancel(name, content);
        initialize(result);
        return result;
      }

      public class Cancel extends GenomicsRequest<com.google.api.services.genomics.v2alpha1.model.Empty> {

        private static final String REST_PATH = "v2alpha1/{+name}:cancel";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. Clients may use Operations.GetOperation or
         * Operations.ListOperations to check whether the cancellation succeeded or the operation
         * completed despite cancellation. Authorization requires the following [Google
         * IAM](https://cloud.google.com/iam) permission
         *
         * * `genomics.operations.cancel`
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the the genomics server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         * <p> {@link
         * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.genomics.v2alpha1.model.CancelOperationRequest}
         * @since 1.13
         */
        protected Cancel(java.lang.String name, com.google.api.services.genomics.v2alpha1.model.CancelOperationRequest content) {
          super(Genomics.this, "POST", REST_PATH, content, com.google.api.services.genomics.v2alpha1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Cancel set$Xgafv(java.lang.String $Xgafv) {
          return (Cancel) super.set$Xgafv($Xgafv);
        }

        @Override
        public Cancel setAccessToken(java.lang.String accessToken) {
          return (Cancel) super.setAccessToken(accessToken);
        }

        @Override
        public Cancel setAlt(java.lang.String alt) {
          return (Cancel) super.setAlt(alt);
        }

        @Override
        public Cancel setCallback(java.lang.String callback) {
          return (Cancel) super.setCallback(callback);
        }

        @Override
        public Cancel setFields(java.lang.String fields) {
          return (Cancel) super.setFields(fields);
        }

        @Override
        public Cancel setKey(java.lang.String key) {
          return (Cancel) super.setKey(key);
        }

        @Override
        public Cancel setOauthToken(java.lang.String oauthToken) {
          return (Cancel) super.setOauthToken(oauthToken);
        }

        @Override
        public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Cancel) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Cancel setQuotaUser(java.lang.String quotaUser) {
          return (Cancel) super.setQuotaUser(quotaUser);
        }

        @Override
        public Cancel setUploadType(java.lang.String uploadType) {
          return (Cancel) super.setUploadType(uploadType);
        }

        @Override
        public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
          return (Cancel) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be cancelled. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be cancelled.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be cancelled. */
        public Cancel setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Cancel set(String parameterName, Object value) {
          return (Cancel) super.set(parameterName, value);
        }
      }
      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service. Authorization requires the
       * following [Google IAM](https://cloud.google.com/iam) permission
       *
       * * `genomics.operations.get`
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the genomics server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GenomicsRequest<com.google.api.services.genomics.v2alpha1.model.Operation> {

        private static final String REST_PATH = "v2alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service. Authorization requires the
         * following [Google IAM](https://cloud.google.com/iam) permission
         *
         * * `genomics.operations.get`
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the genomics server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Genomics.this, "GET", REST_PATH, null, com.google.api.services.genomics.v2alpha1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists operations that match the specified filter in the request. Authorization requires the
       * following [Google IAM](https://cloud.google.com/iam) permission
       *
       * * `genomics.operations.list`
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the genomics server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends GenomicsRequest<com.google.api.services.genomics.v2alpha1.model.ListOperationsResponse> {

        private static final String REST_PATH = "v2alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations$");

        /**
         * Lists operations that match the specified filter in the request. Authorization requires the
         * following [Google IAM](https://cloud.google.com/iam) permission
         *
         * * `genomics.operations.list`
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the the genomics server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Genomics.this, "GET", REST_PATH, null, com.google.api.services.genomics.v2alpha1.model.ListOperationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation's parent resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation's parent resource. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations$");
          }
          this.name = name;
          return this;
        }

        /**
         * A string for filtering Operations. In v2alpha1, the following filter fields are supported
         *
         * * createTime The time this job was created * events The set of event (names) that have
         * occurred while running the pipeline.  The  operator can be used to determine if a
         * particular event has occurred. * error If the pipeline is running, this value is NULL.
         * Once the pipeline finishes, the value is the standard Google error code. * labels.key or
         * labels."key with space" where key is a label key. * done If the pipeline is running, this
         * value is false. Once the pipeline finishes, the value is true.
         *
         * In v1 and v1alpha2, the following filter fields are supported
         *
         * * projectId Required. Corresponds to OperationMetadata.projectId. * createTime The time
         * this job was created, in seconds from the
         * [epoch](http://en.wikipedia.org/wiki/Unix_time). Can use `>=` and/or `<=` operators. *
         * status Can be `RUNNING`, `SUCCESS`, `FAILURE`, or `CANCELED`. Only one status may be
         * specified. * labels.key where key is a label key.
         *
         * Examples
         *
         * * `projectId = my-project AND createTime >= 1432140000` * `projectId = my-project AND
         * createTime >= 1432140000 AND createTime <= 1432150000 AND status = RUNNING` * `projectId
         * = my-project AND labels.color = *` * `projectId = my-project AND labels.color = red`
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A string for filtering Operations. In v2alpha1, the following filter fields are supported

       * createTime The time this job was created * events The set of event (names) that have occurred
       while running the pipeline.  The  operator can be used to determine if a particular event has
       occurred. * error If the pipeline is running, this value is NULL.  Once the pipeline finishes, the
       value is the standard Google error code. * labels.key or labels."key with space" where key is a
       label key. * done If the pipeline is running, this value is false. Once the pipeline finishes, the
       value is true.

       In v1 and v1alpha2, the following filter fields are supported

       * projectId Required. Corresponds to OperationMetadata.projectId. * createTime The time this job
       was created, in seconds from the [epoch](http://en.wikipedia.org/wiki/Unix_time). Can use `>=`
       and/or `<=` operators. * status Can be `RUNNING`, `SUCCESS`, `FAILURE`, or `CANCELED`. Only one
       status may be specified. * labels.key where key is a label key.

       Examples

       * `projectId = my-project AND createTime >= 1432140000` * `projectId = my-project AND createTime >=
       1432140000 AND createTime <= 1432150000 AND status = RUNNING` * `projectId = my-project AND
       labels.color = *` * `projectId = my-project AND labels.color = red`
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A string for filtering Operations. In v2alpha1, the following filter fields are supported
         *
         * * createTime The time this job was created * events The set of event (names) that have
         * occurred while running the pipeline.  The  operator can be used to determine if a
         * particular event has occurred. * error If the pipeline is running, this value is NULL.
         * Once the pipeline finishes, the value is the standard Google error code. * labels.key or
         * labels."key with space" where key is a label key. * done If the pipeline is running, this
         * value is false. Once the pipeline finishes, the value is true.
         *
         * In v1 and v1alpha2, the following filter fields are supported
         *
         * * projectId Required. Corresponds to OperationMetadata.projectId. * createTime The time
         * this job was created, in seconds from the
         * [epoch](http://en.wikipedia.org/wiki/Unix_time). Can use `>=` and/or `<=` operators. *
         * status Can be `RUNNING`, `SUCCESS`, `FAILURE`, or `CANCELED`. Only one status may be
         * specified. * labels.key where key is a label key.
         *
         * Examples
         *
         * * `projectId = my-project AND createTime >= 1432140000` * `projectId = my-project AND
         * createTime >= 1432140000 AND createTime <= 1432150000 AND status = RUNNING` * `projectId
         * = my-project AND labels.color = *` * `projectId = my-project AND labels.color = red`
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * The maximum number of results to return. If unspecified, defaults to 256. The maximum
         * value is 2048.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If unspecified, defaults to 256. The maximum value is
       2048.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of results to return. If unspecified, defaults to 256. The maximum
         * value is 2048.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Workers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Genomics genomics = new Genomics(...);}
   *   {@code Genomics.Workers.List request = genomics.workers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Workers workers() {
    return new Workers();
  }

  /**
   * The "workers" collection of methods.
   */
  public class Workers {

    /**
     * The worker uses this method to retrieve the assigned operation and provide periodic status
     * updates.
     *
     * Create a request for the method "workers.checkIn".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link CheckIn#execute()} method to invoke the remote operation.
     *
     * @param id The worker id, assigned when it was created.
     * @param content the {@link com.google.api.services.genomics.v2alpha1.model.CheckInRequest}
     * @return the request
     */
    public CheckIn checkIn(java.lang.String id, com.google.api.services.genomics.v2alpha1.model.CheckInRequest content) throws java.io.IOException {
      CheckIn result = new CheckIn(id, content);
      initialize(result);
      return result;
    }

    public class CheckIn extends GenomicsRequest<com.google.api.services.genomics.v2alpha1.model.CheckInResponse> {

      private static final String REST_PATH = "v2alpha1/workers/{id}:checkIn";

      /**
       * The worker uses this method to retrieve the assigned operation and provide periodic status
       * updates.
       *
       * Create a request for the method "workers.checkIn".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link CheckIn#execute()} method to invoke the remote operation.
       * <p> {@link
       * CheckIn#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id The worker id, assigned when it was created.
       * @param content the {@link com.google.api.services.genomics.v2alpha1.model.CheckInRequest}
       * @since 1.13
       */
      protected CheckIn(java.lang.String id, com.google.api.services.genomics.v2alpha1.model.CheckInRequest content) {
        super(Genomics.this, "POST", REST_PATH, content, com.google.api.services.genomics.v2alpha1.model.CheckInResponse.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public CheckIn set$Xgafv(java.lang.String $Xgafv) {
        return (CheckIn) super.set$Xgafv($Xgafv);
      }

      @Override
      public CheckIn setAccessToken(java.lang.String accessToken) {
        return (CheckIn) super.setAccessToken(accessToken);
      }

      @Override
      public CheckIn setAlt(java.lang.String alt) {
        return (CheckIn) super.setAlt(alt);
      }

      @Override
      public CheckIn setCallback(java.lang.String callback) {
        return (CheckIn) super.setCallback(callback);
      }

      @Override
      public CheckIn setFields(java.lang.String fields) {
        return (CheckIn) super.setFields(fields);
      }

      @Override
      public CheckIn setKey(java.lang.String key) {
        return (CheckIn) super.setKey(key);
      }

      @Override
      public CheckIn setOauthToken(java.lang.String oauthToken) {
        return (CheckIn) super.setOauthToken(oauthToken);
      }

      @Override
      public CheckIn setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CheckIn) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CheckIn setQuotaUser(java.lang.String quotaUser) {
        return (CheckIn) super.setQuotaUser(quotaUser);
      }

      @Override
      public CheckIn setUploadType(java.lang.String uploadType) {
        return (CheckIn) super.setUploadType(uploadType);
      }

      @Override
      public CheckIn setUploadProtocol(java.lang.String uploadProtocol) {
        return (CheckIn) super.setUploadProtocol(uploadProtocol);
      }

      /** The worker id, assigned when it was created. */
      @com.google.api.client.util.Key
      private java.lang.String id;

      /** The worker id, assigned when it was created.
       */
      public java.lang.String getId() {
        return id;
      }

      /** The worker id, assigned when it was created. */
      public CheckIn setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @Override
      public CheckIn set(String parameterName, Object value) {
        return (CheckIn) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Genomics}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Genomics}. */
    @Override
    public Genomics build() {
      return new Genomics(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GenomicsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGenomicsRequestInitializer(
        GenomicsRequestInitializer genomicsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(genomicsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
