/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Indicates a question, requesting the truth-value/actualness of a state of affairs denoted by the
 * expression encompassed by the FunctionCall this appears on. Often this is a yes/no question, e.g.
 * [was tom cruise in top gun] : ActedIn.polar(Movie=/m/top_gun, Actor=/m/tom_cruise) Not all polar
 * questions will necessarily have a yes/no answer; the expected resolution of a polar question is a
 * StateOfAffairs. e.g. [is chocolate good for you] : FoodItemAttribute.polar(/m/chocolate,
 * /m/healthy) which may not have a simple yes/no answer. See go/mrf-polar-questions for details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KnowledgeAnswersMarkerPolarQuestion extends com.google.api.client.json.GenericJson {

  @Override
  public KnowledgeAnswersMarkerPolarQuestion set(String fieldName, Object value) {
    return (KnowledgeAnswersMarkerPolarQuestion) super.set(fieldName, value);
  }

  @Override
  public KnowledgeAnswersMarkerPolarQuestion clone() {
    return (KnowledgeAnswersMarkerPolarQuestion) super.clone();
  }

}
