/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datastore.v1beta3.model;

/**
 * A message that can hold any of the supported value types and associated metadata.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Datastore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Value extends com.google.api.client.json.GenericJson {

  /**
   * An array value. Cannot contain another array value. A `Value` instance that sets field
   * `array_value` must not set fields `meaning` or `exclude_from_indexes`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ArrayValue arrayValue;

  /**
   * A blob value. May have at most 1,000,000 bytes. When `exclude_from_indexes` is false, may have
   * at most 1500 bytes. In JSON requests, must be base64-encoded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String blobValue;

  /**
   * A boolean value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean booleanValue;

  /**
   * A double value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double doubleValue;

  /**
   * An entity value.
   *
   * - May have no key. - May have a key with an incomplete key path. - May have a reserved/read-
   * only key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Entity entityValue;

  /**
   * If the value should be excluded from all indexes including those defined explicitly.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean excludeFromIndexes;

  /**
   * A geo point value representing a point on the surface of Earth.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LatLng geoPointValue;

  /**
   * An integer value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long integerValue;

  /**
   * A key value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Key keyValue;

  /**
   * The `meaning` field should only be populated for backwards compatibility.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer meaning;

  /**
   * A null value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nullValue;

  /**
   * A UTF-8 encoded string value. When `exclude_from_indexes` is false (it is indexed) , may have
   * at most 1500 bytes. Otherwise, may be set to at least 1,000,000 bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stringValue;

  /**
   * A timestamp value. When stored in the Datastore, precise only to microseconds; any additional
   * precision is rounded down.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String timestampValue;

  /**
   * An array value. Cannot contain another array value. A `Value` instance that sets field
   * `array_value` must not set fields `meaning` or `exclude_from_indexes`.
   * @return value or {@code null} for none
   */
  public ArrayValue getArrayValue() {
    return arrayValue;
  }

  /**
   * An array value. Cannot contain another array value. A `Value` instance that sets field
   * `array_value` must not set fields `meaning` or `exclude_from_indexes`.
   * @param arrayValue arrayValue or {@code null} for none
   */
  public Value setArrayValue(ArrayValue arrayValue) {
    this.arrayValue = arrayValue;
    return this;
  }

  /**
   * A blob value. May have at most 1,000,000 bytes. When `exclude_from_indexes` is false, may have
   * at most 1500 bytes. In JSON requests, must be base64-encoded.
   * @see #decodeBlobValue()
   * @return value or {@code null} for none
   */
  public java.lang.String getBlobValue() {
    return blobValue;
  }

  /**
   * A blob value. May have at most 1,000,000 bytes. When `exclude_from_indexes` is false, may have
   * at most 1500 bytes. In JSON requests, must be base64-encoded.
   * @see #getBlobValue()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeBlobValue() {
    return com.google.api.client.util.Base64.decodeBase64(blobValue);
  }

  /**
   * A blob value. May have at most 1,000,000 bytes. When `exclude_from_indexes` is false, may have
   * at most 1500 bytes. In JSON requests, must be base64-encoded.
   * @see #encodeBlobValue()
   * @param blobValue blobValue or {@code null} for none
   */
  public Value setBlobValue(java.lang.String blobValue) {
    this.blobValue = blobValue;
    return this;
  }

  /**
   * A blob value. May have at most 1,000,000 bytes. When `exclude_from_indexes` is false, may have
   * at most 1500 bytes. In JSON requests, must be base64-encoded.
   * @see #setBlobValue()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public Value encodeBlobValue(byte[] blobValue) {
    this.blobValue = com.google.api.client.util.Base64.encodeBase64URLSafeString(blobValue);
    return this;
  }

  /**
   * A boolean value.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBooleanValue() {
    return booleanValue;
  }

  /**
   * A boolean value.
   * @param booleanValue booleanValue or {@code null} for none
   */
  public Value setBooleanValue(java.lang.Boolean booleanValue) {
    this.booleanValue = booleanValue;
    return this;
  }

  /**
   * A double value.
   * @return value or {@code null} for none
   */
  public java.lang.Double getDoubleValue() {
    return doubleValue;
  }

  /**
   * A double value.
   * @param doubleValue doubleValue or {@code null} for none
   */
  public Value setDoubleValue(java.lang.Double doubleValue) {
    this.doubleValue = doubleValue;
    return this;
  }

  /**
   * An entity value.
   *
   * - May have no key. - May have a key with an incomplete key path. - May have a reserved/read-
   * only key.
   * @return value or {@code null} for none
   */
  public Entity getEntityValue() {
    return entityValue;
  }

  /**
   * An entity value.
   *
   * - May have no key. - May have a key with an incomplete key path. - May have a reserved/read-
   * only key.
   * @param entityValue entityValue or {@code null} for none
   */
  public Value setEntityValue(Entity entityValue) {
    this.entityValue = entityValue;
    return this;
  }

  /**
   * If the value should be excluded from all indexes including those defined explicitly.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getExcludeFromIndexes() {
    return excludeFromIndexes;
  }

  /**
   * If the value should be excluded from all indexes including those defined explicitly.
   * @param excludeFromIndexes excludeFromIndexes or {@code null} for none
   */
  public Value setExcludeFromIndexes(java.lang.Boolean excludeFromIndexes) {
    this.excludeFromIndexes = excludeFromIndexes;
    return this;
  }

  /**
   * A geo point value representing a point on the surface of Earth.
   * @return value or {@code null} for none
   */
  public LatLng getGeoPointValue() {
    return geoPointValue;
  }

  /**
   * A geo point value representing a point on the surface of Earth.
   * @param geoPointValue geoPointValue or {@code null} for none
   */
  public Value setGeoPointValue(LatLng geoPointValue) {
    this.geoPointValue = geoPointValue;
    return this;
  }

  /**
   * An integer value.
   * @return value or {@code null} for none
   */
  public java.lang.Long getIntegerValue() {
    return integerValue;
  }

  /**
   * An integer value.
   * @param integerValue integerValue or {@code null} for none
   */
  public Value setIntegerValue(java.lang.Long integerValue) {
    this.integerValue = integerValue;
    return this;
  }

  /**
   * A key value.
   * @return value or {@code null} for none
   */
  public Key getKeyValue() {
    return keyValue;
  }

  /**
   * A key value.
   * @param keyValue keyValue or {@code null} for none
   */
  public Value setKeyValue(Key keyValue) {
    this.keyValue = keyValue;
    return this;
  }

  /**
   * The `meaning` field should only be populated for backwards compatibility.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMeaning() {
    return meaning;
  }

  /**
   * The `meaning` field should only be populated for backwards compatibility.
   * @param meaning meaning or {@code null} for none
   */
  public Value setMeaning(java.lang.Integer meaning) {
    this.meaning = meaning;
    return this;
  }

  /**
   * A null value.
   * @return value or {@code null} for none
   */
  public java.lang.String getNullValue() {
    return nullValue;
  }

  /**
   * A null value.
   * @param nullValue nullValue or {@code null} for none
   */
  public Value setNullValue(java.lang.String nullValue) {
    this.nullValue = nullValue;
    return this;
  }

  /**
   * A UTF-8 encoded string value. When `exclude_from_indexes` is false (it is indexed) , may have
   * at most 1500 bytes. Otherwise, may be set to at least 1,000,000 bytes.
   * @return value or {@code null} for none
   */
  public java.lang.String getStringValue() {
    return stringValue;
  }

  /**
   * A UTF-8 encoded string value. When `exclude_from_indexes` is false (it is indexed) , may have
   * at most 1500 bytes. Otherwise, may be set to at least 1,000,000 bytes.
   * @param stringValue stringValue or {@code null} for none
   */
  public Value setStringValue(java.lang.String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * A timestamp value. When stored in the Datastore, precise only to microseconds; any additional
   * precision is rounded down.
   * @return value or {@code null} for none
   */
  public String getTimestampValue() {
    return timestampValue;
  }

  /**
   * A timestamp value. When stored in the Datastore, precise only to microseconds; any additional
   * precision is rounded down.
   * @param timestampValue timestampValue or {@code null} for none
   */
  public Value setTimestampValue(String timestampValue) {
    this.timestampValue = timestampValue;
    return this;
  }

  @Override
  public Value set(String fieldName, Object value) {
    return (Value) super.set(fieldName, value);
  }

  @Override
  public Value clone() {
    return (Value) super.clone();
  }

}
