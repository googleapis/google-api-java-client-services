/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.compute.model;

/**
 * A single wave in a rollout plan.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Compute Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RolloutPlanWave extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The display name of this wave of the rollout plan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. The wave number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long number;

  /**
   * Optional. The orchestration options for this wave.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RolloutPlanWaveOrchestrationOptions orchestrationOptions;

  /**
   * Required. The selectors for this wave. There is a logical AND between each selector defined in
   * a wave, so a resource must satisfy the criteria of *all* the specified selectors to be in scope
   * for the wave.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RolloutPlanWaveSelector> selectors;

  /**
   * Required. The validation to be performed at the end of this wave.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RolloutPlanWaveValidation validation;

  /**
   * Optional. The display name of this wave of the rollout plan.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Optional. The display name of this wave of the rollout plan.
   * @param displayName displayName or {@code null} for none
   */
  public RolloutPlanWave setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. The wave number.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumber() {
    return number;
  }

  /**
   * Output only. The wave number.
   * @param number number or {@code null} for none
   */
  public RolloutPlanWave setNumber(java.lang.Long number) {
    this.number = number;
    return this;
  }

  /**
   * Optional. The orchestration options for this wave.
   * @return value or {@code null} for none
   */
  public RolloutPlanWaveOrchestrationOptions getOrchestrationOptions() {
    return orchestrationOptions;
  }

  /**
   * Optional. The orchestration options for this wave.
   * @param orchestrationOptions orchestrationOptions or {@code null} for none
   */
  public RolloutPlanWave setOrchestrationOptions(RolloutPlanWaveOrchestrationOptions orchestrationOptions) {
    this.orchestrationOptions = orchestrationOptions;
    return this;
  }

  /**
   * Required. The selectors for this wave. There is a logical AND between each selector defined in
   * a wave, so a resource must satisfy the criteria of *all* the specified selectors to be in scope
   * for the wave.
   * @return value or {@code null} for none
   */
  public java.util.List<RolloutPlanWaveSelector> getSelectors() {
    return selectors;
  }

  /**
   * Required. The selectors for this wave. There is a logical AND between each selector defined in
   * a wave, so a resource must satisfy the criteria of *all* the specified selectors to be in scope
   * for the wave.
   * @param selectors selectors or {@code null} for none
   */
  public RolloutPlanWave setSelectors(java.util.List<RolloutPlanWaveSelector> selectors) {
    this.selectors = selectors;
    return this;
  }

  /**
   * Required. The validation to be performed at the end of this wave.
   * @return value or {@code null} for none
   */
  public RolloutPlanWaveValidation getValidation() {
    return validation;
  }

  /**
   * Required. The validation to be performed at the end of this wave.
   * @param validation validation or {@code null} for none
   */
  public RolloutPlanWave setValidation(RolloutPlanWaveValidation validation) {
    this.validation = validation;
    return this;
  }

  @Override
  public RolloutPlanWave set(String fieldName, Object value) {
    return (RolloutPlanWave) super.set(fieldName, value);
  }

  @Override
  public RolloutPlanWave clone() {
    return (RolloutPlanWave) super.clone();
  }

}
