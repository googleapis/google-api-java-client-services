/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apikeys.v2;

/**
 * Service definition for ApiKeysService (v2).
 *
 * <p>
 * Manages the API keys associated with developer projects.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/api-keys/docs" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ApiKeysServiceRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ApiKeysService extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.32.1 of the API Keys API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://apikeys.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://apikeys.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ApiKeysService(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ApiKeysService(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Keys collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ApiKeysService apikeys = new ApiKeysService(...);}
   *   {@code ApiKeysService.Keys.List request = apikeys.keys().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Keys keys() {
    return new Keys();
  }

  /**
   * The "keys" collection of methods.
   */
  public class Keys {

    /**
     * Find the parent project and resource name of the API key that matches the key string in the
     * request. If the API key has been purged, resource name will not be set. The service account must
     * have the `apikeys.keys.lookup` permission on the parent project.
     *
     * Create a request for the method "keys.lookupKey".
     *
     * This request holds the parameters needed by the apikeys server.  After setting any optional
     * parameters, call the {@link LookupKey#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public LookupKey lookupKey() throws java.io.IOException {
      LookupKey result = new LookupKey();
      initialize(result);
      return result;
    }

    public class LookupKey extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.V2LookupKeyResponse> {

      private static final String REST_PATH = "v2/keys:lookupKey";

      /**
       * Find the parent project and resource name of the API key that matches the key string in the
       * request. If the API key has been purged, resource name will not be set. The service account
       * must have the `apikeys.keys.lookup` permission on the parent project.
       *
       * Create a request for the method "keys.lookupKey".
       *
       * This request holds the parameters needed by the the apikeys server.  After setting any optional
       * parameters, call the {@link LookupKey#execute()} method to invoke the remote operation. <p>
       * {@link
       * LookupKey#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected LookupKey() {
        super(ApiKeysService.this, "GET", REST_PATH, null, com.google.api.services.apikeys.v2.model.V2LookupKeyResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public LookupKey set$Xgafv(java.lang.String $Xgafv) {
        return (LookupKey) super.set$Xgafv($Xgafv);
      }

      @Override
      public LookupKey setAccessToken(java.lang.String accessToken) {
        return (LookupKey) super.setAccessToken(accessToken);
      }

      @Override
      public LookupKey setAlt(java.lang.String alt) {
        return (LookupKey) super.setAlt(alt);
      }

      @Override
      public LookupKey setCallback(java.lang.String callback) {
        return (LookupKey) super.setCallback(callback);
      }

      @Override
      public LookupKey setFields(java.lang.String fields) {
        return (LookupKey) super.setFields(fields);
      }

      @Override
      public LookupKey setKey(java.lang.String key) {
        return (LookupKey) super.setKey(key);
      }

      @Override
      public LookupKey setOauthToken(java.lang.String oauthToken) {
        return (LookupKey) super.setOauthToken(oauthToken);
      }

      @Override
      public LookupKey setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (LookupKey) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public LookupKey setQuotaUser(java.lang.String quotaUser) {
        return (LookupKey) super.setQuotaUser(quotaUser);
      }

      @Override
      public LookupKey setUploadType(java.lang.String uploadType) {
        return (LookupKey) super.setUploadType(uploadType);
      }

      @Override
      public LookupKey setUploadProtocol(java.lang.String uploadProtocol) {
        return (LookupKey) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Finds the project that owns the key string value. */
      @com.google.api.client.util.Key
      private java.lang.String keyString;

      /** Required. Finds the project that owns the key string value.
       */
      public java.lang.String getKeyString() {
        return keyString;
      }

      /** Required. Finds the project that owns the key string value. */
      public LookupKey setKeyString(java.lang.String keyString) {
        this.keyString = keyString;
        return this;
      }

      @Override
      public LookupKey set(String parameterName, Object value) {
        return (LookupKey) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Operations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ApiKeysService apikeys = new ApiKeysService(...);}
   *   {@code ApiKeysService.Operations.List request = apikeys.operations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Operations operations() {
    return new Operations();
  }

  /**
   * The "operations" collection of methods.
   */
  public class Operations {

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the
     * operation result at intervals as recommended by the API service.
     *
     * Create a request for the method "operations.get".
     *
     * This request holds the parameters needed by the apikeys server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.Operation> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/[^/]+$");

      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the the apikeys server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(ApiKeysService.this, "GET", REST_PATH, null, com.google.api.services.apikeys.v2.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ApiKeysService apikeys = new ApiKeysService(...);}
   *   {@code ApiKeysService.Projects.List request = apikeys.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ApiKeysService apikeys = new ApiKeysService(...);}
     *   {@code ApiKeysService.Locations.List request = apikeys.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the Keys collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ApiKeysService apikeys = new ApiKeysService(...);}
       *   {@code ApiKeysService.Keys.List request = apikeys.keys().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keys keys() {
        return new Keys();
      }

      /**
       * The "keys" collection of methods.
       */
      public class Keys {

        /**
         * DEPRECATED: API customers can call `GetKey` and then `CreateKey` methods to create a copy of an
         * existing key. Retire `CloneKey` method to eliminate the unnessary method from API Keys API.
         * Clones the existing key's restriction and display name to a new API key. The service account must
         * have the `apikeys.keys.get` and `apikeys.keys.create` permissions in the project. NOTE: Key is a
         * global resource; hence the only supported value for location is `global`.
         *
         * Create a request for the method "keys.clone".
         *
         * This request holds the parameters needed by the apikeys server.  After setting any optional
         * parameters, call the {@link Clone#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the API key to be cloned in the same project.
         * @param content the {@link com.google.api.services.apikeys.v2.model.V2CloneKeyRequest}
         * @return the request
         */
        public Clone clone(java.lang.String name, com.google.api.services.apikeys.v2.model.V2CloneKeyRequest content) throws java.io.IOException {
          Clone result = new Clone(name, content);
          initialize(result);
          return result;
        }

        public class Clone extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}:clone";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/keys/[^/]+$");

          /**
           * DEPRECATED: API customers can call `GetKey` and then `CreateKey` methods to create a copy of an
           * existing key. Retire `CloneKey` method to eliminate the unnessary method from API Keys API.
           * Clones the existing key's restriction and display name to a new API key. The service account
           * must have the `apikeys.keys.get` and `apikeys.keys.create` permissions in the project. NOTE:
           * Key is a global resource; hence the only supported value for location is `global`.
           *
           * Create a request for the method "keys.clone".
           *
           * This request holds the parameters needed by the the apikeys server.  After setting any optional
           * parameters, call the {@link Clone#execute()} method to invoke the remote operation. <p> {@link
           * Clone#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the API key to be cloned in the same project.
           * @param content the {@link com.google.api.services.apikeys.v2.model.V2CloneKeyRequest}
           * @since 1.13
           */
          protected Clone(java.lang.String name, com.google.api.services.apikeys.v2.model.V2CloneKeyRequest content) {
            super(ApiKeysService.this, "POST", REST_PATH, content, com.google.api.services.apikeys.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
          }

          @Override
          public Clone set$Xgafv(java.lang.String $Xgafv) {
            return (Clone) super.set$Xgafv($Xgafv);
          }

          @Override
          public Clone setAccessToken(java.lang.String accessToken) {
            return (Clone) super.setAccessToken(accessToken);
          }

          @Override
          public Clone setAlt(java.lang.String alt) {
            return (Clone) super.setAlt(alt);
          }

          @Override
          public Clone setCallback(java.lang.String callback) {
            return (Clone) super.setCallback(callback);
          }

          @Override
          public Clone setFields(java.lang.String fields) {
            return (Clone) super.setFields(fields);
          }

          @Override
          public Clone setKey(java.lang.String key) {
            return (Clone) super.setKey(key);
          }

          @Override
          public Clone setOauthToken(java.lang.String oauthToken) {
            return (Clone) super.setOauthToken(oauthToken);
          }

          @Override
          public Clone setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Clone) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Clone setQuotaUser(java.lang.String quotaUser) {
            return (Clone) super.setQuotaUser(quotaUser);
          }

          @Override
          public Clone setUploadType(java.lang.String uploadType) {
            return (Clone) super.setUploadType(uploadType);
          }

          @Override
          public Clone setUploadProtocol(java.lang.String uploadProtocol) {
            return (Clone) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the API key to be cloned in the same project. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the API key to be cloned in the same project.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the API key to be cloned in the same project. */
          public Clone setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Clone set(String parameterName, Object value) {
            return (Clone) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new API key. NOTE: Key is a global resource; hence the only supported value for
         * location is `global`.
         *
         * Create a request for the method "keys.create".
         *
         * This request holds the parameters needed by the apikeys server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project in which the API key is created.
         * @param content the {@link com.google.api.services.apikeys.v2.model.V2Key}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apikeys.v2.model.V2Key content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+parent}/keys";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new API key. NOTE: Key is a global resource; hence the only supported value for
           * location is `global`.
           *
           * Create a request for the method "keys.create".
           *
           * This request holds the parameters needed by the the apikeys server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project in which the API key is created.
           * @param content the {@link com.google.api.services.apikeys.v2.model.V2Key}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apikeys.v2.model.V2Key content) {
            super(ApiKeysService.this, "POST", REST_PATH, content, com.google.api.services.apikeys.v2.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The project in which the API key is created. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project in which the API key is created.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The project in which the API key is created. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * User specified key id (optional). If specified, it will become the final component of
           * the key resource name. The id must be unique within the project, must conform with
           * RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63
           * characters. In another word, the id must match the regular expression:
           * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`. The id must NOT be a UUID-like string.
           */
          @com.google.api.client.util.Key
          private java.lang.String keyId;

          /** User specified key id (optional). If specified, it will become the final component of the key
         resource name. The id must be unique within the project, must conform with RFC-1034, is restricted
         to lower-cased letters, and has a maximum length of 63 characters. In another word, the id must
         match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`. The id must NOT be a UUID-like
         string.
           */
          public java.lang.String getKeyId() {
            return keyId;
          }

          /**
           * User specified key id (optional). If specified, it will become the final component of
           * the key resource name. The id must be unique within the project, must conform with
           * RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63
           * characters. In another word, the id must match the regular expression:
           * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`. The id must NOT be a UUID-like string.
           */
          public Create setKeyId(java.lang.String keyId) {
            this.keyId = keyId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an API key. Deleted key can be retrieved within 30 days of deletion. Afterward, key will
         * be purged from the project. NOTE: Key is a global resource; hence the only supported value for
         * location is `global`.
         *
         * Create a request for the method "keys.delete".
         *
         * This request holds the parameters needed by the apikeys server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the API key to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/keys/[^/]+$");

          /**
           * Deletes an API key. Deleted key can be retrieved within 30 days of deletion. Afterward, key
           * will be purged from the project. NOTE: Key is a global resource; hence the only supported value
           * for location is `global`.
           *
           * Create a request for the method "keys.delete".
           *
           * This request holds the parameters needed by the the apikeys server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the API key to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(ApiKeysService.this, "DELETE", REST_PATH, null, com.google.api.services.apikeys.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the API key to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the API key to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the API key to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The etag known to the client for the expected state of the key. This is to be
           * used for optimistic concurrency.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** Optional. The etag known to the client for the expected state of the key. This is to be used for
         optimistic concurrency.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * Optional. The etag known to the client for the expected state of the key. This is to be
           * used for optimistic concurrency.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the metadata for an API key. The key string of the API key isn't included in the response.
         * NOTE: Key is a global resource; hence the only supported value for location is `global`.
         *
         * Create a request for the method "keys.get".
         *
         * This request holds the parameters needed by the apikeys server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the API key to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.V2Key> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/keys/[^/]+$");

          /**
           * Gets the metadata for an API key. The key string of the API key isn't included in the response.
           * NOTE: Key is a global resource; hence the only supported value for location is `global`.
           *
           * Create a request for the method "keys.get".
           *
           * This request holds the parameters needed by the the apikeys server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the API key to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ApiKeysService.this, "GET", REST_PATH, null, com.google.api.services.apikeys.v2.model.V2Key.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the API key to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the API key to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the API key to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Get the key string for an API key. NOTE: Key is a global resource; hence the only supported value
         * for location is `global`.
         *
         * Create a request for the method "keys.getKeyString".
         *
         * This request holds the parameters needed by the apikeys server.  After setting any optional
         * parameters, call the {@link GetKeyString#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the API key to be retrieved.
         * @return the request
         */
        public GetKeyString getKeyString(java.lang.String name) throws java.io.IOException {
          GetKeyString result = new GetKeyString(name);
          initialize(result);
          return result;
        }

        public class GetKeyString extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.V2GetKeyStringResponse> {

          private static final String REST_PATH = "v2/{+name}/keyString";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/keys/[^/]+$");

          /**
           * Get the key string for an API key. NOTE: Key is a global resource; hence the only supported
           * value for location is `global`.
           *
           * Create a request for the method "keys.getKeyString".
           *
           * This request holds the parameters needed by the the apikeys server.  After setting any optional
           * parameters, call the {@link GetKeyString#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetKeyString#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the API key to be retrieved.
           * @since 1.13
           */
          protected GetKeyString(java.lang.String name) {
            super(ApiKeysService.this, "GET", REST_PATH, null, com.google.api.services.apikeys.v2.model.V2GetKeyStringResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetKeyString set$Xgafv(java.lang.String $Xgafv) {
            return (GetKeyString) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetKeyString setAccessToken(java.lang.String accessToken) {
            return (GetKeyString) super.setAccessToken(accessToken);
          }

          @Override
          public GetKeyString setAlt(java.lang.String alt) {
            return (GetKeyString) super.setAlt(alt);
          }

          @Override
          public GetKeyString setCallback(java.lang.String callback) {
            return (GetKeyString) super.setCallback(callback);
          }

          @Override
          public GetKeyString setFields(java.lang.String fields) {
            return (GetKeyString) super.setFields(fields);
          }

          @Override
          public GetKeyString setKey(java.lang.String key) {
            return (GetKeyString) super.setKey(key);
          }

          @Override
          public GetKeyString setOauthToken(java.lang.String oauthToken) {
            return (GetKeyString) super.setOauthToken(oauthToken);
          }

          @Override
          public GetKeyString setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetKeyString) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetKeyString setQuotaUser(java.lang.String quotaUser) {
            return (GetKeyString) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetKeyString setUploadType(java.lang.String uploadType) {
            return (GetKeyString) super.setUploadType(uploadType);
          }

          @Override
          public GetKeyString setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetKeyString) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the API key to be retrieved. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the API key to be retrieved.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the API key to be retrieved. */
          public GetKeyString setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetKeyString set(String parameterName, Object value) {
            return (GetKeyString) super.set(parameterName, value);
          }
        }
        /**
         * Lists the API keys owned by a project. The key string of the API key isn't included in the
         * response. NOTE: Key is a global resource; hence the only supported value for location is
         * `global`.
         *
         * Create a request for the method "keys.list".
         *
         * This request holds the parameters needed by the apikeys server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Lists all API keys associated with this project.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.V2ListKeysResponse> {

          private static final String REST_PATH = "v2/{+parent}/keys";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the API keys owned by a project. The key string of the API key isn't included in the
           * response. NOTE: Key is a global resource; hence the only supported value for location is
           * `global`.
           *
           * Create a request for the method "keys.list".
           *
           * This request holds the parameters needed by the the apikeys server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Lists all API keys associated with this project.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(ApiKeysService.this, "GET", REST_PATH, null, com.google.api.services.apikeys.v2.model.V2ListKeysResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Lists all API keys associated with this project. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Lists all API keys associated with this project.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Lists all API keys associated with this project. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Deprecated: Use `show_deleted` instead. Only list keys that conform to the
           * specified filter. The allowed filter strings are `state:ACTIVE` and `state:DELETED`. By
           * default, ListKeys returns only active keys.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. Deprecated: Use `show_deleted` instead. Only list keys that conform to the specified
         filter. The allowed filter strings are `state:ACTIVE` and `state:DELETED`. By default, ListKeys
         returns only active keys.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. Deprecated: Use `show_deleted` instead. Only list keys that conform to the
           * specified filter. The allowed filter strings are `state:ACTIVE` and `state:DELETED`. By
           * default, ListKeys returns only active keys.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. Specifies the maximum number of results to be returned at a time. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. Specifies the maximum number of results to be returned at a time.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. Specifies the maximum number of results to be returned at a time. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. Requests a specific page of results. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Requests a specific page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. Requests a specific page of results. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Optional. Indicate that keys deleted in the past 30 days should also be returned. */
          @com.google.api.client.util.Key
          private java.lang.Boolean showDeleted;

          /** Optional. Indicate that keys deleted in the past 30 days should also be returned.
           */
          public java.lang.Boolean getShowDeleted() {
            return showDeleted;
          }

          /** Optional. Indicate that keys deleted in the past 30 days should also be returned. */
          public List setShowDeleted(java.lang.Boolean showDeleted) {
            this.showDeleted = showDeleted;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Patches the modifiable fields of an API key. The key string of the API key isn't included in the
         * response. NOTE: Key is a global resource; hence the only supported value for location is
         * `global`.
         *
         * Create a request for the method "keys.patch".
         *
         * This request holds the parameters needed by the apikeys server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The resource name of the key. The `name` has the form:
         *        `projects//locations/global/keys/`. For example:
         *        `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE:
         *        Key is a global resource; hence the only supported value for location is `global`.
         * @param content the {@link com.google.api.services.apikeys.v2.model.V2Key}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.apikeys.v2.model.V2Key content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/keys/[^/]+$");

          /**
           * Patches the modifiable fields of an API key. The key string of the API key isn't included in
           * the response. NOTE: Key is a global resource; hence the only supported value for location is
           * `global`.
           *
           * Create a request for the method "keys.patch".
           *
           * This request holds the parameters needed by the the apikeys server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The resource name of the key. The `name` has the form:
         *        `projects//locations/global/keys/`. For example:
         *        `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE:
         *        Key is a global resource; hence the only supported value for location is `global`.
           * @param content the {@link com.google.api.services.apikeys.v2.model.V2Key}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.apikeys.v2.model.V2Key content) {
            super(ApiKeysService.this, "PATCH", REST_PATH, content, com.google.api.services.apikeys.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. The resource name of the key. The `name` has the form:
           * `projects//locations/global/keys/`. For example:
           * `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2`
           * NOTE: Key is a global resource; hence the only supported value for location is
           * `global`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The resource name of the key. The `name` has the form:
         `projects//locations/global/keys/`. For example:
         `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a
         global resource; hence the only supported value for location is `global`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. The resource name of the key. The `name` has the form:
           * `projects//locations/global/keys/`. For example:
           * `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2`
           * NOTE: Key is a global resource; hence the only supported value for location is
           * `global`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The field mask specifies which fields to be updated as part of this request. All other
           * fields are ignored. Mutable fields are: `display_name` and `restrictions`. If an update
           * mask is not provided, the service treats it as an implied mask equivalent to all
           * allowed fields that are set on the wire. If the field mask has a special value "*", the
           * service treats it equivalent to replace all allowed mutable fields.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The field mask specifies which fields to be updated as part of this request. All other fields are
         ignored. Mutable fields are: `display_name` and `restrictions`. If an update mask is not provided,
         the service treats it as an implied mask equivalent to all allowed fields that are set on the wire.
         If the field mask has a special value "*", the service treats it equivalent to replace all allowed
         mutable fields.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The field mask specifies which fields to be updated as part of this request. All other
           * fields are ignored. Mutable fields are: `display_name` and `restrictions`. If an update
           * mask is not provided, the service treats it as an implied mask equivalent to all
           * allowed fields that are set on the wire. If the field mask has a special value "*", the
           * service treats it equivalent to replace all allowed mutable fields.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Undeletes an API key which was deleted within 30 days. NOTE: Key is a global resource; hence the
         * only supported value for location is `global`.
         *
         * Create a request for the method "keys.undelete".
         *
         * This request holds the parameters needed by the apikeys server.  After setting any optional
         * parameters, call the {@link Undelete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the API key to be undeleted.
         * @param content the {@link com.google.api.services.apikeys.v2.model.V2UndeleteKeyRequest}
         * @return the request
         */
        public Undelete undelete(java.lang.String name, com.google.api.services.apikeys.v2.model.V2UndeleteKeyRequest content) throws java.io.IOException {
          Undelete result = new Undelete(name, content);
          initialize(result);
          return result;
        }

        public class Undelete extends ApiKeysServiceRequest<com.google.api.services.apikeys.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}:undelete";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/keys/[^/]+$");

          /**
           * Undeletes an API key which was deleted within 30 days. NOTE: Key is a global resource; hence
           * the only supported value for location is `global`.
           *
           * Create a request for the method "keys.undelete".
           *
           * This request holds the parameters needed by the the apikeys server.  After setting any optional
           * parameters, call the {@link Undelete#execute()} method to invoke the remote operation. <p>
           * {@link
           * Undelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the API key to be undeleted.
           * @param content the {@link com.google.api.services.apikeys.v2.model.V2UndeleteKeyRequest}
           * @since 1.13
           */
          protected Undelete(java.lang.String name, com.google.api.services.apikeys.v2.model.V2UndeleteKeyRequest content) {
            super(ApiKeysService.this, "POST", REST_PATH, content, com.google.api.services.apikeys.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
          }

          @Override
          public Undelete set$Xgafv(java.lang.String $Xgafv) {
            return (Undelete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Undelete setAccessToken(java.lang.String accessToken) {
            return (Undelete) super.setAccessToken(accessToken);
          }

          @Override
          public Undelete setAlt(java.lang.String alt) {
            return (Undelete) super.setAlt(alt);
          }

          @Override
          public Undelete setCallback(java.lang.String callback) {
            return (Undelete) super.setCallback(callback);
          }

          @Override
          public Undelete setFields(java.lang.String fields) {
            return (Undelete) super.setFields(fields);
          }

          @Override
          public Undelete setKey(java.lang.String key) {
            return (Undelete) super.setKey(key);
          }

          @Override
          public Undelete setOauthToken(java.lang.String oauthToken) {
            return (Undelete) super.setOauthToken(oauthToken);
          }

          @Override
          public Undelete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Undelete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Undelete setQuotaUser(java.lang.String quotaUser) {
            return (Undelete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Undelete setUploadType(java.lang.String uploadType) {
            return (Undelete) super.setUploadType(uploadType);
          }

          @Override
          public Undelete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Undelete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the API key to be undeleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the API key to be undeleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the API key to be undeleted. */
          public Undelete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/keys/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Undelete set(String parameterName, Object value) {
            return (Undelete) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link ApiKeysService}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ApiKeysService}. */
    @Override
    public ApiKeysService build() {
      return new ApiKeysService(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ApiKeysServiceRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setApiKeysServiceRequestInitializer(
        ApiKeysServiceRequestInitializer apikeysserviceRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(apikeysserviceRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
