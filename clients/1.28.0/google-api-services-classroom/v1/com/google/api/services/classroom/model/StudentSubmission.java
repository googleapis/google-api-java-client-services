/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.classroom.model;

/**
 * Student submission for course work.
 *
 * StudentSubmission items are generated when a CourseWork item is created.
 *
 * StudentSubmissions that have never been accessed (i.e. with `state` = NEW) may not have a
 * creation time or update time.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Classroom API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StudentSubmission extends com.google.api.client.json.GenericJson {

  /**
   * Absolute link to the submission in the Classroom web UI.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String alternateLink;

  /**
   * Optional grade. If unset, no grade was set. This value must be non-negative. Decimal (i.e. non-
   * integer) values are allowed, but will be rounded to two decimal places.
   *
   * This may be modified only by course teachers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double assignedGrade;

  /**
   * Submission content when course_work_type is ASSIGNMENT.
   *
   * Students can modify this content using google.classroom.Work.ModifyAttachments.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssignmentSubmission assignmentSubmission;

  /**
   * Whether this student submission is associated with the Developer Console project making the
   * request.
   *
   * See google.classroom.Work.CreateCourseWork for more details.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean associatedWithDeveloper;

  /**
   * Identifier of the course.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String courseId;

  /**
   * Identifier for the course work this corresponds to.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String courseWorkId;

  /**
   * Type of course work this submission is for.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String courseWorkType;

  /**
   * Creation time of this submission. This may be unset if the student has not accessed this item.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String creationTime;

  /**
   * Optional pending grade. If unset, no grade was set. This value must be non-negative. Decimal
   * (i.e. non-integer) values are allowed, but will be rounded to two decimal places.
   *
   * This is only visible to and modifiable by course teachers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double draftGrade;

  /**
   * Classroom-assigned Identifier for the student submission. This is unique among submissions for
   * the relevant course work.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Whether this submission is late.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean late;

  /**
   * Submission content when course_work_type is MULTIPLE_CHOICE_QUESTION.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MultipleChoiceSubmission multipleChoiceSubmission;

  /**
   * Submission content when course_work_type is SHORT_ANSWER_QUESTION.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ShortAnswerSubmission shortAnswerSubmission;

  /**
   * State of this submission.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The history of the submission (includes state and grade histories).
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SubmissionHistory> submissionHistory;

  /**
   * Last update time of this submission. This may be unset if the student has not accessed this
   * item.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Identifier for the student that owns this submission.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userId;

  /**
   * Absolute link to the submission in the Classroom web UI.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getAlternateLink() {
    return alternateLink;
  }

  /**
   * Absolute link to the submission in the Classroom web UI.
   *
   * Read-only.
   * @param alternateLink alternateLink or {@code null} for none
   */
  public StudentSubmission setAlternateLink(java.lang.String alternateLink) {
    this.alternateLink = alternateLink;
    return this;
  }

  /**
   * Optional grade. If unset, no grade was set. This value must be non-negative. Decimal (i.e. non-
   * integer) values are allowed, but will be rounded to two decimal places.
   *
   * This may be modified only by course teachers.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAssignedGrade() {
    return assignedGrade;
  }

  /**
   * Optional grade. If unset, no grade was set. This value must be non-negative. Decimal (i.e. non-
   * integer) values are allowed, but will be rounded to two decimal places.
   *
   * This may be modified only by course teachers.
   * @param assignedGrade assignedGrade or {@code null} for none
   */
  public StudentSubmission setAssignedGrade(java.lang.Double assignedGrade) {
    this.assignedGrade = assignedGrade;
    return this;
  }

  /**
   * Submission content when course_work_type is ASSIGNMENT.
   *
   * Students can modify this content using google.classroom.Work.ModifyAttachments.
   * @return value or {@code null} for none
   */
  public AssignmentSubmission getAssignmentSubmission() {
    return assignmentSubmission;
  }

  /**
   * Submission content when course_work_type is ASSIGNMENT.
   *
   * Students can modify this content using google.classroom.Work.ModifyAttachments.
   * @param assignmentSubmission assignmentSubmission or {@code null} for none
   */
  public StudentSubmission setAssignmentSubmission(AssignmentSubmission assignmentSubmission) {
    this.assignmentSubmission = assignmentSubmission;
    return this;
  }

  /**
   * Whether this student submission is associated with the Developer Console project making the
   * request.
   *
   * See google.classroom.Work.CreateCourseWork for more details.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAssociatedWithDeveloper() {
    return associatedWithDeveloper;
  }

  /**
   * Whether this student submission is associated with the Developer Console project making the
   * request.
   *
   * See google.classroom.Work.CreateCourseWork for more details.
   *
   * Read-only.
   * @param associatedWithDeveloper associatedWithDeveloper or {@code null} for none
   */
  public StudentSubmission setAssociatedWithDeveloper(java.lang.Boolean associatedWithDeveloper) {
    this.associatedWithDeveloper = associatedWithDeveloper;
    return this;
  }

  /**
   * Identifier of the course.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getCourseId() {
    return courseId;
  }

  /**
   * Identifier of the course.
   *
   * Read-only.
   * @param courseId courseId or {@code null} for none
   */
  public StudentSubmission setCourseId(java.lang.String courseId) {
    this.courseId = courseId;
    return this;
  }

  /**
   * Identifier for the course work this corresponds to.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getCourseWorkId() {
    return courseWorkId;
  }

  /**
   * Identifier for the course work this corresponds to.
   *
   * Read-only.
   * @param courseWorkId courseWorkId or {@code null} for none
   */
  public StudentSubmission setCourseWorkId(java.lang.String courseWorkId) {
    this.courseWorkId = courseWorkId;
    return this;
  }

  /**
   * Type of course work this submission is for.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getCourseWorkType() {
    return courseWorkType;
  }

  /**
   * Type of course work this submission is for.
   *
   * Read-only.
   * @param courseWorkType courseWorkType or {@code null} for none
   */
  public StudentSubmission setCourseWorkType(java.lang.String courseWorkType) {
    this.courseWorkType = courseWorkType;
    return this;
  }

  /**
   * Creation time of this submission. This may be unset if the student has not accessed this item.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public String getCreationTime() {
    return creationTime;
  }

  /**
   * Creation time of this submission. This may be unset if the student has not accessed this item.
   *
   * Read-only.
   * @param creationTime creationTime or {@code null} for none
   */
  public StudentSubmission setCreationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Optional pending grade. If unset, no grade was set. This value must be non-negative. Decimal
   * (i.e. non-integer) values are allowed, but will be rounded to two decimal places.
   *
   * This is only visible to and modifiable by course teachers.
   * @return value or {@code null} for none
   */
  public java.lang.Double getDraftGrade() {
    return draftGrade;
  }

  /**
   * Optional pending grade. If unset, no grade was set. This value must be non-negative. Decimal
   * (i.e. non-integer) values are allowed, but will be rounded to two decimal places.
   *
   * This is only visible to and modifiable by course teachers.
   * @param draftGrade draftGrade or {@code null} for none
   */
  public StudentSubmission setDraftGrade(java.lang.Double draftGrade) {
    this.draftGrade = draftGrade;
    return this;
  }

  /**
   * Classroom-assigned Identifier for the student submission. This is unique among submissions for
   * the relevant course work.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Classroom-assigned Identifier for the student submission. This is unique among submissions for
   * the relevant course work.
   *
   * Read-only.
   * @param id id or {@code null} for none
   */
  public StudentSubmission setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Whether this submission is late.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLate() {
    return late;
  }

  /**
   * Whether this submission is late.
   *
   * Read-only.
   * @param late late or {@code null} for none
   */
  public StudentSubmission setLate(java.lang.Boolean late) {
    this.late = late;
    return this;
  }

  /**
   * Submission content when course_work_type is MULTIPLE_CHOICE_QUESTION.
   * @return value or {@code null} for none
   */
  public MultipleChoiceSubmission getMultipleChoiceSubmission() {
    return multipleChoiceSubmission;
  }

  /**
   * Submission content when course_work_type is MULTIPLE_CHOICE_QUESTION.
   * @param multipleChoiceSubmission multipleChoiceSubmission or {@code null} for none
   */
  public StudentSubmission setMultipleChoiceSubmission(MultipleChoiceSubmission multipleChoiceSubmission) {
    this.multipleChoiceSubmission = multipleChoiceSubmission;
    return this;
  }

  /**
   * Submission content when course_work_type is SHORT_ANSWER_QUESTION.
   * @return value or {@code null} for none
   */
  public ShortAnswerSubmission getShortAnswerSubmission() {
    return shortAnswerSubmission;
  }

  /**
   * Submission content when course_work_type is SHORT_ANSWER_QUESTION.
   * @param shortAnswerSubmission shortAnswerSubmission or {@code null} for none
   */
  public StudentSubmission setShortAnswerSubmission(ShortAnswerSubmission shortAnswerSubmission) {
    this.shortAnswerSubmission = shortAnswerSubmission;
    return this;
  }

  /**
   * State of this submission.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * State of this submission.
   *
   * Read-only.
   * @param state state or {@code null} for none
   */
  public StudentSubmission setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * The history of the submission (includes state and grade histories).
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.util.List<SubmissionHistory> getSubmissionHistory() {
    return submissionHistory;
  }

  /**
   * The history of the submission (includes state and grade histories).
   *
   * Read-only.
   * @param submissionHistory submissionHistory or {@code null} for none
   */
  public StudentSubmission setSubmissionHistory(java.util.List<SubmissionHistory> submissionHistory) {
    this.submissionHistory = submissionHistory;
    return this;
  }

  /**
   * Last update time of this submission. This may be unset if the student has not accessed this
   * item.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Last update time of this submission. This may be unset if the student has not accessed this
   * item.
   *
   * Read-only.
   * @param updateTime updateTime or {@code null} for none
   */
  public StudentSubmission setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Identifier for the student that owns this submission.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserId() {
    return userId;
  }

  /**
   * Identifier for the student that owns this submission.
   *
   * Read-only.
   * @param userId userId or {@code null} for none
   */
  public StudentSubmission setUserId(java.lang.String userId) {
    this.userId = userId;
    return this;
  }

  @Override
  public StudentSubmission set(String fieldName, Object value) {
    return (StudentSubmission) super.set(fieldName, value);
  }

  @Override
  public StudentSubmission clone() {
    return (StudentSubmission) super.clone();
  }

}
