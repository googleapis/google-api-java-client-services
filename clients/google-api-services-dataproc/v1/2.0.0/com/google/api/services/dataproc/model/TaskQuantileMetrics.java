/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * Model definition for TaskQuantileMetrics.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TaskQuantileMetrics extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles diskBytesSpilled;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles durationMillis;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles executorCpuTimeNanos;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles executorDeserializeCpuTimeNanos;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles executorDeserializeTimeMillis;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles executorRunTimeMillis;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles gettingResultTimeMillis;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InputQuantileMetrics inputMetrics;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles jvmGcTimeMillis;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles memoryBytesSpilled;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private OutputQuantileMetrics outputMetrics;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles peakExecutionMemoryBytes;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles resultSerializationTimeMillis;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles resultSize;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Quantiles schedulerDelayMillis;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ShuffleReadQuantileMetrics shuffleReadMetrics;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ShuffleWriteQuantileMetrics shuffleWriteMetrics;

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getDiskBytesSpilled() {
    return diskBytesSpilled;
  }

  /**
   * @param diskBytesSpilled diskBytesSpilled or {@code null} for none
   */
  public TaskQuantileMetrics setDiskBytesSpilled(Quantiles diskBytesSpilled) {
    this.diskBytesSpilled = diskBytesSpilled;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getDurationMillis() {
    return durationMillis;
  }

  /**
   * @param durationMillis durationMillis or {@code null} for none
   */
  public TaskQuantileMetrics setDurationMillis(Quantiles durationMillis) {
    this.durationMillis = durationMillis;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getExecutorCpuTimeNanos() {
    return executorCpuTimeNanos;
  }

  /**
   * @param executorCpuTimeNanos executorCpuTimeNanos or {@code null} for none
   */
  public TaskQuantileMetrics setExecutorCpuTimeNanos(Quantiles executorCpuTimeNanos) {
    this.executorCpuTimeNanos = executorCpuTimeNanos;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getExecutorDeserializeCpuTimeNanos() {
    return executorDeserializeCpuTimeNanos;
  }

  /**
   * @param executorDeserializeCpuTimeNanos executorDeserializeCpuTimeNanos or {@code null} for none
   */
  public TaskQuantileMetrics setExecutorDeserializeCpuTimeNanos(Quantiles executorDeserializeCpuTimeNanos) {
    this.executorDeserializeCpuTimeNanos = executorDeserializeCpuTimeNanos;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getExecutorDeserializeTimeMillis() {
    return executorDeserializeTimeMillis;
  }

  /**
   * @param executorDeserializeTimeMillis executorDeserializeTimeMillis or {@code null} for none
   */
  public TaskQuantileMetrics setExecutorDeserializeTimeMillis(Quantiles executorDeserializeTimeMillis) {
    this.executorDeserializeTimeMillis = executorDeserializeTimeMillis;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getExecutorRunTimeMillis() {
    return executorRunTimeMillis;
  }

  /**
   * @param executorRunTimeMillis executorRunTimeMillis or {@code null} for none
   */
  public TaskQuantileMetrics setExecutorRunTimeMillis(Quantiles executorRunTimeMillis) {
    this.executorRunTimeMillis = executorRunTimeMillis;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getGettingResultTimeMillis() {
    return gettingResultTimeMillis;
  }

  /**
   * @param gettingResultTimeMillis gettingResultTimeMillis or {@code null} for none
   */
  public TaskQuantileMetrics setGettingResultTimeMillis(Quantiles gettingResultTimeMillis) {
    this.gettingResultTimeMillis = gettingResultTimeMillis;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public InputQuantileMetrics getInputMetrics() {
    return inputMetrics;
  }

  /**
   * @param inputMetrics inputMetrics or {@code null} for none
   */
  public TaskQuantileMetrics setInputMetrics(InputQuantileMetrics inputMetrics) {
    this.inputMetrics = inputMetrics;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getJvmGcTimeMillis() {
    return jvmGcTimeMillis;
  }

  /**
   * @param jvmGcTimeMillis jvmGcTimeMillis or {@code null} for none
   */
  public TaskQuantileMetrics setJvmGcTimeMillis(Quantiles jvmGcTimeMillis) {
    this.jvmGcTimeMillis = jvmGcTimeMillis;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getMemoryBytesSpilled() {
    return memoryBytesSpilled;
  }

  /**
   * @param memoryBytesSpilled memoryBytesSpilled or {@code null} for none
   */
  public TaskQuantileMetrics setMemoryBytesSpilled(Quantiles memoryBytesSpilled) {
    this.memoryBytesSpilled = memoryBytesSpilled;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public OutputQuantileMetrics getOutputMetrics() {
    return outputMetrics;
  }

  /**
   * @param outputMetrics outputMetrics or {@code null} for none
   */
  public TaskQuantileMetrics setOutputMetrics(OutputQuantileMetrics outputMetrics) {
    this.outputMetrics = outputMetrics;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getPeakExecutionMemoryBytes() {
    return peakExecutionMemoryBytes;
  }

  /**
   * @param peakExecutionMemoryBytes peakExecutionMemoryBytes or {@code null} for none
   */
  public TaskQuantileMetrics setPeakExecutionMemoryBytes(Quantiles peakExecutionMemoryBytes) {
    this.peakExecutionMemoryBytes = peakExecutionMemoryBytes;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getResultSerializationTimeMillis() {
    return resultSerializationTimeMillis;
  }

  /**
   * @param resultSerializationTimeMillis resultSerializationTimeMillis or {@code null} for none
   */
  public TaskQuantileMetrics setResultSerializationTimeMillis(Quantiles resultSerializationTimeMillis) {
    this.resultSerializationTimeMillis = resultSerializationTimeMillis;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getResultSize() {
    return resultSize;
  }

  /**
   * @param resultSize resultSize or {@code null} for none
   */
  public TaskQuantileMetrics setResultSize(Quantiles resultSize) {
    this.resultSize = resultSize;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Quantiles getSchedulerDelayMillis() {
    return schedulerDelayMillis;
  }

  /**
   * @param schedulerDelayMillis schedulerDelayMillis or {@code null} for none
   */
  public TaskQuantileMetrics setSchedulerDelayMillis(Quantiles schedulerDelayMillis) {
    this.schedulerDelayMillis = schedulerDelayMillis;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public ShuffleReadQuantileMetrics getShuffleReadMetrics() {
    return shuffleReadMetrics;
  }

  /**
   * @param shuffleReadMetrics shuffleReadMetrics or {@code null} for none
   */
  public TaskQuantileMetrics setShuffleReadMetrics(ShuffleReadQuantileMetrics shuffleReadMetrics) {
    this.shuffleReadMetrics = shuffleReadMetrics;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public ShuffleWriteQuantileMetrics getShuffleWriteMetrics() {
    return shuffleWriteMetrics;
  }

  /**
   * @param shuffleWriteMetrics shuffleWriteMetrics or {@code null} for none
   */
  public TaskQuantileMetrics setShuffleWriteMetrics(ShuffleWriteQuantileMetrics shuffleWriteMetrics) {
    this.shuffleWriteMetrics = shuffleWriteMetrics;
    return this;
  }

  @Override
  public TaskQuantileMetrics set(String fieldName, Object value) {
    return (TaskQuantileMetrics) super.set(fieldName, value);
  }

  @Override
  public TaskQuantileMetrics clone() {
    return (TaskQuantileMetrics) super.clone();
  }

}
