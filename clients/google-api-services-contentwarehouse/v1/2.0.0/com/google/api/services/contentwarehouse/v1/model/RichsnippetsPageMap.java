/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for RichsnippetsPageMap.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RichsnippetsPageMap extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("DataObject")
  private java.util.List<RichsnippetsDataObject> dataObject;

  static {
    // hack to force ProGuard to consider RichsnippetsDataObject used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RichsnippetsDataObject.class);
  }

  /**
   * If ignore_data_object is set to true, pagemap attachment is processed regardless of whether
   * data object is present or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean ignoreDataObject;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String src;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RichsnippetsPageMapTemplateType> templatetype;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<RichsnippetsDataObject> getDataObject() {
    return dataObject;
  }

  /**
   * @param dataObject dataObject or {@code null} for none
   */
  public RichsnippetsPageMap setDataObject(java.util.List<RichsnippetsDataObject> dataObject) {
    this.dataObject = dataObject;
    return this;
  }

  /**
   * If ignore_data_object is set to true, pagemap attachment is processed regardless of whether
   * data object is present or not.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIgnoreDataObject() {
    return ignoreDataObject;
  }

  /**
   * If ignore_data_object is set to true, pagemap attachment is processed regardless of whether
   * data object is present or not.
   * @param ignoreDataObject ignoreDataObject or {@code null} for none
   */
  public RichsnippetsPageMap setIgnoreDataObject(java.lang.Boolean ignoreDataObject) {
    this.ignoreDataObject = ignoreDataObject;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSrc() {
    return src;
  }

  /**
   * @param src src or {@code null} for none
   */
  public RichsnippetsPageMap setSrc(java.lang.String src) {
    this.src = src;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<RichsnippetsPageMapTemplateType> getTemplatetype() {
    return templatetype;
  }

  /**
   * @param templatetype templatetype or {@code null} for none
   */
  public RichsnippetsPageMap setTemplatetype(java.util.List<RichsnippetsPageMapTemplateType> templatetype) {
    this.templatetype = templatetype;
    return this;
  }

  @Override
  public RichsnippetsPageMap set(String fieldName, Object value) {
    return (RichsnippetsPageMap) super.set(fieldName, value);
  }

  @Override
  public RichsnippetsPageMap clone() {
    return (RichsnippetsPageMap) super.clone();
  }

}
