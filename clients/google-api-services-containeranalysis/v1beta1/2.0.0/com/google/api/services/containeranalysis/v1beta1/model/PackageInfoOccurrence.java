/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.containeranalysis.v1beta1.model;

/**
 * PackageInfoOccurrence represents an SPDX Package Information section: https://spdx.github.io
 * /spdx-spec/3-package-information/
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Container Analysis API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PackageInfoOccurrence extends com.google.api.client.json.GenericJson {

  /**
   * A place for the SPDX file creator to record any general comments about the package being
   * described
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String comment;

  /**
   * Provide the actual file name of the package, or path of the directory being treated as a
   * package
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filename;

  /**
   * Output only. Provide a place for the SPDX file creator to record a web site that serves as the
   * package's home page
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String homePage;

  /**
   * Uniquely identify any element in an SPDX document which may be referenced by other elements
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * package or alternative values, if the governing license cannot be determined
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private License licenseConcluded;

  /**
   * Output only. The type of package: OS, MAVEN, GO, GO_STDLIB, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String packageType;

  /**
   * Provide a place for the SPDX file creator to record any relevant background information or
   * additional comments about the origin of the package
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceInfo;

  /**
   * Output only. A short description of the package
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String summaryDescription;

  /**
   * Output only. Identify the full name of the package as given by the Package Originator
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Output only. Identify the version of the package
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * A place for the SPDX file creator to record any general comments about the package being
   * described
   * @return value or {@code null} for none
   */
  public java.lang.String getComment() {
    return comment;
  }

  /**
   * A place for the SPDX file creator to record any general comments about the package being
   * described
   * @param comment comment or {@code null} for none
   */
  public PackageInfoOccurrence setComment(java.lang.String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Provide the actual file name of the package, or path of the directory being treated as a
   * package
   * @return value or {@code null} for none
   */
  public java.lang.String getFilename() {
    return filename;
  }

  /**
   * Provide the actual file name of the package, or path of the directory being treated as a
   * package
   * @param filename filename or {@code null} for none
   */
  public PackageInfoOccurrence setFilename(java.lang.String filename) {
    this.filename = filename;
    return this;
  }

  /**
   * Output only. Provide a place for the SPDX file creator to record a web site that serves as the
   * package's home page
   * @return value or {@code null} for none
   */
  public java.lang.String getHomePage() {
    return homePage;
  }

  /**
   * Output only. Provide a place for the SPDX file creator to record a web site that serves as the
   * package's home page
   * @param homePage homePage or {@code null} for none
   */
  public PackageInfoOccurrence setHomePage(java.lang.String homePage) {
    this.homePage = homePage;
    return this;
  }

  /**
   * Uniquely identify any element in an SPDX document which may be referenced by other elements
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Uniquely identify any element in an SPDX document which may be referenced by other elements
   * @param id id or {@code null} for none
   */
  public PackageInfoOccurrence setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * package or alternative values, if the governing license cannot be determined
   * @return value or {@code null} for none
   */
  public License getLicenseConcluded() {
    return licenseConcluded;
  }

  /**
   * package or alternative values, if the governing license cannot be determined
   * @param licenseConcluded licenseConcluded or {@code null} for none
   */
  public PackageInfoOccurrence setLicenseConcluded(License licenseConcluded) {
    this.licenseConcluded = licenseConcluded;
    return this;
  }

  /**
   * Output only. The type of package: OS, MAVEN, GO, GO_STDLIB, etc.
   * @return value or {@code null} for none
   */
  public java.lang.String getPackageType() {
    return packageType;
  }

  /**
   * Output only. The type of package: OS, MAVEN, GO, GO_STDLIB, etc.
   * @param packageType packageType or {@code null} for none
   */
  public PackageInfoOccurrence setPackageType(java.lang.String packageType) {
    this.packageType = packageType;
    return this;
  }

  /**
   * Provide a place for the SPDX file creator to record any relevant background information or
   * additional comments about the origin of the package
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceInfo() {
    return sourceInfo;
  }

  /**
   * Provide a place for the SPDX file creator to record any relevant background information or
   * additional comments about the origin of the package
   * @param sourceInfo sourceInfo or {@code null} for none
   */
  public PackageInfoOccurrence setSourceInfo(java.lang.String sourceInfo) {
    this.sourceInfo = sourceInfo;
    return this;
  }

  /**
   * Output only. A short description of the package
   * @return value or {@code null} for none
   */
  public java.lang.String getSummaryDescription() {
    return summaryDescription;
  }

  /**
   * Output only. A short description of the package
   * @param summaryDescription summaryDescription or {@code null} for none
   */
  public PackageInfoOccurrence setSummaryDescription(java.lang.String summaryDescription) {
    this.summaryDescription = summaryDescription;
    return this;
  }

  /**
   * Output only. Identify the full name of the package as given by the Package Originator
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Output only. Identify the full name of the package as given by the Package Originator
   * @param title title or {@code null} for none
   */
  public PackageInfoOccurrence setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Output only. Identify the version of the package
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Output only. Identify the version of the package
   * @param version version or {@code null} for none
   */
  public PackageInfoOccurrence setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public PackageInfoOccurrence set(String fieldName, Object value) {
    return (PackageInfoOccurrence) super.set(fieldName, value);
  }

  @Override
  public PackageInfoOccurrence clone() {
    return (PackageInfoOccurrence) super.clone();
  }

}
