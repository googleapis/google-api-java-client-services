/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * NOTE: In segindexer, the docproperties of a document may be reused from a previous cycle if its
 * content is not changed. If you add a new field to DocProperties, make sure it is taken care
 * (i.e., gets copied from a previous cycle to the current document) in
 * CDocProperties::EndDocument().
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DocProperties extends com.google.api.client.json.GenericJson {

  /**
   * The average weighted font size of a term in the doc body
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer avgTermWeight;

  /**
   * Missing or meaningless title
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean badTitle;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DocPropertiesBadTitleInfo> badtitleinfo;

  /**
   * A Language enum value. See: go/language-enum
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> languages;

  /**
   * Leading text information generated by google3/quality/snippets/leadingtext/leadingtext-
   * detector.cc
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SnippetsLeadingtextLeadingTextInfo leadingtext;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numPunctuations;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numTags;

  /**
   * The number of tokens, tags and punctuations in the tokenized contents. This is an approximation
   * of the number of tokens, tags and punctuations we end up with in mustang, but is inexact since
   * we drop some tokens in mustang and also truncate docs at a max cap.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numTokens;

  /**
   * The restricts for CSE structured search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> proseRestrict;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> restricts;

  /**
   * The time CDocProperties::StartDocument() is called, encoded as seconds past the epoch (Jan 1,
   * 1970). This value is always refreshed and not reused.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long timestamp;

  /**
   * Extracted from the title tag of the content. This is typically extracted by TitleMetaCollector
   * defined at google3/segindexer/title-meta-collector.h. Please see its documentation for the
   * format and other caveats.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * The average weighted font size of a term in the doc body
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAvgTermWeight() {
    return avgTermWeight;
  }

  /**
   * The average weighted font size of a term in the doc body
   * @param avgTermWeight avgTermWeight or {@code null} for none
   */
  public DocProperties setAvgTermWeight(java.lang.Integer avgTermWeight) {
    this.avgTermWeight = avgTermWeight;
    return this;
  }

  /**
   * Missing or meaningless title
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBadTitle() {
    return badTitle;
  }

  /**
   * Missing or meaningless title
   * @param badTitle badTitle or {@code null} for none
   */
  public DocProperties setBadTitle(java.lang.Boolean badTitle) {
    this.badTitle = badTitle;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<DocPropertiesBadTitleInfo> getBadtitleinfo() {
    return badtitleinfo;
  }

  /**
   * @param badtitleinfo badtitleinfo or {@code null} for none
   */
  public DocProperties setBadtitleinfo(java.util.List<DocPropertiesBadTitleInfo> badtitleinfo) {
    this.badtitleinfo = badtitleinfo;
    return this;
  }

  /**
   * A Language enum value. See: go/language-enum
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getLanguages() {
    return languages;
  }

  /**
   * A Language enum value. See: go/language-enum
   * @param languages languages or {@code null} for none
   */
  public DocProperties setLanguages(java.util.List<java.lang.Integer> languages) {
    this.languages = languages;
    return this;
  }

  /**
   * Leading text information generated by google3/quality/snippets/leadingtext/leadingtext-
   * detector.cc
   * @return value or {@code null} for none
   */
  public SnippetsLeadingtextLeadingTextInfo getLeadingtext() {
    return leadingtext;
  }

  /**
   * Leading text information generated by google3/quality/snippets/leadingtext/leadingtext-
   * detector.cc
   * @param leadingtext leadingtext or {@code null} for none
   */
  public DocProperties setLeadingtext(SnippetsLeadingtextLeadingTextInfo leadingtext) {
    this.leadingtext = leadingtext;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumPunctuations() {
    return numPunctuations;
  }

  /**
   * @param numPunctuations numPunctuations or {@code null} for none
   */
  public DocProperties setNumPunctuations(java.lang.Integer numPunctuations) {
    this.numPunctuations = numPunctuations;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumTags() {
    return numTags;
  }

  /**
   * @param numTags numTags or {@code null} for none
   */
  public DocProperties setNumTags(java.lang.Integer numTags) {
    this.numTags = numTags;
    return this;
  }

  /**
   * The number of tokens, tags and punctuations in the tokenized contents. This is an approximation
   * of the number of tokens, tags and punctuations we end up with in mustang, but is inexact since
   * we drop some tokens in mustang and also truncate docs at a max cap.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumTokens() {
    return numTokens;
  }

  /**
   * The number of tokens, tags and punctuations in the tokenized contents. This is an approximation
   * of the number of tokens, tags and punctuations we end up with in mustang, but is inexact since
   * we drop some tokens in mustang and also truncate docs at a max cap.
   * @param numTokens numTokens or {@code null} for none
   */
  public DocProperties setNumTokens(java.lang.Integer numTokens) {
    this.numTokens = numTokens;
    return this;
  }

  /**
   * The restricts for CSE structured search.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getProseRestrict() {
    return proseRestrict;
  }

  /**
   * The restricts for CSE structured search.
   * @param proseRestrict proseRestrict or {@code null} for none
   */
  public DocProperties setProseRestrict(java.util.List<java.lang.String> proseRestrict) {
    this.proseRestrict = proseRestrict;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRestricts() {
    return restricts;
  }

  /**
   * @param restricts restricts or {@code null} for none
   */
  public DocProperties setRestricts(java.util.List<java.lang.String> restricts) {
    this.restricts = restricts;
    return this;
  }

  /**
   * The time CDocProperties::StartDocument() is called, encoded as seconds past the epoch (Jan 1,
   * 1970). This value is always refreshed and not reused.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * The time CDocProperties::StartDocument() is called, encoded as seconds past the epoch (Jan 1,
   * 1970). This value is always refreshed and not reused.
   * @param timestamp timestamp or {@code null} for none
   */
  public DocProperties setTimestamp(java.lang.Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Extracted from the title tag of the content. This is typically extracted by TitleMetaCollector
   * defined at google3/segindexer/title-meta-collector.h. Please see its documentation for the
   * format and other caveats.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Extracted from the title tag of the content. This is typically extracted by TitleMetaCollector
   * defined at google3/segindexer/title-meta-collector.h. Please see its documentation for the
   * format and other caveats.
   * @param title title or {@code null} for none
   */
  public DocProperties setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  @Override
  public DocProperties set(String fieldName, Object value) {
    return (DocProperties) super.set(fieldName, value);
  }

  @Override
  public DocProperties clone() {
    return (DocProperties) super.clone();
  }

}
