/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Annotation metadata for user Upload artifacts.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UploadMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Opaque token. Clients shall simply pass it back to the Backend. This field will NOT be saved
   * into storage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String attachmentToken;

  /**
   * Information about the uploaded attachment that is only used in Backend. This field will NOT be
   * sent out of Google.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedBackendUploadMetadata backendUploadMetadata;

  /**
   * The "new" secure identifier for Drive files. Should be used instead of the deprecated string
   * drive_id field above. This should only be set if the upload file has been added to Drive. Note
   * that older Drive files that do not have a ResourceKey should still use this field, with the
   * resource_key field unset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AuthorizedItemId clonedAuthorizedItemId;

  /**
   * DriveAction for organizing the cloned version of this upload in Drive, if the file has been
   * added to Drive. This field is not set if the file has not been added to Drive. Additionally,
   * this field is only set when part of a FileResult in a ListFilesResponse.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clonedDriveAction;

  /**
   * Reference to a Drive ID, if this upload file has been previously cloned to Drive. Note: this is
   * deprecated in favor of the AuthorizedItemId below.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clonedDriveId;

  /**
   * The original file name for the content, not the full path.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contentName;

  /**
   * Type is from Scotty's best_guess by default:
   * http://google3/uploader/agent/scotty_agent.proto?l=51=140889785
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contentType;

  /**
   * The metrics metadata of the Data Loss Prevention attachment scan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedDlpMetricsMetadata dlpMetricsMetadata;

  /**
   * The timestamp of the most recent virus scan completed (in microseconds).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long latestVirusScanTimestamp;

  /**
   * A copy of the LocalId in Annotation. This field is supposed to be filled by server only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String localId;

  /**
   * Original dimension of the content. Only set for image attachments.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedDimension originalDimension;

  /**
   * Reference to a transcoded video attachment. Only set for video attachments.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedVideoReference videoReference;

  /**
   * Result for a virus scan. It's duplicated in the above field
   * apps.dynamite.shared.BackendUploadMetadata
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String virusScanResult;

  /**
   * Opaque token. Clients shall simply pass it back to the Backend. This field will NOT be saved
   * into storage.
   * @return value or {@code null} for none
   */
  public java.lang.String getAttachmentToken() {
    return attachmentToken;
  }

  /**
   * Opaque token. Clients shall simply pass it back to the Backend. This field will NOT be saved
   * into storage.
   * @param attachmentToken attachmentToken or {@code null} for none
   */
  public UploadMetadata setAttachmentToken(java.lang.String attachmentToken) {
    this.attachmentToken = attachmentToken;
    return this;
  }

  /**
   * Information about the uploaded attachment that is only used in Backend. This field will NOT be
   * sent out of Google.
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedBackendUploadMetadata getBackendUploadMetadata() {
    return backendUploadMetadata;
  }

  /**
   * Information about the uploaded attachment that is only used in Backend. This field will NOT be
   * sent out of Google.
   * @param backendUploadMetadata backendUploadMetadata or {@code null} for none
   */
  public UploadMetadata setBackendUploadMetadata(AppsDynamiteSharedBackendUploadMetadata backendUploadMetadata) {
    this.backendUploadMetadata = backendUploadMetadata;
    return this;
  }

  /**
   * The "new" secure identifier for Drive files. Should be used instead of the deprecated string
   * drive_id field above. This should only be set if the upload file has been added to Drive. Note
   * that older Drive files that do not have a ResourceKey should still use this field, with the
   * resource_key field unset.
   * @return value or {@code null} for none
   */
  public AuthorizedItemId getClonedAuthorizedItemId() {
    return clonedAuthorizedItemId;
  }

  /**
   * The "new" secure identifier for Drive files. Should be used instead of the deprecated string
   * drive_id field above. This should only be set if the upload file has been added to Drive. Note
   * that older Drive files that do not have a ResourceKey should still use this field, with the
   * resource_key field unset.
   * @param clonedAuthorizedItemId clonedAuthorizedItemId or {@code null} for none
   */
  public UploadMetadata setClonedAuthorizedItemId(AuthorizedItemId clonedAuthorizedItemId) {
    this.clonedAuthorizedItemId = clonedAuthorizedItemId;
    return this;
  }

  /**
   * DriveAction for organizing the cloned version of this upload in Drive, if the file has been
   * added to Drive. This field is not set if the file has not been added to Drive. Additionally,
   * this field is only set when part of a FileResult in a ListFilesResponse.
   * @return value or {@code null} for none
   */
  public java.lang.String getClonedDriveAction() {
    return clonedDriveAction;
  }

  /**
   * DriveAction for organizing the cloned version of this upload in Drive, if the file has been
   * added to Drive. This field is not set if the file has not been added to Drive. Additionally,
   * this field is only set when part of a FileResult in a ListFilesResponse.
   * @param clonedDriveAction clonedDriveAction or {@code null} for none
   */
  public UploadMetadata setClonedDriveAction(java.lang.String clonedDriveAction) {
    this.clonedDriveAction = clonedDriveAction;
    return this;
  }

  /**
   * Reference to a Drive ID, if this upload file has been previously cloned to Drive. Note: this is
   * deprecated in favor of the AuthorizedItemId below.
   * @return value or {@code null} for none
   */
  public java.lang.String getClonedDriveId() {
    return clonedDriveId;
  }

  /**
   * Reference to a Drive ID, if this upload file has been previously cloned to Drive. Note: this is
   * deprecated in favor of the AuthorizedItemId below.
   * @param clonedDriveId clonedDriveId or {@code null} for none
   */
  public UploadMetadata setClonedDriveId(java.lang.String clonedDriveId) {
    this.clonedDriveId = clonedDriveId;
    return this;
  }

  /**
   * The original file name for the content, not the full path.
   * @return value or {@code null} for none
   */
  public java.lang.String getContentName() {
    return contentName;
  }

  /**
   * The original file name for the content, not the full path.
   * @param contentName contentName or {@code null} for none
   */
  public UploadMetadata setContentName(java.lang.String contentName) {
    this.contentName = contentName;
    return this;
  }

  /**
   * Type is from Scotty's best_guess by default:
   * http://google3/uploader/agent/scotty_agent.proto?l=51=140889785
   * @return value or {@code null} for none
   */
  public java.lang.String getContentType() {
    return contentType;
  }

  /**
   * Type is from Scotty's best_guess by default:
   * http://google3/uploader/agent/scotty_agent.proto?l=51=140889785
   * @param contentType contentType or {@code null} for none
   */
  public UploadMetadata setContentType(java.lang.String contentType) {
    this.contentType = contentType;
    return this;
  }

  /**
   * The metrics metadata of the Data Loss Prevention attachment scan.
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedDlpMetricsMetadata getDlpMetricsMetadata() {
    return dlpMetricsMetadata;
  }

  /**
   * The metrics metadata of the Data Loss Prevention attachment scan.
   * @param dlpMetricsMetadata dlpMetricsMetadata or {@code null} for none
   */
  public UploadMetadata setDlpMetricsMetadata(AppsDynamiteSharedDlpMetricsMetadata dlpMetricsMetadata) {
    this.dlpMetricsMetadata = dlpMetricsMetadata;
    return this;
  }

  /**
   * The timestamp of the most recent virus scan completed (in microseconds).
   * @return value or {@code null} for none
   */
  public java.lang.Long getLatestVirusScanTimestamp() {
    return latestVirusScanTimestamp;
  }

  /**
   * The timestamp of the most recent virus scan completed (in microseconds).
   * @param latestVirusScanTimestamp latestVirusScanTimestamp or {@code null} for none
   */
  public UploadMetadata setLatestVirusScanTimestamp(java.lang.Long latestVirusScanTimestamp) {
    this.latestVirusScanTimestamp = latestVirusScanTimestamp;
    return this;
  }

  /**
   * A copy of the LocalId in Annotation. This field is supposed to be filled by server only.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocalId() {
    return localId;
  }

  /**
   * A copy of the LocalId in Annotation. This field is supposed to be filled by server only.
   * @param localId localId or {@code null} for none
   */
  public UploadMetadata setLocalId(java.lang.String localId) {
    this.localId = localId;
    return this;
  }

  /**
   * Original dimension of the content. Only set for image attachments.
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedDimension getOriginalDimension() {
    return originalDimension;
  }

  /**
   * Original dimension of the content. Only set for image attachments.
   * @param originalDimension originalDimension or {@code null} for none
   */
  public UploadMetadata setOriginalDimension(AppsDynamiteSharedDimension originalDimension) {
    this.originalDimension = originalDimension;
    return this;
  }

  /**
   * Reference to a transcoded video attachment. Only set for video attachments.
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedVideoReference getVideoReference() {
    return videoReference;
  }

  /**
   * Reference to a transcoded video attachment. Only set for video attachments.
   * @param videoReference videoReference or {@code null} for none
   */
  public UploadMetadata setVideoReference(AppsDynamiteSharedVideoReference videoReference) {
    this.videoReference = videoReference;
    return this;
  }

  /**
   * Result for a virus scan. It's duplicated in the above field
   * apps.dynamite.shared.BackendUploadMetadata
   * @return value or {@code null} for none
   */
  public java.lang.String getVirusScanResult() {
    return virusScanResult;
  }

  /**
   * Result for a virus scan. It's duplicated in the above field
   * apps.dynamite.shared.BackendUploadMetadata
   * @param virusScanResult virusScanResult or {@code null} for none
   */
  public UploadMetadata setVirusScanResult(java.lang.String virusScanResult) {
    this.virusScanResult = virusScanResult;
    return this;
  }

  @Override
  public UploadMetadata set(String fieldName, Object value) {
    return (UploadMetadata) super.set(fieldName, value);
  }

  @Override
  public UploadMetadata clone() {
    return (UploadMetadata) super.clone();
  }

}
