/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securitycenter.v1;

/**
 * Service definition for SecurityCommandCenter (v1).
 *
 * <p>
 * Cloud Security Command Center API provides access to temporal views of assets and findings within an organization.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://console.cloud.google.com/apis/api/securitycenter.googleapis.com/overview" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SecurityCommandCenterRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class SecurityCommandCenter extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.29.2 of the Cloud Security Command Center API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://securitycenter.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public SecurityCommandCenter(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  SecurityCommandCenter(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code SecurityCommandCenter securitycenter = new SecurityCommandCenter(...);}
   *   {@code SecurityCommandCenter.Organizations.List request = securitycenter.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * Gets the settings for an organization.
     *
     * Create a request for the method "organizations.getOrganizationSettings".
     *
     * This request holds the parameters needed by the securitycenter server.  After setting any
     * optional parameters, call the {@link GetOrganizationSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name Name of the organization to get organization settings for. Its format is
     *        "organizations/[organization_id]/organizationSettings".
     * @return the request
     */
    public GetOrganizationSettings getOrganizationSettings(java.lang.String name) throws java.io.IOException {
      GetOrganizationSettings result = new GetOrganizationSettings(name);
      initialize(result);
      return result;
    }

    public class GetOrganizationSettings extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.OrganizationSettings> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+/organizationSettings$");

      /**
       * Gets the settings for an organization.
       *
       * Create a request for the method "organizations.getOrganizationSettings".
       *
       * This request holds the parameters needed by the the securitycenter server.  After setting any
       * optional parameters, call the {@link GetOrganizationSettings#execute()} method to invoke the
       * remote operation. <p> {@link GetOrganizationSettings#initialize(com.google.api.client.googleapi
       * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param name Name of the organization to get organization settings for. Its format is
     *        "organizations/[organization_id]/organizationSettings".
       * @since 1.13
       */
      protected GetOrganizationSettings(java.lang.String name) {
        super(SecurityCommandCenter.this, "GET", REST_PATH, null, com.google.api.services.securitycenter.v1.model.OrganizationSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/organizationSettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetOrganizationSettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetOrganizationSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetOrganizationSettings setAccessToken(java.lang.String accessToken) {
        return (GetOrganizationSettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetOrganizationSettings setAlt(java.lang.String alt) {
        return (GetOrganizationSettings) super.setAlt(alt);
      }

      @Override
      public GetOrganizationSettings setCallback(java.lang.String callback) {
        return (GetOrganizationSettings) super.setCallback(callback);
      }

      @Override
      public GetOrganizationSettings setFields(java.lang.String fields) {
        return (GetOrganizationSettings) super.setFields(fields);
      }

      @Override
      public GetOrganizationSettings setKey(java.lang.String key) {
        return (GetOrganizationSettings) super.setKey(key);
      }

      @Override
      public GetOrganizationSettings setOauthToken(java.lang.String oauthToken) {
        return (GetOrganizationSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetOrganizationSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetOrganizationSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetOrganizationSettings setQuotaUser(java.lang.String quotaUser) {
        return (GetOrganizationSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetOrganizationSettings setUploadType(java.lang.String uploadType) {
        return (GetOrganizationSettings) super.setUploadType(uploadType);
      }

      @Override
      public GetOrganizationSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetOrganizationSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Name of the organization to get organization settings for. Its format is
       * "organizations/[organization_id]/organizationSettings".
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Name of the organization to get organization settings for. Its format is
     "organizations/[organization_id]/organizationSettings".
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Name of the organization to get organization settings for. Its format is
       * "organizations/[organization_id]/organizationSettings".
       */
      public GetOrganizationSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/organizationSettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetOrganizationSettings set(String parameterName, Object value) {
        return (GetOrganizationSettings) super.set(parameterName, value);
      }
    }
    /**
     * Updates an organization's settings.
     *
     * Create a request for the method "organizations.updateOrganizationSettings".
     *
     * This request holds the parameters needed by the securitycenter server.  After setting any
     * optional parameters, call the {@link UpdateOrganizationSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name The relative resource name of the settings. See:
     *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
    Example:
     *        "organizations/123/organizationSettings".
     * @param content the {@link com.google.api.services.securitycenter.v1.model.OrganizationSettings}
     * @return the request
     */
    public UpdateOrganizationSettings updateOrganizationSettings(java.lang.String name, com.google.api.services.securitycenter.v1.model.OrganizationSettings content) throws java.io.IOException {
      UpdateOrganizationSettings result = new UpdateOrganizationSettings(name, content);
      initialize(result);
      return result;
    }

    public class UpdateOrganizationSettings extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.OrganizationSettings> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+/organizationSettings$");

      /**
       * Updates an organization's settings.
       *
       * Create a request for the method "organizations.updateOrganizationSettings".
       *
       * This request holds the parameters needed by the the securitycenter server.  After setting any
       * optional parameters, call the {@link UpdateOrganizationSettings#execute()} method to invoke the
       * remote operation. <p> {@link UpdateOrganizationSettings#initialize(com.google.api.client.google
       * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param name The relative resource name of the settings. See:
     *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
    Example:
     *        "organizations/123/organizationSettings".
       * @param content the {@link com.google.api.services.securitycenter.v1.model.OrganizationSettings}
       * @since 1.13
       */
      protected UpdateOrganizationSettings(java.lang.String name, com.google.api.services.securitycenter.v1.model.OrganizationSettings content) {
        super(SecurityCommandCenter.this, "PATCH", REST_PATH, content, com.google.api.services.securitycenter.v1.model.OrganizationSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/organizationSettings$");
        }
      }

      @Override
      public UpdateOrganizationSettings set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateOrganizationSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateOrganizationSettings setAccessToken(java.lang.String accessToken) {
        return (UpdateOrganizationSettings) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateOrganizationSettings setAlt(java.lang.String alt) {
        return (UpdateOrganizationSettings) super.setAlt(alt);
      }

      @Override
      public UpdateOrganizationSettings setCallback(java.lang.String callback) {
        return (UpdateOrganizationSettings) super.setCallback(callback);
      }

      @Override
      public UpdateOrganizationSettings setFields(java.lang.String fields) {
        return (UpdateOrganizationSettings) super.setFields(fields);
      }

      @Override
      public UpdateOrganizationSettings setKey(java.lang.String key) {
        return (UpdateOrganizationSettings) super.setKey(key);
      }

      @Override
      public UpdateOrganizationSettings setOauthToken(java.lang.String oauthToken) {
        return (UpdateOrganizationSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateOrganizationSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateOrganizationSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateOrganizationSettings setQuotaUser(java.lang.String quotaUser) {
        return (UpdateOrganizationSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateOrganizationSettings setUploadType(java.lang.String uploadType) {
        return (UpdateOrganizationSettings) super.setUploadType(uploadType);
      }

      @Override
      public UpdateOrganizationSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateOrganizationSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The relative resource name of the settings. See:
       * https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
       * "organizations/123/organizationSettings".
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The relative resource name of the settings. See:
     https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
     "organizations/123/organizationSettings".
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * The relative resource name of the settings. See:
       * https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
       * "organizations/123/organizationSettings".
       */
      public UpdateOrganizationSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/organizationSettings$");
        }
        this.name = name;
        return this;
      }

      /**
       * The FieldMask to use when updating the settings resource.
       *
       * If empty all mutable fields will be updated.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** The FieldMask to use when updating the settings resource.

     If empty all mutable fields will be updated.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * The FieldMask to use when updating the settings resource.
       *
       * If empty all mutable fields will be updated.
       */
      public UpdateOrganizationSettings setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public UpdateOrganizationSettings set(String parameterName, Object value) {
        return (UpdateOrganizationSettings) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Assets collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SecurityCommandCenter securitycenter = new SecurityCommandCenter(...);}
     *   {@code SecurityCommandCenter.Assets.List request = securitycenter.assets().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Assets assets() {
      return new Assets();
    }

    /**
     * The "assets" collection of methods.
     */
    public class Assets {

      /**
       * Filters an organization's assets and  groups them by their specified properties.
       *
       * Create a request for the method "assets.group".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link Group#execute()} method to invoke the remote operation.
       *
       * @param parent Name of the organization to groupBy. Its format is
      "organizations/[organization_id]".
       * @param content the {@link com.google.api.services.securitycenter.v1.model.GroupAssetsRequest}
       * @return the request
       */
      public Group group(java.lang.String parent, com.google.api.services.securitycenter.v1.model.GroupAssetsRequest content) throws java.io.IOException {
        Group result = new Group(parent, content);
        initialize(result);
        return result;
      }

      public class Group extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.GroupAssetsResponse> {

        private static final String REST_PATH = "v1/{+parent}/assets:group";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Filters an organization's assets and  groups them by their specified properties.
         *
         * Create a request for the method "assets.group".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link Group#execute()} method to invoke the remote operation.
         * <p> {@link
         * Group#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Name of the organization to groupBy. Its format is
      "organizations/[organization_id]".
         * @param content the {@link com.google.api.services.securitycenter.v1.model.GroupAssetsRequest}
         * @since 1.13
         */
        protected Group(java.lang.String parent, com.google.api.services.securitycenter.v1.model.GroupAssetsRequest content) {
          super(SecurityCommandCenter.this, "POST", REST_PATH, content, com.google.api.services.securitycenter.v1.model.GroupAssetsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Group set$Xgafv(java.lang.String $Xgafv) {
          return (Group) super.set$Xgafv($Xgafv);
        }

        @Override
        public Group setAccessToken(java.lang.String accessToken) {
          return (Group) super.setAccessToken(accessToken);
        }

        @Override
        public Group setAlt(java.lang.String alt) {
          return (Group) super.setAlt(alt);
        }

        @Override
        public Group setCallback(java.lang.String callback) {
          return (Group) super.setCallback(callback);
        }

        @Override
        public Group setFields(java.lang.String fields) {
          return (Group) super.setFields(fields);
        }

        @Override
        public Group setKey(java.lang.String key) {
          return (Group) super.setKey(key);
        }

        @Override
        public Group setOauthToken(java.lang.String oauthToken) {
          return (Group) super.setOauthToken(oauthToken);
        }

        @Override
        public Group setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Group) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Group setQuotaUser(java.lang.String quotaUser) {
          return (Group) super.setQuotaUser(quotaUser);
        }

        @Override
        public Group setUploadType(java.lang.String uploadType) {
          return (Group) super.setUploadType(uploadType);
        }

        @Override
        public Group setUploadProtocol(java.lang.String uploadProtocol) {
          return (Group) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the organization to groupBy. Its format is "organizations/[organization_id]".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Name of the organization to groupBy. Its format is "organizations/[organization_id]".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Name of the organization to groupBy. Its format is "organizations/[organization_id]".
         */
        public Group setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Group set(String parameterName, Object value) {
          return (Group) super.set(parameterName, value);
        }
      }
      /**
       * Lists an organization's assets.
       *
       * Create a request for the method "assets.list".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Name of the organization assets should belong to. Its format is
      "organizations/[organization_id]".
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.ListAssetsResponse> {

        private static final String REST_PATH = "v1/{+parent}/assets";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists an organization's assets.
         *
         * Create a request for the method "assets.list".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Name of the organization assets should belong to. Its format is
      "organizations/[organization_id]".
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(SecurityCommandCenter.this, "GET", REST_PATH, null, com.google.api.services.securitycenter.v1.model.ListAssetsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the organization assets should belong to. Its format is
         * "organizations/[organization_id]".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Name of the organization assets should belong to. Its format is "organizations/[organization_id]".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Name of the organization assets should belong to. Its format is
         * "organizations/[organization_id]".
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * When compare_duration is set, the ListAssetsResult's "state_change" attribute is updated
         * to indicate whether the asset was added, removed, or remained present during the
         * compare_duration period of time that precedes the read_time. This is the time between
         * (read_time - compare_duration) and read_time.
         *
         * The state_change value is derived based on the presence of the asset at the two points in
         * time. Intermediate state changes between the two times don't affect the result. For
         * example, the results aren't affected if the asset is removed and re-created again.
         *
         * Possible "state_change" values when compare_duration is specified:
         *
         * * "ADDED":   indicates that the asset was not present at the start of compare_duration,
         * but present at read_time. * "REMOVED": indicates that the asset was present at the start
         * of compare_duration, but not present at read_time. * "ACTIVE":  indicates that the asset
         * was present at both the start and the end of the time period defined by compare_duration
         * and read_time.
         *
         * If compare_duration is not specified, then the only possible state_change is "UNUSED",
         * which will be the state_change set for all assets present at read_time.
         */
        @com.google.api.client.util.Key
        private String compareDuration;

        /** When compare_duration is set, the ListAssetsResult's "state_change" attribute is updated to
       indicate whether the asset was added, removed, or remained present during the compare_duration
       period of time that precedes the read_time. This is the time between (read_time - compare_duration)
       and read_time.

       The state_change value is derived based on the presence of the asset at the two points in time.
       Intermediate state changes between the two times don't affect the result. For example, the results
       aren't affected if the asset is removed and re-created again.

       Possible "state_change" values when compare_duration is specified:

       * "ADDED":   indicates that the asset was not present at the start of compare_duration, but present
       at read_time. * "REMOVED": indicates that the asset was present at the start of compare_duration,
       but not present at read_time. * "ACTIVE":  indicates that the asset was present at both the start
       and the end of the time period defined by compare_duration and read_time.

       If compare_duration is not specified, then the only possible state_change is "UNUSED",  which will
       be the state_change set for all assets present at read_time.
         */
        public String getCompareDuration() {
          return compareDuration;
        }

        /**
         * When compare_duration is set, the ListAssetsResult's "state_change" attribute is updated
         * to indicate whether the asset was added, removed, or remained present during the
         * compare_duration period of time that precedes the read_time. This is the time between
         * (read_time - compare_duration) and read_time.
         *
         * The state_change value is derived based on the presence of the asset at the two points in
         * time. Intermediate state changes between the two times don't affect the result. For
         * example, the results aren't affected if the asset is removed and re-created again.
         *
         * Possible "state_change" values when compare_duration is specified:
         *
         * * "ADDED":   indicates that the asset was not present at the start of compare_duration,
         * but present at read_time. * "REMOVED": indicates that the asset was present at the start
         * of compare_duration, but not present at read_time. * "ACTIVE":  indicates that the asset
         * was present at both the start and the end of the time period defined by compare_duration
         * and read_time.
         *
         * If compare_duration is not specified, then the only possible state_change is "UNUSED",
         * which will be the state_change set for all assets present at read_time.
         */
        public List setCompareDuration(String compareDuration) {
          this.compareDuration = compareDuration;
          return this;
        }

        /**
         * Optional.
         *
         * A field mask to specify the ListAssetsResult fields to be listed in the response. An
         * empty field mask will list all fields.
         */
        @com.google.api.client.util.Key
        private String fieldMask;

        /** Optional.

       A field mask to specify the ListAssetsResult fields to be listed in the response. An empty field
       mask will list all fields.
         */
        public String getFieldMask() {
          return fieldMask;
        }

        /**
         * Optional.
         *
         * A field mask to specify the ListAssetsResult fields to be listed in the response. An
         * empty field mask will list all fields.
         */
        public List setFieldMask(String fieldMask) {
          this.fieldMask = fieldMask;
          return this;
        }

        /**
         * Expression that defines the filter to apply across assets. The expression is a list of
         * zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are
         * supported, and `OR` has higher precedence than `AND`.
         *
         * Restrictions have the form `  ` and may have a `-` character in front of them to indicate
         * negation. The fields map to those defined in the Asset resource. Examples include:
         *
         * * name * security_center_properties.resource_name * resource_properties.a_property *
         * security_marks.marks.marka
         *
         * The supported operators are:
         *
         * * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning
         * substring matching, for strings.
         *
         * The supported value types are:
         *
         * * string literals in quotes. * integer literals without quotes. * boolean literals `true`
         * and `false` without quotes.
         *
         * The following are the allowed field and operator combinations:
         *
         * * name: `=` * update_time: `>`, `<`, `>=`, `<=` * iam_policy.policy_blob: `=`, `:` *
         * resource_properties: `=`, `:`, `>`, `<`, `>=`, `<=` * security_marks: `=`, `:` *
         * security_center_properties.resource_name: `=`, `:` *
         * security_center_properties.resource_type: `=`, `:` *
         * security_center_properties.resource_parent: `=`, `:` *
         * security_center_properties.resource_project: `=`, `:` *
         * security_center_properties.resource_owners: `=`, `:`
         *
         * For example, `resource_properties.size = 100` is a valid filter string.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Expression that defines the filter to apply across assets. The expression is a list of zero or more
       restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has
       higher precedence than `AND`.

       Restrictions have the form `  ` and may have a `-` character in front of them to indicate negation.
       The fields map to those defined in the Asset resource. Examples include:

       * name * security_center_properties.resource_name * resource_properties.a_property *
       security_marks.marks.marka

       The supported operators are:

       * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring
       matching, for strings.

       The supported value types are:

       * string literals in quotes. * integer literals without quotes. * boolean literals `true` and
       `false` without quotes.

       The following are the allowed field and operator combinations:

       * name: `=` * update_time: `>`, `<`, `>=`, `<=` * iam_policy.policy_blob: `=`, `:` *
       resource_properties: `=`, `:`, `>`, `<`, `>=`, `<=` * security_marks: `=`, `:` *
       security_center_properties.resource_name: `=`, `:` * security_center_properties.resource_type: `=`,
       `:` * security_center_properties.resource_parent: `=`, `:` *
       security_center_properties.resource_project: `=`, `:` * security_center_properties.resource_owners:
       `=`, `:`

       For example, `resource_properties.size = 100` is a valid filter string.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Expression that defines the filter to apply across assets. The expression is a list of
         * zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are
         * supported, and `OR` has higher precedence than `AND`.
         *
         * Restrictions have the form `  ` and may have a `-` character in front of them to indicate
         * negation. The fields map to those defined in the Asset resource. Examples include:
         *
         * * name * security_center_properties.resource_name * resource_properties.a_property *
         * security_marks.marks.marka
         *
         * The supported operators are:
         *
         * * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning
         * substring matching, for strings.
         *
         * The supported value types are:
         *
         * * string literals in quotes. * integer literals without quotes. * boolean literals `true`
         * and `false` without quotes.
         *
         * The following are the allowed field and operator combinations:
         *
         * * name: `=` * update_time: `>`, `<`, `>=`, `<=` * iam_policy.policy_blob: `=`, `:` *
         * resource_properties: `=`, `:`, `>`, `<`, `>=`, `<=` * security_marks: `=`, `:` *
         * security_center_properties.resource_name: `=`, `:` *
         * security_center_properties.resource_type: `=`, `:` *
         * security_center_properties.resource_parent: `=`, `:` *
         * security_center_properties.resource_project: `=`, `:` *
         * security_center_properties.resource_owners: `=`, `:`
         *
         * For example, `resource_properties.size = 100` is a valid filter string.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Expression that defines what fields and order to use for sorting. The string value should
         * follow SQL syntax: comma separated list of fields. For example:
         * "name,resource_properties.a_property". The default sorting order is ascending. To specify
         * descending order for a field, a suffix " desc" should be appended to the field name. For
         * example: "name desc,resource_properties.a_property". Redundant space characters in the
         * syntax are insignificant. "name desc,resource_properties.a_property" and " name     desc
         * ,   resource_properties.a_property  " are equivalent.
         *
         * The following fields are supported: name update_time resource_properties security_marks
         * security_center_properties.resource_name security_center_properties.resource_parent
         * security_center_properties.resource_project security_center_properties.resource_type
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Expression that defines what fields and order to use for sorting. The string value should follow
       SQL syntax: comma separated list of fields. For example: "name,resource_properties.a_property". The
       default sorting order is ascending. To specify descending order for a field, a suffix " desc"
       should be appended to the field name. For example: "name desc,resource_properties.a_property".
       Redundant space characters in the syntax are insignificant. "name
       desc,resource_properties.a_property" and " name     desc  ,   resource_properties.a_property  " are
       equivalent.

       The following fields are supported: name update_time resource_properties security_marks
       security_center_properties.resource_name security_center_properties.resource_parent
       security_center_properties.resource_project security_center_properties.resource_type
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Expression that defines what fields and order to use for sorting. The string value should
         * follow SQL syntax: comma separated list of fields. For example:
         * "name,resource_properties.a_property". The default sorting order is ascending. To specify
         * descending order for a field, a suffix " desc" should be appended to the field name. For
         * example: "name desc,resource_properties.a_property". Redundant space characters in the
         * syntax are insignificant. "name desc,resource_properties.a_property" and " name     desc
         * ,   resource_properties.a_property  " are equivalent.
         *
         * The following fields are supported: name update_time resource_properties security_marks
         * security_center_properties.resource_name security_center_properties.resource_parent
         * security_center_properties.resource_project security_center_properties.resource_type
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * The maximum number of results to return in a single response. Default is 10, minimum is
         * 1, maximum is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum
       is 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of results to return in a single response. Default is 10, minimum is
         * 1, maximum is 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * The value returned by the last `ListAssetsResponse`; indicates that this is a
         * continuation of a prior `ListAssets` call, and that the system should return the next
         * page of data.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The value returned by the last `ListAssetsResponse`; indicates that this is a continuation of a
       prior `ListAssets` call, and that the system should return the next page of data.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * The value returned by the last `ListAssetsResponse`; indicates that this is a
         * continuation of a prior `ListAssets` call, and that the system should return the next
         * page of data.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * Time used as a reference point when filtering assets. The filter is limited to assets
         * existing at the supplied time and their values are those at that specific time. Absence
         * of this field will default to the API's version of NOW.
         */
        @com.google.api.client.util.Key
        private String readTime;

        /** Time used as a reference point when filtering assets. The filter is limited to assets existing at
       the supplied time and their values are those at that specific time. Absence of this field will
       default to the API's version of NOW.
         */
        public String getReadTime() {
          return readTime;
        }

        /**
         * Time used as a reference point when filtering assets. The filter is limited to assets
         * existing at the supplied time and their values are those at that specific time. Absence
         * of this field will default to the API's version of NOW.
         */
        public List setReadTime(String readTime) {
          this.readTime = readTime;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Runs asset discovery. The discovery is tracked with a long-running operation.
       *
       * This API can only be called with limited frequency for an organization. If it is called too
       * frequently the caller will receive a TOO_MANY_REQUESTS error.
       *
       * Create a request for the method "assets.runDiscovery".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link RunDiscovery#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Name of the organization to run asset discovery for. Its format is
       *        "organizations/[organization_id]".
       * @param content the {@link com.google.api.services.securitycenter.v1.model.RunAssetDiscoveryRequest}
       * @return the request
       */
      public RunDiscovery runDiscovery(java.lang.String parent, com.google.api.services.securitycenter.v1.model.RunAssetDiscoveryRequest content) throws java.io.IOException {
        RunDiscovery result = new RunDiscovery(parent, content);
        initialize(result);
        return result;
      }

      public class RunDiscovery extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+parent}/assets:runDiscovery";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Runs asset discovery. The discovery is tracked with a long-running operation.
         *
         * This API can only be called with limited frequency for an organization. If it is called too
         * frequently the caller will receive a TOO_MANY_REQUESTS error.
         *
         * Create a request for the method "assets.runDiscovery".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link RunDiscovery#execute()} method to invoke the remote
         * operation. <p> {@link
         * RunDiscovery#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Name of the organization to run asset discovery for. Its format is
       *        "organizations/[organization_id]".
         * @param content the {@link com.google.api.services.securitycenter.v1.model.RunAssetDiscoveryRequest}
         * @since 1.13
         */
        protected RunDiscovery(java.lang.String parent, com.google.api.services.securitycenter.v1.model.RunAssetDiscoveryRequest content) {
          super(SecurityCommandCenter.this, "POST", REST_PATH, content, com.google.api.services.securitycenter.v1.model.Operation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public RunDiscovery set$Xgafv(java.lang.String $Xgafv) {
          return (RunDiscovery) super.set$Xgafv($Xgafv);
        }

        @Override
        public RunDiscovery setAccessToken(java.lang.String accessToken) {
          return (RunDiscovery) super.setAccessToken(accessToken);
        }

        @Override
        public RunDiscovery setAlt(java.lang.String alt) {
          return (RunDiscovery) super.setAlt(alt);
        }

        @Override
        public RunDiscovery setCallback(java.lang.String callback) {
          return (RunDiscovery) super.setCallback(callback);
        }

        @Override
        public RunDiscovery setFields(java.lang.String fields) {
          return (RunDiscovery) super.setFields(fields);
        }

        @Override
        public RunDiscovery setKey(java.lang.String key) {
          return (RunDiscovery) super.setKey(key);
        }

        @Override
        public RunDiscovery setOauthToken(java.lang.String oauthToken) {
          return (RunDiscovery) super.setOauthToken(oauthToken);
        }

        @Override
        public RunDiscovery setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (RunDiscovery) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public RunDiscovery setQuotaUser(java.lang.String quotaUser) {
          return (RunDiscovery) super.setQuotaUser(quotaUser);
        }

        @Override
        public RunDiscovery setUploadType(java.lang.String uploadType) {
          return (RunDiscovery) super.setUploadType(uploadType);
        }

        @Override
        public RunDiscovery setUploadProtocol(java.lang.String uploadProtocol) {
          return (RunDiscovery) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the organization to run asset discovery for. Its format is
         * "organizations/[organization_id]".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Name of the organization to run asset discovery for. Its format is
       "organizations/[organization_id]".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Name of the organization to run asset discovery for. Its format is
         * "organizations/[organization_id]".
         */
        public RunDiscovery setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public RunDiscovery set(String parameterName, Object value) {
          return (RunDiscovery) super.set(parameterName, value);
        }
      }
      /**
       * Updates security marks.
       *
       * Create a request for the method "assets.updateSecurityMarks".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link UpdateSecurityMarks#execute()} method to invoke the remote
       * operation.
       *
       * @param name The relative resource name of the SecurityMarks. See:
       *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
      Examples:
       *        "organizations/123/assets/456/securityMarks"
       *        "organizations/123/sources/456/findings/789/securityMarks".
       * @param content the {@link com.google.api.services.securitycenter.v1.model.SecurityMarks}
       * @return the request
       */
      public UpdateSecurityMarks updateSecurityMarks(java.lang.String name, com.google.api.services.securitycenter.v1.model.SecurityMarks content) throws java.io.IOException {
        UpdateSecurityMarks result = new UpdateSecurityMarks(name, content);
        initialize(result);
        return result;
      }

      public class UpdateSecurityMarks extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.SecurityMarks> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/assets/[^/]+/securityMarks$");

        /**
         * Updates security marks.
         *
         * Create a request for the method "assets.updateSecurityMarks".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link UpdateSecurityMarks#execute()} method to invoke the remote
         * operation. <p> {@link UpdateSecurityMarks#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name The relative resource name of the SecurityMarks. See:
       *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
      Examples:
       *        "organizations/123/assets/456/securityMarks"
       *        "organizations/123/sources/456/findings/789/securityMarks".
         * @param content the {@link com.google.api.services.securitycenter.v1.model.SecurityMarks}
         * @since 1.13
         */
        protected UpdateSecurityMarks(java.lang.String name, com.google.api.services.securitycenter.v1.model.SecurityMarks content) {
          super(SecurityCommandCenter.this, "PATCH", REST_PATH, content, com.google.api.services.securitycenter.v1.model.SecurityMarks.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/assets/[^/]+/securityMarks$");
          }
        }

        @Override
        public UpdateSecurityMarks set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateSecurityMarks) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateSecurityMarks setAccessToken(java.lang.String accessToken) {
          return (UpdateSecurityMarks) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateSecurityMarks setAlt(java.lang.String alt) {
          return (UpdateSecurityMarks) super.setAlt(alt);
        }

        @Override
        public UpdateSecurityMarks setCallback(java.lang.String callback) {
          return (UpdateSecurityMarks) super.setCallback(callback);
        }

        @Override
        public UpdateSecurityMarks setFields(java.lang.String fields) {
          return (UpdateSecurityMarks) super.setFields(fields);
        }

        @Override
        public UpdateSecurityMarks setKey(java.lang.String key) {
          return (UpdateSecurityMarks) super.setKey(key);
        }

        @Override
        public UpdateSecurityMarks setOauthToken(java.lang.String oauthToken) {
          return (UpdateSecurityMarks) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateSecurityMarks setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateSecurityMarks) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateSecurityMarks setQuotaUser(java.lang.String quotaUser) {
          return (UpdateSecurityMarks) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateSecurityMarks setUploadType(java.lang.String uploadType) {
          return (UpdateSecurityMarks) super.setUploadType(uploadType);
        }

        @Override
        public UpdateSecurityMarks setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateSecurityMarks) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The relative resource name of the SecurityMarks. See:
         * https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples:
         * "organizations/123/assets/456/securityMarks"
         * "organizations/123/sources/456/findings/789/securityMarks".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The relative resource name of the SecurityMarks. See:
       https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples:
       "organizations/123/assets/456/securityMarks"
       "organizations/123/sources/456/findings/789/securityMarks".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The relative resource name of the SecurityMarks. See:
         * https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples:
         * "organizations/123/assets/456/securityMarks"
         * "organizations/123/sources/456/findings/789/securityMarks".
         */
        public UpdateSecurityMarks setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/assets/[^/]+/securityMarks$");
          }
          this.name = name;
          return this;
        }

        /**
         * The time at which the updated SecurityMarks take effect. If not set uses current server
         * time.  Updates will be applied to the SecurityMarks that are active immediately preceding
         * this time.
         */
        @com.google.api.client.util.Key
        private String startTime;

        /** The time at which the updated SecurityMarks take effect. If not set uses current server time.
       Updates will be applied to the SecurityMarks that are active immediately preceding this time.
         */
        public String getStartTime() {
          return startTime;
        }

        /**
         * The time at which the updated SecurityMarks take effect. If not set uses current server
         * time.  Updates will be applied to the SecurityMarks that are active immediately preceding
         * this time.
         */
        public UpdateSecurityMarks setStartTime(String startTime) {
          this.startTime = startTime;
          return this;
        }

        /**
         * The FieldMask to use when updating the security marks resource.
         *
         * The field mask must not contain duplicate fields. If empty or set to "marks", all marks
         * will be replaced.  Individual marks can be updated using "marks.".
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The FieldMask to use when updating the security marks resource.

       The field mask must not contain duplicate fields. If empty or set to "marks", all marks will be
       replaced.  Individual marks can be updated using "marks.".
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The FieldMask to use when updating the security marks resource.
         *
         * The field mask must not contain duplicate fields. If empty or set to "marks", all marks
         * will be replaced.  Individual marks can be updated using "marks.".
         */
        public UpdateSecurityMarks setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateSecurityMarks set(String parameterName, Object value) {
          return (UpdateSecurityMarks) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SecurityCommandCenter securitycenter = new SecurityCommandCenter(...);}
     *   {@code SecurityCommandCenter.Operations.List request = securitycenter.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to
       * cancel the operation, but success is not guaranteed.  If the server doesn't support this method,
       * it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other
       * methods to check whether the cancellation succeeded or whether the operation completed despite
       * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
       * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
       * `Code.CANCELLED`.
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be cancelled.
       * @return the request
       */
      public Cancel cancel(java.lang.String name) throws java.io.IOException {
        Cancel result = new Cancel(name);
        initialize(result);
        return result;
      }

      public class Cancel extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}:cancel";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
         * to cancel the operation, but success is not guaranteed.  If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
         * other methods to check whether the cancellation succeeded or whether the operation completed
         * despite cancellation. On successful cancellation, the operation is not deleted; instead, it
         * becomes an operation with an Operation.error value with a google.rpc.Status.code of 1,
         * corresponding to `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         * <p> {@link
         * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be cancelled.
         * @since 1.13
         */
        protected Cancel(java.lang.String name) {
          super(SecurityCommandCenter.this, "POST", REST_PATH, null, com.google.api.services.securitycenter.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Cancel set$Xgafv(java.lang.String $Xgafv) {
          return (Cancel) super.set$Xgafv($Xgafv);
        }

        @Override
        public Cancel setAccessToken(java.lang.String accessToken) {
          return (Cancel) super.setAccessToken(accessToken);
        }

        @Override
        public Cancel setAlt(java.lang.String alt) {
          return (Cancel) super.setAlt(alt);
        }

        @Override
        public Cancel setCallback(java.lang.String callback) {
          return (Cancel) super.setCallback(callback);
        }

        @Override
        public Cancel setFields(java.lang.String fields) {
          return (Cancel) super.setFields(fields);
        }

        @Override
        public Cancel setKey(java.lang.String key) {
          return (Cancel) super.setKey(key);
        }

        @Override
        public Cancel setOauthToken(java.lang.String oauthToken) {
          return (Cancel) super.setOauthToken(oauthToken);
        }

        @Override
        public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Cancel) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Cancel setQuotaUser(java.lang.String quotaUser) {
          return (Cancel) super.setQuotaUser(quotaUser);
        }

        @Override
        public Cancel setUploadType(java.lang.String uploadType) {
          return (Cancel) super.setUploadType(uploadType);
        }

        @Override
        public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
          return (Cancel) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be cancelled. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be cancelled.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be cancelled. */
        public Cancel setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Cancel set(String parameterName, Object value) {
          return (Cancel) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a long-running operation. This method indicates that the client is no longer interested
       * in the operation result. It does not cancel the operation. If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.delete".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be deleted.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be deleted.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(SecurityCommandCenter.this, "DELETE", REST_PATH, null, com.google.api.services.securitycenter.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be deleted. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be deleted.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be deleted. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the latest state of a long-running operation.  Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation.  Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(SecurityCommandCenter.this, "GET", REST_PATH, null, com.google.api.services.securitycenter.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * NOTE: the `name` binding allows API services to override the binding to use different resource
       * name schemes, such as `users/operations`. To override the binding, API services can add a binding
       * such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
       * compatibility, the default name includes the operations collection id, however overriding users
       * must ensure the name binding is the parent resource, without the operations collection id.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.ListOperationsResponse> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations$");

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * NOTE: the `name` binding allows API services to override the binding to use different resource
         * name schemes, such as `users/operations`. To override the binding, API services can add a
         * binding such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
         * compatibility, the default name includes the operations collection id, however overriding users
         * must ensure the name binding is the parent resource, without the operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(SecurityCommandCenter.this, "GET", REST_PATH, null, com.google.api.services.securitycenter.v1.model.ListOperationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation's parent resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation's parent resource. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Sources collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SecurityCommandCenter securitycenter = new SecurityCommandCenter(...);}
     *   {@code SecurityCommandCenter.Sources.List request = securitycenter.sources().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Sources sources() {
      return new Sources();
    }

    /**
     * The "sources" collection of methods.
     */
    public class Sources {

      /**
       * Creates a source.
       *
       * Create a request for the method "sources.create".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Resource name of the new source's parent. Its format should be
      "organizations/[organization_id]".
       * @param content the {@link com.google.api.services.securitycenter.v1.model.Source}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.securitycenter.v1.model.Source content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Source> {

        private static final String REST_PATH = "v1/{+parent}/sources";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a source.
         *
         * Create a request for the method "sources.create".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Resource name of the new source's parent. Its format should be
      "organizations/[organization_id]".
         * @param content the {@link com.google.api.services.securitycenter.v1.model.Source}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.securitycenter.v1.model.Source content) {
          super(SecurityCommandCenter.this, "POST", REST_PATH, content, com.google.api.services.securitycenter.v1.model.Source.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the new source's parent. Its format should be
         * "organizations/[organization_id]".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Resource name of the new source's parent. Its format should be "organizations/[organization_id]".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Resource name of the new source's parent. Its format should be
         * "organizations/[organization_id]".
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Gets a source.
       *
       * Create a request for the method "sources.get".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Relative resource name of the source. Its format is
       *        "organizations/[organization_id]/source/[source_id]".
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Source> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+$");

        /**
         * Gets a source.
         *
         * Create a request for the method "sources.get".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Relative resource name of the source. Its format is
       *        "organizations/[organization_id]/source/[source_id]".
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(SecurityCommandCenter.this, "GET", REST_PATH, null, com.google.api.services.securitycenter.v1.model.Source.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Relative resource name of the source. Its format is
         * "organizations/[organization_id]/source/[source_id]".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Relative resource name of the source. Its format is
       "organizations/[organization_id]/source/[source_id]".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Relative resource name of the source. Its format is
         * "organizations/[organization_id]/source/[source_id]".
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the access control policy on the specified Source.
       *
       * Create a request for the method "sources.getIamPolicy".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
       * operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
       * @param content the {@link com.google.api.services.securitycenter.v1.model.GetIamPolicyRequest}
       * @return the request
       */
      public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.securitycenter.v1.model.GetIamPolicyRequest content) throws java.io.IOException {
        GetIamPolicy result = new GetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class GetIamPolicy extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Policy> {

        private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+$");

        /**
         * Gets the access control policy on the specified Source.
         *
         * Create a request for the method "sources.getIamPolicy".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation. <p> {@link
         * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.securitycenter.v1.model.GetIamPolicyRequest}
         * @since 1.13
         */
        protected GetIamPolicy(java.lang.String resource, com.google.api.services.securitycenter.v1.model.GetIamPolicyRequest content) {
          super(SecurityCommandCenter.this, "POST", REST_PATH, content, com.google.api.services.securitycenter.v1.model.Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
        }

        @Override
        public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (GetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetIamPolicy setAlt(java.lang.String alt) {
          return (GetIamPolicy) super.setAlt(alt);
        }

        @Override
        public GetIamPolicy setCallback(java.lang.String callback) {
          return (GetIamPolicy) super.setCallback(callback);
        }

        @Override
        public GetIamPolicy setFields(java.lang.String fields) {
          return (GetIamPolicy) super.setFields(fields);
        }

        @Override
        public GetIamPolicy setKey(java.lang.String key) {
          return (GetIamPolicy) super.setKey(key);
        }

        @Override
        public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (GetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetIamPolicy setUploadType(java.lang.String uploadType) {
          return (GetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public GetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public GetIamPolicy set(String parameterName, Object value) {
          return (GetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Lists all sources belonging to an organization.
       *
       * Create a request for the method "sources.list".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Resource name of the parent of sources to list. Its format should be
       *        "organizations/[organization_id]".
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.ListSourcesResponse> {

        private static final String REST_PATH = "v1/{+parent}/sources";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all sources belonging to an organization.
         *
         * Create a request for the method "sources.list".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Resource name of the parent of sources to list. Its format should be
       *        "organizations/[organization_id]".
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(SecurityCommandCenter.this, "GET", REST_PATH, null, com.google.api.services.securitycenter.v1.model.ListSourcesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the parent of sources to list. Its format should be
         * "organizations/[organization_id]".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Resource name of the parent of sources to list. Its format should be
       "organizations/[organization_id]".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Resource name of the parent of sources to list. Its format should be
         * "organizations/[organization_id]".
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of results to return in a single response. Default is 10, minimum is
         * 1, maximum is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum
       is 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of results to return in a single response. Default is 10, minimum is
         * 1, maximum is 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * The value returned by the last `ListSourcesResponse`; indicates that this is a
         * continuation of a prior `ListSources` call, and that the system should return the next
         * page of data.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The value returned by the last `ListSourcesResponse`; indicates that this is a continuation of a
       prior `ListSources` call, and that the system should return the next page of data.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * The value returned by the last `ListSourcesResponse`; indicates that this is a
         * continuation of a prior `ListSources` call, and that the system should return the next
         * page of data.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a source.
       *
       * Create a request for the method "sources.patch".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The relative resource name of this source. See:
       *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
      Example:
       *        "organizations/123/sources/456"
       * @param content the {@link com.google.api.services.securitycenter.v1.model.Source}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.securitycenter.v1.model.Source content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Source> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+$");

        /**
         * Updates a source.
         *
         * Create a request for the method "sources.patch".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The relative resource name of this source. See:
       *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
      Example:
       *        "organizations/123/sources/456"
         * @param content the {@link com.google.api.services.securitycenter.v1.model.Source}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.securitycenter.v1.model.Source content) {
          super(SecurityCommandCenter.this, "PATCH", REST_PATH, content, com.google.api.services.securitycenter.v1.model.Source.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The relative resource name of this source. See:
         * https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
         * "organizations/123/sources/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The relative resource name of this source. See:
       https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
       "organizations/123/sources/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The relative resource name of this source. See:
         * https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
         * "organizations/123/sources/456"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The FieldMask to use when updating the source resource.
         *
         * If empty all mutable fields will be updated.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The FieldMask to use when updating the source resource.

       If empty all mutable fields will be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The FieldMask to use when updating the source resource.
         *
         * If empty all mutable fields will be updated.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Sets the access control policy on the specified Source.
       *
       * Create a request for the method "sources.setIamPolicy".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
       * operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
       * @param content the {@link com.google.api.services.securitycenter.v1.model.SetIamPolicyRequest}
       * @return the request
       */
      public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.securitycenter.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
        SetIamPolicy result = new SetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class SetIamPolicy extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Policy> {

        private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+$");

        /**
         * Sets the access control policy on the specified Source.
         *
         * Create a request for the method "sources.setIamPolicy".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation. <p> {@link
         * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.securitycenter.v1.model.SetIamPolicyRequest}
         * @since 1.13
         */
        protected SetIamPolicy(java.lang.String resource, com.google.api.services.securitycenter.v1.model.SetIamPolicyRequest content) {
          super(SecurityCommandCenter.this, "POST", REST_PATH, content, com.google.api.services.securitycenter.v1.model.Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
        }

        @Override
        public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (SetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (SetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public SetIamPolicy setAlt(java.lang.String alt) {
          return (SetIamPolicy) super.setAlt(alt);
        }

        @Override
        public SetIamPolicy setCallback(java.lang.String callback) {
          return (SetIamPolicy) super.setCallback(callback);
        }

        @Override
        public SetIamPolicy setFields(java.lang.String fields) {
          return (SetIamPolicy) super.setFields(fields);
        }

        @Override
        public SetIamPolicy setKey(java.lang.String key) {
          return (SetIamPolicy) super.setKey(key);
        }

        @Override
        public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (SetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (SetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetIamPolicy setUploadType(java.lang.String uploadType) {
          return (SetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        public SetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SetIamPolicy set(String parameterName, Object value) {
          return (SetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Returns the permissions that a caller has on the specified source.
       *
       * Create a request for the method "sources.testIamPermissions".
       *
       * This request holds the parameters needed by the securitycenter server.  After setting any
       * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
       * operation.
       *
       * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
       * @param content the {@link com.google.api.services.securitycenter.v1.model.TestIamPermissionsRequest}
       * @return the request
       */
      public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.securitycenter.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
        TestIamPermissions result = new TestIamPermissions(resource, content);
        initialize(result);
        return result;
      }

      public class TestIamPermissions extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.TestIamPermissionsResponse> {

        private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+$");

        /**
         * Returns the permissions that a caller has on the specified source.
         *
         * Create a request for the method "sources.testIamPermissions".
         *
         * This request holds the parameters needed by the the securitycenter server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.securitycenter.v1.model.TestIamPermissionsRequest}
         * @since 1.13
         */
        protected TestIamPermissions(java.lang.String resource, com.google.api.services.securitycenter.v1.model.TestIamPermissionsRequest content) {
          super(SecurityCommandCenter.this, "POST", REST_PATH, content, com.google.api.services.securitycenter.v1.model.TestIamPermissionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
        }

        @Override
        public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
          return (TestIamPermissions) super.set$Xgafv($Xgafv);
        }

        @Override
        public TestIamPermissions setAccessToken(java.lang.String accessToken) {
          return (TestIamPermissions) super.setAccessToken(accessToken);
        }

        @Override
        public TestIamPermissions setAlt(java.lang.String alt) {
          return (TestIamPermissions) super.setAlt(alt);
        }

        @Override
        public TestIamPermissions setCallback(java.lang.String callback) {
          return (TestIamPermissions) super.setCallback(callback);
        }

        @Override
        public TestIamPermissions setFields(java.lang.String fields) {
          return (TestIamPermissions) super.setFields(fields);
        }

        @Override
        public TestIamPermissions setKey(java.lang.String key) {
          return (TestIamPermissions) super.setKey(key);
        }

        @Override
        public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
          return (TestIamPermissions) super.setOauthToken(oauthToken);
        }

        @Override
        public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
          return (TestIamPermissions) super.setQuotaUser(quotaUser);
        }

        @Override
        public TestIamPermissions setUploadType(java.lang.String uploadType) {
          return (TestIamPermissions) super.setUploadType(uploadType);
        }

        @Override
        public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
          return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy detail is being requested. See the operation
       documentation for the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public TestIamPermissions setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/sources/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public TestIamPermissions set(String parameterName, Object value) {
          return (TestIamPermissions) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Findings collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SecurityCommandCenter securitycenter = new SecurityCommandCenter(...);}
       *   {@code SecurityCommandCenter.Findings.List request = securitycenter.findings().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Findings findings() {
        return new Findings();
      }

      /**
       * The "findings" collection of methods.
       */
      public class Findings {

        /**
         * Creates a finding. The corresponding source must exist for finding creation to succeed.
         *
         * Create a request for the method "findings.create".
         *
         * This request holds the parameters needed by the securitycenter server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Resource name of the new finding's parent. Its format should be
         *        "organizations/[organization_id]/sources/[source_id]".
         * @param content the {@link com.google.api.services.securitycenter.v1.model.Finding}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.securitycenter.v1.model.Finding content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Finding> {

          private static final String REST_PATH = "v1/{+parent}/findings";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+$");

          /**
           * Creates a finding. The corresponding source must exist for finding creation to succeed.
           *
           * Create a request for the method "findings.create".
           *
           * This request holds the parameters needed by the the securitycenter server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Resource name of the new finding's parent. Its format should be
         *        "organizations/[organization_id]/sources/[source_id]".
           * @param content the {@link com.google.api.services.securitycenter.v1.model.Finding}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.securitycenter.v1.model.Finding content) {
            super(SecurityCommandCenter.this, "POST", REST_PATH, content, com.google.api.services.securitycenter.v1.model.Finding.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource name of the new finding's parent. Its format should be
           * "organizations/[organization_id]/sources/[source_id]".
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Resource name of the new finding's parent. Its format should be
         "organizations/[organization_id]/sources/[source_id]".
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Resource name of the new finding's parent. Its format should be
           * "organizations/[organization_id]/sources/[source_id]".
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Unique identifier provided by the client within the parent scope. It must be
           * alphanumeric and less than or equal to 32 characters and greater than 0 characters in
           * length.
           */
          @com.google.api.client.util.Key
          private java.lang.String findingId;

          /** Unique identifier provided by the client within the parent scope. It must be alphanumeric and less
         than or equal to 32 characters and greater than 0 characters in length.
           */
          public java.lang.String getFindingId() {
            return findingId;
          }

          /**
           * Unique identifier provided by the client within the parent scope. It must be
           * alphanumeric and less than or equal to 32 characters and greater than 0 characters in
           * length.
           */
          public Create setFindingId(java.lang.String findingId) {
            this.findingId = findingId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Filters an organization or source's findings and  groups them by their specified properties.
         *
         * To group across all sources provide a `-` as the source id. Example:
         * /v1/organizations/123/sources/-/findings
         *
         * Create a request for the method "findings.group".
         *
         * This request holds the parameters needed by the securitycenter server.  After setting any
         * optional parameters, call the {@link Group#execute()} method to invoke the remote operation.
         *
         * @param parent Name of the source to groupBy. Its format is
        "organizations/[organization_id]/sources/[source_id]".
         *        To groupBy across
        all sources provide a source_id of `-`. For example:
         *        organizations/123/sources/-
         * @param content the {@link com.google.api.services.securitycenter.v1.model.GroupFindingsRequest}
         * @return the request
         */
        public Group group(java.lang.String parent, com.google.api.services.securitycenter.v1.model.GroupFindingsRequest content) throws java.io.IOException {
          Group result = new Group(parent, content);
          initialize(result);
          return result;
        }

        public class Group extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.GroupFindingsResponse> {

          private static final String REST_PATH = "v1/{+parent}/findings:group";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+$");

          /**
           * Filters an organization or source's findings and  groups them by their specified properties.
           *
           * To group across all sources provide a `-` as the source id. Example:
           * /v1/organizations/123/sources/-/findings
           *
           * Create a request for the method "findings.group".
           *
           * This request holds the parameters needed by the the securitycenter server.  After setting any
           * optional parameters, call the {@link Group#execute()} method to invoke the remote operation.
           * <p> {@link
           * Group#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Name of the source to groupBy. Its format is
        "organizations/[organization_id]/sources/[source_id]".
         *        To groupBy across
        all sources provide a source_id of `-`. For example:
         *        organizations/123/sources/-
           * @param content the {@link com.google.api.services.securitycenter.v1.model.GroupFindingsRequest}
           * @since 1.13
           */
          protected Group(java.lang.String parent, com.google.api.services.securitycenter.v1.model.GroupFindingsRequest content) {
            super(SecurityCommandCenter.this, "POST", REST_PATH, content, com.google.api.services.securitycenter.v1.model.GroupFindingsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+$");
            }
          }

          @Override
          public Group set$Xgafv(java.lang.String $Xgafv) {
            return (Group) super.set$Xgafv($Xgafv);
          }

          @Override
          public Group setAccessToken(java.lang.String accessToken) {
            return (Group) super.setAccessToken(accessToken);
          }

          @Override
          public Group setAlt(java.lang.String alt) {
            return (Group) super.setAlt(alt);
          }

          @Override
          public Group setCallback(java.lang.String callback) {
            return (Group) super.setCallback(callback);
          }

          @Override
          public Group setFields(java.lang.String fields) {
            return (Group) super.setFields(fields);
          }

          @Override
          public Group setKey(java.lang.String key) {
            return (Group) super.setKey(key);
          }

          @Override
          public Group setOauthToken(java.lang.String oauthToken) {
            return (Group) super.setOauthToken(oauthToken);
          }

          @Override
          public Group setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Group) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Group setQuotaUser(java.lang.String quotaUser) {
            return (Group) super.setQuotaUser(quotaUser);
          }

          @Override
          public Group setUploadType(java.lang.String uploadType) {
            return (Group) super.setUploadType(uploadType);
          }

          @Override
          public Group setUploadProtocol(java.lang.String uploadProtocol) {
            return (Group) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Name of the source to groupBy. Its format is
           * "organizations/[organization_id]/sources/[source_id]". To groupBy across all sources
           * provide a source_id of `-`. For example: organizations/123/sources/-
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Name of the source to groupBy. Its format is "organizations/[organization_id]/sources/[source_id]".
         To groupBy across all sources provide a source_id of `-`. For example: organizations/123/sources/-
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Name of the source to groupBy. Its format is
           * "organizations/[organization_id]/sources/[source_id]". To groupBy across all sources
           * provide a source_id of `-`. For example: organizations/123/sources/-
           */
          public Group setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Group set(String parameterName, Object value) {
            return (Group) super.set(parameterName, value);
          }
        }
        /**
         * Lists an organization or source's findings.
         *
         * To list across all sources provide a `-` as the source id. Example:
         * /v1/organizations/123/sources/-/findings
         *
         * Create a request for the method "findings.list".
         *
         * This request holds the parameters needed by the securitycenter server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Name of the source the findings belong to. Its format is
         *        "organizations/[organization_id]/sources/[source_id]". To list across all
        sources provide
         *        a source_id of `-`. For example:
        organizations/123/sources/-
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.ListFindingsResponse> {

          private static final String REST_PATH = "v1/{+parent}/findings";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+$");

          /**
           * Lists an organization or source's findings.
           *
           * To list across all sources provide a `-` as the source id. Example:
           * /v1/organizations/123/sources/-/findings
           *
           * Create a request for the method "findings.list".
           *
           * This request holds the parameters needed by the the securitycenter server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Name of the source the findings belong to. Its format is
         *        "organizations/[organization_id]/sources/[source_id]". To list across all
        sources provide
         *        a source_id of `-`. For example:
        organizations/123/sources/-
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SecurityCommandCenter.this, "GET", REST_PATH, null, com.google.api.services.securitycenter.v1.model.ListFindingsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Name of the source the findings belong to. Its format is
           * "organizations/[organization_id]/sources/[source_id]". To list across all sources
           * provide a source_id of `-`. For example: organizations/123/sources/-
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Name of the source the findings belong to. Its format is
         "organizations/[organization_id]/sources/[source_id]". To list across all sources provide a
         source_id of `-`. For example: organizations/123/sources/-
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Name of the source the findings belong to. Its format is
           * "organizations/[organization_id]/sources/[source_id]". To list across all sources
           * provide a source_id of `-`. For example: organizations/123/sources/-
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * When compare_duration is set, the ListFindingsResult's "state_change" attribute is
           * updated to indicate whether the finding had its state changed, the finding's state
           * remained unchanged, or if the finding was added in any state during the
           * compare_duration period of time that precedes the read_time. This is the time between
           * (read_time - compare_duration) and read_time.
           *
           * The state_change value is derived based on the presence and state of the finding at the
           * two points in time. Intermediate state changes between the two times don't affect the
           * result. For example, the results aren't affected if the finding is made inactive and
           * then active again.
           *
           * Possible "state_change" values when compare_duration is specified:
           *
           * * "CHANGED":   indicates that the finding was present at the start of compare_duration,
           * but changed its state at read_time. * "UNCHANGED": indicates that the finding was
           * present at the start of compare_duration and did not change state at read_time. *
           * "ADDED":     indicates that the finding was not present at the start of
           * compare_duration, but was present at read_time.
           *
           * If compare_duration is not specified, then the only possible state_change is "UNUSED",
           * which will be the state_change set for all findings present at read_time.
           */
          @com.google.api.client.util.Key
          private String compareDuration;

          /** When compare_duration is set, the ListFindingsResult's "state_change" attribute is updated to
         indicate whether the finding had its state changed, the finding's state remained unchanged, or if
         the finding was added in any state during the compare_duration period of time that precedes the
         read_time. This is the time between (read_time - compare_duration) and read_time.

         The state_change value is derived based on the presence and state of the finding at the two points
         in time. Intermediate state changes between the two times don't affect the result. For example, the
         results aren't affected if the finding is made inactive and then active again.

         Possible "state_change" values when compare_duration is specified:

         * "CHANGED":   indicates that the finding was present at the start of compare_duration, but changed
         its state at read_time. * "UNCHANGED": indicates that the finding was present at the start of
         compare_duration and did not change state at read_time. * "ADDED":     indicates that the finding
         was not present at the start of compare_duration, but was present at read_time.

         If compare_duration is not specified, then the only possible state_change is "UNUSED", which will
         be the state_change set for all findings present at read_time.
           */
          public String getCompareDuration() {
            return compareDuration;
          }

          /**
           * When compare_duration is set, the ListFindingsResult's "state_change" attribute is
           * updated to indicate whether the finding had its state changed, the finding's state
           * remained unchanged, or if the finding was added in any state during the
           * compare_duration period of time that precedes the read_time. This is the time between
           * (read_time - compare_duration) and read_time.
           *
           * The state_change value is derived based on the presence and state of the finding at the
           * two points in time. Intermediate state changes between the two times don't affect the
           * result. For example, the results aren't affected if the finding is made inactive and
           * then active again.
           *
           * Possible "state_change" values when compare_duration is specified:
           *
           * * "CHANGED":   indicates that the finding was present at the start of compare_duration,
           * but changed its state at read_time. * "UNCHANGED": indicates that the finding was
           * present at the start of compare_duration and did not change state at read_time. *
           * "ADDED":     indicates that the finding was not present at the start of
           * compare_duration, but was present at read_time.
           *
           * If compare_duration is not specified, then the only possible state_change is "UNUSED",
           * which will be the state_change set for all findings present at read_time.
           */
          public List setCompareDuration(String compareDuration) {
            this.compareDuration = compareDuration;
            return this;
          }

          /**
           * Optional.
           *
           * A field mask to specify the Finding fields to be listed in the response. An empty field
           * mask will list all fields.
           */
          @com.google.api.client.util.Key
          private String fieldMask;

          /** Optional.

         A field mask to specify the Finding fields to be listed in the response. An empty field mask will
         list all fields.
           */
          public String getFieldMask() {
            return fieldMask;
          }

          /**
           * Optional.
           *
           * A field mask to specify the Finding fields to be listed in the response. An empty field
           * mask will list all fields.
           */
          public List setFieldMask(String fieldMask) {
            this.fieldMask = fieldMask;
            return this;
          }

          /**
           * Expression that defines the filter to apply across findings. The expression is a list
           * of one or more restrictions combined via logical operators `AND` and `OR`. Parentheses
           * are supported, and `OR` has higher precedence than `AND`.
           *
           * Restrictions have the form `  ` and may have a `-` character in front of them to
           * indicate negation. Examples include:
           *
           * * name * source_properties.a_property * security_marks.marks.marka
           *
           * The supported operators are:
           *
           * * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning
           * substring matching, for strings.
           *
           * The supported value types are:
           *
           * * string literals in quotes. * integer literals without quotes. * boolean literals
           * `true` and `false` without quotes.
           *
           * The following field and operator combinations are supported:
           *
           * name: `=` parent: `=`, `:` resource_name: `=`, `:` state: `=`, `:` category: `=`, `:`
           * external_uri: `=`, `:` event_time: `>`, `<`, `>=`, `<=` security_marks: `=`, `:`
           * source_properties: `=`, `:`, `>`, `<`, `>=`, `<=`
           *
           * For example, `source_properties.size = 100` is a valid filter string.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Expression that defines the filter to apply across findings. The expression is a list of one or
         more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and
         `OR` has higher precedence than `AND`.

         Restrictions have the form `  ` and may have a `-` character in front of them to indicate negation.
         Examples include:

         * name * source_properties.a_property * security_marks.marks.marka

         The supported operators are:

         * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring
         matching, for strings.

         The supported value types are:

         * string literals in quotes. * integer literals without quotes. * boolean literals `true` and
         `false` without quotes.

         The following field and operator combinations are supported:

         name: `=` parent: `=`, `:` resource_name: `=`, `:` state: `=`, `:` category: `=`, `:` external_uri:
         `=`, `:` event_time: `>`, `<`, `>=`, `<=` security_marks: `=`, `:` source_properties: `=`, `:`,
         `>`, `<`, `>=`, `<=`

         For example, `source_properties.size = 100` is a valid filter string.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Expression that defines the filter to apply across findings. The expression is a list
           * of one or more restrictions combined via logical operators `AND` and `OR`. Parentheses
           * are supported, and `OR` has higher precedence than `AND`.
           *
           * Restrictions have the form `  ` and may have a `-` character in front of them to
           * indicate negation. Examples include:
           *
           * * name * source_properties.a_property * security_marks.marks.marka
           *
           * The supported operators are:
           *
           * * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning
           * substring matching, for strings.
           *
           * The supported value types are:
           *
           * * string literals in quotes. * integer literals without quotes. * boolean literals
           * `true` and `false` without quotes.
           *
           * The following field and operator combinations are supported:
           *
           * name: `=` parent: `=`, `:` resource_name: `=`, `:` state: `=`, `:` category: `=`, `:`
           * external_uri: `=`, `:` event_time: `>`, `<`, `>=`, `<=` security_marks: `=`, `:`
           * source_properties: `=`, `:`, `>`, `<`, `>=`, `<=`
           *
           * For example, `source_properties.size = 100` is a valid filter string.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Expression that defines what fields and order to use for sorting. The string value
           * should follow SQL syntax: comma separated list of fields. For example:
           * "name,resource_properties.a_property". The default sorting order is ascending. To
           * specify descending order for a field, a suffix " desc" should be appended to the field
           * name. For example: "name desc,source_properties.a_property". Redundant space characters
           * in the syntax are insignificant. "name desc,source_properties.a_property" and " name
           * desc  ,   source_properties.a_property  " are equivalent.
           *
           * The following fields are supported: name parent state category resource_name event_time
           * source_properties security_marks
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Expression that defines what fields and order to use for sorting. The string value should follow
         SQL syntax: comma separated list of fields. For example: "name,resource_properties.a_property". The
         default sorting order is ascending. To specify descending order for a field, a suffix " desc"
         should be appended to the field name. For example: "name desc,source_properties.a_property".
         Redundant space characters in the syntax are insignificant. "name
         desc,source_properties.a_property" and " name     desc  ,   source_properties.a_property  " are
         equivalent.

         The following fields are supported: name parent state category resource_name event_time
         source_properties security_marks
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Expression that defines what fields and order to use for sorting. The string value
           * should follow SQL syntax: comma separated list of fields. For example:
           * "name,resource_properties.a_property". The default sorting order is ascending. To
           * specify descending order for a field, a suffix " desc" should be appended to the field
           * name. For example: "name desc,source_properties.a_property". Redundant space characters
           * in the syntax are insignificant. "name desc,source_properties.a_property" and " name
           * desc  ,   source_properties.a_property  " are equivalent.
           *
           * The following fields are supported: name parent state category resource_name event_time
           * source_properties security_marks
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * The maximum number of results to return in a single response. Default is 10, minimum is
           * 1, maximum is 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum
         is 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of results to return in a single response. Default is 10, minimum is
           * 1, maximum is 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The value returned by the last `ListFindingsResponse`; indicates that this is a
           * continuation of a prior `ListFindings` call, and that the system should return the next
           * page of data.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The value returned by the last `ListFindingsResponse`; indicates that this is a continuation of a
         prior `ListFindings` call, and that the system should return the next page of data.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The value returned by the last `ListFindingsResponse`; indicates that this is a
           * continuation of a prior `ListFindings` call, and that the system should return the next
           * page of data.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * Time used as a reference point when filtering findings. The filter is limited to
           * findings existing at the supplied time and their values are those at that specific
           * time. Absence of this field will default to the API's version of NOW.
           */
          @com.google.api.client.util.Key
          private String readTime;

          /** Time used as a reference point when filtering findings. The filter is limited to findings existing
         at the supplied time and their values are those at that specific time. Absence of this field will
         default to the API's version of NOW.
           */
          public String getReadTime() {
            return readTime;
          }

          /**
           * Time used as a reference point when filtering findings. The filter is limited to
           * findings existing at the supplied time and their values are those at that specific
           * time. Absence of this field will default to the API's version of NOW.
           */
          public List setReadTime(String readTime) {
            this.readTime = readTime;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Creates or updates a finding. The corresponding source must exist for a finding creation to
         * succeed.
         *
         * Create a request for the method "findings.patch".
         *
         * This request holds the parameters needed by the securitycenter server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The relative resource name of this finding. See:
         *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
        Example:
         *        "organizations/123/sources/456/findings/789"
         * @param content the {@link com.google.api.services.securitycenter.v1.model.Finding}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.securitycenter.v1.model.Finding content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Finding> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+/findings/[^/]+$");

          /**
           * Creates or updates a finding. The corresponding source must exist for a finding creation to
           * succeed.
           *
           * Create a request for the method "findings.patch".
           *
           * This request holds the parameters needed by the the securitycenter server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The relative resource name of this finding. See:
         *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
        Example:
         *        "organizations/123/sources/456/findings/789"
           * @param content the {@link com.google.api.services.securitycenter.v1.model.Finding}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.securitycenter.v1.model.Finding content) {
            super(SecurityCommandCenter.this, "PATCH", REST_PATH, content, com.google.api.services.securitycenter.v1.model.Finding.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+/findings/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The relative resource name of this finding. See:
           * https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
           * "organizations/123/sources/456/findings/789"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The relative resource name of this finding. See:
         https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
         "organizations/123/sources/456/findings/789"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The relative resource name of this finding. See:
           * https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
           * "organizations/123/sources/456/findings/789"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+/findings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The FieldMask to use when updating the finding resource. This field should not be
           * specified when creating a finding.
           *
           * When updating a finding, an empty mask is treated as updating all mutable fields and
           * replacing source_properties.  Individual source_properties can be added/updated by
           * using "source_properties." in the field mask.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The FieldMask to use when updating the finding resource. This field should not be specified when
         creating a finding.

         When updating a finding, an empty mask is treated as updating all mutable fields and replacing
         source_properties.  Individual source_properties can be added/updated by using "source_properties."
         in the field mask.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The FieldMask to use when updating the finding resource. This field should not be
           * specified when creating a finding.
           *
           * When updating a finding, an empty mask is treated as updating all mutable fields and
           * replacing source_properties.  Individual source_properties can be added/updated by
           * using "source_properties." in the field mask.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Updates the state of a finding.
         *
         * Create a request for the method "findings.setState".
         *
         * This request holds the parameters needed by the securitycenter server.  After setting any
         * optional parameters, call the {@link SetState#execute()} method to invoke the remote operation.
         *
         * @param name The relative resource name of the finding. See:
         *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
        Example:
         *        "organizations/123/sources/456/finding/789".
         * @param content the {@link com.google.api.services.securitycenter.v1.model.SetFindingStateRequest}
         * @return the request
         */
        public SetState setState(java.lang.String name, com.google.api.services.securitycenter.v1.model.SetFindingStateRequest content) throws java.io.IOException {
          SetState result = new SetState(name, content);
          initialize(result);
          return result;
        }

        public class SetState extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.Finding> {

          private static final String REST_PATH = "v1/{+name}:setState";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+/findings/[^/]+$");

          /**
           * Updates the state of a finding.
           *
           * Create a request for the method "findings.setState".
           *
           * This request holds the parameters needed by the the securitycenter server.  After setting any
           * optional parameters, call the {@link SetState#execute()} method to invoke the remote operation.
           * <p> {@link
           * SetState#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The relative resource name of the finding. See:
         *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
        Example:
         *        "organizations/123/sources/456/finding/789".
           * @param content the {@link com.google.api.services.securitycenter.v1.model.SetFindingStateRequest}
           * @since 1.13
           */
          protected SetState(java.lang.String name, com.google.api.services.securitycenter.v1.model.SetFindingStateRequest content) {
            super(SecurityCommandCenter.this, "POST", REST_PATH, content, com.google.api.services.securitycenter.v1.model.Finding.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+/findings/[^/]+$");
            }
          }

          @Override
          public SetState set$Xgafv(java.lang.String $Xgafv) {
            return (SetState) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetState setAccessToken(java.lang.String accessToken) {
            return (SetState) super.setAccessToken(accessToken);
          }

          @Override
          public SetState setAlt(java.lang.String alt) {
            return (SetState) super.setAlt(alt);
          }

          @Override
          public SetState setCallback(java.lang.String callback) {
            return (SetState) super.setCallback(callback);
          }

          @Override
          public SetState setFields(java.lang.String fields) {
            return (SetState) super.setFields(fields);
          }

          @Override
          public SetState setKey(java.lang.String key) {
            return (SetState) super.setKey(key);
          }

          @Override
          public SetState setOauthToken(java.lang.String oauthToken) {
            return (SetState) super.setOauthToken(oauthToken);
          }

          @Override
          public SetState setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetState) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetState setQuotaUser(java.lang.String quotaUser) {
            return (SetState) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetState setUploadType(java.lang.String uploadType) {
            return (SetState) super.setUploadType(uploadType);
          }

          @Override
          public SetState setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetState) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The relative resource name of the finding. See:
           * https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
           * "organizations/123/sources/456/finding/789".
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The relative resource name of the finding. See:
         https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
         "organizations/123/sources/456/finding/789".
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The relative resource name of the finding. See:
           * https://cloud.google.com/apis/design/resource_names#relative_resource_name Example:
           * "organizations/123/sources/456/finding/789".
           */
          public SetState setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+/findings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public SetState set(String parameterName, Object value) {
            return (SetState) super.set(parameterName, value);
          }
        }
        /**
         * Updates security marks.
         *
         * Create a request for the method "findings.updateSecurityMarks".
         *
         * This request holds the parameters needed by the securitycenter server.  After setting any
         * optional parameters, call the {@link UpdateSecurityMarks#execute()} method to invoke the remote
         * operation.
         *
         * @param name The relative resource name of the SecurityMarks. See:
         *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
        Examples:
         *        "organizations/123/assets/456/securityMarks"
         *        "organizations/123/sources/456/findings/789/securityMarks".
         * @param content the {@link com.google.api.services.securitycenter.v1.model.SecurityMarks}
         * @return the request
         */
        public UpdateSecurityMarks updateSecurityMarks(java.lang.String name, com.google.api.services.securitycenter.v1.model.SecurityMarks content) throws java.io.IOException {
          UpdateSecurityMarks result = new UpdateSecurityMarks(name, content);
          initialize(result);
          return result;
        }

        public class UpdateSecurityMarks extends SecurityCommandCenterRequest<com.google.api.services.securitycenter.v1.model.SecurityMarks> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sources/[^/]+/findings/[^/]+/securityMarks$");

          /**
           * Updates security marks.
           *
           * Create a request for the method "findings.updateSecurityMarks".
           *
           * This request holds the parameters needed by the the securitycenter server.  After setting any
           * optional parameters, call the {@link UpdateSecurityMarks#execute()} method to invoke the remote
           * operation. <p> {@link UpdateSecurityMarks#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name The relative resource name of the SecurityMarks. See:
         *        https://cloud.google.com/apis/design/resource_names#relative_resource_name
        Examples:
         *        "organizations/123/assets/456/securityMarks"
         *        "organizations/123/sources/456/findings/789/securityMarks".
           * @param content the {@link com.google.api.services.securitycenter.v1.model.SecurityMarks}
           * @since 1.13
           */
          protected UpdateSecurityMarks(java.lang.String name, com.google.api.services.securitycenter.v1.model.SecurityMarks content) {
            super(SecurityCommandCenter.this, "PATCH", REST_PATH, content, com.google.api.services.securitycenter.v1.model.SecurityMarks.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+/findings/[^/]+/securityMarks$");
            }
          }

          @Override
          public UpdateSecurityMarks set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateSecurityMarks) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateSecurityMarks setAccessToken(java.lang.String accessToken) {
            return (UpdateSecurityMarks) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateSecurityMarks setAlt(java.lang.String alt) {
            return (UpdateSecurityMarks) super.setAlt(alt);
          }

          @Override
          public UpdateSecurityMarks setCallback(java.lang.String callback) {
            return (UpdateSecurityMarks) super.setCallback(callback);
          }

          @Override
          public UpdateSecurityMarks setFields(java.lang.String fields) {
            return (UpdateSecurityMarks) super.setFields(fields);
          }

          @Override
          public UpdateSecurityMarks setKey(java.lang.String key) {
            return (UpdateSecurityMarks) super.setKey(key);
          }

          @Override
          public UpdateSecurityMarks setOauthToken(java.lang.String oauthToken) {
            return (UpdateSecurityMarks) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateSecurityMarks setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateSecurityMarks) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateSecurityMarks setQuotaUser(java.lang.String quotaUser) {
            return (UpdateSecurityMarks) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateSecurityMarks setUploadType(java.lang.String uploadType) {
            return (UpdateSecurityMarks) super.setUploadType(uploadType);
          }

          @Override
          public UpdateSecurityMarks setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateSecurityMarks) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The relative resource name of the SecurityMarks. See:
           * https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples:
           * "organizations/123/assets/456/securityMarks"
           * "organizations/123/sources/456/findings/789/securityMarks".
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The relative resource name of the SecurityMarks. See:
         https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples:
         "organizations/123/assets/456/securityMarks"
         "organizations/123/sources/456/findings/789/securityMarks".
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The relative resource name of the SecurityMarks. See:
           * https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples:
           * "organizations/123/assets/456/securityMarks"
           * "organizations/123/sources/456/findings/789/securityMarks".
           */
          public UpdateSecurityMarks setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sources/[^/]+/findings/[^/]+/securityMarks$");
            }
            this.name = name;
            return this;
          }

          /**
           * The time at which the updated SecurityMarks take effect. If not set uses current server
           * time.  Updates will be applied to the SecurityMarks that are active immediately
           * preceding this time.
           */
          @com.google.api.client.util.Key
          private String startTime;

          /** The time at which the updated SecurityMarks take effect. If not set uses current server time.
         Updates will be applied to the SecurityMarks that are active immediately preceding this time.
           */
          public String getStartTime() {
            return startTime;
          }

          /**
           * The time at which the updated SecurityMarks take effect. If not set uses current server
           * time.  Updates will be applied to the SecurityMarks that are active immediately
           * preceding this time.
           */
          public UpdateSecurityMarks setStartTime(String startTime) {
            this.startTime = startTime;
            return this;
          }

          /**
           * The FieldMask to use when updating the security marks resource.
           *
           * The field mask must not contain duplicate fields. If empty or set to "marks", all marks
           * will be replaced.  Individual marks can be updated using "marks.".
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The FieldMask to use when updating the security marks resource.

         The field mask must not contain duplicate fields. If empty or set to "marks", all marks will be
         replaced.  Individual marks can be updated using "marks.".
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The FieldMask to use when updating the security marks resource.
           *
           * The field mask must not contain duplicate fields. If empty or set to "marks", all marks
           * will be replaced.  Individual marks can be updated using "marks.".
           */
          public UpdateSecurityMarks setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public UpdateSecurityMarks set(String parameterName, Object value) {
            return (UpdateSecurityMarks) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link SecurityCommandCenter}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link SecurityCommandCenter}. */
    @Override
    public SecurityCommandCenter build() {
      return new SecurityCommandCenter(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link SecurityCommandCenterRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setSecurityCommandCenterRequestInitializer(
        SecurityCommandCenterRequestInitializer securitycommandcenterRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(securitycommandcenterRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
