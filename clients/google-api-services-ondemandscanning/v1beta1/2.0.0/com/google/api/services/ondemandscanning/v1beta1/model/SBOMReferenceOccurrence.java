/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.ondemandscanning.v1beta1.model;

/**
 * The occurrence representing an SBOM reference as applied to a specific resource. The occurrence
 * follows the DSSE specification. See https://github.com/secure-systems-
 * lab/dsse/blob/master/envelope.md for more details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the On-Demand Scanning API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SBOMReferenceOccurrence extends com.google.api.client.json.GenericJson {

  /**
   * The actual payload that contains the SBOM reference data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SbomReferenceIntotoPayload payload;

  /**
   * The kind of payload that SbomReferenceIntotoPayload takes. Since it's in the intoto format,
   * this value is expected to be 'application/vnd.in-toto+json'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String payloadType;

  /**
   * The signatures over the payload.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<EnvelopeSignature> signatures;

  static {
    // hack to force ProGuard to consider EnvelopeSignature used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(EnvelopeSignature.class);
  }

  /**
   * The actual payload that contains the SBOM reference data.
   * @return value or {@code null} for none
   */
  public SbomReferenceIntotoPayload getPayload() {
    return payload;
  }

  /**
   * The actual payload that contains the SBOM reference data.
   * @param payload payload or {@code null} for none
   */
  public SBOMReferenceOccurrence setPayload(SbomReferenceIntotoPayload payload) {
    this.payload = payload;
    return this;
  }

  /**
   * The kind of payload that SbomReferenceIntotoPayload takes. Since it's in the intoto format,
   * this value is expected to be 'application/vnd.in-toto+json'.
   * @return value or {@code null} for none
   */
  public java.lang.String getPayloadType() {
    return payloadType;
  }

  /**
   * The kind of payload that SbomReferenceIntotoPayload takes. Since it's in the intoto format,
   * this value is expected to be 'application/vnd.in-toto+json'.
   * @param payloadType payloadType or {@code null} for none
   */
  public SBOMReferenceOccurrence setPayloadType(java.lang.String payloadType) {
    this.payloadType = payloadType;
    return this;
  }

  /**
   * The signatures over the payload.
   * @return value or {@code null} for none
   */
  public java.util.List<EnvelopeSignature> getSignatures() {
    return signatures;
  }

  /**
   * The signatures over the payload.
   * @param signatures signatures or {@code null} for none
   */
  public SBOMReferenceOccurrence setSignatures(java.util.List<EnvelopeSignature> signatures) {
    this.signatures = signatures;
    return this;
  }

  @Override
  public SBOMReferenceOccurrence set(String fieldName, Object value) {
    return (SBOMReferenceOccurrence) super.set(fieldName, value);
  }

  @Override
  public SBOMReferenceOccurrence clone() {
    return (SBOMReferenceOccurrence) super.clone();
  }

}
