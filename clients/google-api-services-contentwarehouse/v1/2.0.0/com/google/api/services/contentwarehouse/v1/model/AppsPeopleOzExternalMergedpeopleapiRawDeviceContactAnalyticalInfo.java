/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo extends com.google.api.client.json.GenericJson {

  /**
   * The data set within the account that this raw contact belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataSet;

  /**
   * The CP2 dirty field which indicates the sync state of the raw contact:
   * https://developer.android.com/reference/android/provider/ContactsContract.SyncColumns#DIRTY
   * True if the row is changed but not synced
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean dirty;

  /**
   * Whether the source ID exists for non-Google contacts. Won't set for Google contacts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean sourceIdExist;

  /**
   * The Sync Info of a raw contact.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SocialGraphApiProtoSyncInfo syncInfo;

  /**
   * The data set within the account that this raw contact belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataSet() {
    return dataSet;
  }

  /**
   * The data set within the account that this raw contact belongs to.
   * @param dataSet dataSet or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo setDataSet(java.lang.String dataSet) {
    this.dataSet = dataSet;
    return this;
  }

  /**
   * The CP2 dirty field which indicates the sync state of the raw contact:
   * https://developer.android.com/reference/android/provider/ContactsContract.SyncColumns#DIRTY
   * True if the row is changed but not synced
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDirty() {
    return dirty;
  }

  /**
   * The CP2 dirty field which indicates the sync state of the raw contact:
   * https://developer.android.com/reference/android/provider/ContactsContract.SyncColumns#DIRTY
   * True if the row is changed but not synced
   * @param dirty dirty or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo setDirty(java.lang.Boolean dirty) {
    this.dirty = dirty;
    return this;
  }

  /**
   * Whether the source ID exists for non-Google contacts. Won't set for Google contacts.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSourceIdExist() {
    return sourceIdExist;
  }

  /**
   * Whether the source ID exists for non-Google contacts. Won't set for Google contacts.
   * @param sourceIdExist sourceIdExist or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo setSourceIdExist(java.lang.Boolean sourceIdExist) {
    this.sourceIdExist = sourceIdExist;
    return this;
  }

  /**
   * The Sync Info of a raw contact.
   * @return value or {@code null} for none
   */
  public SocialGraphApiProtoSyncInfo getSyncInfo() {
    return syncInfo;
  }

  /**
   * The Sync Info of a raw contact.
   * @param syncInfo syncInfo or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo setSyncInfo(SocialGraphApiProtoSyncInfo syncInfo) {
    this.syncInfo = syncInfo;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo clone() {
    return (AppsPeopleOzExternalMergedpeopleapiRawDeviceContactAnalyticalInfo) super.clone();
  }

}
