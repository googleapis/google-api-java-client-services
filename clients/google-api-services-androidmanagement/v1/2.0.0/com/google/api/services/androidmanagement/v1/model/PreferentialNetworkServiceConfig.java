/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * Individual preferential network service configuration.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PreferentialNetworkServiceConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Whether fallback to the device-wide default network is allowed. If this is set to
   * FALLBACK_TO_DEFAULT_CONNECTION_ALLOWED, then nonMatchingNetworks must not be set to
   * NON_MATCHING_NETWORKS_DISALLOWED, the policy will be rejected otherwise. Note: If this is set
   * to FALLBACK_TO_DEFAULT_CONNECTION_DISALLOWED, applications are not able to access the internet
   * if the 5G slice is not available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fallbackToDefaultConnection;

  /**
   * Optional. Whether apps this configuration applies to are blocked from using networks other than
   * the preferential service. If this is set to NON_MATCHING_NETWORKS_DISALLOWED, then
   * fallbackToDefaultConnection must be set to FALLBACK_TO_DEFAULT_CONNECTION_DISALLOWED.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nonMatchingNetworks;

  /**
   * Required. Preferential network identifier. This must not be set to NO_PREFERENTIAL_NETWORK or
   * PREFERENTIAL_NETWORK_ID_UNSPECIFIED, the policy will be rejected otherwise.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String preferentialNetworkId;

  /**
   * Optional. Whether fallback to the device-wide default network is allowed. If this is set to
   * FALLBACK_TO_DEFAULT_CONNECTION_ALLOWED, then nonMatchingNetworks must not be set to
   * NON_MATCHING_NETWORKS_DISALLOWED, the policy will be rejected otherwise. Note: If this is set
   * to FALLBACK_TO_DEFAULT_CONNECTION_DISALLOWED, applications are not able to access the internet
   * if the 5G slice is not available.
   * @return value or {@code null} for none
   */
  public java.lang.String getFallbackToDefaultConnection() {
    return fallbackToDefaultConnection;
  }

  /**
   * Optional. Whether fallback to the device-wide default network is allowed. If this is set to
   * FALLBACK_TO_DEFAULT_CONNECTION_ALLOWED, then nonMatchingNetworks must not be set to
   * NON_MATCHING_NETWORKS_DISALLOWED, the policy will be rejected otherwise. Note: If this is set
   * to FALLBACK_TO_DEFAULT_CONNECTION_DISALLOWED, applications are not able to access the internet
   * if the 5G slice is not available.
   * @param fallbackToDefaultConnection fallbackToDefaultConnection or {@code null} for none
   */
  public PreferentialNetworkServiceConfig setFallbackToDefaultConnection(java.lang.String fallbackToDefaultConnection) {
    this.fallbackToDefaultConnection = fallbackToDefaultConnection;
    return this;
  }

  /**
   * Optional. Whether apps this configuration applies to are blocked from using networks other than
   * the preferential service. If this is set to NON_MATCHING_NETWORKS_DISALLOWED, then
   * fallbackToDefaultConnection must be set to FALLBACK_TO_DEFAULT_CONNECTION_DISALLOWED.
   * @return value or {@code null} for none
   */
  public java.lang.String getNonMatchingNetworks() {
    return nonMatchingNetworks;
  }

  /**
   * Optional. Whether apps this configuration applies to are blocked from using networks other than
   * the preferential service. If this is set to NON_MATCHING_NETWORKS_DISALLOWED, then
   * fallbackToDefaultConnection must be set to FALLBACK_TO_DEFAULT_CONNECTION_DISALLOWED.
   * @param nonMatchingNetworks nonMatchingNetworks or {@code null} for none
   */
  public PreferentialNetworkServiceConfig setNonMatchingNetworks(java.lang.String nonMatchingNetworks) {
    this.nonMatchingNetworks = nonMatchingNetworks;
    return this;
  }

  /**
   * Required. Preferential network identifier. This must not be set to NO_PREFERENTIAL_NETWORK or
   * PREFERENTIAL_NETWORK_ID_UNSPECIFIED, the policy will be rejected otherwise.
   * @return value or {@code null} for none
   */
  public java.lang.String getPreferentialNetworkId() {
    return preferentialNetworkId;
  }

  /**
   * Required. Preferential network identifier. This must not be set to NO_PREFERENTIAL_NETWORK or
   * PREFERENTIAL_NETWORK_ID_UNSPECIFIED, the policy will be rejected otherwise.
   * @param preferentialNetworkId preferentialNetworkId or {@code null} for none
   */
  public PreferentialNetworkServiceConfig setPreferentialNetworkId(java.lang.String preferentialNetworkId) {
    this.preferentialNetworkId = preferentialNetworkId;
    return this;
  }

  @Override
  public PreferentialNetworkServiceConfig set(String fieldName, Object value) {
    return (PreferentialNetworkServiceConfig) super.set(fieldName, value);
  }

  @Override
  public PreferentialNetworkServiceConfig clone() {
    return (PreferentialNetworkServiceConfig) super.clone();
  }

}
