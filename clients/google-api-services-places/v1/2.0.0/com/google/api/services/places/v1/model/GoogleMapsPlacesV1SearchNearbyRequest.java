/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Request proto for Search Nearby.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1SearchNearbyRequest extends com.google.api.client.json.GenericJson {

  /**
   * Excluded primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types
   * from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If there are any conflicting primary types, i.e. a type
   * appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is
   * returned. If a Place type is specified with multiple type restrictions, only places that
   * satisfy all of the restrictions are returned. For example, if we have {included_types =
   * ["restaurant"], excluded_primary_types = ["restaurant"]}, the returned places provide
   * "restaurant" related services but do not operate primarily as "restaurants".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> excludedPrimaryTypes;

  /**
   * Excluded Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types
   * from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If the client provides both included_types (e.g. restaurant)
   * and excluded_types (e.g. cafe), then the response should include places that are restaurant but
   * not cafe. The response includes places that match at least one of the included_types and none
   * of the excluded_types. If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type is
   * specified with multiple type restrictions, only places that satisfy all of the restrictions are
   * returned. For example, if we have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant" related services but do not operate
   * primarily as "restaurants".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> excludedTypes;

  /**
   * Included primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. A place can
   * only have a single primary type from the supported types table associated with it. Up to 50
   * types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If there are any conflicting primary types, i.e. a type
   * appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is
   * returned. If a Place type is specified with multiple type restrictions, only places that
   * satisfy all of the restrictions are returned. For example, if we have {included_types =
   * ["restaurant"], excluded_primary_types = ["restaurant"]}, the returned places provide
   * "restaurant" related services but do not operate primarily as "restaurants".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> includedPrimaryTypes;

  /**
   * Included Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types
   * from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If there are any conflicting types, i.e. a type appears in
   * both included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type
   * is specified with multiple type restrictions, only places that satisfy all of the restrictions
   * are returned. For example, if we have {included_types = ["restaurant"], excluded_primary_types
   * = ["restaurant"]}, the returned places provide "restaurant" related services but do not operate
   * primarily as "restaurants".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> includedTypes;

  /**
   * Place details will be displayed with the preferred language if available. If the language code
   * is unspecified or unrecognized, place details of any language may be returned, with a
   * preference for English if such details exist. Current list of supported languages:
   * https://developers.google.com/maps/faq#languagesupport.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * Required. The region to search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction locationRestriction;

  /**
   * Maximum number of results to return. It must be between 1 and 20 (default), inclusively. If the
   * number is unset, it falls back to the upper limit. If the number is set to negative or exceeds
   * the upper limit, an INVALID_ARGUMENT error is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxResultCount;

  /**
   * How results will be ranked in the response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rankPreference;

  /**
   * The Unicode country/region code (CLDR) of the location where the request is coming from. This
   * parameter is used to display the place details, like region-specific place name, if available.
   * The parameter can affect results based on applicable law. For more information, see
   * https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
   * Note that 3-digit region codes are not currently supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * Optional. Parameters that affect the routing to the search results.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1RoutingParameters routingParameters;

  /**
   * Excluded primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types
   * from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If there are any conflicting primary types, i.e. a type
   * appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is
   * returned. If a Place type is specified with multiple type restrictions, only places that
   * satisfy all of the restrictions are returned. For example, if we have {included_types =
   * ["restaurant"], excluded_primary_types = ["restaurant"]}, the returned places provide
   * "restaurant" related services but do not operate primarily as "restaurants".
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getExcludedPrimaryTypes() {
    return excludedPrimaryTypes;
  }

  /**
   * Excluded primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types
   * from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If there are any conflicting primary types, i.e. a type
   * appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is
   * returned. If a Place type is specified with multiple type restrictions, only places that
   * satisfy all of the restrictions are returned. For example, if we have {included_types =
   * ["restaurant"], excluded_primary_types = ["restaurant"]}, the returned places provide
   * "restaurant" related services but do not operate primarily as "restaurants".
   * @param excludedPrimaryTypes excludedPrimaryTypes or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setExcludedPrimaryTypes(java.util.List<java.lang.String> excludedPrimaryTypes) {
    this.excludedPrimaryTypes = excludedPrimaryTypes;
    return this;
  }

  /**
   * Excluded Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types
   * from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If the client provides both included_types (e.g. restaurant)
   * and excluded_types (e.g. cafe), then the response should include places that are restaurant but
   * not cafe. The response includes places that match at least one of the included_types and none
   * of the excluded_types. If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type is
   * specified with multiple type restrictions, only places that satisfy all of the restrictions are
   * returned. For example, if we have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant" related services but do not operate
   * primarily as "restaurants".
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getExcludedTypes() {
    return excludedTypes;
  }

  /**
   * Excluded Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types
   * from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If the client provides both included_types (e.g. restaurant)
   * and excluded_types (e.g. cafe), then the response should include places that are restaurant but
   * not cafe. The response includes places that match at least one of the included_types and none
   * of the excluded_types. If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type is
   * specified with multiple type restrictions, only places that satisfy all of the restrictions are
   * returned. For example, if we have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant" related services but do not operate
   * primarily as "restaurants".
   * @param excludedTypes excludedTypes or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setExcludedTypes(java.util.List<java.lang.String> excludedTypes) {
    this.excludedTypes = excludedTypes;
    return this;
  }

  /**
   * Included primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. A place can
   * only have a single primary type from the supported types table associated with it. Up to 50
   * types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If there are any conflicting primary types, i.e. a type
   * appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is
   * returned. If a Place type is specified with multiple type restrictions, only places that
   * satisfy all of the restrictions are returned. For example, if we have {included_types =
   * ["restaurant"], excluded_primary_types = ["restaurant"]}, the returned places provide
   * "restaurant" related services but do not operate primarily as "restaurants".
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIncludedPrimaryTypes() {
    return includedPrimaryTypes;
  }

  /**
   * Included primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. A place can
   * only have a single primary type from the supported types table associated with it. Up to 50
   * types from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If there are any conflicting primary types, i.e. a type
   * appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is
   * returned. If a Place type is specified with multiple type restrictions, only places that
   * satisfy all of the restrictions are returned. For example, if we have {included_types =
   * ["restaurant"], excluded_primary_types = ["restaurant"]}, the returned places provide
   * "restaurant" related services but do not operate primarily as "restaurants".
   * @param includedPrimaryTypes includedPrimaryTypes or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setIncludedPrimaryTypes(java.util.List<java.lang.String> includedPrimaryTypes) {
    this.includedPrimaryTypes = includedPrimaryTypes;
    return this;
  }

  /**
   * Included Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types
   * from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If there are any conflicting types, i.e. a type appears in
   * both included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type
   * is specified with multiple type restrictions, only places that satisfy all of the restrictions
   * are returned. For example, if we have {included_types = ["restaurant"], excluded_primary_types
   * = ["restaurant"]}, the returned places provide "restaurant" related services but do not operate
   * primarily as "restaurants".
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIncludedTypes() {
    return includedTypes;
  }

  /**
   * Included Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Up to 50 types
   * from [Table A](https://developers.google.com/maps/documentation/places/web-service/place-
   * types#table-a) may be specified. If there are any conflicting types, i.e. a type appears in
   * both included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type
   * is specified with multiple type restrictions, only places that satisfy all of the restrictions
   * are returned. For example, if we have {included_types = ["restaurant"], excluded_primary_types
   * = ["restaurant"]}, the returned places provide "restaurant" related services but do not operate
   * primarily as "restaurants".
   * @param includedTypes includedTypes or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setIncludedTypes(java.util.List<java.lang.String> includedTypes) {
    this.includedTypes = includedTypes;
    return this;
  }

  /**
   * Place details will be displayed with the preferred language if available. If the language code
   * is unspecified or unrecognized, place details of any language may be returned, with a
   * preference for English if such details exist. Current list of supported languages:
   * https://developers.google.com/maps/faq#languagesupport.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * Place details will be displayed with the preferred language if available. If the language code
   * is unspecified or unrecognized, place details of any language may be returned, with a
   * preference for English if such details exist. Current list of supported languages:
   * https://developers.google.com/maps/faq#languagesupport.
   * @param languageCode languageCode or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Required. The region to search.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction getLocationRestriction() {
    return locationRestriction;
  }

  /**
   * Required. The region to search.
   * @param locationRestriction locationRestriction or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setLocationRestriction(GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction locationRestriction) {
    this.locationRestriction = locationRestriction;
    return this;
  }

  /**
   * Maximum number of results to return. It must be between 1 and 20 (default), inclusively. If the
   * number is unset, it falls back to the upper limit. If the number is set to negative or exceeds
   * the upper limit, an INVALID_ARGUMENT error is returned.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxResultCount() {
    return maxResultCount;
  }

  /**
   * Maximum number of results to return. It must be between 1 and 20 (default), inclusively. If the
   * number is unset, it falls back to the upper limit. If the number is set to negative or exceeds
   * the upper limit, an INVALID_ARGUMENT error is returned.
   * @param maxResultCount maxResultCount or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setMaxResultCount(java.lang.Integer maxResultCount) {
    this.maxResultCount = maxResultCount;
    return this;
  }

  /**
   * How results will be ranked in the response.
   * @return value or {@code null} for none
   */
  public java.lang.String getRankPreference() {
    return rankPreference;
  }

  /**
   * How results will be ranked in the response.
   * @param rankPreference rankPreference or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setRankPreference(java.lang.String rankPreference) {
    this.rankPreference = rankPreference;
    return this;
  }

  /**
   * The Unicode country/region code (CLDR) of the location where the request is coming from. This
   * parameter is used to display the place details, like region-specific place name, if available.
   * The parameter can affect results based on applicable law. For more information, see
   * https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
   * Note that 3-digit region codes are not currently supported.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * The Unicode country/region code (CLDR) of the location where the request is coming from. This
   * parameter is used to display the place details, like region-specific place name, if available.
   * The parameter can affect results based on applicable law. For more information, see
   * https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
   * Note that 3-digit region codes are not currently supported.
   * @param regionCode regionCode or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * Optional. Parameters that affect the routing to the search results.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1RoutingParameters getRoutingParameters() {
    return routingParameters;
  }

  /**
   * Optional. Parameters that affect the routing to the search results.
   * @param routingParameters routingParameters or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchNearbyRequest setRoutingParameters(GoogleMapsPlacesV1RoutingParameters routingParameters) {
    this.routingParameters = routingParameters;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1SearchNearbyRequest set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1SearchNearbyRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1SearchNearbyRequest clone() {
    return (GoogleMapsPlacesV1SearchNearbyRequest) super.clone();
  }

}
