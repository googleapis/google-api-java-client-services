/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.recaptchaenterprise.v1.model;

/**
 * Options for user acceptance testing.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the reCAPTCHA Enterprise API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRecaptchaenterpriseV1TestingOptions extends com.google.api.client.json.GenericJson {

  /**
   * Optional. For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this
   * site return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String testingChallenge;

  /**
   * Optional. All assessments for this Key return this score. Must be between 0 (likely not
   * legitimate) and 1 (likely legitimate) inclusive.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float testingScore;

  /**
   * Optional. For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this
   * site return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
   * @return value or {@code null} for none
   */
  public java.lang.String getTestingChallenge() {
    return testingChallenge;
  }

  /**
   * Optional. For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this
   * site return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
   * @param testingChallenge testingChallenge or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1TestingOptions setTestingChallenge(java.lang.String testingChallenge) {
    this.testingChallenge = testingChallenge;
    return this;
  }

  /**
   * Optional. All assessments for this Key return this score. Must be between 0 (likely not
   * legitimate) and 1 (likely legitimate) inclusive.
   * @return value or {@code null} for none
   */
  public java.lang.Float getTestingScore() {
    return testingScore;
  }

  /**
   * Optional. All assessments for this Key return this score. Must be between 0 (likely not
   * legitimate) and 1 (likely legitimate) inclusive.
   * @param testingScore testingScore or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1TestingOptions setTestingScore(java.lang.Float testingScore) {
    this.testingScore = testingScore;
    return this;
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1TestingOptions set(String fieldName, Object value) {
    return (GoogleCloudRecaptchaenterpriseV1TestingOptions) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1TestingOptions clone() {
    return (GoogleCloudRecaptchaenterpriseV1TestingOptions) super.clone();
  }

}
