{
  "id": "vault:v1",
  "version": "v1",
  "protocol": "rest",
  "servicePath": "",
  "fullyEncodeReservedExpansion": true,
  "name": "vault",
  "description": "Archiving and eDiscovery for G Suite.",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "batchPath": "batch",
  "canonicalName": "Vault",
  "resources": {
    "operations": {
      "methods": {
        "delete": {
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "path": "v1/{+name}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "pattern": "^operations/.*$",
              "required": true,
              "description": "The name of the operation resource to be deleted."
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "response": {
            "$ref": "Empty"
          },
          "id": "vault.operations.delete",
          "parameterOrder": [
            "name"
          ]
        },
        "list": {
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The standard list page token."
            },
            "name": {
              "type": "string",
              "location": "path",
              "pattern": "^operations$",
              "required": true,
              "description": "The name of the operation's parent resource."
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "The standard list filter."
            },
            "pageSize": {
              "location": "query",
              "type": "integer",
              "description": "The standard list page size.",
              "format": "int32"
            }
          },
          "id": "vault.operations.list",
          "httpMethod": "GET",
          "path": "v1/{+name}"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "httpMethod": "GET",
          "id": "vault.operations.get",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "location": "path",
              "type": "string",
              "required": true,
              "pattern": "^operations/.*$"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}"
        },
        "cancel": {
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "parameterOrder": [
            "name"
          ],
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "flatPath": "v1/operations/{operationsId}:cancel",
          "id": "vault.operations.cancel",
          "path": "v1/{+name}:cancel",
          "parameters": {
            "name": {
              "type": "string",
              "description": "The name of the operation resource to be cancelled.",
              "pattern": "^operations/.*$",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST"
        }
      }
    },
    "matters": {
      "resources": {
        "savedQueries": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "parameters": {
                "pageToken": {
                  "description": "The pagination token as returned in the previous response. An empty token means start from the beginning.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of saved queries to return.",
                  "location": "query",
                  "format": "int32"
                },
                "matterId": {
                  "description": "The matter ID of the parent matter for which the saved queries are to be retrieved.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "matterId"
              ],
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "path": "v1/matters/{matterId}/savedQueries",
              "httpMethod": "GET",
              "description": "Lists saved queries within a matter. An empty page token in ListSavedQueriesResponse denotes no more saved queries to list.",
              "response": {
                "$ref": "ListSavedQueriesResponse"
              },
              "id": "vault.matters.savedQueries.list"
            },
            "create": {
              "request": {
                "$ref": "SavedQuery"
              },
              "description": "Creates a saved query.",
              "parameterOrder": [
                "matterId"
              ],
              "parameters": {
                "matterId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The matter ID of the parent matter for which the saved query is to be created."
                }
              },
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "response": {
                "$ref": "SavedQuery"
              },
              "httpMethod": "POST",
              "id": "vault.matters.savedQueries.create",
              "path": "v1/matters/{matterId}/savedQueries"
            },
            "get": {
              "id": "vault.matters.savedQueries.get",
              "parameters": {
                "matterId": {
                  "required": true,
                  "location": "path",
                  "description": "The matter ID of the parent matter for which the saved query is to be retrieved.",
                  "type": "string"
                },
                "savedQueryId": {
                  "description": "ID of the saved query to be retrieved.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "description": "Retrieves a saved query by Id.",
              "httpMethod": "GET",
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "response": {
                "$ref": "SavedQuery"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "location": "path",
                  "description": "The matter ID of the parent matter for which the saved query is to be deleted.",
                  "type": "string",
                  "required": true
                },
                "savedQueryId": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of the saved query to be deleted.",
                  "required": true
                }
              },
              "httpMethod": "DELETE",
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "description": "Deletes a saved query by Id.",
              "id": "vault.matters.savedQueries.delete",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ]
            }
          }
        },
        "holds": {
          "resources": {
            "accounts": {
              "methods": {
                "create": {
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "request": {
                    "$ref": "HeldAccount"
                  },
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "id": "vault.matters.holds.accounts.create",
                  "response": {
                    "$ref": "HeldAccount"
                  },
                  "parameters": {
                    "holdId": {
                      "required": true,
                      "type": "string",
                      "description": "The hold ID.",
                      "location": "path"
                    },
                    "matterId": {
                      "required": true,
                      "description": "The matter ID.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "description": "Adds a HeldAccount to a hold. Accounts can only be added to a hold that has no held_org_unit set. Attempting to add an account to an OU-based hold will result in an error.",
                  "httpMethod": "POST"
                },
                "list": {
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "httpMethod": "GET",
                  "id": "vault.matters.holds.accounts.list",
                  "description": "Lists HeldAccounts for a hold. This will only list individually specified held accounts. If the hold is on an OU, then use Admin SDK to enumerate its members.",
                  "response": {
                    "$ref": "ListHeldAccountsResponse"
                  },
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery",
                    "https://www.googleapis.com/auth/ediscovery.readonly"
                  ],
                  "parameters": {
                    "holdId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The hold ID."
                    },
                    "matterId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The matter ID."
                    }
                  },
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts"
                },
                "delete": {
                  "id": "vault.matters.holds.accounts.delete",
                  "parameters": {
                    "matterId": {
                      "description": "The matter ID.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "holdId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The hold ID."
                    },
                    "accountId": {
                      "required": true,
                      "location": "path",
                      "description": "The ID of the account to remove from the hold.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "parameterOrder": [
                    "matterId",
                    "holdId",
                    "accountId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "description": "Removes a HeldAccount from a hold. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "httpMethod": "DELETE"
                }
              }
            }
          },
          "methods": {
            "addHeldAccounts": {
              "response": {
                "$ref": "AddHeldAccountsResponse"
              },
              "request": {
                "$ref": "AddHeldAccountsRequest"
              },
              "httpMethod": "POST",
              "id": "vault.matters.holds.addHeldAccounts",
              "path": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "type": "string",
                  "description": "The matter ID.",
                  "required": true,
                  "location": "path"
                },
                "holdId": {
                  "description": "The hold ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "description": "Adds HeldAccounts to a hold. Returns a list of accounts that have been successfully added. Accounts can only be added to an existing account-based hold."
            },
            "get": {
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "httpMethod": "GET",
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "holdId": {
                  "location": "path",
                  "description": "The hold ID.",
                  "required": true,
                  "type": "string"
                },
                "view": {
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ],
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "type": "string",
                  "description": "Specifies which parts of the Hold to return.",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "description": "Gets a hold by ID.",
              "response": {
                "$ref": "Hold"
              },
              "id": "vault.matters.holds.get",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}"
            },
            "update": {
              "description": "Updates the OU and/or query parameters of a hold. You cannot add accounts to a hold that covers an OU, nor can you add OUs to a hold that covers individual accounts. Accounts listed in the hold will be ignored.",
              "parameters": {
                "holdId": {
                  "description": "The ID of the hold.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "matterId": {
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "PUT",
              "id": "vault.matters.holds.update",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "response": {
                "$ref": "Hold"
              },
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "request": {
                "$ref": "Hold"
              }
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "description": "The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as page_size = 100.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The pagination token as returned in the response. An empty token means start from the beginning.",
                  "location": "query"
                },
                "view": {
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "description": "Specifies which parts of the Hold to return.",
                  "location": "query",
                  "type": "string",
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ]
                }
              },
              "parameterOrder": [
                "matterId"
              ],
              "description": "Lists holds within a matter. An empty page token in ListHoldsResponse denotes no more holds to list.",
              "path": "v1/matters/{matterId}/holds",
              "id": "vault.matters.holds.list",
              "httpMethod": "GET",
              "flatPath": "v1/matters/{matterId}/holds",
              "response": {
                "$ref": "ListHoldsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "removeHeldAccounts": {
              "id": "vault.matters.holds.removeHeldAccounts",
              "path": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The matter ID."
                },
                "holdId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The hold ID."
                }
              },
              "description": "Removes HeldAccounts from a hold. Returns a list of statuses in the same order as the request. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
              "httpMethod": "POST",
              "request": {
                "$ref": "RemoveHeldAccountsRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "response": {
                "$ref": "RemoveHeldAccountsResponse"
              }
            },
            "create": {
              "parameterOrder": [
                "matterId"
              ],
              "request": {
                "$ref": "Hold"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v1/matters/{matterId}/holds",
              "id": "vault.matters.holds.create",
              "response": {
                "$ref": "Hold"
              },
              "description": "Creates a hold in the given matter.",
              "httpMethod": "POST",
              "path": "v1/matters/{matterId}/holds"
            },
            "delete": {
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "httpMethod": "DELETE",
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "description": "Removes a hold by ID. This will release any HeldAccounts on this Hold.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "description": "The matter ID.",
                  "required": true
                },
                "holdId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The hold ID."
                }
              },
              "id": "vault.matters.holds.delete",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}"
            }
          }
        },
        "exports": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "id": "vault.matters.exports.delete",
              "description": "Deletes an Export.",
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "parameters": {
                "matterId": {
                  "required": true,
                  "description": "The matter ID.",
                  "location": "path",
                  "type": "string"
                },
                "exportId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The export ID."
                }
              },
              "response": {
                "$ref": "Empty"
              }
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "matterId": {
                  "type": "string",
                  "required": true,
                  "description": "The matter ID.",
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The pagination token as returned in the response."
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of exports to return in the response.",
                  "location": "query"
                }
              },
              "flatPath": "v1/matters/{matterId}/exports",
              "id": "vault.matters.exports.list",
              "path": "v1/matters/{matterId}/exports",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "parameterOrder": [
                "matterId"
              ],
              "response": {
                "$ref": "ListExportsResponse"
              },
              "description": "Lists Exports."
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "description": "Gets an Export.",
              "response": {
                "$ref": "Export"
              },
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "exportId": {
                  "required": true,
                  "type": "string",
                  "description": "The export ID.",
                  "location": "path"
                }
              },
              "id": "vault.matters.exports.get"
            },
            "create": {
              "request": {
                "$ref": "Export"
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "Export"
              },
              "description": "Creates an Export.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The matter ID."
                }
              },
              "parameterOrder": [
                "matterId"
              ],
              "flatPath": "v1/matters/{matterId}/exports",
              "path": "v1/matters/{matterId}/exports",
              "id": "vault.matters.exports.create"
            }
          }
        }
      },
      "methods": {
        "list": {
          "parameters": {
            "state": {
              "location": "query",
              "enum": [
                "STATE_UNSPECIFIED",
                "OPEN",
                "CLOSED",
                "DELETED"
              ],
              "enumDescriptions": [
                "The matter has no specified state.",
                "This matter is open.",
                "This matter is closed.",
                "This matter is deleted."
              ],
              "description": "If set, list only matters with that specific state. The default is listing matters of all states.",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The pagination token as returned in the response."
            },
            "pageSize": {
              "description": "The number of matters to return in the response. Default and maximum are 100.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "view": {
              "type": "string",
              "description": "Specifies which parts of the matter to return in response.",
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ],
              "location": "query",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ]
            }
          },
          "response": {
            "$ref": "ListMattersResponse"
          },
          "id": "vault.matters.list",
          "description": "Lists matters the user has access to.",
          "path": "v1/matters",
          "httpMethod": "GET",
          "flatPath": "v1/matters",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "parameterOrder": []
        },
        "close": {
          "description": "Closes the specified matter. Returns matter with updated state.",
          "request": {
            "$ref": "CloseMatterRequest"
          },
          "parameters": {
            "matterId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The matter ID."
            }
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "CloseMatterResponse"
          },
          "flatPath": "v1/matters/{matterId}:close",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}:close",
          "id": "vault.matters.close"
        },
        "reopen": {
          "httpMethod": "POST",
          "response": {
            "$ref": "ReopenMatterResponse"
          },
          "parameterOrder": [
            "matterId"
          ],
          "flatPath": "v1/matters/{matterId}:reopen",
          "path": "v1/matters/{matterId}:reopen",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "description": "Reopens the specified matter. Returns matter with updated state.",
          "request": {
            "$ref": "ReopenMatterRequest"
          },
          "parameters": {
            "matterId": {
              "type": "string",
              "description": "The matter ID.",
              "required": true,
              "location": "path"
            }
          },
          "id": "vault.matters.reopen"
        },
        "removePermissions": {
          "parameterOrder": [
            "matterId"
          ],
          "request": {
            "$ref": "RemoveMatterPermissionsRequest"
          },
          "response": {
            "$ref": "Empty"
          },
          "description": "Removes an account as a matter collaborator.",
          "parameters": {
            "matterId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The matter ID."
            }
          },
          "id": "vault.matters.removePermissions",
          "httpMethod": "POST",
          "path": "v1/matters/{matterId}:removePermissions",
          "flatPath": "v1/matters/{matterId}:removePermissions",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "create": {
          "response": {
            "$ref": "Matter"
          },
          "flatPath": "v1/matters",
          "request": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "POST",
          "parameters": {},
          "path": "v1/matters",
          "description": "Creates a new matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.",
          "parameterOrder": [],
          "id": "vault.matters.create"
        },
        "count": {
          "response": {
            "$ref": "Operation"
          },
          "id": "vault.matters.count",
          "httpMethod": "POST",
          "flatPath": "v1/matters/{matterId}:count",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "description": "Counts the artifacts within the context of a matter and returns a detailed breakdown of metrics.",
          "parameters": {
            "matterId": {
              "required": true,
              "description": "The matter ID.",
              "location": "path",
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}:count",
          "parameterOrder": [
            "matterId"
          ],
          "request": {
            "$ref": "CountArtifactsRequest"
          }
        },
        "addPermissions": {
          "request": {
            "$ref": "AddMatterPermissionsRequest"
          },
          "description": "Adds an account as a matter collaborator.",
          "response": {
            "$ref": "MatterPermission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "flatPath": "v1/matters/{matterId}:addPermissions",
          "id": "vault.matters.addPermissions",
          "path": "v1/matters/{matterId}:addPermissions",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "type": "string",
              "description": "The matter ID.",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "POST"
        },
        "undelete": {
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "request": {
            "$ref": "UndeleteMatterRequest"
          },
          "flatPath": "v1/matters/{matterId}:undelete",
          "response": {
            "$ref": "Matter"
          },
          "path": "v1/matters/{matterId}:undelete",
          "httpMethod": "POST",
          "description": "Undeletes the specified matter. Returns matter with updated state.",
          "parameterOrder": [
            "matterId"
          ],
          "id": "vault.matters.undelete"
        },
        "get": {
          "httpMethod": "GET",
          "response": {
            "$ref": "Matter"
          },
          "parameters": {
            "view": {
              "location": "query",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "type": "string",
              "description": "Specifies which parts of the Matter to return in the response.",
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ]
            },
            "matterId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The matter ID."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "flatPath": "v1/matters/{matterId}",
          "description": "Gets the specified matter.",
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}",
          "id": "vault.matters.get"
        },
        "update": {
          "description": "Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.",
          "parameterOrder": [
            "matterId"
          ],
          "response": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "id": "vault.matters.update",
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "request": {
            "$ref": "Matter"
          },
          "path": "v1/matters/{matterId}",
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "PUT"
        },
        "delete": {
          "id": "vault.matters.delete",
          "description": "Deletes the specified matter. Returns matter with updated state.",
          "httpMethod": "DELETE",
          "flatPath": "v1/matters/{matterId}",
          "parameters": {
            "matterId": {
              "description": "The matter ID",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "Matter"
          },
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        }
      }
    }
  },
  "version_module": true,
  "rootUrl": "https://vault.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery": {
          "description": "Manage your eDiscovery data"
        },
        "https://www.googleapis.com/auth/ediscovery.readonly": {
          "description": "View your eDiscovery data"
        }
      }
    }
  },
  "ownerName": "Google",
  "parameters": {
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    }
  },
  "mtlsRootUrl": "https://vault.mtls.googleapis.com/",
  "revision": "20210125",
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "schemas": {
    "SharedDriveInfo": {
      "id": "SharedDriveInfo",
      "type": "object",
      "description": "Shared drives to search",
      "properties": {
        "sharedDriveIds": {
          "items": {
            "type": "string"
          },
          "description": "List of Shared drive IDs, as provided by Drive API.",
          "type": "array"
        }
      }
    },
    "AccountCount": {
      "type": "object",
      "description": "Count number for each account.",
      "properties": {
        "count": {
          "format": "int64",
          "description": "The number of artifacts found for this account.",
          "type": "string"
        },
        "account": {
          "$ref": "UserInfo",
          "description": "Account owner."
        }
      },
      "id": "AccountCount"
    },
    "CountArtifactsRequest": {
      "description": "Count artifacts request.",
      "type": "object",
      "properties": {
        "query": {
          "description": "The search query.",
          "$ref": "Query"
        },
        "view": {
          "description": "Specifies the granularity of the count result returned in response.",
          "type": "string",
          "enum": [
            "COUNT_RESULT_VIEW_UNSPECIFIED",
            "TOTAL_COUNT",
            "ALL"
          ],
          "enumDescriptions": [
            "Default. It works the same as TOTAL_COUNT.",
            "Response includes: total count, queried accounts count, matching accounts count, non-queryable accounts, queried account errors.",
            "Response includes additional breakdown of account count."
          ]
        }
      },
      "id": "CountArtifactsRequest"
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      }
    },
    "CountArtifactsMetadata": {
      "properties": {
        "startTime": {
          "description": "Creation time of count operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "matterId": {
          "description": "The matter ID of the associated matter.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "End time of count operation. Available when operation is done.",
          "type": "string"
        },
        "query": {
          "$ref": "Query",
          "description": "The search query from the request."
        }
      },
      "description": "Long running operation metadata for CountArtifacts.",
      "id": "CountArtifactsMetadata",
      "type": "object"
    },
    "MailCountResult": {
      "properties": {
        "accountCountErrors": {
          "items": {
            "$ref": "AccountCountError"
          },
          "description": "Error occurred when querying these accounts.",
          "type": "array"
        },
        "matchingAccountsCount": {
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "format": "int64",
          "type": "string"
        },
        "nonQueryableAccounts": {
          "items": {
            "type": "string"
          },
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "type": "array"
        },
        "accountCounts": {
          "type": "array",
          "items": {
            "$ref": "AccountCount"
          },
          "description": "Subtotal count per matching account that have more than zero messages."
        },
        "queriedAccountsCount": {
          "type": "string",
          "description": "Total number of accounts involved in this count operation.",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Mail specific count metrics.",
      "id": "MailCountResult"
    },
    "HeldHangoutsChatQuery": {
      "description": "Query options for hangouts chat holds.",
      "type": "object",
      "properties": {
        "includeRooms": {
          "type": "boolean",
          "description": "If true, include rooms the user has participated in."
        }
      },
      "id": "HeldHangoutsChatQuery"
    },
    "HeldMailQuery": {
      "description": "Query options for mail holds.",
      "id": "HeldMailQuery",
      "properties": {
        "terms": {
          "type": "string",
          "description": "The search terms for the hold."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "DriveExportOptions": {
      "description": "The options for Drive export.",
      "type": "object",
      "id": "DriveExportOptions",
      "properties": {
        "includeAccessInfo": {
          "type": "boolean",
          "description": "Set to true to include access level information for users with indirect access to files."
        }
      }
    },
    "ListMattersResponse": {
      "type": "object",
      "description": "Provides the list of matters.",
      "id": "ListMattersResponse",
      "properties": {
        "matters": {
          "items": {
            "$ref": "Matter"
          },
          "description": "List of matters.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "HangoutsChatExportOptions": {
      "type": "object",
      "id": "HangoutsChatExportOptions",
      "description": "The options for hangouts chat export.",
      "properties": {
        "exportFormat": {
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "description": "The export format for hangouts chat export.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string"
        }
      }
    },
    "CloudStorageSink": {
      "properties": {
        "files": {
          "type": "array",
          "description": "Output only. The exported files on cloud storage.",
          "items": {
            "$ref": "CloudStorageFile"
          }
        }
      },
      "id": "CloudStorageSink",
      "description": "Export sink for cloud storage files.",
      "type": "object"
    },
    "SavedQuery": {
      "type": "object",
      "properties": {
        "query": {
          "description": "The underlying Query object which contains all the information of the saved query.",
          "$ref": "Query"
        },
        "matterId": {
          "description": "Output only. The matter ID of the associated matter. The server does not look at this field during create and always uses matter id in the URL.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The server generated timestamp at which saved query was created.",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "Name of the saved query.",
          "type": "string"
        },
        "savedQueryId": {
          "description": "A unique identifier for the saved query.",
          "type": "string"
        }
      },
      "id": "SavedQuery",
      "description": "Definition of the saved query."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "properties": {},
      "type": "object"
    },
    "DriveOptions": {
      "id": "DriveOptions",
      "type": "object",
      "description": "Drive search advanced options",
      "properties": {
        "versionDate": {
          "type": "string",
          "format": "google-datetime",
          "description": "Search the versions of the Drive file as of the reference date. These timestamps are in GMT and rounded down to the given date."
        },
        "includeTeamDrives": {
          "description": "Set to true to include Team Drive.",
          "type": "boolean"
        },
        "includeSharedDrives": {
          "type": "boolean",
          "description": "Set to true to include shared drive."
        }
      }
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "properties": {},
      "type": "object"
    },
    "VoiceExportOptions": {
      "description": "The options for voice export.",
      "type": "object",
      "properties": {
        "exportFormat": {
          "description": "The export format for voice export.",
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ]
        }
      },
      "id": "VoiceExportOptions"
    },
    "VoiceOptions": {
      "properties": {
        "coveredData": {
          "items": {
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text message will be covered.",
              "Voicemail will be covered.",
              "Call logs will be covered."
            ],
            "type": "string",
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ]
          },
          "type": "array",
          "description": "Datatypes to search"
        }
      },
      "type": "object",
      "description": "Voice search options",
      "id": "VoiceOptions"
    },
    "MailOptions": {
      "description": "Mail search advanced options",
      "id": "MailOptions",
      "properties": {
        "excludeDrafts": {
          "type": "boolean",
          "description": "Set to true to exclude drafts."
        }
      },
      "type": "object"
    },
    "UserInfo": {
      "description": "User's information.",
      "type": "object",
      "id": "UserInfo",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address of the user."
        },
        "displayName": {
          "type": "string",
          "description": "The displayed name of the user."
        }
      }
    },
    "GroupsCountResult": {
      "description": "Groups specific count metrics.",
      "id": "GroupsCountResult",
      "properties": {
        "queriedAccountsCount": {
          "description": "Total number of accounts involved in this count operation.",
          "format": "int64",
          "type": "string"
        },
        "accountCounts": {
          "items": {
            "$ref": "AccountCount"
          },
          "description": "Subtotal count per matching account that have more than zero messages.",
          "type": "array"
        },
        "accountCountErrors": {
          "description": "Error occurred when querying these accounts.",
          "type": "array",
          "items": {
            "$ref": "AccountCountError"
          }
        },
        "matchingAccountsCount": {
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "format": "int64",
          "type": "string"
        },
        "nonQueryableAccounts": {
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Matter": {
      "description": "Represents a matter.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the matter.",
          "type": "string"
        },
        "description": {
          "description": "The description of the matter.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ],
          "type": "string",
          "description": "The state of the matter.",
          "enumDescriptions": [
            "The matter has no specified state.",
            "This matter is open.",
            "This matter is closed.",
            "This matter is deleted."
          ]
        },
        "matterPermissions": {
          "items": {
            "$ref": "MatterPermission"
          },
          "description": "List of users and access to the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
          "type": "array"
        },
        "matterId": {
          "description": "The matter ID which is generated by the server. Should be blank when creating a new matter.",
          "type": "string"
        }
      },
      "id": "Matter"
    },
    "ExportOptions": {
      "id": "ExportOptions",
      "properties": {
        "region": {
          "description": "The requested export location.",
          "enumDescriptions": [
            "The region is unspecified. Will be treated the same as ANY.",
            "Any region.",
            "US region.",
            "Europe region."
          ],
          "enum": [
            "EXPORT_REGION_UNSPECIFIED",
            "ANY",
            "US",
            "EUROPE"
          ],
          "type": "string"
        },
        "hangoutsChatOptions": {
          "$ref": "HangoutsChatExportOptions",
          "description": "Option available for hangouts chat export."
        },
        "mailOptions": {
          "description": "Option available for mail export.",
          "$ref": "MailExportOptions"
        },
        "driveOptions": {
          "$ref": "DriveExportOptions",
          "description": "Option available for Drive export."
        },
        "groupsOptions": {
          "description": "Option available for groups export.",
          "$ref": "GroupsExportOptions"
        },
        "voiceOptions": {
          "$ref": "VoiceExportOptions",
          "description": "Option available for voice export."
        }
      },
      "description": "Export advanced options",
      "type": "object"
    },
    "MailExportOptions": {
      "properties": {
        "showConfidentialModeContent": {
          "type": "boolean",
          "description": "Set to true to export confidential mode content."
        },
        "exportFormat": {
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "description": "The export file format.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ]
        }
      },
      "id": "MailExportOptions",
      "description": "The options for mail export.",
      "type": "object"
    },
    "CloudStorageFile": {
      "properties": {
        "bucketName": {
          "description": "The cloud storage bucket name of this export file. Can be used in cloud storage JSON/XML API, but not to list the bucket contents. Instead, you can get individual export files by object name.",
          "type": "string"
        },
        "objectName": {
          "type": "string",
          "description": "The cloud storage object name of this export file. Can be used in cloud storage JSON/XML API."
        },
        "md5Hash": {
          "type": "string",
          "description": "The md5 hash of the file."
        },
        "size": {
          "type": "string",
          "description": "The size of the export file.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "CloudStorageFile",
      "description": "An export file on cloud storage"
    },
    "AddHeldAccountsRequest": {
      "properties": {
        "accountIds": {
          "description": "Account IDs to identify which accounts to add. Only account_ids or only emails should be specified, but not both.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Emails to identify which accounts to add. Only emails or only account_ids should be specified, but not both."
        }
      },
      "id": "AddHeldAccountsRequest",
      "description": "Add a list of accounts to a hold.",
      "type": "object"
    },
    "Hold": {
      "id": "Hold",
      "description": "Represents a hold within Vault. A hold restricts purging of artifacts based on the combination of the query and accounts restrictions. A hold can be configured to either apply to an explicitly configured set of accounts, or can be applied to all members of an organizational unit.",
      "type": "object",
      "properties": {
        "corpus": {
          "description": "The corpus to be searched.",
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "type": "string",
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat.",
            "Google Voice."
          ]
        },
        "query": {
          "description": "The corpus-specific query. If set, the corpusQuery must match corpus type.",
          "$ref": "CorpusQuery"
        },
        "orgUnit": {
          "$ref": "HeldOrgUnit",
          "description": "If set, the hold applies to all members of the organizational unit and accounts must be empty. This property is mutable. For groups holds, set the accounts field."
        },
        "holdId": {
          "type": "string",
          "description": "The unique immutable ID of the hold. Assigned during creation."
        },
        "accounts": {
          "description": "If set, the hold applies to the enumerated accounts and org_unit must be empty.",
          "type": "array",
          "items": {
            "$ref": "HeldAccount"
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the hold."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last time this hold was modified."
        }
      }
    },
    "Export": {
      "id": "Export",
      "properties": {
        "name": {
          "type": "string",
          "description": "The export name."
        },
        "id": {
          "type": "string",
          "description": "Output only. The generated export ID."
        },
        "matterId": {
          "description": "Output only. The matter ID.",
          "type": "string"
        },
        "cloudStorageSink": {
          "$ref": "CloudStorageSink",
          "description": "Output only. Export sink for cloud storage files."
        },
        "requester": {
          "$ref": "UserInfo",
          "description": "Output only. The requester of the export."
        },
        "createTime": {
          "description": "Output only. The time when the export was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "status": {
          "enum": [
            "EXPORT_STATUS_UNSPECIFIED",
            "COMPLETED",
            "FAILED",
            "IN_PROGRESS"
          ],
          "type": "string",
          "description": "Output only. The export status.",
          "enumDescriptions": [
            "The status is unspecified.",
            "The export completed.",
            "The export failed.",
            "The export is still being executed."
          ]
        },
        "stats": {
          "description": "Output only. Export statistics.",
          "$ref": "ExportStats"
        },
        "exportOptions": {
          "description": "Advanced options of the export.",
          "$ref": "ExportOptions"
        },
        "query": {
          "$ref": "Query",
          "description": "The search query being exported."
        }
      },
      "type": "object",
      "description": "An export"
    },
    "ListHeldAccountsResponse": {
      "description": "Returns a list of held accounts for a hold.",
      "id": "ListHeldAccountsResponse",
      "properties": {
        "accounts": {
          "items": {
            "$ref": "HeldAccount"
          },
          "type": "array",
          "description": "The held accounts on a hold."
        }
      },
      "type": "object"
    },
    "CloseMatterRequest": {
      "id": "CloseMatterRequest",
      "description": "Close a matter by ID.",
      "type": "object",
      "properties": {}
    },
    "HeldVoiceQuery": {
      "id": "HeldVoiceQuery",
      "description": "Query options for Voice holds.",
      "type": "object",
      "properties": {
        "coveredData": {
          "type": "array",
          "description": "Data covered by this rule. Should be non-empty. Order does not matter and duplicates will be ignored.",
          "items": {
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ],
            "type": "string",
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text message will be covered.",
              "Voicemail will be covered.",
              "Call logs will be covered."
            ]
          }
        }
      }
    },
    "MatterPermission": {
      "id": "MatterPermission",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account ID, as provided by Admin SDK.",
          "type": "string"
        },
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ],
          "enumDescriptions": [
            "No role assigned.",
            "A collaborator to the matter.",
            "The owner of the matter."
          ],
          "description": "The user's role in this matter.",
          "type": "string"
        }
      },
      "description": "Currently each matter only has one owner, and all others are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist."
    },
    "HangoutsChatOptions": {
      "properties": {
        "includeRooms": {
          "type": "boolean",
          "description": "Set to true to include rooms."
        }
      },
      "id": "HangoutsChatOptions",
      "description": "Hangouts chat search advanced options",
      "type": "object"
    },
    "HangoutsChatInfo": {
      "type": "object",
      "description": "Accounts to search",
      "properties": {
        "roomId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of rooms to search."
        }
      },
      "id": "HangoutsChatInfo"
    },
    "HeldOrgUnit": {
      "properties": {
        "orgUnitId": {
          "description": "The org unit's immutable ID as provided by the Admin SDK.",
          "type": "string"
        },
        "holdTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "When the org unit was put on hold. This property is immutable."
        }
      },
      "id": "HeldOrgUnit",
      "description": "A organizational unit being held in a particular hold. This structure is immutable.",
      "type": "object"
    },
    "HeldDriveQuery": {
      "id": "HeldDriveQuery",
      "description": "Query options for Drive holds.",
      "type": "object",
      "properties": {
        "includeSharedDriveFiles": {
          "type": "boolean",
          "description": "If true, include files in shared drives in the hold."
        },
        "includeTeamDriveFiles": {
          "description": "If true, include files in Team Drives in the hold.",
          "type": "boolean"
        }
      }
    },
    "AddHeldAccountResult": {
      "type": "object",
      "id": "AddHeldAccountResult",
      "description": "A status detailing the status of each account creation, and the HeldAccount, if successful.",
      "properties": {
        "status": {
          "description": "This represents the success status. If failed, check message.",
          "$ref": "Status"
        },
        "account": {
          "$ref": "HeldAccount",
          "description": "If present, this account was successfully created."
        }
      }
    },
    "RemoveHeldAccountsResponse": {
      "description": "Response for batch delete held accounts.",
      "id": "RemoveHeldAccountsResponse",
      "properties": {
        "statuses": {
          "items": {
            "$ref": "Status"
          },
          "description": "A list of statuses for deleted accounts. Results have the same order as the request.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "AccountCountError": {
      "id": "AccountCountError",
      "properties": {
        "errorType": {
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "WILDCARD_TOO_BROAD",
            "TOO_MANY_TERMS",
            "LOCATION_UNAVAILABLE",
            "UNKNOWN",
            "DEADLINE_EXCEEDED"
          ],
          "description": "Account query error.",
          "type": "string",
          "enumDescriptions": [
            "Default.",
            "Permanent - prefix terms expanded to too many query terms.",
            "Permanent - query contains too many terms.",
            "Transient - data in transit between storage replicas, temporarily unavailable.",
            "Unrecognized error.",
            "Deadline exceeded when querying the account."
          ]
        },
        "account": {
          "$ref": "UserInfo",
          "description": "Account owner."
        }
      },
      "type": "object",
      "description": "An error that occurred when querying a specific account"
    },
    "ReopenMatterRequest": {
      "description": "Reopen a matter by ID.",
      "id": "ReopenMatterRequest",
      "type": "object",
      "properties": {}
    },
    "AddHeldAccountsResponse": {
      "description": "Response for batch create held accounts.",
      "id": "AddHeldAccountsResponse",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "description": "The list of responses, in the same order as the batch request.",
          "items": {
            "$ref": "AddHeldAccountResult"
          }
        }
      }
    },
    "OrgUnitInfo": {
      "id": "OrgUnitInfo",
      "properties": {
        "orgUnitId": {
          "type": "string",
          "description": "Org unit to search, as provided by the Admin SDK Directory API."
        }
      },
      "type": "object",
      "description": "Org Unit to search"
    },
    "ListHoldsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list.",
          "type": "string"
        },
        "holds": {
          "description": "The list of holds.",
          "items": {
            "$ref": "Hold"
          },
          "type": "array"
        }
      },
      "description": "The holds for a matter.",
      "id": "ListHoldsResponse",
      "type": "object"
    },
    "RemoveHeldAccountsRequest": {
      "description": "Remove a list of accounts from a hold.",
      "id": "RemoveHeldAccountsRequest",
      "type": "object",
      "properties": {
        "accountIds": {
          "items": {
            "type": "string"
          },
          "description": "Account IDs to identify HeldAccounts to remove.",
          "type": "array"
        }
      }
    },
    "CorpusQuery": {
      "type": "object",
      "properties": {
        "driveQuery": {
          "$ref": "HeldDriveQuery",
          "description": "Details pertaining to Drive holds. If set, corpus must be Drive."
        },
        "mailQuery": {
          "description": "Details pertaining to mail holds. If set, corpus must be mail.",
          "$ref": "HeldMailQuery"
        },
        "hangoutsChatQuery": {
          "$ref": "HeldHangoutsChatQuery",
          "description": "Details pertaining to Hangouts Chat holds. If set, corpus must be Hangouts Chat."
        },
        "voiceQuery": {
          "description": "Details pertaining to Voice holds. If set, corpus must be Voice.",
          "$ref": "HeldVoiceQuery"
        },
        "groupsQuery": {
          "$ref": "HeldGroupsQuery",
          "description": "Details pertaining to Groups holds. If set, corpus must be Groups."
        }
      },
      "id": "CorpusQuery",
      "description": "Corpus specific queries."
    },
    "RemoveMatterPermissionsRequest": {
      "description": "Remove an account as a matter collaborator.",
      "type": "object",
      "id": "RemoveMatterPermissionsRequest",
      "properties": {
        "accountId": {
          "description": "The account ID.",
          "type": "string"
        }
      }
    },
    "GroupsExportOptions": {
      "description": "The options for groups export.",
      "id": "GroupsExportOptions",
      "properties": {
        "exportFormat": {
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "description": "The export format for groups export.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AddMatterPermissionsRequest": {
      "description": "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, it will be overwritten.",
      "id": "AddMatterPermissionsRequest",
      "properties": {
        "matterPermission": {
          "$ref": "MatterPermission",
          "description": "The MatterPermission to add."
        },
        "sendEmails": {
          "type": "boolean",
          "description": "True to send notification email to the added account. False to not send notification email."
        },
        "ccMe": {
          "type": "boolean",
          "description": "Only relevant if send_emails is true. True to CC requestor in the email message. False to not CC requestor."
        }
      },
      "type": "object"
    },
    "AccountInfo": {
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of accounts to search."
        }
      },
      "type": "object",
      "description": "Accounts to search",
      "id": "AccountInfo"
    },
    "HeldGroupsQuery": {
      "description": "Query options for group holds.",
      "type": "object",
      "id": "HeldGroupsQuery",
      "properties": {
        "terms": {
          "description": "The search terms for the hold.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date."
        },
        "startTime": {
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Query": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string"
        },
        "accountInfo": {
          "$ref": "AccountInfo",
          "description": "When 'ACCOUNT' is chosen as search method, account_info needs to be specified."
        },
        "mailOptions": {
          "description": "For mail search, specify more options in this field.",
          "$ref": "MailOptions"
        },
        "hangoutsChatOptions": {
          "$ref": "HangoutsChatOptions",
          "description": "For hangouts chat search, specify more options in this field. (read-only)"
        },
        "hangoutsChatInfo": {
          "description": "When 'ROOM' is chosen as search method, hangout_chats_info needs to be specified. (read-only)",
          "$ref": "HangoutsChatInfo"
        },
        "driveOptions": {
          "$ref": "DriveOptions",
          "description": "For Drive search, specify more options in this field."
        },
        "voiceOptions": {
          "description": "For voice search, specify more options in this field.",
          "$ref": "VoiceOptions"
        },
        "method": {
          "type": "string",
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ],
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "description": "The search method to use. This field is similar to the search_method field but is introduced to support shared drives. It supports all search method types. In case the search_method is TEAM_DRIVE the response of this field will be SHARED_DRIVE only."
        },
        "searchMethod": {
          "description": "The search method to use.",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ],
          "type": "string"
        },
        "dataScope": {
          "enumDescriptions": [
            "No data scope specified.",
            "All available data.",
            "Data on hold.",
            "Data not processed."
          ],
          "type": "string",
          "description": "The data source to search from.",
          "enum": [
            "DATA_SCOPE_UNSPECIFIED",
            "ALL_DATA",
            "HELD_DATA",
            "UNPROCESSED_DATA"
          ]
        },
        "orgUnitInfo": {
          "$ref": "OrgUnitInfo",
          "description": "When 'ORG_UNIT' is chosen as as search method, org_unit_info needs to be specified."
        },
        "sharedDriveInfo": {
          "$ref": "SharedDriveInfo",
          "description": "When 'SHARED_DRIVE' is chosen as search method, shared_drive_info needs to be specified."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For more information, see Time Zone."
        },
        "teamDriveInfo": {
          "description": "When 'TEAM_DRIVE' is chosen as search method, team_drive_info needs to be specified.",
          "$ref": "TeamDriveInfo"
        },
        "terms": {
          "description": "The corpus-specific search operators used to generate search results.",
          "type": "string"
        },
        "corpus": {
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat.",
            "Google Voice."
          ],
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "description": "The corpus to search.",
          "type": "string"
        }
      },
      "id": "Query",
      "type": "object",
      "description": "A query definition relevant for search & export."
    },
    "ReopenMatterResponse": {
      "type": "object",
      "id": "ReopenMatterResponse",
      "description": "Response to a ReopenMatterRequest.",
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state OPEN."
        }
      }
    },
    "ListSavedQueriesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list."
        },
        "savedQueries": {
          "description": "List of output saved queries.",
          "type": "array",
          "items": {
            "$ref": "SavedQuery"
          }
        }
      },
      "id": "ListSavedQueriesResponse",
      "description": "Definition of the response for method ListSaveQuery."
    },
    "ListExportsResponse": {
      "type": "object",
      "description": "The holds for a matter.",
      "properties": {
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        },
        "exports": {
          "items": {
            "$ref": "Export"
          },
          "type": "array",
          "description": "The list of exports."
        }
      },
      "id": "ListExportsResponse"
    },
    "ExportStats": {
      "id": "ExportStats",
      "type": "object",
      "properties": {
        "sizeInBytes": {
          "description": "The size of export in bytes.",
          "type": "string",
          "format": "int64"
        },
        "totalArtifactCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of documents to be exported."
        },
        "exportedArtifactCount": {
          "type": "string",
          "description": "The number of documents already processed by the export.",
          "format": "int64"
        }
      },
      "description": "Stats of an export."
    },
    "CountArtifactsResponse": {
      "properties": {
        "totalCount": {
          "type": "string",
          "description": "Total count of artifacts. For mail and groups, artifacts refers to messages.",
          "format": "int64"
        },
        "groupsCountResult": {
          "$ref": "GroupsCountResult",
          "description": "Count metrics of Groups."
        },
        "mailCountResult": {
          "description": "Count metrics of Mail.",
          "$ref": "MailCountResult"
        }
      },
      "id": "CountArtifactsResponse",
      "type": "object",
      "description": "Definition of the response for method CountArtifacts."
    },
    "CloseMatterResponse": {
      "id": "CloseMatterResponse",
      "type": "object",
      "description": "Response to a CloseMatterRequest.",
      "properties": {
        "matter": {
          "description": "The updated matter, with state CLOSED.",
          "$ref": "Matter"
        }
      }
    },
    "UndeleteMatterRequest": {
      "type": "object",
      "properties": {},
      "description": "Undelete a matter by ID.",
      "id": "UndeleteMatterRequest"
    },
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "id": "Operation",
      "type": "object"
    },
    "HeldAccount": {
      "properties": {
        "holdTime": {
          "description": "Output only. When the account was put on hold.",
          "type": "string",
          "format": "google-datetime"
        },
        "email": {
          "type": "string",
          "description": "The primary email address of the account. If used as an input, this takes precedence over account ID."
        },
        "lastName": {
          "description": "Output only. The last name of the account holder.",
          "type": "string"
        },
        "firstName": {
          "type": "string",
          "description": "Output only. The first name of the account holder."
        },
        "accountId": {
          "type": "string",
          "description": "The account's ID as provided by the Admin SDK."
        }
      },
      "type": "object",
      "description": "An account being held in a particular hold. This structure is immutable. This can be either a single user or a google group, depending on the corpus.",
      "id": "HeldAccount"
    },
    "TeamDriveInfo": {
      "description": "Team Drives to search",
      "id": "TeamDriveInfo",
      "type": "object",
      "properties": {
        "teamDriveIds": {
          "description": "List of Team Drive IDs, as provided by Drive API.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    }
  },
  "basePath": "",
  "title": "G Suite Vault API",
  "documentationLink": "https://developers.google.com/vault",
  "baseUrl": "https://vault.googleapis.com/"
}
