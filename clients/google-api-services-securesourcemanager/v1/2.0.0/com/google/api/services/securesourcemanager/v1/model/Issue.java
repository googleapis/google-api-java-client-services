/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securesourcemanager.v1.model;

/**
 * Metadata of an Issue.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Secure Source Manager API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Issue extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Issue body. Provides a detailed description of the issue.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String body;

  /**
   * Output only. Close timestamp (if closed). Cleared when is re-opened.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String closeTime;

  /**
   * Output only. Creation timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. This checksum is computed by the server based on the value of other fields, and may
   * be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Identifier. Unique identifier for an issue. The issue id is generated by the server. Format:
   * `projects/{project}/locations/{location}/repositories/{repository}/issues/{issue_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. State of the issue.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Required. Issue title.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Output only. Last updated timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. Issue body. Provides a detailed description of the issue.
   * @return value or {@code null} for none
   */
  public java.lang.String getBody() {
    return body;
  }

  /**
   * Optional. Issue body. Provides a detailed description of the issue.
   * @param body body or {@code null} for none
   */
  public Issue setBody(java.lang.String body) {
    this.body = body;
    return this;
  }

  /**
   * Output only. Close timestamp (if closed). Cleared when is re-opened.
   * @return value or {@code null} for none
   */
  public String getCloseTime() {
    return closeTime;
  }

  /**
   * Output only. Close timestamp (if closed). Cleared when is re-opened.
   * @param closeTime closeTime or {@code null} for none
   */
  public Issue setCloseTime(String closeTime) {
    this.closeTime = closeTime;
    return this;
  }

  /**
   * Output only. Creation timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Creation timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public Issue setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. This checksum is computed by the server based on the value of other fields, and may
   * be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Optional. This checksum is computed by the server based on the value of other fields, and may
   * be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * @param etag etag or {@code null} for none
   */
  public Issue setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Identifier. Unique identifier for an issue. The issue id is generated by the server. Format:
   * `projects/{project}/locations/{location}/repositories/{repository}/issues/{issue_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. Unique identifier for an issue. The issue id is generated by the server. Format:
   * `projects/{project}/locations/{location}/repositories/{repository}/issues/{issue_id}`
   * @param name name or {@code null} for none
   */
  public Issue setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. State of the issue.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. State of the issue.
   * @param state state or {@code null} for none
   */
  public Issue setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Required. Issue title.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Required. Issue title.
   * @param title title or {@code null} for none
   */
  public Issue setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Output only. Last updated timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Last updated timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public Issue setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Issue set(String fieldName, Object value) {
    return (Issue) super.set(fieldName, value);
  }

  @Override
  public Issue clone() {
    return (Issue) super.clone();
  }

}
