/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebasehosting.v1beta1.model;

/**
 * The request sent to CloneVersion.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Hosting API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CloneVersionRequest extends com.google.api.client.json.GenericJson {

  /**
   * If provided, only paths that do not match any of the regexes in this list will be included in
   * the new version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PathFilter exclude;

  /**
   * If true, immediately finalize the version after cloning is complete.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean finalize;

  /**
   * If provided, only paths that match one or more regexes in this list will be included in the new
   * version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PathFilter include;

  /**
   * Required. The name of the version to be cloned, in the format:
   * `sites/{site}/versions/{version}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceVersion;

  /**
   * If provided, only paths that do not match any of the regexes in this list will be included in
   * the new version.
   * @return value or {@code null} for none
   */
  public PathFilter getExclude() {
    return exclude;
  }

  /**
   * If provided, only paths that do not match any of the regexes in this list will be included in
   * the new version.
   * @param exclude exclude or {@code null} for none
   */
  public CloneVersionRequest setExclude(PathFilter exclude) {
    this.exclude = exclude;
    return this;
  }

  /**
   * If true, immediately finalize the version after cloning is complete.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFinalize() {
    return finalize;
  }

  /**
   * If true, immediately finalize the version after cloning is complete.
   * @param finalize finalize or {@code null} for none
   */
  public CloneVersionRequest setFinalize(java.lang.Boolean finalize) {
    this.finalize = finalize;
    return this;
  }

  /**
   * If provided, only paths that match one or more regexes in this list will be included in the new
   * version.
   * @return value or {@code null} for none
   */
  public PathFilter getInclude() {
    return include;
  }

  /**
   * If provided, only paths that match one or more regexes in this list will be included in the new
   * version.
   * @param include include or {@code null} for none
   */
  public CloneVersionRequest setInclude(PathFilter include) {
    this.include = include;
    return this;
  }

  /**
   * Required. The name of the version to be cloned, in the format:
   * `sites/{site}/versions/{version}`
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceVersion() {
    return sourceVersion;
  }

  /**
   * Required. The name of the version to be cloned, in the format:
   * `sites/{site}/versions/{version}`
   * @param sourceVersion sourceVersion or {@code null} for none
   */
  public CloneVersionRequest setSourceVersion(java.lang.String sourceVersion) {
    this.sourceVersion = sourceVersion;
    return this;
  }

  @Override
  public CloneVersionRequest set(String fieldName, Object value) {
    return (CloneVersionRequest) super.set(fieldName, value);
  }

  @Override
  public CloneVersionRequest clone() {
    return (CloneVersionRequest) super.clone();
  }

}
