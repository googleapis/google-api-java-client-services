/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for AssistantApiSettingsAmbientSettings.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiSettingsAmbientSettings extends com.google.api.client.json.GenericJson {

  /**
   * Whether any user sets personal photos on this device. See go/ambient-setting-in-assistant-
   * design.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean anyUserHasSetPersonalPhotos;

  /**
   * Whether or not the user's current selection for their ambient photo frame includes the auto-
   * generated "Recent Highlights" album. This is used to determine which users to display the go
   * /opa-photos-memories-tile. See go/opa-photo-memories-imax-optin for more discussion on why this
   * bit was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean recentHighlightsEnabled;

  /**
   * Whether to enable the personal photo data in the ambient settings:
   * https://screenshot.googleplex.com/Wd4OFkQfOyF See go/opa-photos-ambient-location-date-
   * dd#heading=h.5x4iaouuiett for explanation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean showPersonalPhotoData;

  /**
   * Whether current user sets personal photos on this device. See go/ambient-setting-in-assistant-
   * design.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean showPersonalPhotos;

  /**
   * Whether any user sets personal photos on this device. See go/ambient-setting-in-assistant-
   * design.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAnyUserHasSetPersonalPhotos() {
    return anyUserHasSetPersonalPhotos;
  }

  /**
   * Whether any user sets personal photos on this device. See go/ambient-setting-in-assistant-
   * design.
   * @param anyUserHasSetPersonalPhotos anyUserHasSetPersonalPhotos or {@code null} for none
   */
  public AssistantApiSettingsAmbientSettings setAnyUserHasSetPersonalPhotos(java.lang.Boolean anyUserHasSetPersonalPhotos) {
    this.anyUserHasSetPersonalPhotos = anyUserHasSetPersonalPhotos;
    return this;
  }

  /**
   * Whether or not the user's current selection for their ambient photo frame includes the auto-
   * generated "Recent Highlights" album. This is used to determine which users to display the go
   * /opa-photos-memories-tile. See go/opa-photo-memories-imax-optin for more discussion on why this
   * bit was created.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRecentHighlightsEnabled() {
    return recentHighlightsEnabled;
  }

  /**
   * Whether or not the user's current selection for their ambient photo frame includes the auto-
   * generated "Recent Highlights" album. This is used to determine which users to display the go
   * /opa-photos-memories-tile. See go/opa-photo-memories-imax-optin for more discussion on why this
   * bit was created.
   * @param recentHighlightsEnabled recentHighlightsEnabled or {@code null} for none
   */
  public AssistantApiSettingsAmbientSettings setRecentHighlightsEnabled(java.lang.Boolean recentHighlightsEnabled) {
    this.recentHighlightsEnabled = recentHighlightsEnabled;
    return this;
  }

  /**
   * Whether to enable the personal photo data in the ambient settings:
   * https://screenshot.googleplex.com/Wd4OFkQfOyF See go/opa-photos-ambient-location-date-
   * dd#heading=h.5x4iaouuiett for explanation.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getShowPersonalPhotoData() {
    return showPersonalPhotoData;
  }

  /**
   * Whether to enable the personal photo data in the ambient settings:
   * https://screenshot.googleplex.com/Wd4OFkQfOyF See go/opa-photos-ambient-location-date-
   * dd#heading=h.5x4iaouuiett for explanation.
   * @param showPersonalPhotoData showPersonalPhotoData or {@code null} for none
   */
  public AssistantApiSettingsAmbientSettings setShowPersonalPhotoData(java.lang.Boolean showPersonalPhotoData) {
    this.showPersonalPhotoData = showPersonalPhotoData;
    return this;
  }

  /**
   * Whether current user sets personal photos on this device. See go/ambient-setting-in-assistant-
   * design.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getShowPersonalPhotos() {
    return showPersonalPhotos;
  }

  /**
   * Whether current user sets personal photos on this device. See go/ambient-setting-in-assistant-
   * design.
   * @param showPersonalPhotos showPersonalPhotos or {@code null} for none
   */
  public AssistantApiSettingsAmbientSettings setShowPersonalPhotos(java.lang.Boolean showPersonalPhotos) {
    this.showPersonalPhotos = showPersonalPhotos;
    return this;
  }

  @Override
  public AssistantApiSettingsAmbientSettings set(String fieldName, Object value) {
    return (AssistantApiSettingsAmbientSettings) super.set(fieldName, value);
  }

  @Override
  public AssistantApiSettingsAmbientSettings clone() {
    return (AssistantApiSettingsAmbientSettings) super.clone();
  }

}
