/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v1;

/**
 * Service definition for Connectors (v1).
 *
 * <p>
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ConnectorsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Connectors extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Connectors API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://connectors.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://connectors.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Connectors(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Connectors(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Connectors connectors = new Connectors(...);}
   *   {@code Connectors.Projects.List request = connectors.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Connectors connectors = new Connectors(...);}
     *   {@code Connectors.Locations.List request = connectors.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the connectors server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the connectors server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * GetRegionalSettings gets settings of a region. RegionalSettings is a singleton resource.
       *
       * Create a request for the method "locations.getRegionalSettings".
       *
       * This request holds the parameters needed by the connectors server.  After setting any optional
       * parameters, call the {@link GetRegionalSettings#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the Regional Settings.
       * @return the request
       */
      public GetRegionalSettings getRegionalSettings(java.lang.String name) throws java.io.IOException {
        GetRegionalSettings result = new GetRegionalSettings(name);
        initialize(result);
        return result;
      }

      public class GetRegionalSettings extends ConnectorsRequest<com.google.api.services.connectors.v1.model.RegionalSettings> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/regionalSettings$");

        /**
         * GetRegionalSettings gets settings of a region. RegionalSettings is a singleton resource.
         *
         * Create a request for the method "locations.getRegionalSettings".
         *
         * This request holds the parameters needed by the the connectors server.  After setting any
         * optional parameters, call the {@link GetRegionalSettings#execute()} method to invoke the remote
         * operation. <p> {@link GetRegionalSettings#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The resource name of the Regional Settings.
         * @since 1.13
         */
        protected GetRegionalSettings(java.lang.String name) {
          super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.RegionalSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/regionalSettings$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetRegionalSettings set$Xgafv(java.lang.String $Xgafv) {
          return (GetRegionalSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetRegionalSettings setAccessToken(java.lang.String accessToken) {
          return (GetRegionalSettings) super.setAccessToken(accessToken);
        }

        @Override
        public GetRegionalSettings setAlt(java.lang.String alt) {
          return (GetRegionalSettings) super.setAlt(alt);
        }

        @Override
        public GetRegionalSettings setCallback(java.lang.String callback) {
          return (GetRegionalSettings) super.setCallback(callback);
        }

        @Override
        public GetRegionalSettings setFields(java.lang.String fields) {
          return (GetRegionalSettings) super.setFields(fields);
        }

        @Override
        public GetRegionalSettings setKey(java.lang.String key) {
          return (GetRegionalSettings) super.setKey(key);
        }

        @Override
        public GetRegionalSettings setOauthToken(java.lang.String oauthToken) {
          return (GetRegionalSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public GetRegionalSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetRegionalSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetRegionalSettings setQuotaUser(java.lang.String quotaUser) {
          return (GetRegionalSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetRegionalSettings setUploadType(java.lang.String uploadType) {
          return (GetRegionalSettings) super.setUploadType(uploadType);
        }

        @Override
        public GetRegionalSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetRegionalSettings) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name of the Regional Settings. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the Regional Settings.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name of the Regional Settings. */
        public GetRegionalSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/regionalSettings$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetRegionalSettings set(String parameterName, Object value) {
          return (GetRegionalSettings) super.set(parameterName, value);
        }
      }
      /**
       * Gets the runtimeConfig of a location. RuntimeConfig is a singleton resource for each location.
       *
       * Create a request for the method "locations.getRuntimeConfig".
       *
       * This request holds the parameters needed by the connectors server.  After setting any optional
       * parameters, call the {@link GetRuntimeConfig#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the form: `projects/locations/runtimeConfig`
       * @return the request
       */
      public GetRuntimeConfig getRuntimeConfig(java.lang.String name) throws java.io.IOException {
        GetRuntimeConfig result = new GetRuntimeConfig(name);
        initialize(result);
        return result;
      }

      public class GetRuntimeConfig extends ConnectorsRequest<com.google.api.services.connectors.v1.model.RuntimeConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/runtimeConfig$");

        /**
         * Gets the runtimeConfig of a location. RuntimeConfig is a singleton resource for each location.
         *
         * Create a request for the method "locations.getRuntimeConfig".
         *
         * This request holds the parameters needed by the the connectors server.  After setting any
         * optional parameters, call the {@link GetRuntimeConfig#execute()} method to invoke the remote
         * operation. <p> {@link GetRuntimeConfig#initialize(com.google.api.client.googleapis.services.Abs
         * tractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. Resource name of the form: `projects/locations/runtimeConfig`
         * @since 1.13
         */
        protected GetRuntimeConfig(java.lang.String name) {
          super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.RuntimeConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/runtimeConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetRuntimeConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetRuntimeConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetRuntimeConfig setAccessToken(java.lang.String accessToken) {
          return (GetRuntimeConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetRuntimeConfig setAlt(java.lang.String alt) {
          return (GetRuntimeConfig) super.setAlt(alt);
        }

        @Override
        public GetRuntimeConfig setCallback(java.lang.String callback) {
          return (GetRuntimeConfig) super.setCallback(callback);
        }

        @Override
        public GetRuntimeConfig setFields(java.lang.String fields) {
          return (GetRuntimeConfig) super.setFields(fields);
        }

        @Override
        public GetRuntimeConfig setKey(java.lang.String key) {
          return (GetRuntimeConfig) super.setKey(key);
        }

        @Override
        public GetRuntimeConfig setOauthToken(java.lang.String oauthToken) {
          return (GetRuntimeConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetRuntimeConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetRuntimeConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetRuntimeConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetRuntimeConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetRuntimeConfig setUploadType(java.lang.String uploadType) {
          return (GetRuntimeConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetRuntimeConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetRuntimeConfig) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Resource name of the form: `projects/locations/runtimeConfig` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the form: `projects/locations/runtimeConfig`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Resource name of the form: `projects/locations/runtimeConfig` */
        public GetRuntimeConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/runtimeConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetRuntimeConfig set(String parameterName, Object value) {
          return (GetRuntimeConfig) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the connectors server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the connectors server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update the settings of a region.
       *
       * Create a request for the method "locations.updateRegionalSettings".
       *
       * This request holds the parameters needed by the connectors server.  After setting any optional
       * parameters, call the {@link UpdateRegionalSettings#execute()} method to invoke the remote
       * operation.
       *
       * @param name Output only. Resource name of the Connection. Format:
       *        projects/{project}/locations/{location}/regionalSettings
       * @param content the {@link com.google.api.services.connectors.v1.model.RegionalSettings}
       * @return the request
       */
      public UpdateRegionalSettings updateRegionalSettings(java.lang.String name, com.google.api.services.connectors.v1.model.RegionalSettings content) throws java.io.IOException {
        UpdateRegionalSettings result = new UpdateRegionalSettings(name, content);
        initialize(result);
        return result;
      }

      public class UpdateRegionalSettings extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/regionalSettings$");

        /**
         * Update the settings of a region.
         *
         * Create a request for the method "locations.updateRegionalSettings".
         *
         * This request holds the parameters needed by the the connectors server.  After setting any
         * optional parameters, call the {@link UpdateRegionalSettings#execute()} method to invoke the
         * remote operation. <p> {@link UpdateRegionalSettings#initialize(com.google.api.client.googleapis
         * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of the Connection. Format:
       *        projects/{project}/locations/{location}/regionalSettings
         * @param content the {@link com.google.api.services.connectors.v1.model.RegionalSettings}
         * @since 1.13
         */
        protected UpdateRegionalSettings(java.lang.String name, com.google.api.services.connectors.v1.model.RegionalSettings content) {
          super(Connectors.this, "PATCH", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/regionalSettings$");
          }
        }

        @Override
        public UpdateRegionalSettings set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateRegionalSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateRegionalSettings setAccessToken(java.lang.String accessToken) {
          return (UpdateRegionalSettings) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateRegionalSettings setAlt(java.lang.String alt) {
          return (UpdateRegionalSettings) super.setAlt(alt);
        }

        @Override
        public UpdateRegionalSettings setCallback(java.lang.String callback) {
          return (UpdateRegionalSettings) super.setCallback(callback);
        }

        @Override
        public UpdateRegionalSettings setFields(java.lang.String fields) {
          return (UpdateRegionalSettings) super.setFields(fields);
        }

        @Override
        public UpdateRegionalSettings setKey(java.lang.String key) {
          return (UpdateRegionalSettings) super.setKey(key);
        }

        @Override
        public UpdateRegionalSettings setOauthToken(java.lang.String oauthToken) {
          return (UpdateRegionalSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateRegionalSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateRegionalSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateRegionalSettings setQuotaUser(java.lang.String quotaUser) {
          return (UpdateRegionalSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateRegionalSettings setUploadType(java.lang.String uploadType) {
          return (UpdateRegionalSettings) super.setUploadType(uploadType);
        }

        @Override
        public UpdateRegionalSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateRegionalSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of the Connection. Format:
         * projects/{project}/locations/{location}/regionalSettings
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of the Connection. Format:
       projects/{project}/locations/{location}/regionalSettings
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of the Connection. Format:
         * projects/{project}/locations/{location}/regionalSettings
         */
        public UpdateRegionalSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/regionalSettings$");
          }
          this.name = name;
          return this;
        }

        /** Required. The list of fields to update. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to update.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. The list of fields to update. */
        public UpdateRegionalSettings setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateRegionalSettings set(String parameterName, Object value) {
          return (UpdateRegionalSettings) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Connections collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Connectors connectors = new Connectors(...);}
       *   {@code Connectors.Connections.List request = connectors.connections().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Connections connections() {
        return new Connections();
      }

      /**
       * The "connections" collection of methods.
       */
      public class Connections {

        /**
         * Creates a new Connection in a given project and location.
         *
         * Create a request for the method "connections.create".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent resource of the Connection, of the form: `projects/locations`
         * @param content the {@link com.google.api.services.connectors.v1.model.Connection}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.connectors.v1.model.Connection content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/connections";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new Connection in a given project and location.
           *
           * Create a request for the method "connections.create".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent resource of the Connection, of the form: `projects/locations`
           * @param content the {@link com.google.api.services.connectors.v1.model.Connection}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.connectors.v1.model.Connection content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent resource of the Connection, of the form: `projects/locations` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent resource of the Connection, of the form: `projects/locations`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent resource of the Connection, of the form: `projects/locations` */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. Identifier to assign to the Connection. Must be unique within scope of the
           * parent resource.
           */
          @com.google.api.client.util.Key
          private java.lang.String connectionId;

          /** Required. Identifier to assign to the Connection. Must be unique within scope of the parent
         resource.
           */
          public java.lang.String getConnectionId() {
            return connectionId;
          }

          /**
           * Required. Identifier to assign to the Connection. Must be unique within scope of the
           * parent resource.
           */
          public Create setConnectionId(java.lang.String connectionId) {
            this.connectionId = connectionId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single Connection.
         *
         * Create a request for the method "connections.delete".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the form: `projects/locations/connections`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

          /**
           * Deletes a single Connection.
           *
           * Create a request for the method "connections.delete".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the form: `projects/locations/connections`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Connectors.this, "DELETE", REST_PATH, null, com.google.api.services.connectors.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the form: `projects/locations/connections` */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the form: `projects/locations/connections`
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Resource name of the form: `projects/locations/connections` */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single Connection.
         *
         * Create a request for the method "connections.get".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the form: `projects/locations/connections`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Connection> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

          /**
           * Gets details of a single Connection.
           *
           * Create a request for the method "connections.get".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the form: `projects/locations/connections`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Connection.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the form: `projects/locations/connections` */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the form: `projects/locations/connections`
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Resource name of the form: `projects/locations/connections` */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Specifies which fields of the Connection are returned in the response. Defaults to
           * `BASIC` view.
           */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.
           */
          public java.lang.String getView() {
            return view;
          }

          /**
           * Specifies which fields of the Connection are returned in the response. Defaults to
           * `BASIC` view.
           */
          public Get setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets schema metadata of a connection. SchemaMetadata is a singleton resource for each connection.
         *
         * Create a request for the method "connections.getConnectionSchemaMetadata".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link GetConnectionSchemaMetadata#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Connection name Format:
         *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
         * @return the request
         */
        public GetConnectionSchemaMetadata getConnectionSchemaMetadata(java.lang.String name) throws java.io.IOException {
          GetConnectionSchemaMetadata result = new GetConnectionSchemaMetadata(name);
          initialize(result);
          return result;
        }

        public class GetConnectionSchemaMetadata extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ConnectionSchemaMetadata> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");

          /**
           * Gets schema metadata of a connection. SchemaMetadata is a singleton resource for each
           * connection.
           *
           * Create a request for the method "connections.getConnectionSchemaMetadata".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link GetConnectionSchemaMetadata#execute()} method to invoke
           * the remote operation. <p> {@link GetConnectionSchemaMetadata#initialize(com.google.api.client.g
           * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param name Required. Connection name Format:
         *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
           * @since 1.13
           */
          protected GetConnectionSchemaMetadata(java.lang.String name) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ConnectionSchemaMetadata.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetConnectionSchemaMetadata set$Xgafv(java.lang.String $Xgafv) {
            return (GetConnectionSchemaMetadata) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetConnectionSchemaMetadata setAccessToken(java.lang.String accessToken) {
            return (GetConnectionSchemaMetadata) super.setAccessToken(accessToken);
          }

          @Override
          public GetConnectionSchemaMetadata setAlt(java.lang.String alt) {
            return (GetConnectionSchemaMetadata) super.setAlt(alt);
          }

          @Override
          public GetConnectionSchemaMetadata setCallback(java.lang.String callback) {
            return (GetConnectionSchemaMetadata) super.setCallback(callback);
          }

          @Override
          public GetConnectionSchemaMetadata setFields(java.lang.String fields) {
            return (GetConnectionSchemaMetadata) super.setFields(fields);
          }

          @Override
          public GetConnectionSchemaMetadata setKey(java.lang.String key) {
            return (GetConnectionSchemaMetadata) super.setKey(key);
          }

          @Override
          public GetConnectionSchemaMetadata setOauthToken(java.lang.String oauthToken) {
            return (GetConnectionSchemaMetadata) super.setOauthToken(oauthToken);
          }

          @Override
          public GetConnectionSchemaMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetConnectionSchemaMetadata) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetConnectionSchemaMetadata setQuotaUser(java.lang.String quotaUser) {
            return (GetConnectionSchemaMetadata) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetConnectionSchemaMetadata setUploadType(java.lang.String uploadType) {
            return (GetConnectionSchemaMetadata) super.setUploadType(uploadType);
          }

          @Override
          public GetConnectionSchemaMetadata setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetConnectionSchemaMetadata) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Connection name Format: projects/{project}/locations/{location}/connections/{
           * connection}/connectionSchemaMetadata
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Connection name Format:
         projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Connection name Format: projects/{project}/locations/{location}/connections/{
           * connection}/connectionSchemaMetadata
           */
          public GetConnectionSchemaMetadata setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetConnectionSchemaMetadata set(String parameterName, Object value) {
            return (GetConnectionSchemaMetadata) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "connections.getIamPolicy".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "connections.getIamPolicy".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists Connections in a given project and location.
         *
         * Create a request for the method "connections.list".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent resource of the Connection, of the form: `projects/locations`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListConnectionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/connections";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Connections in a given project and location.
           *
           * Create a request for the method "connections.list".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent resource of the Connection, of the form: `projects/locations`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListConnectionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent resource of the Connection, of the form: `projects/locations` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent resource of the Connection, of the form: `projects/locations`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent resource of the Connection, of the form: `projects/locations` */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order by parameters. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order by parameters.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order by parameters. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** Page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * Specifies which fields of the Connection are returned in the response. Defaults to
           * `BASIC` view.
           */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.
           */
          public java.lang.String getView() {
            return view;
          }

          /**
           * Specifies which fields of the Connection are returned in the response. Defaults to
           * `BASIC` view.
           */
          public List setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * ListenEvent listens to the event.
         *
         * Create a request for the method "connections.listenEvent".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link ListenEvent#execute()} method to invoke the remote operation.
         *
         * @param resourcePath Required. Resource path for request.
         * @param content the {@link com.google.api.services.connectors.v1.model.ListenEventRequest}
         * @return the request
         */
        public ListenEvent listenEvent(java.lang.String resourcePath, com.google.api.services.connectors.v1.model.ListenEventRequest content) throws java.io.IOException {
          ListenEvent result = new ListenEvent(resourcePath, content);
          initialize(result);
          return result;
        }

        public class ListenEvent extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListenEventResponse> {

          private static final String REST_PATH = "v1/{+resourcePath}:listenEvent";

          private final java.util.regex.Pattern RESOURCE_PATH_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

          /**
           * ListenEvent listens to the event.
           *
           * Create a request for the method "connections.listenEvent".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link ListenEvent#execute()} method to invoke the remote
           * operation. <p> {@link
           * ListenEvent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resourcePath Required. Resource path for request.
           * @param content the {@link com.google.api.services.connectors.v1.model.ListenEventRequest}
           * @since 1.13
           */
          protected ListenEvent(java.lang.String resourcePath, com.google.api.services.connectors.v1.model.ListenEventRequest content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.ListenEventResponse.class);
            this.resourcePath = com.google.api.client.util.Preconditions.checkNotNull(resourcePath, "Required parameter resourcePath must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATH_PATTERN.matcher(resourcePath).matches(),
                  "Parameter resourcePath must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
          }

          @Override
          public ListenEvent set$Xgafv(java.lang.String $Xgafv) {
            return (ListenEvent) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListenEvent setAccessToken(java.lang.String accessToken) {
            return (ListenEvent) super.setAccessToken(accessToken);
          }

          @Override
          public ListenEvent setAlt(java.lang.String alt) {
            return (ListenEvent) super.setAlt(alt);
          }

          @Override
          public ListenEvent setCallback(java.lang.String callback) {
            return (ListenEvent) super.setCallback(callback);
          }

          @Override
          public ListenEvent setFields(java.lang.String fields) {
            return (ListenEvent) super.setFields(fields);
          }

          @Override
          public ListenEvent setKey(java.lang.String key) {
            return (ListenEvent) super.setKey(key);
          }

          @Override
          public ListenEvent setOauthToken(java.lang.String oauthToken) {
            return (ListenEvent) super.setOauthToken(oauthToken);
          }

          @Override
          public ListenEvent setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListenEvent) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListenEvent setQuotaUser(java.lang.String quotaUser) {
            return (ListenEvent) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListenEvent setUploadType(java.lang.String uploadType) {
            return (ListenEvent) super.setUploadType(uploadType);
          }

          @Override
          public ListenEvent setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListenEvent) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource path for request. */
          @com.google.api.client.util.Key
          private java.lang.String resourcePath;

          /** Required. Resource path for request.
           */
          public java.lang.String getResourcePath() {
            return resourcePath;
          }

          /** Required. Resource path for request. */
          public ListenEvent setResourcePath(java.lang.String resourcePath) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATH_PATTERN.matcher(resourcePath).matches(),
                  "Parameter resourcePath must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
            this.resourcePath = resourcePath;
            return this;
          }

          @Override
          public ListenEvent set(String parameterName, Object value) {
            return (ListenEvent) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single Connection.
         *
         * Create a request for the method "connections.patch".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Resource name of the Connection. Format:
         *        projects/{project}/locations/{location}/connections/{connection}
         * @param content the {@link com.google.api.services.connectors.v1.model.Connection}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.connectors.v1.model.Connection content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

          /**
           * Updates the parameters of a single Connection.
           *
           * Create a request for the method "connections.patch".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Resource name of the Connection. Format:
         *        projects/{project}/locations/{location}/connections/{connection}
           * @param content the {@link com.google.api.services.connectors.v1.model.Connection}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.connectors.v1.model.Connection content) {
            super(Connectors.this, "PATCH", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Resource name of the Connection. Format:
           * projects/{project}/locations/{location}/connections/{connection}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Resource name of the Connection. Format:
         projects/{project}/locations/{location}/connections/{connection}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Resource name of the Connection. Format:
           * projects/{project}/locations/{location}/connections/{connection}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. You can modify only the fields listed below. To lock/unlock a connection: *
           * `lock_config` To suspend/resume a connection: * `suspended` To update the connection
           * details: * `description` * `labels` * `connector_version` * `config_variables` *
           * `auth_config` * `destination_configs` * `node_config` * `log_config` * `ssl_config` *
           * `eventing_enablement_type` * `eventing_config` * `auth_override_enabled`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. You can modify only the fields listed below. To lock/unlock a connection: * `lock_config`
         To suspend/resume a connection: * `suspended` To update the connection details: * `description` *
         `labels` * `connector_version` * `config_variables` * `auth_config` * `destination_configs` *
         `node_config` * `log_config` * `ssl_config` * `eventing_enablement_type` * `eventing_config` *
         `auth_override_enabled`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. You can modify only the fields listed below. To lock/unlock a connection: *
           * `lock_config` To suspend/resume a connection: * `suspended` To update the connection
           * details: * `description` * `labels` * `connector_version` * `config_variables` *
           * `auth_config` * `destination_configs` * `node_config` * `log_config` * `ssl_config` *
           * `eventing_enablement_type` * `eventing_config` * `auth_override_enabled`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * RepaiEventing tries to repair eventing related event subscriptions.
         *
         * Create a request for the method "connections.repairEventing".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link RepairEventing#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the form: `projects/locations/connections`
         * @param content the {@link com.google.api.services.connectors.v1.model.RepairEventingRequest}
         * @return the request
         */
        public RepairEventing repairEventing(java.lang.String name, com.google.api.services.connectors.v1.model.RepairEventingRequest content) throws java.io.IOException {
          RepairEventing result = new RepairEventing(name, content);
          initialize(result);
          return result;
        }

        public class RepairEventing extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:repairEventing";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

          /**
           * RepaiEventing tries to repair eventing related event subscriptions.
           *
           * Create a request for the method "connections.repairEventing".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link RepairEventing#execute()} method to invoke the remote
           * operation. <p> {@link RepairEventing#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Required. Resource name of the form: `projects/locations/connections`
           * @param content the {@link com.google.api.services.connectors.v1.model.RepairEventingRequest}
           * @since 1.13
           */
          protected RepairEventing(java.lang.String name, com.google.api.services.connectors.v1.model.RepairEventingRequest content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
          }

          @Override
          public RepairEventing set$Xgafv(java.lang.String $Xgafv) {
            return (RepairEventing) super.set$Xgafv($Xgafv);
          }

          @Override
          public RepairEventing setAccessToken(java.lang.String accessToken) {
            return (RepairEventing) super.setAccessToken(accessToken);
          }

          @Override
          public RepairEventing setAlt(java.lang.String alt) {
            return (RepairEventing) super.setAlt(alt);
          }

          @Override
          public RepairEventing setCallback(java.lang.String callback) {
            return (RepairEventing) super.setCallback(callback);
          }

          @Override
          public RepairEventing setFields(java.lang.String fields) {
            return (RepairEventing) super.setFields(fields);
          }

          @Override
          public RepairEventing setKey(java.lang.String key) {
            return (RepairEventing) super.setKey(key);
          }

          @Override
          public RepairEventing setOauthToken(java.lang.String oauthToken) {
            return (RepairEventing) super.setOauthToken(oauthToken);
          }

          @Override
          public RepairEventing setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (RepairEventing) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public RepairEventing setQuotaUser(java.lang.String quotaUser) {
            return (RepairEventing) super.setQuotaUser(quotaUser);
          }

          @Override
          public RepairEventing setUploadType(java.lang.String uploadType) {
            return (RepairEventing) super.setUploadType(uploadType);
          }

          @Override
          public RepairEventing setUploadProtocol(java.lang.String uploadProtocol) {
            return (RepairEventing) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the form: `projects/locations/connections` */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the form: `projects/locations/connections`
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Resource name of the form: `projects/locations/connections` */
          public RepairEventing setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public RepairEventing set(String parameterName, Object value) {
            return (RepairEventing) super.set(parameterName, value);
          }
        }
        /**
         * Returns Top matching Connections for a given query.
         *
         * Create a request for the method "connections.search".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Search#execute()} method to invoke the remote operation.
         *
         * @param name Required. Parent resource of the Connection, of the form: `projects/locations/connections`
         * @return the request
         */
        public Search search(java.lang.String name) throws java.io.IOException {
          Search result = new Search(name);
          initialize(result);
          return result;
        }

        public class Search extends ConnectorsRequest<com.google.api.services.connectors.v1.model.SearchConnectionsResponse> {

          private static final String REST_PATH = "v1/{+name}:search";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections$");

          /**
           * Returns Top matching Connections for a given query.
           *
           * Create a request for the method "connections.search".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
           * <p> {@link
           * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Parent resource of the Connection, of the form: `projects/locations/connections`
           * @since 1.13
           */
          protected Search(java.lang.String name) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.SearchConnectionsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Search set$Xgafv(java.lang.String $Xgafv) {
            return (Search) super.set$Xgafv($Xgafv);
          }

          @Override
          public Search setAccessToken(java.lang.String accessToken) {
            return (Search) super.setAccessToken(accessToken);
          }

          @Override
          public Search setAlt(java.lang.String alt) {
            return (Search) super.setAlt(alt);
          }

          @Override
          public Search setCallback(java.lang.String callback) {
            return (Search) super.setCallback(callback);
          }

          @Override
          public Search setFields(java.lang.String fields) {
            return (Search) super.setFields(fields);
          }

          @Override
          public Search setKey(java.lang.String key) {
            return (Search) super.setKey(key);
          }

          @Override
          public Search setOauthToken(java.lang.String oauthToken) {
            return (Search) super.setOauthToken(oauthToken);
          }

          @Override
          public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Search) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Search setQuotaUser(java.lang.String quotaUser) {
            return (Search) super.setQuotaUser(quotaUser);
          }

          @Override
          public Search setUploadType(java.lang.String uploadType) {
            return (Search) super.setUploadType(uploadType);
          }

          @Override
          public Search setUploadProtocol(java.lang.String uploadProtocol) {
            return (Search) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Parent resource of the Connection, of the form:
           * `projects/locations/connections`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Parent resource of the Connection, of the form: `projects/locations/connections`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Parent resource of the Connection, of the form:
           * `projects/locations/connections`
           */
          public Search setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections$");
            }
            this.name = name;
            return this;
          }

          /** Optional. The number of top matching connectors to return */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The number of top matching connectors to return
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The number of top matching connectors to return */
          public Search setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. page_token */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. page_token
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. page_token */
          public Search setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Required. The query against which the search needs to be done. */
          @com.google.api.client.util.Key
          private java.lang.String query;

          /** Required. The query against which the search needs to be done.
           */
          public java.lang.String getQuery() {
            return query;
          }

          /** Required. The query against which the search needs to be done. */
          public Search setQuery(java.lang.String query) {
            this.query = query;
            return this;
          }

          @Override
          public Search set(String parameterName, Object value) {
            return (Search) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "connections.setIamPolicy".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.connectors.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.connectors.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "connections.setIamPolicy".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.connectors.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.connectors.v1.model.SetIamPolicyRequest content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "connections.testIamPermissions".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.connectors.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.connectors.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends ConnectorsRequest<com.google.api.services.connectors.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "connections.testIamPermissions".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.connectors.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.connectors.v1.model.TestIamPermissionsRequest content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the ConnectionSchemaMetadata collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Connectors connectors = new Connectors(...);}
         *   {@code Connectors.ConnectionSchemaMetadata.List request = connectors.connectionSchemaMetadata().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public ConnectionSchemaMetadata connectionSchemaMetadata() {
          return new ConnectionSchemaMetadata();
        }

        /**
         * The "connectionSchemaMetadata" collection of methods.
         */
        public class ConnectionSchemaMetadata {

          /**
           * Get action.
           *
           * Create a request for the method "connectionSchemaMetadata.getAction".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link GetAction#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name format:
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
           * @return the request
           */
          public GetAction getAction(java.lang.String name) throws java.io.IOException {
            GetAction result = new GetAction(name);
            initialize(result);
            return result;
          }

          public class GetAction extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:getAction";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");

            /**
             * Get action.
             *
             * Create a request for the method "connectionSchemaMetadata.getAction".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link GetAction#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetAction#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name format:
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             * @since 1.13
             */
            protected GetAction(java.lang.String name) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetAction set$Xgafv(java.lang.String $Xgafv) {
              return (GetAction) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetAction setAccessToken(java.lang.String accessToken) {
              return (GetAction) super.setAccessToken(accessToken);
            }

            @Override
            public GetAction setAlt(java.lang.String alt) {
              return (GetAction) super.setAlt(alt);
            }

            @Override
            public GetAction setCallback(java.lang.String callback) {
              return (GetAction) super.setCallback(callback);
            }

            @Override
            public GetAction setFields(java.lang.String fields) {
              return (GetAction) super.setFields(fields);
            }

            @Override
            public GetAction setKey(java.lang.String key) {
              return (GetAction) super.setKey(key);
            }

            @Override
            public GetAction setOauthToken(java.lang.String oauthToken) {
              return (GetAction) super.setOauthToken(oauthToken);
            }

            @Override
            public GetAction setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetAction) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetAction setQuotaUser(java.lang.String quotaUser) {
              return (GetAction) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetAction setUploadType(java.lang.String uploadType) {
              return (GetAction) super.setUploadType(uploadType);
            }

            @Override
            public GetAction setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetAction) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name format: projects/{project}/locations/{location}/connections/{
             * connection}/connectionSchemaMetadata
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name format:
           projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name format: projects/{project}/locations/{location}/connections/{
             * connection}/connectionSchemaMetadata
             */
            public GetAction setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
              this.name = name;
              return this;
            }

            /** Required. Id of the action. */
            @com.google.api.client.util.Key
            private java.lang.String actionId;

            /** Required. Id of the action.
             */
            public java.lang.String getActionId() {
              return actionId;
            }

            /** Required. Id of the action. */
            public GetAction setActionId(java.lang.String actionId) {
              this.actionId = actionId;
              return this;
            }

            @Override
            public GetAction set(String parameterName, Object value) {
              return (GetAction) super.set(parameterName, value);
            }
          }
          /**
           * Get entity type.
           *
           * Create a request for the method "connectionSchemaMetadata.getEntityType".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link GetEntityType#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name format:
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
           * @return the request
           */
          public GetEntityType getEntityType(java.lang.String name) throws java.io.IOException {
            GetEntityType result = new GetEntityType(name);
            initialize(result);
            return result;
          }

          public class GetEntityType extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:getEntityType";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");

            /**
             * Get entity type.
             *
             * Create a request for the method "connectionSchemaMetadata.getEntityType".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link GetEntityType#execute()} method to invoke the remote
             * operation. <p> {@link GetEntityType#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. Resource name format:
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             * @since 1.13
             */
            protected GetEntityType(java.lang.String name) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetEntityType set$Xgafv(java.lang.String $Xgafv) {
              return (GetEntityType) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetEntityType setAccessToken(java.lang.String accessToken) {
              return (GetEntityType) super.setAccessToken(accessToken);
            }

            @Override
            public GetEntityType setAlt(java.lang.String alt) {
              return (GetEntityType) super.setAlt(alt);
            }

            @Override
            public GetEntityType setCallback(java.lang.String callback) {
              return (GetEntityType) super.setCallback(callback);
            }

            @Override
            public GetEntityType setFields(java.lang.String fields) {
              return (GetEntityType) super.setFields(fields);
            }

            @Override
            public GetEntityType setKey(java.lang.String key) {
              return (GetEntityType) super.setKey(key);
            }

            @Override
            public GetEntityType setOauthToken(java.lang.String oauthToken) {
              return (GetEntityType) super.setOauthToken(oauthToken);
            }

            @Override
            public GetEntityType setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetEntityType) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetEntityType setQuotaUser(java.lang.String quotaUser) {
              return (GetEntityType) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetEntityType setUploadType(java.lang.String uploadType) {
              return (GetEntityType) super.setUploadType(uploadType);
            }

            @Override
            public GetEntityType setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetEntityType) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name format: projects/{project}/locations/{location}/connections/{
             * connection}/connectionSchemaMetadata
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name format:
           projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name format: projects/{project}/locations/{location}/connections/{
             * connection}/connectionSchemaMetadata
             */
            public GetEntityType setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
              this.name = name;
              return this;
            }

            /** Required. Id of the entity type. */
            @com.google.api.client.util.Key
            private java.lang.String entityId;

            /** Required. Id of the entity type.
             */
            public java.lang.String getEntityId() {
              return entityId;
            }

            /** Required. Id of the entity type. */
            public GetEntityType setEntityId(java.lang.String entityId) {
              this.entityId = entityId;
              return this;
            }

            @Override
            public GetEntityType set(String parameterName, Object value) {
              return (GetEntityType) super.set(parameterName, value);
            }
          }
          /**
           * List actions.
           *
           * Create a request for the method "connectionSchemaMetadata.listActions".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link ListActions#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name format.
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
           * @return the request
           */
          public ListActions listActions(java.lang.String name) throws java.io.IOException {
            ListActions result = new ListActions(name);
            initialize(result);
            return result;
          }

          public class ListActions extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListActionsResponse> {

            private static final String REST_PATH = "v1/{+name}:listActions";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");

            /**
             * List actions.
             *
             * Create a request for the method "connectionSchemaMetadata.listActions".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link ListActions#execute()} method to invoke the remote
             * operation. <p> {@link
             * ListActions#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name format.
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             * @since 1.13
             */
            protected ListActions(java.lang.String name) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListActionsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public ListActions set$Xgafv(java.lang.String $Xgafv) {
              return (ListActions) super.set$Xgafv($Xgafv);
            }

            @Override
            public ListActions setAccessToken(java.lang.String accessToken) {
              return (ListActions) super.setAccessToken(accessToken);
            }

            @Override
            public ListActions setAlt(java.lang.String alt) {
              return (ListActions) super.setAlt(alt);
            }

            @Override
            public ListActions setCallback(java.lang.String callback) {
              return (ListActions) super.setCallback(callback);
            }

            @Override
            public ListActions setFields(java.lang.String fields) {
              return (ListActions) super.setFields(fields);
            }

            @Override
            public ListActions setKey(java.lang.String key) {
              return (ListActions) super.setKey(key);
            }

            @Override
            public ListActions setOauthToken(java.lang.String oauthToken) {
              return (ListActions) super.setOauthToken(oauthToken);
            }

            @Override
            public ListActions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ListActions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ListActions setQuotaUser(java.lang.String quotaUser) {
              return (ListActions) super.setQuotaUser(quotaUser);
            }

            @Override
            public ListActions setUploadType(java.lang.String uploadType) {
              return (ListActions) super.setUploadType(uploadType);
            }

            @Override
            public ListActions setUploadProtocol(java.lang.String uploadProtocol) {
              return (ListActions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name format. projects/{project}/locations/{location}/connections/{
             * connection}/connectionSchemaMetadata
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name format.
           projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name format. projects/{project}/locations/{location}/connections/{
             * connection}/connectionSchemaMetadata
             */
            public ListActions setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
              this.name = name;
              return this;
            }

            /** Required. Filter Wildcards are not supported in the filter currently. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Required. Filter Wildcards are not supported in the filter currently.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Required. Filter Wildcards are not supported in the filter currently. */
            public ListActions setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Page size. If unspecified, at most 50 actions will be returned. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size. If unspecified, at most 50 actions will be returned.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. If unspecified, at most 50 actions will be returned. */
            public ListActions setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public ListActions setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Specifies which fields are returned in response. Defaults to BASIC view. */
            @com.google.api.client.util.Key
            private java.lang.String view;

            /** Specifies which fields are returned in response. Defaults to BASIC view.
             */
            public java.lang.String getView() {
              return view;
            }

            /** Specifies which fields are returned in response. Defaults to BASIC view. */
            public ListActions setView(java.lang.String view) {
              this.view = view;
              return this;
            }

            @Override
            public ListActions set(String parameterName, Object value) {
              return (ListActions) super.set(parameterName, value);
            }
          }
          /**
           * List entity types.
           *
           * Create a request for the method "connectionSchemaMetadata.listEntityTypes".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link ListEntityTypes#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name format:
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
           * @return the request
           */
          public ListEntityTypes listEntityTypes(java.lang.String name) throws java.io.IOException {
            ListEntityTypes result = new ListEntityTypes(name);
            initialize(result);
            return result;
          }

          public class ListEntityTypes extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListEntityTypesResponse> {

            private static final String REST_PATH = "v1/{+name}:listEntityTypes";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");

            /**
             * List entity types.
             *
             * Create a request for the method "connectionSchemaMetadata.listEntityTypes".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link ListEntityTypes#execute()} method to invoke the remote
             * operation. <p> {@link ListEntityTypes#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. Resource name format:
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             * @since 1.13
             */
            protected ListEntityTypes(java.lang.String name) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListEntityTypesResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public ListEntityTypes set$Xgafv(java.lang.String $Xgafv) {
              return (ListEntityTypes) super.set$Xgafv($Xgafv);
            }

            @Override
            public ListEntityTypes setAccessToken(java.lang.String accessToken) {
              return (ListEntityTypes) super.setAccessToken(accessToken);
            }

            @Override
            public ListEntityTypes setAlt(java.lang.String alt) {
              return (ListEntityTypes) super.setAlt(alt);
            }

            @Override
            public ListEntityTypes setCallback(java.lang.String callback) {
              return (ListEntityTypes) super.setCallback(callback);
            }

            @Override
            public ListEntityTypes setFields(java.lang.String fields) {
              return (ListEntityTypes) super.setFields(fields);
            }

            @Override
            public ListEntityTypes setKey(java.lang.String key) {
              return (ListEntityTypes) super.setKey(key);
            }

            @Override
            public ListEntityTypes setOauthToken(java.lang.String oauthToken) {
              return (ListEntityTypes) super.setOauthToken(oauthToken);
            }

            @Override
            public ListEntityTypes setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ListEntityTypes) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ListEntityTypes setQuotaUser(java.lang.String quotaUser) {
              return (ListEntityTypes) super.setQuotaUser(quotaUser);
            }

            @Override
            public ListEntityTypes setUploadType(java.lang.String uploadType) {
              return (ListEntityTypes) super.setUploadType(uploadType);
            }

            @Override
            public ListEntityTypes setUploadProtocol(java.lang.String uploadProtocol) {
              return (ListEntityTypes) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name format: projects/{project}/locations/{location}/connections/{
             * connection}/connectionSchemaMetadata
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name format:
           projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name format: projects/{project}/locations/{location}/connections/{
             * connection}/connectionSchemaMetadata
             */
            public ListEntityTypes setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
              this.name = name;
              return this;
            }

            /** Required. Filter Wildcards are not supported in the filter currently. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Required. Filter Wildcards are not supported in the filter currently.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Required. Filter Wildcards are not supported in the filter currently. */
            public ListEntityTypes setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Page size. If unspecified, at most 50 entity types will be returned. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size. If unspecified, at most 50 entity types will be returned.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. If unspecified, at most 50 entity types will be returned. */
            public ListEntityTypes setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public ListEntityTypes setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Specifies which fields are returned in response. Defaults to BASIC view. */
            @com.google.api.client.util.Key
            private java.lang.String view;

            /** Specifies which fields are returned in response. Defaults to BASIC view.
             */
            public java.lang.String getView() {
              return view;
            }

            /** Specifies which fields are returned in response. Defaults to BASIC view. */
            public ListEntityTypes setView(java.lang.String view) {
              this.view = view;
              return this;
            }

            @Override
            public ListEntityTypes set(String parameterName, Object value) {
              return (ListEntityTypes) super.set(parameterName, value);
            }
          }
          /**
           * Refresh runtime schema of a connection.
           *
           * Create a request for the method "connectionSchemaMetadata.refresh".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Refresh#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name. Format:
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
           * @param content the {@link com.google.api.services.connectors.v1.model.RefreshConnectionSchemaMetadataRequest}
           * @return the request
           */
          public Refresh refresh(java.lang.String name, com.google.api.services.connectors.v1.model.RefreshConnectionSchemaMetadataRequest content) throws java.io.IOException {
            Refresh result = new Refresh(name, content);
            initialize(result);
            return result;
          }

          public class Refresh extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:refresh";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");

            /**
             * Refresh runtime schema of a connection.
             *
             * Create a request for the method "connectionSchemaMetadata.refresh".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Refresh#execute()} method to invoke the remote operation.
             * <p> {@link
             * Refresh#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name. Format:
           *        projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             * @param content the {@link com.google.api.services.connectors.v1.model.RefreshConnectionSchemaMetadataRequest}
             * @since 1.13
             */
            protected Refresh(java.lang.String name, com.google.api.services.connectors.v1.model.RefreshConnectionSchemaMetadataRequest content) {
              super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
            }

            @Override
            public Refresh set$Xgafv(java.lang.String $Xgafv) {
              return (Refresh) super.set$Xgafv($Xgafv);
            }

            @Override
            public Refresh setAccessToken(java.lang.String accessToken) {
              return (Refresh) super.setAccessToken(accessToken);
            }

            @Override
            public Refresh setAlt(java.lang.String alt) {
              return (Refresh) super.setAlt(alt);
            }

            @Override
            public Refresh setCallback(java.lang.String callback) {
              return (Refresh) super.setCallback(callback);
            }

            @Override
            public Refresh setFields(java.lang.String fields) {
              return (Refresh) super.setFields(fields);
            }

            @Override
            public Refresh setKey(java.lang.String key) {
              return (Refresh) super.setKey(key);
            }

            @Override
            public Refresh setOauthToken(java.lang.String oauthToken) {
              return (Refresh) super.setOauthToken(oauthToken);
            }

            @Override
            public Refresh setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Refresh) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Refresh setQuotaUser(java.lang.String quotaUser) {
              return (Refresh) super.setQuotaUser(quotaUser);
            }

            @Override
            public Refresh setUploadType(java.lang.String uploadType) {
              return (Refresh) super.setUploadType(uploadType);
            }

            @Override
            public Refresh setUploadProtocol(java.lang.String uploadProtocol) {
              return (Refresh) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name. Format: projects/{project}/locations/{location}/connections/
             * {connection}/connectionSchemaMetadata
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name. Format:
           projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name. Format: projects/{project}/locations/{location}/connections/
             * {connection}/connectionSchemaMetadata
             */
            public Refresh setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Refresh set(String parameterName, Object value) {
              return (Refresh) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the EventSubscriptions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Connectors connectors = new Connectors(...);}
         *   {@code Connectors.EventSubscriptions.List request = connectors.eventSubscriptions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public EventSubscriptions eventSubscriptions() {
          return new EventSubscriptions();
        }

        /**
         * The "eventSubscriptions" collection of methods.
         */
        public class EventSubscriptions {

          /**
           * Creates a new EventSubscription in a given project,location and connection.
           *
           * Create a request for the method "eventSubscriptions.create".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of the EventSubscription, of the form: `projects/locations/connections`
           * @param content the {@link com.google.api.services.connectors.v1.model.EventSubscription}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.connectors.v1.model.EventSubscription content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+parent}/eventSubscriptions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

            /**
             * Creates a new EventSubscription in a given project,location and connection.
             *
             * Create a request for the method "eventSubscriptions.create".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of the EventSubscription, of the form: `projects/locations/connections`
             * @param content the {@link com.google.api.services.connectors.v1.model.EventSubscription}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.connectors.v1.model.EventSubscription content) {
              super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of the EventSubscription, of the form:
             * `projects/locations/connections`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of the EventSubscription, of the form: `projects/locations/connections`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of the EventSubscription, of the form:
             * `projects/locations/connections`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. Identifier to assign to the Event Subscription. Must be unique within scope
             * of the parent resource.
             */
            @com.google.api.client.util.Key
            private java.lang.String eventSubscriptionId;

            /** Required. Identifier to assign to the Event Subscription. Must be unique within scope of the parent
           resource.
             */
            public java.lang.String getEventSubscriptionId() {
              return eventSubscriptionId;
            }

            /**
             * Required. Identifier to assign to the Event Subscription. Must be unique within scope
             * of the parent resource.
             */
            public Create setEventSubscriptionId(java.lang.String eventSubscriptionId) {
              this.eventSubscriptionId = eventSubscriptionId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single EventSubscription.
           *
           * Create a request for the method "eventSubscriptions.delete".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/locations/connections/eventsubscriptions`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");

            /**
             * Deletes a single EventSubscription.
             *
             * Create a request for the method "eventSubscriptions.delete".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/locations/connections/eventsubscriptions`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Connectors.this, "DELETE", REST_PATH, null, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the form:
             * `projects/locations/connections/eventsubscriptions`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/locations/connections/eventsubscriptions`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the form:
             * `projects/locations/connections/eventsubscriptions`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single EventSubscription.
           *
           * Create a request for the method "eventSubscriptions.get".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/locations/connections/eventSubscriptions`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.EventSubscription> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");

            /**
             * Gets details of a single EventSubscription.
             *
             * Create a request for the method "eventSubscriptions.get".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/locations/connections/eventSubscriptions`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.EventSubscription.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the form:
             * `projects/locations/connections/eventSubscriptions`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/locations/connections/eventSubscriptions`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the form:
             * `projects/locations/connections/eventSubscriptions`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * List EventSubscriptions in a given project,location and connection.
           *
           * Create a request for the method "eventSubscriptions.list".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of the EventSubscription, of the form: `projects/locations/connections`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListEventSubscriptionsResponse> {

            private static final String REST_PATH = "v1/{+parent}/eventSubscriptions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

            /**
             * List EventSubscriptions in a given project,location and connection.
             *
             * Create a request for the method "eventSubscriptions.list".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of the EventSubscription, of the form: `projects/locations/connections`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListEventSubscriptionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of the EventSubscription, of the form:
             * `projects/locations/connections`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of the EventSubscription, of the form: `projects/locations/connections`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of the EventSubscription, of the form:
             * `projects/locations/connections`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Order by parameters. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Order by parameters.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Order by parameters. */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** Page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the parameters of a single EventSubscription.
           *
           * Create a request for the method "eventSubscriptions.patch".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/co
           *        nnections/{connection}/eventSubscriptions/{event_subscription}
           * @param content the {@link com.google.api.services.connectors.v1.model.EventSubscription}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.connectors.v1.model.EventSubscription content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");

            /**
             * Updates the parameters of a single EventSubscription.
             *
             * Create a request for the method "eventSubscriptions.patch".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/co
           *        nnections/{connection}/eventSubscriptions/{event_subscription}
             * @param content the {@link com.google.api.services.connectors.v1.model.EventSubscription}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.connectors.v1.model.EventSubscription content) {
              super(Connectors.this, "PATCH", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the EventSubscription. Format: projects/{project}/location
             * s/{location}/connections/{connection}/eventSubscriptions/{event_subscription}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/c
           onnections/{connection}/eventSubscriptions/{event_subscription}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the EventSubscription. Format: projects/{project}/location
             * s/{location}/connections/{connection}/eventSubscriptions/{event_subscription}
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. The list of fields to update. Fields are specified relative to the
             * Subscription. A field will be overwritten if it is in the mask. You can modify only
             * the fields listed below. To update the EventSubscription details: * `serviceAccount`
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The list of fields to update. Fields are specified relative to the Subscription. A field
           will be overwritten if it is in the mask. You can modify only the fields listed below. To update
           the EventSubscription details: * `serviceAccount`
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. The list of fields to update. Fields are specified relative to the
             * Subscription. A field will be overwritten if it is in the mask. You can modify only
             * the fields listed below. To update the EventSubscription details: * `serviceAccount`
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * RetryEventSubscription retries the registration of Subscription.
           *
           * Create a request for the method "eventSubscriptions.retry".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Retry#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/locations/connections/eventSubscriptions`
           * @param content the {@link com.google.api.services.connectors.v1.model.RetryEventSubscriptionRequest}
           * @return the request
           */
          public Retry retry(java.lang.String name, com.google.api.services.connectors.v1.model.RetryEventSubscriptionRequest content) throws java.io.IOException {
            Retry result = new Retry(name, content);
            initialize(result);
            return result;
          }

          public class Retry extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:retry";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");

            /**
             * RetryEventSubscription retries the registration of Subscription.
             *
             * Create a request for the method "eventSubscriptions.retry".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Retry#execute()} method to invoke the remote operation.
             * <p> {@link
             * Retry#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/locations/connections/eventSubscriptions`
             * @param content the {@link com.google.api.services.connectors.v1.model.RetryEventSubscriptionRequest}
             * @since 1.13
             */
            protected Retry(java.lang.String name, com.google.api.services.connectors.v1.model.RetryEventSubscriptionRequest content) {
              super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");
              }
            }

            @Override
            public Retry set$Xgafv(java.lang.String $Xgafv) {
              return (Retry) super.set$Xgafv($Xgafv);
            }

            @Override
            public Retry setAccessToken(java.lang.String accessToken) {
              return (Retry) super.setAccessToken(accessToken);
            }

            @Override
            public Retry setAlt(java.lang.String alt) {
              return (Retry) super.setAlt(alt);
            }

            @Override
            public Retry setCallback(java.lang.String callback) {
              return (Retry) super.setCallback(callback);
            }

            @Override
            public Retry setFields(java.lang.String fields) {
              return (Retry) super.setFields(fields);
            }

            @Override
            public Retry setKey(java.lang.String key) {
              return (Retry) super.setKey(key);
            }

            @Override
            public Retry setOauthToken(java.lang.String oauthToken) {
              return (Retry) super.setOauthToken(oauthToken);
            }

            @Override
            public Retry setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Retry) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Retry setQuotaUser(java.lang.String quotaUser) {
              return (Retry) super.setQuotaUser(quotaUser);
            }

            @Override
            public Retry setUploadType(java.lang.String uploadType) {
              return (Retry) super.setUploadType(uploadType);
            }

            @Override
            public Retry setUploadProtocol(java.lang.String uploadProtocol) {
              return (Retry) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the form:
             * `projects/locations/connections/eventSubscriptions`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/locations/connections/eventSubscriptions`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the form:
             * `projects/locations/connections/eventSubscriptions`
             */
            public Retry setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Retry set(String parameterName, Object value) {
              return (Retry) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the RuntimeActionSchemas collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Connectors connectors = new Connectors(...);}
         *   {@code Connectors.RuntimeActionSchemas.List request = connectors.runtimeActionSchemas().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public RuntimeActionSchemas runtimeActionSchemas() {
          return new RuntimeActionSchemas();
        }

        /**
         * The "runtimeActionSchemas" collection of methods.
         */
        public class RuntimeActionSchemas {

          /**
           * List schema of a runtime actions filtered by action name.
           *
           * Create a request for the method "runtimeActionSchemas.list".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of RuntimeActionSchema Format:
           *        projects/{project}/locations/{location}/connections/{connection}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListRuntimeActionSchemasResponse> {

            private static final String REST_PATH = "v1/{+parent}/runtimeActionSchemas";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

            /**
             * List schema of a runtime actions filtered by action name.
             *
             * Create a request for the method "runtimeActionSchemas.list".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of RuntimeActionSchema Format:
           *        projects/{project}/locations/{location}/connections/{connection}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListRuntimeActionSchemasResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of RuntimeActionSchema Format:
             * projects/{project}/locations/{location}/connections/{connection}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of RuntimeActionSchema Format:
           projects/{project}/locations/{location}/connections/{connection}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of RuntimeActionSchema Format:
             * projects/{project}/locations/{location}/connections/{connection}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. Filter Format: action="{actionId}" Only action field is supported with
             * literal equality operator. Accepted filter example: action="CancelOrder" Wildcards
             * are not supported in the filter currently.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Required. Filter Format: action="{actionId}" Only action field is supported with literal equality
           operator. Accepted filter example: action="CancelOrder" Wildcards are not supported in the filter
           currently.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Required. Filter Format: action="{actionId}" Only action field is supported with
             * literal equality operator. Accepted filter example: action="CancelOrder" Wildcards
             * are not supported in the filter currently.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Optional. Flag to indicate if schema should be returned as string or not */
            @com.google.api.client.util.Key
            private java.lang.Boolean schemaAsString;

            /** Optional. Flag to indicate if schema should be returned as string or not
             */
            public java.lang.Boolean getSchemaAsString() {
              return schemaAsString;
            }

            /** Optional. Flag to indicate if schema should be returned as string or not */
            public List setSchemaAsString(java.lang.Boolean schemaAsString) {
              this.schemaAsString = schemaAsString;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the RuntimeEntitySchemas collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Connectors connectors = new Connectors(...);}
         *   {@code Connectors.RuntimeEntitySchemas.List request = connectors.runtimeEntitySchemas().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public RuntimeEntitySchemas runtimeEntitySchemas() {
          return new RuntimeEntitySchemas();
        }

        /**
         * The "runtimeEntitySchemas" collection of methods.
         */
        public class RuntimeEntitySchemas {

          /**
           * List schema of a runtime entities filtered by entity name.
           *
           * Create a request for the method "runtimeEntitySchemas.list".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of RuntimeEntitySchema Format:
           *        projects/{project}/locations/{location}/connections/{connection}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListRuntimeEntitySchemasResponse> {

            private static final String REST_PATH = "v1/{+parent}/runtimeEntitySchemas";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/connections/[^/]+$");

            /**
             * List schema of a runtime entities filtered by entity name.
             *
             * Create a request for the method "runtimeEntitySchemas.list".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of RuntimeEntitySchema Format:
           *        projects/{project}/locations/{location}/connections/{connection}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListRuntimeEntitySchemasResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of RuntimeEntitySchema Format:
             * projects/{project}/locations/{location}/connections/{connection}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of RuntimeEntitySchema Format:
           projects/{project}/locations/{location}/connections/{connection}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of RuntimeEntitySchema Format:
             * projects/{project}/locations/{location}/connections/{connection}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/connections/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. Filter Format: entity="{entityId}" Only entity field is supported with
             * literal equality operator. Accepted filter example: entity="Order" Wildcards are not
             * supported in the filter currently.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Required. Filter Format: entity="{entityId}" Only entity field is supported with literal equality
           operator. Accepted filter example: entity="Order" Wildcards are not supported in the filter
           currently.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Required. Filter Format: entity="{entityId}" Only entity field is supported with
             * literal equality operator. Accepted filter example: entity="Order" Wildcards are not
             * supported in the filter currently.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the CustomConnectors collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Connectors connectors = new Connectors(...);}
       *   {@code Connectors.CustomConnectors.List request = connectors.customConnectors().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public CustomConnectors customConnectors() {
        return new CustomConnectors();
      }

      /**
       * The "customConnectors" collection of methods.
       */
      public class CustomConnectors {

        /**
         * Validates a Custom Connector Spec.
         *
         * Create a request for the method "customConnectors.validateCustomConnectorSpec".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link ValidateCustomConnectorSpec#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. Location at which the custom connector is being created.
         * @param content the {@link com.google.api.services.connectors.v1.model.ValidateCustomConnectorSpecRequest}
         * @return the request
         */
        public ValidateCustomConnectorSpec validateCustomConnectorSpec(java.lang.String parent, com.google.api.services.connectors.v1.model.ValidateCustomConnectorSpecRequest content) throws java.io.IOException {
          ValidateCustomConnectorSpec result = new ValidateCustomConnectorSpec(parent, content);
          initialize(result);
          return result;
        }

        public class ValidateCustomConnectorSpec extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ValidateCustomConnectorSpecResponse> {

          private static final String REST_PATH = "v1/{+parent}/customConnectors:validateCustomConnectorSpec";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Validates a Custom Connector Spec.
           *
           * Create a request for the method "customConnectors.validateCustomConnectorSpec".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link ValidateCustomConnectorSpec#execute()} method to invoke
           * the remote operation. <p> {@link ValidateCustomConnectorSpec#initialize(com.google.api.client.g
           * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param parent Required. Location at which the custom connector is being created.
           * @param content the {@link com.google.api.services.connectors.v1.model.ValidateCustomConnectorSpecRequest}
           * @since 1.13
           */
          protected ValidateCustomConnectorSpec(java.lang.String parent, com.google.api.services.connectors.v1.model.ValidateCustomConnectorSpecRequest content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.ValidateCustomConnectorSpecResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public ValidateCustomConnectorSpec set$Xgafv(java.lang.String $Xgafv) {
            return (ValidateCustomConnectorSpec) super.set$Xgafv($Xgafv);
          }

          @Override
          public ValidateCustomConnectorSpec setAccessToken(java.lang.String accessToken) {
            return (ValidateCustomConnectorSpec) super.setAccessToken(accessToken);
          }

          @Override
          public ValidateCustomConnectorSpec setAlt(java.lang.String alt) {
            return (ValidateCustomConnectorSpec) super.setAlt(alt);
          }

          @Override
          public ValidateCustomConnectorSpec setCallback(java.lang.String callback) {
            return (ValidateCustomConnectorSpec) super.setCallback(callback);
          }

          @Override
          public ValidateCustomConnectorSpec setFields(java.lang.String fields) {
            return (ValidateCustomConnectorSpec) super.setFields(fields);
          }

          @Override
          public ValidateCustomConnectorSpec setKey(java.lang.String key) {
            return (ValidateCustomConnectorSpec) super.setKey(key);
          }

          @Override
          public ValidateCustomConnectorSpec setOauthToken(java.lang.String oauthToken) {
            return (ValidateCustomConnectorSpec) super.setOauthToken(oauthToken);
          }

          @Override
          public ValidateCustomConnectorSpec setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ValidateCustomConnectorSpec) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ValidateCustomConnectorSpec setQuotaUser(java.lang.String quotaUser) {
            return (ValidateCustomConnectorSpec) super.setQuotaUser(quotaUser);
          }

          @Override
          public ValidateCustomConnectorSpec setUploadType(java.lang.String uploadType) {
            return (ValidateCustomConnectorSpec) super.setUploadType(uploadType);
          }

          @Override
          public ValidateCustomConnectorSpec setUploadProtocol(java.lang.String uploadProtocol) {
            return (ValidateCustomConnectorSpec) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Location at which the custom connector is being created. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Location at which the custom connector is being created.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Location at which the custom connector is being created. */
          public ValidateCustomConnectorSpec setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public ValidateCustomConnectorSpec set(String parameterName, Object value) {
            return (ValidateCustomConnectorSpec) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the CustomConnectorVersions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Connectors connectors = new Connectors(...);}
         *   {@code Connectors.CustomConnectorVersions.List request = connectors.customConnectorVersions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public CustomConnectorVersions customConnectorVersions() {
          return new CustomConnectorVersions();
        }

        /**
         * The "customConnectorVersions" collection of methods.
         */
        public class CustomConnectorVersions {

          /**
           * Deletes a single CustomConnectorVersion.
           *
           * Create a request for the method "customConnectorVersions.delete".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cust
           *        om_connector}/customConnectorVersions/{custom_connector_version}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");

            /**
             * Deletes a single CustomConnectorVersion.
             *
             * Create a request for the method "customConnectorVersions.delete".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cust
           *        om_connector}/customConnectorVersions/{custom_connector_version}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Connectors.this, "DELETE", REST_PATH, null, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the form: `projects/{project}/locations/{location}/customC
             * onnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cus
           tom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the form: `projects/{project}/locations/{location}/customC
             * onnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Deprecates a single CustomConnectorVersion.
           *
           * Create a request for the method "customConnectorVersions.deprecate".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Deprecate#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cust
           *        om_connector}/customConnectorVersions/{custom_connector_version}`
           * @param content the {@link com.google.api.services.connectors.v1.model.DeprecateCustomConnectorVersionRequest}
           * @return the request
           */
          public Deprecate deprecate(java.lang.String name, com.google.api.services.connectors.v1.model.DeprecateCustomConnectorVersionRequest content) throws java.io.IOException {
            Deprecate result = new Deprecate(name, content);
            initialize(result);
            return result;
          }

          public class Deprecate extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:deprecate";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");

            /**
             * Deprecates a single CustomConnectorVersion.
             *
             * Create a request for the method "customConnectorVersions.deprecate".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Deprecate#execute()} method to invoke the remote
             * operation. <p> {@link
             * Deprecate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cust
           *        om_connector}/customConnectorVersions/{custom_connector_version}`
             * @param content the {@link com.google.api.services.connectors.v1.model.DeprecateCustomConnectorVersionRequest}
             * @since 1.13
             */
            protected Deprecate(java.lang.String name, com.google.api.services.connectors.v1.model.DeprecateCustomConnectorVersionRequest content) {
              super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
              }
            }

            @Override
            public Deprecate set$Xgafv(java.lang.String $Xgafv) {
              return (Deprecate) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deprecate setAccessToken(java.lang.String accessToken) {
              return (Deprecate) super.setAccessToken(accessToken);
            }

            @Override
            public Deprecate setAlt(java.lang.String alt) {
              return (Deprecate) super.setAlt(alt);
            }

            @Override
            public Deprecate setCallback(java.lang.String callback) {
              return (Deprecate) super.setCallback(callback);
            }

            @Override
            public Deprecate setFields(java.lang.String fields) {
              return (Deprecate) super.setFields(fields);
            }

            @Override
            public Deprecate setKey(java.lang.String key) {
              return (Deprecate) super.setKey(key);
            }

            @Override
            public Deprecate setOauthToken(java.lang.String oauthToken) {
              return (Deprecate) super.setOauthToken(oauthToken);
            }

            @Override
            public Deprecate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deprecate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deprecate setQuotaUser(java.lang.String quotaUser) {
              return (Deprecate) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deprecate setUploadType(java.lang.String uploadType) {
              return (Deprecate) super.setUploadType(uploadType);
            }

            @Override
            public Deprecate setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deprecate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the form: `projects/{project}/locations/{location}/customC
             * onnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cus
           tom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the form: `projects/{project}/locations/{location}/customC
             * onnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            public Deprecate setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Deprecate set(String parameterName, Object value) {
              return (Deprecate) super.set(parameterName, value);
            }
          }
          /**
           * Publish request for the CustomConnectorVersion. Once approved, the CustomConnectorVersion will be
           * published as PartnerConnector.
           *
           * Create a request for the method "customConnectorVersions.publish".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Publish#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cust
           *        om_connector}/customConnectorVersions/{custom_connector_version}`
           * @param content the {@link com.google.api.services.connectors.v1.model.PublishCustomConnectorVersionRequest}
           * @return the request
           */
          public Publish publish(java.lang.String name, com.google.api.services.connectors.v1.model.PublishCustomConnectorVersionRequest content) throws java.io.IOException {
            Publish result = new Publish(name, content);
            initialize(result);
            return result;
          }

          public class Publish extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:publish";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");

            /**
             * Publish request for the CustomConnectorVersion. Once approved, the CustomConnectorVersion will
             * be published as PartnerConnector.
             *
             * Create a request for the method "customConnectorVersions.publish".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Publish#execute()} method to invoke the remote operation.
             * <p> {@link
             * Publish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cust
           *        om_connector}/customConnectorVersions/{custom_connector_version}`
             * @param content the {@link com.google.api.services.connectors.v1.model.PublishCustomConnectorVersionRequest}
             * @since 1.13
             */
            protected Publish(java.lang.String name, com.google.api.services.connectors.v1.model.PublishCustomConnectorVersionRequest content) {
              super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
              }
            }

            @Override
            public Publish set$Xgafv(java.lang.String $Xgafv) {
              return (Publish) super.set$Xgafv($Xgafv);
            }

            @Override
            public Publish setAccessToken(java.lang.String accessToken) {
              return (Publish) super.setAccessToken(accessToken);
            }

            @Override
            public Publish setAlt(java.lang.String alt) {
              return (Publish) super.setAlt(alt);
            }

            @Override
            public Publish setCallback(java.lang.String callback) {
              return (Publish) super.setCallback(callback);
            }

            @Override
            public Publish setFields(java.lang.String fields) {
              return (Publish) super.setFields(fields);
            }

            @Override
            public Publish setKey(java.lang.String key) {
              return (Publish) super.setKey(key);
            }

            @Override
            public Publish setOauthToken(java.lang.String oauthToken) {
              return (Publish) super.setOauthToken(oauthToken);
            }

            @Override
            public Publish setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Publish) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Publish setQuotaUser(java.lang.String quotaUser) {
              return (Publish) super.setQuotaUser(quotaUser);
            }

            @Override
            public Publish setUploadType(java.lang.String uploadType) {
              return (Publish) super.setUploadType(uploadType);
            }

            @Override
            public Publish setUploadProtocol(java.lang.String uploadProtocol) {
              return (Publish) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the form: `projects/{project}/locations/{location}/customC
             * onnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cus
           tom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the form: `projects/{project}/locations/{location}/customC
             * onnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            public Publish setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Publish set(String parameterName, Object value) {
              return (Publish) super.set(parameterName, value);
            }
          }
          /**
           * Withdraw the publish request for the CustomConnectorVersion. This can only be used before the
           * CustomConnectorVersion is published.
           *
           * Create a request for the method "customConnectorVersions.withdraw".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Withdraw#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cust
           *        om_connector}/customConnectorVersions/{custom_connector_version}`
           * @param content the {@link com.google.api.services.connectors.v1.model.WithdrawCustomConnectorVersionRequest}
           * @return the request
           */
          public Withdraw withdraw(java.lang.String name, com.google.api.services.connectors.v1.model.WithdrawCustomConnectorVersionRequest content) throws java.io.IOException {
            Withdraw result = new Withdraw(name, content);
            initialize(result);
            return result;
          }

          public class Withdraw extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:withdraw";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");

            /**
             * Withdraw the publish request for the CustomConnectorVersion. This can only be used before the
             * CustomConnectorVersion is published.
             *
             * Create a request for the method "customConnectorVersions.withdraw".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Withdraw#execute()} method to invoke the remote operation.
             * <p> {@link
             * Withdraw#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cust
           *        om_connector}/customConnectorVersions/{custom_connector_version}`
             * @param content the {@link com.google.api.services.connectors.v1.model.WithdrawCustomConnectorVersionRequest}
             * @since 1.13
             */
            protected Withdraw(java.lang.String name, com.google.api.services.connectors.v1.model.WithdrawCustomConnectorVersionRequest content) {
              super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
              }
            }

            @Override
            public Withdraw set$Xgafv(java.lang.String $Xgafv) {
              return (Withdraw) super.set$Xgafv($Xgafv);
            }

            @Override
            public Withdraw setAccessToken(java.lang.String accessToken) {
              return (Withdraw) super.setAccessToken(accessToken);
            }

            @Override
            public Withdraw setAlt(java.lang.String alt) {
              return (Withdraw) super.setAlt(alt);
            }

            @Override
            public Withdraw setCallback(java.lang.String callback) {
              return (Withdraw) super.setCallback(callback);
            }

            @Override
            public Withdraw setFields(java.lang.String fields) {
              return (Withdraw) super.setFields(fields);
            }

            @Override
            public Withdraw setKey(java.lang.String key) {
              return (Withdraw) super.setKey(key);
            }

            @Override
            public Withdraw setOauthToken(java.lang.String oauthToken) {
              return (Withdraw) super.setOauthToken(oauthToken);
            }

            @Override
            public Withdraw setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Withdraw) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Withdraw setQuotaUser(java.lang.String quotaUser) {
              return (Withdraw) super.setQuotaUser(quotaUser);
            }

            @Override
            public Withdraw setUploadType(java.lang.String uploadType) {
              return (Withdraw) super.setUploadType(uploadType);
            }

            @Override
            public Withdraw setUploadProtocol(java.lang.String uploadProtocol) {
              return (Withdraw) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the form: `projects/{project}/locations/{location}/customC
             * onnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/{project}/locations/{location}/customConnectors/{cus
           tom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the form: `projects/{project}/locations/{location}/customC
             * onnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}`
             */
            public Withdraw setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Withdraw set(String parameterName, Object value) {
              return (Withdraw) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the EndpointAttachments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Connectors connectors = new Connectors(...);}
       *   {@code Connectors.EndpointAttachments.List request = connectors.endpointAttachments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public EndpointAttachments endpointAttachments() {
        return new EndpointAttachments();
      }

      /**
       * The "endpointAttachments" collection of methods.
       */
      public class EndpointAttachments {

        /**
         * Creates a new EndpointAttachment in a given project and location.
         *
         * Create a request for the method "endpointAttachments.create".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent resource of the EndpointAttachment, of the form: `projects/locations`
         * @param content the {@link com.google.api.services.connectors.v1.model.EndpointAttachment}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.connectors.v1.model.EndpointAttachment content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/endpointAttachments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new EndpointAttachment in a given project and location.
           *
           * Create a request for the method "endpointAttachments.create".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent resource of the EndpointAttachment, of the form: `projects/locations`
           * @param content the {@link com.google.api.services.connectors.v1.model.EndpointAttachment}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.connectors.v1.model.EndpointAttachment content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Parent resource of the EndpointAttachment, of the form: `projects/locations`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent resource of the EndpointAttachment, of the form: `projects/locations`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Parent resource of the EndpointAttachment, of the form: `projects/locations`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. Identifier to assign to the EndpointAttachment. Must be unique within scope
           * of the parent resource.
           */
          @com.google.api.client.util.Key
          private java.lang.String endpointAttachmentId;

          /** Required. Identifier to assign to the EndpointAttachment. Must be unique within scope of the parent
         resource.
           */
          public java.lang.String getEndpointAttachmentId() {
            return endpointAttachmentId;
          }

          /**
           * Required. Identifier to assign to the EndpointAttachment. Must be unique within scope
           * of the parent resource.
           */
          public Create setEndpointAttachmentId(java.lang.String endpointAttachmentId) {
            this.endpointAttachmentId = endpointAttachmentId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single EndpointAttachment.
         *
         * Create a request for the method "endpointAttachments.delete".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the form: `projects/locations/endpointAttachments`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$");

          /**
           * Deletes a single EndpointAttachment.
           *
           * Create a request for the method "endpointAttachments.delete".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the form: `projects/locations/endpointAttachments`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Connectors.this, "DELETE", REST_PATH, null, com.google.api.services.connectors.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the form: `projects/locations/endpointAttachments` */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the form: `projects/locations/endpointAttachments`
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Resource name of the form: `projects/locations/endpointAttachments` */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single EndpointAttachment.
         *
         * Create a request for the method "endpointAttachments.get".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the form: `projects/locations/endpointAttachments`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.EndpointAttachment> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$");

          /**
           * Gets details of a single EndpointAttachment.
           *
           * Create a request for the method "endpointAttachments.get".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the form: `projects/locations/endpointAttachments`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.EndpointAttachment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the form: `projects/locations/endpointAttachments` */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the form: `projects/locations/endpointAttachments`
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Resource name of the form: `projects/locations/endpointAttachments` */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. Specifies which fields of the EndpointAttachment are returned in the
           * response. Defaults to `ENDPOINT_ATTACHMENT_VIEW_BASIC` view.
           */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** Optional. Specifies which fields of the EndpointAttachment are returned in the response. Defaults
         to `ENDPOINT_ATTACHMENT_VIEW_BASIC` view.
           */
          public java.lang.String getView() {
            return view;
          }

          /**
           * Optional. Specifies which fields of the EndpointAttachment are returned in the
           * response. Defaults to `ENDPOINT_ATTACHMENT_VIEW_BASIC` view.
           */
          public Get setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List EndpointAttachments in a given project
         *
         * Create a request for the method "endpointAttachments.list".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent resource od the EndpointAttachment, of the form: `projects/locations`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListEndpointAttachmentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/endpointAttachments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List EndpointAttachments in a given project
           *
           * Create a request for the method "endpointAttachments.list".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent resource od the EndpointAttachment, of the form: `projects/locations`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListEndpointAttachmentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Parent resource od the EndpointAttachment, of the form: `projects/locations`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent resource od the EndpointAttachment, of the form: `projects/locations`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Parent resource od the EndpointAttachment, of the form: `projects/locations`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order by parameters. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order by parameters.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order by parameters. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** Page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * Optional. Specifies which fields of the EndpointAttachment are returned in the
           * response. Defaults to `ENDPOINT_ATTACHMENT_VIEW_BASIC` view.
           */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** Optional. Specifies which fields of the EndpointAttachment are returned in the response. Defaults
         to `ENDPOINT_ATTACHMENT_VIEW_BASIC` view.
           */
          public java.lang.String getView() {
            return view;
          }

          /**
           * Optional. Specifies which fields of the EndpointAttachment are returned in the
           * response. Defaults to `ENDPOINT_ATTACHMENT_VIEW_BASIC` view.
           */
          public List setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single EndpointAttachment.
         *
         * Create a request for the method "endpointAttachments.patch".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Resource name of the Endpoint Attachment. Format:
         *        projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}
         * @param content the {@link com.google.api.services.connectors.v1.model.EndpointAttachment}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.connectors.v1.model.EndpointAttachment content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$");

          /**
           * Updates the parameters of a single EndpointAttachment.
           *
           * Create a request for the method "endpointAttachments.patch".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Resource name of the Endpoint Attachment. Format:
         *        projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}
           * @param content the {@link com.google.api.services.connectors.v1.model.EndpointAttachment}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.connectors.v1.model.EndpointAttachment content) {
            super(Connectors.this, "PATCH", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Resource name of the Endpoint Attachment. Format:
           * projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Resource name of the Endpoint Attachment. Format:
         projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Resource name of the Endpoint Attachment. Format:
           * projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The list of fields to update. Fields are specified relative to the
           * endpointAttachment. A field will be overwritten if it is in the mask. You can modify
           * only the fields listed below. To update the endpointAttachment details: * `description`
           * * `labels`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to update. Fields are specified relative to the endpointAttachment. A
         field will be overwritten if it is in the mask. You can modify only the fields listed below. To
         update the endpointAttachment details: * `description` * `labels`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The list of fields to update. Fields are specified relative to the
           * endpointAttachment. A field will be overwritten if it is in the mask. You can modify
           * only the fields listed below. To update the endpointAttachment details: * `description`
           * * `labels`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Global collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Connectors connectors = new Connectors(...);}
       *   {@code Connectors.Global.List request = connectors.global().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Global global() {
        return new Global();
      }

      /**
       * The "global" collection of methods.
       */
      public class Global {

        /**
         * GetGlobalSettings gets settings of a project. GlobalSettings is a singleton resource.
         *
         * Create a request for the method "global.getSettings".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link GetSettings#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the Settings.
         * @return the request
         */
        public GetSettings getSettings(java.lang.String name) throws java.io.IOException {
          GetSettings result = new GetSettings(name);
          initialize(result);
          return result;
        }

        public class GetSettings extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Settings> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/settings$");

          /**
           * GetGlobalSettings gets settings of a project. GlobalSettings is a singleton resource.
           *
           * Create a request for the method "global.getSettings".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link GetSettings#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetSettings#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the Settings.
           * @since 1.13
           */
          protected GetSettings(java.lang.String name) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Settings.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/global/settings$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetSettings set$Xgafv(java.lang.String $Xgafv) {
            return (GetSettings) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetSettings setAccessToken(java.lang.String accessToken) {
            return (GetSettings) super.setAccessToken(accessToken);
          }

          @Override
          public GetSettings setAlt(java.lang.String alt) {
            return (GetSettings) super.setAlt(alt);
          }

          @Override
          public GetSettings setCallback(java.lang.String callback) {
            return (GetSettings) super.setCallback(callback);
          }

          @Override
          public GetSettings setFields(java.lang.String fields) {
            return (GetSettings) super.setFields(fields);
          }

          @Override
          public GetSettings setKey(java.lang.String key) {
            return (GetSettings) super.setKey(key);
          }

          @Override
          public GetSettings setOauthToken(java.lang.String oauthToken) {
            return (GetSettings) super.setOauthToken(oauthToken);
          }

          @Override
          public GetSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetSettings) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetSettings setQuotaUser(java.lang.String quotaUser) {
            return (GetSettings) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetSettings setUploadType(java.lang.String uploadType) {
            return (GetSettings) super.setUploadType(uploadType);
          }

          @Override
          public GetSettings setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetSettings) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the Settings. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the Settings.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the Settings. */
          public GetSettings setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/global/settings$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetSettings set(String parameterName, Object value) {
            return (GetSettings) super.set(parameterName, value);
          }
        }
        /**
         * Update the global settings of a project.
         *
         * Create a request for the method "global.updateSettings".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link UpdateSettings#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Resource name of the Connection. Format: projects/{project}/locations/global/settings}
         * @param content the {@link com.google.api.services.connectors.v1.model.Settings}
         * @return the request
         */
        public UpdateSettings updateSettings(java.lang.String name, com.google.api.services.connectors.v1.model.Settings content) throws java.io.IOException {
          UpdateSettings result = new UpdateSettings(name, content);
          initialize(result);
          return result;
        }

        public class UpdateSettings extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/settings$");

          /**
           * Update the global settings of a project.
           *
           * Create a request for the method "global.updateSettings".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link UpdateSettings#execute()} method to invoke the remote
           * operation. <p> {@link UpdateSettings#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Output only. Resource name of the Connection. Format: projects/{project}/locations/global/settings}
           * @param content the {@link com.google.api.services.connectors.v1.model.Settings}
           * @since 1.13
           */
          protected UpdateSettings(java.lang.String name, com.google.api.services.connectors.v1.model.Settings content) {
            super(Connectors.this, "PATCH", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/global/settings$");
            }
          }

          @Override
          public UpdateSettings set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateSettings) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateSettings setAccessToken(java.lang.String accessToken) {
            return (UpdateSettings) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateSettings setAlt(java.lang.String alt) {
            return (UpdateSettings) super.setAlt(alt);
          }

          @Override
          public UpdateSettings setCallback(java.lang.String callback) {
            return (UpdateSettings) super.setCallback(callback);
          }

          @Override
          public UpdateSettings setFields(java.lang.String fields) {
            return (UpdateSettings) super.setFields(fields);
          }

          @Override
          public UpdateSettings setKey(java.lang.String key) {
            return (UpdateSettings) super.setKey(key);
          }

          @Override
          public UpdateSettings setOauthToken(java.lang.String oauthToken) {
            return (UpdateSettings) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateSettings) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateSettings setQuotaUser(java.lang.String quotaUser) {
            return (UpdateSettings) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateSettings setUploadType(java.lang.String uploadType) {
            return (UpdateSettings) super.setUploadType(uploadType);
          }

          @Override
          public UpdateSettings setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateSettings) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Resource name of the Connection. Format:
           * projects/{project}/locations/global/settings}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Resource name of the Connection. Format: projects/{project}/locations/global/settings}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Resource name of the Connection. Format:
           * projects/{project}/locations/global/settings}
           */
          public UpdateSettings setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/global/settings$");
            }
            this.name = name;
            return this;
          }

          /** Required. The list of fields to update. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to update.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The list of fields to update. */
          public UpdateSettings setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public UpdateSettings set(String parameterName, Object value) {
            return (UpdateSettings) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the CustomConnectors collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Connectors connectors = new Connectors(...);}
         *   {@code Connectors.CustomConnectors.List request = connectors.customConnectors().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public CustomConnectors customConnectors() {
          return new CustomConnectors();
        }

        /**
         * The "customConnectors" collection of methods.
         */
        public class CustomConnectors {

          /**
           * Creates a new CustomConnector in a given project and location.
           *
           * Create a request for the method "customConnectors.create".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of the CreateCustomConnector, of the form: `projects/{project}/locations`
           * @param content the {@link com.google.api.services.connectors.v1.model.CustomConnector}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.connectors.v1.model.CustomConnector content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+parent}/customConnectors";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global$");

            /**
             * Creates a new CustomConnector in a given project and location.
             *
             * Create a request for the method "customConnectors.create".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of the CreateCustomConnector, of the form: `projects/{project}/locations`
             * @param content the {@link com.google.api.services.connectors.v1.model.CustomConnector}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.connectors.v1.model.CustomConnector content) {
              super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of the CreateCustomConnector, of the form:
             * `projects/{project}/locations`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of the CreateCustomConnector, of the form: `projects/{project}/locations`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of the CreateCustomConnector, of the form:
             * `projects/{project}/locations`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. Identifier to assign to the CreateCustomConnector. Must be unique within
             * scope of the parent resource.
             */
            @com.google.api.client.util.Key
            private java.lang.String customConnectorId;

            /** Required. Identifier to assign to the CreateCustomConnector. Must be unique within scope of the
           parent resource.
             */
            public java.lang.String getCustomConnectorId() {
              return customConnectorId;
            }

            /**
             * Required. Identifier to assign to the CreateCustomConnector. Must be unique within
             * scope of the parent resource.
             */
            public Create setCustomConnectorId(java.lang.String customConnectorId) {
              this.customConnectorId = customConnectorId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single CustomConnector.
           *
           * Create a request for the method "customConnectors.delete".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form:
           *        `projects/{project}/locations/{location}/customConnectors/{connector}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/customConnectors/[^/]+$");

            /**
             * Deletes a single CustomConnector.
             *
             * Create a request for the method "customConnectors.delete".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form:
           *        `projects/{project}/locations/{location}/customConnectors/{connector}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Connectors.this, "DELETE", REST_PATH, null, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the form:
             * `projects/{project}/locations/{location}/customConnectors/{connector}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form:
           `projects/{project}/locations/{location}/customConnectors/{connector}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the form:
             * `projects/{project}/locations/{location}/customConnectors/{connector}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. If set to true, any customConnectorVersion which is a child resource will
             * also be deleted. https://aip.dev/135#cascading-delete
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** Optional. If set to true, any customConnectorVersion which is a child resource will also be
           deleted. https://aip.dev/135#cascading-delete
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * Optional. If set to true, any customConnectorVersion which is a child resource will
             * also be deleted. https://aip.dev/135#cascading-delete
             */
            public Delete setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single CustomConnector.
           *
           * Create a request for the method "customConnectors.get".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/locations/customConnectors`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.CustomConnector> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/customConnectors/[^/]+$");

            /**
             * Gets details of a single CustomConnector.
             *
             * Create a request for the method "customConnectors.get".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/locations/customConnectors`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.CustomConnector.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Resource name of the form: `projects/locations/customConnectors` */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/locations/customConnectors`
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Resource name of the form: `projects/locations/customConnectors` */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * List CustomConnectorVersions in a given project
           *
           * Create a request for the method "customConnectors.list".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of the custom connectors, of the form: `projects/locations` Only global
           *        location is supported for CustomConnector resource.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListCustomConnectorsResponse> {

            private static final String REST_PATH = "v1/{+parent}/customConnectors";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global$");

            /**
             * List CustomConnectorVersions in a given project
             *
             * Create a request for the method "customConnectors.list".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of the custom connectors, of the form: `projects/locations` Only global
           *        location is supported for CustomConnector resource.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListCustomConnectorsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of the custom connectors, of the form: `projects/locations`
             * Only global location is supported for CustomConnector resource.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of the custom connectors, of the form: `projects/locations` Only global
           location is supported for CustomConnector resource.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of the custom connectors, of the form: `projects/locations`
             * Only global location is supported for CustomConnector resource.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
              this.parent = parent;
              return this;
            }

            /** Filter string. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter string.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Filter string. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the parameters of a CustomConnector.
           *
           * Create a request for the method "customConnectors.patch".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. Resource name of the CustomConnector. Format:
           *        projects/{project}/locations/{location}/customConnectors/{connector}
           * @param content the {@link com.google.api.services.connectors.v1.model.CustomConnector}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.connectors.v1.model.CustomConnector content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/customConnectors/[^/]+$");

            /**
             * Updates the parameters of a CustomConnector.
             *
             * Create a request for the method "customConnectors.patch".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. Resource name of the CustomConnector. Format:
           *        projects/{project}/locations/{location}/customConnectors/{connector}
             * @param content the {@link com.google.api.services.connectors.v1.model.CustomConnector}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.connectors.v1.model.CustomConnector content) {
              super(Connectors.this, "PATCH", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. Resource name of the CustomConnector. Format:
             * projects/{project}/locations/{location}/customConnectors/{connector}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. Resource name of the CustomConnector. Format:
           projects/{project}/locations/{location}/customConnectors/{connector}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. Resource name of the CustomConnector. Format:
             * projects/{project}/locations/{location}/customConnectors/{connector}
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. Field mask is used to specify the fields to be overwritten in the Connector
             * resource by the update. The fields specified in the update_mask are relative to the
             * resource, not the full request. A field will be overwritten if it is in the mask. Set
             * the mask as "*" for full replacement, which means all fields will be overwritten.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. Field mask is used to specify the fields to be overwritten in the Connector resource by
           the update. The fields specified in the update_mask are relative to the resource, not the full
           request. A field will be overwritten if it is in the mask. Set the mask as "*" for full
           replacement, which means all fields will be overwritten.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. Field mask is used to specify the fields to be overwritten in the Connector
             * resource by the update. The fields specified in the update_mask are relative to the
             * resource, not the full request. A field will be overwritten if it is in the mask. Set
             * the mask as "*" for full replacement, which means all fields will be overwritten.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the CustomConnectorVersions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Connectors connectors = new Connectors(...);}
           *   {@code Connectors.CustomConnectorVersions.List request = connectors.customConnectorVersions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public CustomConnectorVersions customConnectorVersions() {
            return new CustomConnectorVersions();
          }

          /**
           * The "customConnectorVersions" collection of methods.
           */
          public class CustomConnectorVersions {

            /**
             * Creates a new CustomConnectorVersion in a given project and location.
             *
             * Create a request for the method "customConnectorVersions.create".
             *
             * This request holds the parameters needed by the connectors server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Parent resource of the CreateCustomConnector, of the form:
             *        `projects/{project}/locations/{location}/customConnectors/{custom_connector}`
             * @param content the {@link com.google.api.services.connectors.v1.model.CustomConnectorVersion}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.connectors.v1.model.CustomConnectorVersion content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

              private static final String REST_PATH = "v1/{+parent}/customConnectorVersions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/customConnectors/[^/]+$");

              /**
               * Creates a new CustomConnectorVersion in a given project and location.
               *
               * Create a request for the method "customConnectorVersions.create".
               *
               * This request holds the parameters needed by the the connectors server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Parent resource of the CreateCustomConnector, of the form:
             *        `projects/{project}/locations/{location}/customConnectors/{custom_connector}`
               * @param content the {@link com.google.api.services.connectors.v1.model.CustomConnectorVersion}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.connectors.v1.model.CustomConnectorVersion content) {
                super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Parent resource of the CreateCustomConnector, of the form:
               * `projects/{project}/locations/{location}/customConnectors/{custom_connector}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Parent resource of the CreateCustomConnector, of the form:
             `projects/{project}/locations/{location}/customConnectors/{custom_connector}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Parent resource of the CreateCustomConnector, of the form:
               * `projects/{project}/locations/{location}/customConnectors/{custom_connector}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique
               * within scope of the parent resource.
               */
              @com.google.api.client.util.Key
              private java.lang.String customConnectorVersionId;

              /** Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of
             the parent resource.
               */
              public java.lang.String getCustomConnectorVersionId() {
                return customConnectorVersionId;
              }

              /**
               * Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique
               * within scope of the parent resource.
               */
              public Create setCustomConnectorVersionId(java.lang.String customConnectorVersionId) {
                this.customConnectorVersionId = customConnectorVersionId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Gets details of a single CustomConnectorVersion.
             *
             * Create a request for the method "customConnectorVersions.get".
             *
             * This request holds the parameters needed by the connectors server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. Resource name of the form:
             *        `projects/locations/{location}/customConnectors/customConnectorVersions`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.CustomConnectorVersion> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/customConnectors/[^/]+/customConnectorVersions/[^/]+$");

              /**
               * Gets details of a single CustomConnectorVersion.
               *
               * Create a request for the method "customConnectorVersions.get".
               *
               * This request holds the parameters needed by the the connectors server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Resource name of the form:
             *        `projects/locations/{location}/customConnectors/customConnectorVersions`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.CustomConnectorVersion.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Resource name of the form:
               * `projects/locations/{location}/customConnectors/customConnectorVersions`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Resource name of the form:
             `projects/locations/{location}/customConnectors/customConnectorVersions`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Resource name of the form:
               * `projects/locations/{location}/customConnectors/customConnectorVersions`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/customConnectors/[^/]+/customConnectorVersions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * List CustomConnectorVersions in a given project
             *
             * Create a request for the method "customConnectorVersions.list".
             *
             * This request holds the parameters needed by the connectors server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Parent resource of the connectors, of the form:
             *        `projects/locations/{location}/customConnectors/customConnectorVersions`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListCustomConnectorVersionsResponse> {

              private static final String REST_PATH = "v1/{+parent}/customConnectorVersions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/customConnectors/[^/]+$");

              /**
               * List CustomConnectorVersions in a given project
               *
               * Create a request for the method "customConnectorVersions.list".
               *
               * This request holds the parameters needed by the the connectors server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Parent resource of the connectors, of the form:
             *        `projects/locations/{location}/customConnectors/customConnectorVersions`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListCustomConnectorVersionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Parent resource of the connectors, of the form:
               * `projects/locations/{location}/customConnectors/customConnectorVersions`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Parent resource of the connectors, of the form:
             `projects/locations/{location}/customConnectors/customConnectorVersions`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Parent resource of the connectors, of the form:
               * `projects/locations/{location}/customConnectors/customConnectorVersions`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/customConnectors/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** Page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** Page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** Page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the ManagedZones collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Connectors connectors = new Connectors(...);}
         *   {@code Connectors.ManagedZones.List request = connectors.managedZones().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public ManagedZones managedZones() {
          return new ManagedZones();
        }

        /**
         * The "managedZones" collection of methods.
         */
        public class ManagedZones {

          /**
           * Creates a new ManagedZone in a given project and location.
           *
           * Create a request for the method "managedZones.create".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of the ManagedZone, of the form: `projects/locations/global`
           * @param content the {@link com.google.api.services.connectors.v1.model.ManagedZone}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.connectors.v1.model.ManagedZone content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+parent}/managedZones";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global$");

            /**
             * Creates a new ManagedZone in a given project and location.
             *
             * Create a request for the method "managedZones.create".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of the ManagedZone, of the form: `projects/locations/global`
             * @param content the {@link com.google.api.services.connectors.v1.model.ManagedZone}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.connectors.v1.model.ManagedZone content) {
              super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of the ManagedZone, of the form:
             * `projects/locations/global`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of the ManagedZone, of the form: `projects/locations/global`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of the ManagedZone, of the form:
             * `projects/locations/global`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. Identifier to assign to the ManagedZone. Must be unique within scope of the
             * parent resource.
             */
            @com.google.api.client.util.Key
            private java.lang.String managedZoneId;

            /** Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent
           resource.
             */
            public java.lang.String getManagedZoneId() {
              return managedZoneId;
            }

            /**
             * Required. Identifier to assign to the ManagedZone. Must be unique within scope of the
             * parent resource.
             */
            public Create setManagedZoneId(java.lang.String managedZoneId) {
              this.managedZoneId = managedZoneId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single ManagedZone.
           *
           * Create a request for the method "managedZones.delete".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/locations/global/managedZones`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/managedZones/[^/]+$");

            /**
             * Deletes a single ManagedZone.
             *
             * Create a request for the method "managedZones.delete".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/locations/global/managedZones`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Connectors.this, "DELETE", REST_PATH, null, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/managedZones/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Resource name of the form: `projects/locations/global/managedZones` */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/locations/global/managedZones`
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Resource name of the form: `projects/locations/global/managedZones` */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/managedZones/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single ManagedZone.
           *
           * Create a request for the method "managedZones.get".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/locations/global/managedZones`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ManagedZone> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/managedZones/[^/]+$");

            /**
             * Gets details of a single ManagedZone.
             *
             * Create a request for the method "managedZones.get".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/locations/global/managedZones`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ManagedZone.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/managedZones/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Resource name of the form: `projects/locations/global/managedZones` */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/locations/global/managedZones`
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Resource name of the form: `projects/locations/global/managedZones` */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/managedZones/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * List ManagedZones in a given project
           *
           * Create a request for the method "managedZones.list".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of the Managed Zone, of the form: `projects/locations/global`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListManagedZonesResponse> {

            private static final String REST_PATH = "v1/{+parent}/managedZones";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global$");

            /**
             * List ManagedZones in a given project
             *
             * Create a request for the method "managedZones.list".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of the Managed Zone, of the form: `projects/locations/global`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListManagedZonesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of the Managed Zone, of the form:
             * `projects/locations/global`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of the Managed Zone, of the form: `projects/locations/global`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of the Managed Zone, of the form:
             * `projects/locations/global`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
              this.parent = parent;
              return this;
            }

            /** Filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Order by parameters. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Order by parameters.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Order by parameters. */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** Page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the parameters of a single ManagedZone.
           *
           * Create a request for the method "managedZones.patch".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Resource name of the Managed Zone. Format:
           *        projects/{project}/locations/global/managedZones/{managed_zone}
           * @param content the {@link com.google.api.services.connectors.v1.model.ManagedZone}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.connectors.v1.model.ManagedZone content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/managedZones/[^/]+$");

            /**
             * Updates the parameters of a single ManagedZone.
             *
             * Create a request for the method "managedZones.patch".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Resource name of the Managed Zone. Format:
           *        projects/{project}/locations/global/managedZones/{managed_zone}
             * @param content the {@link com.google.api.services.connectors.v1.model.ManagedZone}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.connectors.v1.model.ManagedZone content) {
              super(Connectors.this, "PATCH", REST_PATH, content, com.google.api.services.connectors.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/managedZones/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. Resource name of the Managed Zone. Format:
             * projects/{project}/locations/global/managedZones/{managed_zone}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Resource name of the Managed Zone. Format:
           projects/{project}/locations/global/managedZones/{managed_zone}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. Resource name of the Managed Zone. Format:
             * projects/{project}/locations/global/managedZones/{managed_zone}
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/managedZones/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. The list of fields to update. Fields are specified relative to the
             * managedZone. A field will be overwritten if it is in the mask. You can modify only
             * the fields listed below. To update the managedZone details: * `description` *
             * `labels` * `target_project` * `target_network`
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The list of fields to update. Fields are specified relative to the managedZone. A field
           will be overwritten if it is in the mask. You can modify only the fields listed below. To update
           the managedZone details: * `description` * `labels` * `target_project` * `target_network`
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. The list of fields to update. Fields are specified relative to the
             * managedZone. A field will be overwritten if it is in the mask. You can modify only
             * the fields listed below. To update the managedZone details: * `description` *
             * `labels` * `target_project` * `target_network`
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Connectors connectors = new Connectors(...);}
       *   {@code Connectors.Operations.List request = connectors.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.connectors.v1.model.CancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.connectors.v1.model.CancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.connectors.v1.model.CancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.connectors.v1.model.CancelOperationRequest content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Connectors.this, "DELETE", REST_PATH, null, com.google.api.services.connectors.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Providers collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Connectors connectors = new Connectors(...);}
       *   {@code Connectors.Providers.List request = connectors.providers().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Providers providers() {
        return new Providers();
      }

      /**
       * The "providers" collection of methods.
       */
      public class Providers {

        /**
         * Gets details of a provider.
         *
         * Create a request for the method "providers.get".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the form: `projects/locations/providers` Only global location is
         *        supported for Provider resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Provider> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+$");

          /**
           * Gets details of a provider.
           *
           * Create a request for the method "providers.get".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the form: `projects/locations/providers` Only global location is
         *        supported for Provider resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Provider.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name of the form: `projects/locations/providers` Only global
           * location is supported for Provider resource.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the form: `projects/locations/providers` Only global location is
         supported for Provider resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name of the form: `projects/locations/providers` Only global
           * location is supported for Provider resource.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "providers.getIamPolicy".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "providers.getIamPolicy".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists Providers in a given project and location.
         *
         * Create a request for the method "providers.list".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent resource of the API, of the form: `projects/locations` Only global location is
         *        supported for Provider resource.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListProvidersResponse> {

          private static final String REST_PATH = "v1/{+parent}/providers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Providers in a given project and location.
           *
           * Create a request for the method "providers.list".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent resource of the API, of the form: `projects/locations` Only global location is
         *        supported for Provider resource.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListProvidersResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Parent resource of the API, of the form: `projects/locations` Only global
           * location is supported for Provider resource.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent resource of the API, of the form: `projects/locations` Only global location is
         supported for Provider resource.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Parent resource of the API, of the form: `projects/locations` Only global
           * location is supported for Provider resource.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "providers.setIamPolicy".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.connectors.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.connectors.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "providers.setIamPolicy".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.connectors.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.connectors.v1.model.SetIamPolicyRequest content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "providers.testIamPermissions".
         *
         * This request holds the parameters needed by the connectors server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.connectors.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.connectors.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends ConnectorsRequest<com.google.api.services.connectors.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "providers.testIamPermissions".
           *
           * This request holds the parameters needed by the the connectors server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.connectors.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.connectors.v1.model.TestIamPermissionsRequest content) {
            super(Connectors.this, "POST", REST_PATH, content, com.google.api.services.connectors.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the ConnectorsOperations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Connectors connectors = new Connectors(...);}
         *   {@code Connectors.ConnectorsOperations.List request = connectors.connectors().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public ConnectorsOperations connectors() {
          return new ConnectorsOperations();
        }

        /**
         * The "connectors" collection of methods.
         */
        public class ConnectorsOperations {

          /**
           * Gets details of a single Connector.
           *
           * Create a request for the method "connectors.get".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the form: `projects/locations/providers/connectors` Only global location
           *        is supported for Connector resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.Connector> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$");

            /**
             * Gets details of a single Connector.
             *
             * Create a request for the method "connectors.get".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the form: `projects/locations/providers/connectors` Only global location
           *        is supported for Connector resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.Connector.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the form: `projects/locations/providers/connectors` Only
             * global location is supported for Connector resource.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the form: `projects/locations/providers/connectors` Only global location
           is supported for Connector resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the form: `projects/locations/providers/connectors` Only
             * global location is supported for Connector resource.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists Connectors in a given project and location.
           *
           * Create a request for the method "connectors.list".
           *
           * This request holds the parameters needed by the connectors server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of the connectors, of the form: `projects/locations/providers` Only global
           *        location is supported for Connector resource.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListConnectorsResponse> {

            private static final String REST_PATH = "v1/{+parent}/connectors";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+$");

            /**
             * Lists Connectors in a given project and location.
             *
             * Create a request for the method "connectors.list".
             *
             * This request holds the parameters needed by the the connectors server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of the connectors, of the form: `projects/locations/providers` Only global
           *        location is supported for Connector resource.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListConnectorsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of the connectors, of the form:
             * `projects/locations/providers` Only global location is supported for Connector
             * resource.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of the connectors, of the form: `projects/locations/providers` Only
           global location is supported for Connector resource.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of the connectors, of the form:
             * `projects/locations/providers` Only global location is supported for Connector
             * resource.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/providers/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Filter string. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Filter string.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Filter string. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Versions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Connectors connectors = new Connectors(...);}
           *   {@code Connectors.Versions.List request = connectors.versions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Versions versions() {
            return new Versions();
          }

          /**
           * The "versions" collection of methods.
           */
          public class Versions {

            /**
             * fetch and return the list of auth config variables required to override the connection backend
             * auth.
             *
             * Create a request for the method "versions.fetchAuthSchema".
             *
             * This request holds the parameters needed by the connectors server.  After setting any optional
             * parameters, call the {@link FetchAuthSchema#execute()} method to invoke the remote operation.
             *
             * @param name Required. Parent resource of the Connector Version, of the form:
             *        `projects/locations/providers/connectors/versions`
             * @return the request
             */
            public FetchAuthSchema fetchAuthSchema(java.lang.String name) throws java.io.IOException {
              FetchAuthSchema result = new FetchAuthSchema(name);
              initialize(result);
              return result;
            }

            public class FetchAuthSchema extends ConnectorsRequest<com.google.api.services.connectors.v1.model.FetchAuthSchemaResponse> {

              private static final String REST_PATH = "v1/{+name}:fetchAuthSchema";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$");

              /**
               * fetch and return the list of auth config variables required to override the connection backend
               * auth.
               *
               * Create a request for the method "versions.fetchAuthSchema".
               *
               * This request holds the parameters needed by the the connectors server.  After setting any
               * optional parameters, call the {@link FetchAuthSchema#execute()} method to invoke the remote
               * operation. <p> {@link FetchAuthSchema#initialize(com.google.api.client.googleapis.services.Abst
               * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param name Required. Parent resource of the Connector Version, of the form:
             *        `projects/locations/providers/connectors/versions`
               * @since 1.13
               */
              protected FetchAuthSchema(java.lang.String name) {
                super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.FetchAuthSchemaResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public FetchAuthSchema set$Xgafv(java.lang.String $Xgafv) {
                return (FetchAuthSchema) super.set$Xgafv($Xgafv);
              }

              @Override
              public FetchAuthSchema setAccessToken(java.lang.String accessToken) {
                return (FetchAuthSchema) super.setAccessToken(accessToken);
              }

              @Override
              public FetchAuthSchema setAlt(java.lang.String alt) {
                return (FetchAuthSchema) super.setAlt(alt);
              }

              @Override
              public FetchAuthSchema setCallback(java.lang.String callback) {
                return (FetchAuthSchema) super.setCallback(callback);
              }

              @Override
              public FetchAuthSchema setFields(java.lang.String fields) {
                return (FetchAuthSchema) super.setFields(fields);
              }

              @Override
              public FetchAuthSchema setKey(java.lang.String key) {
                return (FetchAuthSchema) super.setKey(key);
              }

              @Override
              public FetchAuthSchema setOauthToken(java.lang.String oauthToken) {
                return (FetchAuthSchema) super.setOauthToken(oauthToken);
              }

              @Override
              public FetchAuthSchema setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (FetchAuthSchema) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public FetchAuthSchema setQuotaUser(java.lang.String quotaUser) {
                return (FetchAuthSchema) super.setQuotaUser(quotaUser);
              }

              @Override
              public FetchAuthSchema setUploadType(java.lang.String uploadType) {
                return (FetchAuthSchema) super.setUploadType(uploadType);
              }

              @Override
              public FetchAuthSchema setUploadProtocol(java.lang.String uploadProtocol) {
                return (FetchAuthSchema) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Parent resource of the Connector Version, of the form:
               * `projects/locations/providers/connectors/versions`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Parent resource of the Connector Version, of the form:
             `projects/locations/providers/connectors/versions`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Parent resource of the Connector Version, of the form:
               * `projects/locations/providers/connectors/versions`
               */
              public FetchAuthSchema setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** Optional. View of the AuthSchema. The default value is BASIC. */
              @com.google.api.client.util.Key
              private java.lang.String view;

              /** Optional. View of the AuthSchema. The default value is BASIC.
               */
              public java.lang.String getView() {
                return view;
              }

              /** Optional. View of the AuthSchema. The default value is BASIC. */
              public FetchAuthSchema setView(java.lang.String view) {
                this.view = view;
                return this;
              }

              @Override
              public FetchAuthSchema set(String parameterName, Object value) {
                return (FetchAuthSchema) super.set(parameterName, value);
              }
            }
            /**
             * Gets details of a single connector version.
             *
             * Create a request for the method "versions.get".
             *
             * This request holds the parameters needed by the connectors server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. Resource name of the form: `projects/locations/providers/connectors/versions` Only global
             *        location is supported for ConnectorVersion resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ConnectorVersion> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$");

              /**
               * Gets details of a single connector version.
               *
               * Create a request for the method "versions.get".
               *
               * This request holds the parameters needed by the the connectors server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Resource name of the form: `projects/locations/providers/connectors/versions` Only global
             *        location is supported for ConnectorVersion resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ConnectorVersion.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Resource name of the form:
               * `projects/locations/providers/connectors/versions` Only global location is
               * supported for ConnectorVersion resource.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Resource name of the form: `projects/locations/providers/connectors/versions` Only global
             location is supported for ConnectorVersion resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Resource name of the form:
               * `projects/locations/providers/connectors/versions` Only global location is
               * supported for ConnectorVersion resource.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Specifies which fields of the ConnectorVersion are returned in the response.
               * Defaults to `CUSTOMER` view.
               */
              @com.google.api.client.util.Key
              private java.lang.String view;

              /** Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `CUSTOMER`
             view.
               */
              public java.lang.String getView() {
                return view;
              }

              /**
               * Specifies which fields of the ConnectorVersion are returned in the response.
               * Defaults to `CUSTOMER` view.
               */
              public Get setView(java.lang.String view) {
                this.view = view;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists Connector Versions in a given project and location.
             *
             * Create a request for the method "versions.list".
             *
             * This request holds the parameters needed by the connectors server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Parent resource of the connectors, of the form: `projects/locations/providers/connectors`
             *        Only global location is supported for ConnectorVersion resource.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListConnectorVersionsResponse> {

              private static final String REST_PATH = "v1/{+parent}/versions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$");

              /**
               * Lists Connector Versions in a given project and location.
               *
               * Create a request for the method "versions.list".
               *
               * This request holds the parameters needed by the the connectors server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Parent resource of the connectors, of the form: `projects/locations/providers/connectors`
             *        Only global location is supported for ConnectorVersion resource.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListConnectorVersionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Parent resource of the connectors, of the form:
               * `projects/locations/providers/connectors` Only global location is supported for
               * ConnectorVersion resource.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Parent resource of the connectors, of the form: `projects/locations/providers/connectors`
             Only global location is supported for ConnectorVersion resource.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. Parent resource of the connectors, of the form:
               * `projects/locations/providers/connectors` Only global location is supported for
               * ConnectorVersion resource.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Page size. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Page size.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** Page size. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** Page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** Page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /**
               * Specifies which fields of the ConnectorVersion are returned in the response.
               * Defaults to `BASIC` view.
               */
              @com.google.api.client.util.Key
              private java.lang.String view;

              /** Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `BASIC`
             view.
               */
              public java.lang.String getView() {
                return view;
              }

              /**
               * Specifies which fields of the ConnectorVersion are returned in the response.
               * Defaults to `BASIC` view.
               */
              public List setView(java.lang.String view) {
                this.view = view;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Eventtypes collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Connectors connectors = new Connectors(...);}
             *   {@code Connectors.Eventtypes.List request = connectors.eventtypes().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Eventtypes eventtypes() {
              return new Eventtypes();
            }

            /**
             * The "eventtypes" collection of methods.
             */
            public class Eventtypes {

              /**
               * Gets details of a single event type.
               *
               * Create a request for the method "eventtypes.get".
               *
               * This request holds the parameters needed by the connectors server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. Resource name of the form: `projects/locations/providers/connectors/versions/eventtypes`
               *        Only global location is supported for EventType resource.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends ConnectorsRequest<com.google.api.services.connectors.v1.model.EventType> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+/eventtypes/[^/]+$");

                /**
                 * Gets details of a single event type.
                 *
                 * Create a request for the method "eventtypes.get".
                 *
                 * This request holds the parameters needed by the the connectors server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. Resource name of the form: `projects/locations/providers/connectors/versions/eventtypes`
               *        Only global location is supported for EventType resource.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.EventType.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+/eventtypes/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. Resource name of the form:
                 * `projects/locations/providers/connectors/versions/eventtypes` Only global
                 * location is supported for EventType resource.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. Resource name of the form: `projects/locations/providers/connectors/versions/eventtypes`
               Only global location is supported for EventType resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. Resource name of the form:
                 * `projects/locations/providers/connectors/versions/eventtypes` Only global
                 * location is supported for EventType resource.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+/eventtypes/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists Event Types in a given Connector Version.
               *
               * Create a request for the method "eventtypes.list".
               *
               * This request holds the parameters needed by the connectors server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. Parent resource of the connectors, of the form:
               *        `projects/locations/providers/connectors/versions` Only global location is supported for
               *        EventType resource.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends ConnectorsRequest<com.google.api.services.connectors.v1.model.ListEventTypesResponse> {

                private static final String REST_PATH = "v1/{+parent}/eventtypes";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$");

                /**
                 * Lists Event Types in a given Connector Version.
                 *
                 * Create a request for the method "eventtypes.list".
                 *
                 * This request holds the parameters needed by the the connectors server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. Parent resource of the connectors, of the form:
               *        `projects/locations/providers/connectors/versions` Only global location is supported for
               *        EventType resource.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Connectors.this, "GET", REST_PATH, null, com.google.api.services.connectors.v1.model.ListEventTypesResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. Parent resource of the connectors, of the form:
                 * `projects/locations/providers/connectors/versions` Only global location is
                 * supported for EventType resource.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. Parent resource of the connectors, of the form:
               `projects/locations/providers/connectors/versions` Only global location is supported for EventType
               resource.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. Parent resource of the connectors, of the form:
                 * `projects/locations/providers/connectors/versions` Only global location is
                 * supported for EventType resource.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /** Page size. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** Page size.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** Page size. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** Page token. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** Page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** Page token. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
          }
        }
      }
    }
  }

  /**
   * Builder for {@link Connectors}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Connectors}. */
    @Override
    public Connectors build() {
      return new Connectors(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ConnectorsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setConnectorsRequestInitializer(
        ConnectorsRequestInitializer connectorsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(connectorsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
