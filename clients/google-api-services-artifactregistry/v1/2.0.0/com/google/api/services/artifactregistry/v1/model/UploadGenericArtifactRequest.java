/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.artifactregistry.v1.model;

/**
 * The request to upload a generic artifact. The created GenericArtifact will have the resource name
 * {parent}/genericArtifacts/package_id:version_id. The created file will have the resource name
 * {parent}/files/package_id:version_id:filename.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Artifact Registry API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UploadGenericArtifactRequest extends com.google.api.client.json.GenericJson {

  /**
   * The name of the file of the generic artifact to be uploaded. E.g. `example-file.zip` The
   * filename is limited to letters, numbers, and url safe characters, i.e. [a-zA-Z0-9-_.~@].
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filename;

  /**
   * The ID of the package of the generic artifact. If the package does not exist, a new package
   * will be created. The `package_id` should start and end with a letter or number, only contain
   * letters, numbers, hyphens, underscores, and periods, and not exceed 256 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String packageId;

  /**
   * The ID of the version of the generic artifact. If the version does not exist, a new version
   * will be created. The version_id must start and end with a letter or number, can only contain
   * lowercase letters, numbers, hyphens and periods, i.e. [a-z0-9-.] and cannot exceed a total of
   * 128 characters. Creating a version called `latest` is not allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String versionId;

  /**
   * The name of the file of the generic artifact to be uploaded. E.g. `example-file.zip` The
   * filename is limited to letters, numbers, and url safe characters, i.e. [a-zA-Z0-9-_.~@].
   * @return value or {@code null} for none
   */
  public java.lang.String getFilename() {
    return filename;
  }

  /**
   * The name of the file of the generic artifact to be uploaded. E.g. `example-file.zip` The
   * filename is limited to letters, numbers, and url safe characters, i.e. [a-zA-Z0-9-_.~@].
   * @param filename filename or {@code null} for none
   */
  public UploadGenericArtifactRequest setFilename(java.lang.String filename) {
    this.filename = filename;
    return this;
  }

  /**
   * The ID of the package of the generic artifact. If the package does not exist, a new package
   * will be created. The `package_id` should start and end with a letter or number, only contain
   * letters, numbers, hyphens, underscores, and periods, and not exceed 256 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getPackageId() {
    return packageId;
  }

  /**
   * The ID of the package of the generic artifact. If the package does not exist, a new package
   * will be created. The `package_id` should start and end with a letter or number, only contain
   * letters, numbers, hyphens, underscores, and periods, and not exceed 256 characters.
   * @param packageId packageId or {@code null} for none
   */
  public UploadGenericArtifactRequest setPackageId(java.lang.String packageId) {
    this.packageId = packageId;
    return this;
  }

  /**
   * The ID of the version of the generic artifact. If the version does not exist, a new version
   * will be created. The version_id must start and end with a letter or number, can only contain
   * lowercase letters, numbers, hyphens and periods, i.e. [a-z0-9-.] and cannot exceed a total of
   * 128 characters. Creating a version called `latest` is not allowed.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersionId() {
    return versionId;
  }

  /**
   * The ID of the version of the generic artifact. If the version does not exist, a new version
   * will be created. The version_id must start and end with a letter or number, can only contain
   * lowercase letters, numbers, hyphens and periods, i.e. [a-z0-9-.] and cannot exceed a total of
   * 128 characters. Creating a version called `latest` is not allowed.
   * @param versionId versionId or {@code null} for none
   */
  public UploadGenericArtifactRequest setVersionId(java.lang.String versionId) {
    this.versionId = versionId;
    return this;
  }

  @Override
  public UploadGenericArtifactRequest set(String fieldName, Object value) {
    return (UploadGenericArtifactRequest) super.set(fieldName, value);
  }

  @Override
  public UploadGenericArtifactRequest clone() {
    return (UploadGenericArtifactRequest) super.clone();
  }

}
