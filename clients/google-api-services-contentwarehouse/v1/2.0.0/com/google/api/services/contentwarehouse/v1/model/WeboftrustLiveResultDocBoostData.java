/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Page boosting using Live Results data. Attaching this proto to a document indicates that a Live
 * Result feed exists for that document, and that this feed has sufficient reliability to warrant
 * potential boosting of the document rank. Next ID: 3
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WeboftrustLiveResultDocBoostData extends com.google.api.client.json.GenericJson {

  /**
   * Identifies the degree to which the existence of this LiveResult should boost a query's score
   * (when the query is performed within the hot_times range). This field is always in the range
   * [0,1]. A missing field, a value of 0, or a value outside the legal range indicates that no
   * boosting is performed. A value of 1 indicates that the maximum level of boosting will be
   * applied. This field will be updated from time to time based on CTR and other signals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float boostLevel;

  /**
   * Specifies the time range within which this LiveResult is relevant. Used for deciding whether
   * the rank of the corresponding page should be boosted. For example, this range can be set to
   * encompass a few days before and after a sports game to which the page refers. If this field is
   * missing, no boosting is performed. Specifying that a page should always be boosted is not
   * recommended, but can be accomplished by setting hot_times.start_unix_time=0 and
   * hot_time.end_unix_time=0x7fffffff. Note that multiple time ranges can be implemented by adding
   * several LiveResultDocBoostData messages to the LiveResultsDocAttachments proto. If overlapping
   * time ranges are used, the proto containing the highest boost level will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WeboftrustTimeRange hotTimes;

  /**
   * Identifies the degree to which the existence of this LiveResult should boost a query's score
   * (when the query is performed within the hot_times range). This field is always in the range
   * [0,1]. A missing field, a value of 0, or a value outside the legal range indicates that no
   * boosting is performed. A value of 1 indicates that the maximum level of boosting will be
   * applied. This field will be updated from time to time based on CTR and other signals.
   * @return value or {@code null} for none
   */
  public java.lang.Float getBoostLevel() {
    return boostLevel;
  }

  /**
   * Identifies the degree to which the existence of this LiveResult should boost a query's score
   * (when the query is performed within the hot_times range). This field is always in the range
   * [0,1]. A missing field, a value of 0, or a value outside the legal range indicates that no
   * boosting is performed. A value of 1 indicates that the maximum level of boosting will be
   * applied. This field will be updated from time to time based on CTR and other signals.
   * @param boostLevel boostLevel or {@code null} for none
   */
  public WeboftrustLiveResultDocBoostData setBoostLevel(java.lang.Float boostLevel) {
    this.boostLevel = boostLevel;
    return this;
  }

  /**
   * Specifies the time range within which this LiveResult is relevant. Used for deciding whether
   * the rank of the corresponding page should be boosted. For example, this range can be set to
   * encompass a few days before and after a sports game to which the page refers. If this field is
   * missing, no boosting is performed. Specifying that a page should always be boosted is not
   * recommended, but can be accomplished by setting hot_times.start_unix_time=0 and
   * hot_time.end_unix_time=0x7fffffff. Note that multiple time ranges can be implemented by adding
   * several LiveResultDocBoostData messages to the LiveResultsDocAttachments proto. If overlapping
   * time ranges are used, the proto containing the highest boost level will be used.
   * @return value or {@code null} for none
   */
  public WeboftrustTimeRange getHotTimes() {
    return hotTimes;
  }

  /**
   * Specifies the time range within which this LiveResult is relevant. Used for deciding whether
   * the rank of the corresponding page should be boosted. For example, this range can be set to
   * encompass a few days before and after a sports game to which the page refers. If this field is
   * missing, no boosting is performed. Specifying that a page should always be boosted is not
   * recommended, but can be accomplished by setting hot_times.start_unix_time=0 and
   * hot_time.end_unix_time=0x7fffffff. Note that multiple time ranges can be implemented by adding
   * several LiveResultDocBoostData messages to the LiveResultsDocAttachments proto. If overlapping
   * time ranges are used, the proto containing the highest boost level will be used.
   * @param hotTimes hotTimes or {@code null} for none
   */
  public WeboftrustLiveResultDocBoostData setHotTimes(WeboftrustTimeRange hotTimes) {
    this.hotTimes = hotTimes;
    return this;
  }

  @Override
  public WeboftrustLiveResultDocBoostData set(String fieldName, Object value) {
    return (WeboftrustLiveResultDocBoostData) super.set(fieldName, value);
  }

  @Override
  public WeboftrustLiveResultDocBoostData clone() {
    return (WeboftrustLiveResultDocBoostData) super.clone();
  }

}
