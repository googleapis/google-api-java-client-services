/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.webrisk.v1;

/**
 * Service definition for WebRisk (v1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/web-risk/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link WebRiskRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class WebRisk extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Web Risk API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://webrisk.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://webrisk.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public WebRisk(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  WebRisk(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Hashes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code WebRisk webrisk = new WebRisk(...);}
   *   {@code WebRisk.Hashes.List request = webrisk.hashes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Hashes hashes() {
    return new Hashes();
  }

  /**
   * The "hashes" collection of methods.
   */
  public class Hashes {

    /**
     * Gets the full hashes that match the requested hash prefix. This is used after a hash prefix is
     * looked up in a threatList and there is a match. The client side threatList only holds partial
     * hashes so the client must query this method to determine if there is a full hash match of a
     * threat.
     *
     * Create a request for the method "hashes.search".
     *
     * This request holds the parameters needed by the webrisk server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Search search() throws java.io.IOException {
      Search result = new Search();
      initialize(result);
      return result;
    }

    public class Search extends WebRiskRequest<com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1SearchHashesResponse> {

      private static final String REST_PATH = "v1/hashes:search";

      /**
       * Gets the full hashes that match the requested hash prefix. This is used after a hash prefix is
       * looked up in a threatList and there is a match. The client side threatList only holds partial
       * hashes so the client must query this method to determine if there is a full hash match of a
       * threat.
       *
       * Create a request for the method "hashes.search".
       *
       * This request holds the parameters needed by the the webrisk server.  After setting any optional
       * parameters, call the {@link Search#execute()} method to invoke the remote operation. <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Search() {
        super(WebRisk.this, "GET", REST_PATH, null, com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1SearchHashesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Search set$Xgafv(java.lang.String $Xgafv) {
        return (Search) super.set$Xgafv($Xgafv);
      }

      @Override
      public Search setAccessToken(java.lang.String accessToken) {
        return (Search) super.setAccessToken(accessToken);
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setCallback(java.lang.String callback) {
        return (Search) super.setCallback(callback);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUploadType(java.lang.String uploadType) {
        return (Search) super.setUploadType(uploadType);
      }

      @Override
      public Search setUploadProtocol(java.lang.String uploadProtocol) {
        return (Search) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. For JSON
       * requests, this field is base64-encoded. Note that if this parameter is provided by a URI,
       * it must be encoded using the web safe base64 variant (RFC 4648).
       */
      @com.google.api.client.util.Key
      private java.lang.String hashPrefix;

      /** A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. For JSON requests,
     this field is base64-encoded. Note that if this parameter is provided by a URI, it must be encoded
     using the web safe base64 variant (RFC 4648).
       */
      public java.lang.String getHashPrefix() {
        return hashPrefix;
      }

      /**
       * A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. For JSON
       * requests, this field is base64-encoded. Note that if this parameter is provided by a URI,
       * it must be encoded using the web safe base64 variant (RFC 4648).
       */
      public Search setHashPrefix(java.lang.String hashPrefix) {
        this.hashPrefix = hashPrefix;
        return this;
      }

      /** Required. The ThreatLists to search in. Multiple ThreatLists may be specified. */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> threatTypes;

      /** Required. The ThreatLists to search in. Multiple ThreatLists may be specified.
       */
      public java.util.List<java.lang.String> getThreatTypes() {
        return threatTypes;
      }

      /** Required. The ThreatLists to search in. Multiple ThreatLists may be specified. */
      public Search setThreatTypes(java.util.List<java.lang.String> threatTypes) {
        this.threatTypes = threatTypes;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code WebRisk webrisk = new WebRisk(...);}
   *   {@code WebRisk.Projects.List request = webrisk.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code WebRisk webrisk = new WebRisk(...);}
     *   {@code WebRisk.Operations.List request = webrisk.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
       * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
       * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
       * methods to check whether the cancellation succeeded or whether the operation completed despite
       * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
       * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
       * `Code.CANCELLED`.
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the webrisk server.  After setting any optional
       * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be cancelled.
       * @param content the {@link com.google.api.services.webrisk.v1.model.GoogleLongrunningCancelOperationRequest}
       * @return the request
       */
      public Cancel cancel(java.lang.String name, com.google.api.services.webrisk.v1.model.GoogleLongrunningCancelOperationRequest content) throws java.io.IOException {
        Cancel result = new Cancel(name, content);
        initialize(result);
        return result;
      }

      public class Cancel extends WebRiskRequest<com.google.api.services.webrisk.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}:cancel";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the the webrisk server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation. <p> {@link
         * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.webrisk.v1.model.GoogleLongrunningCancelOperationRequest}
         * @since 1.13
         */
        protected Cancel(java.lang.String name, com.google.api.services.webrisk.v1.model.GoogleLongrunningCancelOperationRequest content) {
          super(WebRisk.this, "POST", REST_PATH, content, com.google.api.services.webrisk.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Cancel set$Xgafv(java.lang.String $Xgafv) {
          return (Cancel) super.set$Xgafv($Xgafv);
        }

        @Override
        public Cancel setAccessToken(java.lang.String accessToken) {
          return (Cancel) super.setAccessToken(accessToken);
        }

        @Override
        public Cancel setAlt(java.lang.String alt) {
          return (Cancel) super.setAlt(alt);
        }

        @Override
        public Cancel setCallback(java.lang.String callback) {
          return (Cancel) super.setCallback(callback);
        }

        @Override
        public Cancel setFields(java.lang.String fields) {
          return (Cancel) super.setFields(fields);
        }

        @Override
        public Cancel setKey(java.lang.String key) {
          return (Cancel) super.setKey(key);
        }

        @Override
        public Cancel setOauthToken(java.lang.String oauthToken) {
          return (Cancel) super.setOauthToken(oauthToken);
        }

        @Override
        public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Cancel) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Cancel setQuotaUser(java.lang.String quotaUser) {
          return (Cancel) super.setQuotaUser(quotaUser);
        }

        @Override
        public Cancel setUploadType(java.lang.String uploadType) {
          return (Cancel) super.setUploadType(uploadType);
        }

        @Override
        public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
          return (Cancel) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be cancelled. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be cancelled.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be cancelled. */
        public Cancel setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Cancel set(String parameterName, Object value) {
          return (Cancel) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a long-running operation. This method indicates that the client is no longer interested
       * in the operation result. It does not cancel the operation. If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.delete".
       *
       * This request holds the parameters needed by the webrisk server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be deleted.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends WebRiskRequest<com.google.api.services.webrisk.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the the webrisk server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be deleted.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(WebRisk.this, "DELETE", REST_PATH, null, com.google.api.services.webrisk.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be deleted. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be deleted.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be deleted. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the webrisk server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends WebRiskRequest<com.google.api.services.webrisk.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the webrisk server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(WebRisk.this, "GET", REST_PATH, null, com.google.api.services.webrisk.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the webrisk server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends WebRiskRequest<com.google.api.services.webrisk.v1.model.GoogleLongrunningListOperationsResponse> {

        private static final String REST_PATH = "v1/{+name}/operations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the the webrisk server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(WebRisk.this, "GET", REST_PATH, null, com.google.api.services.webrisk.v1.model.GoogleLongrunningListOperationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation's parent resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation's parent resource. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Submissions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code WebRisk webrisk = new WebRisk(...);}
     *   {@code WebRisk.Submissions.List request = webrisk.submissions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Submissions submissions() {
      return new Submissions();
    }

    /**
     * The "submissions" collection of methods.
     */
    public class Submissions {

      /**
       * Creates a Submission of a URI suspected of containing phishing content to be reviewed. If the
       * result verifies the existence of malicious phishing content, the site will be added to the
       * [Google's Social Engineering lists](https://support.google.com/webmasters/answer/6350487/) in
       * order to protect users that could get exposed to this threat in the future. Only allowlisted
       * projects can use this method during Early Access. Please reach out to Sales or your customer
       * engineer to obtain access.
       *
       * Create a request for the method "submissions.create".
       *
       * This request holds the parameters needed by the webrisk server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the project that is making the submission. This string is in the format
       *        "projects/{project_number}".
       * @param content the {@link com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1Submission}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1Submission content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends WebRiskRequest<com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1Submission> {

        private static final String REST_PATH = "v1/{+parent}/submissions";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a Submission of a URI suspected of containing phishing content to be reviewed. If the
         * result verifies the existence of malicious phishing content, the site will be added to the
         * [Google's Social Engineering lists](https://support.google.com/webmasters/answer/6350487/) in
         * order to protect users that could get exposed to this threat in the future. Only allowlisted
         * projects can use this method during Early Access. Please reach out to Sales or your customer
         * engineer to obtain access.
         *
         * Create a request for the method "submissions.create".
         *
         * This request holds the parameters needed by the the webrisk server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the project that is making the submission. This string is in the format
       *        "projects/{project_number}".
         * @param content the {@link com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1Submission}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1Submission content) {
          super(WebRisk.this, "POST", REST_PATH, content, com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1Submission.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the project that is making the submission. This string is in the
         * format "projects/{project_number}".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the project that is making the submission. This string is in the format
       "projects/{project_number}".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the project that is making the submission. This string is in the
         * format "projects/{project_number}".
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the ThreatLists collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code WebRisk webrisk = new WebRisk(...);}
   *   {@code WebRisk.ThreatLists.List request = webrisk.threatLists().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ThreatLists threatLists() {
    return new ThreatLists();
  }

  /**
   * The "threatLists" collection of methods.
   */
  public class ThreatLists {

    /**
     * Gets the most recent threat list diffs. These diffs should be applied to a local database of
     * hashes to keep it up-to-date. If the local database is empty or excessively out-of-date, a
     * complete snapshot of the database will be returned. This Method only updates a single ThreatList
     * at a time. To update multiple ThreatList databases, this method needs to be called once for each
     * list.
     *
     * Create a request for the method "threatLists.computeDiff".
     *
     * This request holds the parameters needed by the webrisk server.  After setting any optional
     * parameters, call the {@link ComputeDiff#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public ComputeDiff computeDiff() throws java.io.IOException {
      ComputeDiff result = new ComputeDiff();
      initialize(result);
      return result;
    }

    public class ComputeDiff extends WebRiskRequest<com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1ComputeThreatListDiffResponse> {

      private static final String REST_PATH = "v1/threatLists:computeDiff";

      /**
       * Gets the most recent threat list diffs. These diffs should be applied to a local database of
       * hashes to keep it up-to-date. If the local database is empty or excessively out-of-date, a
       * complete snapshot of the database will be returned. This Method only updates a single
       * ThreatList at a time. To update multiple ThreatList databases, this method needs to be called
       * once for each list.
       *
       * Create a request for the method "threatLists.computeDiff".
       *
       * This request holds the parameters needed by the the webrisk server.  After setting any optional
       * parameters, call the {@link ComputeDiff#execute()} method to invoke the remote operation. <p>
       * {@link
       * ComputeDiff#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected ComputeDiff() {
        super(WebRisk.this, "GET", REST_PATH, null, com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1ComputeThreatListDiffResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ComputeDiff set$Xgafv(java.lang.String $Xgafv) {
        return (ComputeDiff) super.set$Xgafv($Xgafv);
      }

      @Override
      public ComputeDiff setAccessToken(java.lang.String accessToken) {
        return (ComputeDiff) super.setAccessToken(accessToken);
      }

      @Override
      public ComputeDiff setAlt(java.lang.String alt) {
        return (ComputeDiff) super.setAlt(alt);
      }

      @Override
      public ComputeDiff setCallback(java.lang.String callback) {
        return (ComputeDiff) super.setCallback(callback);
      }

      @Override
      public ComputeDiff setFields(java.lang.String fields) {
        return (ComputeDiff) super.setFields(fields);
      }

      @Override
      public ComputeDiff setKey(java.lang.String key) {
        return (ComputeDiff) super.setKey(key);
      }

      @Override
      public ComputeDiff setOauthToken(java.lang.String oauthToken) {
        return (ComputeDiff) super.setOauthToken(oauthToken);
      }

      @Override
      public ComputeDiff setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ComputeDiff) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ComputeDiff setQuotaUser(java.lang.String quotaUser) {
        return (ComputeDiff) super.setQuotaUser(quotaUser);
      }

      @Override
      public ComputeDiff setUploadType(java.lang.String uploadType) {
        return (ComputeDiff) super.setUploadType(uploadType);
      }

      @Override
      public ComputeDiff setUploadProtocol(java.lang.String uploadProtocol) {
        return (ComputeDiff) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Sets the maximum number of entries that the client is willing to have in the local
       * database. This should be a power of 2 between 2**10 and 2**20. If zero, no database size
       * limit is set.
       */
      @com.google.api.client.util.Key("constraints.maxDatabaseEntries")
      private java.lang.Integer constraintsMaxDatabaseEntries;

      /** Sets the maximum number of entries that the client is willing to have in the local database. This
     should be a power of 2 between 2**10 and 2**20. If zero, no database size limit is set.
       */
      public java.lang.Integer getConstraintsMaxDatabaseEntries() {
        return constraintsMaxDatabaseEntries;
      }

      /**
       * Sets the maximum number of entries that the client is willing to have in the local
       * database. This should be a power of 2 between 2**10 and 2**20. If zero, no database size
       * limit is set.
       */
      public ComputeDiff setConstraintsMaxDatabaseEntries(java.lang.Integer constraintsMaxDatabaseEntries) {
        this.constraintsMaxDatabaseEntries = constraintsMaxDatabaseEntries;
        return this;
      }

      /**
       * The maximum size in number of entries. The diff will not contain more entries than this
       * value. This should be a power of 2 between 2**10 and 2**20. If zero, no diff size limit is
       * set.
       */
      @com.google.api.client.util.Key("constraints.maxDiffEntries")
      private java.lang.Integer constraintsMaxDiffEntries;

      /** The maximum size in number of entries. The diff will not contain more entries than this value. This
     should be a power of 2 between 2**10 and 2**20. If zero, no diff size limit is set.
       */
      public java.lang.Integer getConstraintsMaxDiffEntries() {
        return constraintsMaxDiffEntries;
      }

      /**
       * The maximum size in number of entries. The diff will not contain more entries than this
       * value. This should be a power of 2 between 2**10 and 2**20. If zero, no diff size limit is
       * set.
       */
      public ComputeDiff setConstraintsMaxDiffEntries(java.lang.Integer constraintsMaxDiffEntries) {
        this.constraintsMaxDiffEntries = constraintsMaxDiffEntries;
        return this;
      }

      /** The compression types supported by the client. */
      @com.google.api.client.util.Key("constraints.supportedCompressions")
      private java.util.List<java.lang.String> constraintsSupportedCompressions;

      /** The compression types supported by the client.
       */
      public java.util.List<java.lang.String> getConstraintsSupportedCompressions() {
        return constraintsSupportedCompressions;
      }

      /** The compression types supported by the client. */
      public ComputeDiff setConstraintsSupportedCompressions(java.util.List<java.lang.String> constraintsSupportedCompressions) {
        this.constraintsSupportedCompressions = constraintsSupportedCompressions;
        return this;
      }

      /**
       * Required. The threat list to update. Only a single ThreatType should be specified per
       * request. If you want to handle multiple ThreatTypes, you must make one request per
       * ThreatType.
       */
      @com.google.api.client.util.Key
      private java.lang.String threatType;

      /** Required. The threat list to update. Only a single ThreatType should be specified per request. If
     you want to handle multiple ThreatTypes, you must make one request per ThreatType.
       */
      public java.lang.String getThreatType() {
        return threatType;
      }

      /**
       * Required. The threat list to update. Only a single ThreatType should be specified per
       * request. If you want to handle multiple ThreatTypes, you must make one request per
       * ThreatType.
       */
      public ComputeDiff setThreatType(java.lang.String threatType) {
        this.threatType = threatType;
        return this;
      }

      /**
       * The current version token of the client for the requested list (the client version that was
       * received from the last successful diff). If the client does not have a version token (this
       * is the first time calling ComputeThreatListDiff), this may be left empty and a full
       * database snapshot will be returned.
       */
      @com.google.api.client.util.Key
      private java.lang.String versionToken;

      /** The current version token of the client for the requested list (the client version that was
     received from the last successful diff). If the client does not have a version token (this is the
     first time calling ComputeThreatListDiff), this may be left empty and a full database snapshot will
     be returned.
       */
      public java.lang.String getVersionToken() {
        return versionToken;
      }

      /**
       * The current version token of the client for the requested list (the client version that was
       * received from the last successful diff). If the client does not have a version token (this
       * is the first time calling ComputeThreatListDiff), this may be left empty and a full
       * database snapshot will be returned.
       */
      public ComputeDiff setVersionToken(java.lang.String versionToken) {
        this.versionToken = versionToken;
        return this;
      }

      @Override
      public ComputeDiff set(String parameterName, Object value) {
        return (ComputeDiff) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Uris collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code WebRisk webrisk = new WebRisk(...);}
   *   {@code WebRisk.Uris.List request = webrisk.uris().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Uris uris() {
    return new Uris();
  }

  /**
   * The "uris" collection of methods.
   */
  public class Uris {

    /**
     * This method is used to check whether a URI is on a given threatList. Multiple threatLists may be
     * searched in a single query. The response will list all requested threatLists the URI was found to
     * match. If the URI is not found on any of the requested ThreatList an empty response will be
     * returned.
     *
     * Create a request for the method "uris.search".
     *
     * This request holds the parameters needed by the webrisk server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Search search() throws java.io.IOException {
      Search result = new Search();
      initialize(result);
      return result;
    }

    public class Search extends WebRiskRequest<com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1SearchUrisResponse> {

      private static final String REST_PATH = "v1/uris:search";

      /**
       * This method is used to check whether a URI is on a given threatList. Multiple threatLists may
       * be searched in a single query. The response will list all requested threatLists the URI was
       * found to match. If the URI is not found on any of the requested ThreatList an empty response
       * will be returned.
       *
       * Create a request for the method "uris.search".
       *
       * This request holds the parameters needed by the the webrisk server.  After setting any optional
       * parameters, call the {@link Search#execute()} method to invoke the remote operation. <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Search() {
        super(WebRisk.this, "GET", REST_PATH, null, com.google.api.services.webrisk.v1.model.GoogleCloudWebriskV1SearchUrisResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Search set$Xgafv(java.lang.String $Xgafv) {
        return (Search) super.set$Xgafv($Xgafv);
      }

      @Override
      public Search setAccessToken(java.lang.String accessToken) {
        return (Search) super.setAccessToken(accessToken);
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setCallback(java.lang.String callback) {
        return (Search) super.setCallback(callback);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUploadType(java.lang.String uploadType) {
        return (Search) super.setUploadType(uploadType);
      }

      @Override
      public Search setUploadProtocol(java.lang.String uploadProtocol) {
        return (Search) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ThreatLists to search in. Multiple ThreatLists may be specified. */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> threatTypes;

      /** Required. The ThreatLists to search in. Multiple ThreatLists may be specified.
       */
      public java.util.List<java.lang.String> getThreatTypes() {
        return threatTypes;
      }

      /** Required. The ThreatLists to search in. Multiple ThreatLists may be specified. */
      public Search setThreatTypes(java.util.List<java.lang.String> threatTypes) {
        this.threatTypes = threatTypes;
        return this;
      }

      /** Required. The URI to be checked for matches. */
      @com.google.api.client.util.Key
      private java.lang.String uri;

      /** Required. The URI to be checked for matches.
       */
      public java.lang.String getUri() {
        return uri;
      }

      /** Required. The URI to be checked for matches. */
      public Search setUri(java.lang.String uri) {
        this.uri = uri;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link WebRisk}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link WebRisk}. */
    @Override
    public WebRisk build() {
      return new WebRisk(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link WebRiskRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setWebRiskRequestInitializer(
        WebRiskRequestInitializer webriskRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(webriskRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
