/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firestore.v1.model;

/**
 * The request for FirestoreAdmin.ExportDocuments.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Firestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirestoreAdminV1ExportDocumentsRequest extends com.google.api.client.json.GenericJson {

  /**
   * Which collection ids to export. Unspecified means all collections.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> collectionIds;

  /**
   * The output URI. Currently only supports Google Cloud Storage URIs of the form:
   * `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name of the Google Cloud
   * Storage bucket and `NAMESPACE_PATH` is an optional Google Cloud Storage namespace path. When
   * choosing a name, be sure to consider Google Cloud Storage naming guidelines:
   * https://cloud.google.com/storage/docs/naming. If the URI is a bucket (without a namespace
   * path), a prefix will be generated based on the start time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String outputUriPrefix;

  /**
   * Which collection ids to export. Unspecified means all collections.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCollectionIds() {
    return collectionIds;
  }

  /**
   * Which collection ids to export. Unspecified means all collections.
   * @param collectionIds collectionIds or {@code null} for none
   */
  public GoogleFirestoreAdminV1ExportDocumentsRequest setCollectionIds(java.util.List<java.lang.String> collectionIds) {
    this.collectionIds = collectionIds;
    return this;
  }

  /**
   * The output URI. Currently only supports Google Cloud Storage URIs of the form:
   * `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name of the Google Cloud
   * Storage bucket and `NAMESPACE_PATH` is an optional Google Cloud Storage namespace path. When
   * choosing a name, be sure to consider Google Cloud Storage naming guidelines:
   * https://cloud.google.com/storage/docs/naming. If the URI is a bucket (without a namespace
   * path), a prefix will be generated based on the start time.
   * @return value or {@code null} for none
   */
  public java.lang.String getOutputUriPrefix() {
    return outputUriPrefix;
  }

  /**
   * The output URI. Currently only supports Google Cloud Storage URIs of the form:
   * `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name of the Google Cloud
   * Storage bucket and `NAMESPACE_PATH` is an optional Google Cloud Storage namespace path. When
   * choosing a name, be sure to consider Google Cloud Storage naming guidelines:
   * https://cloud.google.com/storage/docs/naming. If the URI is a bucket (without a namespace
   * path), a prefix will be generated based on the start time.
   * @param outputUriPrefix outputUriPrefix or {@code null} for none
   */
  public GoogleFirestoreAdminV1ExportDocumentsRequest setOutputUriPrefix(java.lang.String outputUriPrefix) {
    this.outputUriPrefix = outputUriPrefix;
    return this;
  }

  @Override
  public GoogleFirestoreAdminV1ExportDocumentsRequest set(String fieldName, Object value) {
    return (GoogleFirestoreAdminV1ExportDocumentsRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleFirestoreAdminV1ExportDocumentsRequest clone() {
    return (GoogleFirestoreAdminV1ExportDocumentsRequest) super.clone();
  }

}
