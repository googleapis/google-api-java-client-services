/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.mirror.model;

/**
 * A notification delivered by the API.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Mirror API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Notification extends com.google.api.client.json.GenericJson {

  /**
   * The collection that generated the notification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String collection;

  /**
   * The ID of the item that generated the notification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String itemId;

  /**
   * The type of operation that generated the notification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operation;

  /**
   * A list of actions taken by the user that triggered the notification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<UserAction> userActions;

  /**
   * The user token provided by the service when it subscribed for notifications.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userToken;

  /**
   * The secret verify token provided by the service when it subscribed for notifications.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String verifyToken;

  /**
   * The collection that generated the notification.
   * @return value or {@code null} for none
   */
  public java.lang.String getCollection() {
    return collection;
  }

  /**
   * The collection that generated the notification.
   * @param collection collection or {@code null} for none
   */
  public Notification setCollection(java.lang.String collection) {
    this.collection = collection;
    return this;
  }

  /**
   * The ID of the item that generated the notification.
   * @return value or {@code null} for none
   */
  public java.lang.String getItemId() {
    return itemId;
  }

  /**
   * The ID of the item that generated the notification.
   * @param itemId itemId or {@code null} for none
   */
  public Notification setItemId(java.lang.String itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * The type of operation that generated the notification.
   * @return value or {@code null} for none
   */
  public java.lang.String getOperation() {
    return operation;
  }

  /**
   * The type of operation that generated the notification.
   * @param operation operation or {@code null} for none
   */
  public Notification setOperation(java.lang.String operation) {
    this.operation = operation;
    return this;
  }

  /**
   * A list of actions taken by the user that triggered the notification.
   * @return value or {@code null} for none
   */
  public java.util.List<UserAction> getUserActions() {
    return userActions;
  }

  /**
   * A list of actions taken by the user that triggered the notification.
   * @param userActions userActions or {@code null} for none
   */
  public Notification setUserActions(java.util.List<UserAction> userActions) {
    this.userActions = userActions;
    return this;
  }

  /**
   * The user token provided by the service when it subscribed for notifications.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserToken() {
    return userToken;
  }

  /**
   * The user token provided by the service when it subscribed for notifications.
   * @param userToken userToken or {@code null} for none
   */
  public Notification setUserToken(java.lang.String userToken) {
    this.userToken = userToken;
    return this;
  }

  /**
   * The secret verify token provided by the service when it subscribed for notifications.
   * @return value or {@code null} for none
   */
  public java.lang.String getVerifyToken() {
    return verifyToken;
  }

  /**
   * The secret verify token provided by the service when it subscribed for notifications.
   * @param verifyToken verifyToken or {@code null} for none
   */
  public Notification setVerifyToken(java.lang.String verifyToken) {
    this.verifyToken = verifyToken;
    return this;
  }

  @Override
  public Notification set(String fieldName, Object value) {
    return (Notification) super.set(fieldName, value);
  }

  @Override
  public Notification clone() {
    return (Notification) super.clone();
  }

}
