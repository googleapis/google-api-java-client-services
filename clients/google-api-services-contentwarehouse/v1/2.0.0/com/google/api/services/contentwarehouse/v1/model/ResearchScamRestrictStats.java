/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Structure to hold the number of active and total datapoints for a given dataset, as defined
 * below. Last used: 2
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResearchScamRestrictStats extends com.google.api.client.json.GenericJson {

  /**
   * The number of datapoints that are whitelisted by restricts specified for this query, across all
   * shards for which the query executed successfully. In other words, this represents the number of
   * datapoints that could potentially be returned if they were close enough to the query according
   * to the selected distance measure. If restricts are disabled, this will be equal to
   * num_total_datapoints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger numActiveDatapoints;

  /**
   * The number of total datapoints in all shards of this dataset for which the query executed
   * successfully. This is returned for convenience so that a ratio can be easily computed, and so
   * that num_active_datapoints can be put in perspective for partially successful queries, i.e.
   * queries where only some shards were successful.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger numTotalDatapoints;

  /**
   * The number of datapoints that are whitelisted by restricts specified for this query, across all
   * shards for which the query executed successfully. In other words, this represents the number of
   * datapoints that could potentially be returned if they were close enough to the query according
   * to the selected distance measure. If restricts are disabled, this will be equal to
   * num_total_datapoints.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getNumActiveDatapoints() {
    return numActiveDatapoints;
  }

  /**
   * The number of datapoints that are whitelisted by restricts specified for this query, across all
   * shards for which the query executed successfully. In other words, this represents the number of
   * datapoints that could potentially be returned if they were close enough to the query according
   * to the selected distance measure. If restricts are disabled, this will be equal to
   * num_total_datapoints.
   * @param numActiveDatapoints numActiveDatapoints or {@code null} for none
   */
  public ResearchScamRestrictStats setNumActiveDatapoints(java.math.BigInteger numActiveDatapoints) {
    this.numActiveDatapoints = numActiveDatapoints;
    return this;
  }

  /**
   * The number of total datapoints in all shards of this dataset for which the query executed
   * successfully. This is returned for convenience so that a ratio can be easily computed, and so
   * that num_active_datapoints can be put in perspective for partially successful queries, i.e.
   * queries where only some shards were successful.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getNumTotalDatapoints() {
    return numTotalDatapoints;
  }

  /**
   * The number of total datapoints in all shards of this dataset for which the query executed
   * successfully. This is returned for convenience so that a ratio can be easily computed, and so
   * that num_active_datapoints can be put in perspective for partially successful queries, i.e.
   * queries where only some shards were successful.
   * @param numTotalDatapoints numTotalDatapoints or {@code null} for none
   */
  public ResearchScamRestrictStats setNumTotalDatapoints(java.math.BigInteger numTotalDatapoints) {
    this.numTotalDatapoints = numTotalDatapoints;
    return this;
  }

  @Override
  public ResearchScamRestrictStats set(String fieldName, Object value) {
    return (ResearchScamRestrictStats) super.set(fieldName, value);
  }

  @Override
  public ResearchScamRestrictStats clone() {
    return (ResearchScamRestrictStats) super.clone();
  }

}
