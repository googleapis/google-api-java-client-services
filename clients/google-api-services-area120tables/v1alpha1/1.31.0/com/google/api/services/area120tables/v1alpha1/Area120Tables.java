/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.area120tables.v1alpha1;

/**
 * Service definition for Area120Tables (v1alpha1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://tables.area120.google.com" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link Area120TablesRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Area120Tables extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Area120 Tables API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://area120tables.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://area120tables.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Area120Tables(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Area120Tables(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Tables collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Area120Tables area120tables = new Area120Tables(...);}
   *   {@code Area120Tables.Tables.List request = area120tables.tables().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Tables tables() {
    return new Tables();
  }

  /**
   * The "tables" collection of methods.
   */
  public class Tables {

    /**
     * Gets a table. Returns NOT_FOUND if the table does not exist.
     *
     * Create a request for the method "tables.get".
     *
     * This request holds the parameters needed by the area120tables server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the table to retrieve. Format: tables/{table}
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.Table> {

      private static final String REST_PATH = "v1alpha1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^tables/[^/]+$");

      /**
       * Gets a table. Returns NOT_FOUND if the table does not exist.
       *
       * Create a request for the method "tables.get".
       *
       * This request holds the parameters needed by the the area120tables server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the table to retrieve. Format: tables/{table}
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Area120Tables.this, "GET", REST_PATH, null, com.google.api.services.area120tables.v1alpha1.model.Table.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^tables/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The name of the table to retrieve. Format: tables/{table} */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the table to retrieve. Format: tables/{table}
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The name of the table to retrieve. Format: tables/{table} */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^tables/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists tables for the user.
     *
     * Create a request for the method "tables.list".
     *
     * This request holds the parameters needed by the area120tables server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.ListTablesResponse> {

      private static final String REST_PATH = "v1alpha1/tables";

      /**
       * Lists tables for the user.
       *
       * Create a request for the method "tables.list".
       *
       * This request holds the parameters needed by the the area120tables server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Area120Tables.this, "GET", REST_PATH, null, com.google.api.services.area120tables.v1alpha1.model.ListTablesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The maximum number of tables to return. The service may return fewer than this value. If
       * unspecified, at most 20 tables are returned. The maximum value is 100; values above 100 are
       * coerced to 100.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of tables to return. The service may return fewer than this value. If
     unspecified, at most 20 tables are returned. The maximum value is 100; values above 100 are coerced
     to 100.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of tables to return. The service may return fewer than this value. If
       * unspecified, at most 20 tables are returned. The maximum value is 100; values above 100 are
       * coerced to 100.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListTables` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListTables` must match
       * the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListTables` call. Provide this to retrieve the subsequent
     page. When paginating, all other parameters provided to `ListTables` must match the call that
     provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListTables` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListTables` must match
       * the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Rows collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Area120Tables area120tables = new Area120Tables(...);}
     *   {@code Area120Tables.Rows.List request = area120tables.rows().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Rows rows() {
      return new Rows();
    }

    /**
     * The "rows" collection of methods.
     */
    public class Rows {

      /**
       * Creates multiple rows.
       *
       * Create a request for the method "rows.batchCreate".
       *
       * This request holds the parameters needed by the area120tables server.  After setting any optional
       * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent table where the rows will be created. Format: tables/{table}
       * @param content the {@link com.google.api.services.area120tables.v1alpha1.model.BatchCreateRowsRequest}
       * @return the request
       */
      public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.area120tables.v1alpha1.model.BatchCreateRowsRequest content) throws java.io.IOException {
        BatchCreate result = new BatchCreate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchCreate extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.BatchCreateRowsResponse> {

        private static final String REST_PATH = "v1alpha1/{+parent}/rows:batchCreate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^tables/[^/]+$");

        /**
         * Creates multiple rows.
         *
         * Create a request for the method "rows.batchCreate".
         *
         * This request holds the parameters needed by the the area120tables server.  After setting any
         * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent table where the rows will be created. Format: tables/{table}
         * @param content the {@link com.google.api.services.area120tables.v1alpha1.model.BatchCreateRowsRequest}
         * @since 1.13
         */
        protected BatchCreate(java.lang.String parent, com.google.api.services.area120tables.v1alpha1.model.BatchCreateRowsRequest content) {
          super(Area120Tables.this, "POST", REST_PATH, content, com.google.api.services.area120tables.v1alpha1.model.BatchCreateRowsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^tables/[^/]+$");
          }
        }

        @Override
        public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchCreate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchCreate setAccessToken(java.lang.String accessToken) {
          return (BatchCreate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchCreate setAlt(java.lang.String alt) {
          return (BatchCreate) super.setAlt(alt);
        }

        @Override
        public BatchCreate setCallback(java.lang.String callback) {
          return (BatchCreate) super.setCallback(callback);
        }

        @Override
        public BatchCreate setFields(java.lang.String fields) {
          return (BatchCreate) super.setFields(fields);
        }

        @Override
        public BatchCreate setKey(java.lang.String key) {
          return (BatchCreate) super.setKey(key);
        }

        @Override
        public BatchCreate setOauthToken(java.lang.String oauthToken) {
          return (BatchCreate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchCreate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchCreate setQuotaUser(java.lang.String quotaUser) {
          return (BatchCreate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchCreate setUploadType(java.lang.String uploadType) {
          return (BatchCreate) super.setUploadType(uploadType);
        }

        @Override
        public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchCreate) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent table where the rows will be created. Format: tables/{table} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent table where the rows will be created. Format: tables/{table}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent table where the rows will be created. Format: tables/{table} */
        public BatchCreate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^tables/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchCreate set(String parameterName, Object value) {
          return (BatchCreate) super.set(parameterName, value);
        }
      }
      /**
       * Updates multiple rows.
       *
       * Create a request for the method "rows.batchUpdate".
       *
       * This request holds the parameters needed by the area120tables server.  After setting any optional
       * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent table shared by all rows being updated. Format: tables/{table}
       * @param content the {@link com.google.api.services.area120tables.v1alpha1.model.BatchUpdateRowsRequest}
       * @return the request
       */
      public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.area120tables.v1alpha1.model.BatchUpdateRowsRequest content) throws java.io.IOException {
        BatchUpdate result = new BatchUpdate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchUpdate extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.BatchUpdateRowsResponse> {

        private static final String REST_PATH = "v1alpha1/{+parent}/rows:batchUpdate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^tables/[^/]+$");

        /**
         * Updates multiple rows.
         *
         * Create a request for the method "rows.batchUpdate".
         *
         * This request holds the parameters needed by the the area120tables server.  After setting any
         * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent table shared by all rows being updated. Format: tables/{table}
         * @param content the {@link com.google.api.services.area120tables.v1alpha1.model.BatchUpdateRowsRequest}
         * @since 1.13
         */
        protected BatchUpdate(java.lang.String parent, com.google.api.services.area120tables.v1alpha1.model.BatchUpdateRowsRequest content) {
          super(Area120Tables.this, "POST", REST_PATH, content, com.google.api.services.area120tables.v1alpha1.model.BatchUpdateRowsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^tables/[^/]+$");
          }
        }

        @Override
        public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchUpdate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchUpdate setAccessToken(java.lang.String accessToken) {
          return (BatchUpdate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchUpdate setAlt(java.lang.String alt) {
          return (BatchUpdate) super.setAlt(alt);
        }

        @Override
        public BatchUpdate setCallback(java.lang.String callback) {
          return (BatchUpdate) super.setCallback(callback);
        }

        @Override
        public BatchUpdate setFields(java.lang.String fields) {
          return (BatchUpdate) super.setFields(fields);
        }

        @Override
        public BatchUpdate setKey(java.lang.String key) {
          return (BatchUpdate) super.setKey(key);
        }

        @Override
        public BatchUpdate setOauthToken(java.lang.String oauthToken) {
          return (BatchUpdate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchUpdate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
          return (BatchUpdate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchUpdate setUploadType(java.lang.String uploadType) {
          return (BatchUpdate) super.setUploadType(uploadType);
        }

        @Override
        public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent table shared by all rows being updated. Format: tables/{table} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent table shared by all rows being updated. Format: tables/{table}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent table shared by all rows being updated. Format: tables/{table} */
        public BatchUpdate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^tables/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchUpdate set(String parameterName, Object value) {
          return (BatchUpdate) super.set(parameterName, value);
        }
      }
      /**
       * Creates a row.
       *
       * Create a request for the method "rows.create".
       *
       * This request holds the parameters needed by the area120tables server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent table where this row will be created. Format: tables/{table}
       * @param content the {@link com.google.api.services.area120tables.v1alpha1.model.Row}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.area120tables.v1alpha1.model.Row content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.Row> {

        private static final String REST_PATH = "v1alpha1/{+parent}/rows";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^tables/[^/]+$");

        /**
         * Creates a row.
         *
         * Create a request for the method "rows.create".
         *
         * This request holds the parameters needed by the the area120tables server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent table where this row will be created. Format: tables/{table}
         * @param content the {@link com.google.api.services.area120tables.v1alpha1.model.Row}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.area120tables.v1alpha1.model.Row content) {
          super(Area120Tables.this, "POST", REST_PATH, content, com.google.api.services.area120tables.v1alpha1.model.Row.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^tables/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent table where this row will be created. Format: tables/{table} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent table where this row will be created. Format: tables/{table}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent table where this row will be created. Format: tables/{table} */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^tables/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Optional. Column key to use for values in the row. Defaults to user entered name. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** Optional. Column key to use for values in the row. Defaults to user entered name.
         */
        public java.lang.String getView() {
          return view;
        }

        /** Optional. Column key to use for values in the row. Defaults to user entered name. */
        public Create setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a row.
       *
       * Create a request for the method "rows.delete".
       *
       * This request holds the parameters needed by the area120tables server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the row to delete. Format: tables/{table}/rows/{row}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.Empty> {

        private static final String REST_PATH = "v1alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^tables/[^/]+/rows/[^/]+$");

        /**
         * Deletes a row.
         *
         * Create a request for the method "rows.delete".
         *
         * This request holds the parameters needed by the the area120tables server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the row to delete. Format: tables/{table}/rows/{row}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Area120Tables.this, "DELETE", REST_PATH, null, com.google.api.services.area120tables.v1alpha1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^tables/[^/]+/rows/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the row to delete. Format: tables/{table}/rows/{row} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the row to delete. Format: tables/{table}/rows/{row}
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the row to delete. Format: tables/{table}/rows/{row} */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^tables/[^/]+/rows/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a row. Returns NOT_FOUND if the row does not exist in the table.
       *
       * Create a request for the method "rows.get".
       *
       * This request holds the parameters needed by the area120tables server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.Row> {

        private static final String REST_PATH = "v1alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^tables/[^/]+/rows/[^/]+$");

        /**
         * Gets a row. Returns NOT_FOUND if the row does not exist in the table.
         *
         * Create a request for the method "rows.get".
         *
         * This request holds the parameters needed by the the area120tables server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Area120Tables.this, "GET", REST_PATH, null, com.google.api.services.area120tables.v1alpha1.model.Row.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^tables/[^/]+/rows/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the row to retrieve. Format: tables/{table}/rows/{row} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the row to retrieve. Format: tables/{table}/rows/{row} */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^tables/[^/]+/rows/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Optional. Column key to use for values in the row. Defaults to user entered name. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** Optional. Column key to use for values in the row. Defaults to user entered name.
         */
        public java.lang.String getView() {
          return view;
        }

        /** Optional. Column key to use for values in the row. Defaults to user entered name. */
        public Get setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists rows in a table. Returns NOT_FOUND if the table does not exist.
       *
       * Create a request for the method "rows.list".
       *
       * This request holds the parameters needed by the area120tables server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent table. Format: tables/{table}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.ListRowsResponse> {

        private static final String REST_PATH = "v1alpha1/{+parent}/rows";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^tables/[^/]+$");

        /**
         * Lists rows in a table. Returns NOT_FOUND if the table does not exist.
         *
         * Create a request for the method "rows.list".
         *
         * This request holds the parameters needed by the the area120tables server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent table. Format: tables/{table}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Area120Tables.this, "GET", REST_PATH, null, com.google.api.services.area120tables.v1alpha1.model.ListRowsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^tables/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent table. Format: tables/{table} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent table. Format: tables/{table}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent table. Format: tables/{table} */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^tables/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of rows to return. The service may return fewer than this value. If
         * unspecified, at most 50 rows are returned. The maximum value is 1,000; values above 1,000
         * are coerced to 1,000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of rows to return. The service may return fewer than this value. If unspecified,
       at most 50 rows are returned. The maximum value is 1,000; values above 1,000 are coerced to 1,000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of rows to return. The service may return fewer than this value. If
         * unspecified, at most 50 rows are returned. The maximum value is 1,000; values above 1,000
         * are coerced to 1,000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListRows` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListRows` must match
         * the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListRows` call. Provide this to retrieve the subsequent
       page. When paginating, all other parameters provided to `ListRows` must match the call that
       provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListRows` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListRows` must match
         * the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** Optional. Column key to use for values in the row. Defaults to user entered name. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** Optional. Column key to use for values in the row. Defaults to user entered name.
         */
        public java.lang.String getView() {
          return view;
        }

        /** Optional. Column key to use for values in the row. Defaults to user entered name. */
        public List setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a row.
       *
       * Create a request for the method "rows.patch".
       *
       * This request holds the parameters needed by the area120tables server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is
       *        ignored when creating a row.
       * @param content the {@link com.google.api.services.area120tables.v1alpha1.model.Row}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.area120tables.v1alpha1.model.Row content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.Row> {

        private static final String REST_PATH = "v1alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^tables/[^/]+/rows/[^/]+$");

        /**
         * Updates a row.
         *
         * Create a request for the method "rows.patch".
         *
         * This request holds the parameters needed by the the area120tables server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is
       *        ignored when creating a row.
         * @param content the {@link com.google.api.services.area120tables.v1alpha1.model.Row}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.area120tables.v1alpha1.model.Row content) {
          super(Area120Tables.this, "PATCH", REST_PATH, content, com.google.api.services.area120tables.v1alpha1.model.Row.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^tables/[^/]+/rows/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The
         * name is ignored when creating a row.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is
       ignored when creating a row.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The
         * name is ignored when creating a row.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^tables/[^/]+/rows/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The list of fields to update. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The list of fields to update.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** The list of fields to update. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        /** Optional. Column key to use for values in the row. Defaults to user entered name. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** Optional. Column key to use for values in the row. Defaults to user entered name.
         */
        public java.lang.String getView() {
          return view;
        }

        /** Optional. Column key to use for values in the row. Defaults to user entered name. */
        public Patch setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Workspaces collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Area120Tables area120tables = new Area120Tables(...);}
   *   {@code Area120Tables.Workspaces.List request = area120tables.workspaces().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Workspaces workspaces() {
    return new Workspaces();
  }

  /**
   * The "workspaces" collection of methods.
   */
  public class Workspaces {

    /**
     * Gets a workspace. Returns NOT_FOUND if the workspace does not exist.
     *
     * Create a request for the method "workspaces.get".
     *
     * This request holds the parameters needed by the area120tables server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the workspace to retrieve. Format: workspaces/{workspace}
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.Workspace> {

      private static final String REST_PATH = "v1alpha1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^workspaces/[^/]+$");

      /**
       * Gets a workspace. Returns NOT_FOUND if the workspace does not exist.
       *
       * Create a request for the method "workspaces.get".
       *
       * This request holds the parameters needed by the the area120tables server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the workspace to retrieve. Format: workspaces/{workspace}
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Area120Tables.this, "GET", REST_PATH, null, com.google.api.services.area120tables.v1alpha1.model.Workspace.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^workspaces/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The name of the workspace to retrieve. Format: workspaces/{workspace} */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the workspace to retrieve. Format: workspaces/{workspace}
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The name of the workspace to retrieve. Format: workspaces/{workspace} */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^workspaces/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists workspaces for the user.
     *
     * Create a request for the method "workspaces.list".
     *
     * This request holds the parameters needed by the area120tables server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends Area120TablesRequest<com.google.api.services.area120tables.v1alpha1.model.ListWorkspacesResponse> {

      private static final String REST_PATH = "v1alpha1/workspaces";

      /**
       * Lists workspaces for the user.
       *
       * Create a request for the method "workspaces.list".
       *
       * This request holds the parameters needed by the the area120tables server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Area120Tables.this, "GET", REST_PATH, null, com.google.api.services.area120tables.v1alpha1.model.ListWorkspacesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The maximum number of workspaces to return. The service may return fewer than this value.
       * If unspecified, at most 10 workspaces are returned. The maximum value is 25; values above
       * 25 are coerced to 25.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of workspaces to return. The service may return fewer than this value. If
     unspecified, at most 10 workspaces are returned. The maximum value is 25; values above 25 are
     coerced to 25.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of workspaces to return. The service may return fewer than this value.
       * If unspecified, at most 10 workspaces are returned. The maximum value is 25; values above
       * 25 are coerced to 25.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListWorkspaces` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListWorkspaces` must
       * match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListWorkspaces` call. Provide this to retrieve the
     subsequent page. When paginating, all other parameters provided to `ListWorkspaces` must match the
     call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListWorkspaces` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListWorkspaces` must
       * match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Area120Tables}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Area120Tables}. */
    @Override
    public Area120Tables build() {
      return new Area120Tables(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link Area120TablesRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setArea120TablesRequestInitializer(
        Area120TablesRequestInitializer area120tablesRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(area120tablesRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
