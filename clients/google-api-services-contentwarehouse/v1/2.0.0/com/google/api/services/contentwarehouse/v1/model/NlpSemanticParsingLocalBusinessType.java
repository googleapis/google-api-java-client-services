/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A high-level categorization of business types. Used for location elements that are either
 * BUSINESS_NAME or BUSINESS_CATEGORY. The business types roughly correspond to QRef collections and
 * should be interpreted broadly. E.g., hotel also include motels, youth hostels, and guest houses;
 * restaurants includes bars and cafes, etc. Business types can be populated by QRef collections;
 * other population is done by grammar categories from local_categories.grammar. It is expected that
 * some business organizations will match more than one business type. E.g., Safeway is both a
 * grocery store and a pharmacy. Next ID: 43 NOTE(oksana): LocalCategoryReliable grammar over-rides
 * a few business type queries to include hyper_reliable location element. If you change this,
 * please make sure that LocalCategoryReliable grammar reflects this too. LINT.IfChange
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingLocalBusinessType extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean airline;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean airport;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean bank;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean bikeSharingStation;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean busStop;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean clothingStore;

  /**
   * If the element implies a cuisine type then we include the gcid string when available. Currently
   * this happens for BUSINESS_CATEGORY type. The field is repeated to model categories like
   * "mandarin buffet restaurant" with multiple cuisine gcid's: mandarin_restaurant and
   * buffet_restaurant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> cuisineGcid;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean departmentStore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean drugDropOff;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean electricVehicleChargingStation;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean electronicStore;

  /**
   * This field is used to determine the emergency type of the element, which is specified by the
   * grammar parse in
   * (http://cs/file:googledata/localsearch/quality/grammar/local_patterns.asciipb). e.g.
   * "coronavirus_treatment_locations" TODO(b/151330576) Deprecate the emergency field and replace
   * with normal triggering.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String emergency;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean foodPantry;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean gasStation;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean groceryStore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hairdresser;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hardwareStore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hospital;

  /**
   * Also youth hostels, guest houses, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hotel;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean parking;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean petStore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean pharmacy;

  /**
   * This is used for transit stations annotated by QRef. The transit_station business_type above is
   * only used for business categories, and therefore is used downstream to find nearby stations
   * rather than a particular station, and so cannot be present in a Location that is a specific
   * station from QRef. For these cases, this business_type is used instead. e.g. "grand central"
   * "millbrae station" "union station" will have business_type qref_transit_station
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean qrefTransitStation;

  /**
   * Also bars and cafes
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean restaurant;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean retail;

  /**
   * Pre-k to high school
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean school;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean shoppingCenter;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean soupKitchen;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean sportStore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean subwayStation;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean telecom;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean toyStore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean trainStation;

  /**
   * A particular line in a transit system, e.g., "3 train", "Red Line", "Cirle Line", etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean transitLine;

  /**
   * Operator of a transit line, e.g., "MTA", "BART", "CTA", etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean transitOperator;

  /**
   * The different types of transit station business types will be used to figure out which vehicle
   * types to use when querying Tripfinder's SearchStations service. The stations in that backend
   * seem to be divided into HEAVY_RAIL, SUBWAY, and TRAM. There isn't a very reliable division
   * between intercity rail and commuter rail -- Amtrak, LIRR, PATH, and NJ Transit are all
   * classified as HEAVY_RAIL. That's why in these types we make a distinction between train and
   * subway, and not train and muni_rail, (unlike TransitMode in the TravelAction proto).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean transitStation;

  /**
   * Also colleges
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean university;

  /**
   * All of the vehicle types serviced by this business or business category. e.g. VEHICLE_TYPE_RAIL
   * and VEHICLE_TYPE__BUS for "transit stop". This allows downstream to serve different result
   * types for transit station categories in different languages. e.g. In en-US "train station"
   * seeks both railway station and subway station results. But the equivalent word in
   * French/Italian/German seeks only railway stations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> vehicleType;

  /**
   * Stadiums, theaters, cinemas, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean venue;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAirline() {
    return airline;
  }

  /**
   * @param airline airline or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setAirline(java.lang.Boolean airline) {
    this.airline = airline;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAirport() {
    return airport;
  }

  /**
   * @param airport airport or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setAirport(java.lang.Boolean airport) {
    this.airport = airport;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBank() {
    return bank;
  }

  /**
   * @param bank bank or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setBank(java.lang.Boolean bank) {
    this.bank = bank;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBikeSharingStation() {
    return bikeSharingStation;
  }

  /**
   * @param bikeSharingStation bikeSharingStation or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setBikeSharingStation(java.lang.Boolean bikeSharingStation) {
    this.bikeSharingStation = bikeSharingStation;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBusStop() {
    return busStop;
  }

  /**
   * @param busStop busStop or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setBusStop(java.lang.Boolean busStop) {
    this.busStop = busStop;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getClothingStore() {
    return clothingStore;
  }

  /**
   * @param clothingStore clothingStore or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setClothingStore(java.lang.Boolean clothingStore) {
    this.clothingStore = clothingStore;
    return this;
  }

  /**
   * If the element implies a cuisine type then we include the gcid string when available. Currently
   * this happens for BUSINESS_CATEGORY type. The field is repeated to model categories like
   * "mandarin buffet restaurant" with multiple cuisine gcid's: mandarin_restaurant and
   * buffet_restaurant.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCuisineGcid() {
    return cuisineGcid;
  }

  /**
   * If the element implies a cuisine type then we include the gcid string when available. Currently
   * this happens for BUSINESS_CATEGORY type. The field is repeated to model categories like
   * "mandarin buffet restaurant" with multiple cuisine gcid's: mandarin_restaurant and
   * buffet_restaurant.
   * @param cuisineGcid cuisineGcid or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setCuisineGcid(java.util.List<java.lang.String> cuisineGcid) {
    this.cuisineGcid = cuisineGcid;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDepartmentStore() {
    return departmentStore;
  }

  /**
   * @param departmentStore departmentStore or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setDepartmentStore(java.lang.Boolean departmentStore) {
    this.departmentStore = departmentStore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDrugDropOff() {
    return drugDropOff;
  }

  /**
   * @param drugDropOff drugDropOff or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setDrugDropOff(java.lang.Boolean drugDropOff) {
    this.drugDropOff = drugDropOff;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getElectricVehicleChargingStation() {
    return electricVehicleChargingStation;
  }

  /**
   * @param electricVehicleChargingStation electricVehicleChargingStation or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setElectricVehicleChargingStation(java.lang.Boolean electricVehicleChargingStation) {
    this.electricVehicleChargingStation = electricVehicleChargingStation;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getElectronicStore() {
    return electronicStore;
  }

  /**
   * @param electronicStore electronicStore or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setElectronicStore(java.lang.Boolean electronicStore) {
    this.electronicStore = electronicStore;
    return this;
  }

  /**
   * This field is used to determine the emergency type of the element, which is specified by the
   * grammar parse in
   * (http://cs/file:googledata/localsearch/quality/grammar/local_patterns.asciipb). e.g.
   * "coronavirus_treatment_locations" TODO(b/151330576) Deprecate the emergency field and replace
   * with normal triggering.
   * @return value or {@code null} for none
   */
  public java.lang.String getEmergency() {
    return emergency;
  }

  /**
   * This field is used to determine the emergency type of the element, which is specified by the
   * grammar parse in
   * (http://cs/file:googledata/localsearch/quality/grammar/local_patterns.asciipb). e.g.
   * "coronavirus_treatment_locations" TODO(b/151330576) Deprecate the emergency field and replace
   * with normal triggering.
   * @param emergency emergency or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setEmergency(java.lang.String emergency) {
    this.emergency = emergency;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFoodPantry() {
    return foodPantry;
  }

  /**
   * @param foodPantry foodPantry or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setFoodPantry(java.lang.Boolean foodPantry) {
    this.foodPantry = foodPantry;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getGasStation() {
    return gasStation;
  }

  /**
   * @param gasStation gasStation or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setGasStation(java.lang.Boolean gasStation) {
    this.gasStation = gasStation;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getGroceryStore() {
    return groceryStore;
  }

  /**
   * @param groceryStore groceryStore or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setGroceryStore(java.lang.Boolean groceryStore) {
    this.groceryStore = groceryStore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHairdresser() {
    return hairdresser;
  }

  /**
   * @param hairdresser hairdresser or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setHairdresser(java.lang.Boolean hairdresser) {
    this.hairdresser = hairdresser;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHardwareStore() {
    return hardwareStore;
  }

  /**
   * @param hardwareStore hardwareStore or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setHardwareStore(java.lang.Boolean hardwareStore) {
    this.hardwareStore = hardwareStore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHospital() {
    return hospital;
  }

  /**
   * @param hospital hospital or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setHospital(java.lang.Boolean hospital) {
    this.hospital = hospital;
    return this;
  }

  /**
   * Also youth hostels, guest houses, etc.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHotel() {
    return hotel;
  }

  /**
   * Also youth hostels, guest houses, etc.
   * @param hotel hotel or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setHotel(java.lang.Boolean hotel) {
    this.hotel = hotel;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getParking() {
    return parking;
  }

  /**
   * @param parking parking or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setParking(java.lang.Boolean parking) {
    this.parking = parking;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPetStore() {
    return petStore;
  }

  /**
   * @param petStore petStore or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setPetStore(java.lang.Boolean petStore) {
    this.petStore = petStore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPharmacy() {
    return pharmacy;
  }

  /**
   * @param pharmacy pharmacy or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setPharmacy(java.lang.Boolean pharmacy) {
    this.pharmacy = pharmacy;
    return this;
  }

  /**
   * This is used for transit stations annotated by QRef. The transit_station business_type above is
   * only used for business categories, and therefore is used downstream to find nearby stations
   * rather than a particular station, and so cannot be present in a Location that is a specific
   * station from QRef. For these cases, this business_type is used instead. e.g. "grand central"
   * "millbrae station" "union station" will have business_type qref_transit_station
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getQrefTransitStation() {
    return qrefTransitStation;
  }

  /**
   * This is used for transit stations annotated by QRef. The transit_station business_type above is
   * only used for business categories, and therefore is used downstream to find nearby stations
   * rather than a particular station, and so cannot be present in a Location that is a specific
   * station from QRef. For these cases, this business_type is used instead. e.g. "grand central"
   * "millbrae station" "union station" will have business_type qref_transit_station
   * @param qrefTransitStation qrefTransitStation or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setQrefTransitStation(java.lang.Boolean qrefTransitStation) {
    this.qrefTransitStation = qrefTransitStation;
    return this;
  }

  /**
   * Also bars and cafes
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRestaurant() {
    return restaurant;
  }

  /**
   * Also bars and cafes
   * @param restaurant restaurant or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setRestaurant(java.lang.Boolean restaurant) {
    this.restaurant = restaurant;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRetail() {
    return retail;
  }

  /**
   * @param retail retail or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setRetail(java.lang.Boolean retail) {
    this.retail = retail;
    return this;
  }

  /**
   * Pre-k to high school
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSchool() {
    return school;
  }

  /**
   * Pre-k to high school
   * @param school school or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setSchool(java.lang.Boolean school) {
    this.school = school;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getShoppingCenter() {
    return shoppingCenter;
  }

  /**
   * @param shoppingCenter shoppingCenter or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setShoppingCenter(java.lang.Boolean shoppingCenter) {
    this.shoppingCenter = shoppingCenter;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSoupKitchen() {
    return soupKitchen;
  }

  /**
   * @param soupKitchen soupKitchen or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setSoupKitchen(java.lang.Boolean soupKitchen) {
    this.soupKitchen = soupKitchen;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSportStore() {
    return sportStore;
  }

  /**
   * @param sportStore sportStore or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setSportStore(java.lang.Boolean sportStore) {
    this.sportStore = sportStore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSubwayStation() {
    return subwayStation;
  }

  /**
   * @param subwayStation subwayStation or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setSubwayStation(java.lang.Boolean subwayStation) {
    this.subwayStation = subwayStation;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTelecom() {
    return telecom;
  }

  /**
   * @param telecom telecom or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setTelecom(java.lang.Boolean telecom) {
    this.telecom = telecom;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getToyStore() {
    return toyStore;
  }

  /**
   * @param toyStore toyStore or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setToyStore(java.lang.Boolean toyStore) {
    this.toyStore = toyStore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTrainStation() {
    return trainStation;
  }

  /**
   * @param trainStation trainStation or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setTrainStation(java.lang.Boolean trainStation) {
    this.trainStation = trainStation;
    return this;
  }

  /**
   * A particular line in a transit system, e.g., "3 train", "Red Line", "Cirle Line", etc.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTransitLine() {
    return transitLine;
  }

  /**
   * A particular line in a transit system, e.g., "3 train", "Red Line", "Cirle Line", etc.
   * @param transitLine transitLine or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setTransitLine(java.lang.Boolean transitLine) {
    this.transitLine = transitLine;
    return this;
  }

  /**
   * Operator of a transit line, e.g., "MTA", "BART", "CTA", etc.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTransitOperator() {
    return transitOperator;
  }

  /**
   * Operator of a transit line, e.g., "MTA", "BART", "CTA", etc.
   * @param transitOperator transitOperator or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setTransitOperator(java.lang.Boolean transitOperator) {
    this.transitOperator = transitOperator;
    return this;
  }

  /**
   * The different types of transit station business types will be used to figure out which vehicle
   * types to use when querying Tripfinder's SearchStations service. The stations in that backend
   * seem to be divided into HEAVY_RAIL, SUBWAY, and TRAM. There isn't a very reliable division
   * between intercity rail and commuter rail -- Amtrak, LIRR, PATH, and NJ Transit are all
   * classified as HEAVY_RAIL. That's why in these types we make a distinction between train and
   * subway, and not train and muni_rail, (unlike TransitMode in the TravelAction proto).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTransitStation() {
    return transitStation;
  }

  /**
   * The different types of transit station business types will be used to figure out which vehicle
   * types to use when querying Tripfinder's SearchStations service. The stations in that backend
   * seem to be divided into HEAVY_RAIL, SUBWAY, and TRAM. There isn't a very reliable division
   * between intercity rail and commuter rail -- Amtrak, LIRR, PATH, and NJ Transit are all
   * classified as HEAVY_RAIL. That's why in these types we make a distinction between train and
   * subway, and not train and muni_rail, (unlike TransitMode in the TravelAction proto).
   * @param transitStation transitStation or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setTransitStation(java.lang.Boolean transitStation) {
    this.transitStation = transitStation;
    return this;
  }

  /**
   * Also colleges
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUniversity() {
    return university;
  }

  /**
   * Also colleges
   * @param university university or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setUniversity(java.lang.Boolean university) {
    this.university = university;
    return this;
  }

  /**
   * All of the vehicle types serviced by this business or business category. e.g. VEHICLE_TYPE_RAIL
   * and VEHICLE_TYPE__BUS for "transit stop". This allows downstream to serve different result
   * types for transit station categories in different languages. e.g. In en-US "train station"
   * seeks both railway station and subway station results. But the equivalent word in
   * French/Italian/German seeks only railway stations.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getVehicleType() {
    return vehicleType;
  }

  /**
   * All of the vehicle types serviced by this business or business category. e.g. VEHICLE_TYPE_RAIL
   * and VEHICLE_TYPE__BUS for "transit stop". This allows downstream to serve different result
   * types for transit station categories in different languages. e.g. In en-US "train station"
   * seeks both railway station and subway station results. But the equivalent word in
   * French/Italian/German seeks only railway stations.
   * @param vehicleType vehicleType or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setVehicleType(java.util.List<java.lang.String> vehicleType) {
    this.vehicleType = vehicleType;
    return this;
  }

  /**
   * Stadiums, theaters, cinemas, etc.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVenue() {
    return venue;
  }

  /**
   * Stadiums, theaters, cinemas, etc.
   * @param venue venue or {@code null} for none
   */
  public NlpSemanticParsingLocalBusinessType setVenue(java.lang.Boolean venue) {
    this.venue = venue;
    return this;
  }

  @Override
  public NlpSemanticParsingLocalBusinessType set(String fieldName, Object value) {
    return (NlpSemanticParsingLocalBusinessType) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingLocalBusinessType clone() {
    return (NlpSemanticParsingLocalBusinessType) super.clone();
  }

}
