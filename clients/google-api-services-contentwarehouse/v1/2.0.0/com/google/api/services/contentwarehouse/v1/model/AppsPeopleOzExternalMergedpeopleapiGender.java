/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Gender in PeopleApi has some odd semantics about writing and reading that are not obvious from
 * the proto definition. First, the `type` string, when read, always maps to the constrained domain
 * of "male", "female", and "other", aside from a pathological case that PeopleApi would like to
 * fix. There are two typical patterns: 1. `type` is either "male" or "female" and `custom_type` and
 * `address_me_as` are exactly as specified by an update to PeopleApi, although they are most often
 * absent for "male" and "female" writes. 2. `type` is "other" and `custom_type` is set to a
 * freeform string from the request. `address_me_as` is equal to whatever was provided at write
 * time. When writing, the free-form string for `custom_type` can come from either `custom_type` if
 * the field is present on the request, or if `custom_type` is absent, the string value of `type`
 * will be copied into it. Any value in `type` will be coerced to "other" and the free-form value
 * will be copied into `custom_type`, even if `type` is exactly "other". Prefer to explicitly set
 * `custom_type` and set type to "other" instead of setting type to a free-form value. There are
 * weird edge cases when the value is "unknown". Consider the behavior for `type` == "unknown"
 * unspecified. Clients reading the gender should use the value from `formatted_type` if `type` is
 * "male" or "female". If `type` is "other", `formatted_type` will be "Other" (or some translation)
 * and clients should read `custom_type` for more specificity.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiGender extends com.google.api.client.json.GenericJson {

  /**
   * Preferred pronoun choice. It's unclear whether this value is constrained to a finite domain by
   * UIs. `address_me_as` may be populated regardless of whether `type` is "male", "female", or
   * "other", although most writers only set it if `type` is "other".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String addressMeAs;

  /**
   * A free-form string indicating what the user entered as their gender. `custom_type` may exist
   * even if the type is "male" or "female", although most writers do not set it unless `type` is
   * "other".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String customType;

  /**
   * The `type` translated and formatted in the request locale. See go/people-api-howto/localization
   * for details on how to usage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String formattedType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata;

  /**
   * The gender. "male", "female", or "other". If "other", typically, additional fields will have
   * additional information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Preferred pronoun choice. It's unclear whether this value is constrained to a finite domain by
   * UIs. `address_me_as` may be populated regardless of whether `type` is "male", "female", or
   * "other", although most writers only set it if `type` is "other".
   * @return value or {@code null} for none
   */
  public java.lang.String getAddressMeAs() {
    return addressMeAs;
  }

  /**
   * Preferred pronoun choice. It's unclear whether this value is constrained to a finite domain by
   * UIs. `address_me_as` may be populated regardless of whether `type` is "male", "female", or
   * "other", although most writers only set it if `type` is "other".
   * @param addressMeAs addressMeAs or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiGender setAddressMeAs(java.lang.String addressMeAs) {
    this.addressMeAs = addressMeAs;
    return this;
  }

  /**
   * A free-form string indicating what the user entered as their gender. `custom_type` may exist
   * even if the type is "male" or "female", although most writers do not set it unless `type` is
   * "other".
   * @return value or {@code null} for none
   */
  public java.lang.String getCustomType() {
    return customType;
  }

  /**
   * A free-form string indicating what the user entered as their gender. `custom_type` may exist
   * even if the type is "male" or "female", although most writers do not set it unless `type` is
   * "other".
   * @param customType customType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiGender setCustomType(java.lang.String customType) {
    this.customType = customType;
    return this;
  }

  /**
   * The `type` translated and formatted in the request locale. See go/people-api-howto/localization
   * for details on how to usage.
   * @return value or {@code null} for none
   */
  public java.lang.String getFormattedType() {
    return formattedType;
  }

  /**
   * The `type` translated and formatted in the request locale. See go/people-api-howto/localization
   * for details on how to usage.
   * @param formattedType formattedType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiGender setFormattedType(java.lang.String formattedType) {
    this.formattedType = formattedType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata getMetadata() {
    return metadata;
  }

  /**
   * @param metadata metadata or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiGender setMetadata(AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * The gender. "male", "female", or "other". If "other", typically, additional fields will have
   * additional information.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The gender. "male", "female", or "other". If "other", typically, additional fields will have
   * additional information.
   * @param type type or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiGender setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiGender set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiGender) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiGender clone() {
    return (AppsPeopleOzExternalMergedpeopleapiGender) super.clone();
  }

}
