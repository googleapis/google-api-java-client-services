/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * Contact details for managed Google Play enterprises.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ContactInfo extends com.google.api.client.json.GenericJson {

  /**
   * Email address for a point of contact, which will be used to send important announcements
   * related to managed Google Play.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contactEmail;

  /**
   * The email of the data protection officer. The email is validated but not verified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataProtectionOfficerEmail;

  /**
   * The name of the data protection officer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataProtectionOfficerName;

  /**
   * The phone number of the data protection officer The phone number is validated but not verified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataProtectionOfficerPhone;

  /**
   * The email of the EU representative. The email is validated but not verified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String euRepresentativeEmail;

  /**
   * The name of the EU representative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String euRepresentativeName;

  /**
   * The phone number of the EU representative. The phone number is validated but not verified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String euRepresentativePhone;

  /**
   * Email address for a point of contact, which will be used to send important announcements
   * related to managed Google Play.
   * @return value or {@code null} for none
   */
  public java.lang.String getContactEmail() {
    return contactEmail;
  }

  /**
   * Email address for a point of contact, which will be used to send important announcements
   * related to managed Google Play.
   * @param contactEmail contactEmail or {@code null} for none
   */
  public ContactInfo setContactEmail(java.lang.String contactEmail) {
    this.contactEmail = contactEmail;
    return this;
  }

  /**
   * The email of the data protection officer. The email is validated but not verified.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataProtectionOfficerEmail() {
    return dataProtectionOfficerEmail;
  }

  /**
   * The email of the data protection officer. The email is validated but not verified.
   * @param dataProtectionOfficerEmail dataProtectionOfficerEmail or {@code null} for none
   */
  public ContactInfo setDataProtectionOfficerEmail(java.lang.String dataProtectionOfficerEmail) {
    this.dataProtectionOfficerEmail = dataProtectionOfficerEmail;
    return this;
  }

  /**
   * The name of the data protection officer.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataProtectionOfficerName() {
    return dataProtectionOfficerName;
  }

  /**
   * The name of the data protection officer.
   * @param dataProtectionOfficerName dataProtectionOfficerName or {@code null} for none
   */
  public ContactInfo setDataProtectionOfficerName(java.lang.String dataProtectionOfficerName) {
    this.dataProtectionOfficerName = dataProtectionOfficerName;
    return this;
  }

  /**
   * The phone number of the data protection officer The phone number is validated but not verified.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataProtectionOfficerPhone() {
    return dataProtectionOfficerPhone;
  }

  /**
   * The phone number of the data protection officer The phone number is validated but not verified.
   * @param dataProtectionOfficerPhone dataProtectionOfficerPhone or {@code null} for none
   */
  public ContactInfo setDataProtectionOfficerPhone(java.lang.String dataProtectionOfficerPhone) {
    this.dataProtectionOfficerPhone = dataProtectionOfficerPhone;
    return this;
  }

  /**
   * The email of the EU representative. The email is validated but not verified.
   * @return value or {@code null} for none
   */
  public java.lang.String getEuRepresentativeEmail() {
    return euRepresentativeEmail;
  }

  /**
   * The email of the EU representative. The email is validated but not verified.
   * @param euRepresentativeEmail euRepresentativeEmail or {@code null} for none
   */
  public ContactInfo setEuRepresentativeEmail(java.lang.String euRepresentativeEmail) {
    this.euRepresentativeEmail = euRepresentativeEmail;
    return this;
  }

  /**
   * The name of the EU representative.
   * @return value or {@code null} for none
   */
  public java.lang.String getEuRepresentativeName() {
    return euRepresentativeName;
  }

  /**
   * The name of the EU representative.
   * @param euRepresentativeName euRepresentativeName or {@code null} for none
   */
  public ContactInfo setEuRepresentativeName(java.lang.String euRepresentativeName) {
    this.euRepresentativeName = euRepresentativeName;
    return this;
  }

  /**
   * The phone number of the EU representative. The phone number is validated but not verified.
   * @return value or {@code null} for none
   */
  public java.lang.String getEuRepresentativePhone() {
    return euRepresentativePhone;
  }

  /**
   * The phone number of the EU representative. The phone number is validated but not verified.
   * @param euRepresentativePhone euRepresentativePhone or {@code null} for none
   */
  public ContactInfo setEuRepresentativePhone(java.lang.String euRepresentativePhone) {
    this.euRepresentativePhone = euRepresentativePhone;
    return this;
  }

  @Override
  public ContactInfo set(String fieldName, Object value) {
    return (ContactInfo) super.set(fieldName, value);
  }

  @Override
  public ContactInfo clone() {
    return (ContactInfo) super.clone();
  }

}
