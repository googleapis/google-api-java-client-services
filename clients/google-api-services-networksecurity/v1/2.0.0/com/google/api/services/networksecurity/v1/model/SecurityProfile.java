/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networksecurity.v1.model;

/**
 * SecurityProfile is a resource that defines the behavior for one of many ProfileTypes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Security API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SecurityProfile extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Resource creation timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * The custom TPPI configuration for the SecurityProfile.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CustomInterceptProfile customInterceptProfile;

  /**
   * The custom Packet Mirroring v2 configuration for the SecurityProfile.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CustomMirroringProfile customMirroringProfile;

  /**
   * Optional. An optional description of the profile. Max length 512 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. This checksum is computed by the server based on the value of other fields, and
   * may be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. Labels as key value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Immutable. Identifier. Name of the SecurityProfile resource. It matches pattern
   * `projects|organizations/locations/{location}/securityProfiles/{security_profile}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The threat prevention configuration for the SecurityProfile.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ThreatPreventionProfile threatPreventionProfile;

  /**
   * Immutable. The single ProfileType that the SecurityProfile resource configures.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Output only. Last resource update timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Resource creation timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Resource creation timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public SecurityProfile setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The custom TPPI configuration for the SecurityProfile.
   * @return value or {@code null} for none
   */
  public CustomInterceptProfile getCustomInterceptProfile() {
    return customInterceptProfile;
  }

  /**
   * The custom TPPI configuration for the SecurityProfile.
   * @param customInterceptProfile customInterceptProfile or {@code null} for none
   */
  public SecurityProfile setCustomInterceptProfile(CustomInterceptProfile customInterceptProfile) {
    this.customInterceptProfile = customInterceptProfile;
    return this;
  }

  /**
   * The custom Packet Mirroring v2 configuration for the SecurityProfile.
   * @return value or {@code null} for none
   */
  public CustomMirroringProfile getCustomMirroringProfile() {
    return customMirroringProfile;
  }

  /**
   * The custom Packet Mirroring v2 configuration for the SecurityProfile.
   * @param customMirroringProfile customMirroringProfile or {@code null} for none
   */
  public SecurityProfile setCustomMirroringProfile(CustomMirroringProfile customMirroringProfile) {
    this.customMirroringProfile = customMirroringProfile;
    return this;
  }

  /**
   * Optional. An optional description of the profile. Max length 512 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. An optional description of the profile. Max length 512 characters.
   * @param description description or {@code null} for none
   */
  public SecurityProfile setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. This checksum is computed by the server based on the value of other fields, and
   * may be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. This checksum is computed by the server based on the value of other fields, and
   * may be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * @param etag etag or {@code null} for none
   */
  public SecurityProfile setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. Labels as key value pairs.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Labels as key value pairs.
   * @param labels labels or {@code null} for none
   */
  public SecurityProfile setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Immutable. Identifier. Name of the SecurityProfile resource. It matches pattern
   * `projects|organizations/locations/{location}/securityProfiles/{security_profile}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. Identifier. Name of the SecurityProfile resource. It matches pattern
   * `projects|organizations/locations/{location}/securityProfiles/{security_profile}`.
   * @param name name or {@code null} for none
   */
  public SecurityProfile setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The threat prevention configuration for the SecurityProfile.
   * @return value or {@code null} for none
   */
  public ThreatPreventionProfile getThreatPreventionProfile() {
    return threatPreventionProfile;
  }

  /**
   * The threat prevention configuration for the SecurityProfile.
   * @param threatPreventionProfile threatPreventionProfile or {@code null} for none
   */
  public SecurityProfile setThreatPreventionProfile(ThreatPreventionProfile threatPreventionProfile) {
    this.threatPreventionProfile = threatPreventionProfile;
    return this;
  }

  /**
   * Immutable. The single ProfileType that the SecurityProfile resource configures.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Immutable. The single ProfileType that the SecurityProfile resource configures.
   * @param type type or {@code null} for none
   */
  public SecurityProfile setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Output only. Last resource update timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Last resource update timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public SecurityProfile setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public SecurityProfile set(String fieldName, Object value) {
    return (SecurityProfile) super.set(fieldName, value);
  }

  @Override
  public SecurityProfile clone() {
    return (SecurityProfile) super.clone();
  }

}
