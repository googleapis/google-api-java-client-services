{
  "revision": "20200731",
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "rootUrl": "https://pubsub.googleapis.com/",
  "name": "pubsub",
  "canonicalName": "Pubsub",
  "description": "Provides reliable, many-to-many, asynchronous messaging between applications.\n",
  "batchPath": "batch",
  "version": "v1",
  "mtlsRootUrl": "https://pubsub.mtls.googleapis.com/",
  "ownerName": "Google",
  "baseUrl": "https://pubsub.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "parameters": {
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "documentationLink": "https://cloud.google.com/pubsub/docs",
  "ownerDomain": "google.com",
  "schemas": {
    "Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n"
        }
      },
      "id": "Binding"
    },
    "SeekRequest": {
      "id": "SeekRequest",
      "type": "object",
      "properties": {
        "time": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time to seek to.\nMessages retained in the subscription that were published before this\ntime are marked as acknowledged, and messages retained in the\nsubscription that were published after this time are marked as\nunacknowledged. Note that this operation affects only those messages\nretained in the subscription (configured by the combination of\n`message_retention_duration` and `retain_acked_messages`). For example,\nif `time` corresponds to a point before the message retention\nwindow (or to a point before the system's notion of the subscription\ncreation time), only retained messages will be marked as unacknowledged,\nand already-expunged messages will not be restored."
        },
        "snapshot": {
          "description": "The snapshot to seek to. The snapshot's topic must be the same as that of\nthe provided subscription.\nFormat is `projects/{project}/snapshots/{snap}`.",
          "type": "string"
        }
      },
      "description": "Request for the `Seek` method."
    },
    "ListTopicSnapshotsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If not empty, indicates that there may be more snapshots that match\nthe request; this value should be passed in a new\n`ListTopicSnapshotsRequest` to get more snapshots."
        },
        "snapshots": {
          "description": "The names of the snapshots that match the request.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response for the `ListTopicSnapshots` method.",
      "id": "ListTopicSnapshotsResponse",
      "type": "object"
    },
    "PublishResponse": {
      "properties": {
        "messageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The server-assigned ID of each published message, in the same order as\nthe messages in the request. IDs are guaranteed to be unique within\nthe topic."
        }
      },
      "id": "PublishResponse",
      "description": "Response for the `Publish` method.",
      "type": "object"
    },
    "PubsubMessage": {
      "type": "object",
      "id": "PubsubMessage",
      "description": "A message that is published by publishers and consumed by subscribers. The\nmessage must contain either a non-empty data field or at least one attribute.\nNote that client libraries represent this object differently\ndepending on the language. See the corresponding [client library\ndocumentation](https://cloud.google.com/pubsub/docs/reference/libraries) for\nmore information. See [quotas and limits]\n(https://cloud.google.com/pubsub/quotas) for more information about message\nlimits.",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Attributes for this message. If this field is empty, the message must\ncontain non-empty data. This can be used to filter messages on the\nsubscription."
        },
        "publishTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the message was published, populated by the server when\nit receives the `Publish` call. It must not be populated by the\npublisher in a `Publish` call."
        },
        "data": {
          "description": "The message data field. If this field is empty, the message must contain\nat least one attribute.",
          "type": "string",
          "format": "byte"
        },
        "orderingKey": {
          "description": "If non-empty, identifies related messages for which publish order should be\nrespected. If a `Subscription` has `enable_message_ordering` set to `true`,\nmessages published with the same non-empty `ordering_key` value will be\ndelivered to subscribers in the order in which they are received by the\nPub/Sub system. All `PubsubMessage`s published in a given `PublishRequest`\nmust specify the same `ordering_key` value.",
          "type": "string"
        },
        "messageId": {
          "type": "string",
          "description": "ID of this message, assigned by the server when the message is published.\nGuaranteed to be unique within the topic. This value may be read by a\nsubscriber that receives a `PubsubMessage` via a `Pull` call or a push\ndelivery. It must not be populated by the publisher in a `Publish` call."
        }
      }
    },
    "UpdateSubscriptionRequest": {
      "properties": {
        "updateMask": {
          "type": "string",
          "description": "Required. Indicates which fields in the provided subscription to update.\nMust be specified and non-empty.",
          "format": "google-fieldmask"
        },
        "subscription": {
          "$ref": "Subscription",
          "description": "Required. The updated subscription object."
        }
      },
      "type": "object",
      "id": "UpdateSubscriptionRequest",
      "description": "Request for the UpdateSubscription method."
    },
    "PullRequest": {
      "description": "Request for the `Pull` method.",
      "type": "object",
      "id": "PullRequest",
      "properties": {
        "maxMessages": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The maximum number of messages to return for this request. Must be a\npositive integer. The Pub/Sub system may return fewer than the number\nspecified."
        },
        "returnImmediately": {
          "description": "Optional. If this field set to true, the system will respond immediately even if\nit there are no messages available to return in the `Pull` response.\nOtherwise, the system may wait (for a bounded amount of time) until at\nleast one message is available, rather than returning no messages. Warning:\nsetting this field to `true` is discouraged because it adversely impacts\nthe performance of `Pull` operations. We recommend that users do not set\nthis field.",
          "type": "boolean"
        }
      }
    },
    "DetachSubscriptionResponse": {
      "properties": {},
      "type": "object",
      "id": "DetachSubscriptionResponse",
      "description": "Response for the DetachSubscription method.\nReserved for future use."
    },
    "MessageStoragePolicy": {
      "description": "A policy constraining the storage of messages published to the topic.",
      "properties": {
        "allowedPersistenceRegions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of IDs of GCP regions where messages that are published to the topic\nmay be persisted in storage. Messages published by publishers running in\nnon-allowed GCP regions (or running outside of GCP altogether) will be\nrouted for storage in one of the allowed regions. An empty list means that\nno regions are allowed, and is not a valid configuration."
        }
      },
      "id": "MessageStoragePolicy",
      "type": "object"
    },
    "ListTopicSubscriptionsResponse": {
      "id": "ListTopicSubscriptionsResponse",
      "properties": {
        "subscriptions": {
          "description": "The names of subscriptions attached to the topic specified in the request.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "If not empty, indicates that there may be more subscriptions that match\nthe request; this value should be passed in a new\n`ListTopicSubscriptionsRequest` to get more subscriptions."
        }
      },
      "type": "object",
      "description": "Response for the `ListTopicSubscriptions` method."
    },
    "UpdateSnapshotRequest": {
      "description": "Request for the UpdateSnapshot method.",
      "type": "object",
      "properties": {
        "snapshot": {
          "$ref": "Snapshot",
          "description": "Required. The updated snapshot object."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "Required. Indicates which fields in the provided snapshot to update.\nMust be specified and non-empty."
        }
      },
      "id": "UpdateSnapshotRequest"
    },
    "ListSnapshotsResponse": {
      "id": "ListSnapshotsResponse",
      "description": "Response for the `ListSnapshots` method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more snapshot that match the\nrequest; this value should be passed in a new `ListSnapshotsRequest`.",
          "type": "string"
        },
        "snapshots": {
          "items": {
            "$ref": "Snapshot"
          },
          "description": "The resulting snapshots.",
          "type": "array"
        }
      }
    },
    "CreateSnapshotRequest": {
      "id": "CreateSnapshotRequest",
      "type": "object",
      "properties": {
        "subscription": {
          "type": "string",
          "description": "Required. The subscription whose backlog the snapshot retains.\nSpecifically, the created snapshot is guaranteed to retain:\n (a) The existing backlog on the subscription. More precisely, this is\n     defined as the messages in the subscription's backlog that are\n     unacknowledged upon the successful completion of the\n     `CreateSnapshot` request; as well as:\n (b) Any messages published to the subscription's topic following the\n     successful completion of the CreateSnapshot request.\nFormat is `projects/{project}/subscriptions/{sub}`."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "See \u003ca href=\"https://cloud.google.com/pubsub/docs/labels\"\u003e Creating and\nmanaging labels\u003c/a\u003e."
        }
      },
      "description": "Request for the `CreateSnapshot` method."
    },
    "ExpirationPolicy": {
      "id": "ExpirationPolicy",
      "type": "object",
      "properties": {
        "ttl": {
          "description": "Specifies the \"time-to-live\" duration for an associated resource. The\nresource expires if it is not active for a period of `ttl`. The definition\nof \"activity\" depends on the type of the associated resource. The minimum\nand maximum allowed values for `ttl` depend on the type of the associated\nresource, as well. If `ttl` is not set, the associated resource never\nexpires.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "description": "A policy that specifies the conditions for resource expiration (i.e.,\nautomatic resource deletion)."
    },
    "DeadLetterPolicy": {
      "type": "object",
      "description": "Dead lettering is done on a best effort basis. The same message might be\ndead lettered multiple times.\n\nIf validation on any of the fields fails at subscription creation/updation,\nthe create/update subscription request will fail.",
      "properties": {
        "maxDeliveryAttempts": {
          "type": "integer",
          "description": "The maximum number of delivery attempts for any message. The value must be\nbetween 5 and 100.\n\nThe number of delivery attempts is defined as 1 + (the sum of number of\nNACKs and number of times the acknowledgement deadline has been exceeded\nfor the message).\n\nA NACK is any call to ModifyAckDeadline with a 0 deadline. Note that\nclient libraries may automatically extend ack_deadlines.\n\nThis field will be honored on a best effort basis.\n\nIf this parameter is 0, a default value of 5 is used.",
          "format": "int32"
        },
        "deadLetterTopic": {
          "type": "string",
          "description": "The name of the topic to which dead letter messages should be published.\nFormat is `projects/{project}/topics/{topic}`.The Cloud Pub/Sub service\naccount associated with the enclosing subscription's parent project (i.e.,\nservice-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must have\npermission to Publish() to this topic.\n\nThe operation will fail if the topic does not exist.\nUsers should ensure that there is a subscription attached to this topic\nsince messages published to a topic with no subscriptions are lost."
        }
      },
      "id": "DeadLetterPolicy"
    },
    "ListSubscriptionsResponse": {
      "id": "ListSubscriptionsResponse",
      "type": "object",
      "description": "Response for the `ListSubscriptions` method.",
      "properties": {
        "subscriptions": {
          "items": {
            "$ref": "Subscription"
          },
          "type": "array",
          "description": "The subscriptions that match the request."
        },
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more subscriptions that match\nthe request; this value should be passed in a new\n`ListSubscriptionsRequest` to get more subscriptions.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        }
      }
    },
    "Snapshot": {
      "type": "object",
      "id": "Snapshot",
      "properties": {
        "expireTime": {
          "description": "The snapshot is guaranteed to exist up until this time.\nA newly-created snapshot expires no later than 7 days from the time of its\ncreation. Its exact lifetime is determined at creation by the existing\nbacklog in the source subscription. Specifically, the lifetime of the\nsnapshot is `7 days - (age of oldest unacked message in the subscription)`.\nFor example, consider a subscription whose oldest unacked message is 3 days\nold. If a snapshot is created from this subscription, the snapshot -- which\nwill always capture this 3-day-old backlog as long as the snapshot\nexists -- will expire in 4 days. The service will refuse to create a\nsnapshot that would expire in less than 1 hour after creation.",
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "See [Creating and managing labels]\n(https://cloud.google.com/pubsub/docs/labels).",
          "additionalProperties": {
            "type": "string"
          }
        },
        "topic": {
          "description": "The name of the topic from which this snapshot is retaining messages.",
          "type": "string"
        },
        "name": {
          "description": "The name of the snapshot.",
          "type": "string"
        }
      },
      "description": "A snapshot resource. Snapshots are used in\n[Seek](https://cloud.google.com/pubsub/docs/replay-overview)\noperations, which allow you to manage message acknowledgments in bulk. That\nis, you can set the acknowledgment state of messages in an existing\nsubscription to the state captured by a snapshot."
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "id": "TestIamPermissionsRequest",
      "type": "object",
      "description": "Request message for `TestIamPermissions` method."
    },
    "ListTopicsResponse": {
      "description": "Response for the `ListTopics` method.",
      "type": "object",
      "id": "ListTopicsResponse",
      "properties": {
        "topics": {
          "type": "array",
          "items": {
            "$ref": "Topic"
          },
          "description": "The resulting topics."
        },
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more topics that match the\nrequest; this value should be passed in a new `ListTopicsRequest`.",
          "type": "string"
        }
      }
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy",
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost."
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        }
      }
    },
    "UpdateTopicRequest": {
      "description": "Request for the UpdateTopic method.",
      "properties": {
        "topic": {
          "description": "Required. The updated topic object.",
          "$ref": "Topic"
        },
        "updateMask": {
          "description": "Required. Indicates which fields in the provided topic to update. Must be specified\nand non-empty. Note that if `update_mask` contains\n\"message_storage_policy\" but the `message_storage_policy` is not set in\nthe `topic` provided above, then the updated value is determined by the\npolicy configured at the project or organization level.",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "id": "UpdateTopicRequest",
      "type": "object"
    },
    "Subscription": {
      "type": "object",
      "description": "A subscription resource.",
      "properties": {
        "retainAckedMessages": {
          "description": "Indicates whether to retain acknowledged messages. If true, then\nmessages are not expunged from the subscription's backlog, even if they are\nacknowledged, until they fall out of the `message_retention_duration`\nwindow. This must be true if you would like to [Seek to a timestamp]\n(https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time).",
          "type": "boolean"
        },
        "pushConfig": {
          "description": "If push delivery is used with this subscription, this field is\nused to configure it. An empty `pushConfig` signifies that the subscriber\nwill pull and ack messages using API methods.",
          "$ref": "PushConfig"
        },
        "deadLetterPolicy": {
          "description": "A policy that specifies the conditions for dead lettering messages in\nthis subscription. If dead_letter_policy is not set, dead lettering\nis disabled.\n\nThe Cloud Pub/Sub service account associated with this subscriptions's\nparent project (i.e.,\nservice-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must have\npermission to Acknowledge() messages on this subscription.",
          "$ref": "DeadLetterPolicy"
        },
        "ackDeadlineSeconds": {
          "description": "The approximate amount of time (on a best-effort basis) Pub/Sub waits for\nthe subscriber to acknowledge receipt before resending the message. In the\ninterval after the message is delivered and before it is acknowledged, it\nis considered to be \u003ci\u003eoutstanding\u003c/i\u003e. During that time period, the\nmessage will not be redelivered (on a best-effort basis).\n\nFor pull subscriptions, this value is used as the initial value for the ack\ndeadline. To override this value for a given message, call\n`ModifyAckDeadline` with the corresponding `ack_id` if using\nnon-streaming pull or send the `ack_id` in a\n`StreamingModifyAckDeadlineRequest` if using streaming pull.\nThe minimum custom deadline you can specify is 10 seconds.\nThe maximum custom deadline you can specify is 600 seconds (10 minutes).\nIf this parameter is 0, a default value of 10 seconds is used.\n\nFor push delivery, this value is also used to set the request timeout for\nthe call to the push endpoint.\n\nIf the subscriber never acknowledges the message, the Pub/Sub\nsystem will eventually redeliver the message.",
          "type": "integer",
          "format": "int32"
        },
        "detached": {
          "type": "boolean",
          "description": "Indicates whether the subscription is detached from its topic. Detached\nsubscriptions don't receive messages from their topic and don't retain any\nbacklog. `Pull` and `StreamingPull` requests will return\nFAILED_PRECONDITION. If the subscription is a push subscription, pushes to\nthe endpoint will not be made."
        },
        "messageRetentionDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "How long to retain unacknowledged messages in the subscription's backlog,\nfrom the moment a message is published.\nIf `retain_acked_messages` is true, then this also configures the retention\nof acknowledged messages, and thus configures how far back in time a `Seek`\ncan be done. Defaults to 7 days. Cannot be more than 7 days or less than 10\nminutes."
        },
        "expirationPolicy": {
          "description": "A policy that specifies the conditions for this subscription's expiration.\nA subscription is considered active as long as any connected subscriber is\nsuccessfully consuming messages from the subscription or is issuing\noperations on the subscription. If `expiration_policy` is not set, a\n*default policy* with `ttl` of 31 days will be used. The minimum allowed\nvalue for `expiration_policy.ttl` is 1 day.",
          "$ref": "ExpirationPolicy"
        },
        "retryPolicy": {
          "$ref": "RetryPolicy",
          "description": "A policy that specifies how Pub/Sub retries message delivery for this\nsubscription.\n\nIf not set, the default retry policy is applied. This generally implies\nthat messages will be retried as soon as possible for healthy subscribers.\nRetryPolicy will be triggered on NACKs or acknowledgement deadline\nexceeded events for a given message."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "See \u003ca href=\"https://cloud.google.com/pubsub/docs/labels\"\u003e Creating and\nmanaging labels\u003c/a\u003e.",
          "type": "object"
        },
        "enableMessageOrdering": {
          "type": "boolean",
          "description": "If true, messages published with the same `ordering_key` in `PubsubMessage`\nwill be delivered to the subscribers in the order in which they\nare received by the Pub/Sub system. Otherwise, they may be delivered in\nany order."
        },
        "name": {
          "description": "Required. The name of the subscription. It must have the format\n`\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must\nstart with a letter, and contain only letters (`[A-Za-z]`), numbers\n(`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),\nplus (`+`) or percent signs (`%`). It must be between 3 and 255 characters\nin length, and it must not start with `\"goog\"`.",
          "type": "string"
        },
        "filter": {
          "description": "An expression written in the Pub/Sub [filter\nlanguage](https://cloud.google.com/pubsub/docs/filtering). If non-empty,\nthen only `PubsubMessage`s whose `attributes` field matches the filter are\ndelivered on this subscription. If empty, then no messages are filtered\nout.",
          "type": "string"
        },
        "topic": {
          "description": "Required. The name of the topic from which this subscription is receiving messages.\nFormat is `projects/{project}/topics/{topic}`.\nThe value of this field will be `_deleted-topic_` if the topic has been\ndeleted.",
          "type": "string"
        }
      },
      "id": "Subscription"
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array"
        }
      }
    },
    "PublishRequest": {
      "id": "PublishRequest",
      "type": "object",
      "properties": {
        "messages": {
          "description": "Required. The messages to publish.",
          "items": {
            "$ref": "PubsubMessage"
          },
          "type": "array"
        }
      },
      "description": "Request for the Publish method."
    },
    "AcknowledgeRequest": {
      "description": "Request for the Acknowledge method.",
      "properties": {
        "ackIds": {
          "description": "Required. The acknowledgment ID for the messages being acknowledged that was returned\nby the Pub/Sub system in the `Pull` response. Must not be empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "AcknowledgeRequest"
    },
    "ModifyPushConfigRequest": {
      "id": "ModifyPushConfigRequest",
      "description": "Request for the ModifyPushConfig method.",
      "properties": {
        "pushConfig": {
          "$ref": "PushConfig",
          "description": "Required. The push configuration for future deliveries.\n\nAn empty `pushConfig` indicates that the Pub/Sub system should\nstop pushing messages from the given subscription and allow\nmessages to be pulled and acknowledged - effectively pausing\nthe subscription if `Pull` or `StreamingPull` is not called."
        }
      },
      "type": "object"
    },
    "RetryPolicy": {
      "type": "object",
      "description": "A policy that specifies how Cloud Pub/Sub retries message delivery.\n\nRetry delay will be exponential based on provided minimum and maximum\nbackoffs. https://en.wikipedia.org/wiki/Exponential_backoff.\n\nRetryPolicy will be triggered on NACKs or acknowledgement deadline exceeded\nevents for a given message.\n\nRetry Policy is implemented on a best effort basis. At times, the delay\nbetween consecutive deliveries may not match the configuration. That is,\ndelay can be more or less than configured backoff.",
      "id": "RetryPolicy",
      "properties": {
        "minimumBackoff": {
          "type": "string",
          "description": "The minimum delay between consecutive deliveries of a given message.\nValue should be between 0 and 600 seconds. Defaults to 10 seconds.",
          "format": "google-duration"
        },
        "maximumBackoff": {
          "type": "string",
          "description": "The maximum delay between consecutive deliveries of a given message.\nValue should be between 0 and 600 seconds. Defaults to 600 seconds.",
          "format": "google-duration"
        }
      }
    },
    "SeekResponse": {
      "description": "Response for the `Seek` method (this response is empty).",
      "properties": {},
      "type": "object",
      "id": "SeekResponse"
    },
    "OidcToken": {
      "id": "OidcToken",
      "type": "object",
      "description": "Contains information needed for generating an\n[OpenID Connect\ntoken](https://developers.google.com/identity/protocols/OpenIDConnect).",
      "properties": {
        "audience": {
          "description": "Audience to be used when generating OIDC token. The audience claim\nidentifies the recipients that the JWT is intended for. The audience\nvalue is a single case-sensitive string. Having multiple values (array)\nfor the audience field is not supported. More info about the OIDC JWT\ntoken audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3\nNote: if not specified, the Push endpoint URL will be used.",
          "type": "string"
        },
        "serviceAccountEmail": {
          "description": "[Service account\nemail](https://cloud.google.com/iam/docs/service-accounts)\nto be used for generating the OIDC token. The caller (for\nCreateSubscription, UpdateSubscription, and ModifyPushConfig RPCs) must\nhave the iam.serviceAccounts.actAs permission for the service account.",
          "type": "string"
        }
      }
    },
    "Expr": {
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language\nsyntax.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() \u003c 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "id": "Expr"
    },
    "ModifyAckDeadlineRequest": {
      "description": "Request for the ModifyAckDeadline method.",
      "type": "object",
      "id": "ModifyAckDeadlineRequest",
      "properties": {
        "ackIds": {
          "description": "Required. List of acknowledgment IDs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ackDeadlineSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The new ack deadline with respect to the time this request was sent to\nthe Pub/Sub system. For example, if the value is 10, the new\nack deadline will expire 10 seconds after the `ModifyAckDeadline` call\nwas made. Specifying zero might immediately make the message available for\ndelivery to another subscriber client. This typically results in an\nincrease in the rate of message redeliveries (that is, duplicates).\nThe minimum deadline you can specify is 0 seconds.\nThe maximum deadline you can specify is 600 seconds (10 minutes)."
        }
      }
    },
    "ReceivedMessage": {
      "description": "A message and its corresponding acknowledgment ID.",
      "properties": {
        "message": {
          "description": "The message.",
          "$ref": "PubsubMessage"
        },
        "deliveryAttempt": {
          "format": "int32",
          "description": "The approximate number of times that Cloud Pub/Sub has attempted to deliver\nthe associated message to a subscriber.\n\nMore precisely, this is 1 + (number of NACKs) +\n(number of ack_deadline exceeds) for this message.\n\nA NACK is any call to ModifyAckDeadline with a 0 deadline. An ack_deadline\nexceeds event is whenever a message is not acknowledged within\nack_deadline. Note that ack_deadline is initially\nSubscription.ackDeadlineSeconds, but may get extended automatically by\nthe client library.\n\nUpon the first delivery of a given message, `delivery_attempt` will have a\nvalue of 1. The value is calculated at best effort and is approximate.\n\nIf a DeadLetterPolicy is not set on the subscription, this will be 0.",
          "type": "integer"
        },
        "ackId": {
          "type": "string",
          "description": "This ID can be used to acknowledge the received message."
        }
      },
      "id": "ReceivedMessage",
      "type": "object"
    },
    "Topic": {
      "type": "object",
      "description": "A topic resource.",
      "id": "Topic",
      "properties": {
        "name": {
          "description": "Required. The name of the topic. It must have the format\n`\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter,\nand contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),\nunderscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent\nsigns (`%`). It must be between 3 and 255 characters in length, and it\nmust not start with `\"goog\"`.",
          "type": "string"
        },
        "labels": {
          "description": "See [Creating and managing labels]\n(https://cloud.google.com/pubsub/docs/labels).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "messageStoragePolicy": {
          "description": "Policy constraining the set of Google Cloud Platform regions where messages\npublished to the topic may be stored. If not present, then no constraints\nare in effect.",
          "$ref": "MessageStoragePolicy"
        },
        "kmsKeyName": {
          "type": "string",
          "description": "The resource name of the Cloud KMS CryptoKey to be used to protect access\nto messages published on this topic.\n\nThe expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`."
        }
      }
    },
    "PullResponse": {
      "properties": {
        "receivedMessages": {
          "description": "Received Pub/Sub messages. The list will be empty if there are no more\nmessages available in the backlog. For JSON, the response can be entirely\nempty. The Pub/Sub system may return fewer than the `maxMessages` requested\neven if there are more messages available in the backlog.",
          "items": {
            "$ref": "ReceivedMessage"
          },
          "type": "array"
        }
      },
      "description": "Response for the `Pull` method.",
      "type": "object",
      "id": "PullResponse"
    },
    "PushConfig": {
      "id": "PushConfig",
      "type": "object",
      "properties": {
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Endpoint configuration attributes that can be used to control different\naspects of the message delivery.\n\nThe only currently supported attribute is `x-goog-version`, which you can\nuse to change the format of the pushed message. This attribute\nindicates the version of the data expected by the endpoint. This\ncontrols the shape of the pushed message (i.e., its fields and metadata).\n\nIf not present during the `CreateSubscription` call, it will default to\nthe version of the Pub/Sub API used to make such call. If not present in a\n`ModifyPushConfig` call, its value will not be changed. `GetSubscription`\ncalls will always return a valid version, even if the subscription was\ncreated without this attribute.\n\nThe only supported values for the `x-goog-version` attribute are:\n\n* `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.\n* `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.\n\nFor example:\n\u003cpre\u003e\u003ccode\u003eattributes { \"x-goog-version\": \"v1\" } \u003c/code\u003e\u003c/pre\u003e"
        },
        "oidcToken": {
          "description": "If specified, Pub/Sub will generate and attach an OIDC JWT token as an\n`Authorization` header in the HTTP request for every pushed message.",
          "$ref": "OidcToken"
        },
        "pushEndpoint": {
          "description": "A URL locating the endpoint to which messages should be pushed.\nFor example, a Webhook endpoint might use `https://example.com/push`.",
          "type": "string"
        }
      },
      "description": "Configuration for a push delivery endpoint."
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/pubsub": {
          "description": "View and manage Pub/Sub topics and subscriptions"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "protocol": "rest",
  "basePath": "",
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "topics": {
          "resources": {
            "snapshots": {
              "methods": {
                "list": {
                  "description": "Lists the names of the snapshots on this topic. Snapshots are used in\n[Seek](https://cloud.google.com/pubsub/docs/replay-overview) operations,\nwhich allow you to manage message acknowledgments in bulk. That is, you can\nset the acknowledgment state of messages in an existing subscription to the\nstate captured by a snapshot.",
                  "id": "pubsub.projects.topics.snapshots.list",
                  "parameterOrder": [
                    "topic"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/pubsub"
                  ],
                  "response": {
                    "$ref": "ListTopicSnapshotsResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+topic}/snapshots",
                  "flatPath": "v1/projects/{projectsId}/topics/{topicsId}/snapshots",
                  "parameters": {
                    "topic": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the topic that snapshots are attached to.\nFormat is `projects/{project}/topics/{topic}`.",
                      "pattern": "^projects/[^/]+/topics/[^/]+$"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListTopicSnapshotsResponse`; indicates\nthat this is a continuation of a prior `ListTopicSnapshots` call, and\nthat the system should return the next page of data.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of snapshot names to return.",
                      "location": "query"
                    }
                  }
                }
              }
            },
            "subscriptions": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListTopicSubscriptionsResponse"
                  },
                  "parameterOrder": [
                    "topic"
                  ],
                  "description": "Lists the names of the attached subscriptions on this topic.",
                  "path": "v1/{+topic}/subscriptions",
                  "id": "pubsub.projects.topics.subscriptions.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/pubsub"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Maximum number of subscription names to return.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The value returned by the last `ListTopicSubscriptionsResponse`; indicates\nthat this is a continuation of a prior `ListTopicSubscriptions` call, and\nthat the system should return the next page of data.",
                      "type": "string"
                    },
                    "topic": {
                      "pattern": "^projects/[^/]+/topics/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the topic that subscriptions are attached to.\nFormat is `projects/{project}/topics/{topic}`."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/topics/{topicsId}/subscriptions"
                }
              }
            }
          },
          "methods": {
            "get": {
              "response": {
                "$ref": "Topic"
              },
              "description": "Gets the configuration of a topic.",
              "parameterOrder": [
                "topic"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "id": "pubsub.projects.topics.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "path": "v1/{+topic}",
              "parameters": {
                "topic": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "description": "Required. The name of the topic to get.\nFormat is `projects/{project}/topics/{topic}`.",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "delete": {
              "description": "Deletes the topic with the given name. Returns `NOT_FOUND` if the topic\ndoes not exist. After a topic is deleted, a new topic may be created with\nthe same name; this is an entirely new topic with none of the old\nconfiguration or subscriptions. Existing subscriptions to this topic are\nnot deleted, but their `topic` field is set to `_deleted-topic_`.",
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "parameterOrder": [
                "topic"
              ],
              "id": "pubsub.projects.topics.delete",
              "parameters": {
                "topic": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "type": "string",
                  "description": "Required. Name of the topic to delete.\nFormat is `projects/{project}/topics/{topic}`."
                }
              },
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "path": "v1/{+topic}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ]
            },
            "testIamPermissions": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "path": "v1/{+resource}:testIamPermissions",
              "id": "pubsub.projects.topics.testIamPermissions",
              "parameters": {
                "resource": {
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "parameterOrder": [
                "resource"
              ],
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:testIamPermissions",
              "httpMethod": "POST",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "TestIamPermissionsResponse"
              }
            },
            "patch": {
              "response": {
                "$ref": "Topic"
              },
              "id": "pubsub.projects.topics.patch",
              "description": "Updates an existing topic. Note that certain properties of a\ntopic are not modifiable.",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "request": {
                "$ref": "UpdateTopicRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "description": "Required. The name of the topic. It must have the format\n`\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter,\nand contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),\nunderscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent\nsigns (`%`). It must be between 3 and 255 characters in length, and it\nmust not start with `\"goog\"`."
                }
              }
            },
            "create": {
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "response": {
                "$ref": "Topic"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "request": {
                "$ref": "Topic"
              },
              "id": "pubsub.projects.topics.create",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the topic. It must have the format\n`\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter,\nand contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),\nunderscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent\nsigns (`%`). It must be between 3 and 255 characters in length, and it\nmust not start with `\"goog\"`.",
                  "required": true
                }
              },
              "path": "v1/{+name}",
              "httpMethod": "PUT",
              "description": "Creates the given topic with the given name. See the [resource name rules](\nhttps://cloud.google.com/pubsub/docs/admin#resource_names).",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "id": "pubsub.projects.topics.list",
              "description": "Lists matching topics.",
              "path": "v1/{+project}/topics",
              "flatPath": "v1/projects/{projectsId}/topics",
              "parameters": {
                "pageSize": {
                  "description": "Maximum number of topics to return.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "project": {
                  "location": "path",
                  "description": "Required. The name of the project in which to list topics.\nFormat is `projects/{project-id}`.",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The value returned by the last `ListTopicsResponse`; indicates that this is\na continuation of a prior `ListTopics` call, and that the system should\nreturn the next page of data."
                }
              },
              "parameterOrder": [
                "project"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "response": {
                "$ref": "ListTopicsResponse"
              }
            },
            "publish": {
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:publish",
              "parameters": {
                "topic": {
                  "description": "Required. The messages in the request will be published on this topic.\nFormat is `projects/{project}/topics/{topic}`.",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "path": "v1/{+topic}:publish",
              "description": "Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic\ndoes not exist.",
              "parameterOrder": [
                "topic"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "PublishRequest"
              },
              "id": "pubsub.projects.topics.publish",
              "response": {
                "$ref": "PublishResponse"
              }
            },
            "setIamPolicy": {
              "parameters": {
                "resource": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "type": "string",
                  "required": true
                }
              },
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
              "path": "v1/{+resource}:setIamPolicy",
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:setIamPolicy",
              "id": "pubsub.projects.topics.setIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "response": {
                "$ref": "Policy"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ]
            },
            "getIamPolicy": {
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:getIamPolicy",
              "id": "pubsub.projects.topics.getIamPolicy",
              "parameters": {
                "options.requestedPolicyVersion": {
                  "type": "integer",
                  "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                  "format": "int32",
                  "location": "query"
                },
                "resource": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field."
                }
              },
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
              "path": "v1/{+resource}:getIamPolicy",
              "httpMethod": "GET",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ]
            }
          }
        },
        "snapshots": {
          "methods": {
            "delete": {
              "parameterOrder": [
                "snapshot"
              ],
              "description": "Removes an existing snapshot. Snapshots are used in [Seek]\n(https://cloud.google.com/pubsub/docs/replay-overview) operations, which\nallow you to manage message acknowledgments in bulk. That is, you can set\nthe acknowledgment state of messages in an existing subscription to the\nstate captured by a snapshot.\nWhen the snapshot is deleted, all messages retained in the snapshot\nare immediately dropped. After a snapshot is deleted, a new one may be\ncreated with the same name, but the new one has no association with the old\nsnapshot or its subscription, unless the same subscription is specified.",
              "path": "v1/{+snapshot}",
              "httpMethod": "DELETE",
              "parameters": {
                "snapshot": {
                  "type": "string",
                  "description": "Required. The name of the snapshot to delete.\nFormat is `projects/{project}/snapshots/{snap}`.",
                  "required": true,
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}",
              "response": {
                "$ref": "Empty"
              },
              "id": "pubsub.projects.snapshots.delete"
            },
            "list": {
              "description": "Lists the existing snapshots. Snapshots are used in [Seek](\nhttps://cloud.google.com/pubsub/docs/replay-overview) operations, which\nallow you to manage message acknowledgments in bulk. That is, you can set\nthe acknowledgment state of messages in an existing subscription to the\nstate captured by a snapshot.",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The value returned by the last `ListSnapshotsResponse`; indicates that this\nis a continuation of a prior `ListSnapshots` call, and that the system\nshould return the next page of data."
                },
                "pageSize": {
                  "description": "Maximum number of snapshots to return.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "project": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the project in which to list snapshots.\nFormat is `projects/{project-id}`.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "ListSnapshotsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameterOrder": [
                "project"
              ],
              "path": "v1/{+project}/snapshots",
              "flatPath": "v1/projects/{projectsId}/snapshots",
              "id": "pubsub.projects.snapshots.list",
              "httpMethod": "GET"
            },
            "setIamPolicy": {
              "response": {
                "$ref": "Policy"
              },
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "id": "pubsub.projects.snapshots.setIamPolicy",
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}:setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "path": "v1/{+resource}:setIamPolicy",
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
            },
            "testIamPermissions": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "path": "v1/{+resource}:testIamPermissions",
              "parameterOrder": [
                "resource"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}:testIamPermissions",
              "id": "pubsub.projects.snapshots.testIamPermissions",
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path"
                }
              },
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "httpMethod": "POST",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              }
            },
            "create": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "required": true,
                  "description": "Required. User-provided name for this snapshot. If the name is not provided in the\nrequest, the server will assign a random name for this snapshot on the same\nproject as the subscription. Note that for REST API requests, you must\nspecify a name.  See the \u003ca\nhref=\"https://cloud.google.com/pubsub/docs/admin#resource_names\"\u003e resource\nname rules\u003c/a\u003e. Format is `projects/{project}/snapshots/{snap}`.",
                  "location": "path",
                  "type": "string"
                }
              },
              "id": "pubsub.projects.snapshots.create",
              "description": "Creates a snapshot from the requested subscription. Snapshots are used in\n[Seek](https://cloud.google.com/pubsub/docs/replay-overview) operations,\nwhich allow you to manage message acknowledgments in bulk. That is, you can\nset the acknowledgment state of messages in an existing subscription to the\nstate captured by a snapshot.\nIf the snapshot already exists, returns `ALREADY_EXISTS`.\nIf the requested subscription doesn't exist, returns `NOT_FOUND`.\nIf the backlog in the subscription is too old -- and the resulting snapshot\nwould expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.\nSee also the `Snapshot.expire_time` field. If the name is not provided in\nthe request, the server will assign a random\nname for this snapshot on the same project as the subscription, conforming\nto the [resource name format]\n(https://cloud.google.com/pubsub/docs/admin#resource_names). The\ngenerated name is populated in the returned Snapshot object. Note that for\nREST API requests, you must specify a name in the request.",
              "response": {
                "$ref": "Snapshot"
              },
              "request": {
                "$ref": "CreateSnapshotRequest"
              }
            },
            "getIamPolicy": {
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
              "id": "pubsub.projects.snapshots.getIamPolicy",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}:getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$"
                },
                "options.requestedPolicyVersion": {
                  "location": "query",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                  "type": "integer"
                }
              }
            },
            "get": {
              "httpMethod": "GET",
              "path": "v1/{+snapshot}",
              "parameters": {
                "snapshot": {
                  "description": "Required. The name of the snapshot to get.\nFormat is `projects/{project}/snapshots/{snap}`.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$"
                }
              },
              "response": {
                "$ref": "Snapshot"
              },
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}",
              "id": "pubsub.projects.snapshots.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameterOrder": [
                "snapshot"
              ],
              "description": "Gets the configuration details of a snapshot. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow you to manage message acknowledgments in bulk. That\nis, you can set the acknowledgment state of messages in an existing\nsubscription to the state captured by a snapshot."
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}",
              "description": "Updates an existing snapshot. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow\nyou to manage message acknowledgments in bulk. That is, you can set the\nacknowledgment state of messages in an existing subscription to the state\ncaptured by a snapshot.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "request": {
                "$ref": "UpdateSnapshotRequest"
              },
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The name of the snapshot."
                }
              },
              "id": "pubsub.projects.snapshots.patch",
              "path": "v1/{+name}",
              "response": {
                "$ref": "Snapshot"
              }
            }
          }
        },
        "subscriptions": {
          "methods": {
            "modifyPushConfig": {
              "id": "pubsub.projects.subscriptions.modifyPushConfig",
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "POST",
              "parameters": {
                "subscription": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "description": "Required. The name of the subscription.\nFormat is `projects/{project}/subscriptions/{sub}`."
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:modifyPushConfig",
              "path": "v1/{+subscription}:modifyPushConfig",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "response": {
                "$ref": "Empty"
              },
              "request": {
                "$ref": "ModifyPushConfigRequest"
              },
              "description": "Modifies the `PushConfig` for a specified subscription.\n\nThis may be used to change a push subscription to a pull one (signified by\nan empty `PushConfig`) or vice versa, or change the endpoint URL and other\nattributes of a push subscription. Messages will accumulate for delivery\ncontinuously through the call regardless of changes to the `PushConfig`."
            },
            "testIamPermissions": {
              "id": "pubsub.projects.subscriptions.testIamPermissions",
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "parameters": {
                "resource": {
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:testIamPermissions",
              "httpMethod": "POST",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "path": "v1/{+resource}:testIamPermissions",
              "parameterOrder": [
                "resource"
              ],
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ]
            },
            "getIamPolicy": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
              "id": "pubsub.projects.subscriptions.getIamPolicy",
              "httpMethod": "GET",
              "response": {
                "$ref": "Policy"
              },
              "parameters": {
                "options.requestedPolicyVersion": {
                  "location": "query",
                  "type": "integer",
                  "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                  "format": "int32"
                },
                "resource": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true
                }
              },
              "parameterOrder": [
                "resource"
              ]
            },
            "modifyAckDeadline": {
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:modifyAckDeadline",
              "request": {
                "$ref": "ModifyAckDeadlineRequest"
              },
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "POST",
              "id": "pubsub.projects.subscriptions.modifyAckDeadline",
              "path": "v1/{+subscription}:modifyAckDeadline",
              "parameters": {
                "subscription": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the subscription.\nFormat is `projects/{project}/subscriptions/{sub}`."
                }
              },
              "description": "Modifies the ack deadline for a specific message. This method is useful\nto indicate that more time is needed to process a message by the\nsubscriber, or to make the message available for redelivery if the\nprocessing was interrupted. Note that this does not modify the\nsubscription-level `ackDeadlineSeconds` used for subsequent messages.",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ]
            },
            "setIamPolicy": {
              "parameterOrder": [
                "resource"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "httpMethod": "POST",
              "path": "v1/{+resource}:setIamPolicy",
              "response": {
                "$ref": "Policy"
              },
              "id": "pubsub.projects.subscriptions.setIamPolicy",
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:setIamPolicy",
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true
                }
              }
            },
            "create": {
              "path": "v1/{+name}",
              "response": {
                "$ref": "Subscription"
              },
              "id": "pubsub.projects.subscriptions.create",
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "request": {
                "$ref": "Subscription"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "description": "Creates a subscription to a given topic. See the [resource name rules]\n(https://cloud.google.com/pubsub/docs/admin#resource_names).\nIf the subscription already exists, returns `ALREADY_EXISTS`.\nIf the corresponding topic doesn't exist, returns `NOT_FOUND`.\n\nIf the name is not provided in the request, the server will assign a random\nname for this subscription on the same project as the topic, conforming\nto the [resource name format]\n(https://cloud.google.com/pubsub/docs/admin#resource_names). The generated\nname is populated in the returned Subscription object. Note that for REST\nAPI requests, you must specify a name in the request.",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the subscription. It must have the format\n`\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must\nstart with a letter, and contain only letters (`[A-Za-z]`), numbers\n(`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),\nplus (`+`) or percent signs (`%`). It must be between 3 and 255 characters\nin length, and it must not start with `\"goog\"`.",
                  "location": "path"
                }
              }
            },
            "pull": {
              "parameters": {
                "subscription": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "required": true,
                  "description": "Required. The subscription from which messages should be pulled.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "subscription"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:pull",
              "response": {
                "$ref": "PullResponse"
              },
              "description": "Pulls messages from the server. The server may return `UNAVAILABLE` if\nthere are too many concurrent pull requests pending for the given\nsubscription.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "path": "v1/{+subscription}:pull",
              "request": {
                "$ref": "PullRequest"
              },
              "id": "pubsub.projects.subscriptions.pull"
            },
            "detach": {
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:detach",
              "parameterOrder": [
                "subscription"
              ],
              "response": {
                "$ref": "DetachSubscriptionResponse"
              },
              "parameters": {
                "subscription": {
                  "description": "Required. The subscription to detach.\nFormat is `projects/{project}/subscriptions/{subscription}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path"
                }
              },
              "id": "pubsub.projects.subscriptions.detach",
              "description": "Detaches a subscription from this topic. All messages retained in the\nsubscription are dropped. Subsequent `Pull` and `StreamingPull` requests\nwill return FAILED_PRECONDITION. If the subscription is a push\nsubscription, pushes to the endpoint will stop.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "httpMethod": "POST",
              "path": "v1/{+subscription}:detach"
            },
            "get": {
              "path": "v1/{+subscription}",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "id": "pubsub.projects.subscriptions.get",
              "parameters": {
                "subscription": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "description": "Required. The name of the subscription to get.\nFormat is `projects/{project}/subscriptions/{sub}`."
                }
              },
              "response": {
                "$ref": "Subscription"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "description": "Gets the configuration details of a subscription.",
              "parameterOrder": [
                "subscription"
              ]
            },
            "list": {
              "response": {
                "$ref": "ListSubscriptionsResponse"
              },
              "description": "Lists matching subscriptions.",
              "flatPath": "v1/projects/{projectsId}/subscriptions",
              "id": "pubsub.projects.subscriptions.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameterOrder": [
                "project"
              ],
              "parameters": {
                "project": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the project in which to list subscriptions.\nFormat is `projects/{project-id}`.",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "Maximum number of subscriptions to return.",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The value returned by the last `ListSubscriptionsResponse`; indicates that\nthis is a continuation of a prior `ListSubscriptions` call, and that the\nsystem should return the next page of data.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+project}/subscriptions",
              "httpMethod": "GET"
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "UpdateSubscriptionRequest"
              },
              "response": {
                "$ref": "Subscription"
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "description": "Updates an existing subscription. Note that certain properties of a\nsubscription, such as its topic, are not modifiable.",
              "id": "pubsub.projects.subscriptions.patch",
              "parameters": {
                "name": {
                  "description": "Required. The name of the subscription. It must have the format\n`\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must\nstart with a letter, and contain only letters (`[A-Za-z]`), numbers\n(`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),\nplus (`+`) or percent signs (`%`). It must be between 3 and 255 characters\nin length, and it must not start with `\"goog\"`.",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "PATCH"
            },
            "delete": {
              "path": "v1/{+subscription}",
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "httpMethod": "DELETE",
              "id": "pubsub.projects.subscriptions.delete",
              "parameters": {
                "subscription": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "description": "Required. The subscription to delete.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "subscription"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "description": "Deletes an existing subscription. All messages retained in the subscription\nare immediately dropped. Calls to `Pull` after deletion will return\n`NOT_FOUND`. After a subscription is deleted, a new one may be created with\nthe same name, but the new one has no association with the old\nsubscription or its topic unless the same topic is specified."
            },
            "seek": {
              "path": "v1/{+subscription}:seek",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "httpMethod": "POST",
              "parameterOrder": [
                "subscription"
              ],
              "response": {
                "$ref": "SeekResponse"
              },
              "parameters": {
                "subscription": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The subscription to affect.",
                  "required": true,
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$"
                }
              },
              "id": "pubsub.projects.subscriptions.seek",
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:seek",
              "description": "Seeks an existing subscription to a point in time or to a given snapshot,\nwhichever is provided in the request. Snapshots are used in [Seek](\nhttps://cloud.google.com/pubsub/docs/replay-overview) operations, which\nallow you to manage message acknowledgments in bulk. That is, you can set\nthe acknowledgment state of messages in an existing subscription to the\nstate captured by a snapshot. Note that both the subscription and the\nsnapshot must be on the same topic.",
              "request": {
                "$ref": "SeekRequest"
              }
            },
            "acknowledge": {
              "description": "Acknowledges the messages associated with the `ack_ids` in the\n`AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages\nfrom the subscription.\n\nAcknowledging a message whose ack deadline has expired may succeed,\nbut such a message may be redelivered later. Acknowledging a message more\nthan once will not result in an error.",
              "path": "v1/{+subscription}:acknowledge",
              "response": {
                "$ref": "Empty"
              },
              "request": {
                "$ref": "AcknowledgeRequest"
              },
              "httpMethod": "POST",
              "id": "pubsub.projects.subscriptions.acknowledge",
              "parameterOrder": [
                "subscription"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "subscription": {
                  "description": "Required. The subscription whose message is being acknowledged.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:acknowledge"
            }
          }
        }
      }
    }
  },
  "title": "Cloud Pub/Sub API",
  "id": "pubsub:v1"
}
