{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "ownerDomain": "google.com",
  "schemas": {
    "RunPivotReportResponse": {
      "id": "RunPivotReportResponse",
      "properties": {
        "metadata": {
          "$ref": "ResponseMetaData",
          "description": "Metadata for the report."
        },
        "aggregates": {
          "items": {
            "$ref": "Row"
          },
          "type": "array",
          "description": "Aggregation of metric values. Can be totals, minimums, or maximums. The returned aggregations are controlled by the metric_aggregations in the pivot. The type of aggregation returned in each row is shown by the dimension_values which are set to \"RESERVED_\"."
        },
        "pivotHeaders": {
          "items": {
            "$ref": "PivotHeader"
          },
          "type": "array",
          "description": "Summarizes the columns and rows created by a pivot. Each pivot in the request produces one header in the response. If we have a request like this: \"pivots\": [{ \"fieldNames\": [\"country\", \"city\"] }, { \"fieldNames\": \"eventName\" }] We will have the following `pivotHeaders` in the response: \"pivotHeaders\" : [{ \"dimensionHeaders\": [{ \"dimensionValues\": [ { \"value\": \"United Kingdom\" }, { \"value\": \"London\" } ] }, { \"dimensionValues\": [ { \"value\": \"Japan\" }, { \"value\": \"Osaka\" } ] }] }, { \"dimensionHeaders\": [{ \"dimensionValues\": [{ \"value\": \"session_start\" }] }, { \"dimensionValues\": [{ \"value\": \"scroll\" }] }] }]"
        },
        "propertyQuota": {
          "$ref": "PropertyQuota",
          "description": "This Analytics Property's quota state including this request."
        },
        "metricHeaders": {
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
          "type": "array",
          "items": {
            "$ref": "MetricHeader"
          }
        },
        "rows": {
          "type": "array",
          "description": "Rows of dimension value combinations and metric values in the report.",
          "items": {
            "$ref": "Row"
          }
        },
        "dimensionHeaders": {
          "type": "array",
          "items": {
            "$ref": "DimensionHeader"
          },
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows."
        }
      },
      "type": "object",
      "description": "The response pivot report table corresponding to a pivot request."
    },
    "RunReportRequest": {
      "description": "The request to generate a report.",
      "type": "object",
      "properties": {
        "limit": {
          "description": "The number of rows to return. If unspecified, 10 rows are returned. If -1, all rows are returned.",
          "type": "string",
          "format": "int64"
        },
        "offset": {
          "type": "string",
          "description": "The row count of the start row. The first row is counted as row 0.",
          "format": "int64"
        },
        "metricAggregations": {
          "items": {
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ],
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ],
            "type": "string"
          },
          "type": "array",
          "description": "Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\"."
        },
        "orderBys": {
          "description": "Specifies how rows are ordered in the response.",
          "type": "array",
          "items": {
            "$ref": "OrderBy"
          }
        },
        "metrics": {
          "type": "array",
          "description": "The metrics requested and displayed.",
          "items": {
            "$ref": "Metric"
          }
        },
        "cohortSpec": {
          "description": "Cohort group associated with this request. If there is a cohort group in the request the 'cohort' dimension must be present.",
          "$ref": "CohortSpec"
        },
        "dimensionFilter": {
          "description": "The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter.",
          "$ref": "FilterExpression"
        },
        "entity": {
          "description": "A property whose events are tracked. Within a batch request, this entity should either be unspecified or consistent with the batch-level entity.",
          "$ref": "Entity"
        },
        "currencyCode": {
          "description": "A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the entity's default currency.",
          "type": "string"
        },
        "dateRanges": {
          "description": "Date ranges of data to read. If multiple date ranges are requested, each response row will contain a zero based date range index. If two date ranges overlap, the event data for the overlapping days is included in the response rows for both date ranges. In a cohort request, this `dateRanges` must be unspecified.",
          "items": {
            "$ref": "DateRange"
          },
          "type": "array"
        },
        "keepEmptyRows": {
          "type": "boolean",
          "description": "If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter."
        },
        "metricFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter."
        },
        "dimensions": {
          "description": "The dimensions requested and displayed.",
          "items": {
            "$ref": "Dimension"
          },
          "type": "array"
        },
        "returnPropertyQuota": {
          "type": "boolean",
          "description": "Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota)."
        }
      },
      "id": "RunReportRequest"
    },
    "InListFilter": {
      "id": "InListFilter",
      "description": "The result needs to be in a list of string values.",
      "type": "object",
      "properties": {
        "values": {
          "items": {
            "type": "string"
          },
          "description": "The list of string values. Must be non-empty.",
          "type": "array"
        },
        "caseSensitive": {
          "description": "If true, the string value is case sensitive.",
          "type": "boolean"
        }
      }
    },
    "FilterExpression": {
      "id": "FilterExpression",
      "type": "object",
      "description": "To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.",
      "properties": {
        "orGroup": {
          "description": "The FilterExpressions in or_group have an OR relationship.",
          "$ref": "FilterExpressionList"
        },
        "filter": {
          "$ref": "Filter",
          "description": "A primitive filter. All fields in filter in same FilterExpression needs to be either all dimensions or metrics."
        },
        "andGroup": {
          "description": "The FilterExpressions in and_group have an AND relationship.",
          "$ref": "FilterExpressionList"
        },
        "notExpression": {
          "$ref": "FilterExpression",
          "description": "The FilterExpression is NOT of not_expression."
        }
      }
    },
    "PivotSelection": {
      "properties": {
        "dimensionName": {
          "description": "Must be a dimension name from the request.",
          "type": "string"
        },
        "dimensionValue": {
          "type": "string",
          "description": "Order by only when the named dimension is this value."
        }
      },
      "type": "object",
      "id": "PivotSelection",
      "description": "A pair of dimension names and values. Rows with this dimension pivot pair are ordered by the metric's value. For example if pivots = {{\"browser\", \"Chrome\"}} and metric_name = \"Sessions\", then the rows will be sorted based on Sessions in Chrome. ---------|----------|----------------|----------|---------------- | Chrome | Chrome | Safari | Safari ---------|----------|----------------|----------|---------------- Country | Sessions | Pages/Sessions | Sessions | Pages/Sessions ---------|----------|----------------|----------|---------------- US | 2 | 2 | 3 | 1 ---------|----------|----------------|----------|---------------- Canada | 3 | 1 | 4 | 1 ---------|----------|----------------|----------|----------------"
    },
    "MetricOrderBy": {
      "type": "object",
      "properties": {
        "metricName": {
          "description": "A metric name in the request to order by.",
          "type": "string"
        }
      },
      "id": "MetricOrderBy",
      "description": "Sorts by metric values."
    },
    "RunPivotReportRequest": {
      "description": "The request to generate a pivot report.",
      "properties": {
        "cohortSpec": {
          "$ref": "CohortSpec",
          "description": "Cohort group associated with this request. If there is a cohort group in the request the 'cohort' dimension must be present."
        },
        "pivots": {
          "type": "array",
          "description": "Describes the visual format of the report's dimensions in columns or rows. The union of the fieldNames (dimension names) in all pivots must be a subset of dimension names defined in Dimensions. No two pivots can share a dimension. A dimension is only visible if it appears in a pivot.",
          "items": {
            "$ref": "Pivot"
          }
        },
        "keepEmptyRows": {
          "type": "boolean",
          "description": "If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter."
        },
        "dateRanges": {
          "description": "The date range to retrieve event data for the report. If multiple date ranges are specified, event data from each date range is used in the report. A special dimension with field name \"dateRange\" can be included in a Pivot's field names; if included, the report compares between date ranges. In a cohort request, this `dateRanges` must be unspecified.",
          "items": {
            "$ref": "DateRange"
          },
          "type": "array"
        },
        "currencyCode": {
          "description": "A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the entity's default currency.",
          "type": "string"
        },
        "metricFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter."
        },
        "dimensionFilter": {
          "description": "The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter.",
          "$ref": "FilterExpression"
        },
        "metrics": {
          "description": "The metrics requested, at least one metric needs to be specified. All defined metrics must be used by one of the following: metric_expression, metric_filter, order_bys.",
          "type": "array",
          "items": {
            "$ref": "Metric"
          }
        },
        "dimensions": {
          "items": {
            "$ref": "Dimension"
          },
          "description": "The dimensions requested. All defined dimensions must be used by one of the following: dimension_expression, dimension_filter, pivots, order_bys.",
          "type": "array"
        },
        "entity": {
          "$ref": "Entity",
          "description": "A property whose events are tracked. Within a batch request, this entity should either be unspecified or consistent with the batch-level entity."
        },
        "returnPropertyQuota": {
          "description": "Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota).",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "RunPivotReportRequest"
    },
    "BatchRunReportsRequest": {
      "id": "BatchRunReportsRequest",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "RunReportRequest"
          },
          "description": "Individual requests. Each request has a separate report response. Each batch request is allowed up to 5 requests."
        },
        "entity": {
          "$ref": "Entity",
          "description": "A property whose events are tracked. This entity must be specified for the batch. The entity within RunReportRequest may either be unspecified or consistent with this entity."
        }
      },
      "type": "object",
      "description": "The batch request containing multiple report requests."
    },
    "Metric": {
      "description": "The quantitative measurements of a report. For example, the metric `eventCount` is the total number of events. Requests are allowed up to 10 metrics.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metric. See the [API Metrics](https://developers.google.com/analytics/trusted-testing/analytics-data/api-schema#metrics) for the list of metric names. If `expression` is specified, `name` can be any string that you would like. For example if `expression` is `screenPageViews/sessions`, you could call that metric's name = `viewsPerSession`. Metrics are referenced by `name` in `metricFilter`, `orderBys`, and metric `expression`."
        },
        "invisible": {
          "description": "Indicates if a metric is invisible in the report response. If a metric is invisible, the metric will not produce a column in the response, but can be used in `metricFilter`, `orderBys`, or a metric `expression`.",
          "type": "boolean"
        },
        "expression": {
          "type": "string",
          "description": "A mathematical expression for derived metrics. For example, the metric Event count per user is `eventCount/totalUsers`."
        }
      },
      "type": "object",
      "id": "Metric"
    },
    "CohortSpec": {
      "description": "Specification for a cohort report.",
      "properties": {
        "cohortsRange": {
          "$ref": "CohortsRange",
          "description": "The data ranges of cohorts."
        },
        "cohortReportSettings": {
          "$ref": "CohortReportSettings",
          "description": "Settings of a cohort report."
        },
        "cohorts": {
          "description": "The definition for the cohorts.",
          "type": "array",
          "items": {
            "$ref": "Cohort"
          }
        }
      },
      "type": "object",
      "id": "CohortSpec"
    },
    "BetweenFilter": {
      "properties": {
        "toValue": {
          "$ref": "NumericValue",
          "description": "Ends with this number."
        },
        "fromValue": {
          "$ref": "NumericValue",
          "description": "Begins with this number."
        }
      },
      "type": "object",
      "id": "BetweenFilter",
      "description": "To express that the result needs to be between two numbers (inclusive)."
    },
    "QuotaStatus": {
      "id": "QuotaStatus",
      "description": "Current state for a particular quota group.",
      "type": "object",
      "properties": {
        "consumed": {
          "description": "Quota consumed by this request.",
          "type": "integer",
          "format": "int32"
        },
        "remaining": {
          "description": "Quota remaining after this request.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResponseMetaData": {
      "id": "ResponseMetaData",
      "properties": {
        "dataLossFromOtherRow": {
          "description": "If true, indicates some buckets of dimension combinations are rolled into \"(other)\" row. This can happen for high cardinality reports.",
          "type": "boolean"
        }
      },
      "description": "Response's metadata carrying additional information about the report content.",
      "type": "object"
    },
    "DimensionValue": {
      "id": "DimensionValue",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value as a string if the dimension type is a string."
        }
      },
      "type": "object",
      "description": "The value of a dimension."
    },
    "UniversalMetadata": {
      "id": "UniversalMetadata",
      "description": "The dimensions and metrics currently accepted in reporting methods.",
      "properties": {
        "metrics": {
          "description": "The metric descriptions.",
          "items": {
            "$ref": "MetricMetadata"
          },
          "type": "array"
        },
        "dimensions": {
          "type": "array",
          "description": "The dimensions descriptions.",
          "items": {
            "$ref": "DimensionMetadata"
          }
        }
      },
      "type": "object"
    },
    "Pivot": {
      "properties": {
        "metricAggregations": {
          "description": "Aggregate the metrics by dimensions in this pivot using the specified metric_aggregations.",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ],
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ]
          },
          "type": "array"
        },
        "offset": {
          "type": "string",
          "format": "int64",
          "description": "The row count of the start row. The first row is counted as row 0."
        },
        "limit": {
          "format": "int64",
          "type": "string",
          "description": "The number of rows to return in this pivot. If unspecified, 10 rows are returned. If -1, all rows are returned."
        },
        "orderBys": {
          "type": "array",
          "description": "Specifies how dimensions are ordered in the pivot. In the first Pivot, the OrderBys determine Row and PivotDimensionHeader ordering; in subsequent Pivots, the OrderBys determine only PivotDimensionHeader ordering. Dimensions specified in these OrderBys must be a subset of Pivot.field_names.",
          "items": {
            "$ref": "OrderBy"
          }
        },
        "fieldNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Dimension names for visible columns in the report response. Including \"dateRange\" produces a date range column; for each row in the response, dimension values in the date range column will indicate the corresponding date range from the request."
        }
      },
      "description": "Describes the visible dimension columns and rows in the report response.",
      "type": "object",
      "id": "Pivot"
    },
    "MetricHeader": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified type.",
            "Integer type.",
            "Floating point type.",
            "A duration of seconds; a special floating point type.",
            "A duration in milliseconds; a special floating point type.",
            "A duration in minutes; a special floating point type.",
            "A duration in hours; a special floating point type.",
            "A custom metric of standard type; a special floating point type.",
            "An amount of money; a special floating point type.",
            "A length in feet; a special floating point type.",
            "A length in miles; a special floating point type.",
            "A length in meters; a special floating point type.",
            "A length in kilometers; a special floating point type."
          ],
          "type": "string",
          "description": "The metric's data type.",
          "enum": [
            "METRIC_TYPE_UNSPECIFIED",
            "TYPE_INTEGER",
            "TYPE_FLOAT",
            "TYPE_SECONDS",
            "TYPE_MILLISECONDS",
            "TYPE_MINUTES",
            "TYPE_HOURS",
            "TYPE_STANDARD",
            "TYPE_CURRENCY",
            "TYPE_FEET",
            "TYPE_MILES",
            "TYPE_METERS",
            "TYPE_KILOMETERS"
          ]
        },
        "name": {
          "type": "string",
          "description": "The metric's name."
        }
      },
      "description": "Describes a metric column in the report. Visible metrics requested in a report produce column entries within rows and MetricHeaders. However, metrics used exclusively within filters or expressions do not produce columns in a report; correspondingly, those metrics do not produce headers.",
      "type": "object",
      "id": "MetricHeader"
    },
    "ConcatenateExpression": {
      "description": "Used to combine dimension values to a single dimension.",
      "type": "object",
      "id": "ConcatenateExpression",
      "properties": {
        "delimiter": {
          "type": "string",
          "description": "The delimiter placed between dimension names. Delimiters are often single characters such as \"|\" or \",\" but can be longer strings. If a dimension value contains the delimiter, both will be present in response with no distinction. For example if dimension 1 value = \"US,FR\", dimension 2 value = \"JP\", and delimiter = \",\", then the response will contain \"US,FR,JP\"."
        },
        "dimensionNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Names of dimensions. The names must refer back to names in the dimensions field of the request."
        }
      }
    },
    "CohortReportSettings": {
      "properties": {
        "accumulate": {
          "description": "If true, accumulates the result from first visit day to the end day. Not supported in `RunReportRequest`.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Settings of a cohort report.",
      "id": "CohortReportSettings"
    },
    "DateRange": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Assigns a name to this date range. The dimension `dateRange` is valued to this name in a report response. If set, cannot begin with `date_range_` or `RESERVED_`. If not set, date ranges are named by their zero based index in the request: `date_range_0`, `date_range_1`, etc."
        },
        "startDate": {
          "type": "string",
          "description": "The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot be after `end_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone."
        },
        "endDate": {
          "description": "The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot be before `start_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.",
          "type": "string"
        }
      },
      "description": "A contiguous set of days: startDate, startDate + 1, ..., endDate. Requests are allowed up to 4 date ranges, and the union of the ranges can cover up to 1 year.",
      "id": "DateRange",
      "type": "object"
    },
    "CohortsRange": {
      "properties": {
        "granularity": {
          "enum": [
            "GRANULARITY_UNSPECIFIED",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "description": "Reporting date range for each cohort is calculated based on these three fields.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Daily",
            "Weekly",
            "Monthly"
          ]
        },
        "endOffset": {
          "format": "int32",
          "type": "integer",
          "description": "For daily cohorts, this will be the end day offset. For weekly cohorts, this will be the week offset."
        },
        "startOffset": {
          "format": "int32",
          "description": "For daily cohorts, this will be the start day offset. For weekly cohorts, this will be the week offset.",
          "type": "integer"
        }
      },
      "id": "CohortsRange",
      "description": "Describes date range for a cohort report.",
      "type": "object"
    },
    "PivotOrderBy": {
      "properties": {
        "metricName": {
          "description": "In the response to order by, order rows by this column. Must be a metric name from the request.",
          "type": "string"
        },
        "pivotSelections": {
          "items": {
            "$ref": "PivotSelection"
          },
          "type": "array",
          "description": "Used to select a dimension name and value pivot. If multiple pivot selections are given, the sort occurs on rows where all pivot selection dimension name and value pairs match the row's dimension name and value pair."
        }
      },
      "id": "PivotOrderBy",
      "description": "Sorts by a pivot column group.",
      "type": "object"
    },
    "DimensionMetadata": {
      "properties": {
        "deprecatedApiNames": {
          "type": "array",
          "description": "Still usable but deprecated names for this dimension. If populated, this dimension is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the dimension will be available only by `apiName`.",
          "items": {
            "type": "string"
          }
        },
        "apiName": {
          "description": "This dimension's name. Useable in [Dimension](#Dimension)'s `name`. For example, `eventName`.",
          "type": "string"
        },
        "description": {
          "description": "Description of how this dimension is used and calculated.",
          "type": "string"
        },
        "uiName": {
          "description": "This dimension's name within the Google Analytics user interface. For example, `Event name`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DimensionMetadata",
      "description": "Explains a dimension."
    },
    "DimensionExpression": {
      "description": "Used to express a dimension which is the result of a formula of multiple dimensions. Example usages: 1) lower_case(dimension) 2) concatenate(dimension1, symbol, dimension2).",
      "type": "object",
      "id": "DimensionExpression",
      "properties": {
        "upperCase": {
          "description": "Used to convert a dimension value to upper case.",
          "$ref": "CaseExpression"
        },
        "lowerCase": {
          "$ref": "CaseExpression",
          "description": "Used to convert a dimension value to lower case."
        },
        "concatenate": {
          "$ref": "ConcatenateExpression",
          "description": "Used to combine dimension values to a single dimension. For example, dimension \"country, city\": concatenate(country, \", \", city)."
        }
      }
    },
    "BatchRunPivotReportsRequest": {
      "id": "BatchRunPivotReportsRequest",
      "description": "The batch request containing multiple pivot report requests.",
      "properties": {
        "requests": {
          "items": {
            "$ref": "RunPivotReportRequest"
          },
          "type": "array",
          "description": "Individual requests. Each request has a separate pivot report response. Each batch request is allowed up to 5 requests."
        },
        "entity": {
          "description": "A property whose events are tracked. This entity must be specified for the batch. The entity within RunPivotReportRequest may either be unspecified or consistent with this entity.",
          "$ref": "Entity"
        }
      },
      "type": "object"
    },
    "MetricMetadata": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "METRIC_TYPE_UNSPECIFIED",
            "TYPE_INTEGER",
            "TYPE_FLOAT",
            "TYPE_SECONDS",
            "TYPE_MILLISECONDS",
            "TYPE_MINUTES",
            "TYPE_HOURS",
            "TYPE_STANDARD",
            "TYPE_CURRENCY",
            "TYPE_FEET",
            "TYPE_MILES",
            "TYPE_METERS",
            "TYPE_KILOMETERS"
          ],
          "description": "The type of this metric.",
          "enumDescriptions": [
            "Unspecified type.",
            "Integer type.",
            "Floating point type.",
            "A duration of seconds; a special floating point type.",
            "A duration in milliseconds; a special floating point type.",
            "A duration in minutes; a special floating point type.",
            "A duration in hours; a special floating point type.",
            "A custom metric of standard type; a special floating point type.",
            "An amount of money; a special floating point type.",
            "A length in feet; a special floating point type.",
            "A length in miles; a special floating point type.",
            "A length in meters; a special floating point type.",
            "A length in kilometers; a special floating point type."
          ]
        },
        "deprecatedApiNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Still usable but deprecated names for this metric. If populated, this metric is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the metric will be available only by `apiName`."
        },
        "uiName": {
          "description": "This metric's name within the Google Analytics user interface. For example, `Event count`.",
          "type": "string"
        },
        "apiName": {
          "description": "A metric name. Useable in [Metric](#Metric)'s `name`. For example, `eventCount`.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "The mathematical expression for this derived metric. Can be used in [Metric](#Metric)'s `expression` field for equivalent reports. Most metrics are not expressions, and for non-expressions, this field is empty."
        },
        "description": {
          "description": "Description of how this metric is used and calculated.",
          "type": "string"
        }
      },
      "id": "MetricMetadata",
      "description": "Explains a metric.",
      "type": "object"
    },
    "DimensionOrderBy": {
      "id": "DimensionOrderBy",
      "properties": {
        "dimensionName": {
          "description": "A dimension name in the request to order by.",
          "type": "string"
        },
        "orderType": {
          "enum": [
            "ORDER_TYPE_UNSPECIFIED",
            "ALPHANUMERIC",
            "CASE_INSENSITIVE_ALPHANUMERIC",
            "NUMERIC"
          ],
          "description": "Controls the rule for dimension value ordering.",
          "enumDescriptions": [
            "Unspecified.",
            "Alphanumeric sort by Unicode code point. For example, \"2\" \u003c \"A\" \u003c \"X\" \u003c \"b\" \u003c \"z\".",
            "Case insensitive alphanumeric sort by lower case Unicode code point. For example, \"2\" \u003c \"A\" \u003c \"b\" \u003c \"X\" \u003c \"z\".",
            "Dimension values are converted to numbers before sorting. For example in NUMERIC sort, \"25\" \u003c \"100\", and in `ALPHANUMERIC` sort, \"100\" \u003c \"25\". Non-numeric dimension values all have equal ordering value below all numeric values."
          ],
          "type": "string"
        }
      },
      "description": "Sorts by dimension values.",
      "type": "object"
    },
    "CaseExpression": {
      "type": "object",
      "description": "Used to convert a dimension value to a single case.",
      "properties": {
        "dimensionName": {
          "type": "string",
          "description": "Name of a dimension. The name must refer back to a name in dimensions field of the request."
        }
      },
      "id": "CaseExpression"
    },
    "StringFilter": {
      "description": "The filter for string",
      "id": "StringFilter",
      "properties": {
        "value": {
          "type": "string",
          "description": "The string value used for the matching."
        },
        "caseSensitive": {
          "type": "boolean",
          "description": "If true, the string value is case sensitive."
        },
        "matchType": {
          "enumDescriptions": [
            "Unspecified",
            "Exact match of the string value.",
            "Begins with the string value.",
            "Ends with the string value.",
            "Contains the string value.",
            "Full regular expression match with the string value.",
            "Partial regular expression match with the string value."
          ],
          "type": "string",
          "enum": [
            "MATCH_TYPE_UNSPECIFIED",
            "EXACT",
            "BEGINS_WITH",
            "ENDS_WITH",
            "CONTAINS",
            "FULL_REGEXP",
            "PARTIAL_REGEXP"
          ],
          "description": "The match type for this filter."
        }
      },
      "type": "object"
    },
    "Row": {
      "id": "Row",
      "properties": {
        "metricValues": {
          "description": "List of requested visible metric values.",
          "type": "array",
          "items": {
            "$ref": "MetricValue"
          }
        },
        "dimensionValues": {
          "description": "List of requested dimension values. In a PivotReport, dimension_values are only listed for dimensions included in a pivot.",
          "type": "array",
          "items": {
            "$ref": "DimensionValue"
          }
        }
      },
      "type": "object",
      "description": "Report data for each row. For example if RunReportRequest contains: ```none dimensions { name: \"eventName\" } dimensions { name: \"countryId\" } metrics { name: \"eventCount\" } ``` One row with 'in_app_purchase' as the eventName, 'us' as the countryId, and 15 as the eventCount, would be: ```none dimension_values { name: 'in_app_purchase' name: 'us' } metric_values { int64_value: 15 } ```"
    },
    "BatchRunPivotReportsResponse": {
      "id": "BatchRunPivotReportsResponse",
      "type": "object",
      "description": "The batch response containing multiple pivot reports.",
      "properties": {
        "pivotReports": {
          "type": "array",
          "description": "Individual responses. Each response has a separate pivot report request.",
          "items": {
            "$ref": "RunPivotReportResponse"
          }
        }
      }
    },
    "Cohort": {
      "id": "Cohort",
      "properties": {
        "dateRange": {
          "description": "The cohort selects users whose first visit date is between start date and end date defined in the `dateRange`. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. The date range should be aligned with the cohort's granularity. If CohortsRange uses daily granularity, the date range can be aligned to any day. If CohortsRange uses weekly granularity, the date range should be aligned to the week boundary, starting at Sunday and ending Saturday. If CohortsRange uses monthly granularity, the date range should be aligned to the month, starting at the first and ending on the last day of the month.",
          "$ref": "DateRange"
        },
        "name": {
          "description": "Assigns a name to this cohort. The dimension `cohort` is valued to this name in a report response. If set, cannot begin with `cohort_` or `RESERVED_`. If not set, cohorts are named by their zero based index `cohort_0`, `cohort_1`, etc.",
          "type": "string"
        },
        "dimension": {
          "description": "The dimension used by cohort. Only supports `firstTouchDate` for retention report.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Defines a cohort. A cohort is a group of users who share a common characteristic. For example, all users with the same acquisition date belong to the same cohort."
    },
    "PivotDimensionHeader": {
      "type": "object",
      "properties": {
        "dimensionValues": {
          "type": "array",
          "items": {
            "$ref": "DimensionValue"
          },
          "description": "Values of multiple dimensions in a pivot."
        }
      },
      "id": "PivotDimensionHeader",
      "description": "Summarizes dimension values from a row for this pivot."
    },
    "Entity": {
      "description": "The unique identifier of the property whose events are tracked.",
      "properties": {
        "propertyId": {
          "type": "string",
          "description": "A Google Analytics GA4 property id. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/trusted-testing/analytics-data/property-id)."
        }
      },
      "type": "object",
      "id": "Entity"
    },
    "FilterExpressionList": {
      "properties": {
        "expressions": {
          "items": {
            "$ref": "FilterExpression"
          },
          "type": "array",
          "description": "A list of filter expressions."
        }
      },
      "id": "FilterExpressionList",
      "type": "object",
      "description": "A list of filter expressions."
    },
    "PivotHeader": {
      "type": "object",
      "description": "Dimensions' values in a single pivot.",
      "properties": {
        "rowCount": {
          "format": "int32",
          "description": "The cardinality of the pivot as if offset = 0 and limit = -1. The total number of rows for this pivot's fields regardless of how the parameters offset and limit are specified in the request.",
          "type": "integer"
        },
        "pivotDimensionHeaders": {
          "items": {
            "$ref": "PivotDimensionHeader"
          },
          "type": "array",
          "description": "The size is the same as the cardinality of the corresponding dimension combinations."
        }
      },
      "id": "PivotHeader"
    },
    "Metadata": {
      "type": "object",
      "description": "The dimensions and metrics currently accepted in reporting methods.",
      "id": "Metadata",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name of this metadata."
        },
        "dimensions": {
          "description": "The dimension descriptions.",
          "items": {
            "$ref": "DimensionMetadata"
          },
          "type": "array"
        },
        "metrics": {
          "description": "The metric descriptions.",
          "type": "array",
          "items": {
            "$ref": "MetricMetadata"
          }
        }
      }
    },
    "Dimension": {
      "id": "Dimension",
      "type": "object",
      "description": "Dimensions are attributes of your data. For example, the dimension city indicates the city from which an event originates. Dimension values in report responses are strings; for example, city could be \"Paris\" or \"New York\". Requests are allowed up to 8 dimensions.",
      "properties": {
        "dimensionExpression": {
          "$ref": "DimensionExpression",
          "description": "One dimension can be the result of an expression of multiple dimensions. For example, dimension \"country, city\": concatenate(country, \", \", city)."
        },
        "name": {
          "description": "The name of the dimension. See the [API Dimensions](https://developers.google.com/analytics/trusted-testing/analytics-data/api-schema#dimensions) for the list of dimension names. If `dimensionExpression` is specified, `name` can be any string that you would like. For example if a `dimensionExpression` concatenates `country` and `city`, you could call that dimension `countryAndCity`. Dimensions are referenced by `name` in `dimensionFilter`, `orderBys`, `dimensionExpression`, and `pivots`.",
          "type": "string"
        }
      }
    },
    "BatchRunReportsResponse": {
      "id": "BatchRunReportsResponse",
      "description": "The batch response containing multiple reports.",
      "properties": {
        "reports": {
          "description": "Individual responses. Each response has a separate report request.",
          "items": {
            "$ref": "RunReportResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DimensionHeader": {
      "description": "Describes a dimension column in the report. Dimensions requested in a report produce column entries within rows and DimensionHeaders. However, dimensions used exclusively within filters or expressions do not produce columns in a report; correspondingly, those dimensions do not produce headers.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The dimension's name."
        }
      },
      "type": "object",
      "id": "DimensionHeader"
    },
    "RunReportResponse": {
      "type": "object",
      "properties": {
        "dimensionHeaders": {
          "type": "array",
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
          "items": {
            "$ref": "DimensionHeader"
          }
        },
        "rowCount": {
          "type": "integer",
          "description": "The total number of rows in the query result, regardless of the number of rows returned in the response. For example if a query returns 175 rows and includes limit = 50 in the API request, the response will contain row_count = 175 but only 50 rows.",
          "format": "int32"
        },
        "minimums": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the minimum values of metrics."
        },
        "propertyQuota": {
          "description": "This Analytics Property's quota state including this request.",
          "$ref": "PropertyQuota"
        },
        "totals": {
          "items": {
            "$ref": "Row"
          },
          "type": "array",
          "description": "If requested, the totaled values of metrics."
        },
        "maximums": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the maximum values of metrics."
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "Rows of dimension value combinations and metric values in the report."
        },
        "metadata": {
          "$ref": "ResponseMetaData",
          "description": "Metadata for the report."
        },
        "metricHeaders": {
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
          "type": "array",
          "items": {
            "$ref": "MetricHeader"
          }
        }
      },
      "description": "The response report table corresponding to a request.",
      "id": "RunReportResponse"
    },
    "OrderBy": {
      "type": "object",
      "id": "OrderBy",
      "properties": {
        "desc": {
          "description": "If true, sorts by descending order.",
          "type": "boolean"
        },
        "dimension": {
          "$ref": "DimensionOrderBy",
          "description": "Sorts results by a dimension's values."
        },
        "pivot": {
          "description": "Sorts results by a metric's values within a pivot column group.",
          "$ref": "PivotOrderBy"
        },
        "metric": {
          "description": "Sorts results by a metric's values.",
          "$ref": "MetricOrderBy"
        }
      },
      "description": "The sort options."
    },
    "NumericFilter": {
      "description": "Filters for numeric or date values.",
      "id": "NumericFilter",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "NumericValue",
          "description": "A numeric value or a date value."
        },
        "operation": {
          "description": "The operation type for this filter.",
          "enumDescriptions": [
            "Unspecified.",
            "Equal",
            "Less than",
            "Less than or equal",
            "Greater than",
            "Greater than or equal"
          ],
          "type": "string",
          "enum": [
            "OPERATION_UNSPECIFIED",
            "EQUAL",
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL",
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL"
          ]
        }
      }
    },
    "PropertyQuota": {
      "description": "Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.",
      "properties": {
        "concurrentRequests": {
          "description": "Analytics Properties can send up to 10 concurrent requests.",
          "$ref": "QuotaStatus"
        },
        "tokensPerDay": {
          "description": "Analytics Properties can use up to 25,000 tokens per day. Most requests consume fewer than 10 tokens.",
          "$ref": "QuotaStatus"
        },
        "tokensPerHour": {
          "$ref": "QuotaStatus",
          "description": "Analytics Properties can use up to 5,000 tokens per day. An API request consumes a single number of tokens, and that number is deducted from both the hourly and daily quotas."
        },
        "serverErrorsPerProjectPerHour": {
          "description": "Analytics Properties and cloud project pairs can have up to 10 server errors per hour.",
          "$ref": "QuotaStatus"
        }
      },
      "id": "PropertyQuota",
      "type": "object"
    },
    "Filter": {
      "description": "An expression to filter dimension or metric values.",
      "properties": {
        "nullFilter": {
          "description": "A filter for null values.",
          "type": "boolean"
        },
        "inListFilter": {
          "$ref": "InListFilter",
          "description": "A filter for in list values."
        },
        "stringFilter": {
          "description": "Strings related filter.",
          "$ref": "StringFilter"
        },
        "numericFilter": {
          "$ref": "NumericFilter",
          "description": "A filter for numeric or date values."
        },
        "fieldName": {
          "type": "string",
          "description": "The dimension name or metric name. Must be a name defined in dimensions or metrics."
        },
        "betweenFilter": {
          "$ref": "BetweenFilter",
          "description": "A filter for two values."
        }
      },
      "type": "object",
      "id": "Filter"
    },
    "NumericValue": {
      "id": "NumericValue",
      "description": "To represent a number.",
      "type": "object",
      "properties": {
        "int64Value": {
          "format": "int64",
          "description": "Integer value",
          "type": "string"
        },
        "doubleValue": {
          "format": "double",
          "description": "Double value",
          "type": "number"
        }
      }
    },
    "MetricValue": {
      "id": "MetricValue",
      "description": "The value of a metric.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Measurement value. See MetricHeader for type.",
          "type": "string"
        }
      }
    }
  },
  "batchPath": "batch",
  "version_module": true,
  "basePath": "",
  "title": "Google Analytics Data API",
  "name": "analyticsdata",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "rootUrl": "https://analyticsdata.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "v1alpha": {
      "methods": {
        "getUniversalMetadata": {
          "response": {
            "$ref": "UniversalMetadata"
          },
          "httpMethod": "GET",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "description": "Returns metadata for dimensions and metrics available in reporting methods. Used to explore the dimensions and metrics. Dimensions and metrics will be mostly added over time, but renames and deletions may occur. This method returns Universal Metadata. Universal Metadata are dimensions and metrics applicable to any property such as `country` and `totalUsers`.",
          "id": "analyticsdata.getUniversalMetadata",
          "parameterOrder": [],
          "flatPath": "v1alpha/universalMetadata",
          "path": "v1alpha/universalMetadata"
        },
        "runPivotReport": {
          "description": "Returns a customized pivot report of your Google Analytics event data. Pivot reports are more advanced and expressive formats than regular reports. In a pivot report, dimensions are only visible if they are included in a pivot. Multiple pivots can be specified to further dissect your data.",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "RunPivotReportResponse"
          },
          "id": "analyticsdata.runPivotReport",
          "parameters": {},
          "path": "v1alpha:runPivotReport",
          "parameterOrder": [],
          "request": {
            "$ref": "RunPivotReportRequest"
          },
          "flatPath": "v1alpha:runPivotReport"
        },
        "runReport": {
          "parameterOrder": [],
          "path": "v1alpha:runReport",
          "request": {
            "$ref": "RunReportRequest"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "id": "analyticsdata.runReport",
          "flatPath": "v1alpha:runReport",
          "response": {
            "$ref": "RunReportResponse"
          },
          "description": "Returns a customized report of your Google Analytics event data. Reports contain statistics derived from data collected by the Google Analytics tracking code. The data returned from the API is as a table with columns for the requested dimensions and metrics. Metrics are individual measurements of user activity on your property, such as active users or event count. Dimensions break down metrics across some common criteria, such as country or event name.",
          "httpMethod": "POST"
        },
        "batchRunPivotReports": {
          "description": "Returns multiple pivot reports in a batch. All reports must be for the same Entity.",
          "parameterOrder": [],
          "parameters": {},
          "id": "analyticsdata.batchRunPivotReports",
          "path": "v1alpha:batchRunPivotReports",
          "response": {
            "$ref": "BatchRunPivotReportsResponse"
          },
          "request": {
            "$ref": "BatchRunPivotReportsRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "httpMethod": "POST",
          "flatPath": "v1alpha:batchRunPivotReports"
        },
        "batchRunReports": {
          "parameters": {},
          "parameterOrder": [],
          "flatPath": "v1alpha:batchRunReports",
          "request": {
            "$ref": "BatchRunReportsRequest"
          },
          "response": {
            "$ref": "BatchRunReportsResponse"
          },
          "description": "Returns multiple reports in a batch. All reports must be for the same Entity.",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "id": "analyticsdata.batchRunReports",
          "httpMethod": "POST",
          "path": "v1alpha:batchRunReports"
        }
      }
    },
    "properties": {
      "methods": {
        "getMetadata": {
          "path": "v1alpha/{+name}",
          "id": "analyticsdata.properties.getMetadata",
          "response": {
            "$ref": "Metadata"
          },
          "parameters": {
            "name": {
              "type": "string",
              "description": "Required. The resource name of the metadata to retrieve. This name field is specified in the URL path and not URL parameters. Property is a numeric Google Analytics GA4 Property identifier. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/trusted-testing/analytics-data/property-id). Example: properties/1234/metadata",
              "location": "path",
              "pattern": "^properties/[^/]+/metadata$",
              "required": true
            }
          },
          "parameterOrder": [
            "name"
          ],
          "description": "Returns metadata for dimensions and metrics available in reporting methods. Used to explore the dimensions and metrics. In this method, a Google Analytics GA4 Property Identifier is specified in the request, and the metadata response includes Custom dimensions and metrics as well as Universal metadata. For example if a custom metric with parameter name `levels_unlocked` is registered to a property, the Metadata response will contain `customEvent:levels_unlocked`. Universal metadata are dimensions and metrics applicable to any property such as `country` and `totalUsers`.",
          "httpMethod": "GET",
          "flatPath": "v1alpha/properties/{propertiesId}/metadata",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ]
        }
      }
    }
  },
  "revision": "20201023",
  "servicePath": "",
  "baseUrl": "https://analyticsdata.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/analytics.readonly": {
          "description": "View your Google Analytics data"
        },
        "https://www.googleapis.com/auth/analytics": {
          "description": "View and manage your Google Analytics data"
        }
      }
    }
  },
  "description": "Accesses report data in Google Analytics.",
  "documentationLink": "https://developers.google.com/analytics/trusted-testing/analytics-data/",
  "id": "analyticsdata:v1alpha",
  "mtlsRootUrl": "https://analyticsdata.mtls.googleapis.com/",
  "version": "v1alpha",
  "canonicalName": "AnalyticsData",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    }
  },
  "kind": "discovery#restDescription"
}
