/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.content.model;

/**
 * Text input allows merchants to provide a text value.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Content API for Shopping. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InputFieldTextInput extends com.google.api.client.json.GenericJson {

  /**
   * Additional info regarding the field to be displayed to merchant. For example, warning to not
   * include personal identifiable information. There may be more information to be shown in a
   * tooltip.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TextWithTooltip additionalInfo;

  /**
   * Text to be used as the [aria-label](https://www.w3.org/TR/WCAG20-TECHS/ARIA14.html) for the
   * input.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ariaLabel;

  /**
   * Information about the required format. If present, it should be shown close to the input field
   * to help merchants to provide a correct value. For example: "VAT numbers should be in a format
   * similar to SK9999999999"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String formatInfo;

  /**
   * Type of the text input
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Additional info regarding the field to be displayed to merchant. For example, warning to not
   * include personal identifiable information. There may be more information to be shown in a
   * tooltip.
   * @return value or {@code null} for none
   */
  public TextWithTooltip getAdditionalInfo() {
    return additionalInfo;
  }

  /**
   * Additional info regarding the field to be displayed to merchant. For example, warning to not
   * include personal identifiable information. There may be more information to be shown in a
   * tooltip.
   * @param additionalInfo additionalInfo or {@code null} for none
   */
  public InputFieldTextInput setAdditionalInfo(TextWithTooltip additionalInfo) {
    this.additionalInfo = additionalInfo;
    return this;
  }

  /**
   * Text to be used as the [aria-label](https://www.w3.org/TR/WCAG20-TECHS/ARIA14.html) for the
   * input.
   * @return value or {@code null} for none
   */
  public java.lang.String getAriaLabel() {
    return ariaLabel;
  }

  /**
   * Text to be used as the [aria-label](https://www.w3.org/TR/WCAG20-TECHS/ARIA14.html) for the
   * input.
   * @param ariaLabel ariaLabel or {@code null} for none
   */
  public InputFieldTextInput setAriaLabel(java.lang.String ariaLabel) {
    this.ariaLabel = ariaLabel;
    return this;
  }

  /**
   * Information about the required format. If present, it should be shown close to the input field
   * to help merchants to provide a correct value. For example: "VAT numbers should be in a format
   * similar to SK9999999999"
   * @return value or {@code null} for none
   */
  public java.lang.String getFormatInfo() {
    return formatInfo;
  }

  /**
   * Information about the required format. If present, it should be shown close to the input field
   * to help merchants to provide a correct value. For example: "VAT numbers should be in a format
   * similar to SK9999999999"
   * @param formatInfo formatInfo or {@code null} for none
   */
  public InputFieldTextInput setFormatInfo(java.lang.String formatInfo) {
    this.formatInfo = formatInfo;
    return this;
  }

  /**
   * Type of the text input
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Type of the text input
   * @param type type or {@code null} for none
   */
  public InputFieldTextInput setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public InputFieldTextInput set(String fieldName, Object value) {
    return (InputFieldTextInput) super.set(fieldName, value);
  }

  @Override
  public InputFieldTextInput clone() {
    return (InputFieldTextInput) super.clone();
  }

}
