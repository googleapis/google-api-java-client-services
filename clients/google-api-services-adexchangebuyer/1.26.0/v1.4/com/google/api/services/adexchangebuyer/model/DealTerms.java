/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.adexchangebuyer.model;

/**
 * Model definition for DealTerms.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Ad Exchange Buyer API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DealTerms extends com.google.api.client.json.GenericJson {

  /**
   * Visibilty of the URL in bid requests.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String brandingType;

  /**
   * Indicates that this ExternalDealId exists under at least two different AdxInventoryDeals.
   * Currently, the only case that the same ExternalDealId will exist is programmatic cross sell
   * case.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String crossListedExternalDealIdType;

  /**
   * Description for the proposed terms of the deal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Non-binding estimate of the estimated gross spend for this deal Can be set by buyer or seller.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Price estimatedGrossSpend;

  /**
   * Non-binding estimate of the impressions served per day Can be set by buyer or seller.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long estimatedImpressionsPerDay;

  /**
   * The terms for guaranteed fixed price deals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DealTermsGuaranteedFixedPriceTerms guaranteedFixedPriceTerms;

  /**
   * The terms for non-guaranteed auction deals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DealTermsNonGuaranteedAuctionTerms nonGuaranteedAuctionTerms;

  /**
   * The terms for non-guaranteed fixed price deals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DealTermsNonGuaranteedFixedPriceTerms nonGuaranteedFixedPriceTerms;

  /**
   * The terms for rubicon non-guaranteed deals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DealTermsRubiconNonGuaranteedTerms rubiconNonGuaranteedTerms;

  /**
   * For deals with Cost Per Day billing, defines the timezone used to mark the boundaries of a day
   * (buyer-readonly)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sellerTimeZone;

  /**
   * Visibilty of the URL in bid requests.
   * @return value or {@code null} for none
   */
  public java.lang.String getBrandingType() {
    return brandingType;
  }

  /**
   * Visibilty of the URL in bid requests.
   * @param brandingType brandingType or {@code null} for none
   */
  public DealTerms setBrandingType(java.lang.String brandingType) {
    this.brandingType = brandingType;
    return this;
  }

  /**
   * Indicates that this ExternalDealId exists under at least two different AdxInventoryDeals.
   * Currently, the only case that the same ExternalDealId will exist is programmatic cross sell
   * case.
   * @return value or {@code null} for none
   */
  public java.lang.String getCrossListedExternalDealIdType() {
    return crossListedExternalDealIdType;
  }

  /**
   * Indicates that this ExternalDealId exists under at least two different AdxInventoryDeals.
   * Currently, the only case that the same ExternalDealId will exist is programmatic cross sell
   * case.
   * @param crossListedExternalDealIdType crossListedExternalDealIdType or {@code null} for none
   */
  public DealTerms setCrossListedExternalDealIdType(java.lang.String crossListedExternalDealIdType) {
    this.crossListedExternalDealIdType = crossListedExternalDealIdType;
    return this;
  }

  /**
   * Description for the proposed terms of the deal.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Description for the proposed terms of the deal.
   * @param description description or {@code null} for none
   */
  public DealTerms setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Non-binding estimate of the estimated gross spend for this deal Can be set by buyer or seller.
   * @return value or {@code null} for none
   */
  public Price getEstimatedGrossSpend() {
    return estimatedGrossSpend;
  }

  /**
   * Non-binding estimate of the estimated gross spend for this deal Can be set by buyer or seller.
   * @param estimatedGrossSpend estimatedGrossSpend or {@code null} for none
   */
  public DealTerms setEstimatedGrossSpend(Price estimatedGrossSpend) {
    this.estimatedGrossSpend = estimatedGrossSpend;
    return this;
  }

  /**
   * Non-binding estimate of the impressions served per day Can be set by buyer or seller.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEstimatedImpressionsPerDay() {
    return estimatedImpressionsPerDay;
  }

  /**
   * Non-binding estimate of the impressions served per day Can be set by buyer or seller.
   * @param estimatedImpressionsPerDay estimatedImpressionsPerDay or {@code null} for none
   */
  public DealTerms setEstimatedImpressionsPerDay(java.lang.Long estimatedImpressionsPerDay) {
    this.estimatedImpressionsPerDay = estimatedImpressionsPerDay;
    return this;
  }

  /**
   * The terms for guaranteed fixed price deals.
   * @return value or {@code null} for none
   */
  public DealTermsGuaranteedFixedPriceTerms getGuaranteedFixedPriceTerms() {
    return guaranteedFixedPriceTerms;
  }

  /**
   * The terms for guaranteed fixed price deals.
   * @param guaranteedFixedPriceTerms guaranteedFixedPriceTerms or {@code null} for none
   */
  public DealTerms setGuaranteedFixedPriceTerms(DealTermsGuaranteedFixedPriceTerms guaranteedFixedPriceTerms) {
    this.guaranteedFixedPriceTerms = guaranteedFixedPriceTerms;
    return this;
  }

  /**
   * The terms for non-guaranteed auction deals.
   * @return value or {@code null} for none
   */
  public DealTermsNonGuaranteedAuctionTerms getNonGuaranteedAuctionTerms() {
    return nonGuaranteedAuctionTerms;
  }

  /**
   * The terms for non-guaranteed auction deals.
   * @param nonGuaranteedAuctionTerms nonGuaranteedAuctionTerms or {@code null} for none
   */
  public DealTerms setNonGuaranteedAuctionTerms(DealTermsNonGuaranteedAuctionTerms nonGuaranteedAuctionTerms) {
    this.nonGuaranteedAuctionTerms = nonGuaranteedAuctionTerms;
    return this;
  }

  /**
   * The terms for non-guaranteed fixed price deals.
   * @return value or {@code null} for none
   */
  public DealTermsNonGuaranteedFixedPriceTerms getNonGuaranteedFixedPriceTerms() {
    return nonGuaranteedFixedPriceTerms;
  }

  /**
   * The terms for non-guaranteed fixed price deals.
   * @param nonGuaranteedFixedPriceTerms nonGuaranteedFixedPriceTerms or {@code null} for none
   */
  public DealTerms setNonGuaranteedFixedPriceTerms(DealTermsNonGuaranteedFixedPriceTerms nonGuaranteedFixedPriceTerms) {
    this.nonGuaranteedFixedPriceTerms = nonGuaranteedFixedPriceTerms;
    return this;
  }

  /**
   * The terms for rubicon non-guaranteed deals.
   * @return value or {@code null} for none
   */
  public DealTermsRubiconNonGuaranteedTerms getRubiconNonGuaranteedTerms() {
    return rubiconNonGuaranteedTerms;
  }

  /**
   * The terms for rubicon non-guaranteed deals.
   * @param rubiconNonGuaranteedTerms rubiconNonGuaranteedTerms or {@code null} for none
   */
  public DealTerms setRubiconNonGuaranteedTerms(DealTermsRubiconNonGuaranteedTerms rubiconNonGuaranteedTerms) {
    this.rubiconNonGuaranteedTerms = rubiconNonGuaranteedTerms;
    return this;
  }

  /**
   * For deals with Cost Per Day billing, defines the timezone used to mark the boundaries of a day
   * (buyer-readonly)
   * @return value or {@code null} for none
   */
  public java.lang.String getSellerTimeZone() {
    return sellerTimeZone;
  }

  /**
   * For deals with Cost Per Day billing, defines the timezone used to mark the boundaries of a day
   * (buyer-readonly)
   * @param sellerTimeZone sellerTimeZone or {@code null} for none
   */
  public DealTerms setSellerTimeZone(java.lang.String sellerTimeZone) {
    this.sellerTimeZone = sellerTimeZone;
    return this;
  }

  @Override
  public DealTerms set(String fieldName, Object value) {
    return (DealTerms) super.set(fieldName, value);
  }

  @Override
  public DealTerms clone() {
    return (DealTerms) super.clone();
  }

}
