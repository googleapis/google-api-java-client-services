/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseappcheck.v1beta.model;

/**
 * A settings object specifying device integrity requirements for Android devices running your app.
 * These settings correspond to requirements on the [**device integrity**
 * field](https://developer.android.com/google/play/integrity/verdicts#device-integrity-field)
 * obtained from the Play Integrity API. See the [default responses
 * table](https://developer.android.com/google/play/integrity/setup#default) for a quick summary.
 * Warning: There are also
 * [conditional](https://developer.android.com/google/play/integrity/setup#conditional) as well as
 * [optional](https://developer.android.com/google/play/integrity/setup#optional_device_information)
 * responses that you can receive, but requires additional explicit opt-in from you. The App Check
 * API is **not** responsible for any such opt-ins. The default values for these settings work for
 * most apps, and are recommended.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase App Check API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirebaseAppcheckV1betaPlayIntegrityConfigDeviceIntegrity extends com.google.api.client.json.GenericJson {

  /**
   * Specifies the minimum device integrity level in order for the device to be considered valid.
   * Any device with a device recognition verdict lower than this level will be rejected. If this is
   * unspecified, the default level is `NO_INTEGRITY`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String minDeviceRecognitionLevel;

  /**
   * Specifies the minimum device integrity level in order for the device to be considered valid.
   * Any device with a device recognition verdict lower than this level will be rejected. If this is
   * unspecified, the default level is `NO_INTEGRITY`.
   * @return value or {@code null} for none
   */
  public java.lang.String getMinDeviceRecognitionLevel() {
    return minDeviceRecognitionLevel;
  }

  /**
   * Specifies the minimum device integrity level in order for the device to be considered valid.
   * Any device with a device recognition verdict lower than this level will be rejected. If this is
   * unspecified, the default level is `NO_INTEGRITY`.
   * @param minDeviceRecognitionLevel minDeviceRecognitionLevel or {@code null} for none
   */
  public GoogleFirebaseAppcheckV1betaPlayIntegrityConfigDeviceIntegrity setMinDeviceRecognitionLevel(java.lang.String minDeviceRecognitionLevel) {
    this.minDeviceRecognitionLevel = minDeviceRecognitionLevel;
    return this;
  }

  @Override
  public GoogleFirebaseAppcheckV1betaPlayIntegrityConfigDeviceIntegrity set(String fieldName, Object value) {
    return (GoogleFirebaseAppcheckV1betaPlayIntegrityConfigDeviceIntegrity) super.set(fieldName, value);
  }

  @Override
  public GoogleFirebaseAppcheckV1betaPlayIntegrityConfigDeviceIntegrity clone() {
    return (GoogleFirebaseAppcheckV1betaPlayIntegrityConfigDeviceIntegrity) super.clone();
  }

}
