/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for AssistantPfrDeviceRdMetadata.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantPfrDeviceRdMetadata extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> deviceTypes;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float effectiveArgSpanLength;

  /**
   * True if there are more than one possible resolutions to the RD.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hasAmbiguousResolutions;

  /**
   * True if there's at least one device id that gets resolved. Note this is different from
   * is_grounded = true: it is possible that is_grounded = false (num_grounded_args =0) but there is
   * resolved device ids. E.g.: "turn on the blue light" Power_on(device_object = [d1,
   * d2]:RD(category=DeviceObject(name='blue light')) where there are "blue light 1" and "blue light
   * 2" hence two resolved device ids. But since the quantifier is single, GB can't resolve the
   * ambiguity and would set num_grounded_args = 0 to indicate such unresolved ambiguity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hasResolvedDeviceId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String roomName;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceName() {
    return deviceName;
  }

  /**
   * @param deviceName deviceName or {@code null} for none
   */
  public AssistantPfrDeviceRdMetadata setDeviceName(java.lang.String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDeviceTypes() {
    return deviceTypes;
  }

  /**
   * @param deviceTypes deviceTypes or {@code null} for none
   */
  public AssistantPfrDeviceRdMetadata setDeviceTypes(java.util.List<java.lang.String> deviceTypes) {
    this.deviceTypes = deviceTypes;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getEffectiveArgSpanLength() {
    return effectiveArgSpanLength;
  }

  /**
   * @param effectiveArgSpanLength effectiveArgSpanLength or {@code null} for none
   */
  public AssistantPfrDeviceRdMetadata setEffectiveArgSpanLength(java.lang.Float effectiveArgSpanLength) {
    this.effectiveArgSpanLength = effectiveArgSpanLength;
    return this;
  }

  /**
   * True if there are more than one possible resolutions to the RD.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHasAmbiguousResolutions() {
    return hasAmbiguousResolutions;
  }

  /**
   * True if there are more than one possible resolutions to the RD.
   * @param hasAmbiguousResolutions hasAmbiguousResolutions or {@code null} for none
   */
  public AssistantPfrDeviceRdMetadata setHasAmbiguousResolutions(java.lang.Boolean hasAmbiguousResolutions) {
    this.hasAmbiguousResolutions = hasAmbiguousResolutions;
    return this;
  }

  /**
   * True if there's at least one device id that gets resolved. Note this is different from
   * is_grounded = true: it is possible that is_grounded = false (num_grounded_args =0) but there is
   * resolved device ids. E.g.: "turn on the blue light" Power_on(device_object = [d1,
   * d2]:RD(category=DeviceObject(name='blue light')) where there are "blue light 1" and "blue light
   * 2" hence two resolved device ids. But since the quantifier is single, GB can't resolve the
   * ambiguity and would set num_grounded_args = 0 to indicate such unresolved ambiguity.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHasResolvedDeviceId() {
    return hasResolvedDeviceId;
  }

  /**
   * True if there's at least one device id that gets resolved. Note this is different from
   * is_grounded = true: it is possible that is_grounded = false (num_grounded_args =0) but there is
   * resolved device ids. E.g.: "turn on the blue light" Power_on(device_object = [d1,
   * d2]:RD(category=DeviceObject(name='blue light')) where there are "blue light 1" and "blue light
   * 2" hence two resolved device ids. But since the quantifier is single, GB can't resolve the
   * ambiguity and would set num_grounded_args = 0 to indicate such unresolved ambiguity.
   * @param hasResolvedDeviceId hasResolvedDeviceId or {@code null} for none
   */
  public AssistantPfrDeviceRdMetadata setHasResolvedDeviceId(java.lang.Boolean hasResolvedDeviceId) {
    this.hasResolvedDeviceId = hasResolvedDeviceId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getRoomName() {
    return roomName;
  }

  /**
   * @param roomName roomName or {@code null} for none
   */
  public AssistantPfrDeviceRdMetadata setRoomName(java.lang.String roomName) {
    this.roomName = roomName;
    return this;
  }

  @Override
  public AssistantPfrDeviceRdMetadata set(String fieldName, Object value) {
    return (AssistantPfrDeviceRdMetadata) super.set(fieldName, value);
  }

  @Override
  public AssistantPfrDeviceRdMetadata clone() {
    return (AssistantPfrDeviceRdMetadata) super.clone();
  }

}
