{
  "discoveryVersion": "v1",
  "schemas": {
    "OrderBy": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "MetricOrderBy",
          "description": "Sorts results by a metric's values."
        },
        "dimension": {
          "$ref": "DimensionOrderBy",
          "description": "Sorts results by a dimension's values."
        },
        "desc": {
          "description": "If true, sorts by descending order.",
          "type": "boolean"
        },
        "pivot": {
          "$ref": "PivotOrderBy",
          "description": "Sorts results by a metric's values within a pivot column group."
        }
      },
      "id": "OrderBy",
      "description": "The sort options."
    },
    "DimensionValue": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Value as a string if the dimension type is a string."
        }
      },
      "type": "object",
      "id": "DimensionValue",
      "description": "The value of a dimension."
    },
    "Metric": {
      "properties": {
        "expression": {
          "description": "A mathematical expression for derived metrics. For example, the metric Event count per user is `eventCount/totalUsers`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the metric. See the [API Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#metrics) for the list of metric names. If `expression` is specified, `name` can be any string that you would like. For example if `expression` is `screenPageViews/sessions`, you could call that metric's name = `viewsPerSession`. Metrics are referenced by `name` in `metricFilter`, `orderBys`, and metric `expression`."
        },
        "invisible": {
          "type": "boolean",
          "description": "Indicates if a metric is invisible in the report response. If a metric is invisible, the metric will not produce a column in the response, but can be used in `metricFilter`, `orderBys`, or a metric `expression`."
        }
      },
      "type": "object",
      "id": "Metric",
      "description": "The quantitative measurements of a report. For example, the metric `eventCount` is the total number of events. Requests are allowed up to 10 metrics."
    },
    "Metadata": {
      "id": "Metadata",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name of this metadata."
        },
        "metrics": {
          "description": "The metric descriptions.",
          "items": {
            "$ref": "MetricMetadata"
          },
          "type": "array"
        },
        "dimensions": {
          "description": "The dimension descriptions.",
          "items": {
            "$ref": "DimensionMetadata"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The dimensions and metrics currently accepted in reporting methods."
    },
    "MetricValue": {
      "description": "The value of a metric.",
      "id": "MetricValue",
      "properties": {
        "value": {
          "type": "string",
          "description": "Measurement value. See MetricHeader for type."
        }
      },
      "type": "object"
    },
    "CohortsRange": {
      "type": "object",
      "description": "Configures the extended reporting date range for a cohort report. Specifies an offset duration to follow the cohorts over.",
      "properties": {
        "granularity": {
          "enum": [
            "GRANULARITY_UNSPECIFIED",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "enumDescriptions": [
            "Should never be specified.",
            "Daily granularity. Commonly used if the cohort's `dateRange` is a single day and the request contains `cohortNthDay`.",
            "Weekly granularity. Commonly used if the cohort's `dateRange` is a week in duration (starting on Sunday and ending on Saturday) and the request contains `cohortNthWeek`.",
            "Monthly granularity. Commonly used if the cohort's `dateRange` is a month in duration and the request contains `cohortNthMonth`."
          ],
          "description": "Required. The granularity used to interpret the `startOffset` and `endOffset` for the extended reporting date range for a cohort report.",
          "type": "string"
        },
        "endOffset": {
          "description": "Required. `endOffset` specifies the end date of the extended reporting date range for a cohort report. `endOffset` can be any positive integer but is commonly set to 5 to 10 so that reports contain data on the cohort for the next several granularity time periods. If `granularity` is `DAILY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset` days. If `granularity` is `WEEKLY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset * 7` days. If `granularity` is `MONTHLY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset * 30` days.",
          "format": "int32",
          "type": "integer"
        },
        "startOffset": {
          "format": "int32",
          "description": "`startOffset` specifies the start date of the extended reporting date range for a cohort report. `startOffset` is commonly set to 0 so that reports contain data from the acquisition of the cohort forward. If `granularity` is `DAILY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset` days. If `granularity` is `WEEKLY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset * 7` days. If `granularity` is `MONTHLY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset * 30` days.",
          "type": "integer"
        }
      },
      "id": "CohortsRange"
    },
    "PivotDimensionHeader": {
      "description": "Summarizes dimension values from a row for this pivot.",
      "type": "object",
      "id": "PivotDimensionHeader",
      "properties": {
        "dimensionValues": {
          "items": {
            "$ref": "DimensionValue"
          },
          "description": "Values of multiple dimensions in a pivot.",
          "type": "array"
        }
      }
    },
    "PivotSelection": {
      "properties": {
        "dimensionValue": {
          "description": "Order by only when the named dimension is this value.",
          "type": "string"
        },
        "dimensionName": {
          "type": "string",
          "description": "Must be a dimension name from the request."
        }
      },
      "type": "object",
      "description": "A pair of dimension names and values. Rows with this dimension pivot pair are ordered by the metric's value. For example if pivots = {{\"browser\", \"Chrome\"}} and metric_name = \"Sessions\", then the rows will be sorted based on Sessions in Chrome. ---------|----------|----------------|----------|---------------- | Chrome | Chrome | Safari | Safari ---------|----------|----------------|----------|---------------- Country | Sessions | Pages/Sessions | Sessions | Pages/Sessions ---------|----------|----------------|----------|---------------- US | 2 | 2 | 3 | 1 ---------|----------|----------------|----------|---------------- Canada | 3 | 1 | 4 | 1 ---------|----------|----------------|----------|----------------",
      "id": "PivotSelection"
    },
    "MetricOrderBy": {
      "type": "object",
      "description": "Sorts by metric values.",
      "properties": {
        "metricName": {
          "type": "string",
          "description": "A metric name in the request to order by."
        }
      },
      "id": "MetricOrderBy"
    },
    "RunPivotReportRequest": {
      "type": "object",
      "description": "The request to generate a pivot report.",
      "properties": {
        "entity": {
          "description": "A property whose events are tracked. Within a batch request, this entity should either be unspecified or consistent with the batch-level entity.",
          "$ref": "Entity"
        },
        "cohortSpec": {
          "description": "Cohort group associated with this request. If there is a cohort group in the request the 'cohort' dimension must be present.",
          "$ref": "CohortSpec"
        },
        "dimensions": {
          "type": "array",
          "description": "The dimensions requested. All defined dimensions must be used by one of the following: dimension_expression, dimension_filter, pivots, order_bys.",
          "items": {
            "$ref": "Dimension"
          }
        },
        "keepEmptyRows": {
          "type": "boolean",
          "description": "If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter."
        },
        "dateRanges": {
          "description": "The date range to retrieve event data for the report. If multiple date ranges are specified, event data from each date range is used in the report. A special dimension with field name \"dateRange\" can be included in a Pivot's field names; if included, the report compares between date ranges. In a cohort request, this `dateRanges` must be unspecified.",
          "items": {
            "$ref": "DateRange"
          },
          "type": "array"
        },
        "dimensionFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter."
        },
        "pivots": {
          "items": {
            "$ref": "Pivot"
          },
          "type": "array",
          "description": "Describes the visual format of the report's dimensions in columns or rows. The union of the fieldNames (dimension names) in all pivots must be a subset of dimension names defined in Dimensions. No two pivots can share a dimension. A dimension is only visible if it appears in a pivot."
        },
        "metricFilter": {
          "description": "The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter.",
          "$ref": "FilterExpression"
        },
        "currencyCode": {
          "type": "string",
          "description": "A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the entity's default currency."
        },
        "returnPropertyQuota": {
          "description": "Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota).",
          "type": "boolean"
        },
        "metrics": {
          "items": {
            "$ref": "Metric"
          },
          "type": "array",
          "description": "The metrics requested, at least one metric needs to be specified. All defined metrics must be used by one of the following: metric_expression, metric_filter, order_bys."
        }
      },
      "id": "RunPivotReportRequest"
    },
    "RunReportRequest": {
      "type": "object",
      "description": "The request to generate a report.",
      "id": "RunReportRequest",
      "properties": {
        "metrics": {
          "description": "The metrics requested and displayed.",
          "items": {
            "$ref": "Metric"
          },
          "type": "array"
        },
        "orderBys": {
          "items": {
            "$ref": "OrderBy"
          },
          "description": "Specifies how rows are ordered in the response.",
          "type": "array"
        },
        "metricFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter."
        },
        "offset": {
          "description": "The row count of the start row. The first row is counted as row 0. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).",
          "type": "string",
          "format": "int64"
        },
        "dimensionFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter."
        },
        "metricAggregations": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ],
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ]
          },
          "type": "array",
          "description": "Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\"."
        },
        "entity": {
          "$ref": "Entity",
          "description": "A property whose events are tracked. Within a batch request, this entity should either be unspecified or consistent with the batch-level entity."
        },
        "keepEmptyRows": {
          "type": "boolean",
          "description": "If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter."
        },
        "dateRanges": {
          "description": "Date ranges of data to read. If multiple date ranges are requested, each response row will contain a zero based date range index. If two date ranges overlap, the event data for the overlapping days is included in the response rows for both date ranges. In a cohort request, this `dateRanges` must be unspecified.",
          "items": {
            "$ref": "DateRange"
          },
          "type": "array"
        },
        "cohortSpec": {
          "$ref": "CohortSpec",
          "description": "Cohort group associated with this request. If there is a cohort group in the request the 'cohort' dimension must be present."
        },
        "currencyCode": {
          "type": "string",
          "description": "A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the entity's default currency."
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "description": "The number of rows to return. If unspecified, 10 rows are returned. If -1, all rows are returned. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination)."
        },
        "dimensions": {
          "description": "The dimensions requested and displayed.",
          "type": "array",
          "items": {
            "$ref": "Dimension"
          }
        },
        "returnPropertyQuota": {
          "type": "boolean",
          "description": "Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota)."
        }
      }
    },
    "MetricMetadata": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified type.",
            "Integer type.",
            "Floating point type.",
            "A duration of seconds; a special floating point type.",
            "A duration in milliseconds; a special floating point type.",
            "A duration in minutes; a special floating point type.",
            "A duration in hours; a special floating point type.",
            "A custom metric of standard type; a special floating point type.",
            "An amount of money; a special floating point type.",
            "A length in feet; a special floating point type.",
            "A length in miles; a special floating point type.",
            "A length in meters; a special floating point type.",
            "A length in kilometers; a special floating point type."
          ],
          "description": "The type of this metric.",
          "enum": [
            "METRIC_TYPE_UNSPECIFIED",
            "TYPE_INTEGER",
            "TYPE_FLOAT",
            "TYPE_SECONDS",
            "TYPE_MILLISECONDS",
            "TYPE_MINUTES",
            "TYPE_HOURS",
            "TYPE_STANDARD",
            "TYPE_CURRENCY",
            "TYPE_FEET",
            "TYPE_MILES",
            "TYPE_METERS",
            "TYPE_KILOMETERS"
          ],
          "type": "string"
        },
        "deprecatedApiNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Still usable but deprecated names for this metric. If populated, this metric is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the metric will be available only by `apiName`."
        },
        "expression": {
          "description": "The mathematical expression for this derived metric. Can be used in [Metric](#Metric)'s `expression` field for equivalent reports. Most metrics are not expressions, and for non-expressions, this field is empty.",
          "type": "string"
        },
        "description": {
          "description": "Description of how this metric is used and calculated.",
          "type": "string"
        },
        "apiName": {
          "type": "string",
          "description": "A metric name. Useable in [Metric](#Metric)'s `name`. For example, `eventCount`."
        },
        "uiName": {
          "description": "This metric's name within the Google Analytics user interface. For example, `Event count`.",
          "type": "string"
        },
        "customDefinition": {
          "description": "True if the metric is a custom metric for this property.",
          "type": "boolean"
        }
      },
      "description": "Explains a metric.",
      "id": "MetricMetadata",
      "type": "object"
    },
    "Dimension": {
      "description": "Dimensions are attributes of your data. For example, the dimension city indicates the city from which an event originates. Dimension values in report responses are strings; for example, city could be \"Paris\" or \"New York\". Requests are allowed up to 8 dimensions.",
      "type": "object",
      "id": "Dimension",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the dimension. See the [API Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#dimensions) for the list of dimension names. If `dimensionExpression` is specified, `name` can be any string that you would like. For example if a `dimensionExpression` concatenates `country` and `city`, you could call that dimension `countryAndCity`. Dimensions are referenced by `name` in `dimensionFilter`, `orderBys`, `dimensionExpression`, and `pivots`."
        },
        "dimensionExpression": {
          "$ref": "DimensionExpression",
          "description": "One dimension can be the result of an expression of multiple dimensions. For example, dimension \"country, city\": concatenate(country, \", \", city)."
        }
      }
    },
    "DateRange": {
      "description": "A contiguous set of days: startDate, startDate + 1, ..., endDate. Requests are allowed up to 4 date ranges.",
      "type": "object",
      "id": "DateRange",
      "properties": {
        "name": {
          "type": "string",
          "description": "Assigns a name to this date range. The dimension `dateRange` is valued to this name in a report response. If set, cannot begin with `date_range_` or `RESERVED_`. If not set, date ranges are named by their zero based index in the request: `date_range_0`, `date_range_1`, etc."
        },
        "endDate": {
          "description": "The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot be before `start_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.",
          "type": "string"
        },
        "startDate": {
          "description": "The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot be after `end_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.",
          "type": "string"
        }
      }
    },
    "ResponseMetaData": {
      "properties": {
        "dataLossFromOtherRow": {
          "type": "boolean",
          "description": "If true, indicates some buckets of dimension combinations are rolled into \"(other)\" row. This can happen for high cardinality reports."
        }
      },
      "type": "object",
      "description": "Response's metadata carrying additional information about the report content.",
      "id": "ResponseMetaData"
    },
    "RunReportResponse": {
      "type": "object",
      "description": "The response report table corresponding to a request.",
      "properties": {
        "minimums": {
          "type": "array",
          "description": "If requested, the minimum values of metrics.",
          "items": {
            "$ref": "Row"
          }
        },
        "rowCount": {
          "description": "The total number of rows in the query result, regardless of the number of rows returned in the response. For example if a query returns 175 rows and includes limit = 50 in the API request, the response will contain row_count = 175 but only 50 rows. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).",
          "format": "int32",
          "type": "integer"
        },
        "rows": {
          "items": {
            "$ref": "Row"
          },
          "description": "Rows of dimension value combinations and metric values in the report.",
          "type": "array"
        },
        "propertyQuota": {
          "description": "This Analytics Property's quota state including this request.",
          "$ref": "PropertyQuota"
        },
        "totals": {
          "type": "array",
          "description": "If requested, the totaled values of metrics.",
          "items": {
            "$ref": "Row"
          }
        },
        "metricHeaders": {
          "type": "array",
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
          "items": {
            "$ref": "MetricHeader"
          }
        },
        "metadata": {
          "$ref": "ResponseMetaData",
          "description": "Metadata for the report."
        },
        "maximums": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the maximum values of metrics."
        },
        "dimensionHeaders": {
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
          "type": "array",
          "items": {
            "$ref": "DimensionHeader"
          }
        }
      },
      "id": "RunReportResponse"
    },
    "InListFilter": {
      "description": "The result needs to be in a list of string values.",
      "id": "InListFilter",
      "properties": {
        "caseSensitive": {
          "description": "If true, the string value is case sensitive.",
          "type": "boolean"
        },
        "values": {
          "description": "The list of string values. Must be non-empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CaseExpression": {
      "type": "object",
      "properties": {
        "dimensionName": {
          "type": "string",
          "description": "Name of a dimension. The name must refer back to a name in dimensions field of the request."
        }
      },
      "description": "Used to convert a dimension value to a single case.",
      "id": "CaseExpression"
    },
    "QuotaStatus": {
      "properties": {
        "consumed": {
          "description": "Quota consumed by this request.",
          "format": "int32",
          "type": "integer"
        },
        "remaining": {
          "type": "integer",
          "description": "Quota remaining after this request.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "QuotaStatus",
      "description": "Current state for a particular quota group."
    },
    "NumericFilter": {
      "id": "NumericFilter",
      "properties": {
        "value": {
          "$ref": "NumericValue",
          "description": "A numeric value or a date value."
        },
        "operation": {
          "enumDescriptions": [
            "Unspecified.",
            "Equal",
            "Less than",
            "Less than or equal",
            "Greater than",
            "Greater than or equal"
          ],
          "description": "The operation type for this filter.",
          "enum": [
            "OPERATION_UNSPECIFIED",
            "EQUAL",
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL",
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Filters for numeric or date values."
    },
    "FilterExpressionList": {
      "properties": {
        "expressions": {
          "type": "array",
          "description": "A list of filter expressions.",
          "items": {
            "$ref": "FilterExpression"
          }
        }
      },
      "type": "object",
      "id": "FilterExpressionList",
      "description": "A list of filter expressions."
    },
    "Filter": {
      "properties": {
        "nullFilter": {
          "type": "boolean",
          "description": "A filter for null values. If True, a null dimension value is matched by this filter. Null filter is commonly used inside a NOT filter expression. For example, a NOT expression of a null filter removes rows when a dimension is null."
        },
        "fieldName": {
          "description": "The dimension name or metric name. Must be a name defined in dimensions or metrics.",
          "type": "string"
        },
        "stringFilter": {
          "$ref": "StringFilter",
          "description": "Strings related filter."
        },
        "numericFilter": {
          "$ref": "NumericFilter",
          "description": "A filter for numeric or date values."
        },
        "betweenFilter": {
          "$ref": "BetweenFilter",
          "description": "A filter for two values."
        },
        "inListFilter": {
          "$ref": "InListFilter",
          "description": "A filter for in list values."
        }
      },
      "description": "An expression to filter dimension or metric values.",
      "type": "object",
      "id": "Filter"
    },
    "Pivot": {
      "description": "Describes the visible dimension columns and rows in the report response.",
      "properties": {
        "fieldNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Dimension names for visible columns in the report response. Including \"dateRange\" produces a date range column; for each row in the response, dimension values in the date range column will indicate the corresponding date range from the request."
        },
        "metricAggregations": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ],
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ]
          },
          "type": "array",
          "description": "Aggregate the metrics by dimensions in this pivot using the specified metric_aggregations."
        },
        "limit": {
          "format": "int64",
          "description": "The number of rows to return in this pivot. If unspecified, 10 rows are returned. If -1, all rows are returned.",
          "type": "string"
        },
        "offset": {
          "description": "The row count of the start row. The first row is counted as row 0.",
          "type": "string",
          "format": "int64"
        },
        "orderBys": {
          "description": "Specifies how dimensions are ordered in the pivot. In the first Pivot, the OrderBys determine Row and PivotDimensionHeader ordering; in subsequent Pivots, the OrderBys determine only PivotDimensionHeader ordering. Dimensions specified in these OrderBys must be a subset of Pivot.field_names.",
          "type": "array",
          "items": {
            "$ref": "OrderBy"
          }
        }
      },
      "type": "object",
      "id": "Pivot"
    },
    "PivotOrderBy": {
      "properties": {
        "metricName": {
          "description": "In the response to order by, order rows by this column. Must be a metric name from the request.",
          "type": "string"
        },
        "pivotSelections": {
          "description": "Used to select a dimension name and value pivot. If multiple pivot selections are given, the sort occurs on rows where all pivot selection dimension name and value pairs match the row's dimension name and value pair.",
          "items": {
            "$ref": "PivotSelection"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Sorts by a pivot column group.",
      "id": "PivotOrderBy"
    },
    "CohortReportSettings": {
      "properties": {
        "accumulate": {
          "type": "boolean",
          "description": "If true, accumulates the result from first touch day to the end day. Not supported in `RunReportRequest`."
        }
      },
      "id": "CohortReportSettings",
      "type": "object",
      "description": "Optional settings of a cohort report."
    },
    "RunPivotReportResponse": {
      "description": "The response pivot report table corresponding to a pivot request.",
      "id": "RunPivotReportResponse",
      "type": "object",
      "properties": {
        "aggregates": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "Aggregation of metric values. Can be totals, minimums, or maximums. The returned aggregations are controlled by the metric_aggregations in the pivot. The type of aggregation returned in each row is shown by the dimension_values which are set to \"RESERVED_\"."
        },
        "propertyQuota": {
          "$ref": "PropertyQuota",
          "description": "This Analytics Property's quota state including this request."
        },
        "pivotHeaders": {
          "description": "Summarizes the columns and rows created by a pivot. Each pivot in the request produces one header in the response. If we have a request like this: \"pivots\": [{ \"fieldNames\": [\"country\", \"city\"] }, { \"fieldNames\": \"eventName\" }] We will have the following `pivotHeaders` in the response: \"pivotHeaders\" : [{ \"dimensionHeaders\": [{ \"dimensionValues\": [ { \"value\": \"United Kingdom\" }, { \"value\": \"London\" } ] }, { \"dimensionValues\": [ { \"value\": \"Japan\" }, { \"value\": \"Osaka\" } ] }] }, { \"dimensionHeaders\": [{ \"dimensionValues\": [{ \"value\": \"session_start\" }] }, { \"dimensionValues\": [{ \"value\": \"scroll\" }] }] }]",
          "items": {
            "$ref": "PivotHeader"
          },
          "type": "array"
        },
        "rows": {
          "description": "Rows of dimension value combinations and metric values in the report.",
          "type": "array",
          "items": {
            "$ref": "Row"
          }
        },
        "metadata": {
          "$ref": "ResponseMetaData",
          "description": "Metadata for the report."
        },
        "metricHeaders": {
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
          "type": "array",
          "items": {
            "$ref": "MetricHeader"
          }
        },
        "dimensionHeaders": {
          "items": {
            "$ref": "DimensionHeader"
          },
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
          "type": "array"
        }
      }
    },
    "Entity": {
      "id": "Entity",
      "description": "The unique identifier of the property whose events are tracked.",
      "properties": {
        "propertyId": {
          "type": "string",
          "description": "A Google Analytics GA4 property id. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id)."
        }
      },
      "type": "object"
    },
    "MetricHeader": {
      "id": "MetricHeader",
      "type": "object",
      "description": "Describes a metric column in the report. Visible metrics requested in a report produce column entries within rows and MetricHeaders. However, metrics used exclusively within filters or expressions do not produce columns in a report; correspondingly, those metrics do not produce headers.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The metric's data type.",
          "enumDescriptions": [
            "Unspecified type.",
            "Integer type.",
            "Floating point type.",
            "A duration of seconds; a special floating point type.",
            "A duration in milliseconds; a special floating point type.",
            "A duration in minutes; a special floating point type.",
            "A duration in hours; a special floating point type.",
            "A custom metric of standard type; a special floating point type.",
            "An amount of money; a special floating point type.",
            "A length in feet; a special floating point type.",
            "A length in miles; a special floating point type.",
            "A length in meters; a special floating point type.",
            "A length in kilometers; a special floating point type."
          ],
          "enum": [
            "METRIC_TYPE_UNSPECIFIED",
            "TYPE_INTEGER",
            "TYPE_FLOAT",
            "TYPE_SECONDS",
            "TYPE_MILLISECONDS",
            "TYPE_MINUTES",
            "TYPE_HOURS",
            "TYPE_STANDARD",
            "TYPE_CURRENCY",
            "TYPE_FEET",
            "TYPE_MILES",
            "TYPE_METERS",
            "TYPE_KILOMETERS"
          ]
        },
        "name": {
          "type": "string",
          "description": "The metric's name."
        }
      }
    },
    "CohortSpec": {
      "properties": {
        "cohortReportSettings": {
          "description": "Optional settings for a cohort report.",
          "$ref": "CohortReportSettings"
        },
        "cohorts": {
          "description": "Defines the selection criteria to group users into cohorts. Most cohort reports define only a single cohort. If multiple cohorts are specified, each cohort can be recognized in the report by their name.",
          "type": "array",
          "items": {
            "$ref": "Cohort"
          }
        },
        "cohortsRange": {
          "description": "Cohort reports follow cohorts over an extended reporting date range. This range specifies an offset duration to follow the cohorts over.",
          "$ref": "CohortsRange"
        }
      },
      "description": "The specification of cohorts for a cohort report. Cohort reports create a time series of user retention for the cohort. For example, you could select the cohort of users that were acquired in the first week of September and follow that cohort for the next six weeks. Selecting the users acquired in the first week of September cohort is specified in the `cohort` object. Following that cohort for the next six weeks is specified in the `cohortsRange` object. For examples, see [Cohort Report Examples](https://developers.google.com/analytics/devguides/reporting/data/v1/advanced#cohort_report_examples). The report response could show a weekly time series where say your app has retained 60% of this cohort after three weeks and 25% of this cohort after six weeks. These two percentages can be calculated by the metric `cohortActiveUsers/cohortTotalUsers` and will be separate rows in the report.",
      "type": "object",
      "id": "CohortSpec"
    },
    "StringFilter": {
      "properties": {
        "matchType": {
          "type": "string",
          "enum": [
            "MATCH_TYPE_UNSPECIFIED",
            "EXACT",
            "BEGINS_WITH",
            "ENDS_WITH",
            "CONTAINS",
            "FULL_REGEXP",
            "PARTIAL_REGEXP"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Exact match of the string value.",
            "Begins with the string value.",
            "Ends with the string value.",
            "Contains the string value.",
            "Full regular expression match with the string value.",
            "Partial regular expression match with the string value."
          ],
          "description": "The match type for this filter."
        },
        "caseSensitive": {
          "description": "If true, the string value is case sensitive.",
          "type": "boolean"
        },
        "value": {
          "description": "The string value used for the matching.",
          "type": "string"
        }
      },
      "description": "The filter for string",
      "id": "StringFilter",
      "type": "object"
    },
    "BatchRunPivotReportsRequest": {
      "id": "BatchRunPivotReportsRequest",
      "properties": {
        "entity": {
          "description": "A property whose events are tracked. This entity must be specified for the batch. The entity within RunPivotReportRequest may either be unspecified or consistent with this entity.",
          "$ref": "Entity"
        },
        "requests": {
          "items": {
            "$ref": "RunPivotReportRequest"
          },
          "type": "array",
          "description": "Individual requests. Each request has a separate pivot report response. Each batch request is allowed up to 5 requests."
        }
      },
      "description": "The batch request containing multiple pivot report requests.",
      "type": "object"
    },
    "RunRealtimeReportRequest": {
      "id": "RunRealtimeReportRequest",
      "description": "The request to generate a realtime report.",
      "properties": {
        "limit": {
          "type": "string",
          "format": "int64",
          "description": "The number of rows to return. If unspecified, 10 rows are returned. If -1, all rows are returned."
        },
        "metricFilter": {
          "description": "The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter.",
          "$ref": "FilterExpression"
        },
        "metrics": {
          "type": "array",
          "description": "The metrics requested and displayed.",
          "items": {
            "$ref": "Metric"
          }
        },
        "metricAggregations": {
          "items": {
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ],
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ],
            "type": "string"
          },
          "description": "Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\".",
          "type": "array"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "Dimension"
          },
          "description": "The dimensions requested and displayed."
        },
        "orderBys": {
          "description": "Specifies how rows are ordered in the response.",
          "items": {
            "$ref": "OrderBy"
          },
          "type": "array"
        },
        "dimensionFilter": {
          "description": "The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter.",
          "$ref": "FilterExpression"
        },
        "returnPropertyQuota": {
          "type": "boolean",
          "description": "Toggles whether to return the current state of this Analytics Property's Realtime quota. Quota is returned in [PropertyQuota](#PropertyQuota)."
        }
      },
      "type": "object"
    },
    "PropertyQuota": {
      "description": "Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.",
      "type": "object",
      "id": "PropertyQuota",
      "properties": {
        "tokensPerDay": {
          "description": "Standard Analytics Properties can use up to 25,000 tokens per day; Analytics 360 Properties can use 250,000 tokens per day. Most requests consume fewer than 10 tokens.",
          "$ref": "QuotaStatus"
        },
        "serverErrorsPerProjectPerHour": {
          "$ref": "QuotaStatus",
          "description": "Standard Analytics Properties and cloud project pairs can have up to 10 server errors per hour; Analytics 360 Properties and cloud project pairs can have up to 50 server errors per hour."
        },
        "concurrentRequests": {
          "description": "Standard Analytics Properties can send up to 10 concurrent requests; Analytics 360 Properties can use up to 50 concurrent requests.",
          "$ref": "QuotaStatus"
        },
        "tokensPerHour": {
          "$ref": "QuotaStatus",
          "description": "Standard Analytics Properties can use up to 5,000 tokens per hour; Analytics 360 Properties can use 50,000 tokens per hour. An API request consumes a single number of tokens, and that number is deducted from both the hourly and daily quotas."
        }
      }
    },
    "NumericValue": {
      "description": "To represent a number.",
      "properties": {
        "int64Value": {
          "format": "int64",
          "description": "Integer value",
          "type": "string"
        },
        "doubleValue": {
          "description": "Double value",
          "type": "number",
          "format": "double"
        }
      },
      "id": "NumericValue",
      "type": "object"
    },
    "Cohort": {
      "id": "Cohort",
      "properties": {
        "dimension": {
          "type": "string",
          "description": "Dimension used by the cohort. Required and only supports `firstTouchDate`."
        },
        "dateRange": {
          "description": "The cohort selects users whose first touch date is between start date and end date defined in the `dateRange`. This `dateRange` does not specify the full date range of event data that is present in a cohort report. In a cohort report, this `dateRange` is extended by the granularity and offset present in the `cohortsRange`; event data for the extended reporting date range is present in a cohort report. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. This `dateRange` should generally be aligned with the cohort's granularity. If `CohortsRange` uses daily granularity, this `dateRange` can be a single day. If `CohortsRange` uses weekly granularity, this `dateRange` can be aligned to a week boundary, starting at Sunday and ending Saturday. If `CohortsRange` uses monthly granularity, this `dateRange` can be aligned to a month, starting at the first and ending on the last day of the month.",
          "$ref": "DateRange"
        },
        "name": {
          "type": "string",
          "description": "Assigns a name to this cohort. The dimension `cohort` is valued to this name in a report response. If set, cannot begin with `cohort_` or `RESERVED_`. If not set, cohorts are named by their zero based index `cohort_0`, `cohort_1`, etc."
        }
      },
      "description": "Defines a cohort selection criteria. A cohort is a group of users who share a common characteristic. For example, users with the same `firstTouchDate` belong to the same cohort.",
      "type": "object"
    },
    "DimensionOrderBy": {
      "properties": {
        "orderType": {
          "type": "string",
          "description": "Controls the rule for dimension value ordering.",
          "enum": [
            "ORDER_TYPE_UNSPECIFIED",
            "ALPHANUMERIC",
            "CASE_INSENSITIVE_ALPHANUMERIC",
            "NUMERIC"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Alphanumeric sort by Unicode code point. For example, \"2\" \u003c \"A\" \u003c \"X\" \u003c \"b\" \u003c \"z\".",
            "Case insensitive alphanumeric sort by lower case Unicode code point. For example, \"2\" \u003c \"A\" \u003c \"b\" \u003c \"X\" \u003c \"z\".",
            "Dimension values are converted to numbers before sorting. For example in NUMERIC sort, \"25\" \u003c \"100\", and in `ALPHANUMERIC` sort, \"100\" \u003c \"25\". Non-numeric dimension values all have equal ordering value below all numeric values."
          ]
        },
        "dimensionName": {
          "description": "A dimension name in the request to order by.",
          "type": "string"
        }
      },
      "description": "Sorts by dimension values.",
      "id": "DimensionOrderBy",
      "type": "object"
    },
    "BatchRunPivotReportsResponse": {
      "properties": {
        "pivotReports": {
          "items": {
            "$ref": "RunPivotReportResponse"
          },
          "description": "Individual responses. Each response has a separate pivot report request.",
          "type": "array"
        }
      },
      "id": "BatchRunPivotReportsResponse",
      "description": "The batch response containing multiple pivot reports.",
      "type": "object"
    },
    "BatchRunReportsRequest": {
      "id": "BatchRunReportsRequest",
      "description": "The batch request containing multiple report requests.",
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "RunReportRequest"
          },
          "description": "Individual requests. Each request has a separate report response. Each batch request is allowed up to 5 requests."
        },
        "entity": {
          "$ref": "Entity",
          "description": "A property whose events are tracked. This entity must be specified for the batch. The entity within RunReportRequest may either be unspecified or consistent with this entity."
        }
      }
    },
    "DimensionHeader": {
      "id": "DimensionHeader",
      "type": "object",
      "properties": {
        "name": {
          "description": "The dimension's name.",
          "type": "string"
        }
      },
      "description": "Describes a dimension column in the report. Dimensions requested in a report produce column entries within rows and DimensionHeaders. However, dimensions used exclusively within filters or expressions do not produce columns in a report; correspondingly, those dimensions do not produce headers."
    },
    "ConcatenateExpression": {
      "properties": {
        "dimensionNames": {
          "items": {
            "type": "string"
          },
          "description": "Names of dimensions. The names must refer back to names in the dimensions field of the request.",
          "type": "array"
        },
        "delimiter": {
          "description": "The delimiter placed between dimension names. Delimiters are often single characters such as \"|\" or \",\" but can be longer strings. If a dimension value contains the delimiter, both will be present in response with no distinction. For example if dimension 1 value = \"US,FR\", dimension 2 value = \"JP\", and delimiter = \",\", then the response will contain \"US,FR,JP\".",
          "type": "string"
        }
      },
      "description": "Used to combine dimension values to a single dimension.",
      "type": "object",
      "id": "ConcatenateExpression"
    },
    "PivotHeader": {
      "description": "Dimensions' values in a single pivot.",
      "id": "PivotHeader",
      "properties": {
        "pivotDimensionHeaders": {
          "items": {
            "$ref": "PivotDimensionHeader"
          },
          "type": "array",
          "description": "The size is the same as the cardinality of the corresponding dimension combinations."
        },
        "rowCount": {
          "description": "The cardinality of the pivot as if offset = 0 and limit = -1. The total number of rows for this pivot's fields regardless of how the parameters offset and limit are specified in the request.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DimensionExpression": {
      "properties": {
        "upperCase": {
          "$ref": "CaseExpression",
          "description": "Used to convert a dimension value to upper case."
        },
        "concatenate": {
          "description": "Used to combine dimension values to a single dimension. For example, dimension \"country, city\": concatenate(country, \", \", city).",
          "$ref": "ConcatenateExpression"
        },
        "lowerCase": {
          "description": "Used to convert a dimension value to lower case.",
          "$ref": "CaseExpression"
        }
      },
      "description": "Used to express a dimension which is the result of a formula of multiple dimensions. Example usages: 1) lower_case(dimension) 2) concatenate(dimension1, symbol, dimension2).",
      "type": "object",
      "id": "DimensionExpression"
    },
    "BetweenFilter": {
      "type": "object",
      "properties": {
        "fromValue": {
          "$ref": "NumericValue",
          "description": "Begins with this number."
        },
        "toValue": {
          "description": "Ends with this number.",
          "$ref": "NumericValue"
        }
      },
      "id": "BetweenFilter",
      "description": "To express that the result needs to be between two numbers (inclusive)."
    },
    "BatchRunReportsResponse": {
      "properties": {
        "reports": {
          "description": "Individual responses. Each response has a separate report request.",
          "type": "array",
          "items": {
            "$ref": "RunReportResponse"
          }
        }
      },
      "id": "BatchRunReportsResponse",
      "description": "The batch response containing multiple reports.",
      "type": "object"
    },
    "RunRealtimeReportResponse": {
      "type": "object",
      "description": "The response realtime report table corresponding to a request.",
      "id": "RunRealtimeReportResponse",
      "properties": {
        "propertyQuota": {
          "$ref": "PropertyQuota",
          "description": "This Analytics Property's Realtime quota state including this request."
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "Rows of dimension value combinations and metric values in the report."
        },
        "rowCount": {
          "format": "int32",
          "description": "The total number of rows in the query result, regardless of the number of rows returned in the response. For example if a query returns 175 rows and includes limit = 50 in the API request, the response will contain row_count = 175 but only 50 rows.",
          "type": "integer"
        },
        "maximums": {
          "description": "If requested, the maximum values of metrics.",
          "type": "array",
          "items": {
            "$ref": "Row"
          }
        },
        "metricHeaders": {
          "items": {
            "$ref": "MetricHeader"
          },
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
          "type": "array"
        },
        "totals": {
          "items": {
            "$ref": "Row"
          },
          "type": "array",
          "description": "If requested, the totaled values of metrics."
        },
        "dimensionHeaders": {
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
          "items": {
            "$ref": "DimensionHeader"
          },
          "type": "array"
        },
        "minimums": {
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the minimum values of metrics.",
          "type": "array"
        }
      }
    },
    "Row": {
      "description": "Report data for each row. For example if RunReportRequest contains: ```none \"dimensions\": [ { \"name\": \"eventName\" }, { \"name\": \"countryId\" } ], \"metrics\": [ { \"name\": \"eventCount\" } ] ``` One row with 'in_app_purchase' as the eventName, 'JP' as the countryId, and 15 as the eventCount, would be: ```none \"dimensionValues\": [ { \"value\": \"in_app_purchase\" }, { \"value\": \"JP\" } ], \"metricValues\": [ { \"value\": \"15\" } ] ```",
      "type": "object",
      "properties": {
        "dimensionValues": {
          "type": "array",
          "items": {
            "$ref": "DimensionValue"
          },
          "description": "List of requested dimension values. In a PivotReport, dimension_values are only listed for dimensions included in a pivot."
        },
        "metricValues": {
          "description": "List of requested visible metric values.",
          "items": {
            "$ref": "MetricValue"
          },
          "type": "array"
        }
      },
      "id": "Row"
    },
    "FilterExpression": {
      "type": "object",
      "id": "FilterExpression",
      "properties": {
        "notExpression": {
          "description": "The FilterExpression is NOT of not_expression.",
          "$ref": "FilterExpression"
        },
        "andGroup": {
          "$ref": "FilterExpressionList",
          "description": "The FilterExpressions in and_group have an AND relationship."
        },
        "filter": {
          "$ref": "Filter",
          "description": "A primitive filter. All fields in filter in same FilterExpression needs to be either all dimensions or metrics."
        },
        "orGroup": {
          "$ref": "FilterExpressionList",
          "description": "The FilterExpressions in or_group have an OR relationship."
        }
      },
      "description": "To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics."
    },
    "DimensionMetadata": {
      "id": "DimensionMetadata",
      "properties": {
        "uiName": {
          "type": "string",
          "description": "This dimension's name within the Google Analytics user interface. For example, `Event name`."
        },
        "apiName": {
          "description": "This dimension's name. Useable in [Dimension](#Dimension)'s `name`. For example, `eventName`.",
          "type": "string"
        },
        "customDefinition": {
          "description": "True if the dimension is a custom dimension for this property.",
          "type": "boolean"
        },
        "deprecatedApiNames": {
          "items": {
            "type": "string"
          },
          "description": "Still usable but deprecated names for this dimension. If populated, this dimension is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the dimension will be available only by `apiName`.",
          "type": "array"
        },
        "description": {
          "description": "Description of how this dimension is used and calculated.",
          "type": "string"
        }
      },
      "description": "Explains a dimension.",
      "type": "object"
    }
  },
  "name": "analyticsdata",
  "version_module": true,
  "kind": "discovery#restDescription",
  "fullyEncodeReservedExpansion": true,
  "revision": "20210118",
  "version": "v1alpha",
  "baseUrl": "https://analyticsdata.googleapis.com/",
  "parameters": {
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    }
  },
  "id": "analyticsdata:v1alpha",
  "description": "Accesses report data in Google Analytics.",
  "ownerName": "Google",
  "mtlsRootUrl": "https://analyticsdata.mtls.googleapis.com/",
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/analytics": {
          "description": "View and manage your Google Analytics data"
        },
        "https://www.googleapis.com/auth/analytics.readonly": {
          "description": "See and download your Google Analytics data"
        }
      }
    }
  },
  "documentationLink": "https://developers.google.com/analytics/devguides/reporting/data/v1/",
  "resources": {
    "properties": {
      "methods": {
        "getMetadata": {
          "parameterOrder": [
            "name"
          ],
          "description": "Returns metadata for dimensions and metrics available in reporting methods. Used to explore the dimensions and metrics. In this method, a Google Analytics GA4 Property Identifier is specified in the request, and the metadata response includes Custom dimensions and metrics as well as Universal metadata. For example if a custom metric with parameter name `levels_unlocked` is registered to a property, the Metadata response will contain `customEvent:levels_unlocked`. Universal metadata are dimensions and metrics applicable to any property such as `country` and `totalUsers`.",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "flatPath": "v1alpha/properties/{propertiesId}/metadata",
          "id": "analyticsdata.properties.getMetadata",
          "path": "v1alpha/{+name}",
          "response": {
            "$ref": "Metadata"
          },
          "parameters": {
            "name": {
              "required": true,
              "description": "Required. The resource name of the metadata to retrieve. This name field is specified in the URL path and not URL parameters. Property is a numeric Google Analytics GA4 Property identifier. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Example: properties/1234/metadata Set the Property ID to 0 for dimensions and metrics common to all properties. In this special mode, this method will not return custom dimensions and metrics.",
              "location": "path",
              "type": "string",
              "pattern": "^properties/[^/]+/metadata$"
            }
          },
          "httpMethod": "GET"
        },
        "runRealtimeReport": {
          "path": "v1alpha/{+property}:runRealtimeReport",
          "flatPath": "v1alpha/properties/{propertiesId}:runRealtimeReport",
          "httpMethod": "POST",
          "response": {
            "$ref": "RunRealtimeReportResponse"
          },
          "id": "analyticsdata.properties.runRealtimeReport",
          "parameters": {
            "property": {
              "type": "string",
              "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Example: properties/1234",
              "location": "path",
              "pattern": "^properties/[^/]+$",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "parameterOrder": [
            "property"
          ],
          "request": {
            "$ref": "RunRealtimeReportRequest"
          },
          "description": "The Google Analytics Realtime API returns a customized report of realtime event data for your property. These reports show events and usage from the last 30 minutes."
        }
      }
    },
    "v1alpha": {
      "methods": {
        "runReport": {
          "description": "Returns a customized report of your Google Analytics event data. Reports contain statistics derived from data collected by the Google Analytics tracking code. The data returned from the API is as a table with columns for the requested dimensions and metrics. Metrics are individual measurements of user activity on your property, such as active users or event count. Dimensions break down metrics across some common criteria, such as country or event name.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "parameterOrder": [],
          "request": {
            "$ref": "RunReportRequest"
          },
          "parameters": {},
          "response": {
            "$ref": "RunReportResponse"
          },
          "flatPath": "v1alpha:runReport",
          "path": "v1alpha:runReport",
          "id": "analyticsdata.runReport"
        },
        "batchRunReports": {
          "request": {
            "$ref": "BatchRunReportsRequest"
          },
          "path": "v1alpha:batchRunReports",
          "id": "analyticsdata.batchRunReports",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "parameterOrder": [],
          "parameters": {},
          "flatPath": "v1alpha:batchRunReports",
          "response": {
            "$ref": "BatchRunReportsResponse"
          },
          "httpMethod": "POST",
          "description": "Returns multiple reports in a batch. All reports must be for the same Entity."
        },
        "runPivotReport": {
          "parameters": {},
          "response": {
            "$ref": "RunPivotReportResponse"
          },
          "description": "Returns a customized pivot report of your Google Analytics event data. Pivot reports are more advanced and expressive formats than regular reports. In a pivot report, dimensions are only visible if they are included in a pivot. Multiple pivots can be specified to further dissect your data.",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "parameterOrder": [],
          "flatPath": "v1alpha:runPivotReport",
          "httpMethod": "POST",
          "path": "v1alpha:runPivotReport",
          "request": {
            "$ref": "RunPivotReportRequest"
          },
          "id": "analyticsdata.runPivotReport"
        },
        "batchRunPivotReports": {
          "description": "Returns multiple pivot reports in a batch. All reports must be for the same Entity.",
          "parameters": {},
          "httpMethod": "POST",
          "parameterOrder": [],
          "id": "analyticsdata.batchRunPivotReports",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "response": {
            "$ref": "BatchRunPivotReportsResponse"
          },
          "request": {
            "$ref": "BatchRunPivotReportsRequest"
          },
          "flatPath": "v1alpha:batchRunPivotReports",
          "path": "v1alpha:batchRunPivotReports"
        }
      }
    }
  },
  "basePath": "",
  "canonicalName": "AnalyticsData",
  "rootUrl": "https://analyticsdata.googleapis.com/",
  "ownerDomain": "google.com",
  "servicePath": "",
  "title": "Google Analytics Data API",
  "batchPath": "batch"
}
