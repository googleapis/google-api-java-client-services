/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for ImageRepositoryVenomStatus.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageRepositoryVenomStatus extends com.google.api.client.json.GenericJson {

  /**
   * Venom ACL of the video. Used to check if other systems, such as Ares, are able to process the
   * video.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoAssetsVenomACL acl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long deletionTimestampUsec;

  /**
   * The Genus (Venom's client ID) that this media belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String genus;

  /**
   * Time that VideoNotification result was received from Venom.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long insertionResponseTimestampUsec;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long insertionTimestampUsec;

  /**
   * Record the attempts num of previous insertion. It's only updated when either the insertion
   * succeeds or fails with reason INSERTION_ATTEMPTS_EXCEEDED, but it's always set so that we can
   * easily construct venom_id with this attempts num for future insertions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer lastInsertionAttemptsNum;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reason;

  /**
   * The Settings that were used to customize the Venom request for this media.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VideoAssetsVenomSettings> settings;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Transition contains the Objective and Outcome of the latest Venom run.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoAssetsVenomTransition transition;

  /**
   * The media's unique identifier within Venom.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoAssetsVenomVideoId venomId;

  /**
   * The generation number returned by Venom.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long venomMutationGeneration;

  /**
   * This field is not persisted anywhere. It is only used in deletion service for converying the
   * VideoVenomSetting when deleting Venom data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String videoVenomSetting;

  /**
   * Venom ACL of the video. Used to check if other systems, such as Ares, are able to process the
   * video.
   * @return value or {@code null} for none
   */
  public VideoAssetsVenomACL getAcl() {
    return acl;
  }

  /**
   * Venom ACL of the video. Used to check if other systems, such as Ares, are able to process the
   * video.
   * @param acl acl or {@code null} for none
   */
  public ImageRepositoryVenomStatus setAcl(VideoAssetsVenomACL acl) {
    this.acl = acl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getDeletionTimestampUsec() {
    return deletionTimestampUsec;
  }

  /**
   * @param deletionTimestampUsec deletionTimestampUsec or {@code null} for none
   */
  public ImageRepositoryVenomStatus setDeletionTimestampUsec(java.lang.Long deletionTimestampUsec) {
    this.deletionTimestampUsec = deletionTimestampUsec;
    return this;
  }

  /**
   * The Genus (Venom's client ID) that this media belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getGenus() {
    return genus;
  }

  /**
   * The Genus (Venom's client ID) that this media belongs to.
   * @param genus genus or {@code null} for none
   */
  public ImageRepositoryVenomStatus setGenus(java.lang.String genus) {
    this.genus = genus;
    return this;
  }

  /**
   * Time that VideoNotification result was received from Venom.
   * @return value or {@code null} for none
   */
  public java.lang.Long getInsertionResponseTimestampUsec() {
    return insertionResponseTimestampUsec;
  }

  /**
   * Time that VideoNotification result was received from Venom.
   * @param insertionResponseTimestampUsec insertionResponseTimestampUsec or {@code null} for none
   */
  public ImageRepositoryVenomStatus setInsertionResponseTimestampUsec(java.lang.Long insertionResponseTimestampUsec) {
    this.insertionResponseTimestampUsec = insertionResponseTimestampUsec;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getInsertionTimestampUsec() {
    return insertionTimestampUsec;
  }

  /**
   * @param insertionTimestampUsec insertionTimestampUsec or {@code null} for none
   */
  public ImageRepositoryVenomStatus setInsertionTimestampUsec(java.lang.Long insertionTimestampUsec) {
    this.insertionTimestampUsec = insertionTimestampUsec;
    return this;
  }

  /**
   * Record the attempts num of previous insertion. It's only updated when either the insertion
   * succeeds or fails with reason INSERTION_ATTEMPTS_EXCEEDED, but it's always set so that we can
   * easily construct venom_id with this attempts num for future insertions.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLastInsertionAttemptsNum() {
    return lastInsertionAttemptsNum;
  }

  /**
   * Record the attempts num of previous insertion. It's only updated when either the insertion
   * succeeds or fails with reason INSERTION_ATTEMPTS_EXCEEDED, but it's always set so that we can
   * easily construct venom_id with this attempts num for future insertions.
   * @param lastInsertionAttemptsNum lastInsertionAttemptsNum or {@code null} for none
   */
  public ImageRepositoryVenomStatus setLastInsertionAttemptsNum(java.lang.Integer lastInsertionAttemptsNum) {
    this.lastInsertionAttemptsNum = lastInsertionAttemptsNum;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getReason() {
    return reason;
  }

  /**
   * @param reason reason or {@code null} for none
   */
  public ImageRepositoryVenomStatus setReason(java.lang.String reason) {
    this.reason = reason;
    return this;
  }

  /**
   * The Settings that were used to customize the Venom request for this media.
   * @return value or {@code null} for none
   */
  public java.util.List<VideoAssetsVenomSettings> getSettings() {
    return settings;
  }

  /**
   * The Settings that were used to customize the Venom request for this media.
   * @param settings settings or {@code null} for none
   */
  public ImageRepositoryVenomStatus setSettings(java.util.List<VideoAssetsVenomSettings> settings) {
    this.settings = settings;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * @param state state or {@code null} for none
   */
  public ImageRepositoryVenomStatus setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Transition contains the Objective and Outcome of the latest Venom run.
   * @return value or {@code null} for none
   */
  public VideoAssetsVenomTransition getTransition() {
    return transition;
  }

  /**
   * Transition contains the Objective and Outcome of the latest Venom run.
   * @param transition transition or {@code null} for none
   */
  public ImageRepositoryVenomStatus setTransition(VideoAssetsVenomTransition transition) {
    this.transition = transition;
    return this;
  }

  /**
   * The media's unique identifier within Venom.
   * @return value or {@code null} for none
   */
  public VideoAssetsVenomVideoId getVenomId() {
    return venomId;
  }

  /**
   * The media's unique identifier within Venom.
   * @param venomId venomId or {@code null} for none
   */
  public ImageRepositoryVenomStatus setVenomId(VideoAssetsVenomVideoId venomId) {
    this.venomId = venomId;
    return this;
  }

  /**
   * The generation number returned by Venom.
   * @return value or {@code null} for none
   */
  public java.lang.Long getVenomMutationGeneration() {
    return venomMutationGeneration;
  }

  /**
   * The generation number returned by Venom.
   * @param venomMutationGeneration venomMutationGeneration or {@code null} for none
   */
  public ImageRepositoryVenomStatus setVenomMutationGeneration(java.lang.Long venomMutationGeneration) {
    this.venomMutationGeneration = venomMutationGeneration;
    return this;
  }

  /**
   * This field is not persisted anywhere. It is only used in deletion service for converying the
   * VideoVenomSetting when deleting Venom data.
   * @return value or {@code null} for none
   */
  public java.lang.String getVideoVenomSetting() {
    return videoVenomSetting;
  }

  /**
   * This field is not persisted anywhere. It is only used in deletion service for converying the
   * VideoVenomSetting when deleting Venom data.
   * @param videoVenomSetting videoVenomSetting or {@code null} for none
   */
  public ImageRepositoryVenomStatus setVideoVenomSetting(java.lang.String videoVenomSetting) {
    this.videoVenomSetting = videoVenomSetting;
    return this;
  }

  @Override
  public ImageRepositoryVenomStatus set(String fieldName, Object value) {
    return (ImageRepositoryVenomStatus) super.set(fieldName, value);
  }

  @Override
  public ImageRepositoryVenomStatus clone() {
    return (ImageRepositoryVenomStatus) super.clone();
  }

}
