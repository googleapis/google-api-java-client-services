/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * GKE NodePools that Dataproc workloads run on.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GkeNodePoolTarget extends com.google.api.client.json.GenericJson {

  /**
   * Required. The target GKE NodePool. Format:
   * 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nodePool;

  /**
   * Input only. The configuration for the GKE NodePool.If specified, Dataproc attempts to create a
   * NodePool with the specified shape. If one with the same name already exists, it is verified
   * against all specified fields. If a field differs, the virtual cluster creation will fail.If
   * omitted, any NodePool with the specified name is used. If a NodePool with the specified name
   * does not exist, Dataproc create a NodePool with default values.This is an input only field. It
   * will not be returned by the API.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GkeNodePoolConfig nodePoolConfig;

  /**
   * Required. The types of role for a GKE NodePool
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> roles;

  /**
   * Required. The target GKE NodePool. Format:
   * 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'
   * @return value or {@code null} for none
   */
  public java.lang.String getNodePool() {
    return nodePool;
  }

  /**
   * Required. The target GKE NodePool. Format:
   * 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'
   * @param nodePool nodePool or {@code null} for none
   */
  public GkeNodePoolTarget setNodePool(java.lang.String nodePool) {
    this.nodePool = nodePool;
    return this;
  }

  /**
   * Input only. The configuration for the GKE NodePool.If specified, Dataproc attempts to create a
   * NodePool with the specified shape. If one with the same name already exists, it is verified
   * against all specified fields. If a field differs, the virtual cluster creation will fail.If
   * omitted, any NodePool with the specified name is used. If a NodePool with the specified name
   * does not exist, Dataproc create a NodePool with default values.This is an input only field. It
   * will not be returned by the API.
   * @return value or {@code null} for none
   */
  public GkeNodePoolConfig getNodePoolConfig() {
    return nodePoolConfig;
  }

  /**
   * Input only. The configuration for the GKE NodePool.If specified, Dataproc attempts to create a
   * NodePool with the specified shape. If one with the same name already exists, it is verified
   * against all specified fields. If a field differs, the virtual cluster creation will fail.If
   * omitted, any NodePool with the specified name is used. If a NodePool with the specified name
   * does not exist, Dataproc create a NodePool with default values.This is an input only field. It
   * will not be returned by the API.
   * @param nodePoolConfig nodePoolConfig or {@code null} for none
   */
  public GkeNodePoolTarget setNodePoolConfig(GkeNodePoolConfig nodePoolConfig) {
    this.nodePoolConfig = nodePoolConfig;
    return this;
  }

  /**
   * Required. The types of role for a GKE NodePool
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRoles() {
    return roles;
  }

  /**
   * Required. The types of role for a GKE NodePool
   * @param roles roles or {@code null} for none
   */
  public GkeNodePoolTarget setRoles(java.util.List<java.lang.String> roles) {
    this.roles = roles;
    return this;
  }

  @Override
  public GkeNodePoolTarget set(String fieldName, Object value) {
    return (GkeNodePoolTarget) super.set(fieldName, value);
  }

  @Override
  public GkeNodePoolTarget clone() {
    return (GkeNodePoolTarget) super.clone();
  }

}
