/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firestore.v1.model;

/**
 * A backup schedule for a Cloud Firestore Database. This resource is owned by the database it is
 * backing up, and is deleted along with the database. The actual backups are not though.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Firestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirestoreAdminV1BackupSchedule extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The timestamp at which this backup schedule was created and effective since. No
   * backups will be created for this schedule before this time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * For a schedule that runs daily at a specified time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleFirestoreAdminV1DailyRecurrence dailyRecurrence;

  /**
   * Output only. The unique backup schedule identifier across all locations and databases for the
   * given project. This will be auto-assigned. Format is
   * `projects/{project}/databases/{database}/backupSchedules/{backup_schedule}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * At what relative time in the future, compared to the creation time of the backup should the
   * backup be deleted, i.e. keep backups for 7 days.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String retention;

  /**
   * Output only. The timestamp at which this backup schedule was most recently updated. When a
   * backup schedule is first created, this is the same as create_time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * For a schedule that runs weekly on a specific day and time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleFirestoreAdminV1WeeklyRecurrence weeklyRecurrence;

  /**
   * Output only. The timestamp at which this backup schedule was created and effective since. No
   * backups will be created for this schedule before this time.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp at which this backup schedule was created and effective since. No
   * backups will be created for this schedule before this time.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleFirestoreAdminV1BackupSchedule setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * For a schedule that runs daily at a specified time.
   * @return value or {@code null} for none
   */
  public GoogleFirestoreAdminV1DailyRecurrence getDailyRecurrence() {
    return dailyRecurrence;
  }

  /**
   * For a schedule that runs daily at a specified time.
   * @param dailyRecurrence dailyRecurrence or {@code null} for none
   */
  public GoogleFirestoreAdminV1BackupSchedule setDailyRecurrence(GoogleFirestoreAdminV1DailyRecurrence dailyRecurrence) {
    this.dailyRecurrence = dailyRecurrence;
    return this;
  }

  /**
   * Output only. The unique backup schedule identifier across all locations and databases for the
   * given project. This will be auto-assigned. Format is
   * `projects/{project}/databases/{database}/backupSchedules/{backup_schedule}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The unique backup schedule identifier across all locations and databases for the
   * given project. This will be auto-assigned. Format is
   * `projects/{project}/databases/{database}/backupSchedules/{backup_schedule}`
   * @param name name or {@code null} for none
   */
  public GoogleFirestoreAdminV1BackupSchedule setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * At what relative time in the future, compared to the creation time of the backup should the
   * backup be deleted, i.e. keep backups for 7 days.
   * @return value or {@code null} for none
   */
  public String getRetention() {
    return retention;
  }

  /**
   * At what relative time in the future, compared to the creation time of the backup should the
   * backup be deleted, i.e. keep backups for 7 days.
   * @param retention retention or {@code null} for none
   */
  public GoogleFirestoreAdminV1BackupSchedule setRetention(String retention) {
    this.retention = retention;
    return this;
  }

  /**
   * Output only. The timestamp at which this backup schedule was most recently updated. When a
   * backup schedule is first created, this is the same as create_time.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp at which this backup schedule was most recently updated. When a
   * backup schedule is first created, this is the same as create_time.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleFirestoreAdminV1BackupSchedule setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * For a schedule that runs weekly on a specific day and time.
   * @return value or {@code null} for none
   */
  public GoogleFirestoreAdminV1WeeklyRecurrence getWeeklyRecurrence() {
    return weeklyRecurrence;
  }

  /**
   * For a schedule that runs weekly on a specific day and time.
   * @param weeklyRecurrence weeklyRecurrence or {@code null} for none
   */
  public GoogleFirestoreAdminV1BackupSchedule setWeeklyRecurrence(GoogleFirestoreAdminV1WeeklyRecurrence weeklyRecurrence) {
    this.weeklyRecurrence = weeklyRecurrence;
    return this;
  }

  @Override
  public GoogleFirestoreAdminV1BackupSchedule set(String fieldName, Object value) {
    return (GoogleFirestoreAdminV1BackupSchedule) super.set(fieldName, value);
  }

  @Override
  public GoogleFirestoreAdminV1BackupSchedule clone() {
    return (GoogleFirestoreAdminV1BackupSchedule) super.clone();
  }

}
