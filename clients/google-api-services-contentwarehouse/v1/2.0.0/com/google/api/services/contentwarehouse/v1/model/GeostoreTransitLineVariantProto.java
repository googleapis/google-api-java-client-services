/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A line variant is a specific instantiation of a line concept, denoted by the ordered set of stops
 * and collection of segments that it traverses. Line variants are modeled as TYPE_ROUTE features
 * with gcid:transit_line_variant. This proto stores line-variant-specific information that is not
 * generally applicable to all routes. Schema Design Doc: go/transit-line-concepts-and-variants
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreTransitLineVariantProto extends com.google.api.client.json.GenericJson {

  /**
   * Reference to the line variant’s line concept.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostoreFeatureIdProto lineConcept;

  /**
   * Ordered list of stations or platforms serviced by this line variant. The order is captured by
   * the ServicedStopProto.index field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GeostoreServicedStopProto> stops;

  static {
    // hack to force ProGuard to consider GeostoreServicedStopProto used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GeostoreServicedStopProto.class);
  }

  /**
   * Reference to the line variant’s line concept.
   * @return value or {@code null} for none
   */
  public GeostoreFeatureIdProto getLineConcept() {
    return lineConcept;
  }

  /**
   * Reference to the line variant’s line concept.
   * @param lineConcept lineConcept or {@code null} for none
   */
  public GeostoreTransitLineVariantProto setLineConcept(GeostoreFeatureIdProto lineConcept) {
    this.lineConcept = lineConcept;
    return this;
  }

  /**
   * Ordered list of stations or platforms serviced by this line variant. The order is captured by
   * the ServicedStopProto.index field.
   * @return value or {@code null} for none
   */
  public java.util.List<GeostoreServicedStopProto> getStops() {
    return stops;
  }

  /**
   * Ordered list of stations or platforms serviced by this line variant. The order is captured by
   * the ServicedStopProto.index field.
   * @param stops stops or {@code null} for none
   */
  public GeostoreTransitLineVariantProto setStops(java.util.List<GeostoreServicedStopProto> stops) {
    this.stops = stops;
    return this;
  }

  @Override
  public GeostoreTransitLineVariantProto set(String fieldName, Object value) {
    return (GeostoreTransitLineVariantProto) super.set(fieldName, value);
  }

  @Override
  public GeostoreTransitLineVariantProto clone() {
    return (GeostoreTransitLineVariantProto) super.clone();
  }

}
