/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for RepositoryWebrefTripleAnnotation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefTripleAnnotation extends com.google.api.client.json.GenericJson {

  /**
   * Triple annotation confidence_score (value between 0 and 1). Higher values correspond to higher
   * confidence.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float confidenceScore;

  /**
   * The information in this triple is implied by other triple(s) in the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isImplied;

  /**
   * Set to true if this triple is present in the webref model as either a link or property value.
   * This implies that the information is in the Knowledge Graph. Note that it can happen that a
   * triple is in KG but not present in the webref model.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean kgVerified;

  /**
   * Occurrences of the triple on the document
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefTripleMention> mentions;

  /**
   * The mid of the predicate kg-property(-ies). In order, in the case of multihop links.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.math.BigInteger> predMid;

  /**
   * Generic container to hold additional data such as signals, debug data etc. Data that can be
   * stored in this field and their TypeIds: repository_webref::evaluation::ECMDebug (TypeId
   * 192627933), defined in repository/webref/evaluation/triple_annotations/triple-diff.proto
   * Debugging data to be used in WebIt's ECM report.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Proto2BridgeMessageSet stuff;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeGraphTriple triple;

  /**
   * Triple annotation confidence_score (value between 0 and 1). Higher values correspond to higher
   * confidence.
   * @return value or {@code null} for none
   */
  public java.lang.Float getConfidenceScore() {
    return confidenceScore;
  }

  /**
   * Triple annotation confidence_score (value between 0 and 1). Higher values correspond to higher
   * confidence.
   * @param confidenceScore confidenceScore or {@code null} for none
   */
  public RepositoryWebrefTripleAnnotation setConfidenceScore(java.lang.Float confidenceScore) {
    this.confidenceScore = confidenceScore;
    return this;
  }

  /**
   * The information in this triple is implied by other triple(s) in the document.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsImplied() {
    return isImplied;
  }

  /**
   * The information in this triple is implied by other triple(s) in the document.
   * @param isImplied isImplied or {@code null} for none
   */
  public RepositoryWebrefTripleAnnotation setIsImplied(java.lang.Boolean isImplied) {
    this.isImplied = isImplied;
    return this;
  }

  /**
   * Set to true if this triple is present in the webref model as either a link or property value.
   * This implies that the information is in the Knowledge Graph. Note that it can happen that a
   * triple is in KG but not present in the webref model.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getKgVerified() {
    return kgVerified;
  }

  /**
   * Set to true if this triple is present in the webref model as either a link or property value.
   * This implies that the information is in the Knowledge Graph. Note that it can happen that a
   * triple is in KG but not present in the webref model.
   * @param kgVerified kgVerified or {@code null} for none
   */
  public RepositoryWebrefTripleAnnotation setKgVerified(java.lang.Boolean kgVerified) {
    this.kgVerified = kgVerified;
    return this;
  }

  /**
   * Occurrences of the triple on the document
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefTripleMention> getMentions() {
    return mentions;
  }

  /**
   * Occurrences of the triple on the document
   * @param mentions mentions or {@code null} for none
   */
  public RepositoryWebrefTripleAnnotation setMentions(java.util.List<RepositoryWebrefTripleMention> mentions) {
    this.mentions = mentions;
    return this;
  }

  /**
   * The mid of the predicate kg-property(-ies). In order, in the case of multihop links.
   * @return value or {@code null} for none
   */
  public java.util.List<java.math.BigInteger> getPredMid() {
    return predMid;
  }

  /**
   * The mid of the predicate kg-property(-ies). In order, in the case of multihop links.
   * @param predMid predMid or {@code null} for none
   */
  public RepositoryWebrefTripleAnnotation setPredMid(java.util.List<java.math.BigInteger> predMid) {
    this.predMid = predMid;
    return this;
  }

  /**
   * Generic container to hold additional data such as signals, debug data etc. Data that can be
   * stored in this field and their TypeIds: repository_webref::evaluation::ECMDebug (TypeId
   * 192627933), defined in repository/webref/evaluation/triple_annotations/triple-diff.proto
   * Debugging data to be used in WebIt's ECM report.
   * @return value or {@code null} for none
   */
  public Proto2BridgeMessageSet getStuff() {
    return stuff;
  }

  /**
   * Generic container to hold additional data such as signals, debug data etc. Data that can be
   * stored in this field and their TypeIds: repository_webref::evaluation::ECMDebug (TypeId
   * 192627933), defined in repository/webref/evaluation/triple_annotations/triple-diff.proto
   * Debugging data to be used in WebIt's ECM report.
   * @param stuff stuff or {@code null} for none
   */
  public RepositoryWebrefTripleAnnotation setStuff(Proto2BridgeMessageSet stuff) {
    this.stuff = stuff;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public KnowledgeGraphTriple getTriple() {
    return triple;
  }

  /**
   * @param triple triple or {@code null} for none
   */
  public RepositoryWebrefTripleAnnotation setTriple(KnowledgeGraphTriple triple) {
    this.triple = triple;
    return this;
  }

  @Override
  public RepositoryWebrefTripleAnnotation set(String fieldName, Object value) {
    return (RepositoryWebrefTripleAnnotation) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefTripleAnnotation clone() {
    return (RepositoryWebrefTripleAnnotation) super.clone();
  }

}
