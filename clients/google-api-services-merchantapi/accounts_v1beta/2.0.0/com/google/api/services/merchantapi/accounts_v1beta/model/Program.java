/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * Defines participation in a given program for the specified account. Programs provide a mechanism
 * for adding functionality to merchant accounts. A typical example of this is the [Free product lis
 * tings](https://support.google.com/merchants/topic/9240261?ref_topic=7257954,7259405,&sjid=7966486
 * 81813264022-EU) program, which enables products from a merchant's store to be shown across Google
 * for free.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Program extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The regions in which the account is actively participating in the program. Active
   * regions are defined as those where all program requirements affecting the regions have been
   * met. Region codes are defined by [CLDR](https://cldr.unicode.org/). This is either a country
   * where the program applies specifically to that country or `001` when the program applies
   * globally.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> activeRegionCodes;

  /**
   * Output only. The URL of a Merchant Center help page describing the program.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String documentationUri;

  /**
   * Identifier. The resource name of the program. Format: `accounts/{account}/programs/{program}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The participation state of the account in the program.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The requirements that the account has not yet satisfied that are affecting
   * participation in the program.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Requirement> unmetRequirements;

  /**
   * Output only. The regions in which the account is actively participating in the program. Active
   * regions are defined as those where all program requirements affecting the regions have been
   * met. Region codes are defined by [CLDR](https://cldr.unicode.org/). This is either a country
   * where the program applies specifically to that country or `001` when the program applies
   * globally.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getActiveRegionCodes() {
    return activeRegionCodes;
  }

  /**
   * Output only. The regions in which the account is actively participating in the program. Active
   * regions are defined as those where all program requirements affecting the regions have been
   * met. Region codes are defined by [CLDR](https://cldr.unicode.org/). This is either a country
   * where the program applies specifically to that country or `001` when the program applies
   * globally.
   * @param activeRegionCodes activeRegionCodes or {@code null} for none
   */
  public Program setActiveRegionCodes(java.util.List<java.lang.String> activeRegionCodes) {
    this.activeRegionCodes = activeRegionCodes;
    return this;
  }

  /**
   * Output only. The URL of a Merchant Center help page describing the program.
   * @return value or {@code null} for none
   */
  public java.lang.String getDocumentationUri() {
    return documentationUri;
  }

  /**
   * Output only. The URL of a Merchant Center help page describing the program.
   * @param documentationUri documentationUri or {@code null} for none
   */
  public Program setDocumentationUri(java.lang.String documentationUri) {
    this.documentationUri = documentationUri;
    return this;
  }

  /**
   * Identifier. The resource name of the program. Format: `accounts/{account}/programs/{program}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the program. Format: `accounts/{account}/programs/{program}`
   * @param name name or {@code null} for none
   */
  public Program setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The participation state of the account in the program.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The participation state of the account in the program.
   * @param state state or {@code null} for none
   */
  public Program setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The requirements that the account has not yet satisfied that are affecting
   * participation in the program.
   * @return value or {@code null} for none
   */
  public java.util.List<Requirement> getUnmetRequirements() {
    return unmetRequirements;
  }

  /**
   * Output only. The requirements that the account has not yet satisfied that are affecting
   * participation in the program.
   * @param unmetRequirements unmetRequirements or {@code null} for none
   */
  public Program setUnmetRequirements(java.util.List<Requirement> unmetRequirements) {
    this.unmetRequirements = unmetRequirements;
    return this;
  }

  @Override
  public Program set(String fieldName, Object value) {
    return (Program) super.set(fieldName, value);
  }

  @Override
  public Program clone() {
    return (Program) super.clone();
  }

}
