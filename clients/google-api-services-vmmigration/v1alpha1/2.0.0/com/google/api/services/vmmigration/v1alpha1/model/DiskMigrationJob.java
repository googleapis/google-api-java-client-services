/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmmigration.v1alpha1.model;

/**
 * Describes the disk which will be migrated from the source environment. The source disk has to be
 * unattached.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VM Migration API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DiskMigrationJob extends com.google.api.client.json.GenericJson {

  /**
   * Details of the unattached AWS source disk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AwsSourceDiskDetails awsSourceDiskDetails;

  /**
   * Output only. The time the DiskMigrationJob resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Provides details on the errors that led to the disk migration job's state in case
   * of an error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Status> errors;

  /**
   * Output only. Identifier. The identifier of the DiskMigrationJob.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. State of the DiskMigrationJob.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The disk migration steps list representing its progress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DiskMigrationStep> steps;

  /**
   * Required. Details of the target Disk in Compute Engine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DiskMigrationJobTargetDetails targetDetails;

  /**
   * Output only. The last time the DiskMigrationJob resource was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Details of the unattached AWS source disk.
   * @return value or {@code null} for none
   */
  public AwsSourceDiskDetails getAwsSourceDiskDetails() {
    return awsSourceDiskDetails;
  }

  /**
   * Details of the unattached AWS source disk.
   * @param awsSourceDiskDetails awsSourceDiskDetails or {@code null} for none
   */
  public DiskMigrationJob setAwsSourceDiskDetails(AwsSourceDiskDetails awsSourceDiskDetails) {
    this.awsSourceDiskDetails = awsSourceDiskDetails;
    return this;
  }

  /**
   * Output only. The time the DiskMigrationJob resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time the DiskMigrationJob resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public DiskMigrationJob setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Provides details on the errors that led to the disk migration job's state in case
   * of an error.
   * @return value or {@code null} for none
   */
  public java.util.List<Status> getErrors() {
    return errors;
  }

  /**
   * Output only. Provides details on the errors that led to the disk migration job's state in case
   * of an error.
   * @param errors errors or {@code null} for none
   */
  public DiskMigrationJob setErrors(java.util.List<Status> errors) {
    this.errors = errors;
    return this;
  }

  /**
   * Output only. Identifier. The identifier of the DiskMigrationJob.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Identifier. The identifier of the DiskMigrationJob.
   * @param name name or {@code null} for none
   */
  public DiskMigrationJob setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. State of the DiskMigrationJob.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. State of the DiskMigrationJob.
   * @param state state or {@code null} for none
   */
  public DiskMigrationJob setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The disk migration steps list representing its progress.
   * @return value or {@code null} for none
   */
  public java.util.List<DiskMigrationStep> getSteps() {
    return steps;
  }

  /**
   * Output only. The disk migration steps list representing its progress.
   * @param steps steps or {@code null} for none
   */
  public DiskMigrationJob setSteps(java.util.List<DiskMigrationStep> steps) {
    this.steps = steps;
    return this;
  }

  /**
   * Required. Details of the target Disk in Compute Engine.
   * @return value or {@code null} for none
   */
  public DiskMigrationJobTargetDetails getTargetDetails() {
    return targetDetails;
  }

  /**
   * Required. Details of the target Disk in Compute Engine.
   * @param targetDetails targetDetails or {@code null} for none
   */
  public DiskMigrationJob setTargetDetails(DiskMigrationJobTargetDetails targetDetails) {
    this.targetDetails = targetDetails;
    return this;
  }

  /**
   * Output only. The last time the DiskMigrationJob resource was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The last time the DiskMigrationJob resource was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public DiskMigrationJob setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public DiskMigrationJob set(String fieldName, Object value) {
    return (DiskMigrationJob) super.set(fieldName, value);
  }

  @Override
  public DiskMigrationJob clone() {
    return (DiskMigrationJob) super.clone();
  }

}
