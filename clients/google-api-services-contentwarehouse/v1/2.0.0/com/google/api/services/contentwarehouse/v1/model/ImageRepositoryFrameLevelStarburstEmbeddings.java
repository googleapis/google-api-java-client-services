/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Each supported Starburst embedding version will have a pair of AmarnaSignalsBlobInfo and
 * SUPFrameLevelEmbeddings. Blob info has the blob id of the corresponding embeddings and a blob
 * write timestamp. SUPFrameLevelEmbeddings are the actual frame-level embeddings at 1 FPS. MMS
 * callers have 3 options to fetch frame-level Starburst embeddings: 1. OPTION_NONE (default): Don't
 * fetch frame-level Starburst embeddings. 2. OPTION_BLOB_DATA: Fetch the actual Starburst
 * embeddings in SUPFrameLevelEmbeddings. 3. OPTION_CLONED_BLOB_ID: Clone the starburst embeddings
 * into the target Blobstore directory. Then, fetch the cloned blob id of Starburst embeddings in
 * AmarnaSignalsBlobInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageRepositoryFrameLevelStarburstEmbeddings extends com.google.api.client.json.GenericJson {

  /**
   * Frame-level Starburst V5 embeddings computed by SUP. See
   * https://data.corp.google.com/su_catalog/signal/starburst:v5.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageRepositorySUPFrameLevelEmbeddings starburstV5Embeddings;

  /**
   * Frame-level Starburst V5 embeddings blob id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageRepositoryAmarnaSignalsBlobInfo starburstV5EmbeddingsBlobInfo;

  /**
   * Frame-level Starburst V5 embeddings computed by SUP. See
   * https://data.corp.google.com/su_catalog/signal/starburst:v5.
   * @return value or {@code null} for none
   */
  public ImageRepositorySUPFrameLevelEmbeddings getStarburstV5Embeddings() {
    return starburstV5Embeddings;
  }

  /**
   * Frame-level Starburst V5 embeddings computed by SUP. See
   * https://data.corp.google.com/su_catalog/signal/starburst:v5.
   * @param starburstV5Embeddings starburstV5Embeddings or {@code null} for none
   */
  public ImageRepositoryFrameLevelStarburstEmbeddings setStarburstV5Embeddings(ImageRepositorySUPFrameLevelEmbeddings starburstV5Embeddings) {
    this.starburstV5Embeddings = starburstV5Embeddings;
    return this;
  }

  /**
   * Frame-level Starburst V5 embeddings blob id.
   * @return value or {@code null} for none
   */
  public ImageRepositoryAmarnaSignalsBlobInfo getStarburstV5EmbeddingsBlobInfo() {
    return starburstV5EmbeddingsBlobInfo;
  }

  /**
   * Frame-level Starburst V5 embeddings blob id.
   * @param starburstV5EmbeddingsBlobInfo starburstV5EmbeddingsBlobInfo or {@code null} for none
   */
  public ImageRepositoryFrameLevelStarburstEmbeddings setStarburstV5EmbeddingsBlobInfo(ImageRepositoryAmarnaSignalsBlobInfo starburstV5EmbeddingsBlobInfo) {
    this.starburstV5EmbeddingsBlobInfo = starburstV5EmbeddingsBlobInfo;
    return this;
  }

  @Override
  public ImageRepositoryFrameLevelStarburstEmbeddings set(String fieldName, Object value) {
    return (ImageRepositoryFrameLevelStarburstEmbeddings) super.set(fieldName, value);
  }

  @Override
  public ImageRepositoryFrameLevelStarburstEmbeddings clone() {
    return (ImageRepositoryFrameLevelStarburstEmbeddings) super.clone();
  }

}
