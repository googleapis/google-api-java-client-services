/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.classroom.model;

/**
 * Global information for a user.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Classroom API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UserProfile extends com.google.api.client.json.GenericJson {

  /**
   * Email address of the user.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String emailAddress;

  /**
   * Identifier of the user.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Name of the user.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Name name;

  /**
   * Global permissions of the user.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GlobalPermission> permissions;

  static {
    // hack to force ProGuard to consider GlobalPermission used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GlobalPermission.class);
  }

  /**
   * URL of user's profile photo.
   *
   * Read-only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String photoUrl;

  /**
   * Represents whether a G Suite for Education user's domain administrator has explicitly verified
   * them as being a teacher. If the user is not a member of a G Suite for Education domain, than
   * this field will always be false.
   *
   * Read-only
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean verifiedTeacher;

  /**
   * Email address of the user.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getEmailAddress() {
    return emailAddress;
  }

  /**
   * Email address of the user.
   *
   * Read-only.
   * @param emailAddress emailAddress or {@code null} for none
   */
  public UserProfile setEmailAddress(java.lang.String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * Identifier of the user.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Identifier of the user.
   *
   * Read-only.
   * @param id id or {@code null} for none
   */
  public UserProfile setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Name of the user.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public Name getName() {
    return name;
  }

  /**
   * Name of the user.
   *
   * Read-only.
   * @param name name or {@code null} for none
   */
  public UserProfile setName(Name name) {
    this.name = name;
    return this;
  }

  /**
   * Global permissions of the user.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.util.List<GlobalPermission> getPermissions() {
    return permissions;
  }

  /**
   * Global permissions of the user.
   *
   * Read-only.
   * @param permissions permissions or {@code null} for none
   */
  public UserProfile setPermissions(java.util.List<GlobalPermission> permissions) {
    this.permissions = permissions;
    return this;
  }

  /**
   * URL of user's profile photo.
   *
   * Read-only.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhotoUrl() {
    return photoUrl;
  }

  /**
   * URL of user's profile photo.
   *
   * Read-only.
   * @param photoUrl photoUrl or {@code null} for none
   */
  public UserProfile setPhotoUrl(java.lang.String photoUrl) {
    this.photoUrl = photoUrl;
    return this;
  }

  /**
   * Represents whether a G Suite for Education user's domain administrator has explicitly verified
   * them as being a teacher. If the user is not a member of a G Suite for Education domain, than
   * this field will always be false.
   *
   * Read-only
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVerifiedTeacher() {
    return verifiedTeacher;
  }

  /**
   * Represents whether a G Suite for Education user's domain administrator has explicitly verified
   * them as being a teacher. If the user is not a member of a G Suite for Education domain, than
   * this field will always be false.
   *
   * Read-only
   * @param verifiedTeacher verifiedTeacher or {@code null} for none
   */
  public UserProfile setVerifiedTeacher(java.lang.Boolean verifiedTeacher) {
    this.verifiedTeacher = verifiedTeacher;
    return this;
  }

  @Override
  public UserProfile set(String fieldName, Object value) {
    return (UserProfile) super.set(fieldName, value);
  }

  @Override
  public UserProfile clone() {
    return (UserProfile) super.clone();
  }

}
