/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.container.model;

/**
 * UpgradeEvent is a notification sent to customers by the cluster server when a resource is
 * upgrading.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Kubernetes Engine API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UpgradeEvent extends com.google.api.client.json.GenericJson {

  /**
   * Required. The current version before the upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String currentVersion;

  /**
   * Required. The operation associated with this upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operation;

  /**
   * Required. The time when the operation was started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String operationStartTime;

  /**
   * Optional. Optional relative path to the resource. For example in node pool upgrades, the
   * relative path of the node pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resource;

  /**
   * Required. The resource type that is upgrading.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceType;

  /**
   * Required. The target version for the upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetVersion;

  /**
   * Required. The current version before the upgrade.
   * @return value or {@code null} for none
   */
  public java.lang.String getCurrentVersion() {
    return currentVersion;
  }

  /**
   * Required. The current version before the upgrade.
   * @param currentVersion currentVersion or {@code null} for none
   */
  public UpgradeEvent setCurrentVersion(java.lang.String currentVersion) {
    this.currentVersion = currentVersion;
    return this;
  }

  /**
   * Required. The operation associated with this upgrade.
   * @return value or {@code null} for none
   */
  public java.lang.String getOperation() {
    return operation;
  }

  /**
   * Required. The operation associated with this upgrade.
   * @param operation operation or {@code null} for none
   */
  public UpgradeEvent setOperation(java.lang.String operation) {
    this.operation = operation;
    return this;
  }

  /**
   * Required. The time when the operation was started.
   * @return value or {@code null} for none
   */
  public String getOperationStartTime() {
    return operationStartTime;
  }

  /**
   * Required. The time when the operation was started.
   * @param operationStartTime operationStartTime or {@code null} for none
   */
  public UpgradeEvent setOperationStartTime(String operationStartTime) {
    this.operationStartTime = operationStartTime;
    return this;
  }

  /**
   * Optional. Optional relative path to the resource. For example in node pool upgrades, the
   * relative path of the node pool.
   * @return value or {@code null} for none
   */
  public java.lang.String getResource() {
    return resource;
  }

  /**
   * Optional. Optional relative path to the resource. For example in node pool upgrades, the
   * relative path of the node pool.
   * @param resource resource or {@code null} for none
   */
  public UpgradeEvent setResource(java.lang.String resource) {
    this.resource = resource;
    return this;
  }

  /**
   * Required. The resource type that is upgrading.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceType() {
    return resourceType;
  }

  /**
   * Required. The resource type that is upgrading.
   * @param resourceType resourceType or {@code null} for none
   */
  public UpgradeEvent setResourceType(java.lang.String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Required. The target version for the upgrade.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetVersion() {
    return targetVersion;
  }

  /**
   * Required. The target version for the upgrade.
   * @param targetVersion targetVersion or {@code null} for none
   */
  public UpgradeEvent setTargetVersion(java.lang.String targetVersion) {
    this.targetVersion = targetVersion;
    return this;
  }

  @Override
  public UpgradeEvent set(String fieldName, Object value) {
    return (UpgradeEvent) super.set(fieldName, value);
  }

  @Override
  public UpgradeEvent clone() {
    return (UpgradeEvent) super.clone();
  }

}
