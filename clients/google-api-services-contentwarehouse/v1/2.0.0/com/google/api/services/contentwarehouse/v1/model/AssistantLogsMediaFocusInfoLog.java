/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The information related to Media Focus. TODO(b/138952173) Deprecate MediaFocusState in
 * logs/proto/majel_gws/media_action_triggering_info.proto and
 * assistant/verticals/media/proto/target_device_info.proto
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantLogsMediaFocusInfoLog extends com.google.api.client.json.GenericJson {

  /**
   * How long the device is in focus so far
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long currentFocusDurationSec;

  /**
   * TODO(b/134944092) Log MediaFocusDialogTrigger Enum in focus_status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean dialogTriggered;

  /**
   * LINT.ThenChange(//depot/google3/logs/proto/majel_gws/media_action_triggering_info.proto) The
   * focus device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantLogsDeviceInfoLog focusDevice;

  /**
   * The media focus state at the time of the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mediaFocusState;

  /**
   * The source device of media focus.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceDeviceId;

  /**
   * How long the device is in focus so far
   * @return value or {@code null} for none
   */
  public java.lang.Long getCurrentFocusDurationSec() {
    return currentFocusDurationSec;
  }

  /**
   * How long the device is in focus so far
   * @param currentFocusDurationSec currentFocusDurationSec or {@code null} for none
   */
  public AssistantLogsMediaFocusInfoLog setCurrentFocusDurationSec(java.lang.Long currentFocusDurationSec) {
    this.currentFocusDurationSec = currentFocusDurationSec;
    return this;
  }

  /**
   * TODO(b/134944092) Log MediaFocusDialogTrigger Enum in focus_status.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDialogTriggered() {
    return dialogTriggered;
  }

  /**
   * TODO(b/134944092) Log MediaFocusDialogTrigger Enum in focus_status.
   * @param dialogTriggered dialogTriggered or {@code null} for none
   */
  public AssistantLogsMediaFocusInfoLog setDialogTriggered(java.lang.Boolean dialogTriggered) {
    this.dialogTriggered = dialogTriggered;
    return this;
  }

  /**
   * LINT.ThenChange(//depot/google3/logs/proto/majel_gws/media_action_triggering_info.proto) The
   * focus device.
   * @return value or {@code null} for none
   */
  public AssistantLogsDeviceInfoLog getFocusDevice() {
    return focusDevice;
  }

  /**
   * LINT.ThenChange(//depot/google3/logs/proto/majel_gws/media_action_triggering_info.proto) The
   * focus device.
   * @param focusDevice focusDevice or {@code null} for none
   */
  public AssistantLogsMediaFocusInfoLog setFocusDevice(AssistantLogsDeviceInfoLog focusDevice) {
    this.focusDevice = focusDevice;
    return this;
  }

  /**
   * The media focus state at the time of the request.
   * @return value or {@code null} for none
   */
  public java.lang.String getMediaFocusState() {
    return mediaFocusState;
  }

  /**
   * The media focus state at the time of the request.
   * @param mediaFocusState mediaFocusState or {@code null} for none
   */
  public AssistantLogsMediaFocusInfoLog setMediaFocusState(java.lang.String mediaFocusState) {
    this.mediaFocusState = mediaFocusState;
    return this;
  }

  /**
   * The source device of media focus.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceDeviceId() {
    return sourceDeviceId;
  }

  /**
   * The source device of media focus.
   * @param sourceDeviceId sourceDeviceId or {@code null} for none
   */
  public AssistantLogsMediaFocusInfoLog setSourceDeviceId(java.lang.String sourceDeviceId) {
    this.sourceDeviceId = sourceDeviceId;
    return this;
  }

  @Override
  public AssistantLogsMediaFocusInfoLog set(String fieldName, Object value) {
    return (AssistantLogsMediaFocusInfoLog) super.set(fieldName, value);
  }

  @Override
  public AssistantLogsMediaFocusInfoLog clone() {
    return (AssistantLogsMediaFocusInfoLog) super.clone();
  }

}
