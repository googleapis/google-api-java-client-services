/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v2.model;

/**
 * A provisioning configuration.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Bare Metal Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ProvisioningConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. URI to Cloud Console UI view of this provisioning config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cloudConsoleUri;

  /**
   * Optional. Email provided to send a confirmation with provisioning config to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String email;

  /**
   * A service account to enable customers to access instance credentials upon handover.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String handoverServiceAccount;

  /**
   * Instances to be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<InstanceConfig> instances;

  static {
    // hack to force ProGuard to consider InstanceConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(InstanceConfig.class);
  }

  /**
   * Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI
   * transition period.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * Output only. The name of the provisioning config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Networks to be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NetworkConfig> networks;

  static {
    // hack to force ProGuard to consider NetworkConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(NetworkConfig.class);
  }

  /**
   * Output only. State of ProvisioningConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * A generated buganizer id to track provisioning request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ticketId;

  /**
   * Output only. Last update timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Volumes to be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VolumeConfig> volumes;

  /**
   * Output only. URI to Cloud Console UI view of this provisioning config.
   * @return value or {@code null} for none
   */
  public java.lang.String getCloudConsoleUri() {
    return cloudConsoleUri;
  }

  /**
   * Output only. URI to Cloud Console UI view of this provisioning config.
   * @param cloudConsoleUri cloudConsoleUri or {@code null} for none
   */
  public ProvisioningConfig setCloudConsoleUri(java.lang.String cloudConsoleUri) {
    this.cloudConsoleUri = cloudConsoleUri;
    return this;
  }

  /**
   * Optional. Email provided to send a confirmation with provisioning config to.
   * @return value or {@code null} for none
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Optional. Email provided to send a confirmation with provisioning config to.
   * @param email email or {@code null} for none
   */
  public ProvisioningConfig setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  /**
   * A service account to enable customers to access instance credentials upon handover.
   * @return value or {@code null} for none
   */
  public java.lang.String getHandoverServiceAccount() {
    return handoverServiceAccount;
  }

  /**
   * A service account to enable customers to access instance credentials upon handover.
   * @param handoverServiceAccount handoverServiceAccount or {@code null} for none
   */
  public ProvisioningConfig setHandoverServiceAccount(java.lang.String handoverServiceAccount) {
    this.handoverServiceAccount = handoverServiceAccount;
    return this;
  }

  /**
   * Instances to be created.
   * @return value or {@code null} for none
   */
  public java.util.List<InstanceConfig> getInstances() {
    return instances;
  }

  /**
   * Instances to be created.
   * @param instances instances or {@code null} for none
   */
  public ProvisioningConfig setInstances(java.util.List<InstanceConfig> instances) {
    this.instances = instances;
    return this;
  }

  /**
   * Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI
   * transition period.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI
   * transition period.
   * @param location location or {@code null} for none
   */
  public ProvisioningConfig setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * Output only. The name of the provisioning config.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The name of the provisioning config.
   * @param name name or {@code null} for none
   */
  public ProvisioningConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Networks to be created.
   * @return value or {@code null} for none
   */
  public java.util.List<NetworkConfig> getNetworks() {
    return networks;
  }

  /**
   * Networks to be created.
   * @param networks networks or {@code null} for none
   */
  public ProvisioningConfig setNetworks(java.util.List<NetworkConfig> networks) {
    this.networks = networks;
    return this;
  }

  /**
   * Output only. State of ProvisioningConfig.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. State of ProvisioningConfig.
   * @param state state or {@code null} for none
   */
  public ProvisioningConfig setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * A generated buganizer id to track provisioning request.
   * @return value or {@code null} for none
   */
  public java.lang.String getTicketId() {
    return ticketId;
  }

  /**
   * A generated buganizer id to track provisioning request.
   * @param ticketId ticketId or {@code null} for none
   */
  public ProvisioningConfig setTicketId(java.lang.String ticketId) {
    this.ticketId = ticketId;
    return this;
  }

  /**
   * Output only. Last update timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Last update timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public ProvisioningConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Volumes to be created.
   * @return value or {@code null} for none
   */
  public java.util.List<VolumeConfig> getVolumes() {
    return volumes;
  }

  /**
   * Volumes to be created.
   * @param volumes volumes or {@code null} for none
   */
  public ProvisioningConfig setVolumes(java.util.List<VolumeConfig> volumes) {
    this.volumes = volumes;
    return this;
  }

  @Override
  public ProvisioningConfig set(String fieldName, Object value) {
    return (ProvisioningConfig) super.set(fieldName, value);
  }

  @Override
  public ProvisioningConfig clone() {
    return (ProvisioningConfig) super.clone();
  }

}
