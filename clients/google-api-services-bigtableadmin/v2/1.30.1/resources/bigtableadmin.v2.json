{
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "CreateClusterRequest": {
      "description": "Request message for BigtableInstanceAdmin.CreateCluster.",
      "type": "object",
      "properties": {
        "cluster": {
          "description": "The cluster to be created.\nFields marked `OutputOnly` must be left blank.",
          "$ref": "Cluster"
        },
        "parent": {
          "description": "The unique name of the instance in which to create the new cluster.\nValues are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e`.",
          "type": "string"
        },
        "clusterId": {
          "description": "The ID to be used when referring to the new cluster within its instance,\ne.g., just `mycluster` rather than\n`projects/myproject/instances/myinstance/clusters/mycluster`.",
          "type": "string"
        }
      },
      "id": "CreateClusterRequest"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\"."
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "id": "Location"
    },
    "PartialUpdateInstanceRequest": {
      "id": "PartialUpdateInstanceRequest",
      "description": "Request message for BigtableInstanceAdmin.PartialUpdateInstance.",
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "The subset of Instance fields which should be replaced.\nMust be explicitly set.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "instance": {
          "$ref": "Instance",
          "description": "The Instance which will (partially) replace the current value."
        }
      }
    },
    "ClusterState": {
      "type": "object",
      "properties": {
        "replicationState": {
          "type": "string",
          "enumDescriptions": [
            "The replication state of the table is unknown in this cluster.",
            "The cluster was recently created, and the table must finish copying\nover pre-existing data from other clusters before it can begin\nreceiving live replication updates and serving Data API requests.",
            "The table is temporarily unable to serve Data API requests from this\ncluster due to planned internal maintenance.",
            "The table is temporarily unable to serve Data API requests from this\ncluster due to unplanned or emergency maintenance.",
            "The table can serve Data API requests from this cluster. Depending on\nreplication delay, reads may not immediately reflect the state of the\ntable in other clusters."
          ],
          "enum": [
            "STATE_NOT_KNOWN",
            "INITIALIZING",
            "PLANNED_MAINTENANCE",
            "UNPLANNED_MAINTENANCE",
            "READY"
          ],
          "description": "Output only. The state of replication for the table in this cluster."
        }
      },
      "id": "ClusterState",
      "description": "The state of a table's data in a particular cluster."
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateAppProfileMetadata": {
      "description": "The metadata for the Operation returned by UpdateAppProfile.",
      "type": "object",
      "properties": {},
      "id": "UpdateAppProfileMetadata"
    },
    "Split": {
      "type": "object",
      "properties": {
        "key": {
          "description": "Row key to use as an initial tablet boundary.",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "Split",
      "description": "An initial split point for a newly created table."
    },
    "AuditConfig": {
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        }
      },
      "id": "AuditConfig"
    },
    "CreateInstanceMetadata": {
      "description": "The metadata for the Operation returned by CreateInstance.",
      "type": "object",
      "properties": {
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "originalRequest": {
          "description": "The request that prompted the initiation of this CreateInstance operation.",
          "$ref": "CreateInstanceRequest"
        },
        "requestTime": {
          "type": "string",
          "description": "The time at which the original request was received.",
          "format": "google-datetime"
        }
      },
      "id": "CreateInstanceMetadata"
    },
    "ColumnFamily": {
      "id": "ColumnFamily",
      "description": "A set of columns within a table which share a common configuration.",
      "type": "object",
      "properties": {
        "gcRule": {
          "$ref": "GcRule",
          "description": "Garbage collection rule specified as a protobuf.\nMust serialize to at most 500 bytes.\n\nNOTE: Garbage collection executes opportunistically in the background, and\nso it's possible for reads to return a cell even if it matches the active\nGC expression for its family."
        }
      }
    },
    "CreateClusterMetadata": {
      "description": "The metadata for the Operation returned by CreateCluster.",
      "type": "object",
      "properties": {
        "originalRequest": {
          "$ref": "CreateClusterRequest",
          "description": "The request that prompted the initiation of this CreateCluster operation."
        },
        "requestTime": {
          "description": "The time at which the original request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "tables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "TableProgress"
          },
          "description": "Keys: the full `name` of each table that existed in the instance when\nCreateCluster was first called, i.e.\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/tables/\u003ctable\u003e`. Any table added\nto the instance by a later API call will be created in the new cluster by\nthat API call, not this one.\n\nValues: information on how much of a table's data has been copied to the\nnewly-created cluster so far."
        },
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "CreateClusterMetadata"
    },
    "Expr": {
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) \u003e 0\"",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression."
        },
        "location": {
          "type": "string",
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file."
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported."
        }
      },
      "id": "Expr"
    },
    "GetPolicyOptions": {
      "id": "GetPolicyOptions",
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "type": "object",
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cluster": {
      "description": "A resizable group of nodes in a particular cloud location, capable\nof serving all Tables in the parent\nInstance.",
      "type": "object",
      "properties": {
        "serveNodes": {
          "type": "integer",
          "description": "The number of nodes allocated to this cluster. More nodes enable higher\nthroughput and more consistent performance.",
          "format": "int32"
        },
        "defaultStorageType": {
          "enumDescriptions": [
            "The user did not specify a storage type.",
            "Flash (SSD) storage should be used.",
            "Magnetic drive (HDD) storage should be used."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "(`CreationOnly`)\nThe type of storage used by this cluster to serve its\nparent instance's tables, unless explicitly overridden.",
          "type": "string"
        },
        "location": {
          "description": "(`CreationOnly`)\nThe location where this cluster's nodes and storage reside. For best\nperformance, clients should be located as close as possible to this\ncluster. Currently only zones are supported, so values should be of the\nform `projects/\u003cproject\u003e/locations/\u003czone\u003e`.",
          "type": "string"
        },
        "state": {
          "description": "(`OutputOnly`)\nThe current state of the cluster.",
          "type": "string",
          "enumDescriptions": [
            "The state of the cluster could not be determined.",
            "The cluster has been successfully created and is ready to serve requests.",
            "The cluster is currently being created, and may be destroyed\nif the creation process encounters an error.\nA cluster may not be able to serve requests while being created.",
            "The cluster is currently being resized, and may revert to its previous\nnode count if the process encounters an error.\nA cluster is still capable of serving requests while being resized,\nbut may exhibit performance as if its number of allocated nodes is\nbetween the starting and requested states.",
            "The cluster has no backing nodes. The data (tables) still\nexist, but no operations can be performed on the cluster."
          ],
          "enum": [
            "STATE_NOT_KNOWN",
            "READY",
            "CREATING",
            "RESIZING",
            "DISABLED"
          ]
        },
        "name": {
          "description": "(`OutputOnly`)\nThe unique name of the cluster. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/clusters/a-z*`.",
          "type": "string"
        }
      },
      "id": "Cluster"
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method."
    },
    "GetIamPolicyRequest": {
      "id": "GetIamPolicyRequest",
      "description": "Request message for `GetIamPolicy` method.",
      "type": "object",
      "properties": {
        "options": {
          "$ref": "GetPolicyOptions",
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to\n`GetIamPolicy`. This field is only used by Cloud IAM."
        }
      }
    },
    "ModifyColumnFamiliesRequest": {
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies",
      "type": "object",
      "properties": {
        "modifications": {
          "description": "Modifications to be atomically applied to the specified table's families.\nEntries are applied in order, meaning that earlier modifications can be\nmasked by later ones (in the case of repeated updates to the same family,\nfor example).",
          "type": "array",
          "items": {
            "$ref": "Modification"
          }
        }
      },
      "id": "ModifyColumnFamiliesRequest"
    },
    "SingleClusterRouting": {
      "id": "SingleClusterRouting",
      "description": "Unconditionally routes all read/write requests to a specific cluster.\nThis option preserves read-your-writes consistency but does not improve\navailability.",
      "type": "object",
      "properties": {
        "allowTransactionalWrites": {
          "description": "Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are\nallowed by this app profile. It is unsafe to send these requests to\nthe same table/row/column in multiple clusters.",
          "type": "boolean"
        },
        "clusterId": {
          "description": "The cluster to which read/write requests should be routed.",
          "type": "string"
        }
      }
    },
    "MultiClusterRoutingUseAny": {
      "type": "object",
      "properties": {},
      "id": "MultiClusterRoutingUseAny",
      "description": "Read/write requests are routed to the nearest cluster in the instance, and\nwill fail over to the nearest cluster that is available in the event of\ntransient errors or delays. Clusters in a region are considered\nequidistant. Choosing this option sacrifices read-your-writes consistency\nto improve availability."
    },
    "GcRule": {
      "id": "GcRule",
      "description": "Rule for determining which cells to delete during garbage collection.",
      "type": "object",
      "properties": {
        "intersection": {
          "description": "Delete cells that would be deleted by every nested rule.",
          "$ref": "Intersection"
        },
        "union": {
          "$ref": "Union",
          "description": "Delete cells that would be deleted by any nested rule."
        },
        "maxNumVersions": {
          "type": "integer",
          "description": "Delete all cells in a column except the most recent N.",
          "format": "int32"
        },
        "maxAge": {
          "description": "Delete cells in a column older than the given age.\nValues must be at least one millisecond, and will be truncated to\nmicrosecond granularity.",
          "format": "google-duration",
          "type": "string"
        }
      }
    },
    "ListInstancesResponse": {
      "description": "Response message for BigtableInstanceAdmin.ListInstances.",
      "type": "object",
      "properties": {
        "instances": {
          "description": "The list of requested instances.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        },
        "failedLocations": {
          "description": "Locations from which Instance information could not be retrieved,\ndue to an outage or some other transient condition.\nInstances whose Clusters are all in one of the failed locations\nmay be missing from `instances`, and Instances with at least one\nCluster in a failed location may only have partial information returned.\nValues are of the form `projects/\u003cproject\u003e/locations/\u003czone_id\u003e`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "DEPRECATED: This field is unused and ignored."
        }
      },
      "id": "ListInstancesResponse"
    },
    "Modification": {
      "description": "A create, update, or delete of a particular column family.",
      "type": "object",
      "properties": {
        "create": {
          "$ref": "ColumnFamily",
          "description": "Create a new column family with the specified schema, or fail if\none already exists with the given ID."
        },
        "drop": {
          "description": "Drop (delete) the column family with the given ID, or fail if no such\nfamily exists.",
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the column family to be modified.",
          "type": "string"
        },
        "update": {
          "description": "Update an existing column family to the specified schema, or fail\nif no column family exists with the given ID.",
          "$ref": "ColumnFamily"
        }
      },
      "id": "Modification"
    },
    "CheckConsistencyRequest": {
      "type": "object",
      "properties": {
        "consistencyToken": {
          "description": "The token created using GenerateConsistencyToken for the Table.",
          "type": "string"
        }
      },
      "id": "CheckConsistencyRequest",
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency"
    },
    "CreateTableRequest": {
      "id": "CreateTableRequest",
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.CreateTable",
      "type": "object",
      "properties": {
        "table": {
          "$ref": "Table",
          "description": "The Table to create."
        },
        "tableId": {
          "description": "The name by which the new table should be referred to within the parent\ninstance, e.g., `foobar` rather than `\u003cparent\u003e/tables/foobar`.\nMaximum 50 characters.",
          "type": "string"
        },
        "initialSplits": {
          "description": "The optional list of row keys that will be used to initially split the\ntable into several tablets (tablets are similar to HBase regions).\nGiven two split keys, `s1` and `s2`, three tablets will be created,\nspanning the key ranges: `[, s1), [s1, s2), [s2, )`.\n\nExample:\n\n* Row keys := `[\"a\", \"apple\", \"custom\", \"customer_1\", \"customer_2\",`\n               `\"other\", \"zz\"]`\n* initial_split_keys := `[\"apple\", \"customer_1\", \"customer_2\", \"other\"]`\n* Key assignment:\n    - Tablet 1 `[, apple)                =\u003e {\"a\"}.`\n    - Tablet 2 `[apple, customer_1)      =\u003e {\"apple\", \"custom\"}.`\n    - Tablet 3 `[customer_1, customer_2) =\u003e {\"customer_1\"}.`\n    - Tablet 4 `[customer_2, other)      =\u003e {\"customer_2\"}.`\n    - Tablet 5 `[other, )                =\u003e {\"other\", \"zz\"}.`",
          "type": "array",
          "items": {
            "$ref": "Split"
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "TableProgress": {
      "description": "Progress info for copying a table's data to the new cluster.",
      "type": "object",
      "properties": {
        "estimatedCopiedBytes": {
          "description": "Estimate of the number of bytes copied so far for this table.\nThis will eventually reach 'estimated_size_bytes' unless the table copy\nis CANCELLED.",
          "format": "int64",
          "type": "string"
        },
        "estimatedSizeBytes": {
          "type": "string",
          "description": "Estimate of the size of the table to be copied.",
          "format": "int64"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "",
            "The table has not yet begun copying to the new cluster.",
            "The table is actively being copied to the new cluster.",
            "The table has been fully copied to the new cluster.",
            "The table was deleted before it finished copying to the new cluster.\nNote that tables deleted after completion will stay marked as\nCOMPLETED, not CANCELLED."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "COPYING",
            "COMPLETED",
            "CANCELLED"
          ]
        }
      },
      "id": "TableProgress"
    },
    "CreateInstanceRequest": {
      "id": "CreateInstanceRequest",
      "description": "Request message for BigtableInstanceAdmin.CreateInstance.",
      "type": "object",
      "properties": {
        "instance": {
          "$ref": "Instance",
          "description": "The instance to create.\nFields marked `OutputOnly` must be left blank."
        },
        "parent": {
          "description": "The unique name of the project in which to create the new instance.\nValues are of the form `projects/\u003cproject\u003e`.",
          "type": "string"
        },
        "instanceId": {
          "description": "The ID to be used when referring to the new instance within its project,\ne.g., just `myinstance` rather than\n`projects/myproject/instances/myinstance`.",
          "type": "string"
        },
        "clusters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "Cluster"
          },
          "description": "The clusters to be created within the instance, mapped by desired\ncluster ID, e.g., just `mycluster` rather than\n`projects/myproject/instances/myinstance/clusters/mycluster`.\nFields marked `OutputOnly` must be left blank.\nCurrently, at most two clusters can be specified."
        }
      }
    },
    "CheckConsistencyResponse": {
      "id": "CheckConsistencyResponse",
      "description": "Response message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency",
      "type": "object",
      "properties": {
        "consistent": {
          "description": "True only if the token is consistent. A token is consistent if replication\nhas caught up with the restrictions specified in the request.",
          "type": "boolean"
        }
      }
    },
    "Table": {
      "description": "A collection of user data indexed by row, column, and timestamp.\nEach table is served using the resources of its parent cluster.",
      "type": "object",
      "properties": {
        "granularity": {
          "enumDescriptions": [
            "The user did not specify a granularity. Should not be returned.\nWhen specified during table creation, MILLIS will be used.",
            "The table keeps data versioned at a granularity of 1ms."
          ],
          "enum": [
            "TIMESTAMP_GRANULARITY_UNSPECIFIED",
            "MILLIS"
          ],
          "description": "(`CreationOnly`)\nThe granularity (i.e. `MILLIS`) at which timestamps are stored in\nthis table. Timestamps not matching the granularity will be rejected.\nIf unspecified at creation time, the value will be set to `MILLIS`.\nViews: `SCHEMA_VIEW`, `FULL`.",
          "type": "string"
        },
        "columnFamilies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "ColumnFamily"
          },
          "description": "(`CreationOnly`)\nThe column families configured for this table, mapped by column family ID.\nViews: `SCHEMA_VIEW`, `FULL`"
        },
        "name": {
          "description": "Output only. The unique name of the table. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/tables/_a-zA-Z0-9*`.\nViews: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`",
          "type": "string"
        },
        "clusterStates": {
          "additionalProperties": {
            "$ref": "ClusterState"
          },
          "description": "Output only. Map from cluster ID to per-cluster table state.\nIf it could not be determined whether or not the table has data in a\nparticular cluster (for example, if its zone is unavailable), then\nthere will be an entry for the cluster with UNKNOWN `replication_status`.\nViews: `REPLICATION_VIEW`, `FULL`",
          "type": "object"
        }
      },
      "id": "Table"
    },
    "AuditLogConfig": {
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging."
    },
    "Policy": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten.",
          "format": "byte"
        },
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nPolicies with any conditional bindings must specify version 3. Policies\nwithout any conditional bindings may specify any valid value or leave the\nfield unset.",
          "format": "int32",
          "type": "integer"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        }
      },
      "id": "Policy",
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-other-app@appspot.gserviceaccount.com\n      role: roles/owner\n    - members:\n      - user:sean@example.com\n      role: roles/viewer\n\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam/docs)."
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse"
    },
    "Intersection": {
      "id": "Intersection",
      "description": "A GcRule which deletes cells matching all of the given rules.",
      "type": "object",
      "properties": {
        "rules": {
          "description": "Only delete cells which would be deleted by every element of `rules`.",
          "type": "array",
          "items": {
            "$ref": "GcRule"
          }
        }
      }
    },
    "Union": {
      "type": "object",
      "properties": {
        "rules": {
          "description": "Delete cells which would be deleted by any element of `rules`.",
          "type": "array",
          "items": {
            "$ref": "GcRule"
          }
        }
      },
      "id": "Union",
      "description": "A GcRule which deletes cells matching any of the given rules."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "id": "Operation"
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GenerateConsistencyTokenRequest": {
      "id": "GenerateConsistencyTokenRequest",
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken",
      "type": "object",
      "properties": {}
    },
    "Binding": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n"
        },
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."
        }
      },
      "id": "Binding",
      "description": "Associates `members` with a `role`."
    },
    "UpdateInstanceMetadata": {
      "description": "The metadata for the Operation returned by UpdateInstance.",
      "type": "object",
      "properties": {
        "originalRequest": {
          "$ref": "PartialUpdateInstanceRequest",
          "description": "The request that prompted the initiation of this UpdateInstance operation."
        },
        "requestTime": {
          "description": "The time at which the original request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "finishTime": {
          "type": "string",
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime"
        }
      },
      "id": "UpdateInstanceMetadata"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "id": "ListOperationsResponse"
    },
    "ListAppProfilesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Set if not all app profiles could be returned in a single response.\nPass this value to `page_token` in another request to get the next\npage of results.",
          "type": "string"
        },
        "failedLocations": {
          "description": "Locations from which AppProfile information could not be retrieved,\ndue to an outage or some other transient condition.\nAppProfiles from these locations may be missing from `app_profiles`.\nValues are of the form `projects/\u003cproject\u003e/locations/\u003czone_id\u003e`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appProfiles": {
          "description": "The list of requested app profiles.",
          "type": "array",
          "items": {
            "$ref": "AppProfile"
          }
        }
      },
      "id": "ListAppProfilesResponse",
      "description": "Response message for BigtableInstanceAdmin.ListAppProfiles."
    },
    "ListClustersResponse": {
      "type": "object",
      "properties": {
        "clusters": {
          "description": "The list of requested clusters.",
          "type": "array",
          "items": {
            "$ref": "Cluster"
          }
        },
        "failedLocations": {
          "description": "Locations from which Cluster information could not be retrieved,\ndue to an outage or some other transient condition.\nClusters from these locations may be missing from `clusters`,\nor may only have partial information returned.\nValues are of the form `projects/\u003cproject\u003e/locations/\u003czone_id\u003e`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "DEPRECATED: This field is unused and ignored."
        }
      },
      "id": "ListClustersResponse",
      "description": "Response message for BigtableInstanceAdmin.ListClusters."
    },
    "DropRowRangeRequest": {
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.DropRowRange",
      "type": "object",
      "properties": {
        "deleteAllDataFromTable": {
          "description": "Delete all rows in the table. Setting this to false is a no-op.",
          "type": "boolean"
        },
        "rowKeyPrefix": {
          "description": "Delete all rows that start with this row key prefix. Prefix cannot be\nzero length.",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "DropRowRangeRequest"
    },
    "AppProfile": {
      "id": "AppProfile",
      "description": "A configuration object describing how Cloud Bigtable should treat traffic\nfrom a particular end user application.",
      "type": "object",
      "properties": {
        "name": {
          "description": "(`OutputOnly`)\nThe unique name of the app profile. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/appProfiles/_a-zA-Z0-9*`.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional long form description of the use case for this AppProfile."
        },
        "etag": {
          "description": "Strongly validated etag for optimistic concurrency control. Preserve the\nvalue returned from `GetAppProfile` when calling `UpdateAppProfile` to\nfail the request if there has been a modification in the mean time. The\n`update_mask` of the request need not include `etag` for this protection\nto apply.\nSee [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and\n[RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more\ndetails.",
          "type": "string"
        },
        "singleClusterRouting": {
          "$ref": "SingleClusterRouting",
          "description": "Use a single-cluster routing policy."
        },
        "multiClusterRoutingUseAny": {
          "$ref": "MultiClusterRoutingUseAny",
          "description": "Use a multi-cluster routing policy."
        }
      }
    },
    "GenerateConsistencyTokenResponse": {
      "description": "Response message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken",
      "type": "object",
      "properties": {
        "consistencyToken": {
          "description": "The generated consistency token.",
          "type": "string"
        }
      },
      "id": "GenerateConsistencyTokenResponse"
    },
    "Instance": {
      "description": "A collection of Bigtable Tables and\nthe resources that serve them.\nAll tables in an instance are served from all\nClusters in the instance.",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "PRODUCTION",
            "DEVELOPMENT"
          ],
          "description": "The type of the instance. Defaults to `PRODUCTION`.",
          "type": "string",
          "enumDescriptions": [
            "The type of the instance is unspecified. If set when creating an\ninstance, a `PRODUCTION` instance will be created. If set when updating\nan instance, the type will be left unchanged.",
            "An instance meant for production use. `serve_nodes` must be set\non the cluster.",
            "The instance is meant for development and testing purposes only; it has\nno performance or uptime guarantees and is not covered by SLA.\nAfter a development instance is created, it can be upgraded by\nupdating the instance to type `PRODUCTION`. An instance created\nas a production instance cannot be changed to a development instance.\nWhen creating a development instance, `serve_nodes` on the cluster must\nnot be set."
          ]
        },
        "labels": {
          "description": "Labels are a flexible and lightweight mechanism for organizing cloud\nresources into groups that reflect a customer's organizational needs and\ndeployment strategies. They can be used to filter resources and aggregate\nmetrics.\n\n* Label keys must be between 1 and 63 characters long and must conform to\n  the regular expression: `\\p{Ll}\\p{Lo}{0,62}`.\n* Label values must be between 0 and 63 characters long and must conform to\n  the regular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`.\n* No more than 64 labels can be associated with a given resource.\n* Keys and values must both be under 128 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The state of the instance could not be determined.",
            "The instance has been successfully created and can serve requests\nto its tables.",
            "The instance is currently being created, and may be destroyed\nif the creation process encounters an error."
          ],
          "enum": [
            "STATE_NOT_KNOWN",
            "READY",
            "CREATING"
          ],
          "description": "(`OutputOnly`)\nThe current state of the instance."
        },
        "name": {
          "type": "string",
          "description": "(`OutputOnly`)\nThe unique name of the instance. Values are of the form\n`projects/\u003cproject\u003e/instances/a-z+[a-z0-9]`."
        },
        "displayName": {
          "type": "string",
          "description": "The descriptive name for this instance as it appears in UIs.\nCan be changed at any time, but should be kept globally unique\nto avoid confusion."
        }
      },
      "id": "Instance"
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        }
      },
      "id": "SetIamPolicyRequest"
    },
    "ListTablesResponse": {
      "description": "Response message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.ListTables",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Set if not all tables could be returned in a single response.\nPass this value to `page_token` in another request to get the next\npage of results.",
          "type": "string"
        },
        "tables": {
          "description": "The tables present in the requested instance.",
          "type": "array",
          "items": {
            "$ref": "Table"
          }
        }
      },
      "id": "ListTablesResponse"
    },
    "UpdateClusterMetadata": {
      "type": "object",
      "properties": {
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "originalRequest": {
          "$ref": "Cluster",
          "description": "The request that prompted the initiation of this UpdateCluster operation."
        },
        "requestTime": {
          "description": "The time at which the original request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "UpdateClusterMetadata",
      "description": "The metadata for the Operation returned by UpdateCluster."
    }
  },
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "canonicalName": "Bigtable Admin",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/bigtable.admin.table": {
          "description": "Administer your Cloud Bigtable tables"
        },
        "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster": {
          "description": "Administer your Cloud Bigtable clusters"
        },
        "https://www.googleapis.com/auth/bigtable.admin.instance": {
          "description": "Administer your Cloud Bigtable clusters"
        },
        "https://www.googleapis.com/auth/cloud-bigtable.admin.table": {
          "description": "Administer your Cloud Bigtable tables"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/bigtable.admin": {
          "description": "Administer your Cloud Bigtable tables and clusters"
        },
        "https://www.googleapis.com/auth/bigtable.admin.cluster": {
          "description": "Administer your Cloud Bigtable clusters"
        },
        "https://www.googleapis.com/auth/cloud-bigtable.admin": {
          "description": "Administer your Cloud Bigtable tables and clusters"
        }
      }
    }
  },
  "rootUrl": "https://bigtableadmin.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "bigtableadmin",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Bigtable Admin API",
  "ownerName": "Google",
  "resources": {
    "operations": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^operations/.+$",
              "location": "path",
              "description": "The name of the operation resource."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/bigtable.admin",
            "https://www.googleapis.com/auth/bigtable.admin.cluster",
            "https://www.googleapis.com/auth/bigtable.admin.instance",
            "https://www.googleapis.com/auth/cloud-bigtable.admin",
            "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "flatPath": "v2/operations/{operationsId}",
          "path": "v2/{+name}",
          "id": "bigtableadmin.operations.get",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
        },
        "cancel": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/bigtable.admin",
            "https://www.googleapis.com/auth/bigtable.admin.cluster",
            "https://www.googleapis.com/auth/bigtable.admin.instance",
            "https://www.googleapis.com/auth/cloud-bigtable.admin",
            "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "description": "The name of the operation resource to be cancelled.",
              "required": true,
              "type": "string",
              "pattern": "^operations/.+$"
            }
          },
          "flatPath": "v2/operations/{operationsId}:cancel",
          "path": "v2/{+name}:cancel",
          "id": "bigtableadmin.operations.cancel",
          "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`."
        },
        "delete": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^operations/.+$",
              "location": "path",
              "description": "The name of the operation resource to be deleted."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/bigtable.admin",
            "https://www.googleapis.com/auth/bigtable.admin.cluster",
            "https://www.googleapis.com/auth/bigtable.admin.instance",
            "https://www.googleapis.com/auth/cloud-bigtable.admin",
            "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2/operations/{operationsId}",
          "path": "v2/{+name}",
          "id": "bigtableadmin.operations.delete",
          "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`."
        }
      },
      "resources": {
        "projects": {
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^operations/projects/.+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The standard list page size.",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v2/operations/projects/{projectsId}/operations",
                  "id": "bigtableadmin.operations.projects.operations.list",
                  "path": "v2/{+name}/operations"
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "instances": {
          "methods": {
            "get": {
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "path": "v2/{+name}",
              "id": "bigtableadmin.projects.instances.get",
              "description": "Gets information about an instance.",
              "response": {
                "$ref": "Instance"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "location": "path",
                  "description": "The unique name of the requested instance. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e`."
                }
              }
            },
            "update": {
              "httpMethod": "PUT",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Instance"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "location": "path",
                  "description": "(`OutputOnly`)\nThe unique name of the instance. Values are of the form\n`projects/\u003cproject\u003e/instances/a-z+[a-z0-9]`."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "id": "bigtableadmin.projects.instances.update",
              "path": "v2/{+name}",
              "description": "Updates an instance within a project. This method updates only the display\nname and type for an Instance. To update other Instance properties, such as\nlabels, use PartialUpdateInstance.",
              "request": {
                "$ref": "Instance"
              }
            },
            "testIamPermissions": {
              "path": "v2/{+resource}:testIamPermissions",
              "id": "bigtableadmin.projects.instances.testIamPermissions",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "description": "Returns permissions that the caller has on the specified instance resource.",
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}:testIamPermissions"
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The unique name of the instance to be deleted.\nValues are of the form `projects/\u003cproject\u003e/instances/\u003cinstance\u003e`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/instances/[^/]+$"
                }
              },
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "path": "v2/{+name}",
              "id": "bigtableadmin.projects.instances.delete",
              "description": "Delete an instance from a project."
            },
            "list": {
              "flatPath": "v2/projects/{projectsId}/instances",
              "path": "v2/{+parent}/instances",
              "id": "bigtableadmin.projects.instances.list",
              "description": "Lists information about instances in a project.",
              "response": {
                "$ref": "ListInstancesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "DEPRECATED: This field is unused and ignored.",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The unique name of the project for which a list of instances is requested.\nValues are of the form `projects/\u003cproject\u003e`."
                }
              }
            },
            "setIamPolicy": {
              "description": "Sets the access control policy on an instance resource. Replaces any\nexisting policy.",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}:setIamPolicy",
              "path": "v2/{+resource}:setIamPolicy",
              "id": "bigtableadmin.projects.instances.setIamPolicy"
            },
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The unique name of the project in which to create the new instance.\nValues are of the form `projects/\u003cproject\u003e`."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/instances",
              "id": "bigtableadmin.projects.instances.create",
              "path": "v2/{+parent}/instances",
              "description": "Create an instance within a project.",
              "request": {
                "$ref": "CreateInstanceRequest"
              }
            },
            "partialUpdateInstance": {
              "id": "bigtableadmin.projects.instances.partialUpdateInstance",
              "path": "v2/{+name}",
              "description": "Partially updates an instance within a project. This method can modify all\nfields of an Instance and is the preferred way to update an Instance.",
              "request": {
                "$ref": "Instance"
              },
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "location": "path",
                  "description": "(`OutputOnly`)\nThe unique name of the instance. Values are of the form\n`projects/\u003cproject\u003e/instances/a-z+[a-z0-9]`."
                },
                "updateMask": {
                  "location": "query",
                  "description": "The subset of Instance fields which should be replaced.\nMust be explicitly set.",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}"
            },
            "getIamPolicy": {
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "resource": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field."
                }
              },
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}:getIamPolicy",
              "path": "v2/{+resource}:getIamPolicy",
              "id": "bigtableadmin.projects.instances.getIamPolicy",
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "description": "Gets the access control policy for an instance resource. Returns an empty\npolicy if an instance exists but does not have a policy set."
            }
          },
          "resources": {
            "clusters": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the cluster to be deleted. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/clusters/\u003ccluster\u003e`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "id": "bigtableadmin.projects.instances.clusters.delete",
                  "path": "v2/{+name}",
                  "description": "Deletes a cluster from an instance."
                },
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the requested cluster. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/clusters/\u003ccluster\u003e`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "path": "v2/{+name}",
                  "id": "bigtableadmin.projects.instances.clusters.get",
                  "description": "Gets information about a cluster.",
                  "response": {
                    "$ref": "Cluster"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "list": {
                  "description": "Lists information about clusters in an instance.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListClustersResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the instance for which a list of clusters is requested.\nValues are of the form `projects/\u003cproject\u003e/instances/\u003cinstance\u003e`.\nUse `\u003cinstance\u003e = '-'` to list Clusters for all Instances in a project,\ne.g., `projects/myproject/instances/-`.",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "DEPRECATED: This field is unused and ignored."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters",
                  "id": "bigtableadmin.projects.instances.clusters.list",
                  "path": "v2/{+parent}/clusters"
                },
                "update": {
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "path": "v2/{+name}",
                  "id": "bigtableadmin.projects.instances.clusters.update",
                  "request": {
                    "$ref": "Cluster"
                  },
                  "description": "Updates a cluster within an instance.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PUT",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$",
                      "location": "path",
                      "description": "(`OutputOnly`)\nThe unique name of the cluster. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/clusters/a-z*`."
                    }
                  }
                },
                "create": {
                  "description": "Creates a cluster within an instance.",
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the instance in which to create the new cluster.\nValues are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e`."
                    },
                    "clusterId": {
                      "location": "query",
                      "description": "The ID to be used when referring to the new cluster within its instance,\ne.g., just `mycluster` rather than\n`projects/myproject/instances/myinstance/clusters/mycluster`.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters",
                  "path": "v2/{+parent}/clusters",
                  "id": "bigtableadmin.projects.instances.clusters.create"
                }
              }
            },
            "appProfiles": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the app profile to be deleted. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/appProfiles/\u003capp_profile\u003e`."
                    },
                    "ignoreWarnings": {
                      "location": "query",
                      "description": "If true, ignore safety checks when deleting the app profile.",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles/{appProfilesId}",
                  "id": "bigtableadmin.projects.instances.appProfiles.delete",
                  "path": "v2/{+name}",
                  "description": "Deletes an app profile from an instance."
                },
                "get": {
                  "path": "v2/{+name}",
                  "id": "bigtableadmin.projects.instances.appProfiles.get",
                  "description": "Gets information about an app profile.",
                  "response": {
                    "$ref": "AppProfile"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the requested app profile. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/appProfiles/\u003capp_profile\u003e`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles/{appProfilesId}"
                },
                "list": {
                  "path": "v2/{+parent}/appProfiles",
                  "id": "bigtableadmin.projects.instances.appProfiles.list",
                  "description": "Lists information about app profiles in an instance.",
                  "response": {
                    "$ref": "ListAppProfilesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value of `next_page_token` returned by a previous call."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of results per page.\n\nA page_size of zero lets the server choose the number of items to return.\nA page_size which is strictly positive will return at most that many items.\nA negative page_size will cause an error.\n\nFollowing the first request, subsequent paginated calls are not required\nto pass a page_size. If a page_size is set in subsequent calls, it must\nmatch the page_size given in the first request.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the instance for which a list of app profiles is\nrequested. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e`.\nUse `\u003cinstance\u003e = '-'` to list AppProfiles for all Instances in a project,\ne.g., `projects/myproject/instances/-`."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles"
                },
                "patch": {
                  "id": "bigtableadmin.projects.instances.appProfiles.patch",
                  "path": "v2/{+name}",
                  "description": "Updates an app profile within an instance.",
                  "request": {
                    "$ref": "AppProfile"
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$",
                      "location": "path",
                      "description": "(`OutputOnly`)\nThe unique name of the app profile. Values are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/appProfiles/_a-zA-Z0-9*`."
                    },
                    "ignoreWarnings": {
                      "location": "query",
                      "description": "If true, ignore safety checks when updating the app profile.",
                      "type": "boolean"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "The subset of app profile fields which should be replaced.\nIf unset, all fields will be replaced.",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles/{appProfilesId}"
                },
                "create": {
                  "description": "Creates an app profile within an instance.",
                  "request": {
                    "$ref": "AppProfile"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "AppProfile"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "The unique name of the instance in which to create the new app profile.\nValues are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+$"
                    },
                    "appProfileId": {
                      "type": "string",
                      "location": "query",
                      "description": "The ID to be used when referring to the new app profile within its\ninstance, e.g., just `myprofile` rather than\n`projects/myproject/instances/myinstance/appProfiles/myprofile`."
                    },
                    "ignoreWarnings": {
                      "location": "query",
                      "description": "If true, ignore safety checks when creating the app profile.",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles",
                  "id": "bigtableadmin.projects.instances.appProfiles.create",
                  "path": "v2/{+parent}/appProfiles"
                }
              }
            },
            "tables": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the table to be deleted.\nValues are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/tables/\u003ctable\u003e`."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}",
                  "path": "v2/{+name}",
                  "id": "bigtableadmin.projects.instances.tables.delete",
                  "description": "Permanently deletes a specified table and all of its data."
                },
                "list": {
                  "description": "Lists all tables served from a specified instance.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListTablesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "The value of `next_page_token` returned by a previous call.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of results per page.\n\nA page_size of zero lets the server choose the number of items to return.\nA page_size which is strictly positive will return at most that many items.\nA negative page_size will cause an error.\n\nFollowing the first request, subsequent paginated calls are not required\nto pass a page_size. If a page_size is set in subsequent calls, it must\nmatch the page_size given in the first request.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "view": {
                      "location": "query",
                      "enum": [
                        "VIEW_UNSPECIFIED",
                        "NAME_ONLY",
                        "SCHEMA_VIEW",
                        "REPLICATION_VIEW",
                        "FULL"
                      ],
                      "description": "The view to be applied to the returned tables' fields.\nDefaults to `NAME_ONLY` if unspecified; no others are currently supported.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "description": "The unique name of the instance for which tables should be listed.\nValues are of the form `projects/\u003cproject\u003e/instances/\u003cinstance\u003e`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables",
                  "id": "bigtableadmin.projects.instances.tables.list",
                  "path": "v2/{+parent}/tables"
                },
                "generateConsistencyToken": {
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:generateConsistencyToken",
                  "path": "v2/{+name}:generateConsistencyToken",
                  "id": "bigtableadmin.projects.instances.tables.generateConsistencyToken",
                  "description": "Generates a consistency token for a Table, which can be used in\nCheckConsistency to check whether mutations to the table that finished\nbefore this call started have been replicated. The tokens will be available\nfor 90 days.",
                  "request": {
                    "$ref": "GenerateConsistencyTokenRequest"
                  },
                  "response": {
                    "$ref": "GenerateConsistencyTokenResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The unique name of the Table for which to create a consistency token.\nValues are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/tables/\u003ctable\u003e`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "dropRowRange": {
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:dropRowRange",
                  "path": "v2/{+name}:dropRowRange",
                  "id": "bigtableadmin.projects.instances.tables.dropRowRange",
                  "description": "Permanently drop/delete a row range from a specified table. The request can\nspecify whether to delete all rows in a table, or only those that match a\nparticular prefix.",
                  "request": {
                    "$ref": "DropRowRangeRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the table on which to drop a range of rows.\nValues are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/tables/\u003ctable\u003e`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Table"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the instance in which to create the table.\nValues are of the form `projects/\u003cproject\u003e/instances/\u003cinstance\u003e`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables",
                  "id": "bigtableadmin.projects.instances.tables.create",
                  "path": "v2/{+parent}/tables",
                  "description": "Creates a new table in the specified instance.\nThe table can be created with a full set of initial column families,\nspecified in the request.",
                  "request": {
                    "$ref": "CreateTableRequest"
                  }
                },
                "checkConsistency": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "CheckConsistencyResponse"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the Table for which to check replication consistency.\nValues are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/tables/\u003ctable\u003e`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:checkConsistency",
                  "id": "bigtableadmin.projects.instances.tables.checkConsistency",
                  "path": "v2/{+name}:checkConsistency",
                  "description": "Checks replication consistency based on a consistency token, that is, if\nreplication has caught up based on the conditions specified in the token\nand the check request.",
                  "request": {
                    "$ref": "CheckConsistencyRequest"
                  }
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:setIamPolicy",
                  "id": "bigtableadmin.projects.instances.tables.setIamPolicy",
                  "path": "v2/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on a table resource. Replaces any existing\npolicy.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "modifyColumnFamilies": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Table"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The unique name of the table whose families should be modified.\nValues are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/tables/\u003ctable\u003e`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:modifyColumnFamilies",
                  "id": "bigtableadmin.projects.instances.tables.modifyColumnFamilies",
                  "path": "v2/{+name}:modifyColumnFamilies",
                  "description": "Performs a series of column family modifications on the specified table.\nEither all or none of the modifications will occur before this method\nreturns, but data requests received prior to that point may see a table\nwhere only some modifications have taken effect.",
                  "request": {
                    "$ref": "ModifyColumnFamiliesRequest"
                  }
                },
                "getIamPolicy": {
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:getIamPolicy",
                  "path": "v2/{+resource}:getIamPolicy",
                  "id": "bigtableadmin.projects.instances.tables.getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "description": "Gets the access control policy for an instance resource. Returns an empty\npolicy if an table exists but does not have a policy set.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Table"
                  },
                  "parameters": {
                    "view": {
                      "location": "query",
                      "enum": [
                        "VIEW_UNSPECIFIED",
                        "NAME_ONLY",
                        "SCHEMA_VIEW",
                        "REPLICATION_VIEW",
                        "FULL"
                      ],
                      "description": "The view to be applied to the returned table's fields.\nDefaults to `SCHEMA_VIEW` if unspecified.",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the requested table.\nValues are of the form\n`projects/\u003cproject\u003e/instances/\u003cinstance\u003e/tables/\u003ctable\u003e`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}",
                  "id": "bigtableadmin.projects.instances.tables.get",
                  "path": "v2/{+name}",
                  "description": "Gets metadata information about the specified table."
                },
                "testIamPermissions": {
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:testIamPermissions",
                  "id": "bigtableadmin.projects.instances.tables.testIamPermissions",
                  "path": "v2/{+resource}:testIamPermissions",
                  "description": "Returns permissions that the caller has on the specified table resource.",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        },
        "locations": {
          "methods": {
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The standard list page size.",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "description": "The standard list filter.",
                  "type": "string"
                }
              },
              "flatPath": "v2/projects/{projectsId}/locations",
              "id": "bigtableadmin.projects.locations.list",
              "path": "v2/{+name}/locations"
            },
            "get": {
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "id": "bigtableadmin.projects.locations.get",
              "path": "v2/{+name}",
              "description": "Gets information about a location.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "Resource name for the location."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          }
        }
      }
    }
  },
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    }
  },
  "version": "v2",
  "baseUrl": "https://bigtableadmin.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Administer your Cloud Bigtable tables and instances.",
  "servicePath": "",
  "basePath": "",
  "revision": "20190906",
  "documentationLink": "https://cloud.google.com/bigtable/",
  "id": "bigtableadmin:v2"
}
