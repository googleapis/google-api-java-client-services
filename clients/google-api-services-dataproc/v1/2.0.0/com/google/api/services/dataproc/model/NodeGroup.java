/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc
 * NodeGroupAffinity resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NodeGroup extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to
   * RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they
   * must consist of from 1 to 63 characters and conform to RFC 1035
   * (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * The Node group resource name (https://aip.dev/122).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. The node group instance group configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InstanceGroupConfig nodeGroupConfig;

  /**
   * Required. Node group roles.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> roles;

  /**
   * Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to
   * RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they
   * must consist of from 1 to 63 characters and conform to RFC 1035
   * (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to
   * RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they
   * must consist of from 1 to 63 characters and conform to RFC 1035
   * (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.
   * @param labels labels or {@code null} for none
   */
  public NodeGroup setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * The Node group resource name (https://aip.dev/122).
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The Node group resource name (https://aip.dev/122).
   * @param name name or {@code null} for none
   */
  public NodeGroup setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The node group instance group configuration.
   * @return value or {@code null} for none
   */
  public InstanceGroupConfig getNodeGroupConfig() {
    return nodeGroupConfig;
  }

  /**
   * Optional. The node group instance group configuration.
   * @param nodeGroupConfig nodeGroupConfig or {@code null} for none
   */
  public NodeGroup setNodeGroupConfig(InstanceGroupConfig nodeGroupConfig) {
    this.nodeGroupConfig = nodeGroupConfig;
    return this;
  }

  /**
   * Required. Node group roles.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRoles() {
    return roles;
  }

  /**
   * Required. Node group roles.
   * @param roles roles or {@code null} for none
   */
  public NodeGroup setRoles(java.util.List<java.lang.String> roles) {
    this.roles = roles;
    return this;
  }

  @Override
  public NodeGroup set(String fieldName, Object value) {
    return (NodeGroup) super.set(fieldName, value);
  }

  @Override
  public NodeGroup clone() {
    return (NodeGroup) super.clone();
  }

}
