/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1.model;

/**
 * The `AccountRelationship` message defines a formal connection between a merchant's account and a
 * service provider's account. This relationship enables the provider to offer specific services to
 * the business, such as product management or campaign management. It specifies the access rights
 * and permissions to the business's data relevant to those services. Establishing an account
 * relationship involves linking the merchant's account with a provider's account. The provider
 * could be another Google account (like Google Ads or Google My Business) or a third-party platform
 * (such as Shopify or WooCommerce).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AccountRelationship extends com.google.api.client.json.GenericJson {

  /**
   * Optional. An optional alias you can assign to this account relationship. This alias acts as a
   * convenient identifier for your own reference and management. It must be unique among all your
   * account relationships with the same provider. For example, you might use `account_id_alias` to
   * assign a friendly name to this relationship for easier identification in your systems.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accountIdAlias;

  /**
   * Identifier. The resource name of the account relationship. Format:
   * `accounts/{account}/relationships/{relationship}`. For example,
   * `accounts/123456/relationships/567890`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Immutable. The provider of the service. Either the reference to an account such as
   * `providers/123` or a well-known service provider (one of `providers/GOOGLE_ADS` or
   * `providers/GOOGLE_BUSINESS_PROFILE`).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String provider;

  /**
   * Output only. The human-readable display name of the provider account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String providerDisplayName;

  /**
   * Optional. An optional alias you can assign to this account relationship. This alias acts as a
   * convenient identifier for your own reference and management. It must be unique among all your
   * account relationships with the same provider. For example, you might use `account_id_alias` to
   * assign a friendly name to this relationship for easier identification in your systems.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccountIdAlias() {
    return accountIdAlias;
  }

  /**
   * Optional. An optional alias you can assign to this account relationship. This alias acts as a
   * convenient identifier for your own reference and management. It must be unique among all your
   * account relationships with the same provider. For example, you might use `account_id_alias` to
   * assign a friendly name to this relationship for easier identification in your systems.
   * @param accountIdAlias accountIdAlias or {@code null} for none
   */
  public AccountRelationship setAccountIdAlias(java.lang.String accountIdAlias) {
    this.accountIdAlias = accountIdAlias;
    return this;
  }

  /**
   * Identifier. The resource name of the account relationship. Format:
   * `accounts/{account}/relationships/{relationship}`. For example,
   * `accounts/123456/relationships/567890`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the account relationship. Format:
   * `accounts/{account}/relationships/{relationship}`. For example,
   * `accounts/123456/relationships/567890`.
   * @param name name or {@code null} for none
   */
  public AccountRelationship setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. The provider of the service. Either the reference to an account such as
   * `providers/123` or a well-known service provider (one of `providers/GOOGLE_ADS` or
   * `providers/GOOGLE_BUSINESS_PROFILE`).
   * @return value or {@code null} for none
   */
  public java.lang.String getProvider() {
    return provider;
  }

  /**
   * Immutable. The provider of the service. Either the reference to an account such as
   * `providers/123` or a well-known service provider (one of `providers/GOOGLE_ADS` or
   * `providers/GOOGLE_BUSINESS_PROFILE`).
   * @param provider provider or {@code null} for none
   */
  public AccountRelationship setProvider(java.lang.String provider) {
    this.provider = provider;
    return this;
  }

  /**
   * Output only. The human-readable display name of the provider account.
   * @return value or {@code null} for none
   */
  public java.lang.String getProviderDisplayName() {
    return providerDisplayName;
  }

  /**
   * Output only. The human-readable display name of the provider account.
   * @param providerDisplayName providerDisplayName or {@code null} for none
   */
  public AccountRelationship setProviderDisplayName(java.lang.String providerDisplayName) {
    this.providerDisplayName = providerDisplayName;
    return this;
  }

  @Override
  public AccountRelationship set(String fieldName, Object value) {
    return (AccountRelationship) super.set(fieldName, value);
  }

  @Override
  public AccountRelationship clone() {
    return (AccountRelationship) super.clone();
  }

}
