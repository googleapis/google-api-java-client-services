/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * Request message for generating a URL to upgrade an existing managed Google Play Accounts
 * enterprise to a managed Google domain.Note: This feature is not generally available.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GenerateEnterpriseUpgradeUrlRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Email address used to prefill the admin field of the enterprise signup form as part
   * of the upgrade process. This value is a hint only and can be altered by the user. Personal
   * email addresses are not allowed. If allowedDomains is non-empty then this must belong to one of
   * the allowedDomains.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String adminEmail;

  /**
   * Optional. A list of domains that are permitted for the admin email. The IT admin cannot enter
   * an email address with a domain name that is not in this list. Subdomains of domains in this
   * list are not allowed but can be allowed by adding a second entry which has *. prefixed to the
   * domain name (e.g. *.example.com). If the field is not present or is an empty list then the IT
   * admin is free to use any valid domain name. Personal email domains are not allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> allowedDomains;

  /**
   * Optional. Email address used to prefill the admin field of the enterprise signup form as part
   * of the upgrade process. This value is a hint only and can be altered by the user. Personal
   * email addresses are not allowed. If allowedDomains is non-empty then this must belong to one of
   * the allowedDomains.
   * @return value or {@code null} for none
   */
  public java.lang.String getAdminEmail() {
    return adminEmail;
  }

  /**
   * Optional. Email address used to prefill the admin field of the enterprise signup form as part
   * of the upgrade process. This value is a hint only and can be altered by the user. Personal
   * email addresses are not allowed. If allowedDomains is non-empty then this must belong to one of
   * the allowedDomains.
   * @param adminEmail adminEmail or {@code null} for none
   */
  public GenerateEnterpriseUpgradeUrlRequest setAdminEmail(java.lang.String adminEmail) {
    this.adminEmail = adminEmail;
    return this;
  }

  /**
   * Optional. A list of domains that are permitted for the admin email. The IT admin cannot enter
   * an email address with a domain name that is not in this list. Subdomains of domains in this
   * list are not allowed but can be allowed by adding a second entry which has *. prefixed to the
   * domain name (e.g. *.example.com). If the field is not present or is an empty list then the IT
   * admin is free to use any valid domain name. Personal email domains are not allowed.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAllowedDomains() {
    return allowedDomains;
  }

  /**
   * Optional. A list of domains that are permitted for the admin email. The IT admin cannot enter
   * an email address with a domain name that is not in this list. Subdomains of domains in this
   * list are not allowed but can be allowed by adding a second entry which has *. prefixed to the
   * domain name (e.g. *.example.com). If the field is not present or is an empty list then the IT
   * admin is free to use any valid domain name. Personal email domains are not allowed.
   * @param allowedDomains allowedDomains or {@code null} for none
   */
  public GenerateEnterpriseUpgradeUrlRequest setAllowedDomains(java.util.List<java.lang.String> allowedDomains) {
    this.allowedDomains = allowedDomains;
    return this;
  }

  @Override
  public GenerateEnterpriseUpgradeUrlRequest set(String fieldName, Object value) {
    return (GenerateEnterpriseUpgradeUrlRequest) super.set(fieldName, value);
  }

  @Override
  public GenerateEnterpriseUpgradeUrlRequest clone() {
    return (GenerateEnterpriseUpgradeUrlRequest) super.clone();
  }

}
