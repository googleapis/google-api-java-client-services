/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkservices.v1beta1.model;

/**
 * Option to specify health based failover behavior. This is not related to Network load balancer
 * FailoverPolicy.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Services API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ServiceLbPolicyFailoverConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The percentage threshold that a load balancer will begin to send traffic to failover
   * backends. If the percentage of endpoints in a MIG/NEG is smaller than this value, traffic would
   * be sent to failover backends if possible. This field should be set to a value between 1 and 99.
   * The default value is 50 for Global external HTTP(S) load balancer (classic) and Proxyless
   * service mesh, and 70 for others.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer failoverHealthThreshold;

  /**
   * Optional. The percentage threshold that a load balancer will begin to send traffic to failover
   * backends. If the percentage of endpoints in a MIG/NEG is smaller than this value, traffic would
   * be sent to failover backends if possible. This field should be set to a value between 1 and 99.
   * The default value is 50 for Global external HTTP(S) load balancer (classic) and Proxyless
   * service mesh, and 70 for others.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFailoverHealthThreshold() {
    return failoverHealthThreshold;
  }

  /**
   * Optional. The percentage threshold that a load balancer will begin to send traffic to failover
   * backends. If the percentage of endpoints in a MIG/NEG is smaller than this value, traffic would
   * be sent to failover backends if possible. This field should be set to a value between 1 and 99.
   * The default value is 50 for Global external HTTP(S) load balancer (classic) and Proxyless
   * service mesh, and 70 for others.
   * @param failoverHealthThreshold failoverHealthThreshold or {@code null} for none
   */
  public ServiceLbPolicyFailoverConfig setFailoverHealthThreshold(java.lang.Integer failoverHealthThreshold) {
    this.failoverHealthThreshold = failoverHealthThreshold;
    return this;
  }

  @Override
  public ServiceLbPolicyFailoverConfig set(String fieldName, Object value) {
    return (ServiceLbPolicyFailoverConfig) super.set(fieldName, value);
  }

  @Override
  public ServiceLbPolicyFailoverConfig clone() {
    return (ServiceLbPolicyFailoverConfig) super.clone();
  }

}
