/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datamigration.v1.model;

/**
 * Execution log of a background job.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Database Migration API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackgroundJobLogEntry extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Apply job details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ApplyJobDetails applyJobDetails;

  /**
   * Output only. Job completion comment, such as how many entities were seeded, how many warnings
   * were found during conversion, and similar information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String completionComment;

  /**
   * Output only. Job completion state, i.e. the final state after the job completed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String completionState;

  /**
   * Output only. Convert job details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ConvertJobDetails convertJobDetails;

  /**
   * The timestamp when the background job was finished.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String finishTime;

  /**
   * The background job log entry ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Output only. Import rules job details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImportRulesJobDetails importRulesJobDetails;

  /**
   * The type of job that was executed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jobType;

  /**
   * Output only. Whether the client requested the conversion workspace to be committed after a
   * successful completion of the job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean requestAutocommit;

  /**
   * Output only. Seed job details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SeedJobDetails seedJobDetails;

  /**
   * The timestamp when the background job was started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Output only. Apply job details.
   * @return value or {@code null} for none
   */
  public ApplyJobDetails getApplyJobDetails() {
    return applyJobDetails;
  }

  /**
   * Output only. Apply job details.
   * @param applyJobDetails applyJobDetails or {@code null} for none
   */
  public BackgroundJobLogEntry setApplyJobDetails(ApplyJobDetails applyJobDetails) {
    this.applyJobDetails = applyJobDetails;
    return this;
  }

  /**
   * Output only. Job completion comment, such as how many entities were seeded, how many warnings
   * were found during conversion, and similar information.
   * @return value or {@code null} for none
   */
  public java.lang.String getCompletionComment() {
    return completionComment;
  }

  /**
   * Output only. Job completion comment, such as how many entities were seeded, how many warnings
   * were found during conversion, and similar information.
   * @param completionComment completionComment or {@code null} for none
   */
  public BackgroundJobLogEntry setCompletionComment(java.lang.String completionComment) {
    this.completionComment = completionComment;
    return this;
  }

  /**
   * Output only. Job completion state, i.e. the final state after the job completed.
   * @return value or {@code null} for none
   */
  public java.lang.String getCompletionState() {
    return completionState;
  }

  /**
   * Output only. Job completion state, i.e. the final state after the job completed.
   * @param completionState completionState or {@code null} for none
   */
  public BackgroundJobLogEntry setCompletionState(java.lang.String completionState) {
    this.completionState = completionState;
    return this;
  }

  /**
   * Output only. Convert job details.
   * @return value or {@code null} for none
   */
  public ConvertJobDetails getConvertJobDetails() {
    return convertJobDetails;
  }

  /**
   * Output only. Convert job details.
   * @param convertJobDetails convertJobDetails or {@code null} for none
   */
  public BackgroundJobLogEntry setConvertJobDetails(ConvertJobDetails convertJobDetails) {
    this.convertJobDetails = convertJobDetails;
    return this;
  }

  /**
   * The timestamp when the background job was finished.
   * @return value or {@code null} for none
   */
  public String getFinishTime() {
    return finishTime;
  }

  /**
   * The timestamp when the background job was finished.
   * @param finishTime finishTime or {@code null} for none
   */
  public BackgroundJobLogEntry setFinishTime(String finishTime) {
    this.finishTime = finishTime;
    return this;
  }

  /**
   * The background job log entry ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * The background job log entry ID.
   * @param id id or {@code null} for none
   */
  public BackgroundJobLogEntry setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Output only. Import rules job details.
   * @return value or {@code null} for none
   */
  public ImportRulesJobDetails getImportRulesJobDetails() {
    return importRulesJobDetails;
  }

  /**
   * Output only. Import rules job details.
   * @param importRulesJobDetails importRulesJobDetails or {@code null} for none
   */
  public BackgroundJobLogEntry setImportRulesJobDetails(ImportRulesJobDetails importRulesJobDetails) {
    this.importRulesJobDetails = importRulesJobDetails;
    return this;
  }

  /**
   * The type of job that was executed.
   * @return value or {@code null} for none
   */
  public java.lang.String getJobType() {
    return jobType;
  }

  /**
   * The type of job that was executed.
   * @param jobType jobType or {@code null} for none
   */
  public BackgroundJobLogEntry setJobType(java.lang.String jobType) {
    this.jobType = jobType;
    return this;
  }

  /**
   * Output only. Whether the client requested the conversion workspace to be committed after a
   * successful completion of the job.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRequestAutocommit() {
    return requestAutocommit;
  }

  /**
   * Output only. Whether the client requested the conversion workspace to be committed after a
   * successful completion of the job.
   * @param requestAutocommit requestAutocommit or {@code null} for none
   */
  public BackgroundJobLogEntry setRequestAutocommit(java.lang.Boolean requestAutocommit) {
    this.requestAutocommit = requestAutocommit;
    return this;
  }

  /**
   * Output only. Seed job details.
   * @return value or {@code null} for none
   */
  public SeedJobDetails getSeedJobDetails() {
    return seedJobDetails;
  }

  /**
   * Output only. Seed job details.
   * @param seedJobDetails seedJobDetails or {@code null} for none
   */
  public BackgroundJobLogEntry setSeedJobDetails(SeedJobDetails seedJobDetails) {
    this.seedJobDetails = seedJobDetails;
    return this;
  }

  /**
   * The timestamp when the background job was started.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * The timestamp when the background job was started.
   * @param startTime startTime or {@code null} for none
   */
  public BackgroundJobLogEntry setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  @Override
  public BackgroundJobLogEntry set(String fieldName, Object value) {
    return (BackgroundJobLogEntry) super.set(fieldName, value);
  }

  @Override
  public BackgroundJobLogEntry clone() {
    return (BackgroundJobLogEntry) super.clone();
  }

}
