/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.storagebatchoperations.v1.model;

/**
 * Describes options to update object hold.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Storage Batch Operations API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PutObjectHold extends com.google.api.client.json.GenericJson {

  /**
   * Required. Updates object event based holds state. When object event based hold is set, object
   * cannot be deleted or replaced. Resets object's time in the bucket for the purposes of the
   * retention period.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String eventBasedHold;

  /**
   * Required. Updates object temporary holds state. When object temporary hold is set, object
   * cannot be deleted or replaced.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String temporaryHold;

  /**
   * Required. Updates object event based holds state. When object event based hold is set, object
   * cannot be deleted or replaced. Resets object's time in the bucket for the purposes of the
   * retention period.
   * @return value or {@code null} for none
   */
  public java.lang.String getEventBasedHold() {
    return eventBasedHold;
  }

  /**
   * Required. Updates object event based holds state. When object event based hold is set, object
   * cannot be deleted or replaced. Resets object's time in the bucket for the purposes of the
   * retention period.
   * @param eventBasedHold eventBasedHold or {@code null} for none
   */
  public PutObjectHold setEventBasedHold(java.lang.String eventBasedHold) {
    this.eventBasedHold = eventBasedHold;
    return this;
  }

  /**
   * Required. Updates object temporary holds state. When object temporary hold is set, object
   * cannot be deleted or replaced.
   * @return value or {@code null} for none
   */
  public java.lang.String getTemporaryHold() {
    return temporaryHold;
  }

  /**
   * Required. Updates object temporary holds state. When object temporary hold is set, object
   * cannot be deleted or replaced.
   * @param temporaryHold temporaryHold or {@code null} for none
   */
  public PutObjectHold setTemporaryHold(java.lang.String temporaryHold) {
    this.temporaryHold = temporaryHold;
    return this;
  }

  @Override
  public PutObjectHold set(String fieldName, Object value) {
    return (PutObjectHold) super.set(fieldName, value);
  }

  @Override
  public PutObjectHold clone() {
    return (PutObjectHold) super.clone();
  }

}
