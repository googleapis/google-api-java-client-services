/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * ReferencedResource contains an entry per url referenced by the browser while rendering a
 * document. Next tag available: 20
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class HtmlrenderWebkitHeadlessProtoReferencedResource extends com.google.api.client.json.GenericJson {

  /**
   * True if this fetch was canceled due to render server policy. e.g. the page exceeded the fetch
   * budget or an extension canceled the fetch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean canceled;

  /**
   * Content type of this resource (webutil/http/content-type.h). The content type is from guess
   * based on the file extension, any mime type in http headers at the beginning of the content, any
   * content-disposition http header, and the content body itself. Note: the content type defined in
   * webutil/http/content-type.proto is incomplete. If you are interested in missing types, please
   * update the enum and the logic of content type detection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer contentType;

  /**
   * DOMTreeNode index which has the url as one of its attributes specified using either src, href
   * or background attributes. src attribute applies to img, script, frame and iframe nodes, href
   * applies to link nodes and background applies to body node. It is possible for a url to be
   * referenced by multiple DOM nodes. For e.g. an tag with the same src attribute can occur in
   * multiple places within a document. It is possible for a url to not have any DOM node reference.
   * For example, redirects don't have DOM tree nodes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> domTreeNodeIndex;

  /**
   * True when a HTTP request succeeded but the resource was not made accessible to script due to a
   * HTTP Access Control (CORS) failure. This field is not implemented on Chromium.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean failedHttpAccessControlCheck;

  /**
   * Where this resource comes from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<WirelessTranscoderFetchFetchSourceInfo> fetchSourceInfo;

  /**
   * The FetchStatus returned by the fetcher. Values are taken from
   * wireless_transcoder_fetch.FetchConstants.FetchStatus in fetch_service.proto. The default value
   * is SUCCESS(0).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fetchStatus;

  /**
   * HTTP headers from the fetcher.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<HtmlrenderWebkitHeadlessProtoReferencedResourceHttpHeader> httpHeader;

  /**
   * HTTP response code if we had tried to fetch the url. Absence of this field indicates either we
   * have not tried to fetch the url or the fetcher never got back to us with any response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer httpResponseCode;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<WirelessTranscoderFetchFetchMetadata> metadata;

  /**
   * The post_data field is only valid when the HTTP request method is POST.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String postData;

  /**
   * If the http_response_code is a HTTP redirect, the redirect target will be stored here.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String redirectTarget;

  /**
   * Indicates which referenced_resource_content (in RenderResponse) this RefencedResource points
   * to. This field will be set only when there is referenced_resource_content for this
   * RefencedResource in RenderResponse.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer referencedResourceContentIndex;

  /**
   * Only necessary headers are recorded. See google3/htmlrender/webkit_headless/resource_key.cc
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<HtmlrenderWebkitHeadlessProtoReferencedResourceHttpHeader> requestHeader;

  /**
   * The HTTP request method (GET, HEAD, POST, etc) used for this request. Values are taken from the
   * HTTPHeaders::Protocol enum in webutil/http/httputils.h. HTTPHeaders::PROTO_GET
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer requestMethod;

  /**
   * style index which has the url specified using either the background-image property or the list-
   * style-image property.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> styleIndex;

  /**
   * Whether it is synchronously fetched.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean synchronouslyFetched;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<HtmlrenderWebkitHeadlessProtoReferencedResourceFetchTiming> timing;

  /**
   * Does not have a #fragment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * Additional information webkit about this resource. e.g. intended usage
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoWebKitFetchMetadata webkitMetadata;

  /**
   * True if this fetch was canceled due to render server policy. e.g. the page exceeded the fetch
   * budget or an extension canceled the fetch.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCanceled() {
    return canceled;
  }

  /**
   * True if this fetch was canceled due to render server policy. e.g. the page exceeded the fetch
   * budget or an extension canceled the fetch.
   * @param canceled canceled or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setCanceled(java.lang.Boolean canceled) {
    this.canceled = canceled;
    return this;
  }

  /**
   * Content type of this resource (webutil/http/content-type.h). The content type is from guess
   * based on the file extension, any mime type in http headers at the beginning of the content, any
   * content-disposition http header, and the content body itself. Note: the content type defined in
   * webutil/http/content-type.proto is incomplete. If you are interested in missing types, please
   * update the enum and the logic of content type detection.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getContentType() {
    return contentType;
  }

  /**
   * Content type of this resource (webutil/http/content-type.h). The content type is from guess
   * based on the file extension, any mime type in http headers at the beginning of the content, any
   * content-disposition http header, and the content body itself. Note: the content type defined in
   * webutil/http/content-type.proto is incomplete. If you are interested in missing types, please
   * update the enum and the logic of content type detection.
   * @param contentType contentType or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setContentType(java.lang.Integer contentType) {
    this.contentType = contentType;
    return this;
  }

  /**
   * DOMTreeNode index which has the url as one of its attributes specified using either src, href
   * or background attributes. src attribute applies to img, script, frame and iframe nodes, href
   * applies to link nodes and background applies to body node. It is possible for a url to be
   * referenced by multiple DOM nodes. For e.g. an tag with the same src attribute can occur in
   * multiple places within a document. It is possible for a url to not have any DOM node reference.
   * For example, redirects don't have DOM tree nodes.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getDomTreeNodeIndex() {
    return domTreeNodeIndex;
  }

  /**
   * DOMTreeNode index which has the url as one of its attributes specified using either src, href
   * or background attributes. src attribute applies to img, script, frame and iframe nodes, href
   * applies to link nodes and background applies to body node. It is possible for a url to be
   * referenced by multiple DOM nodes. For e.g. an tag with the same src attribute can occur in
   * multiple places within a document. It is possible for a url to not have any DOM node reference.
   * For example, redirects don't have DOM tree nodes.
   * @param domTreeNodeIndex domTreeNodeIndex or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setDomTreeNodeIndex(java.util.List<java.lang.Integer> domTreeNodeIndex) {
    this.domTreeNodeIndex = domTreeNodeIndex;
    return this;
  }

  /**
   * True when a HTTP request succeeded but the resource was not made accessible to script due to a
   * HTTP Access Control (CORS) failure. This field is not implemented on Chromium.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFailedHttpAccessControlCheck() {
    return failedHttpAccessControlCheck;
  }

  /**
   * True when a HTTP request succeeded but the resource was not made accessible to script due to a
   * HTTP Access Control (CORS) failure. This field is not implemented on Chromium.
   * @param failedHttpAccessControlCheck failedHttpAccessControlCheck or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setFailedHttpAccessControlCheck(java.lang.Boolean failedHttpAccessControlCheck) {
    this.failedHttpAccessControlCheck = failedHttpAccessControlCheck;
    return this;
  }

  /**
   * Where this resource comes from.
   * @return value or {@code null} for none
   */
  public java.util.List<WirelessTranscoderFetchFetchSourceInfo> getFetchSourceInfo() {
    return fetchSourceInfo;
  }

  /**
   * Where this resource comes from.
   * @param fetchSourceInfo fetchSourceInfo or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setFetchSourceInfo(java.util.List<WirelessTranscoderFetchFetchSourceInfo> fetchSourceInfo) {
    this.fetchSourceInfo = fetchSourceInfo;
    return this;
  }

  /**
   * The FetchStatus returned by the fetcher. Values are taken from
   * wireless_transcoder_fetch.FetchConstants.FetchStatus in fetch_service.proto. The default value
   * is SUCCESS(0).
   * @return value or {@code null} for none
   */
  public java.lang.String getFetchStatus() {
    return fetchStatus;
  }

  /**
   * The FetchStatus returned by the fetcher. Values are taken from
   * wireless_transcoder_fetch.FetchConstants.FetchStatus in fetch_service.proto. The default value
   * is SUCCESS(0).
   * @param fetchStatus fetchStatus or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setFetchStatus(java.lang.String fetchStatus) {
    this.fetchStatus = fetchStatus;
    return this;
  }

  /**
   * HTTP headers from the fetcher.
   * @return value or {@code null} for none
   */
  public java.util.List<HtmlrenderWebkitHeadlessProtoReferencedResourceHttpHeader> getHttpHeader() {
    return httpHeader;
  }

  /**
   * HTTP headers from the fetcher.
   * @param httpHeader httpHeader or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setHttpHeader(java.util.List<HtmlrenderWebkitHeadlessProtoReferencedResourceHttpHeader> httpHeader) {
    this.httpHeader = httpHeader;
    return this;
  }

  /**
   * HTTP response code if we had tried to fetch the url. Absence of this field indicates either we
   * have not tried to fetch the url or the fetcher never got back to us with any response.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getHttpResponseCode() {
    return httpResponseCode;
  }

  /**
   * HTTP response code if we had tried to fetch the url. Absence of this field indicates either we
   * have not tried to fetch the url or the fetcher never got back to us with any response.
   * @param httpResponseCode httpResponseCode or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setHttpResponseCode(java.lang.Integer httpResponseCode) {
    this.httpResponseCode = httpResponseCode;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<WirelessTranscoderFetchFetchMetadata> getMetadata() {
    return metadata;
  }

  /**
   * @param metadata metadata or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setMetadata(java.util.List<WirelessTranscoderFetchFetchMetadata> metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * The post_data field is only valid when the HTTP request method is POST.
   * @see #decodePostData()
   * @return value or {@code null} for none
   */
  public java.lang.String getPostData() {
    return postData;
  }

  /**
   * The post_data field is only valid when the HTTP request method is POST.
   * @see #getPostData()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodePostData() {
    return com.google.api.client.util.Base64.decodeBase64(postData);
  }

  /**
   * The post_data field is only valid when the HTTP request method is POST.
   * @see #encodePostData()
   * @param postData postData or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setPostData(java.lang.String postData) {
    this.postData = postData;
    return this;
  }

  /**
   * The post_data field is only valid when the HTTP request method is POST.
   * @see #setPostData()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource encodePostData(byte[] postData) {
    this.postData = com.google.api.client.util.Base64.encodeBase64URLSafeString(postData);
    return this;
  }

  /**
   * If the http_response_code is a HTTP redirect, the redirect target will be stored here.
   * @return value or {@code null} for none
   */
  public java.lang.String getRedirectTarget() {
    return redirectTarget;
  }

  /**
   * If the http_response_code is a HTTP redirect, the redirect target will be stored here.
   * @param redirectTarget redirectTarget or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setRedirectTarget(java.lang.String redirectTarget) {
    this.redirectTarget = redirectTarget;
    return this;
  }

  /**
   * Indicates which referenced_resource_content (in RenderResponse) this RefencedResource points
   * to. This field will be set only when there is referenced_resource_content for this
   * RefencedResource in RenderResponse.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getReferencedResourceContentIndex() {
    return referencedResourceContentIndex;
  }

  /**
   * Indicates which referenced_resource_content (in RenderResponse) this RefencedResource points
   * to. This field will be set only when there is referenced_resource_content for this
   * RefencedResource in RenderResponse.
   * @param referencedResourceContentIndex referencedResourceContentIndex or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setReferencedResourceContentIndex(java.lang.Integer referencedResourceContentIndex) {
    this.referencedResourceContentIndex = referencedResourceContentIndex;
    return this;
  }

  /**
   * Only necessary headers are recorded. See google3/htmlrender/webkit_headless/resource_key.cc
   * @return value or {@code null} for none
   */
  public java.util.List<HtmlrenderWebkitHeadlessProtoReferencedResourceHttpHeader> getRequestHeader() {
    return requestHeader;
  }

  /**
   * Only necessary headers are recorded. See google3/htmlrender/webkit_headless/resource_key.cc
   * @param requestHeader requestHeader or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setRequestHeader(java.util.List<HtmlrenderWebkitHeadlessProtoReferencedResourceHttpHeader> requestHeader) {
    this.requestHeader = requestHeader;
    return this;
  }

  /**
   * The HTTP request method (GET, HEAD, POST, etc) used for this request. Values are taken from the
   * HTTPHeaders::Protocol enum in webutil/http/httputils.h. HTTPHeaders::PROTO_GET
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRequestMethod() {
    return requestMethod;
  }

  /**
   * The HTTP request method (GET, HEAD, POST, etc) used for this request. Values are taken from the
   * HTTPHeaders::Protocol enum in webutil/http/httputils.h. HTTPHeaders::PROTO_GET
   * @param requestMethod requestMethod or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setRequestMethod(java.lang.Integer requestMethod) {
    this.requestMethod = requestMethod;
    return this;
  }

  /**
   * style index which has the url specified using either the background-image property or the list-
   * style-image property.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getStyleIndex() {
    return styleIndex;
  }

  /**
   * style index which has the url specified using either the background-image property or the list-
   * style-image property.
   * @param styleIndex styleIndex or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setStyleIndex(java.util.List<java.lang.Integer> styleIndex) {
    this.styleIndex = styleIndex;
    return this;
  }

  /**
   * Whether it is synchronously fetched.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSynchronouslyFetched() {
    return synchronouslyFetched;
  }

  /**
   * Whether it is synchronously fetched.
   * @param synchronouslyFetched synchronouslyFetched or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setSynchronouslyFetched(java.lang.Boolean synchronouslyFetched) {
    this.synchronouslyFetched = synchronouslyFetched;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<HtmlrenderWebkitHeadlessProtoReferencedResourceFetchTiming> getTiming() {
    return timing;
  }

  /**
   * @param timing timing or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setTiming(java.util.List<HtmlrenderWebkitHeadlessProtoReferencedResourceFetchTiming> timing) {
    this.timing = timing;
    return this;
  }

  /**
   * Does not have a #fragment.
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * Does not have a #fragment.
   * @param url url or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  /**
   * Additional information webkit about this resource. e.g. intended usage
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoWebKitFetchMetadata getWebkitMetadata() {
    return webkitMetadata;
  }

  /**
   * Additional information webkit about this resource. e.g. intended usage
   * @param webkitMetadata webkitMetadata or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoReferencedResource setWebkitMetadata(HtmlrenderWebkitHeadlessProtoWebKitFetchMetadata webkitMetadata) {
    this.webkitMetadata = webkitMetadata;
    return this;
  }

  @Override
  public HtmlrenderWebkitHeadlessProtoReferencedResource set(String fieldName, Object value) {
    return (HtmlrenderWebkitHeadlessProtoReferencedResource) super.set(fieldName, value);
  }

  @Override
  public HtmlrenderWebkitHeadlessProtoReferencedResource clone() {
    return (HtmlrenderWebkitHeadlessProtoReferencedResource) super.clone();
  }

}
