/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * How often existing tables should have their profiles refreshed. New tables are scanned as quickly
 * as possible depending on system capacity.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Sensitive Data Protection (DLP). For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2DiscoveryCloudSqlGenerationCadence extends com.google.api.client.json.GenericJson {

  /**
   * Data changes (non-schema changes) in Cloud SQL tables can't trigger reprofiling. If you set
   * this field, profiles are refreshed at this frequency regardless of whether the underlying
   * tables have changes. Defaults to never.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String refreshFrequency;

  /**
   * When to reprofile if the schema has changed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2SchemaModifiedCadence schemaModifiedCadence;

  /**
   * Data changes (non-schema changes) in Cloud SQL tables can't trigger reprofiling. If you set
   * this field, profiles are refreshed at this frequency regardless of whether the underlying
   * tables have changes. Defaults to never.
   * @return value or {@code null} for none
   */
  public java.lang.String getRefreshFrequency() {
    return refreshFrequency;
  }

  /**
   * Data changes (non-schema changes) in Cloud SQL tables can't trigger reprofiling. If you set
   * this field, profiles are refreshed at this frequency regardless of whether the underlying
   * tables have changes. Defaults to never.
   * @param refreshFrequency refreshFrequency or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryCloudSqlGenerationCadence setRefreshFrequency(java.lang.String refreshFrequency) {
    this.refreshFrequency = refreshFrequency;
    return this;
  }

  /**
   * When to reprofile if the schema has changed.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2SchemaModifiedCadence getSchemaModifiedCadence() {
    return schemaModifiedCadence;
  }

  /**
   * When to reprofile if the schema has changed.
   * @param schemaModifiedCadence schemaModifiedCadence or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryCloudSqlGenerationCadence setSchemaModifiedCadence(GooglePrivacyDlpV2SchemaModifiedCadence schemaModifiedCadence) {
    this.schemaModifiedCadence = schemaModifiedCadence;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2DiscoveryCloudSqlGenerationCadence set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2DiscoveryCloudSqlGenerationCadence) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2DiscoveryCloudSqlGenerationCadence clone() {
    return (GooglePrivacyDlpV2DiscoveryCloudSqlGenerationCadence) super.clone();
  }

}
