/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * A way to join the conference.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup extends com.google.api.client.json.GenericJson {

  /**
   * An access code for accessing the conference. Maximum 128 characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accessCode;

  /**
   * Features of the entry point, such as being toll or toll-free. One entry point can have multiple
   * features.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> features;

  /**
   * The label of the entry point to display to the user. Maximum 512 characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String label;

  /**
   * A meeting code for accessing the conference. Maximum 128 characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String meetingCode;

  /**
   * A passcode for accessing the conference. Maximum 128 characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String passcode;

  /**
   * A password for accessing the conference. Maximum 128 characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String password;

  /**
   * A PIN for accessing the conference. Maximum 128 characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pin;

  /**
   * The CLDR/ISO 3166 region code for the country associated with this entry point. Applicable only
   * to `Type.PHONE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * The type of the entry point. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * A URI for joining the conference. Supports tel: and http(s): and should be at most 1300
   * characters long. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * An access code for accessing the conference. Maximum 128 characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccessCode() {
    return accessCode;
  }

  /**
   * An access code for accessing the conference. Maximum 128 characters long.
   * @param accessCode accessCode or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setAccessCode(java.lang.String accessCode) {
    this.accessCode = accessCode;
    return this;
  }

  /**
   * Features of the entry point, such as being toll or toll-free. One entry point can have multiple
   * features.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getFeatures() {
    return features;
  }

  /**
   * Features of the entry point, such as being toll or toll-free. One entry point can have multiple
   * features.
   * @param features features or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setFeatures(java.util.List<java.lang.String> features) {
    this.features = features;
    return this;
  }

  /**
   * The label of the entry point to display to the user. Maximum 512 characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getLabel() {
    return label;
  }

  /**
   * The label of the entry point to display to the user. Maximum 512 characters long.
   * @param label label or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setLabel(java.lang.String label) {
    this.label = label;
    return this;
  }

  /**
   * A meeting code for accessing the conference. Maximum 128 characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getMeetingCode() {
    return meetingCode;
  }

  /**
   * A meeting code for accessing the conference. Maximum 128 characters long.
   * @param meetingCode meetingCode or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setMeetingCode(java.lang.String meetingCode) {
    this.meetingCode = meetingCode;
    return this;
  }

  /**
   * A passcode for accessing the conference. Maximum 128 characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getPasscode() {
    return passcode;
  }

  /**
   * A passcode for accessing the conference. Maximum 128 characters long.
   * @param passcode passcode or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setPasscode(java.lang.String passcode) {
    this.passcode = passcode;
    return this;
  }

  /**
   * A password for accessing the conference. Maximum 128 characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getPassword() {
    return password;
  }

  /**
   * A password for accessing the conference. Maximum 128 characters long.
   * @param password password or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setPassword(java.lang.String password) {
    this.password = password;
    return this;
  }

  /**
   * A PIN for accessing the conference. Maximum 128 characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getPin() {
    return pin;
  }

  /**
   * A PIN for accessing the conference. Maximum 128 characters long.
   * @param pin pin or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setPin(java.lang.String pin) {
    this.pin = pin;
    return this;
  }

  /**
   * The CLDR/ISO 3166 region code for the country associated with this entry point. Applicable only
   * to `Type.PHONE`.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * The CLDR/ISO 3166 region code for the country associated with this entry point. Applicable only
   * to `Type.PHONE`.
   * @param regionCode regionCode or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * The type of the entry point. Required.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of the entry point. Required.
   * @param type type or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * A URI for joining the conference. Supports tel: and http(s): and should be at most 1300
   * characters long. Required.
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * A URI for joining the conference. Supports tel: and http(s): and should be at most 1300
   * characters long. Required.
   * @param uri uri or {@code null} for none
   */
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  @Override
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup set(String fieldName, Object value) {
    return (AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup) super.set(fieldName, value);
  }

  @Override
  public AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup clone() {
    return (AppsExtensionsMarkupCalendarClientActionMarkupConferenceDataMarkupEntryPointMarkup) super.clone();
  }

}
