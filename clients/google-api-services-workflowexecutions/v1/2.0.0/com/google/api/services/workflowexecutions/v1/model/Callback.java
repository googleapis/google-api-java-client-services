/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workflowexecutions.v1.model;

/**
 * An instance of a Callback created by an execution.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Workflow Executions API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Callback extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The payloads received by the callback that have not been processed by a waiting
   * execution step.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> availablePayloads;

  /**
   * Output only. The method accepted by the callback. For example: GET, POST, PUT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String method;

  /**
   * Output only. The resource name of the callback. Format: projects/{project}/locations/{location}
   * /workflows/{workflow}/executions/{execution}/callback/{callback}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Number of execution steps waiting on this callback.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long waiters;

  /**
   * Output only. The payloads received by the callback that have not been processed by a waiting
   * execution step.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAvailablePayloads() {
    return availablePayloads;
  }

  /**
   * Output only. The payloads received by the callback that have not been processed by a waiting
   * execution step.
   * @param availablePayloads availablePayloads or {@code null} for none
   */
  public Callback setAvailablePayloads(java.util.List<java.lang.String> availablePayloads) {
    this.availablePayloads = availablePayloads;
    return this;
  }

  /**
   * Output only. The method accepted by the callback. For example: GET, POST, PUT.
   * @return value or {@code null} for none
   */
  public java.lang.String getMethod() {
    return method;
  }

  /**
   * Output only. The method accepted by the callback. For example: GET, POST, PUT.
   * @param method method or {@code null} for none
   */
  public Callback setMethod(java.lang.String method) {
    this.method = method;
    return this;
  }

  /**
   * Output only. The resource name of the callback. Format: projects/{project}/locations/{location}
   * /workflows/{workflow}/executions/{execution}/callback/{callback}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the callback. Format: projects/{project}/locations/{location}
   * /workflows/{workflow}/executions/{execution}/callback/{callback}
   * @param name name or {@code null} for none
   */
  public Callback setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Number of execution steps waiting on this callback.
   * @return value or {@code null} for none
   */
  public java.lang.Long getWaiters() {
    return waiters;
  }

  /**
   * Output only. Number of execution steps waiting on this callback.
   * @param waiters waiters or {@code null} for none
   */
  public Callback setWaiters(java.lang.Long waiters) {
    this.waiters = waiters;
    return this;
  }

  @Override
  public Callback set(String fieldName, Object value) {
    return (Callback) super.set(fieldName, value);
  }

  @Override
  public Callback clone() {
    return (Callback) super.clone();
  }

}
