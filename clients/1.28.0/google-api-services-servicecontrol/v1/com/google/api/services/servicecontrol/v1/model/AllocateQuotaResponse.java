/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.servicecontrol.v1.model;

/**
 * Response message for the AllocateQuota method.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Service Control API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AllocateQuotaResponse extends com.google.api.client.json.GenericJson {

  /**
   * Indicates the decision of the allocate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<QuotaError> allocateErrors;

  /**
   * WARNING: DO NOT use this field until this warning message is removed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AllocateInfo allocateInfo;

  /**
   * The same operation_id value used in the AllocateQuotaRequest. Used for logging and diagnostics
   * purposes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operationId;

  /**
   * Quota metrics to indicate the result of allocation. Depending on the request, one or more of
   * the following metrics will be included:
   *
   * 1. Per quota group or per quota metric incremental usage will be specified using the following
   * delta metric :   "serviceruntime.googleapis.com/api/consumer/quota_used_count"
   *
   * 2. The quota limit reached condition will be specified using the following boolean metric :
   * "serviceruntime.googleapis.com/quota/exceeded"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<MetricValueSet> quotaMetrics;

  /**
   * ID of the actual config used to process the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceConfigId;

  /**
   * Indicates the decision of the allocate.
   * @return value or {@code null} for none
   */
  public java.util.List<QuotaError> getAllocateErrors() {
    return allocateErrors;
  }

  /**
   * Indicates the decision of the allocate.
   * @param allocateErrors allocateErrors or {@code null} for none
   */
  public AllocateQuotaResponse setAllocateErrors(java.util.List<QuotaError> allocateErrors) {
    this.allocateErrors = allocateErrors;
    return this;
  }

  /**
   * WARNING: DO NOT use this field until this warning message is removed.
   * @return value or {@code null} for none
   */
  public AllocateInfo getAllocateInfo() {
    return allocateInfo;
  }

  /**
   * WARNING: DO NOT use this field until this warning message is removed.
   * @param allocateInfo allocateInfo or {@code null} for none
   */
  public AllocateQuotaResponse setAllocateInfo(AllocateInfo allocateInfo) {
    this.allocateInfo = allocateInfo;
    return this;
  }

  /**
   * The same operation_id value used in the AllocateQuotaRequest. Used for logging and diagnostics
   * purposes.
   * @return value or {@code null} for none
   */
  public java.lang.String getOperationId() {
    return operationId;
  }

  /**
   * The same operation_id value used in the AllocateQuotaRequest. Used for logging and diagnostics
   * purposes.
   * @param operationId operationId or {@code null} for none
   */
  public AllocateQuotaResponse setOperationId(java.lang.String operationId) {
    this.operationId = operationId;
    return this;
  }

  /**
   * Quota metrics to indicate the result of allocation. Depending on the request, one or more of
   * the following metrics will be included:
   *
   * 1. Per quota group or per quota metric incremental usage will be specified using the following
   * delta metric :   "serviceruntime.googleapis.com/api/consumer/quota_used_count"
   *
   * 2. The quota limit reached condition will be specified using the following boolean metric :
   * "serviceruntime.googleapis.com/quota/exceeded"
   * @return value or {@code null} for none
   */
  public java.util.List<MetricValueSet> getQuotaMetrics() {
    return quotaMetrics;
  }

  /**
   * Quota metrics to indicate the result of allocation. Depending on the request, one or more of
   * the following metrics will be included:
   *
   * 1. Per quota group or per quota metric incremental usage will be specified using the following
   * delta metric :   "serviceruntime.googleapis.com/api/consumer/quota_used_count"
   *
   * 2. The quota limit reached condition will be specified using the following boolean metric :
   * "serviceruntime.googleapis.com/quota/exceeded"
   * @param quotaMetrics quotaMetrics or {@code null} for none
   */
  public AllocateQuotaResponse setQuotaMetrics(java.util.List<MetricValueSet> quotaMetrics) {
    this.quotaMetrics = quotaMetrics;
    return this;
  }

  /**
   * ID of the actual config used to process the request.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceConfigId() {
    return serviceConfigId;
  }

  /**
   * ID of the actual config used to process the request.
   * @param serviceConfigId serviceConfigId or {@code null} for none
   */
  public AllocateQuotaResponse setServiceConfigId(java.lang.String serviceConfigId) {
    this.serviceConfigId = serviceConfigId;
    return this;
  }

  @Override
  public AllocateQuotaResponse set(String fieldName, Object value) {
    return (AllocateQuotaResponse) super.set(fieldName, value);
  }

  @Override
  public AllocateQuotaResponse clone() {
    return (AllocateQuotaResponse) super.clone();
  }

}
