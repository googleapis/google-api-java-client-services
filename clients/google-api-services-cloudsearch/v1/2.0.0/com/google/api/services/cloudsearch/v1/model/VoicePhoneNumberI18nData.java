/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Model definition for VoicePhoneNumberI18nData.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VoicePhoneNumberI18nData extends com.google.api.client.json.GenericJson {

  /**
   * The country calling code for this number, as defined by the ITU. For example, this would be 1
   * for NANPA countries, and 33 for France (for more info see
   * i18n.phonenumbers.PhoneNumber.country_code).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer countryCode;

  /**
   * Display number formatted using the INTERNATIONAL format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String internationalNumber;

  /**
   * When present, indicates the number is valid according to the libphonenumber's isValidNumber API
   * (see https://code.google.com/p/libphonenumber/).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isValid;

  /**
   * Display number formatted using the NATIONAL format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nationalNumber;

  /**
   * A region (country, territory, continent, etc), as defined by Unicode's "CLDR", itself based on
   * ISO 3166 (UN country codes). For details, see
   * https://www.corp.google.com/~engdocs/java/com/google/i18n/identifiers/RegionCode.html
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * When set to a non-default value, indicates the validation reason that is set when phone number
   * is invalid (is_valid is false).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String validationResult;

  /**
   * The country calling code for this number, as defined by the ITU. For example, this would be 1
   * for NANPA countries, and 33 for France (for more info see
   * i18n.phonenumbers.PhoneNumber.country_code).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCountryCode() {
    return countryCode;
  }

  /**
   * The country calling code for this number, as defined by the ITU. For example, this would be 1
   * for NANPA countries, and 33 for France (for more info see
   * i18n.phonenumbers.PhoneNumber.country_code).
   * @param countryCode countryCode or {@code null} for none
   */
  public VoicePhoneNumberI18nData setCountryCode(java.lang.Integer countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * Display number formatted using the INTERNATIONAL format.
   * @return value or {@code null} for none
   */
  public java.lang.String getInternationalNumber() {
    return internationalNumber;
  }

  /**
   * Display number formatted using the INTERNATIONAL format.
   * @param internationalNumber internationalNumber or {@code null} for none
   */
  public VoicePhoneNumberI18nData setInternationalNumber(java.lang.String internationalNumber) {
    this.internationalNumber = internationalNumber;
    return this;
  }

  /**
   * When present, indicates the number is valid according to the libphonenumber's isValidNumber API
   * (see https://code.google.com/p/libphonenumber/).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsValid() {
    return isValid;
  }

  /**
   * When present, indicates the number is valid according to the libphonenumber's isValidNumber API
   * (see https://code.google.com/p/libphonenumber/).
   * @param isValid isValid or {@code null} for none
   */
  public VoicePhoneNumberI18nData setIsValid(java.lang.Boolean isValid) {
    this.isValid = isValid;
    return this;
  }

  /**
   * Display number formatted using the NATIONAL format.
   * @return value or {@code null} for none
   */
  public java.lang.String getNationalNumber() {
    return nationalNumber;
  }

  /**
   * Display number formatted using the NATIONAL format.
   * @param nationalNumber nationalNumber or {@code null} for none
   */
  public VoicePhoneNumberI18nData setNationalNumber(java.lang.String nationalNumber) {
    this.nationalNumber = nationalNumber;
    return this;
  }

  /**
   * A region (country, territory, continent, etc), as defined by Unicode's "CLDR", itself based on
   * ISO 3166 (UN country codes). For details, see
   * https://www.corp.google.com/~engdocs/java/com/google/i18n/identifiers/RegionCode.html
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * A region (country, territory, continent, etc), as defined by Unicode's "CLDR", itself based on
   * ISO 3166 (UN country codes). For details, see
   * https://www.corp.google.com/~engdocs/java/com/google/i18n/identifiers/RegionCode.html
   * @param regionCode regionCode or {@code null} for none
   */
  public VoicePhoneNumberI18nData setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * When set to a non-default value, indicates the validation reason that is set when phone number
   * is invalid (is_valid is false).
   * @return value or {@code null} for none
   */
  public java.lang.String getValidationResult() {
    return validationResult;
  }

  /**
   * When set to a non-default value, indicates the validation reason that is set when phone number
   * is invalid (is_valid is false).
   * @param validationResult validationResult or {@code null} for none
   */
  public VoicePhoneNumberI18nData setValidationResult(java.lang.String validationResult) {
    this.validationResult = validationResult;
    return this;
  }

  @Override
  public VoicePhoneNumberI18nData set(String fieldName, Object value) {
    return (VoicePhoneNumberI18nData) super.set(fieldName, value);
  }

  @Override
  public VoicePhoneNumberI18nData clone() {
    return (VoicePhoneNumberI18nData) super.clone();
  }

}
