/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.developerconnect.v1.model;

/**
 * The InsightsConfig resource is the core configuration object to capture events from your Software
 * Development Lifecycle. It acts as the central hub for managing how Developer connect understands
 * your application, its runtime environments, and the artifacts deployed within them.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Developer Connect API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InsightsConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. User specified annotations. See https://google.aip.dev/148#annotations for more
   * details such as format and size limitations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Optional. The name of the App Hub Application. Format:
   * projects/{project}/locations/{location}/applications/{application}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appHubApplication;

  /**
   * Optional. The artifact configurations of the artifacts that are deployed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ArtifactConfig> artifactConfigs;

  static {
    // hack to force ProGuard to consider ArtifactConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ArtifactConfig.class);
  }

  /**
   * Output only. [Output only] Create timestamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Any errors that occurred while setting up the InsightsConfig. Each error will be
   * in the format: `field_name: error_message`, e.g. GetAppHubApplication: Permission denied while
   * getting App Hub application. Please grant permissions to the P4SA.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Status> errors;

  /**
   * Optional. Set of labels associated with an InsightsConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. The name of the InsightsConfig. Format:
   * projects/{project}/locations/{location}/insightsConfigs/{insightsConfig}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the
   * current state of InsightsConfig does not match the user's intended state, and the service is
   * actively updating the resource to reconcile them. This can happen due to user-triggered updates
   * or system actions like failover or maintenance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean reconciling;

  /**
   * Output only. The runtime configurations where the application is deployed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RuntimeConfig> runtimeConfigs;

  /**
   * Optional. Output only. The state of the InsightsConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. [Output only] Update timestamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. User specified annotations. See https://google.aip.dev/148#annotations for more
   * details such as format and size limitations.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Optional. User specified annotations. See https://google.aip.dev/148#annotations for more
   * details such as format and size limitations.
   * @param annotations annotations or {@code null} for none
   */
  public InsightsConfig setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Optional. The name of the App Hub Application. Format:
   * projects/{project}/locations/{location}/applications/{application}
   * @return value or {@code null} for none
   */
  public java.lang.String getAppHubApplication() {
    return appHubApplication;
  }

  /**
   * Optional. The name of the App Hub Application. Format:
   * projects/{project}/locations/{location}/applications/{application}
   * @param appHubApplication appHubApplication or {@code null} for none
   */
  public InsightsConfig setAppHubApplication(java.lang.String appHubApplication) {
    this.appHubApplication = appHubApplication;
    return this;
  }

  /**
   * Optional. The artifact configurations of the artifacts that are deployed.
   * @return value or {@code null} for none
   */
  public java.util.List<ArtifactConfig> getArtifactConfigs() {
    return artifactConfigs;
  }

  /**
   * Optional. The artifact configurations of the artifacts that are deployed.
   * @param artifactConfigs artifactConfigs or {@code null} for none
   */
  public InsightsConfig setArtifactConfigs(java.util.List<ArtifactConfig> artifactConfigs) {
    this.artifactConfigs = artifactConfigs;
    return this;
  }

  /**
   * Output only. [Output only] Create timestamp
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. [Output only] Create timestamp
   * @param createTime createTime or {@code null} for none
   */
  public InsightsConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Any errors that occurred while setting up the InsightsConfig. Each error will be
   * in the format: `field_name: error_message`, e.g. GetAppHubApplication: Permission denied while
   * getting App Hub application. Please grant permissions to the P4SA.
   * @return value or {@code null} for none
   */
  public java.util.List<Status> getErrors() {
    return errors;
  }

  /**
   * Output only. Any errors that occurred while setting up the InsightsConfig. Each error will be
   * in the format: `field_name: error_message`, e.g. GetAppHubApplication: Permission denied while
   * getting App Hub application. Please grant permissions to the P4SA.
   * @param errors errors or {@code null} for none
   */
  public InsightsConfig setErrors(java.util.List<Status> errors) {
    this.errors = errors;
    return this;
  }

  /**
   * Optional. Set of labels associated with an InsightsConfig.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Set of labels associated with an InsightsConfig.
   * @param labels labels or {@code null} for none
   */
  public InsightsConfig setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. The name of the InsightsConfig. Format:
   * projects/{project}/locations/{location}/insightsConfigs/{insightsConfig}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The name of the InsightsConfig. Format:
   * projects/{project}/locations/{location}/insightsConfigs/{insightsConfig}
   * @param name name or {@code null} for none
   */
  public InsightsConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the
   * current state of InsightsConfig does not match the user's intended state, and the service is
   * actively updating the resource to reconcile them. This can happen due to user-triggered updates
   * or system actions like failover or maintenance.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReconciling() {
    return reconciling;
  }

  /**
   * Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the
   * current state of InsightsConfig does not match the user's intended state, and the service is
   * actively updating the resource to reconcile them. This can happen due to user-triggered updates
   * or system actions like failover or maintenance.
   * @param reconciling reconciling or {@code null} for none
   */
  public InsightsConfig setReconciling(java.lang.Boolean reconciling) {
    this.reconciling = reconciling;
    return this;
  }

  /**
   * Output only. The runtime configurations where the application is deployed.
   * @return value or {@code null} for none
   */
  public java.util.List<RuntimeConfig> getRuntimeConfigs() {
    return runtimeConfigs;
  }

  /**
   * Output only. The runtime configurations where the application is deployed.
   * @param runtimeConfigs runtimeConfigs or {@code null} for none
   */
  public InsightsConfig setRuntimeConfigs(java.util.List<RuntimeConfig> runtimeConfigs) {
    this.runtimeConfigs = runtimeConfigs;
    return this;
  }

  /**
   * Optional. Output only. The state of the InsightsConfig.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Optional. Output only. The state of the InsightsConfig.
   * @param state state or {@code null} for none
   */
  public InsightsConfig setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. [Output only] Update timestamp
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. [Output only] Update timestamp
   * @param updateTime updateTime or {@code null} for none
   */
  public InsightsConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public InsightsConfig set(String fieldName, Object value) {
    return (InsightsConfig) super.set(fieldName, value);
  }

  @Override
  public InsightsConfig clone() {
    return (InsightsConfig) super.clone();
  }

}
