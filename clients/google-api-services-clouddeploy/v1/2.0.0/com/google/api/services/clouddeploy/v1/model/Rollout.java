/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouddeploy.v1.model;

/**
 * A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains information around a specific
 * deployment to a `Target`.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Deploy API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Rollout extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The AutomationRun actively repairing the rollout.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String activeRepairAutomationRun;

  /**
   * Optional. User annotations. These attributes can only be set and used by the user, and not by
   * Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and
   * size limitations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Output only. Approval state of the `Rollout`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String approvalState;

  /**
   * Output only. Time at which the `Rollout` was approved.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String approveTime;

  /**
   * Output only. Name of the `ControllerRollout`. Format is `projects/{project}/locations/{location
   * }/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String controllerRollout;

  /**
   * Output only. Time at which the `Rollout` was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Time at which the `Rollout` finished deploying.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String deployEndTime;

  /**
   * Output only. The reason this rollout failed. This will always be unspecified while the rollout
   * is in progress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deployFailureCause;

  /**
   * Output only. Time at which the `Rollout` started deploying.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String deployStartTime;

  /**
   * Output only. The resource name of the Cloud Build `Build` object that is used to deploy the
   * Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deployingBuild;

  /**
   * Optional. Description of the `Rollout` for user purposes. Max length is 255 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. Time at which the `Rollout` was enqueued.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String enqueueTime;

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Output only. Additional information about the rollout failure, if available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String failureReason;

  /**
   * Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels
   * must meet the following constraints: * Keys and values can contain only lowercase letters,
   * numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and
   * international characters are allowed. * Keys must start with a lowercase letter or
   * international character. * Each resource is limited to a maximum of 64 labels. Both keys and
   * values are additionally constrained to be <= 128 bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. Metadata contains information about the rollout.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Metadata metadata;

  /**
   * Identifier. Name of the `Rollout`. Format is `projects/{project}/locations/{location}/deliveryP
   * ipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`. The `rollout` component
   * must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The phases that represent the workflows of this `Rollout`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Phase> phases;

  static {
    // hack to force ProGuard to consider Phase used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Phase.class);
  }

  /**
   * Output only. Name of the `Rollout` that is rolled back by this `Rollout`. Empty if this
   * `Rollout` wasn't created as a rollback.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rollbackOfRollout;

  /**
   * Output only. Names of `Rollouts` that rolled back this `Rollout`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> rolledBackByRollouts;

  /**
   * Output only. Current state of the `Rollout`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Required. The ID of Target to which this `Rollout` is deploying.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetId;

  /**
   * Output only. Unique identifier of the `Rollout`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. The AutomationRun actively repairing the rollout.
   * @return value or {@code null} for none
   */
  public java.lang.String getActiveRepairAutomationRun() {
    return activeRepairAutomationRun;
  }

  /**
   * Output only. The AutomationRun actively repairing the rollout.
   * @param activeRepairAutomationRun activeRepairAutomationRun or {@code null} for none
   */
  public Rollout setActiveRepairAutomationRun(java.lang.String activeRepairAutomationRun) {
    this.activeRepairAutomationRun = activeRepairAutomationRun;
    return this;
  }

  /**
   * Optional. User annotations. These attributes can only be set and used by the user, and not by
   * Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and
   * size limitations.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Optional. User annotations. These attributes can only be set and used by the user, and not by
   * Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and
   * size limitations.
   * @param annotations annotations or {@code null} for none
   */
  public Rollout setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Output only. Approval state of the `Rollout`.
   * @return value or {@code null} for none
   */
  public java.lang.String getApprovalState() {
    return approvalState;
  }

  /**
   * Output only. Approval state of the `Rollout`.
   * @param approvalState approvalState or {@code null} for none
   */
  public Rollout setApprovalState(java.lang.String approvalState) {
    this.approvalState = approvalState;
    return this;
  }

  /**
   * Output only. Time at which the `Rollout` was approved.
   * @return value or {@code null} for none
   */
  public String getApproveTime() {
    return approveTime;
  }

  /**
   * Output only. Time at which the `Rollout` was approved.
   * @param approveTime approveTime or {@code null} for none
   */
  public Rollout setApproveTime(String approveTime) {
    this.approveTime = approveTime;
    return this;
  }

  /**
   * Output only. Name of the `ControllerRollout`. Format is `projects/{project}/locations/{location
   * }/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getControllerRollout() {
    return controllerRollout;
  }

  /**
   * Output only. Name of the `ControllerRollout`. Format is `projects/{project}/locations/{location
   * }/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   * @param controllerRollout controllerRollout or {@code null} for none
   */
  public Rollout setControllerRollout(java.lang.String controllerRollout) {
    this.controllerRollout = controllerRollout;
    return this;
  }

  /**
   * Output only. Time at which the `Rollout` was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time at which the `Rollout` was created.
   * @param createTime createTime or {@code null} for none
   */
  public Rollout setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Time at which the `Rollout` finished deploying.
   * @return value or {@code null} for none
   */
  public String getDeployEndTime() {
    return deployEndTime;
  }

  /**
   * Output only. Time at which the `Rollout` finished deploying.
   * @param deployEndTime deployEndTime or {@code null} for none
   */
  public Rollout setDeployEndTime(String deployEndTime) {
    this.deployEndTime = deployEndTime;
    return this;
  }

  /**
   * Output only. The reason this rollout failed. This will always be unspecified while the rollout
   * is in progress.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeployFailureCause() {
    return deployFailureCause;
  }

  /**
   * Output only. The reason this rollout failed. This will always be unspecified while the rollout
   * is in progress.
   * @param deployFailureCause deployFailureCause or {@code null} for none
   */
  public Rollout setDeployFailureCause(java.lang.String deployFailureCause) {
    this.deployFailureCause = deployFailureCause;
    return this;
  }

  /**
   * Output only. Time at which the `Rollout` started deploying.
   * @return value or {@code null} for none
   */
  public String getDeployStartTime() {
    return deployStartTime;
  }

  /**
   * Output only. Time at which the `Rollout` started deploying.
   * @param deployStartTime deployStartTime or {@code null} for none
   */
  public Rollout setDeployStartTime(String deployStartTime) {
    this.deployStartTime = deployStartTime;
    return this;
  }

  /**
   * Output only. The resource name of the Cloud Build `Build` object that is used to deploy the
   * Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeployingBuild() {
    return deployingBuild;
  }

  /**
   * Output only. The resource name of the Cloud Build `Build` object that is used to deploy the
   * Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.
   * @param deployingBuild deployingBuild or {@code null} for none
   */
  public Rollout setDeployingBuild(java.lang.String deployingBuild) {
    this.deployingBuild = deployingBuild;
    return this;
  }

  /**
   * Optional. Description of the `Rollout` for user purposes. Max length is 255 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description of the `Rollout` for user purposes. Max length is 255 characters.
   * @param description description or {@code null} for none
   */
  public Rollout setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. Time at which the `Rollout` was enqueued.
   * @return value or {@code null} for none
   */
  public String getEnqueueTime() {
    return enqueueTime;
  }

  /**
   * Output only. Time at which the `Rollout` was enqueued.
   * @param enqueueTime enqueueTime or {@code null} for none
   */
  public Rollout setEnqueueTime(String enqueueTime) {
    this.enqueueTime = enqueueTime;
    return this;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public Rollout setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Output only. Additional information about the rollout failure, if available.
   * @return value or {@code null} for none
   */
  public java.lang.String getFailureReason() {
    return failureReason;
  }

  /**
   * Output only. Additional information about the rollout failure, if available.
   * @param failureReason failureReason or {@code null} for none
   */
  public Rollout setFailureReason(java.lang.String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels
   * must meet the following constraints: * Keys and values can contain only lowercase letters,
   * numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and
   * international characters are allowed. * Keys must start with a lowercase letter or
   * international character. * Each resource is limited to a maximum of 64 labels. Both keys and
   * values are additionally constrained to be <= 128 bytes.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels
   * must meet the following constraints: * Keys and values can contain only lowercase letters,
   * numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and
   * international characters are allowed. * Keys must start with a lowercase letter or
   * international character. * Each resource is limited to a maximum of 64 labels. Both keys and
   * values are additionally constrained to be <= 128 bytes.
   * @param labels labels or {@code null} for none
   */
  public Rollout setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. Metadata contains information about the rollout.
   * @return value or {@code null} for none
   */
  public Metadata getMetadata() {
    return metadata;
  }

  /**
   * Output only. Metadata contains information about the rollout.
   * @param metadata metadata or {@code null} for none
   */
  public Rollout setMetadata(Metadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Identifier. Name of the `Rollout`. Format is `projects/{project}/locations/{location}/deliveryP
   * ipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`. The `rollout` component
   * must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. Name of the `Rollout`. Format is `projects/{project}/locations/{location}/deliveryP
   * ipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`. The `rollout` component
   * must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
   * @param name name or {@code null} for none
   */
  public Rollout setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The phases that represent the workflows of this `Rollout`.
   * @return value or {@code null} for none
   */
  public java.util.List<Phase> getPhases() {
    return phases;
  }

  /**
   * Output only. The phases that represent the workflows of this `Rollout`.
   * @param phases phases or {@code null} for none
   */
  public Rollout setPhases(java.util.List<Phase> phases) {
    this.phases = phases;
    return this;
  }

  /**
   * Output only. Name of the `Rollout` that is rolled back by this `Rollout`. Empty if this
   * `Rollout` wasn't created as a rollback.
   * @return value or {@code null} for none
   */
  public java.lang.String getRollbackOfRollout() {
    return rollbackOfRollout;
  }

  /**
   * Output only. Name of the `Rollout` that is rolled back by this `Rollout`. Empty if this
   * `Rollout` wasn't created as a rollback.
   * @param rollbackOfRollout rollbackOfRollout or {@code null} for none
   */
  public Rollout setRollbackOfRollout(java.lang.String rollbackOfRollout) {
    this.rollbackOfRollout = rollbackOfRollout;
    return this;
  }

  /**
   * Output only. Names of `Rollouts` that rolled back this `Rollout`.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRolledBackByRollouts() {
    return rolledBackByRollouts;
  }

  /**
   * Output only. Names of `Rollouts` that rolled back this `Rollout`.
   * @param rolledBackByRollouts rolledBackByRollouts or {@code null} for none
   */
  public Rollout setRolledBackByRollouts(java.util.List<java.lang.String> rolledBackByRollouts) {
    this.rolledBackByRollouts = rolledBackByRollouts;
    return this;
  }

  /**
   * Output only. Current state of the `Rollout`.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Current state of the `Rollout`.
   * @param state state or {@code null} for none
   */
  public Rollout setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Required. The ID of Target to which this `Rollout` is deploying.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetId() {
    return targetId;
  }

  /**
   * Required. The ID of Target to which this `Rollout` is deploying.
   * @param targetId targetId or {@code null} for none
   */
  public Rollout setTargetId(java.lang.String targetId) {
    this.targetId = targetId;
    return this;
  }

  /**
   * Output only. Unique identifier of the `Rollout`.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. Unique identifier of the `Rollout`.
   * @param uid uid or {@code null} for none
   */
  public Rollout setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  @Override
  public Rollout set(String fieldName, Object value) {
    return (Rollout) super.set(fieldName, value);
  }

  @Override
  public Rollout clone() {
    return (Rollout) super.clone();
  }

}
