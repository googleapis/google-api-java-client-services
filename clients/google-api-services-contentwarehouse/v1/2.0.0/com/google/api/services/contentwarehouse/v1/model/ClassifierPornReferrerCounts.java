/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * ReferrerCounts stores how many referrers an images has and how many of them were classified as
 * porn and as adult/softporn respectively. Note that a referrer is usually a landing page, but as
 * of March 2011 this also includes referrers which an image can 'inherit' by propagating counts
 * from near duplicate images.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ClassifierPornReferrerCounts extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer adult;

  /**
   * Number of referrers which are classified as porn and as adult.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer porn;

  /**
   * Total number of referrers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer total;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAdult() {
    return adult;
  }

  /**
   * @param adult adult or {@code null} for none
   */
  public ClassifierPornReferrerCounts setAdult(java.lang.Integer adult) {
    this.adult = adult;
    return this;
  }

  /**
   * Number of referrers which are classified as porn and as adult.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPorn() {
    return porn;
  }

  /**
   * Number of referrers which are classified as porn and as adult.
   * @param porn porn or {@code null} for none
   */
  public ClassifierPornReferrerCounts setPorn(java.lang.Integer porn) {
    this.porn = porn;
    return this;
  }

  /**
   * Total number of referrers.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTotal() {
    return total;
  }

  /**
   * Total number of referrers.
   * @param total total or {@code null} for none
   */
  public ClassifierPornReferrerCounts setTotal(java.lang.Integer total) {
    this.total = total;
    return this;
  }

  @Override
  public ClassifierPornReferrerCounts set(String fieldName, Object value) {
    return (ClassifierPornReferrerCounts) super.set(fieldName, value);
  }

  @Override
  public ClassifierPornReferrerCounts clone() {
    return (ClassifierPornReferrerCounts) super.clone();
  }

}
