/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for QualityOrbitAsteroidBeltDocumentIntentScores.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityOrbitAsteroidBeltDocumentIntentScores extends com.google.api.client.json.GenericJson {

  /**
   * Map of imageid key to ImageIntentScores, for images on cdoc.doc_images
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, QualityOrbitAsteroidBeltImageIntentScores> imageIntentScores;

  /**
   * The 'intents' and 'scores' fields are stored as parallel lists for compactness. The 'scores'
   * field should not be accessed directly, but instead through the functions in
   * document_intent_scores_utils.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> intents;

  /**
   * The intent scores, scaled to integers between 0 and 100 for compactness.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> scores;

  /**
   * Version 0: Presence of an intent label in the 'intents' field represents our best-effort
   * classification. The 'scores' field is not meaningful. Version 1: Values in the 'scores' field
   * represent the estimated precision of the classifier for a threshold at that score.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer version;

  /**
   * Map of imageid key to ImageIntentScores, for images on cdoc.doc_images
   * @return value or {@code null} for none
   */
  public java.util.Map<String, QualityOrbitAsteroidBeltImageIntentScores> getImageIntentScores() {
    return imageIntentScores;
  }

  /**
   * Map of imageid key to ImageIntentScores, for images on cdoc.doc_images
   * @param imageIntentScores imageIntentScores or {@code null} for none
   */
  public QualityOrbitAsteroidBeltDocumentIntentScores setImageIntentScores(java.util.Map<String, QualityOrbitAsteroidBeltImageIntentScores> imageIntentScores) {
    this.imageIntentScores = imageIntentScores;
    return this;
  }

  /**
   * The 'intents' and 'scores' fields are stored as parallel lists for compactness. The 'scores'
   * field should not be accessed directly, but instead through the functions in
   * document_intent_scores_utils.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIntents() {
    return intents;
  }

  /**
   * The 'intents' and 'scores' fields are stored as parallel lists for compactness. The 'scores'
   * field should not be accessed directly, but instead through the functions in
   * document_intent_scores_utils.
   * @param intents intents or {@code null} for none
   */
  public QualityOrbitAsteroidBeltDocumentIntentScores setIntents(java.util.List<java.lang.String> intents) {
    this.intents = intents;
    return this;
  }

  /**
   * The intent scores, scaled to integers between 0 and 100 for compactness.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getScores() {
    return scores;
  }

  /**
   * The intent scores, scaled to integers between 0 and 100 for compactness.
   * @param scores scores or {@code null} for none
   */
  public QualityOrbitAsteroidBeltDocumentIntentScores setScores(java.util.List<java.lang.Integer> scores) {
    this.scores = scores;
    return this;
  }

  /**
   * Version 0: Presence of an intent label in the 'intents' field represents our best-effort
   * classification. The 'scores' field is not meaningful. Version 1: Values in the 'scores' field
   * represent the estimated precision of the classifier for a threshold at that score.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Version 0: Presence of an intent label in the 'intents' field represents our best-effort
   * classification. The 'scores' field is not meaningful. Version 1: Values in the 'scores' field
   * represent the estimated precision of the classifier for a threshold at that score.
   * @param version version or {@code null} for none
   */
  public QualityOrbitAsteroidBeltDocumentIntentScores setVersion(java.lang.Integer version) {
    this.version = version;
    return this;
  }

  @Override
  public QualityOrbitAsteroidBeltDocumentIntentScores set(String fieldName, Object value) {
    return (QualityOrbitAsteroidBeltDocumentIntentScores) super.set(fieldName, value);
  }

  @Override
  public QualityOrbitAsteroidBeltDocumentIntentScores clone() {
    return (QualityOrbitAsteroidBeltDocumentIntentScores) super.clone();
  }

}
