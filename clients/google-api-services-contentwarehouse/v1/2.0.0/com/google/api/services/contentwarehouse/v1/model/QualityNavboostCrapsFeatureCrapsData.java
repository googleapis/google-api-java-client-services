/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for QualityNavboostCrapsFeatureCrapsData.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityNavboostCrapsFeatureCrapsData extends com.google.api.client.json.GenericJson {

  /**
   * Country, like "us". If not present, it's an aggregation for all countries. This is the same
   * format as one used in Glue.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String country;

  /**
   * Device, like "m". If not present, it's an aggregation for all devices. "m" - mobile devices.
   * "d" - destop devices.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String device;

  /**
   * Language, like "en". If not present, it's an aggregation for all languages. This is the same
   * format as one used in Glue.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String language;

  /**
   * Location id for metro and city. If not present, it's an aggregation for all locations within
   * current country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer locationId;

  /**
   * CRAPS Signals for the locale.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityNavboostCrapsCrapsClickSignals signals;

  /**
   * Country, like "us". If not present, it's an aggregation for all countries. This is the same
   * format as one used in Glue.
   * @return value or {@code null} for none
   */
  public java.lang.String getCountry() {
    return country;
  }

  /**
   * Country, like "us". If not present, it's an aggregation for all countries. This is the same
   * format as one used in Glue.
   * @param country country or {@code null} for none
   */
  public QualityNavboostCrapsFeatureCrapsData setCountry(java.lang.String country) {
    this.country = country;
    return this;
  }

  /**
   * Device, like "m". If not present, it's an aggregation for all devices. "m" - mobile devices.
   * "d" - destop devices.
   * @return value or {@code null} for none
   */
  public java.lang.String getDevice() {
    return device;
  }

  /**
   * Device, like "m". If not present, it's an aggregation for all devices. "m" - mobile devices.
   * "d" - destop devices.
   * @param device device or {@code null} for none
   */
  public QualityNavboostCrapsFeatureCrapsData setDevice(java.lang.String device) {
    this.device = device;
    return this;
  }

  /**
   * Language, like "en". If not present, it's an aggregation for all languages. This is the same
   * format as one used in Glue.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguage() {
    return language;
  }

  /**
   * Language, like "en". If not present, it's an aggregation for all languages. This is the same
   * format as one used in Glue.
   * @param language language or {@code null} for none
   */
  public QualityNavboostCrapsFeatureCrapsData setLanguage(java.lang.String language) {
    this.language = language;
    return this;
  }

  /**
   * Location id for metro and city. If not present, it's an aggregation for all locations within
   * current country.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLocationId() {
    return locationId;
  }

  /**
   * Location id for metro and city. If not present, it's an aggregation for all locations within
   * current country.
   * @param locationId locationId or {@code null} for none
   */
  public QualityNavboostCrapsFeatureCrapsData setLocationId(java.lang.Integer locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * CRAPS Signals for the locale.
   * @return value or {@code null} for none
   */
  public QualityNavboostCrapsCrapsClickSignals getSignals() {
    return signals;
  }

  /**
   * CRAPS Signals for the locale.
   * @param signals signals or {@code null} for none
   */
  public QualityNavboostCrapsFeatureCrapsData setSignals(QualityNavboostCrapsCrapsClickSignals signals) {
    this.signals = signals;
    return this;
  }

  @Override
  public QualityNavboostCrapsFeatureCrapsData set(String fieldName, Object value) {
    return (QualityNavboostCrapsFeatureCrapsData) super.set(fieldName, value);
  }

  @Override
  public QualityNavboostCrapsFeatureCrapsData clone() {
    return (QualityNavboostCrapsFeatureCrapsData) super.clone();
  }

}
