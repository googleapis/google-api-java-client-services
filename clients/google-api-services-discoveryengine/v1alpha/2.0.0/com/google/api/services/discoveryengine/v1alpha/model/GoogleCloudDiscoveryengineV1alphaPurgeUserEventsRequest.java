/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha.model;

/**
 * Request message for PurgeUserEvents method.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest extends com.google.api.client.json.GenericJson {

  /**
   * Required. The filter string to specify the events to be deleted with a length limit of 5,000
   * characters. The eligible fields for filtering are: * `eventType`: Double quoted
   * UserEvent.event_type string. * `eventTime`: in ISO 8601 "zulu" format. * `userPseudoId`: Double
   * quoted string. Specifying this will delete all events associated with a visitor. * `userId`:
   * Double quoted string. Specifying this will delete all events associated with a user. Examples:
   * * Deleting all events in a time range: `eventTime > "2012-04-23T18:25:43.511Z" eventTime <
   * "2012-04-23T18:30:43.511Z"` * Deleting specific eventType: `eventType = "search"` * Deleting
   * all events for a specific visitor: `userPseudoId = "visitor1024"` * Deleting all events inside
   * a DataStore: `*` The filtering fields are assumed to have an implicit AND.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * The `force` field is currently not supported. Purge user event requests will permanently delete
   * all purgeable events. Once the development is complete: If `force` is set to false, the method
   * will return the expected purge count without deleting any user events. This field will default
   * to false if not included in the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean force;

  /**
   * Required. The filter string to specify the events to be deleted with a length limit of 5,000
   * characters. The eligible fields for filtering are: * `eventType`: Double quoted
   * UserEvent.event_type string. * `eventTime`: in ISO 8601 "zulu" format. * `userPseudoId`: Double
   * quoted string. Specifying this will delete all events associated with a visitor. * `userId`:
   * Double quoted string. Specifying this will delete all events associated with a user. Examples:
   * * Deleting all events in a time range: `eventTime > "2012-04-23T18:25:43.511Z" eventTime <
   * "2012-04-23T18:30:43.511Z"` * Deleting specific eventType: `eventType = "search"` * Deleting
   * all events for a specific visitor: `userPseudoId = "visitor1024"` * Deleting all events inside
   * a DataStore: `*` The filtering fields are assumed to have an implicit AND.
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * Required. The filter string to specify the events to be deleted with a length limit of 5,000
   * characters. The eligible fields for filtering are: * `eventType`: Double quoted
   * UserEvent.event_type string. * `eventTime`: in ISO 8601 "zulu" format. * `userPseudoId`: Double
   * quoted string. Specifying this will delete all events associated with a visitor. * `userId`:
   * Double quoted string. Specifying this will delete all events associated with a user. Examples:
   * * Deleting all events in a time range: `eventTime > "2012-04-23T18:25:43.511Z" eventTime <
   * "2012-04-23T18:30:43.511Z"` * Deleting specific eventType: `eventType = "search"` * Deleting
   * all events for a specific visitor: `userPseudoId = "visitor1024"` * Deleting all events inside
   * a DataStore: `*` The filtering fields are assumed to have an implicit AND.
   * @param filter filter or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * The `force` field is currently not supported. Purge user event requests will permanently delete
   * all purgeable events. Once the development is complete: If `force` is set to false, the method
   * will return the expected purge count without deleting any user events. This field will default
   * to false if not included in the request.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getForce() {
    return force;
  }

  /**
   * The `force` field is currently not supported. Purge user event requests will permanently delete
   * all purgeable events. Once the development is complete: If `force` is set to false, the method
   * will return the expected purge count without deleting any user events. This field will default
   * to false if not included in the request.
   * @param force force or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest setForce(java.lang.Boolean force) {
    this.force = force;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest clone() {
    return (GoogleCloudDiscoveryengineV1alphaPurgeUserEventsRequest) super.clone();
  }

}
