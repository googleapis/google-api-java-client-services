/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.displayvideo.v2.model;

/**
 * A single YouTube ad group associated with a YouTube and Partners line item.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Display & Video 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class YoutubeAdGroup extends com.google.api.client.json.GenericJson {

  /**
   * The format of the ad group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String adGroupFormat;

  /**
   * The unique ID of the ad group. Assigned by the system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long adGroupId;

  /**
   * The unique ID of the advertiser the ad group belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long advertiserId;

  /**
   * The bidding strategy of the ad group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private YoutubeAndPartnersBiddingStrategy biddingStrategy;

  /**
   * The display name of the ad group. Must be UTF-8 encoded with a maximum size of 255 bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Controls whether or not the ad group can spend its budget and bid on inventory. If the ad
   * group's parent line item is not active, the ad group can't spend its budget even if its own
   * status is `ENTITY_STATUS_ACTIVE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entityStatus;

  /**
   * The unique ID of the line item that the ad group belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long lineItemId;

  /**
   * The resource name of the ad group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The data to represent the product feed in this ad group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ProductFeedData productFeedData;

  /**
   * The [targeting expansion](https://support.google.com/displayvideo/answer/10191558) settings of
   * the ad group. This config is only applicable when eligible audience list targeting is assigned
   * to the ad group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TargetingExpansionConfig targetingExpansion;

  /**
   * The IDs of the YouTubeAds associated with the ad group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> youtubeAdIds;

  /**
   * The format of the ad group.
   * @return value or {@code null} for none
   */
  public java.lang.String getAdGroupFormat() {
    return adGroupFormat;
  }

  /**
   * The format of the ad group.
   * @param adGroupFormat adGroupFormat or {@code null} for none
   */
  public YoutubeAdGroup setAdGroupFormat(java.lang.String adGroupFormat) {
    this.adGroupFormat = adGroupFormat;
    return this;
  }

  /**
   * The unique ID of the ad group. Assigned by the system.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAdGroupId() {
    return adGroupId;
  }

  /**
   * The unique ID of the ad group. Assigned by the system.
   * @param adGroupId adGroupId or {@code null} for none
   */
  public YoutubeAdGroup setAdGroupId(java.lang.Long adGroupId) {
    this.adGroupId = adGroupId;
    return this;
  }

  /**
   * The unique ID of the advertiser the ad group belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAdvertiserId() {
    return advertiserId;
  }

  /**
   * The unique ID of the advertiser the ad group belongs to.
   * @param advertiserId advertiserId or {@code null} for none
   */
  public YoutubeAdGroup setAdvertiserId(java.lang.Long advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * The bidding strategy of the ad group.
   * @return value or {@code null} for none
   */
  public YoutubeAndPartnersBiddingStrategy getBiddingStrategy() {
    return biddingStrategy;
  }

  /**
   * The bidding strategy of the ad group.
   * @param biddingStrategy biddingStrategy or {@code null} for none
   */
  public YoutubeAdGroup setBiddingStrategy(YoutubeAndPartnersBiddingStrategy biddingStrategy) {
    this.biddingStrategy = biddingStrategy;
    return this;
  }

  /**
   * The display name of the ad group. Must be UTF-8 encoded with a maximum size of 255 bytes.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The display name of the ad group. Must be UTF-8 encoded with a maximum size of 255 bytes.
   * @param displayName displayName or {@code null} for none
   */
  public YoutubeAdGroup setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Controls whether or not the ad group can spend its budget and bid on inventory. If the ad
   * group's parent line item is not active, the ad group can't spend its budget even if its own
   * status is `ENTITY_STATUS_ACTIVE`.
   * @return value or {@code null} for none
   */
  public java.lang.String getEntityStatus() {
    return entityStatus;
  }

  /**
   * Controls whether or not the ad group can spend its budget and bid on inventory. If the ad
   * group's parent line item is not active, the ad group can't spend its budget even if its own
   * status is `ENTITY_STATUS_ACTIVE`.
   * @param entityStatus entityStatus or {@code null} for none
   */
  public YoutubeAdGroup setEntityStatus(java.lang.String entityStatus) {
    this.entityStatus = entityStatus;
    return this;
  }

  /**
   * The unique ID of the line item that the ad group belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLineItemId() {
    return lineItemId;
  }

  /**
   * The unique ID of the line item that the ad group belongs to.
   * @param lineItemId lineItemId or {@code null} for none
   */
  public YoutubeAdGroup setLineItemId(java.lang.Long lineItemId) {
    this.lineItemId = lineItemId;
    return this;
  }

  /**
   * The resource name of the ad group.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name of the ad group.
   * @param name name or {@code null} for none
   */
  public YoutubeAdGroup setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The data to represent the product feed in this ad group.
   * @return value or {@code null} for none
   */
  public ProductFeedData getProductFeedData() {
    return productFeedData;
  }

  /**
   * The data to represent the product feed in this ad group.
   * @param productFeedData productFeedData or {@code null} for none
   */
  public YoutubeAdGroup setProductFeedData(ProductFeedData productFeedData) {
    this.productFeedData = productFeedData;
    return this;
  }

  /**
   * The [targeting expansion](https://support.google.com/displayvideo/answer/10191558) settings of
   * the ad group. This config is only applicable when eligible audience list targeting is assigned
   * to the ad group.
   * @return value or {@code null} for none
   */
  public TargetingExpansionConfig getTargetingExpansion() {
    return targetingExpansion;
  }

  /**
   * The [targeting expansion](https://support.google.com/displayvideo/answer/10191558) settings of
   * the ad group. This config is only applicable when eligible audience list targeting is assigned
   * to the ad group.
   * @param targetingExpansion targetingExpansion or {@code null} for none
   */
  public YoutubeAdGroup setTargetingExpansion(TargetingExpansionConfig targetingExpansion) {
    this.targetingExpansion = targetingExpansion;
    return this;
  }

  /**
   * The IDs of the YouTubeAds associated with the ad group.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getYoutubeAdIds() {
    return youtubeAdIds;
  }

  /**
   * The IDs of the YouTubeAds associated with the ad group.
   * @param youtubeAdIds youtubeAdIds or {@code null} for none
   */
  public YoutubeAdGroup setYoutubeAdIds(java.util.List<java.lang.Long> youtubeAdIds) {
    this.youtubeAdIds = youtubeAdIds;
    return this;
  }

  @Override
  public YoutubeAdGroup set(String fieldName, Object value) {
    return (YoutubeAdGroup) super.set(fieldName, value);
  }

  @Override
  public YoutubeAdGroup clone() {
    return (YoutubeAdGroup) super.clone();
  }

}
