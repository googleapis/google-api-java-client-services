{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://osconfig.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "osconfig",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud OS Config API",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "resources": {
        "patchJobs": {
          "methods": {
            "get": {
              "id": "osconfig.projects.patchJobs.get",
              "path": "v1beta/{+name}",
              "description": "Get the patch job. This can be used to track the progress of an\nongoing patch job or review the details of completed jobs.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "PatchJob"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/patchJobs/{patchJobsId}"
            },
            "list": {
              "description": "Get a list of patch jobs.",
              "response": {
                "$ref": "ListPatchJobsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call\nthat indicates where this listing should continue from.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of instance status to return.",
                  "format": "int32",
                  "type": "integer"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. In the form of `projects/*`",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "If provided, this field specifies the criteria that must be met by patch\njobs to be included in the response.\nCurrently, filtering is only available on the patch_deployment field."
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/patchJobs",
              "path": "v1beta/{+parent}/patchJobs",
              "id": "osconfig.projects.patchJobs.list"
            },
            "execute": {
              "flatPath": "v1beta/projects/{projectsId}/patchJobs:execute",
              "id": "osconfig.projects.patchJobs.execute",
              "path": "v1beta/{+parent}/patchJobs:execute",
              "request": {
                "$ref": "ExecutePatchJobRequest"
              },
              "description": "Patch VM instances by creating and running a patch job.",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "PatchJob"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. The project in which to run this patch in the form `projects/*`",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "cancel": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$"
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/patchJobs/{patchJobsId}:cancel",
              "path": "v1beta/{+name}:cancel",
              "id": "osconfig.projects.patchJobs.cancel",
              "request": {
                "$ref": "CancelPatchJobRequest"
              },
              "description": "Cancel a patch job. The patch job must be active. Canceled patch jobs\ncannot be restarted.",
              "response": {
                "$ref": "PatchJob"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST"
            }
          },
          "resources": {
            "instanceDetails": {
              "methods": {
                "list": {
                  "id": "osconfig.projects.patchJobs.instanceDetails.list",
                  "path": "v1beta/{+parent}/instanceDetails",
                  "description": "Get a list of instance details for a given patch job.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListPatchJobInstanceDetailsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call\nthat indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of instance details records to return.  Default is 100.",
                      "format": "int32"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent for the instances are in the form of `projects/*/patchJobs/*`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/patchJobs/[^/]+$"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter expression that filters results listed in the response. This\nfield supports filtering results by instance zone, name, state, or\n`failure_reason`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/patchJobs/{patchJobsId}/instanceDetails"
                }
              }
            }
          }
        },
        "zones": {
          "resources": {
            "instances": {
              "methods": {
                "lookupEffectiveGuestPolicy": {
                  "parameters": {
                    "instance": {
                      "pattern": "^projects/[^/]+/zones/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. The VM instance whose policies are being looked up.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/zones/{zonesId}/instances/{instancesId}:lookupEffectiveGuestPolicy",
                  "path": "v1beta/{+instance}:lookupEffectiveGuestPolicy",
                  "id": "osconfig.projects.zones.instances.lookupEffectiveGuestPolicy",
                  "description": "Lookup the effective guest policy that applies to a VM instance. This\nlookup merges all policies that are assigned to the instance ancestry.",
                  "request": {
                    "$ref": "LookupEffectiveGuestPolicyRequest"
                  },
                  "response": {
                    "$ref": "EffectiveGuestPolicy"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "httpMethod": "POST"
                }
              }
            }
          }
        },
        "patchDeployments": {
          "methods": {
            "delete": {
              "description": "Delete an OS Config patch deployment.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the patch deployment in the form\n`projects/*/patchDeployments/*`."
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "path": "v1beta/{+name}",
              "id": "osconfig.projects.patchDeployments.delete"
            },
            "get": {
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the patch deployment in the form\n`projects/*/patchDeployments/*`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "id": "osconfig.projects.patchDeployments.get",
              "path": "v1beta/{+name}",
              "description": "Get an OS Config patch deployment.",
              "httpMethod": "GET",
              "response": {
                "$ref": "PatchDeployment"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "path": "v1beta/{+parent}/patchDeployments",
              "id": "osconfig.projects.patchDeployments.list",
              "description": "Get a page of OS Config patch deployments.",
              "response": {
                "$ref": "ListPatchDeploymentsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Optional. A pagination token returned from a previous call to ListPatchDeployments\nthat indicates where this listing should continue from.",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Optional. The maximum number of patch deployments to return. Default is 100.",
                  "format": "int32"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the parent in the form `projects/*`."
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/patchDeployments"
            },
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "PatchDeployment"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The project to apply this patch deployment to in the form `projects/*`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "patchDeploymentId": {
                  "description": "Required. A name for the patch deployment in the project. When creating a name\nthe following rules apply:\n* Must contain only lowercase letters, numbers, and hyphens.\n* Must start with a letter.\n* Must be between 1-63 characters.\n* Must end with a number or a letter.\n* Must be unique within the project.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta/projects/{projectsId}/patchDeployments",
              "id": "osconfig.projects.patchDeployments.create",
              "path": "v1beta/{+parent}/patchDeployments",
              "description": "Create an OS Config patch deployment.",
              "request": {
                "$ref": "PatchDeployment"
              }
            }
          }
        },
        "guestPolicies": {
          "methods": {
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "guestPolicyId": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. The logical name of the guest policy in the project\nwith the following restrictions:\n\n* Must contain only lowercase letters, numbers, and hyphens.\n* Must start with a letter.\n* Must be between 1-63 characters.\n* Must end with a number or a letter.\n* Must be unique within the project."
                },
                "parent": {
                  "location": "path",
                  "description": "Required. The resource name of the parent using one of the following forms:\n`projects/{project_number}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies",
              "id": "osconfig.projects.guestPolicies.create",
              "path": "v1beta/{+parent}/guestPolicies",
              "request": {
                "$ref": "GuestPolicy"
              },
              "description": "Create an OS Config guest policy."
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/guestPolicies/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the guest policy  using one of the following forms:\n`projects/{project_number}/guestPolicies/{guest_policy_id}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies/{guestPoliciesId}",
              "path": "v1beta/{+name}",
              "id": "osconfig.projects.guestPolicies.delete",
              "description": "Delete an OS Config guest policy."
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/guestPolicies/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the guest policy using one of the following forms:\n`projects/{project_number}/guestPolicies/{guest_policy_id}`."
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies/{guestPoliciesId}",
              "id": "osconfig.projects.guestPolicies.get",
              "path": "v1beta/{+name}",
              "description": "Get an OS Config guest policy.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GuestPolicy"
              }
            },
            "list": {
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies",
              "id": "osconfig.projects.guestPolicies.list",
              "path": "v1beta/{+parent}/guestPolicies",
              "description": "Get a page of OS Config guest policies.",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListGuestPoliciesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the parent using one of the following forms:\n`projects/{project_number}`.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to `ListGuestPolicies`\nthat indicates where this listing should continue from.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of guest policies to return.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "patch": {
              "response": {
                "$ref": "GuestPolicy"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "description": "Field mask that controls which fields of the guest policy should be\nupdated.",
                  "format": "google-fieldmask",
                  "type": "string"
                },
                "name": {
                  "description": "Required. Unique name of the resource in this project using one of the following\nforms:\n`projects/{project_number}/guestPolicies/{guest_policy_id}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/guestPolicies/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies/{guestPoliciesId}",
              "path": "v1beta/{+name}",
              "id": "osconfig.projects.guestPolicies.patch",
              "request": {
                "$ref": "GuestPolicy"
              },
              "description": "Update an OS Config guest policy."
            }
          }
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    }
  },
  "version": "v1beta",
  "baseUrl": "https://osconfig.googleapis.com/",
  "servicePath": "",
  "description": "OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.",
  "kind": "discovery#restDescription",
  "basePath": "",
  "revision": "20200207",
  "documentationLink": "https://cloud.google.com/",
  "id": "osconfig:v1beta",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "ZypperSettings": {
      "id": "ZypperSettings",
      "description": "Zypper patching is performed by running `zypper patch`.\nSee also https://en.opensuse.org/SDB:Zypper_manual.",
      "type": "object",
      "properties": {
        "categories": {
          "description": "Install only patches with these categories.\nCommon categories include security, recommended, and feature.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclusivePatches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An exclusive list of patches to be updated. These are the only patches\nthat will be installed using 'zypper patch patch:\u003cpatch_name\u003e' command.\nThis field must not be used with any other patch configuration fields."
        },
        "excludes": {
          "description": "List of patches to exclude from update.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "withUpdate": {
          "description": "Adds the `--with-update` flag, to `zypper patch`.",
          "type": "boolean"
        },
        "withOptional": {
          "description": "Adds the `--with-optional` flag to `zypper patch`.",
          "type": "boolean"
        },
        "severities": {
          "description": "Install only patches with these severities.\nCommon severities include critical, important, moderate, and low.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EffectiveGuestPolicySourcedPackage": {
      "description": "A guest policy package including its source.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Name of the guest policy providing this config.",
          "type": "string"
        },
        "package": {
          "$ref": "Package",
          "description": "A software package to configure on the VM instance."
        }
      },
      "id": "EffectiveGuestPolicySourcedPackage"
    },
    "SoftwareRecipe": {
      "description": "A software recipe is a set of instructions for installing and configuring a\npiece of software. It consists of a set of artifacts that are\ndownloaded, and a set of steps that install, configure, and/or update the\nsoftware.\n\nRecipes support installing and updating software from artifacts in the\nfollowing formats:\nZip archive, Tar archive, Windows MSI, Debian package, and RPM package.\n\nAdditionally, recipes support executing a script (either defined in a file or\ndirectly in this api) in bash, sh, cmd, and powershell.\n\nUpdating a software recipe\n\nIf a recipe is assigned to an instance and there is a recipe with the same\nname but a lower version already installed and the assigned state\nof the recipe is `INSTALLED_KEEP_UPDATED`, then the recipe is updated to\nthe new version.\n\nScript Working Directories\n\nEach script or execution step is run in its own temporary directory which\nis deleted after completing the step.",
      "type": "object",
      "properties": {
        "artifacts": {
          "description": "Resources available to be used in the steps in the recipe.",
          "type": "array",
          "items": {
            "$ref": "SoftwareRecipeArtifact"
          }
        },
        "installSteps": {
          "description": "Actions to be taken for installing this recipe. On failure it stops\nexecuting steps and does not attempt another installation. Any steps taken\n(including partially completed steps) are not rolled back.",
          "type": "array",
          "items": {
            "$ref": "SoftwareRecipeStep"
          }
        },
        "name": {
          "description": "Required. Unique identifier for the recipe. Only one recipe with a given name is\ninstalled on an instance.\n\nNames are also used to identify resources which helps to determine whether\nguest policies have conflicts. This means that requests to create multiple\nrecipes with the same name and version are rejected since they\ncould potentially have conflicting assignments.",
          "type": "string"
        },
        "updateSteps": {
          "type": "array",
          "items": {
            "$ref": "SoftwareRecipeStep"
          },
          "description": "Actions to be taken for updating this recipe. On failure it stops\nexecuting steps and  does not attempt another update for this recipe. Any\nsteps taken (including partially completed steps) are not rolled back."
        },
        "desiredState": {
          "description": "Default is INSTALLED. The desired state the agent should maintain for this\nrecipe.\n\nINSTALLED: The software recipe is installed on the instance but\n           won't be updated to new versions.\nINSTALLED_KEEP_UPDATED: The software recipe is installed on the\n                        instance. The recipe is updated to a higher\n                        version, if a higher version of the recipe is\n                        assigned to this instance.\nREMOVE: Remove is unsupported for software recipes and attempts to\n        create or update a recipe to the REMOVE state is rejected.",
          "type": "string",
          "enumDescriptions": [
            "The default is to ensure the package is installed.",
            "The agent ensures that the package is installed.",
            "The agent ensures that the package is installed and\nperiodically checks for and install any updates.",
            "The agent ensures that the package is not installed and uninstall it\nif detected."
          ],
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "INSTALLED",
            "UPDATED",
            "REMOVED"
          ]
        },
        "version": {
          "description": "The version of this software recipe. Version can be up to 4 period\nseparated numbers (e.g. 12.34.56.78).",
          "type": "string"
        }
      },
      "id": "SoftwareRecipe"
    },
    "EffectiveGuestPolicy": {
      "type": "object",
      "properties": {
        "packageRepositories": {
          "description": "List of package repository configurations assigned to the VM instance.",
          "type": "array",
          "items": {
            "$ref": "EffectiveGuestPolicySourcedPackageRepository"
          }
        },
        "packages": {
          "description": "List of package configurations assigned to the VM instance.",
          "type": "array",
          "items": {
            "$ref": "EffectiveGuestPolicySourcedPackage"
          }
        },
        "softwareRecipes": {
          "description": "List of recipes assigned to the VM instance.",
          "type": "array",
          "items": {
            "$ref": "EffectiveGuestPolicySourcedSoftwareRecipe"
          }
        }
      },
      "id": "EffectiveGuestPolicy",
      "description": "The effective guest policy that applies to a VM instance."
    },
    "ListGuestPoliciesResponse": {
      "id": "ListGuestPoliciesResponse",
      "description": "A response message for listing guest policies.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page\nof guest policies.",
          "type": "string"
        },
        "guestPolicies": {
          "description": "The list of GuestPolicies.",
          "type": "array",
          "items": {
            "$ref": "GuestPolicy"
          }
        }
      }
    },
    "SoftwareRecipeArtifact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. Id of the artifact, which the installation and update steps of this\nrecipe can reference. Artifacts in a recipe cannot have the same id."
        },
        "allowInsecure": {
          "description": "Defaults to false. When false, recipes are subject to validations\nbased on the artifact type:\n\nRemote: A checksum must be specified, and only protocols with\ntransport-layer security are permitted.\nGCS:    An object generation number must be specified.",
          "type": "boolean"
        },
        "remote": {
          "$ref": "SoftwareRecipeArtifactRemote",
          "description": "A generic remote artifact."
        },
        "gcs": {
          "description": "A Google Cloud Storage artifact.",
          "$ref": "SoftwareRecipeArtifactGcs"
        }
      },
      "id": "SoftwareRecipeArtifact",
      "description": "Specifies a resource to be used in the recipe."
    },
    "SoftwareRecipeStepCopyFile": {
      "description": "Copies the artifact to the specified path on the instance.",
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "Required. The id of the relevant artifact in the recipe.",
          "type": "string"
        },
        "overwrite": {
          "type": "boolean",
          "description": "Whether to allow this step to overwrite existing files. If this is\nfalse and the file already exists the file is not overwritten\nand the step is considered a success. Defaults to false."
        },
        "destination": {
          "type": "string",
          "description": "Required. The absolute path on the instance to put the file."
        },
        "permissions": {
          "type": "string",
          "description": "Consists of three octal digits which represent, in\norder, the permissions of the owner, group, and other users for the\nfile (similarly to the numeric mode used in the linux chmod utility).\nEach digit represents a three bit number with the 4 bit\ncorresponding to the read permissions, the 2 bit corresponds to the\nwrite bit, and the one bit corresponds to the execute permission.\nDefault behavior is 755.\n\nBelow are some examples of permissions and their associated values:\nread, write, and execute: 7\nread and execute: 5\nread and write: 6\nread only: 4"
        }
      },
      "id": "SoftwareRecipeStepCopyFile"
    },
    "PatchInstanceFilter": {
      "type": "object",
      "properties": {
        "all": {
          "description": "Target all VM instances in the project. If true, no other criteria is\npermitted.",
          "type": "boolean"
        },
        "instances": {
          "description": "Targets any of the VM instances specified. Instances are specified by their\nURI in the form `zones/[ZONE]/instances/[INSTANCE_NAME],\n`projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or\n`https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instanceNamePrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Targets VMs whose name starts with one of these prefixes. Similar to\nlabels, this is another way to group VMs when targeting configs, for\nexample prefix=\"prod-\"."
        },
        "zones": {
          "description": "Targets VM instances in ANY of these zones. Leave empty to target VM\ninstances in any zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupLabels": {
          "type": "array",
          "items": {
            "$ref": "PatchInstanceFilterGroupLabel"
          },
          "description": "Targets VM instances matching at least one of these label sets. This allows\ntargeting of disparate groups, for example \"env=prod or env=staging\"."
        }
      },
      "id": "PatchInstanceFilter",
      "description": "A filter to target VM instances for patching. The targeted\nVMs must meet all criteria specified. So if both labels and zones are\nspecified, the patch job targets only VMs with those labels and in those\nzones."
    },
    "ListPatchJobInstanceDetailsResponse": {
      "description": "A response message for listing the instances details for a patch job.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of results.",
          "type": "string"
        },
        "patchJobInstanceDetails": {
          "type": "array",
          "items": {
            "$ref": "PatchJobInstanceDetails"
          },
          "description": "A list of instance status."
        }
      },
      "id": "ListPatchJobInstanceDetailsResponse"
    },
    "Assignment": {
      "id": "Assignment",
      "description": "An assignment represents the group or groups of VM instances that the policy\napplies to.\n\nIf an assignment is empty, it applies to all VM instances. Otherwise, the\ntargeted VM instances must meet all the criteria specified. So if both\nlabels and zones are specified, the policy applies to VM instances with those\nlabels and in those zones.",
      "type": "object",
      "properties": {
        "zones": {
          "description": "Targets instances in any of these zones. Leave empty to target instances\nin any zone.\n\nZonal targeting is uncommon and is supported to facilitate the management\nof changes by zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupLabels": {
          "description": "Targets instances matching at least one of these label sets. This allows\nan assignment to target disparate groups, for example \"env=prod or\nenv=staging\".",
          "type": "array",
          "items": {
            "$ref": "AssignmentGroupLabel"
          }
        },
        "osTypes": {
          "description": "Targets VM instances matching at least one of the following OS types.\n\nVM instances must match all supplied criteria for a given OsType to be\nincluded.",
          "type": "array",
          "items": {
            "$ref": "AssignmentOsType"
          }
        },
        "instances": {
          "description": "Targets any of the instances specified. Instances are specified by their\nURI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`.\n\nInstance targeting is uncommon and is supported to facilitate the\nmanagement of changes by the instance or to target specific VM instances\nfor development and testing.\n\nOnly supported for project-level policies and must reference instances\nwithin this project.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instanceNamePrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Targets VM instances whose name starts with one of these prefixes.\n\nLike labels, this is another way to group VM instances when targeting\nconfigs, for example prefix=\"prod-\".\n\nOnly supported for project-level policies."
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "AssignmentOsType": {
      "type": "object",
      "properties": {
        "osVersion": {
          "description": "Targets VM instances with OS Inventory enabled and having the following\nfollowing OS version.",
          "type": "string"
        },
        "osShortName": {
          "description": "Targets VM instances with OS Inventory enabled and having the following\nOS short name, for example \"debian\" or \"windows\".",
          "type": "string"
        },
        "osArchitecture": {
          "type": "string",
          "description": "Targets VM instances with OS Inventory enabled and having the following\nOS architecture."
        }
      },
      "id": "AssignmentOsType",
      "description": "Defines the criteria for selecting VM Instances by OS type."
    },
    "AptRepository": {
      "type": "object",
      "properties": {
        "gpgKey": {
          "description": "URI of the key file for this repository. The agent maintains\na keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg` containing\nall the keys in any applied guest policy.",
          "type": "string"
        },
        "distribution": {
          "description": "Required. Distribution of this repository.",
          "type": "string"
        },
        "components": {
          "description": "Required. List of components for this repository. Must contain at least one item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archiveType": {
          "description": "Type of archive files in this repository. The default behavior is DEB.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "DEB indicates that the archive contains binary files.",
            "DEB_SRC indicates that the archive contains source files."
          ],
          "enum": [
            "ARCHIVE_TYPE_UNSPECIFIED",
            "DEB",
            "DEB_SRC"
          ]
        },
        "uri": {
          "type": "string",
          "description": "Required. URI for this repository."
        }
      },
      "id": "AptRepository",
      "description": "Represents a single Apt package repository. This repository is added to\na repo file that is stored at\n`/etc/apt/sources.list.d/google_osconfig.list`."
    },
    "GooRepository": {
      "description": "Represents a Goo package repository. These is added to a repo file\nthat is stored at C:/ProgramData/GooGet/repos/google_osconfig.repo.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the repository.",
          "type": "string"
        },
        "url": {
          "description": "Required. The url of the repository.",
          "type": "string"
        }
      },
      "id": "GooRepository"
    },
    "WeeklySchedule": {
      "description": "Represents a weekly schedule.",
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "description": "Required. Day of the week.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified day-of-week.",
            "The day-of-week of Monday.",
            "The day-of-week of Tuesday.",
            "The day-of-week of Wednesday.",
            "The day-of-week of Thursday.",
            "The day-of-week of Friday.",
            "The day-of-week of Saturday.",
            "The day-of-week of Sunday."
          ]
        }
      },
      "id": "WeeklySchedule"
    },
    "PatchJob": {
      "description": "A high level representation of a patch job that is either in progress\nor has completed.\n\nInstances details are not included in the job. To paginate through instance\ndetails, use ListPatchJobInstanceDetails.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the patch job. Length of the description is limited\nto 1024 characters.",
          "type": "string"
        },
        "percentComplete": {
          "description": "Reflects the overall progress of the patch job in the range of\n0.0 being no progress to 100.0 being complete.",
          "format": "double",
          "type": "number"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "INSTANCE_LOOKUP",
            "PATCHING",
            "SUCCEEDED",
            "COMPLETED_WITH_ERRORS",
            "CANCELED",
            "TIMED_OUT"
          ],
          "description": "The current state of the PatchJob .",
          "type": "string",
          "enumDescriptions": [
            "State must be specified.",
            "The patch job was successfully initiated.",
            "The patch job is looking up instances to run the patch on.",
            "Instances are being patched.",
            "Patch job completed successfully.",
            "Patch job completed but there were errors.",
            "The patch job was canceled.",
            "The patch job timed out."
          ]
        },
        "name": {
          "description": "Unique identifier for this patch job in the form\n`projects/*/patchJobs/*`",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name for this patch job. This is not a unique identifier."
        },
        "dryRun": {
          "description": "If this patch job is a dry run, the agent reports that it has\nfinished without running any updates on the VM instance.",
          "type": "boolean"
        },
        "createTime": {
          "description": "Time this patch job was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Last time this patch job was updated.",
          "format": "google-datetime"
        },
        "errorMessage": {
          "description": "If this patch job failed, this message provides information about the\nfailure.",
          "type": "string"
        },
        "patchDeployment": {
          "description": "Output only. Name of the patch deployment that created this patch job.",
          "type": "string"
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Patch configuration being applied."
        },
        "instanceFilter": {
          "$ref": "PatchInstanceFilter",
          "description": "Instances to patch."
        },
        "duration": {
          "description": "Duration of the patch job. After the duration ends, the\npatch job times out.",
          "format": "google-duration",
          "type": "string"
        },
        "instanceDetailsSummary": {
          "$ref": "PatchJobInstanceDetailsSummary",
          "description": "Summary of instance details."
        }
      },
      "id": "PatchJob"
    },
    "ExecStep": {
      "id": "ExecStep",
      "description": "A step that runs an executable for a PatchJob.",
      "type": "object",
      "properties": {
        "linuxExecStepConfig": {
          "$ref": "ExecStepConfig",
          "description": "The ExecStepConfig for all Linux VMs targeted by the PatchJob."
        },
        "windowsExecStepConfig": {
          "$ref": "ExecStepConfig",
          "description": "The ExecStepConfig for all Windows VMs targeted by the PatchJob."
        }
      }
    },
    "GcsObject": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "Required. Bucket of the Google Cloud Storage object."
        },
        "object": {
          "description": "Required. Name of the Google Cloud Storage object.",
          "type": "string"
        },
        "generationNumber": {
          "description": "Required. Generation number of the Google Cloud Storage object. This is used to\nensure that the ExecStep specified by this PatchJob does not change.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GcsObject",
      "description": "Google Cloud Storage object representation."
    },
    "SoftwareRecipeStepExecFile": {
      "description": "Executes an artifact or local file.",
      "type": "object",
      "properties": {
        "allowedExitCodes": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "description": "Defaults to [0]. A list of possible return values that the program\ncan return to indicate a success."
        },
        "artifactId": {
          "type": "string",
          "description": "The id of the relevant artifact in the recipe."
        },
        "args": {
          "description": "Arguments to be passed to the provided executable.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "localPath": {
          "description": "The absolute path of the file on the local filesystem.",
          "type": "string"
        }
      },
      "id": "SoftwareRecipeStepExecFile"
    },
    "YumRepository": {
      "description": "Represents a single Yum package repository. This repository is added to a\nrepo file that is stored at `/etc/yum.repos.d/google_osconfig.repo`.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. A one word, unique name for this repository. This is\nthe `repo id` in the Yum config file and also the `display_name` if\n`display_name` is omitted. This id is also used as the unique identifier\nwhen checking for guest policy conflicts.",
          "type": "string"
        },
        "baseUrl": {
          "type": "string",
          "description": "Required. The location of the repository directory."
        },
        "gpgKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "URIs of GPG keys."
        },
        "displayName": {
          "description": "The display name of the repository.",
          "type": "string"
        }
      },
      "id": "YumRepository"
    },
    "SoftwareRecipeStepInstallRpm": {
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "Required. The id of the relevant artifact in the recipe.",
          "type": "string"
        }
      },
      "id": "SoftwareRecipeStepInstallRpm",
      "description": "Installs an rpm file via the rpm utility."
    },
    "OneTimeSchedule": {
      "description": "Sets the time for a one time patch deployment. Timestamp is in\n\u003ca href=\"https://www.ietf.org/rfc/rfc3339.txt\" target=\"_blank\"\u003eRFC3339\u003c/a\u003e\ntext format.",
      "type": "object",
      "properties": {
        "executeTime": {
          "description": "Required. The desired patch job execution time.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "OneTimeSchedule"
    },
    "PackageRepository": {
      "id": "PackageRepository",
      "description": "A package repository.",
      "type": "object",
      "properties": {
        "zypper": {
          "$ref": "ZypperRepository",
          "description": "A Zypper Repository."
        },
        "apt": {
          "$ref": "AptRepository",
          "description": "An Apt Repository."
        },
        "yum": {
          "description": "A Yum Repository.",
          "$ref": "YumRepository"
        },
        "goo": {
          "$ref": "GooRepository",
          "description": "A Goo Repository."
        }
      }
    },
    "CancelPatchJobRequest": {
      "description": "Message for canceling a patch job.",
      "type": "object",
      "properties": {},
      "id": "CancelPatchJobRequest"
    },
    "SoftwareRecipeStepRunScript": {
      "type": "object",
      "properties": {
        "script": {
          "description": "Required. The shell script to be executed.",
          "type": "string"
        },
        "allowedExitCodes": {
          "description": "Return codes that indicate that the software installed or updated\nsuccessfully. Behaviour defaults to [0]",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "interpreter": {
          "description": "The script interpreter to use to run the script. If no interpreter is\nspecified the script is executed directly, which likely\nonly succeed for scripts with\n[shebang lines](https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
          "type": "string",
          "enumDescriptions": [
            "Default value for ScriptType.",
            "Indicates that the script is run with `/bin/sh` on Linux and `cmd`\non windows.",
            "Indicates that the script is run with powershell."
          ],
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "SHELL",
            "POWERSHELL"
          ]
        }
      },
      "id": "SoftwareRecipeStepRunScript",
      "description": "Runs a script through an interpreter."
    },
    "AssignmentGroupLabel": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Google Compute Engine instance labels that must be present for an\ninstance to be included in this assignment group."
        }
      },
      "id": "AssignmentGroupLabel",
      "description": "Represents a group of VM intances that can be identified as having all\nthese labels, for example \"env=prod and app=web\"."
    },
    "SoftwareRecipeStep": {
      "type": "object",
      "properties": {
        "archiveExtraction": {
          "$ref": "SoftwareRecipeStepExtractArchive",
          "description": "Extracts an archive into the specified directory."
        },
        "msiInstallation": {
          "$ref": "SoftwareRecipeStepInstallMsi",
          "description": "Installs an MSI file."
        },
        "scriptRun": {
          "$ref": "SoftwareRecipeStepRunScript",
          "description": "Runs commands in a shell."
        },
        "rpmInstallation": {
          "$ref": "SoftwareRecipeStepInstallRpm",
          "description": "Installs an rpm file via the rpm utility."
        },
        "fileCopy": {
          "$ref": "SoftwareRecipeStepCopyFile",
          "description": "Copies a file onto the instance."
        },
        "dpkgInstallation": {
          "description": "Installs a deb file via dpkg.",
          "$ref": "SoftwareRecipeStepInstallDpkg"
        },
        "fileExec": {
          "description": "Executes an artifact or local file.",
          "$ref": "SoftwareRecipeStepExecFile"
        }
      },
      "id": "SoftwareRecipeStep",
      "description": "An action that can be taken as part of installing or updating a recipe."
    },
    "WindowsUpdateSettings": {
      "type": "object",
      "properties": {
        "excludes": {
          "description": "List of KBs to exclude from update.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclusivePatches": {
          "description": "An exclusive list of kbs to be updated. These are the only patches\nthat will be updated. This field must not be used with other\npatch configurations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classifications": {
          "enumDescriptions": [
            "Invalid. If classifications are included, they must be specified.",
            "\"A widely released fix for a specific problem that addresses a critical,\nnon-security-related bug.\" [1]",
            "\"A widely released fix for a product-specific, security-related\nvulnerability. Security vulnerabilities are rated by their severity. The\nseverity rating is indicated in the Microsoft security bulletin as\ncritical, important, moderate, or low.\" [1]",
            "\"A widely released and frequent software update that contains additions\nto a product's definition database. Definition databases are often used\nto detect objects that have specific attributes, such as malicious code,\nphishing websites, or junk mail.\" [1]",
            "\"Software that controls the input and output of a device.\" [1]",
            "\"New product functionality that is first distributed outside the context\nof a product release and that is typically included in the next full\nproduct release.\" [1]",
            "\"A tested, cumulative set of all hotfixes, security updates, critical\nupdates, and updates. Additionally, service packs may contain additional\nfixes for problems that are found internally since the release of the\nproduct. Service packs my also contain a limited number of\ncustomer-requested design changes or features.\" [1]",
            "\"A utility or feature that helps complete a task or set of tasks.\" [1]",
            "\"A tested, cumulative set of hotfixes, security updates, critical\nupdates, and updates that are packaged together for easy deployment. A\nrollup generally targets a specific area, such as security, or a\ncomponent of a product, such as Internet Information Services (IIS).\" [1]",
            "\"A widely released fix for a specific problem. An update addresses a\nnoncritical, non-security-related bug.\" [1]"
          ],
          "description": "Only apply updates of these windows update classifications. If empty, all\nupdates are applied.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CLASSIFICATION_UNSPECIFIED",
              "CRITICAL",
              "SECURITY",
              "DEFINITION",
              "DRIVER",
              "FEATURE_PACK",
              "SERVICE_PACK",
              "TOOL",
              "UPDATE_ROLLUP",
              "UPDATE"
            ]
          }
        }
      },
      "id": "WindowsUpdateSettings",
      "description": "Windows patching is performed using the Windows Update Agent."
    },
    "ExecStepConfig": {
      "type": "object",
      "properties": {
        "gcsObject": {
          "$ref": "GcsObject",
          "description": "A Google Cloud Storage object containing the executable."
        },
        "interpreter": {
          "description": "The script interpreter to use to run the script. If no interpreter is\nspecified the script will be executed directly, which will likely\nonly succeed for scripts with [shebang lines]\n(https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
          "type": "string",
          "enumDescriptions": [
            "Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the\ninterpreter will be parsed from the shebang line of the script if\nunspecified.",
            "Indicates that the script is run with `/bin/sh` on Linux and `cmd`\non Windows.",
            "Indicates that the file is run with PowerShell flags\n`-NonInteractive`, `-NoProfile`, and `-ExecutionPolicy Bypass`."
          ],
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "SHELL",
            "POWERSHELL"
          ]
        },
        "localPath": {
          "type": "string",
          "description": "An absolute path to the executable on the VM."
        },
        "allowedSuccessCodes": {
          "description": "Defaults to [0]. A list of possible return values that the\nexecution can return to indicate a success.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "id": "ExecStepConfig",
      "description": "Common configurations for an ExecStep."
    },
    "GuestPolicy": {
      "description": "An OS Config resource representing a guest configuration policy. These\npolicies represent the desired state for VM instance guest environments\nincluding packages to install or remove, package repository configurations,\nand software to install.",
      "type": "object",
      "properties": {
        "recipes": {
          "type": "array",
          "items": {
            "$ref": "SoftwareRecipe"
          },
          "description": "A list of Recipes to install on the VM instance."
        },
        "assignment": {
          "description": "Required. Specifies the VM instances that are assigned to this policy. This allows\nyou to target sets or groups of VM instances by different parameters such\nas labels, names, OS, or zones.\n\nIf left empty, all VM instances underneath this policy are targeted.\n\nAt the same level in the resource hierarchy (that is within a project), the\nservice prevents the creation of multiple policies that conflict with\neach other. For more information, see how the service [handles assignment\nconflicts](/compute/docs/os-config-management/create-guest-policy#handle-conflicts).",
          "$ref": "Assignment"
        },
        "description": {
          "description": "Description of the guest policy. Length of the description is limited\nto 1024 characters.",
          "type": "string"
        },
        "packageRepositories": {
          "description": "A list of package repositories to configure on the VM instance. This is\ndone before any other configs are applied so they can use these repos.\nPackage repositories are only configured if the corresponding package\nmanager(s) are available.",
          "type": "array",
          "items": {
            "$ref": "PackageRepository"
          }
        },
        "etag": {
          "description": "The etag for this guest policy.\nIf this is provided on update, it must match the server's etag.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time this guest policy was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "packages": {
          "description": "The software packages to be managed by this policy.",
          "type": "array",
          "items": {
            "$ref": "Package"
          }
        },
        "updateTime": {
          "description": "Output only. Last time this guest policy was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "Required. Unique name of the resource in this project using one of the following\nforms:\n`projects/{project_number}/guestPolicies/{guest_policy_id}`.",
          "type": "string"
        }
      },
      "id": "GuestPolicy"
    },
    "SoftwareRecipeStepInstallMsi": {
      "description": "Installs an MSI file.",
      "type": "object",
      "properties": {
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The flags to use when installing the MSI\ndefaults to [\"/i\"] (i.e. the install flag)."
        },
        "allowedExitCodes": {
          "description": "Return codes that indicate that the software installed or updated\nsuccessfully. Behaviour defaults to [0]",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "artifactId": {
          "type": "string",
          "description": "Required. The id of the relevant artifact in the recipe."
        }
      },
      "id": "SoftwareRecipeStepInstallMsi"
    },
    "RecurringSchedule": {
      "description": "Sets the time for recurring patch deployments.",
      "type": "object",
      "properties": {
        "weekly": {
          "$ref": "WeeklySchedule",
          "description": "Required. Schedule with weekly executions."
        },
        "timeOfDay": {
          "$ref": "TimeOfDay",
          "description": "Required. Time of the day to run a recurring deployment."
        },
        "lastExecuteTime": {
          "description": "Output only. The time the last patch job ran successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "enumDescriptions": [
            "Invalid. A frequency must be specified.",
            "Indicates that the frequency should be expressed in terms of\nweeks.",
            "Indicates that the frequency should be expressed in terms of\nmonths."
          ],
          "enum": [
            "FREQUENCY_UNSPECIFIED",
            "WEEKLY",
            "MONTHLY"
          ],
          "description": "Required. The frequency unit of this recurring schedule."
        },
        "endTime": {
          "description": "Optional. The end time at which a recurring patch deployment schedule is no longer\nactive.",
          "format": "google-datetime",
          "type": "string"
        },
        "timeZone": {
          "$ref": "TimeZone",
          "description": "Required. Defines the time zone that `time_of_day` is relative to.\nThe rules for daylight saving time are determined by the chosen time zone."
        },
        "nextExecuteTime": {
          "description": "Output only. The time the next patch job is scheduled to run.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Optional. The time that the recurring schedule becomes effective.\nDefaults to `create_time` of the patch deployment.",
          "format": "google-datetime",
          "type": "string"
        },
        "monthly": {
          "$ref": "MonthlySchedule",
          "description": "Required. Schedule with monthly executions."
        }
      },
      "id": "RecurringSchedule"
    },
    "EffectiveGuestPolicySourcedSoftwareRecipe": {
      "description": "A guest policy recipe including its source.",
      "type": "object",
      "properties": {
        "softwareRecipe": {
          "$ref": "SoftwareRecipe",
          "description": "A software recipe to configure on the VM instance."
        },
        "source": {
          "description": "Name of the guest policy providing this config.",
          "type": "string"
        }
      },
      "id": "EffectiveGuestPolicySourcedSoftwareRecipe"
    },
    "SoftwareRecipeStepInstallDpkg": {
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "Required. The id of the relevant artifact in the recipe.",
          "type": "string"
        }
      },
      "id": "SoftwareRecipeStepInstallDpkg",
      "description": "Installs a deb via dpkg."
    },
    "AptSettings": {
      "type": "object",
      "properties": {
        "excludes": {
          "description": "List of packages to exclude from update. These packages will be excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclusivePackages": {
          "description": "An exclusive list of packages to be updated. These are the only packages\nthat will be updated. If these packages are not installed, they will be\nignored. This field cannot be specified with any other patch configuration\nfields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "By default, upgrade will be performed.",
            "Runs `apt-get dist-upgrade`.",
            "Runs `apt-get upgrade`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "DIST",
            "UPGRADE"
          ],
          "description": "By changing the type to DIST, the patching is performed\nusing `apt-get dist-upgrade` instead."
        }
      },
      "id": "AptSettings",
      "description": "Apt patching is completed by executing `apt-get update && apt-get\nupgrade`. Additional options can be set to control how this is executed."
    },
    "TimeOfDay": {
      "type": "object",
      "properties": {
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32",
          "type": "integer"
        },
        "nanos": {
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "type": "integer",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
          "format": "int32"
        },
        "minutes": {
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "TimeOfDay",
      "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`."
    },
    "WeekDayOfMonth": {
      "description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified day-of-week.",
            "The day-of-week of Monday.",
            "The day-of-week of Tuesday.",
            "The day-of-week of Wednesday.",
            "The day-of-week of Thursday.",
            "The day-of-week of Friday.",
            "The day-of-week of Saturday.",
            "The day-of-week of Sunday."
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "description": "Required. A day of the week."
        },
        "weekOrdinal": {
          "type": "integer",
          "description": "Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1\nindicates the last week of the month.",
          "format": "int32"
        }
      },
      "id": "WeekDayOfMonth"
    },
    "SoftwareRecipeArtifactGcs": {
      "description": "Specifies an artifact available as a Google Cloud Storage object.",
      "type": "object",
      "properties": {
        "bucket": {
          "description": "Bucket of the Google Cloud Storage object.\nGiven an example URL:\n`https://storage.googleapis.com/my-bucket/foo/bar#1234567`\nthis value would be `my-bucket`.",
          "type": "string"
        },
        "object": {
          "description": "Name of the Google Cloud Storage object.\nAs specified [here]\n(https://cloud.google.com/storage/docs/naming#objectnames)\nGiven an example URL:\n`https://storage.googleapis.com/my-bucket/foo/bar#1234567`\nthis value would be `foo/bar`.",
          "type": "string"
        },
        "generation": {
          "description": "Must be provided if allow_insecure is false.\nGeneration number of the Google Cloud Storage object.\n`https://storage.googleapis.com/my-bucket/foo/bar#1234567`\nthis value would be `1234567`.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "SoftwareRecipeArtifactGcs"
    },
    "ExecutePatchJobRequest": {
      "description": "A request message to initiate patching across Google Compute Engine\ninstances.",
      "type": "object",
      "properties": {
        "dryRun": {
          "description": "If this patch is a dry-run only, instances are contacted but\nwill do nothing.",
          "type": "boolean"
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Patch configuration being applied. If omitted, instances are\npatched using the default configurations."
        },
        "instanceFilter": {
          "$ref": "PatchInstanceFilter",
          "description": "Required. Instances to patch, either explicitly or filtered by some criteria such\nas zone or labels."
        },
        "duration": {
          "description": "Duration of the patch job. After the duration ends, the patch job\ntimes out.",
          "format": "google-duration",
          "type": "string"
        },
        "displayName": {
          "description": "Display name for this patch job. This does not have to be unique.",
          "type": "string"
        },
        "description": {
          "description": "Description of the patch job. Length of the description is limited\nto 1024 characters.",
          "type": "string"
        }
      },
      "id": "ExecutePatchJobRequest"
    },
    "PatchJobInstanceDetailsSummary": {
      "id": "PatchJobInstanceDetailsSummary",
      "description": "A summary of the current patch state across all instances that this patch\njob affects. Contains counts of instances in different states. These states\nmap to `InstancePatchState`. List patch job instance details to see the\nspecific states of each instance.",
      "type": "object",
      "properties": {
        "succeededRebootRequiredInstanceCount": {
          "description": "Number of instances that require reboot.",
          "format": "int64",
          "type": "string"
        },
        "prePatchStepInstanceCount": {
          "description": "Number of instances that are running the pre-patch step.",
          "format": "int64",
          "type": "string"
        },
        "noAgentDetectedInstanceCount": {
          "description": "Number of instances that do not appear to be running the agent. Check to\nensure that the agent is installed, running, and able to communicate with\nthe service.",
          "format": "int64",
          "type": "string"
        },
        "failedInstanceCount": {
          "type": "string",
          "description": "Number of instances that failed.",
          "format": "int64"
        },
        "pendingInstanceCount": {
          "description": "Number of instances pending patch job.",
          "format": "int64",
          "type": "string"
        },
        "notifiedInstanceCount": {
          "description": "Number of instances notified about patch job.",
          "format": "int64",
          "type": "string"
        },
        "downloadingPatchesInstanceCount": {
          "description": "Number of instances that are downloading patches.",
          "format": "int64",
          "type": "string"
        },
        "timedOutInstanceCount": {
          "description": "Number of instances that exceeded the time out while applying the patch.",
          "format": "int64",
          "type": "string"
        },
        "rebootingInstanceCount": {
          "description": "Number of instances rebooting.",
          "format": "int64",
          "type": "string"
        },
        "postPatchStepInstanceCount": {
          "type": "string",
          "description": "Number of instances that are running the post-patch step.",
          "format": "int64"
        },
        "succeededInstanceCount": {
          "description": "Number of instances that have completed successfully.",
          "format": "int64",
          "type": "string"
        },
        "ackedInstanceCount": {
          "description": "Number of instances that have acked and will start shortly.",
          "format": "int64",
          "type": "string"
        },
        "applyingPatchesInstanceCount": {
          "type": "string",
          "description": "Number of instances that are applying patches.",
          "format": "int64"
        },
        "startedInstanceCount": {
          "description": "Number of instances that have started.",
          "format": "int64",
          "type": "string"
        },
        "inactiveInstanceCount": {
          "type": "string",
          "description": "Number of instances that are inactive.",
          "format": "int64"
        }
      }
    },
    "PatchDeployment": {
      "description": "Patch deployments are configurations that individual patch jobs use to\ncomplete a patch. These configurations include instance filter, package\nrepository settings, and a schedule.",
      "type": "object",
      "properties": {
        "lastExecuteTime": {
          "type": "string",
          "description": "Output only. The last time a patch job was started by this deployment.\nTimestamp is in\n\u003ca href=\"https://www.ietf.org/rfc/rfc3339.txt\" target=\"_blank\"\u003eRFC3339\u003c/a\u003e\ntext format.",
          "format": "google-datetime"
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Optional. Patch configuration that is applied."
        },
        "duration": {
          "type": "string",
          "description": "Optional. Duration of the patch. After the duration ends, the patch times out.",
          "format": "google-duration"
        },
        "instanceFilter": {
          "$ref": "PatchInstanceFilter",
          "description": "Required. VM instances to patch."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the patch deployment. Length of the description is limited\nto 1024 characters."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Time the patch deployment was created. Timestamp is in\n\u003ca href=\"https://www.ietf.org/rfc/rfc3339.txt\" target=\"_blank\"\u003eRFC3339\u003c/a\u003e\ntext format.",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Time the patch deployment was last updated. Timestamp is in\n\u003ca href=\"https://www.ietf.org/rfc/rfc3339.txt\" target=\"_blank\"\u003eRFC3339\u003c/a\u003e\ntext format.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Unique name for the patch deployment resource in a project. The patch\ndeployment name is in the form:\n`projects/{project_id}/patchDeployments/{patch_deployment_id}`.\nThis field is ignored when you create a new patch deployment."
        },
        "recurringSchedule": {
          "$ref": "RecurringSchedule",
          "description": "Required. Schedule recurring executions."
        },
        "oneTimeSchedule": {
          "$ref": "OneTimeSchedule",
          "description": "Required. Schedule a one-time execution."
        }
      },
      "id": "PatchDeployment"
    },
    "SoftwareRecipeArtifactRemote": {
      "description": "Specifies an artifact available via some URI.",
      "type": "object",
      "properties": {
        "checksum": {
          "description": "Must be provided if `allow_insecure` is `false`.\nSHA256 checksum in hex format, to compare to the checksum of the\nartifact. If the checksum is not empty and it doesn't match the\nartifact then the recipe installation fails before running any of the\nsteps.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "URI from which to fetch the object. It should contain both the protocol\nand path following the format {protocol}://{location}."
        }
      },
      "id": "SoftwareRecipeArtifactRemote"
    },
    "PatchConfig": {
      "type": "object",
      "properties": {
        "zypper": {
          "$ref": "ZypperSettings",
          "description": "Zypper update settings. Use this setting to override the default `zypper`\npatch rules."
        },
        "postStep": {
          "$ref": "ExecStep",
          "description": "The `ExecStep` to run after the patch update."
        },
        "apt": {
          "$ref": "AptSettings",
          "description": "Apt update settings. Use this setting to override the default `apt` patch\nrules."
        },
        "yum": {
          "$ref": "YumSettings",
          "description": "Yum update settings. Use this setting to override the default `yum` patch\nrules."
        },
        "goo": {
          "description": "Goo update settings. Use this setting to override the default `goo` patch\nrules.",
          "$ref": "GooSettings"
        },
        "rebootConfig": {
          "enum": [
            "REBOOT_CONFIG_UNSPECIFIED",
            "DEFAULT",
            "ALWAYS",
            "NEVER"
          ],
          "description": "Post-patch reboot settings.",
          "type": "string",
          "enumDescriptions": [
            "The default behavior is DEFAULT.",
            "The agent decides if a reboot is necessary by checking signals such as\nregistry keys on Windows or `/var/run/reboot-required` on APT based\nsystems. On RPM based systems, a set of core system package install times\nare compared with system boot time.",
            "Always reboot the machine after the update completes.",
            "Never reboot the machine after the update completes."
          ]
        },
        "preStep": {
          "$ref": "ExecStep",
          "description": "The `ExecStep` to run before the patch update."
        },
        "windowsUpdate": {
          "$ref": "WindowsUpdateSettings",
          "description": "Windows update settings. Use this override the default windows patch rules."
        }
      },
      "id": "PatchConfig",
      "description": "Patch configuration specifications. Contains details on how to apply the\npatch(es) to a VM instance."
    },
    "ZypperRepository": {
      "description": "Represents a single Zypper package repository. This repository is added to a\nrepo file that is stored at `/etc/zypp/repos.d/google_osconfig.repo`.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The display name of the repository.",
          "type": "string"
        },
        "id": {
          "description": "Required. A one word, unique name for this repository. This is\nthe `repo id` in the zypper config file and also the `display_name` if\n`display_name` is omitted. This id is also used as the unique identifier\nwhen checking for guest policy conflicts.",
          "type": "string"
        },
        "baseUrl": {
          "description": "Required. The location of the repository directory.",
          "type": "string"
        },
        "gpgKeys": {
          "description": "URIs of GPG keys.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ZypperRepository"
    },
    "LookupEffectiveGuestPolicyRequest": {
      "description": "A request message for getting the effective guest policy assigned to the\ninstance.",
      "type": "object",
      "properties": {
        "osShortName": {
          "description": "Short name of the OS running on the instance. The OS Config agent only\nprovides this field for targeting if OS Inventory is enabled for that\ninstance.",
          "type": "string"
        },
        "osArchitecture": {
          "description": "Architecture of OS running on the instance. The OS Config agent only\nprovides this field for targeting if OS Inventory is enabled for that\ninstance.",
          "type": "string"
        },
        "osVersion": {
          "description": "Version of the OS running on the instance. The OS Config agent only\nprovides this field for targeting if OS Inventory is enabled for that\nVM instance.",
          "type": "string"
        }
      },
      "id": "LookupEffectiveGuestPolicyRequest"
    },
    "SoftwareRecipeStepExtractArchive": {
      "description": "Extracts an archive of the type specified in the specified directory.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Required. The type of the archive to extract.",
          "type": "string",
          "enumDescriptions": [
            "Indicates that the archive type isn't specified.",
            "Indicates that the archive is a tar archive with no encryption.",
            "Indicates that the archive is a tar archive with gzip encryption.",
            "Indicates that the archive is a tar archive with bzip encryption.",
            "Indicates that the archive is a tar archive with lzma encryption.",
            "Indicates that the archive is a tar archive with xz encryption.",
            "Indicates that the archive is a zip archive."
          ],
          "enum": [
            "ARCHIVE_TYPE_UNSPECIFIED",
            "TAR",
            "TAR_GZIP",
            "TAR_BZIP",
            "TAR_LZMA",
            "TAR_XZ",
            "ZIP"
          ]
        },
        "artifactId": {
          "description": "Required. The id of the relevant artifact in the recipe.",
          "type": "string"
        },
        "destination": {
          "description": "Directory to extract archive to.\nDefaults to `/` on Linux or `C:\\` on Windows.",
          "type": "string"
        }
      },
      "id": "SoftwareRecipeStepExtractArchive"
    },
    "ListPatchDeploymentsResponse": {
      "description": "A response message for listing patch deployments.",
      "type": "object",
      "properties": {
        "patchDeployments": {
          "type": "array",
          "items": {
            "$ref": "PatchDeployment"
          },
          "description": "The list of patch deployments."
        },
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of patch\ndeployments.",
          "type": "string"
        }
      },
      "id": "ListPatchDeploymentsResponse"
    },
    "PatchJobInstanceDetails": {
      "description": "Patch details for a VM instance.",
      "type": "object",
      "properties": {
        "instanceSystemId": {
          "description": "The unique identifier for the instance. This identifier is\ndefined by the server.",
          "type": "string"
        },
        "state": {
          "description": "Current state of instance patch.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "The instance is not yet notified.",
            "Instance is inactive and cannot be patched.",
            "The instance is notified that it should be patched.",
            "The instance has started the patching process.",
            "The instance is downloading patches.",
            "The instance is applying patches.",
            "The instance is rebooting.",
            "The instance has completed applying patches.",
            "The instance has completed applying patches but a reboot is required.",
            "The instance has failed to apply the patch.",
            "The instance acked the notification and will start shortly.",
            "The instance exceeded the time out while applying the patch.",
            "The instance is running the pre-patch step.",
            "The instance is running the post-patch step.",
            "The service could not detect the presence of the agent. Check to ensure\nthat the agent is installed, running, and able to communicate with the\nservice."
          ],
          "enum": [
            "PATCH_STATE_UNSPECIFIED",
            "PENDING",
            "INACTIVE",
            "NOTIFIED",
            "STARTED",
            "DOWNLOADING_PATCHES",
            "APPLYING_PATCHES",
            "REBOOTING",
            "SUCCEEDED",
            "SUCCEEDED_REBOOT_REQUIRED",
            "FAILED",
            "ACKED",
            "TIMED_OUT",
            "RUNNING_PRE_PATCH_STEP",
            "RUNNING_POST_PATCH_STEP",
            "NO_AGENT_DETECTED"
          ]
        },
        "attemptCount": {
          "description": "The number of times the agent that the agent attempts to apply the patch.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "The instance name in the form `projects/*/zones/*/instances/*`",
          "type": "string"
        },
        "failureReason": {
          "description": "If the patch fails, this field provides the reason.",
          "type": "string"
        }
      },
      "id": "PatchJobInstanceDetails"
    },
    "ListPatchJobsResponse": {
      "type": "object",
      "properties": {
        "patchJobs": {
          "type": "array",
          "items": {
            "$ref": "PatchJob"
          },
          "description": "The list of patch jobs."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token that can be used to get the next page of results."
        }
      },
      "id": "ListPatchJobsResponse",
      "description": "A response message for listing patch jobs."
    },
    "MonthlySchedule": {
      "type": "object",
      "properties": {
        "weekDayOfMonth": {
          "$ref": "WeekDayOfMonth",
          "description": "Required. Week day in a month."
        },
        "monthDay": {
          "description": "Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1\nindicates the last day of the month.\nMonths without the target day will be skipped. For example, a schedule to\nrun \"every month on the 31st\" will not run in February, April, June, etc.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "MonthlySchedule",
      "description": "Represents a monthly schedule. An example of a valid monthly schedule is\n\"on the third Tuesday of the month\" or \"on the 15th of the month\"."
    },
    "Package": {
      "description": "Package is a reference to the software package to be installed or removed.\nThe agent on the VM instance uses the system package manager to apply the\nconfig.\n\n\nThese are the commands that the agent uses to install or remove\npackages.\n\nApt\ninstall: `apt-get update && apt-get -y install package1 package2 package3`\nremove: `apt-get -y remove package1 package2 package3`\n\nYum\ninstall: `yum -y install package1 package2 package3`\nremove: `yum -y remove package1 package2 package3`\n\nZypper\ninstall: `zypper install package1 package2 package3`\nremove: `zypper rm package1 package2`\n\nGooget\ninstall: `googet -noconfirm install package1 package2 package3`\nremove: `googet -noconfirm remove package1 package2 package3`",
      "type": "object",
      "properties": {
        "desiredState": {
          "description": "The desired_state the agent should maintain for this package. The\ndefault is to ensure the package is installed.",
          "type": "string",
          "enumDescriptions": [
            "The default is to ensure the package is installed.",
            "The agent ensures that the package is installed.",
            "The agent ensures that the package is installed and\nperiodically checks for and install any updates.",
            "The agent ensures that the package is not installed and uninstall it\nif detected."
          ],
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "INSTALLED",
            "UPDATED",
            "REMOVED"
          ]
        },
        "name": {
          "type": "string",
          "description": "Required. The name of the package. A package is uniquely identified for conflict\nvalidation by checking the package name and the manager(s) that the\npackage targets."
        },
        "manager": {
          "description": "Type of package manager that can be used to install this package.\nIf a system does not have the package manager, the package is not\ninstalled or removed no error message is returned. By default,\nor if you specify `ANY`,\nthe agent attempts to install and remove this package using the default\npackage manager. This is useful when creating a policy that applies to\ndifferent types of systems.\n\nThe default behavior is ANY.",
          "type": "string",
          "enumDescriptions": [
            "The default behavior is ANY.",
            "Apply this package config using the default system package manager.",
            "Apply this package config only if Apt is available on the system.",
            "Apply this package config only if Yum is available on the system.",
            "Apply this package config only if Zypper is available on the system.",
            "Apply this package config only if GooGet is available on the system."
          ],
          "enum": [
            "MANAGER_UNSPECIFIED",
            "ANY",
            "APT",
            "YUM",
            "ZYPPER",
            "GOO"
          ]
        }
      },
      "id": "Package"
    },
    "EffectiveGuestPolicySourcedPackageRepository": {
      "type": "object",
      "properties": {
        "packageRepository": {
          "$ref": "PackageRepository",
          "description": "A software package repository to configure on the VM instance."
        },
        "source": {
          "description": "Name of the guest policy providing this config.",
          "type": "string"
        }
      },
      "id": "EffectiveGuestPolicySourcedPackageRepository",
      "description": "A guest policy package repository including its source."
    },
    "YumSettings": {
      "type": "object",
      "properties": {
        "minimal": {
          "type": "boolean",
          "description": "Will cause patch to run `yum update-minimal` instead."
        },
        "excludes": {
          "description": "List of packages to exclude from update. These packages are excluded by\nusing the yum `--exclude` flag.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclusivePackages": {
          "description": "An exclusive list of packages to be updated. These are the only packages\nthat will be updated. If these packages are not installed, they will be\nignored. This field must not be specified with any other patch\nconfiguration fields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "security": {
          "type": "boolean",
          "description": "Adds the `--security` flag to `yum update`. Not supported on\nall platforms."
        }
      },
      "id": "YumSettings",
      "description": "Yum patching is performed by executing `yum update`. Additional options\ncan be set to control how this is executed.\n\nNote that not all settings are supported on all platforms."
    },
    "TimeZone": {
      "description": "Represents a time zone from the\n[IANA Time Zone Database](https://www.iana.org/time-zones).",
      "type": "object",
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        },
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        }
      },
      "id": "TimeZone"
    },
    "PatchInstanceFilterGroupLabel": {
      "description": "Represents a group of VMs that can be identified as having all these\nlabels, for example \"env=prod and app=web\".",
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Google Compute Engine instance labels that must be present for a VM\ninstance to be targeted by this filter.",
          "type": "object"
        }
      },
      "id": "PatchInstanceFilterGroupLabel"
    },
    "GooSettings": {
      "id": "GooSettings",
      "description": "Googet patching is performed by running `googet update`.",
      "type": "object",
      "properties": {}
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Systems Management"
}
