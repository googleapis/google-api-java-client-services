/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.privateca.v1.model;

/**
 * A CertificateAuthority represents an individual Certificate Authority. A CertificateAuthority can
 * be used to create Certificates.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Certificate Authority API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CertificateAuthority extends com.google.api.client.json.GenericJson {

  /**
   * Output only. URLs for accessing content published by this CA, such as the CA certificate and
   * CRLs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AccessUrls accessUrls;

  /**
   * Output only. A structured description of this CertificateAuthority's CA certificate and its
   * issuers. Ordered as self-to-root.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CertificateDescription> caCertificateDescriptions;

  /**
   * Required. Immutable. The config used to create a self-signed X.509 certificate or CSR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CertificateConfig config;

  /**
   * Output only. The time at which this CertificateAuthority was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The time at which this CertificateAuthority was soft deleted, if it is in the
   * DELETED state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String deleteTime;

  /**
   * Output only. The time at which this CertificateAuthority will be permanently purged, if it is
   * in the DELETED state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expireTime;

  /**
   * Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish
   * content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes
   * (such as `gs://`) or suffixes (such as `.googleapis.com`). For example, to use a bucket named
   * `my-bucket`, you would simply specify `my-bucket`. If not specified, a managed bucket will be
   * created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gcsBucket;

  /**
   * Required. Immutable. Used when issuing certificates for this CertificateAuthority. If this
   * CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the
   * self-signed CA certificate. Otherwise, it is used to sign a CSR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KeyVersionSpec keySpec;

  /**
   * Optional. Labels with user-defined metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. Immutable. The desired lifetime of the CA certificate. Used to create the
   * "not_before_time" and "not_after_time" fields inside an X.509 certificate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lifetime;

  /**
   * Identifier. The resource name for this CertificateAuthority in the format
   * `projects/locations/caPools/certificateAuthorities`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. This CertificateAuthority's certificate chain, including the current
   * CertificateAuthority's certificate. Ordered such that the root issuer is the final element
   * (consistent with RFC 5246). For a self-signed CA, this will only list the current
   * CertificateAuthority's certificate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> pemCaCertificates;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzi;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzs;

  /**
   * Output only. The State for this CertificateAuthority.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Optional. If this is a subordinate CertificateAuthority, this field will be set with the
   * subordinate configuration, which describes its issuers. This may be updated, but this
   * CertificateAuthority must continue to validate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SubordinateConfig subordinateConfig;

  /**
   * Output only. The CaPool.Tier of the CaPool that includes this CertificateAuthority.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tier;

  /**
   * Required. Immutable. The Type of this CertificateAuthority.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Output only. The time at which this CertificateAuthority was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. User-defined URLs for CA certificate and CRLs. The service does not publish content
   * to these URLs. It is up to the user to mirror content to these URLs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UserDefinedAccessUrls userDefinedAccessUrls;

  /**
   * Output only. URLs for accessing content published by this CA, such as the CA certificate and
   * CRLs.
   * @return value or {@code null} for none
   */
  public AccessUrls getAccessUrls() {
    return accessUrls;
  }

  /**
   * Output only. URLs for accessing content published by this CA, such as the CA certificate and
   * CRLs.
   * @param accessUrls accessUrls or {@code null} for none
   */
  public CertificateAuthority setAccessUrls(AccessUrls accessUrls) {
    this.accessUrls = accessUrls;
    return this;
  }

  /**
   * Output only. A structured description of this CertificateAuthority's CA certificate and its
   * issuers. Ordered as self-to-root.
   * @return value or {@code null} for none
   */
  public java.util.List<CertificateDescription> getCaCertificateDescriptions() {
    return caCertificateDescriptions;
  }

  /**
   * Output only. A structured description of this CertificateAuthority's CA certificate and its
   * issuers. Ordered as self-to-root.
   * @param caCertificateDescriptions caCertificateDescriptions or {@code null} for none
   */
  public CertificateAuthority setCaCertificateDescriptions(java.util.List<CertificateDescription> caCertificateDescriptions) {
    this.caCertificateDescriptions = caCertificateDescriptions;
    return this;
  }

  /**
   * Required. Immutable. The config used to create a self-signed X.509 certificate or CSR.
   * @return value or {@code null} for none
   */
  public CertificateConfig getConfig() {
    return config;
  }

  /**
   * Required. Immutable. The config used to create a self-signed X.509 certificate or CSR.
   * @param config config or {@code null} for none
   */
  public CertificateAuthority setConfig(CertificateConfig config) {
    this.config = config;
    return this;
  }

  /**
   * Output only. The time at which this CertificateAuthority was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time at which this CertificateAuthority was created.
   * @param createTime createTime or {@code null} for none
   */
  public CertificateAuthority setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The time at which this CertificateAuthority was soft deleted, if it is in the
   * DELETED state.
   * @return value or {@code null} for none
   */
  public String getDeleteTime() {
    return deleteTime;
  }

  /**
   * Output only. The time at which this CertificateAuthority was soft deleted, if it is in the
   * DELETED state.
   * @param deleteTime deleteTime or {@code null} for none
   */
  public CertificateAuthority setDeleteTime(String deleteTime) {
    this.deleteTime = deleteTime;
    return this;
  }

  /**
   * Output only. The time at which this CertificateAuthority will be permanently purged, if it is
   * in the DELETED state.
   * @return value or {@code null} for none
   */
  public String getExpireTime() {
    return expireTime;
  }

  /**
   * Output only. The time at which this CertificateAuthority will be permanently purged, if it is
   * in the DELETED state.
   * @param expireTime expireTime or {@code null} for none
   */
  public CertificateAuthority setExpireTime(String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish
   * content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes
   * (such as `gs://`) or suffixes (such as `.googleapis.com`). For example, to use a bucket named
   * `my-bucket`, you would simply specify `my-bucket`. If not specified, a managed bucket will be
   * created.
   * @return value or {@code null} for none
   */
  public java.lang.String getGcsBucket() {
    return gcsBucket;
  }

  /**
   * Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish
   * content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes
   * (such as `gs://`) or suffixes (such as `.googleapis.com`). For example, to use a bucket named
   * `my-bucket`, you would simply specify `my-bucket`. If not specified, a managed bucket will be
   * created.
   * @param gcsBucket gcsBucket or {@code null} for none
   */
  public CertificateAuthority setGcsBucket(java.lang.String gcsBucket) {
    this.gcsBucket = gcsBucket;
    return this;
  }

  /**
   * Required. Immutable. Used when issuing certificates for this CertificateAuthority. If this
   * CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the
   * self-signed CA certificate. Otherwise, it is used to sign a CSR.
   * @return value or {@code null} for none
   */
  public KeyVersionSpec getKeySpec() {
    return keySpec;
  }

  /**
   * Required. Immutable. Used when issuing certificates for this CertificateAuthority. If this
   * CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the
   * self-signed CA certificate. Otherwise, it is used to sign a CSR.
   * @param keySpec keySpec or {@code null} for none
   */
  public CertificateAuthority setKeySpec(KeyVersionSpec keySpec) {
    this.keySpec = keySpec;
    return this;
  }

  /**
   * Optional. Labels with user-defined metadata.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Labels with user-defined metadata.
   * @param labels labels or {@code null} for none
   */
  public CertificateAuthority setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. Immutable. The desired lifetime of the CA certificate. Used to create the
   * "not_before_time" and "not_after_time" fields inside an X.509 certificate.
   * @return value or {@code null} for none
   */
  public String getLifetime() {
    return lifetime;
  }

  /**
   * Required. Immutable. The desired lifetime of the CA certificate. Used to create the
   * "not_before_time" and "not_after_time" fields inside an X.509 certificate.
   * @param lifetime lifetime or {@code null} for none
   */
  public CertificateAuthority setLifetime(String lifetime) {
    this.lifetime = lifetime;
    return this;
  }

  /**
   * Identifier. The resource name for this CertificateAuthority in the format
   * `projects/locations/caPools/certificateAuthorities`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name for this CertificateAuthority in the format
   * `projects/locations/caPools/certificateAuthorities`.
   * @param name name or {@code null} for none
   */
  public CertificateAuthority setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. This CertificateAuthority's certificate chain, including the current
   * CertificateAuthority's certificate. Ordered such that the root issuer is the final element
   * (consistent with RFC 5246). For a self-signed CA, this will only list the current
   * CertificateAuthority's certificate.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPemCaCertificates() {
    return pemCaCertificates;
  }

  /**
   * Output only. This CertificateAuthority's certificate chain, including the current
   * CertificateAuthority's certificate. Ordered such that the root issuer is the final element
   * (consistent with RFC 5246). For a self-signed CA, this will only list the current
   * CertificateAuthority's certificate.
   * @param pemCaCertificates pemCaCertificates or {@code null} for none
   */
  public CertificateAuthority setPemCaCertificates(java.util.List<java.lang.String> pemCaCertificates) {
    this.pemCaCertificates = pemCaCertificates;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzi() {
    return satisfiesPzi;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzi satisfiesPzi or {@code null} for none
   */
  public CertificateAuthority setSatisfiesPzi(java.lang.Boolean satisfiesPzi) {
    this.satisfiesPzi = satisfiesPzi;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzs satisfiesPzs or {@code null} for none
   */
  public CertificateAuthority setSatisfiesPzs(java.lang.Boolean satisfiesPzs) {
    this.satisfiesPzs = satisfiesPzs;
    return this;
  }

  /**
   * Output only. The State for this CertificateAuthority.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The State for this CertificateAuthority.
   * @param state state or {@code null} for none
   */
  public CertificateAuthority setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Optional. If this is a subordinate CertificateAuthority, this field will be set with the
   * subordinate configuration, which describes its issuers. This may be updated, but this
   * CertificateAuthority must continue to validate.
   * @return value or {@code null} for none
   */
  public SubordinateConfig getSubordinateConfig() {
    return subordinateConfig;
  }

  /**
   * Optional. If this is a subordinate CertificateAuthority, this field will be set with the
   * subordinate configuration, which describes its issuers. This may be updated, but this
   * CertificateAuthority must continue to validate.
   * @param subordinateConfig subordinateConfig or {@code null} for none
   */
  public CertificateAuthority setSubordinateConfig(SubordinateConfig subordinateConfig) {
    this.subordinateConfig = subordinateConfig;
    return this;
  }

  /**
   * Output only. The CaPool.Tier of the CaPool that includes this CertificateAuthority.
   * @return value or {@code null} for none
   */
  public java.lang.String getTier() {
    return tier;
  }

  /**
   * Output only. The CaPool.Tier of the CaPool that includes this CertificateAuthority.
   * @param tier tier or {@code null} for none
   */
  public CertificateAuthority setTier(java.lang.String tier) {
    this.tier = tier;
    return this;
  }

  /**
   * Required. Immutable. The Type of this CertificateAuthority.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Required. Immutable. The Type of this CertificateAuthority.
   * @param type type or {@code null} for none
   */
  public CertificateAuthority setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Output only. The time at which this CertificateAuthority was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time at which this CertificateAuthority was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public CertificateAuthority setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Optional. User-defined URLs for CA certificate and CRLs. The service does not publish content
   * to these URLs. It is up to the user to mirror content to these URLs.
   * @return value or {@code null} for none
   */
  public UserDefinedAccessUrls getUserDefinedAccessUrls() {
    return userDefinedAccessUrls;
  }

  /**
   * Optional. User-defined URLs for CA certificate and CRLs. The service does not publish content
   * to these URLs. It is up to the user to mirror content to these URLs.
   * @param userDefinedAccessUrls userDefinedAccessUrls or {@code null} for none
   */
  public CertificateAuthority setUserDefinedAccessUrls(UserDefinedAccessUrls userDefinedAccessUrls) {
    this.userDefinedAccessUrls = userDefinedAccessUrls;
    return this;
  }

  @Override
  public CertificateAuthority set(String fieldName, Object value) {
    return (CertificateAuthority) super.set(fieldName, value);
  }

  @Override
  public CertificateAuthority clone() {
    return (CertificateAuthority) super.clone();
  }

}
