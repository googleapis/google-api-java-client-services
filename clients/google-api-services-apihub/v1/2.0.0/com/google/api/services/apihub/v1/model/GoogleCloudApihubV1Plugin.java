/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apihub.v1.model;

/**
 * A plugin resource in the API Hub.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the API hub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudApihubV1Plugin extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The configuration of actions supported by the plugin.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudApihubV1PluginActionConfig> actionsConfig;

  /**
   * Optional. The configuration template for the plugin.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudApihubV1ConfigTemplate configTemplate;

  /**
   * Output only. Timestamp indicating when the plugin was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. The plugin description. Max length is 2000 characters (Unicode code points).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. The display name of the plugin. Max length is 50 characters (Unicode code points).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Optional. The documentation of the plugin, that explains how to set up and use the plugin.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudApihubV1Documentation documentation;

  /**
   * Optional. The type of the gateway.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gatewayType;

  /**
   * Optional. This field is optional. It is used to notify the plugin hosting service for any
   * lifecycle changes of the plugin instance and trigger execution of plugin instance actions in
   * case of API hub managed actions. This field should be provided if the plugin instance lifecycle
   * of the developed plugin needs to be managed from API hub. Also, in this case the plugin hosting
   * service interface needs to be implemented. This field should not be provided if the plugin
   * wants to manage plugin instance lifecycle events outside of hub interface and use plugin
   * framework for only registering of plugin and plugin instances to capture the source of data
   * into hub. Note, in this case the plugin hosting service interface is not required to be
   * implemented. Also, the plugin instance lifecycle actions will be disabled from API hub's UI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudApihubV1HostingService hostingService;

  /**
   * Identifier. The name of the plugin. Format:
   * `projects/{project}/locations/{location}/plugins/{plugin}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The type of the plugin, indicating whether it is 'SYSTEM_OWNED' or 'USER_OWNED'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ownershipType;

  /**
   * Optional. The category of the plugin, identifying its primary category or purpose. This field
   * is required for all plugins.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pluginCategory;

  /**
   * Output only. Represents the state of the plugin. Note this field will not be set for plugins
   * developed via plugin framework as the state will be managed at plugin instance level.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Optional. The type of the API. This maps to the following system defined attribute:
   * `projects/{project}/locations/{location}/attributes/system-plugin-type` attribute. The number
   * of allowed values for this attribute will be based on the cardinality of the attribute. The
   * same can be retrieved via GetAttribute API. All values should be from the list of allowed
   * values defined for the attribute. Note this field is not required for plugins developed via
   * plugin framework.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudApihubV1AttributeValues type;

  /**
   * Output only. Timestamp indicating when the plugin was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. The configuration of actions supported by the plugin.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudApihubV1PluginActionConfig> getActionsConfig() {
    return actionsConfig;
  }

  /**
   * Optional. The configuration of actions supported by the plugin.
   * @param actionsConfig actionsConfig or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setActionsConfig(java.util.List<GoogleCloudApihubV1PluginActionConfig> actionsConfig) {
    this.actionsConfig = actionsConfig;
    return this;
  }

  /**
   * Optional. The configuration template for the plugin.
   * @return value or {@code null} for none
   */
  public GoogleCloudApihubV1ConfigTemplate getConfigTemplate() {
    return configTemplate;
  }

  /**
   * Optional. The configuration template for the plugin.
   * @param configTemplate configTemplate or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setConfigTemplate(GoogleCloudApihubV1ConfigTemplate configTemplate) {
    this.configTemplate = configTemplate;
    return this;
  }

  /**
   * Output only. Timestamp indicating when the plugin was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp indicating when the plugin was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. The plugin description. Max length is 2000 characters (Unicode code points).
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. The plugin description. Max length is 2000 characters (Unicode code points).
   * @param description description or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The display name of the plugin. Max length is 50 characters (Unicode code points).
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The display name of the plugin. Max length is 50 characters (Unicode code points).
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. The documentation of the plugin, that explains how to set up and use the plugin.
   * @return value or {@code null} for none
   */
  public GoogleCloudApihubV1Documentation getDocumentation() {
    return documentation;
  }

  /**
   * Optional. The documentation of the plugin, that explains how to set up and use the plugin.
   * @param documentation documentation or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setDocumentation(GoogleCloudApihubV1Documentation documentation) {
    this.documentation = documentation;
    return this;
  }

  /**
   * Optional. The type of the gateway.
   * @return value or {@code null} for none
   */
  public java.lang.String getGatewayType() {
    return gatewayType;
  }

  /**
   * Optional. The type of the gateway.
   * @param gatewayType gatewayType or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setGatewayType(java.lang.String gatewayType) {
    this.gatewayType = gatewayType;
    return this;
  }

  /**
   * Optional. This field is optional. It is used to notify the plugin hosting service for any
   * lifecycle changes of the plugin instance and trigger execution of plugin instance actions in
   * case of API hub managed actions. This field should be provided if the plugin instance lifecycle
   * of the developed plugin needs to be managed from API hub. Also, in this case the plugin hosting
   * service interface needs to be implemented. This field should not be provided if the plugin
   * wants to manage plugin instance lifecycle events outside of hub interface and use plugin
   * framework for only registering of plugin and plugin instances to capture the source of data
   * into hub. Note, in this case the plugin hosting service interface is not required to be
   * implemented. Also, the plugin instance lifecycle actions will be disabled from API hub's UI.
   * @return value or {@code null} for none
   */
  public GoogleCloudApihubV1HostingService getHostingService() {
    return hostingService;
  }

  /**
   * Optional. This field is optional. It is used to notify the plugin hosting service for any
   * lifecycle changes of the plugin instance and trigger execution of plugin instance actions in
   * case of API hub managed actions. This field should be provided if the plugin instance lifecycle
   * of the developed plugin needs to be managed from API hub. Also, in this case the plugin hosting
   * service interface needs to be implemented. This field should not be provided if the plugin
   * wants to manage plugin instance lifecycle events outside of hub interface and use plugin
   * framework for only registering of plugin and plugin instances to capture the source of data
   * into hub. Note, in this case the plugin hosting service interface is not required to be
   * implemented. Also, the plugin instance lifecycle actions will be disabled from API hub's UI.
   * @param hostingService hostingService or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setHostingService(GoogleCloudApihubV1HostingService hostingService) {
    this.hostingService = hostingService;
    return this;
  }

  /**
   * Identifier. The name of the plugin. Format:
   * `projects/{project}/locations/{location}/plugins/{plugin}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The name of the plugin. Format:
   * `projects/{project}/locations/{location}/plugins/{plugin}`
   * @param name name or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The type of the plugin, indicating whether it is 'SYSTEM_OWNED' or 'USER_OWNED'.
   * @return value or {@code null} for none
   */
  public java.lang.String getOwnershipType() {
    return ownershipType;
  }

  /**
   * Output only. The type of the plugin, indicating whether it is 'SYSTEM_OWNED' or 'USER_OWNED'.
   * @param ownershipType ownershipType or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setOwnershipType(java.lang.String ownershipType) {
    this.ownershipType = ownershipType;
    return this;
  }

  /**
   * Optional. The category of the plugin, identifying its primary category or purpose. This field
   * is required for all plugins.
   * @return value or {@code null} for none
   */
  public java.lang.String getPluginCategory() {
    return pluginCategory;
  }

  /**
   * Optional. The category of the plugin, identifying its primary category or purpose. This field
   * is required for all plugins.
   * @param pluginCategory pluginCategory or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setPluginCategory(java.lang.String pluginCategory) {
    this.pluginCategory = pluginCategory;
    return this;
  }

  /**
   * Output only. Represents the state of the plugin. Note this field will not be set for plugins
   * developed via plugin framework as the state will be managed at plugin instance level.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Represents the state of the plugin. Note this field will not be set for plugins
   * developed via plugin framework as the state will be managed at plugin instance level.
   * @param state state or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Optional. The type of the API. This maps to the following system defined attribute:
   * `projects/{project}/locations/{location}/attributes/system-plugin-type` attribute. The number
   * of allowed values for this attribute will be based on the cardinality of the attribute. The
   * same can be retrieved via GetAttribute API. All values should be from the list of allowed
   * values defined for the attribute. Note this field is not required for plugins developed via
   * plugin framework.
   * @return value or {@code null} for none
   */
  public GoogleCloudApihubV1AttributeValues getType() {
    return type;
  }

  /**
   * Optional. The type of the API. This maps to the following system defined attribute:
   * `projects/{project}/locations/{location}/attributes/system-plugin-type` attribute. The number
   * of allowed values for this attribute will be based on the cardinality of the attribute. The
   * same can be retrieved via GetAttribute API. All values should be from the list of allowed
   * values defined for the attribute. Note this field is not required for plugins developed via
   * plugin framework.
   * @param type type or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setType(GoogleCloudApihubV1AttributeValues type) {
    this.type = type;
    return this;
  }

  /**
   * Output only. Timestamp indicating when the plugin was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp indicating when the plugin was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudApihubV1Plugin setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudApihubV1Plugin set(String fieldName, Object value) {
    return (GoogleCloudApihubV1Plugin) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudApihubV1Plugin clone() {
    return (GoogleCloudApihubV1Plugin) super.clone();
  }

}
