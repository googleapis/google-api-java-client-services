/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Wrapper message containing list of regions and their corresponding type of region signal to use
 * in data governance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KeGovernanceTypedRegions extends com.google.api.client.json.GenericJson {

  /**
   * The particular type of region should be explicitly set to disambiguate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionType;

  /**
   * Values are go/iii RegionCode in capital case. It is a good practice to keep elements in this
   * list unique, although not enforced. In case of duplicated entries, they'll be treated as if
   * there were only one entry of the same value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> regions;

  /**
   * The particular type of region should be explicitly set to disambiguate.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionType() {
    return regionType;
  }

  /**
   * The particular type of region should be explicitly set to disambiguate.
   * @param regionType regionType or {@code null} for none
   */
  public KeGovernanceTypedRegions setRegionType(java.lang.String regionType) {
    this.regionType = regionType;
    return this;
  }

  /**
   * Values are go/iii RegionCode in capital case. It is a good practice to keep elements in this
   * list unique, although not enforced. In case of duplicated entries, they'll be treated as if
   * there were only one entry of the same value.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRegions() {
    return regions;
  }

  /**
   * Values are go/iii RegionCode in capital case. It is a good practice to keep elements in this
   * list unique, although not enforced. In case of duplicated entries, they'll be treated as if
   * there were only one entry of the same value.
   * @param regions regions or {@code null} for none
   */
  public KeGovernanceTypedRegions setRegions(java.util.List<java.lang.String> regions) {
    this.regions = regions;
    return this;
  }

  @Override
  public KeGovernanceTypedRegions set(String fieldName, Object value) {
    return (KeGovernanceTypedRegions) super.set(fieldName, value);
  }

  @Override
  public KeGovernanceTypedRegions clone() {
    return (KeGovernanceTypedRegions) super.clone();
  }

}
