{
  "description": "",
  "version_module": true,
  "servicePath": "",
  "batchPath": "batch",
  "revision": "20201021",
  "resources": {
    "tables": {
      "methods": {
        "get": {
          "parameterOrder": [
            "name"
          ],
          "description": "Gets a table. Returns NOT_FOUND if the table does not exist.",
          "id": "area120tables.tables.get",
          "path": "v1alpha1/{+name}",
          "parameters": {
            "name": {
              "location": "path",
              "type": "string",
              "pattern": "^tables/[^/]+$",
              "description": "Required. The name of the table to retrieve. Format: tables/{table}",
              "required": true
            }
          },
          "response": {
            "$ref": "Table"
          },
          "httpMethod": "GET",
          "flatPath": "v1alpha1/tables/{tablesId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly"
          ]
        },
        "list": {
          "flatPath": "v1alpha1/tables",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A page token, received from a previous `ListTables` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTables` must match the call that provided the page token."
            },
            "pageSize": {
              "description": "The maximum number of tables to return. The service may return fewer than this value. If unspecified, at most 20 tables are returned. The maximum value is 100; values above 100 are coerced to 100.",
              "type": "integer",
              "location": "query",
              "format": "int32"
            }
          },
          "parameterOrder": [],
          "path": "v1alpha1/tables",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/spreadsheets"
          ],
          "response": {
            "$ref": "ListTablesResponse"
          },
          "description": "Lists tables for the user.",
          "id": "area120tables.tables.list",
          "httpMethod": "GET"
        }
      },
      "resources": {
        "rows": {
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "description": "Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}"
                },
                "view": {
                  "location": "query",
                  "type": "string",
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ],
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name."
                }
              },
              "description": "Gets a row. Returns NOT_FOUND if the row does not exist in the table.",
              "response": {
                "$ref": "Row"
              },
              "id": "area120tables.tables.rows.get",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/drive.readonly",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/spreadsheets.readonly"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "path": "v1alpha1/{+name}",
              "description": "Deletes a row.",
              "parameters": {
                "name": {
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "description": "Required. The name of the row to delete. Format: tables/{table}/rows/{row}",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "id": "area120tables.tables.rows.delete",
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ]
            },
            "list": {
              "flatPath": "v1alpha1/tables/{tablesId}/rows",
              "id": "area120tables.tables.rows.list",
              "parameters": {
                "view": {
                  "location": "query",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name."
                },
                "pageSize": {
                  "description": "The maximum number of rows to return. The service may return fewer than this value. If unspecified, at most 50 rows are returned. The maximum value is 1,000; values above 1,000 are coerced to 1,000.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "description": "Required. The parent table. Format: tables/{table}",
                  "required": true,
                  "pattern": "^tables/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "description": "A page token, received from a previous `ListRows` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRows` must match the call that provided the page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "ListRowsResponse"
              },
              "path": "v1alpha1/{+parent}/rows",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists rows in a table. Returns NOT_FOUND if the table does not exist.",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/drive.readonly",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/spreadsheets.readonly"
              ]
            },
            "batchCreate": {
              "id": "area120tables.tables.rows.batchCreate",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^tables/[^/]+$",
                  "description": "Required. The parent table where the rows will be created. Format: tables/{table}"
                }
              },
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchCreate",
              "request": {
                "$ref": "BatchCreateRowsRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates multiple rows.",
              "response": {
                "$ref": "BatchCreateRowsResponse"
              },
              "path": "v1alpha1/{+parent}/rows:batchCreate"
            },
            "create": {
              "flatPath": "v1alpha1/tables/{tablesId}/rows",
              "id": "area120tables.tables.rows.create",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ],
              "response": {
                "$ref": "Row"
              },
              "request": {
                "$ref": "Row"
              },
              "path": "v1alpha1/{+parent}/rows",
              "description": "Creates a row.",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent table where this row will be created. Format: tables/{table}",
                  "pattern": "^tables/[^/]+$",
                  "type": "string"
                },
                "view": {
                  "type": "string",
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ],
                  "location": "query",
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name."
                }
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "batchUpdate": {
              "description": "Updates multiple rows.",
              "id": "area120tables.tables.rows.batchUpdate",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "pattern": "^tables/[^/]+$",
                  "type": "string",
                  "description": "Required. The parent table shared by all rows being updated. Format: tables/{table}"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ],
              "request": {
                "$ref": "BatchUpdateRowsRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/rows:batchUpdate",
              "httpMethod": "POST",
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchUpdate",
              "response": {
                "$ref": "BatchUpdateRowsResponse"
              }
            },
            "patch": {
              "path": "v1alpha1/{+name}",
              "id": "area120tables.tables.rows.patch",
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "The list of fields to update.",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "description": "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row."
                },
                "view": {
                  "type": "string",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ],
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "location": "query"
                }
              },
              "request": {
                "$ref": "Row"
              },
              "response": {
                "$ref": "Row"
              },
              "description": "Updates a row.",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets"
              ],
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ]
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "documentationLink": "https://tables.area120.google.com",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://area120tables.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/drive.readonly": {
          "description": "See and download all your Google Drive files"
        },
        "https://www.googleapis.com/auth/spreadsheets": {
          "description": "See, edit, create, and delete your spreadsheets in Google Drive"
        },
        "https://www.googleapis.com/auth/drive": {
          "description": "See, edit, create, and delete all of your Google Drive files"
        },
        "https://www.googleapis.com/auth/spreadsheets.readonly": {
          "description": "View your Google Spreadsheets"
        },
        "https://www.googleapis.com/auth/drive.file": {
          "description": "View and manage Google Drive files and folders that you have opened or created with this app"
        }
      }
    }
  },
  "basePath": "",
  "ownerName": "Google",
  "name": "area120tables",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "ownerDomain": "google.com",
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "description": "V1 error format."
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    }
  },
  "version": "v1alpha1",
  "rootUrl": "https://area120tables.googleapis.com/",
  "schemas": {
    "BatchUpdateRowsResponse": {
      "description": "Response message for TablesService.BatchUpdateRows.",
      "type": "object",
      "id": "BatchUpdateRowsResponse",
      "properties": {
        "rows": {
          "items": {
            "$ref": "Row"
          },
          "type": "array",
          "description": "The updated rows."
        }
      }
    },
    "BatchUpdateRowsRequest": {
      "id": "BatchUpdateRowsRequest",
      "description": "Request message for TablesService.BatchUpdateRows.",
      "properties": {
        "requests": {
          "description": "Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch.",
          "items": {
            "$ref": "UpdateRowRequest"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RelationshipDetails": {
      "id": "RelationshipDetails",
      "type": "object",
      "description": "Details about a relationship column.",
      "properties": {
        "linkedTable": {
          "description": "The name of the table this relationship is linked to.",
          "type": "string"
        }
      }
    },
    "BatchCreateRowsRequest": {
      "type": "object",
      "id": "BatchCreateRowsRequest",
      "description": "Request message for TablesService.BatchCreateRows.",
      "properties": {
        "requests": {
          "items": {
            "$ref": "CreateRowRequest"
          },
          "description": "Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch.",
          "type": "array"
        }
      }
    },
    "Table": {
      "description": "A single table.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The human readable title of the table."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the table. Table names have the form `tables/{table}`."
        },
        "columns": {
          "description": "List of columns in this table. Order of columns matches the display order.",
          "type": "array",
          "items": {
            "$ref": "ColumnDescription"
          }
        }
      },
      "id": "Table",
      "type": "object"
    },
    "BatchCreateRowsResponse": {
      "properties": {
        "rows": {
          "description": "The created rows.",
          "items": {
            "$ref": "Row"
          },
          "type": "array"
        }
      },
      "id": "BatchCreateRowsResponse",
      "description": "Response message for TablesService.BatchCreateRows.",
      "type": "object"
    },
    "LookupDetails": {
      "description": "Details about a lookup column whose value comes from the associated relationship.",
      "id": "LookupDetails",
      "type": "object",
      "properties": {
        "relationshipColumnId": {
          "description": "The id of the relationship column.",
          "type": "string"
        },
        "relationshipColumn": {
          "type": "string",
          "description": "The name of the relationship column associated with the lookup."
        }
      }
    },
    "Row": {
      "type": "object",
      "description": "A single row in a table.",
      "properties": {
        "values": {
          "additionalProperties": {
            "type": "any"
          },
          "type": "object",
          "description": "The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request."
        },
        "name": {
          "description": "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.",
          "type": "string"
        }
      },
      "id": "Row"
    },
    "ColumnDescription": {
      "type": "object",
      "properties": {
        "labels": {
          "description": "Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation.",
          "type": "array",
          "items": {
            "$ref": "LabeledItem"
          }
        },
        "dataType": {
          "description": "Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website.",
          "type": "string"
        },
        "id": {
          "description": "Internal id for a column.",
          "type": "string"
        },
        "lookupDetails": {
          "$ref": "LookupDetails",
          "description": "Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column."
        },
        "relationshipDetails": {
          "description": "Optional. Additional details about a relationship column. Specified when data_type is relationship.",
          "$ref": "RelationshipDetails"
        },
        "name": {
          "description": "column name",
          "type": "string"
        }
      },
      "description": "Details on a column in the table.",
      "id": "ColumnDescription"
    },
    "CreateRowRequest": {
      "type": "object",
      "id": "CreateRowRequest",
      "properties": {
        "view": {
          "type": "string",
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
          "enum": [
            "VIEW_UNSPECIFIED",
            "COLUMN_ID_VIEW"
          ],
          "enumDescriptions": [
            "Defaults to user entered text.",
            "Uses internally generated column id to identify values."
          ]
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent table where this row will be created. Format: tables/{table}"
        },
        "row": {
          "description": "Required. The row to create.",
          "$ref": "Row"
        }
      },
      "description": "Request message for TablesService.CreateRow."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "properties": {},
      "type": "object"
    },
    "ListTablesResponse": {
      "properties": {
        "tables": {
          "items": {
            "$ref": "Table"
          },
          "type": "array",
          "description": "The list of tables."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListTablesResponse",
      "description": "Response message for TablesService.ListTables."
    },
    "UpdateRowRequest": {
      "description": "Request message for TablesService.UpdateRow.",
      "properties": {
        "row": {
          "$ref": "Row",
          "description": "Required. The row to update."
        },
        "updateMask": {
          "type": "string",
          "description": "The list of fields to update.",
          "format": "google-fieldmask"
        },
        "view": {
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
          "enum": [
            "VIEW_UNSPECIFIED",
            "COLUMN_ID_VIEW"
          ],
          "enumDescriptions": [
            "Defaults to user entered text.",
            "Uses internally generated column id to identify values."
          ],
          "type": "string"
        }
      },
      "id": "UpdateRowRequest",
      "type": "object"
    },
    "LabeledItem": {
      "id": "LabeledItem",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display string as entered by user."
        },
        "id": {
          "description": "Internal id associated with the item.",
          "type": "string"
        }
      },
      "description": "A single item in a labeled column.",
      "type": "object"
    },
    "ListRowsResponse": {
      "type": "object",
      "id": "ListRowsResponse",
      "description": "Response message for TablesService.ListRows.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "The rows from the specified table."
        }
      }
    }
  },
  "id": "area120tables:v1alpha1",
  "baseUrl": "https://area120tables.googleapis.com/",
  "title": "Area120 Tables API",
  "canonicalName": "Area120 Tables"
}
