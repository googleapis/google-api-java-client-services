{
  "description": "",
  "canonicalName": "PubsubLite",
  "kind": "discovery#restDescription",
  "id": "pubsublite:v1",
  "resources": {
    "admin": {
      "resources": {
        "projects": {
          "resources": {
            "locations": {
              "resources": {
                "subscriptions": {
                  "methods": {
                    "list": {
                      "description": "Returns the list of subscriptions for the given project.",
                      "id": "pubsublite.admin.projects.locations.subscriptions.list",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of subscriptions to return. The service may return fewer\nthan this value.\nIf unset or zero, all subscriptions for the parent will be returned."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent whose subscriptions are to be listed.\nStructured like `projects/{project_number}/locations/{location}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+$",
                          "required": true
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A page token, received from a previous `ListSubscriptions` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListSubscriptions` must\nmatch the call that provided the page token."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListSubscriptionsResponse"
                      },
                      "path": "v1/admin/{+parent}/subscriptions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the subscription whose configuration to return.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Subscription"
                      },
                      "path": "v1/admin/{+name}",
                      "id": "pubsublite.admin.projects.locations.subscriptions.get",
                      "description": "Returns the subscription configuration."
                    },
                    "create": {
                      "id": "pubsublite.admin.projects.locations.subscriptions.create",
                      "request": {
                        "$ref": "Subscription"
                      },
                      "response": {
                        "$ref": "Subscription"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "subscriptionId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. The ID to use for the subscription, which will become the final component\nof the subscription's name.\n\nThis value is structured like: `my-sub-name`."
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+$",
                          "description": "Required. The parent location in which to create the subscription.\nStructured like `projects/{project_number}/locations/{location}`."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/admin/{+parent}/subscriptions",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions",
                      "description": "Creates a new subscription."
                    },
                    "delete": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes the specified subscription.",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                      "path": "v1/admin/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the subscription to delete."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "pubsublite.admin.projects.locations.subscriptions.delete",
                      "httpMethod": "DELETE"
                    },
                    "patch": {
                      "description": "Updates properties of the specified subscription.",
                      "id": "pubsublite.admin.projects.locations.subscriptions.patch",
                      "path": "v1/admin/{+name}",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "description": "Required. A mask specifying the subscription fields to change.",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "The name of the subscription.\nStructured like:\nprojects/{project_number}/locations/{location}/subscriptions/{subscription_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "Subscription"
                      },
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                      "response": {
                        "$ref": "Subscription"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                },
                "topics": {
                  "methods": {
                    "get": {
                      "id": "pubsublite.admin.projects.locations.topics.get",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the topic whose configuration to return."
                        }
                      },
                      "description": "Returns the topic configuration.",
                      "path": "v1/admin/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Topic"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}",
                      "httpMethod": "GET"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListTopicsResponse"
                      },
                      "id": "pubsublite.admin.projects.locations.topics.list",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics",
                      "httpMethod": "GET",
                      "path": "v1/admin/{+parent}/topics",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A page token, received from a previous `ListTopics` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListTopics` must match\nthe call that provided the page token."
                        },
                        "parent": {
                          "description": "Required. The parent whose topics are to be listed.\nStructured like `projects/{project_number}/locations/{location}`.",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+$"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of topics to return. The service may return fewer than\nthis value.\nIf unset or zero, all topics for the parent will be returned.",
                          "format": "int32"
                        }
                      },
                      "description": "Returns the list of topics for the given project."
                    },
                    "delete": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/admin/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the topic to delete."
                        }
                      },
                      "id": "pubsublite.admin.projects.locations.topics.delete",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes the specified topic.",
                      "httpMethod": "DELETE"
                    },
                    "getPartitions": {
                      "path": "v1/admin/{+name}/partitions",
                      "id": "pubsublite.admin.projects.locations.topics.getPartitions",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}/partitions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The topic whose partition information to return.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "TopicPartitions"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Returns the partition information for the requested topic."
                    },
                    "patch": {
                      "path": "v1/admin/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "Topic"
                      },
                      "id": "pubsublite.admin.projects.locations.topics.patch",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "Topic"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}",
                      "description": "Updates properties of the specified topic.",
                      "parameters": {
                        "updateMask": {
                          "description": "Required. A mask specifying the topic fields to change.",
                          "type": "string",
                          "location": "query",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "The name of the topic.\nStructured like:\nprojects/{project_number}/locations/{location}/topics/{topic_id}",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$"
                        }
                      }
                    },
                    "create": {
                      "description": "Creates a new topic.",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Topic"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "pubsublite.admin.projects.locations.topics.create",
                      "request": {
                        "$ref": "Topic"
                      },
                      "path": "v1/admin/{+parent}/topics",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The parent location in which to create the topic.\nStructured like `projects/{project_number}/locations/{location}`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+$"
                        },
                        "topicId": {
                          "type": "string",
                          "description": "Required. The ID to use for the topic, which will become the final component of\nthe topic's name.\n\nThis value is structured like: `my-topic-name`.",
                          "location": "query"
                        }
                      }
                    }
                  },
                  "resources": {
                    "subscriptions": {
                      "methods": {
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "pubsublite.admin.projects.locations.topics.subscriptions.list",
                          "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}/subscriptions",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "ListTopicSubscriptionsResponse"
                          },
                          "path": "v1/admin/{+name}/subscriptions",
                          "parameters": {
                            "pageSize": {
                              "type": "integer",
                              "format": "int32",
                              "location": "query",
                              "description": "The maximum number of subscriptions to return. The service may return fewer\nthan this value.\nIf unset or zero, all subscriptions for the given topic will be returned."
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "A page token, received from a previous `ListTopicSubscriptions` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListTopicSubscriptions`\nmust match the call that provided the page token."
                            },
                            "name": {
                              "description": "Required. The name of the topic whose subscriptions to list.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true
                            }
                          },
                          "httpMethod": "GET",
                          "description": "Lists the subscriptions attached to the specified topic."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "cursor": {
      "resources": {
        "projects": {
          "resources": {
            "locations": {
              "resources": {
                "subscriptions": {
                  "resources": {
                    "cursors": {
                      "methods": {
                        "list": {
                          "httpMethod": "GET",
                          "flatPath": "v1/cursor/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}/cursors",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "pubsublite.cursor.projects.locations.subscriptions.cursors.list",
                          "response": {
                            "$ref": "ListPartitionCursorsResponse"
                          },
                          "path": "v1/cursor/{+parent}/cursors",
                          "description": "Returns all committed cursor information for a subscription.",
                          "parameters": {
                            "pageSize": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum number of cursors to return. The service may return fewer than\nthis value.\nIf unset or zero, all cursors for the parent will be returned.",
                              "location": "query"
                            },
                            "parent": {
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                              "type": "string",
                              "description": "Required. The subscription for which to retrieve cursors.\nStructured like\n`projects/{project_number}/locations/{location}/subscriptions/{subscription_id}`."
                            },
                            "pageToken": {
                              "location": "query",
                              "type": "string",
                              "description": "A page token, received from a previous `ListPartitionCursors` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListPartitionCursors`\nmust match the call that provided the page token."
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    }
  },
  "rootUrl": "https://pubsublite.googleapis.com/",
  "version": "v1",
  "batchPath": "batch",
  "name": "pubsublite",
  "protocol": "rest",
  "documentationLink": "https://cloud.google.com/pubsub/lite/docs",
  "discoveryVersion": "v1",
  "revision": "20200728",
  "version_module": true,
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://pubsublite.mtls.googleapis.com/",
  "ownerName": "Google",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "title": "Pub/Sub Lite API",
  "baseUrl": "https://pubsublite.googleapis.com/",
  "schemas": {
    "PartitionCursor": {
      "description": "A pair of a Cursor and the partition it is for.",
      "properties": {
        "cursor": {
          "description": "The value of the cursor.",
          "$ref": "Cursor"
        },
        "partition": {
          "type": "string",
          "description": "The partition this is for.",
          "format": "int64"
        }
      },
      "id": "PartitionCursor",
      "type": "object"
    },
    "RetentionConfig": {
      "id": "RetentionConfig",
      "type": "object",
      "properties": {
        "period": {
          "format": "google-duration",
          "description": "How long a published message is retained. If unset, messages will be\nretained as long as the bytes retained for each partition is below\n`per_partition_bytes`.",
          "type": "string"
        },
        "perPartitionBytes": {
          "format": "int64",
          "type": "string",
          "description": "The provisioned storage, in bytes, per partition. If the number of bytes\nstored in any of the topic's partitions grows beyond this value, older\nmessages will be dropped to make room for newer ones, regardless of the\nvalue of `period`."
        }
      },
      "description": "The settings for a topic's message retention."
    },
    "ListSubscriptionsResponse": {
      "type": "object",
      "description": "Response for ListSubscriptions.",
      "id": "ListSubscriptionsResponse",
      "properties": {
        "subscriptions": {
          "type": "array",
          "description": "The list of subscriptions in the requested parent. The order of the\nsubscriptions is unspecified.",
          "items": {
            "$ref": "Subscription"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page of\nresults. If this field is omitted, there are no more results."
        }
      }
    },
    "TopicPartitions": {
      "type": "object",
      "description": "Response for GetTopicPartitions.",
      "properties": {
        "partitionCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of partitions in the topic."
        }
      },
      "id": "TopicPartitions"
    },
    "Topic": {
      "type": "object",
      "id": "Topic",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the topic.\nStructured like:\nprojects/{project_number}/locations/{location}/topics/{topic_id}"
        },
        "partitionConfig": {
          "$ref": "PartitionConfig",
          "description": "The settings for this topic's partitions."
        },
        "retentionConfig": {
          "$ref": "RetentionConfig",
          "description": "The settings for this topic's message retention."
        }
      },
      "description": "Metadata about a topic resource."
    },
    "ListPartitionCursorsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "partitionCursors": {
          "description": "The partition cursors from this request.",
          "type": "array",
          "items": {
            "$ref": "PartitionCursor"
          }
        }
      },
      "id": "ListPartitionCursorsResponse",
      "description": "Response for ListPartitionCursors",
      "type": "object"
    },
    "Cursor": {
      "description": "A cursor that describes the position of a message within a topic partition.",
      "type": "object",
      "id": "Cursor",
      "properties": {
        "offset": {
          "format": "int64",
          "description": "The offset of a message within a topic partition. Must be greater than or\nequal 0.",
          "type": "string"
        }
      }
    },
    "DeliveryConfig": {
      "properties": {
        "deliveryRequirement": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The server does not wait for a published message to be successfully\nwritten to storage before delivering it to subscribers.",
            "The server will not deliver a published message to subscribers until\nthe message has been successfully written to storage. This will result\nin higher end-to-end latency, but consistent delivery."
          ],
          "enum": [
            "DELIVERY_REQUIREMENT_UNSPECIFIED",
            "DELIVER_IMMEDIATELY",
            "DELIVER_AFTER_STORED"
          ],
          "type": "string",
          "description": "The DeliveryRequirement for this subscription."
        }
      },
      "id": "DeliveryConfig",
      "type": "object",
      "description": "The settings for a subscription's message delivery."
    },
    "PartitionConfig": {
      "id": "PartitionConfig",
      "properties": {
        "scale": {
          "format": "int32",
          "description": "Every partition in the topic is allocated throughput equivalent to\n`scale` times the standard partition throughput (4 MiB/s). This is also\nreflected in the cost of this topic; a topic with `scale` of 2 and\ncount of 10 is charged for 20 partitions. This value must be in the\nrange [1,4].",
          "type": "integer"
        },
        "count": {
          "format": "int64",
          "description": "The number of partitions in the topic. Must be at least 1.",
          "type": "string"
        },
        "capacity": {
          "$ref": "Capacity",
          "description": "The capacity configuration."
        }
      },
      "description": "The settings for a topic's partitions.",
      "type": "object"
    },
    "ListTopicsResponse": {
      "description": "Response for ListTopics.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page of\nresults. If this field is omitted, there are no more results."
        },
        "topics": {
          "type": "array",
          "description": "The list of topic in the requested parent. The order of the topics is\nunspecified.",
          "items": {
            "$ref": "Topic"
          }
        }
      },
      "type": "object",
      "id": "ListTopicsResponse"
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ListTopicSubscriptionsResponse": {
      "id": "ListTopicSubscriptionsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page of\nresults. If this field is omitted, there are no more results."
        },
        "subscriptions": {
          "items": {
            "type": "string"
          },
          "description": "The names of subscriptions attached to the topic. The order of the\nsubscriptions is unspecified.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response for ListTopicSubscriptions."
    },
    "Capacity": {
      "type": "object",
      "properties": {
        "publishMibPerSec": {
          "type": "integer",
          "format": "int32",
          "description": "Publish throughput capacity per partition in MiB/s.\nMust be \u003e= 4 and \u003c= 16."
        },
        "subscribeMibPerSec": {
          "type": "integer",
          "description": "Subscribe throughput capacity per partition in MiB/s.\nMust be \u003e= 4 and \u003c= 32.",
          "format": "int32"
        }
      },
      "id": "Capacity",
      "description": "The throughput capacity configuration for each partition."
    },
    "Subscription": {
      "description": "Metadata about a subscription resource.",
      "id": "Subscription",
      "type": "object",
      "properties": {
        "deliveryConfig": {
          "$ref": "DeliveryConfig",
          "description": "The settings for this subscription's message delivery."
        },
        "name": {
          "type": "string",
          "description": "The name of the subscription.\nStructured like:\nprojects/{project_number}/locations/{location}/subscriptions/{subscription_id}"
        },
        "topic": {
          "type": "string",
          "description": "The name of the topic this subscription is attached to.\nStructured like:\nprojects/{project_number}/locations/{location}/topics/{topic_id}"
        }
      }
    }
  }
}
