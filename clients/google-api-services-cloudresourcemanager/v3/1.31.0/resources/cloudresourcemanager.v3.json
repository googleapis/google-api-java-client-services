{
  "basePath": "",
  "description": "Creates, reads, and updates metadata for Google Cloud Platform resource containers.",
  "mtlsRootUrl": "https://cloudresourcemanager.mtls.googleapis.com/",
  "title": "Cloud Resource Manager API",
  "fullyEncodeReservedExpansion": true,
  "version": "v3",
  "ownerName": "Google",
  "revision": "20210309",
  "rootUrl": "https://cloudresourcemanager.googleapis.com/",
  "version_module": true,
  "documentationLink": "https://cloud.google.com/resource-manager",
  "ownerDomain": "google.com",
  "name": "cloudresourcemanager",
  "id": "cloudresourcemanager:v3",
  "batchPath": "batch",
  "schemas": {
    "Empty": {
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {}
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse"
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array"
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "Policy",
      "type": "object"
    },
    "TagValue": {
      "description": "A TagValue is a child of a particular TagKey. This is used to group cloud resources for the purpose of controlling them using policies.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. User-assigned description of the TagValue. Must not exceed 256 characters. Read-write."
        },
        "name": {
          "type": "string",
          "description": "Immutable. Resource name for TagValue in the format `tagValues/456`."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Update time.",
          "type": "string"
        },
        "namespacedName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Namespaced name of the TagValue. Must be in the format `{organization_id}/{tag_key_short_name}/{short_name}`."
        },
        "etag": {
          "type": "string",
          "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagValueRequest for details."
        },
        "createTime": {
          "description": "Output only. Creation time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "shortName": {
          "description": "Required. Immutable. User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey. The short name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.",
          "type": "string"
        },
        "parent": {
          "description": "Immutable. The resource name of the new TagValue's parent TagKey. Must be of the form `tagKeys/{tag_key_id}`.",
          "type": "string"
        }
      },
      "id": "TagValue",
      "type": "object"
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        },
        "exemptedMembers": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "FolderOperationError": {
      "description": "A classification of the Folder Operation error.",
      "properties": {
        "errorMessageId": {
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "ACTIVE_FOLDER_HEIGHT_VIOLATION",
            "MAX_CHILD_FOLDERS_VIOLATION",
            "FOLDER_NAME_UNIQUENESS_VIOLATION",
            "RESOURCE_DELETED_VIOLATION",
            "PARENT_DELETED_VIOLATION",
            "CYCLE_INTRODUCED_VIOLATION",
            "FOLDER_BEING_MOVED_VIOLATION",
            "FOLDER_TO_DELETE_NON_EMPTY_VIOLATION",
            "DELETED_FOLDER_HEIGHT_VIOLATION"
          ],
          "description": "The type of operation error experienced.",
          "enumDescriptions": [
            "The error type was unrecognized or unspecified.",
            "The attempted action would violate the max folder depth constraint.",
            "The attempted action would violate the max child folders constraint.",
            "The attempted action would violate the locally-unique folder display_name constraint.",
            "The resource being moved has been deleted.",
            "The resource a folder was being added to has been deleted.",
            "The attempted action would introduce cycle in resource path.",
            "The attempted action would move a folder that is already being moved.",
            "The folder the caller is trying to delete contains active resources.",
            "The attempted action would violate the max deleted folder depth constraint."
          ],
          "type": "string"
        }
      },
      "id": "FolderOperationError",
      "type": "object"
    },
    "CreateTagValueMetadata": {
      "properties": {},
      "id": "CreateTagValueMetadata",
      "description": "Runtime operation information for creating a TagValue.",
      "type": "object"
    },
    "Lien": {
      "id": "Lien",
      "properties": {
        "reason": {
          "description": "Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200 characters. Example: 'Holds production API key'",
          "type": "string"
        },
        "name": {
          "description": "A system-generated unique identifier for this Lien. Example: `liens/1234abcd`",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens are supported. Example: `projects/1234`"
        },
        "origin": {
          "type": "string",
          "description": "A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically. Maximum length of 200 characters. Example: 'compute.googleapis.com'"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of this Lien."
        },
        "restrictions": {
          "description": "The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM permission. The server will validate the permissions against those for which Liens are supported. An empty list is meaningless and will be rejected. Example: ['resourcemanager.projects.delete']",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A Lien represents an encumbrance on the actions that can be performed on a resource."
    },
    "UpdateTagValueMetadata": {
      "properties": {},
      "type": "object",
      "description": "Runtime operation information for updating a TagValue.",
      "id": "UpdateTagValueMetadata"
    },
    "Expr": {
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr"
    },
    "AuditConfig": {
      "type": "object",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "id": "AuditConfig"
    },
    "TagBinding": {
      "properties": {
        "tagValue": {
          "type": "string",
          "description": "The TagValue of the TagBinding. Must be of the form `tagValues/456`."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the TagBinding. This is a String of the form: `tagBindings/{full-resource-name}/{tag-value-name}` (e.g. `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`)."
        },
        "parent": {
          "type": "string",
          "description": "The full resource name of the resource the TagValue is bound to. E.g. `//cloudresourcemanager.googleapis.com/projects/123`"
        }
      },
      "type": "object",
      "description": "A TagBinding represents a connection between a TagValue and a cloud resource (currently project, folder, or organization). Once a TagBinding is created, the TagValue is applied to all the descendants of the cloud resource.",
      "id": "TagBinding"
    },
    "TagKey": {
      "id": "TagKey",
      "properties": {
        "updateTime": {
          "description": "Output only. Update time.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "namespacedName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. Namespaced name of the TagKey."
        },
        "shortName": {
          "type": "string",
          "description": "Required. Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Creation time.",
          "format": "google-datetime",
          "type": "string"
        },
        "etag": {
          "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey."
        },
        "description": {
          "type": "string",
          "description": "Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write."
        },
        "parent": {
          "type": "string",
          "description": "Immutable. The resource name of the new TagKey's parent. Must be of the form `organizations/{org_id}`."
        }
      },
      "description": "A TagKey, used to group a set of TagValues.",
      "type": "object"
    },
    "ListTagKeysResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to `ListTagKeys` that indicates from where listing should continue.",
          "type": "string"
        },
        "tagKeys": {
          "type": "array",
          "description": "List of TagKeys that live under the specified parent in the request.",
          "items": {
            "$ref": "TagKey"
          }
        }
      },
      "id": "ListTagKeysResponse",
      "description": "The ListTagKeys response message.",
      "type": "object"
    },
    "GetPolicyOptions": {
      "type": "object",
      "properties": {
        "requestedPolicyVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "id": "GetPolicyOptions",
      "description": "Encapsulates settings provided to GetIamPolicy."
    },
    "DeleteTagValueMetadata": {
      "id": "DeleteTagValueMetadata",
      "properties": {},
      "type": "object",
      "description": "Runtime operation information for deleting a TagValue."
    },
    "Binding": {
      "type": "object",
      "id": "Binding",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "type": "array",
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "description": "Associates `members` with a `role`."
    },
    "Status": {
      "id": "Status",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "DeleteTagKeyMetadata": {
      "id": "DeleteTagKeyMetadata",
      "properties": {},
      "description": "Runtime operation information for deleting a TagKey.",
      "type": "object"
    },
    "ListLiensResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "liens": {
          "items": {
            "$ref": "Lien"
          },
          "description": "A list of Liens.",
          "type": "array"
        }
      },
      "description": "The response message for Liens.ListLiens.",
      "id": "ListLiensResponse"
    },
    "CloudresourcemanagerGoogleCloudResourcemanagerV2alpha1FolderOperation": {
      "id": "CloudresourcemanagerGoogleCloudResourcemanagerV2alpha1FolderOperation",
      "description": "Metadata describing a long running folder operation",
      "type": "object",
      "properties": {
        "sourceParent": {
          "type": "string",
          "description": "The resource name of the folder's parent. Only applicable when the operation_type is MOVE."
        },
        "destinationParent": {
          "type": "string",
          "description": "The resource name of the folder or organization we are either creating the folder under or moving the folder to."
        },
        "operationType": {
          "enumDescriptions": [
            "Operation type not specified.",
            "A create folder operation.",
            "A move folder operation."
          ],
          "type": "string",
          "description": "The type of this operation.",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "CREATE",
            "MOVE"
          ]
        },
        "displayName": {
          "description": "The display name of the folder.",
          "type": "string"
        }
      }
    },
    "ListTagBindingsResponse": {
      "id": "ListTagBindingsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to `ListTagBindings` that indicates from where listing should continue."
        },
        "tagBindings": {
          "type": "array",
          "items": {
            "$ref": "TagBinding"
          },
          "description": "A possibly paginated list of TagBindings for the specified TagValue or resource."
        }
      },
      "description": "The ListTagBindings response."
    },
    "FolderOperation": {
      "type": "object",
      "id": "FolderOperation",
      "description": "Metadata describing a long running folder operation",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the folder."
        },
        "operationType": {
          "type": "string",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "CREATE",
            "MOVE"
          ],
          "description": "The type of this operation.",
          "enumDescriptions": [
            "Operation type not specified.",
            "A create folder operation.",
            "A move folder operation."
          ]
        },
        "sourceParent": {
          "type": "string",
          "description": "The resource name of the folder's parent. Only applicable when the operation_type is MOVE."
        },
        "destinationParent": {
          "type": "string",
          "description": "The resource name of the folder or organization we are either creating the folder under or moving the folder to."
        }
      }
    },
    "ListTagValuesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to `ListTagValues` that indicates from where listing should continue. This is currently not used, but the server may at any point start supplying a valid token."
        },
        "tagValues": {
          "type": "array",
          "description": "A possibly paginated list of TagValues that are direct descendants of the specified parent TagKey.",
          "items": {
            "$ref": "TagValue"
          }
        }
      },
      "type": "object",
      "description": "The ListTagValues response.",
      "id": "ListTagValuesResponse"
    },
    "CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation": {
      "type": "object",
      "description": "Metadata describing a long running folder operation",
      "properties": {
        "sourceParent": {
          "description": "The resource name of the folder's parent. Only applicable when the operation_type is MOVE.",
          "type": "string"
        },
        "destinationParent": {
          "type": "string",
          "description": "The resource name of the folder or organization we are either creating the folder under or moving the folder to."
        },
        "displayName": {
          "description": "The display name of the folder.",
          "type": "string"
        },
        "operationType": {
          "description": "The type of this operation.",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "CREATE",
            "MOVE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Operation type not specified.",
            "A create folder operation.",
            "A move folder operation."
          ]
        }
      },
      "id": "CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation"
    },
    "GetIamPolicyRequest": {
      "description": "Request message for `GetIamPolicy` method.",
      "type": "object",
      "properties": {
        "options": {
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
          "$ref": "GetPolicyOptions"
        }
      },
      "id": "GetIamPolicyRequest"
    },
    "ProjectCreationStatus": {
      "id": "ProjectCreationStatus",
      "description": "A status object which is used as the `metadata` field for the Operation returned by CreateProject. It provides insight for when significant phases of Project creation have completed.",
      "properties": {
        "gettable": {
          "type": "boolean",
          "description": "True if the project can be retrieved using GetProject. No other operations on the project are guaranteed to work until the project creation is complete."
        },
        "ready": {
          "type": "boolean",
          "description": "True if the project creation process is complete."
        },
        "createTime": {
          "description": "Creation time of the project creation workflow.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateTagKeyMetadata": {
      "description": "Runtime operation information for updating a TagKey.",
      "properties": {},
      "id": "UpdateTagKeyMetadata",
      "type": "object"
    },
    "CreateTagKeyMetadata": {
      "properties": {},
      "type": "object",
      "id": "CreateTagKeyMetadata",
      "description": "Runtime operation information for creating a TagKey."
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation",
      "properties": {
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "servicePath": "",
  "baseUrl": "https://cloudresourcemanager.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "discoveryVersion": "v1",
  "kind": "discovery#restDescription",
  "resources": {
    "operations": {
      "methods": {
        "get": {
          "flatPath": "v3/operations/{operationsId}",
          "id": "cloudresourcemanager.operations.get",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "pattern": "^operations/.*$",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "path": "v3/{+name}",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        }
      }
    },
    "liens": {
      "methods": {
        "delete": {
          "id": "cloudresourcemanager.liens.delete",
          "httpMethod": "DELETE",
          "flatPath": "v3/liens/{liensId}",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Required. The name/identifier of the Lien to delete.",
              "location": "path",
              "pattern": "^liens/.*$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "path": "v3/{+name}",
          "description": "Delete a Lien by `name`. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.updateLiens`."
        },
        "create": {
          "id": "cloudresourcemanager.liens.create",
          "parameterOrder": [],
          "flatPath": "v3/liens",
          "response": {
            "$ref": "Lien"
          },
          "path": "v3/liens",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "description": "Create a Lien which applies to the resource denoted by the `parent` field. Callers of this method will require permission on the `parent` resource. For example, applying to `projects/1234` requires permission `resourcemanager.projects.updateLiens`. NOTE: Some resources may limit the number of Liens which may be applied.",
          "httpMethod": "POST",
          "parameters": {},
          "request": {
            "$ref": "Lien"
          }
        },
        "list": {
          "httpMethod": "GET",
          "description": "List all Liens applied to the `parent` resource. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.get`.",
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "The `next_page_token` value returned from a previous List request, if any.",
              "type": "string"
            },
            "parent": {
              "description": "Required. The name of the resource to list all attached Liens. For example, `projects/1234`. (google.api.field_policy).resource_type annotation is not set since the parent depends on the meta api implementation. This field could be a project or other sub project resources.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "type": "integer",
              "location": "query",
              "description": "The maximum number of items to return. This is a suggestion for the server.",
              "format": "int32"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "path": "v3/liens",
          "id": "cloudresourcemanager.liens.list",
          "parameterOrder": [],
          "flatPath": "v3/liens",
          "response": {
            "$ref": "ListLiensResponse"
          }
        },
        "get": {
          "description": "Retrieve a Lien by `name`. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.get`",
          "path": "v3/{+name}",
          "parameters": {
            "name": {
              "type": "string",
              "description": "Required. The name/identifier of the Lien.",
              "location": "path",
              "pattern": "^liens/.*$",
              "required": true
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "flatPath": "v3/liens/{liensId}",
          "id": "cloudresourcemanager.liens.get",
          "response": {
            "$ref": "Lien"
          },
          "parameterOrder": [
            "name"
          ]
        }
      }
    },
    "tagKeys": {
      "methods": {
        "get": {
          "description": "Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key does not exist or the user does not have permission to view it.",
          "path": "v3/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "response": {
            "$ref": "TagKey"
          },
          "parameters": {
            "name": {
              "type": "string",
              "description": "Required. A resource name in the format `tagKeys/{id}`, such as `tagKeys/123`.",
              "pattern": "^tagKeys/[^/]+$",
              "location": "path",
              "required": true
            }
          },
          "id": "cloudresourcemanager.tagKeys.get",
          "flatPath": "v3/tagKeys/{tagKeysId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ]
        },
        "getIamPolicy": {
          "flatPath": "v3/tagKeys/{tagKeysId}:getIamPolicy",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "response": {
            "$ref": "Policy"
          },
          "request": {
            "$ref": "GetIamPolicyRequest"
          },
          "parameterOrder": [
            "resource"
          ],
          "description": "Gets the access control policy for a TagKey. The returned policy may be empty if no such policy or resource exists. The `resource` field should be the TagKey's resource name. For example, \"tagKeys/1234\". The caller must have `cloudresourcemanager.googleapis.com/tagKeys.getIamPolicy` permission on the specified TagKey.",
          "path": "v3/{+resource}:getIamPolicy",
          "parameters": {
            "resource": {
              "location": "path",
              "pattern": "^tagKeys/[^/]+$",
              "type": "string",
              "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
              "required": true
            }
          },
          "id": "cloudresourcemanager.tagKeys.getIamPolicy"
        },
        "patch": {
          "description": "Updates the attributes of the TagKey resource.",
          "path": "v3/{+name}",
          "parameterOrder": [
            "name"
          ],
          "id": "cloudresourcemanager.tagKeys.patch",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v3/tagKeys/{tagKeysId}",
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "description": "Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey.",
              "location": "path",
              "required": true,
              "pattern": "^tagKeys/[^/]+$",
              "type": "string"
            },
            "validateOnly": {
              "type": "boolean",
              "description": "Set as true to perform validations necessary for updating the resource, but not actually perform the action.",
              "location": "query"
            },
            "updateMask": {
              "location": "query",
              "format": "google-fieldmask",
              "type": "string",
              "description": "Fields to be updated. The mask may only contain `description` or `etag`. If omitted entirely, both `description` and `etag` are assumed to be significant."
            }
          },
          "request": {
            "$ref": "TagKey"
          }
        },
        "create": {
          "response": {
            "$ref": "Operation"
          },
          "description": "Creates a new TagKey. If another request with the same parameters is sent while the original request is in process, the second request will receive an error. A maximum of 300 TagKeys can exist under a parent at any given time.",
          "httpMethod": "POST",
          "id": "cloudresourcemanager.tagKeys.create",
          "flatPath": "v3/tagKeys",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "TagKey"
          },
          "parameterOrder": [],
          "path": "v3/tagKeys",
          "parameters": {
            "validateOnly": {
              "type": "boolean",
              "description": "Optional. Set to true to perform validations necessary for creating the resource, but not actually perform the action.",
              "location": "query"
            }
          }
        },
        "testIamPermissions": {
          "request": {
            "$ref": "TestIamPermissionsRequest"
          },
          "flatPath": "v3/tagKeys/{tagKeysId}:testIamPermissions",
          "httpMethod": "POST",
          "parameters": {
            "resource": {
              "pattern": "^tagKeys/[^/]+$",
              "required": true,
              "location": "path",
              "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "TestIamPermissionsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v3/{+resource}:testIamPermissions",
          "description": "Returns permissions that a caller has on the specified TagKey. The `resource` field should be the TagKey's resource name. For example, \"tagKeys/1234\". There are no permissions required for making this API call.",
          "parameterOrder": [
            "resource"
          ],
          "id": "cloudresourcemanager.tagKeys.testIamPermissions"
        },
        "delete": {
          "description": "Deletes a TagKey. The TagKey cannot be deleted if it has any child TagValues.",
          "parameters": {
            "name": {
              "description": "Required. The resource name of a TagKey to be deleted in the format `tagKeys/123`. The TagKey cannot be a parent of any existing TagValues or it will not be deleted successfully.",
              "pattern": "^tagKeys/[^/]+$",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "etag": {
              "description": "Optional. The etag known to the client for the expected state of the TagKey. This is to be used for optimistic concurrency.",
              "location": "query",
              "type": "string"
            },
            "validateOnly": {
              "type": "boolean",
              "description": "Optional. Set as true to perform validations necessary for deletion, but not actually perform the action.",
              "location": "query"
            }
          },
          "id": "cloudresourcemanager.tagKeys.delete",
          "path": "v3/{+name}",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v3/tagKeys/{tagKeysId}"
        },
        "setIamPolicy": {
          "httpMethod": "POST",
          "request": {
            "$ref": "SetIamPolicyRequest"
          },
          "path": "v3/{+resource}:setIamPolicy",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "Policy"
          },
          "parameterOrder": [
            "resource"
          ],
          "flatPath": "v3/tagKeys/{tagKeysId}:setIamPolicy",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
              "pattern": "^tagKeys/[^/]+$",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "id": "cloudresourcemanager.tagKeys.setIamPolicy",
          "description": "Sets the access control policy on a TagKey, replacing any existing policy. The `resource` field should be the TagKey's resource name. For example, \"tagKeys/1234\". The caller must have `resourcemanager.tagKeys.setIamPolicy` permission on the identified tagValue."
        },
        "list": {
          "id": "cloudresourcemanager.tagKeys.list",
          "parameters": {
            "parent": {
              "description": "Required. The resource name of the new TagKey's parent. Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "type": "integer",
              "description": "Optional. The maximum number of TagKeys to return in the response. The server allows a maximum of 300 TagKeys to return. If unspecified, the server will use 100 as the default.",
              "format": "int32",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Optional. A pagination token returned from a previous call to `ListTagKey` that indicates where this listing should continue from."
            }
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "response": {
            "$ref": "ListTagKeysResponse"
          },
          "path": "v3/tagKeys",
          "httpMethod": "GET",
          "description": "Lists all TagKeys for a parent resource.",
          "flatPath": "v3/tagKeys"
        }
      }
    },
    "tagBindings": {
      "methods": {
        "create": {
          "flatPath": "v3/tagBindings",
          "path": "v3/tagBindings",
          "parameters": {
            "validateOnly": {
              "description": "Optional. Set to true to perform the validations necessary for creating the resource, but not actually perform the action.",
              "location": "query",
              "type": "boolean"
            }
          },
          "description": "Creates a TagBinding between a TagValue and a cloud resource (currently project, folder, or organization).",
          "id": "cloudresourcemanager.tagBindings.create",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "request": {
            "$ref": "TagBinding"
          }
        },
        "delete": {
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^tagBindings/.*$",
              "required": true,
              "type": "string",
              "description": "Required. The name of the TagBinding. This is a String of the form: `tagBindings/{id}` (e.g. `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`)."
            }
          },
          "description": "Deletes a TagBinding.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v3/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v3/tagBindings/{tagBindingsId}",
          "httpMethod": "DELETE",
          "id": "cloudresourcemanager.tagBindings.delete"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "path": "v3/tagBindings",
          "parameterOrder": [],
          "description": "Lists the TagBindings for the given cloud resource, as specified with `parent`. NOTE: The `parent` field is expected to be a full resource name: https://cloud.google.com/apis/design/resource_names#full_resource_name",
          "id": "cloudresourcemanager.tagBindings.list",
          "response": {
            "$ref": "ListTagBindingsResponse"
          },
          "httpMethod": "GET",
          "flatPath": "v3/tagBindings",
          "parameters": {
            "parent": {
              "location": "query",
              "description": "Required. The full resource name of a resource for which you want to list existing TagBindings. E.g. \"//cloudresourcemanager.googleapis.com/projects/123\"",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "Optional. A pagination token returned from a previous call to `ListTagBindings` that indicates where this listing should continue from.",
              "type": "string"
            },
            "pageSize": {
              "description": "Optional. The maximum number of TagBindings to return in the response. The server allows a maximum of 300 TagBindings to return. If unspecified, the server will use 100 as the default.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "tagValues": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "path": "v3/tagValues",
          "httpMethod": "GET",
          "description": "Lists all TagValues for a specific TagKey.",
          "flatPath": "v3/tagValues",
          "id": "cloudresourcemanager.tagValues.list",
          "parameters": {
            "pageSize": {
              "type": "integer",
              "description": "Optional. The maximum number of TagValues to return in the response. The server allows a maximum of 300 TagValues to return. If unspecified, the server will use 100 as the default.",
              "location": "query",
              "format": "int32"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Optional. A pagination token returned from a previous call to `ListTagValues` that indicates where this listing should continue from."
            },
            "parent": {
              "description": "Required. Resource name for TagKey, parent of the TagValues to be listed, in the format `tagKeys/123`.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "ListTagValuesResponse"
          }
        },
        "getIamPolicy": {
          "description": "Gets the access control policy for a TagValue. The returned policy may be empty if no such policy or resource exists. The `resource` field should be the TagValue's resource name. For example: `tagValues/1234`. The caller must have the `cloudresourcemanager.googleapis.com/tagValues.getIamPolicy` permission on the identified TagValue to get the access control policy.",
          "path": "v3/{+resource}:getIamPolicy",
          "parameterOrder": [
            "resource"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
              "location": "path",
              "required": true,
              "type": "string",
              "pattern": "^tagValues/[^/]+$"
            }
          },
          "id": "cloudresourcemanager.tagValues.getIamPolicy",
          "httpMethod": "POST",
          "flatPath": "v3/tagValues/{tagValuesId}:getIamPolicy",
          "response": {
            "$ref": "Policy"
          },
          "request": {
            "$ref": "GetIamPolicyRequest"
          }
        },
        "testIamPermissions": {
          "parameters": {
            "resource": {
              "pattern": "^tagValues/[^/]+$",
              "type": "string",
              "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
              "location": "path",
              "required": true
            }
          },
          "path": "v3/{+resource}:testIamPermissions",
          "flatPath": "v3/tagValues/{tagValuesId}:testIamPermissions",
          "parameterOrder": [
            "resource"
          ],
          "id": "cloudresourcemanager.tagValues.testIamPermissions",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "POST",
          "description": "Returns permissions that a caller has on the specified TagValue. The `resource` field should be the TagValue's resource name. For example: `tagValues/1234`. There are no permissions required for making this API call.",
          "request": {
            "$ref": "TestIamPermissionsRequest"
          },
          "response": {
            "$ref": "TestIamPermissionsResponse"
          }
        },
        "delete": {
          "flatPath": "v3/tagValues/{tagValuesId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "etag": {
              "description": "Optional. The etag known to the client for the expected state of the TagValue. This is to be used for optimistic concurrency.",
              "location": "query",
              "type": "string"
            },
            "validateOnly": {
              "location": "query",
              "description": "Optional. Set as true to perform the validations necessary for deletion, but not actually perform the action.",
              "type": "boolean"
            },
            "name": {
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^tagValues/[^/]+$",
              "description": "Required. Resource name for TagValue to be deleted in the format tagValues/456."
            }
          },
          "description": "Deletes a TagValue. The TagValue cannot have any bindings when it is deleted.",
          "id": "cloudresourcemanager.tagValues.delete",
          "path": "v3/{+name}",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "response": {
            "$ref": "Operation"
          }
        },
        "get": {
          "parameterOrder": [
            "name"
          ],
          "path": "v3/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "description": "Retrieves TagValue. If the TagValue or namespaced name does not exist, or if the user does not have permission to view it, this method will return `PERMISSION_DENIED`.",
          "flatPath": "v3/tagValues/{tagValuesId}",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^tagValues/[^/]+$",
              "location": "path",
              "description": "Required. Resource name for TagValue to be fetched in the format `tagValues/456`."
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "TagValue"
          },
          "id": "cloudresourcemanager.tagValues.get"
        },
        "patch": {
          "parameters": {
            "name": {
              "description": "Immutable. Resource name for TagValue in the format `tagValues/456`.",
              "pattern": "^tagValues/[^/]+$",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "updateMask": {
              "description": "Optional. Fields to be updated.",
              "type": "string",
              "format": "google-fieldmask",
              "location": "query"
            },
            "validateOnly": {
              "description": "Optional. True to perform validations necessary for updating the resource, but not actually perform the action.",
              "type": "boolean",
              "location": "query"
            }
          },
          "description": "Updates the attributes of the TagValue resource.",
          "id": "cloudresourcemanager.tagValues.patch",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "TagValue"
          },
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "PATCH",
          "flatPath": "v3/tagValues/{tagValuesId}",
          "path": "v3/{+name}"
        },
        "setIamPolicy": {
          "request": {
            "$ref": "SetIamPolicyRequest"
          },
          "path": "v3/{+resource}:setIamPolicy",
          "parameterOrder": [
            "resource"
          ],
          "id": "cloudresourcemanager.tagValues.setIamPolicy",
          "parameters": {
            "resource": {
              "required": true,
              "location": "path",
              "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
              "pattern": "^tagValues/[^/]+$",
              "type": "string"
            }
          },
          "flatPath": "v3/tagValues/{tagValuesId}:setIamPolicy",
          "description": "Sets the access control policy on a TagValue, replacing any existing policy. The `resource` field should be the TagValue's resource name. For example: `tagValues/1234`. The caller must have `resourcemanager.tagValues.setIamPolicy` permission on the identified tagValue.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "Policy"
          },
          "httpMethod": "POST"
        },
        "create": {
          "request": {
            "$ref": "TagValue"
          },
          "id": "cloudresourcemanager.tagValues.create",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v3/tagValues",
          "path": "v3/tagValues",
          "parameters": {
            "validateOnly": {
              "description": "Optional. Set as true to perform the validations necessary for creating the resource, but not actually perform the action.",
              "type": "boolean",
              "location": "query"
            }
          },
          "httpMethod": "POST",
          "description": "Creates a TagValue as a child of the specified TagKey. If a another request with the same parameters is sent while the original request is in process the second request will receive an error. A maximum of 300 TagValues can exist under a TagKey at any given time.",
          "parameterOrder": []
        }
      }
    }
  },
  "protocol": "rest",
  "canonicalName": "Cloud Resource Manager",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    }
  }
}
