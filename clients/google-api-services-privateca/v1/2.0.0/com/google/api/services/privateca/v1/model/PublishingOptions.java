/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.privateca.v1.model;

/**
 * Options relating to the publication of each CertificateAuthority's CA certificate and CRLs and
 * their inclusion as extensions in issued Certificates. The options set here apply to certificates
 * issued by any CertificateAuthority in the CaPool.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Certificate Authority API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PublishingOptions extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Specifies the encoding format of each CertificateAuthority's CA certificate and CRLs.
   * If this is omitted, CA certificates and CRLs will be published in PEM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String encodingFormat;

  /**
   * Optional. When true, publishes each CertificateAuthority's CA certificate and includes its URL
   * in the "Authority Information Access" X.509 extension in all issued Certificates. If this is
   * false, the CA certificate will not be published and the corresponding X.509 extension will not
   * be written in issued certificates.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean publishCaCert;

  /**
   * Optional. When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL
   * Distribution Points" X.509 extension in all issued Certificates. If this is false, CRLs will
   * not be published and the corresponding X.509 extension will not be written in issued
   * certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs
   * are also rebuilt shortly after a certificate is revoked.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean publishCrl;

  /**
   * Optional. Specifies the encoding format of each CertificateAuthority's CA certificate and CRLs.
   * If this is omitted, CA certificates and CRLs will be published in PEM.
   * @return value or {@code null} for none
   */
  public java.lang.String getEncodingFormat() {
    return encodingFormat;
  }

  /**
   * Optional. Specifies the encoding format of each CertificateAuthority's CA certificate and CRLs.
   * If this is omitted, CA certificates and CRLs will be published in PEM.
   * @param encodingFormat encodingFormat or {@code null} for none
   */
  public PublishingOptions setEncodingFormat(java.lang.String encodingFormat) {
    this.encodingFormat = encodingFormat;
    return this;
  }

  /**
   * Optional. When true, publishes each CertificateAuthority's CA certificate and includes its URL
   * in the "Authority Information Access" X.509 extension in all issued Certificates. If this is
   * false, the CA certificate will not be published and the corresponding X.509 extension will not
   * be written in issued certificates.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPublishCaCert() {
    return publishCaCert;
  }

  /**
   * Optional. When true, publishes each CertificateAuthority's CA certificate and includes its URL
   * in the "Authority Information Access" X.509 extension in all issued Certificates. If this is
   * false, the CA certificate will not be published and the corresponding X.509 extension will not
   * be written in issued certificates.
   * @param publishCaCert publishCaCert or {@code null} for none
   */
  public PublishingOptions setPublishCaCert(java.lang.Boolean publishCaCert) {
    this.publishCaCert = publishCaCert;
    return this;
  }

  /**
   * Optional. When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL
   * Distribution Points" X.509 extension in all issued Certificates. If this is false, CRLs will
   * not be published and the corresponding X.509 extension will not be written in issued
   * certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs
   * are also rebuilt shortly after a certificate is revoked.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPublishCrl() {
    return publishCrl;
  }

  /**
   * Optional. When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL
   * Distribution Points" X.509 extension in all issued Certificates. If this is false, CRLs will
   * not be published and the corresponding X.509 extension will not be written in issued
   * certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs
   * are also rebuilt shortly after a certificate is revoked.
   * @param publishCrl publishCrl or {@code null} for none
   */
  public PublishingOptions setPublishCrl(java.lang.Boolean publishCrl) {
    this.publishCrl = publishCrl;
    return this;
  }

  @Override
  public PublishingOptions set(String fieldName, Object value) {
    return (PublishingOptions) super.set(fieldName, value);
  }

  @Override
  public PublishingOptions clone() {
    return (PublishingOptions) super.clone();
  }

}
