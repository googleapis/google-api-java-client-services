{
  "resources": {
    "myconfig": {
      "methods": {
        "releaseDownloadAccess": {
          "response": {
            "$ref": "DownloadAccesses"
          },
          "description": "Release downloaded content access restriction.",
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.myconfig.releaseDownloadAccess",
          "httpMethod": "POST",
          "parameters": {
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query",
              "type": "string"
            },
            "cpksver": {
              "description": "The device/version ID from which to release the restriction.",
              "location": "query",
              "type": "string"
            },
            "volumeIds": {
              "description": "The volume(s) to release restrictions for.",
              "type": "string",
              "repeated": true,
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            }
          }
        },
        "requestAccess": {
          "path": "books/v1/myconfig/requestAccess",
          "parameterOrder": [],
          "flatPath": "books/v1/myconfig/requestAccess",
          "parameters": {
            "nonce": {
              "type": "string",
              "description": "The client nonce value.",
              "location": "query"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string",
              "location": "query"
            },
            "cpksver": {
              "type": "string",
              "description": "The device/version ID from which to request the restrictions.",
              "location": "query"
            },
            "volumeId": {
              "type": "string",
              "description": "The volume to request concurrent/download restrictions for.",
              "location": "query"
            },
            "licenseTypes": {
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "type": "string",
              "description": "The type of access license to request. If not specified, the default is\nBOTH.",
              "location": "query"
            }
          },
          "id": "books.myconfig.requestAccess",
          "httpMethod": "POST",
          "response": {
            "$ref": "RequestAccessData"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Request concurrent and download access restrictions."
        },
        "updateUserSettings": {
          "description": "Sets the settings for the user. If a sub-object is specified, it will\noverwrite the existing sub-object stored in the server. Unspecified\nsub-objects will retain the existing value.",
          "request": {
            "$ref": "Usersettings"
          },
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "path": "books/v1/myconfig/updateUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "id": "books.myconfig.updateUserSettings",
          "httpMethod": "POST",
          "parameters": {}
        },
        "getUserSettings": {
          "id": "books.myconfig.getUserSettings",
          "parameterOrder": [],
          "response": {
            "$ref": "Usersettings"
          },
          "description": "Gets the current settings for the user.",
          "parameters": {
            "country": {
              "description": "Unused. Added only to workaround TEX mandatory request template requirement",
              "location": "query",
              "type": "string"
            }
          },
          "path": "books/v1/myconfig/getUserSettings",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/getUserSettings"
        },
        "syncVolumeLicenses": {
          "id": "books.myconfig.syncVolumeLicenses",
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "parameters": {
            "features": {
              "type": "string",
              "location": "query",
              "repeated": true,
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "description": "List of features supported by the client, i.e., 'RENTALS'"
            },
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "nonce": {
              "location": "query",
              "type": "string",
              "description": "The client nonce value."
            },
            "volumeIds": {
              "type": "string",
              "location": "query",
              "description": "The volume(s) to request download restrictions for.",
              "repeated": true
            },
            "showPreorders": {
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "cpksver": {
              "type": "string",
              "description": "The device/version ID from which to release the restriction.",
              "location": "query"
            }
          },
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "httpMethod": "POST",
          "description": "Request downloaded content access for specified volumes on the My eBooks\nshelf.",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Volumes"
          }
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "parameters": {
            "maxAllowedMaturityRating": {
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "type": "string"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "books/v1/personalizedstream/get",
          "description": "Returns a stream of personalized book clusters",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/personalizedstream/get",
          "id": "books.personalizedstream.get",
          "response": {
            "$ref": "Discoveryclusters"
          },
          "parameterOrder": []
        }
      }
    },
    "promooffer": {
      "methods": {
        "dismiss": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "id": "books.promooffer.dismiss",
          "parameters": {
            "offerId": {
              "location": "query",
              "type": "string",
              "description": "Offer to dimiss"
            },
            "manufacturer": {
              "description": "device manufacturer",
              "type": "string",
              "location": "query"
            },
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "serial": {
              "type": "string",
              "description": "device serial",
              "location": "query"
            },
            "androidId": {
              "description": "device android_id",
              "location": "query",
              "type": "string"
            },
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            }
          },
          "description": "Marks the promo offer as dismissed.",
          "flatPath": "books/v1/promooffer/dismiss",
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "path": "books/v1/promooffer/dismiss"
        },
        "accept": {
          "parameters": {
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "manufacturer": {
              "location": "query",
              "description": "device manufacturer",
              "type": "string"
            },
            "offerId": {
              "location": "query",
              "type": "string"
            },
            "product": {
              "type": "string",
              "description": "device product",
              "location": "query"
            },
            "volumeId": {
              "type": "string",
              "description": "Volume id to exercise the offer",
              "location": "query"
            },
            "serial": {
              "type": "string",
              "location": "query",
              "description": "device serial"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Empty"
          },
          "path": "books/v1/promooffer/accept",
          "id": "books.promooffer.accept",
          "httpMethod": "POST",
          "description": "Accepts the promo offer.",
          "flatPath": "books/v1/promooffer/accept",
          "parameterOrder": []
        },
        "get": {
          "description": "Returns a list of promo offers available to the user",
          "parameterOrder": [],
          "path": "books/v1/promooffer/get",
          "parameters": {
            "serial": {
              "location": "query",
              "description": "device serial",
              "type": "string"
            },
            "product": {
              "location": "query",
              "type": "string",
              "description": "device product"
            },
            "androidId": {
              "description": "device android_id",
              "location": "query",
              "type": "string"
            },
            "model": {
              "location": "query",
              "description": "device model",
              "type": "string"
            },
            "device": {
              "location": "query",
              "description": "device device",
              "type": "string"
            },
            "manufacturer": {
              "location": "query",
              "description": "device manufacturer",
              "type": "string"
            }
          },
          "id": "books.promooffer.get",
          "flatPath": "books/v1/promooffer/get",
          "httpMethod": "GET",
          "response": {
            "$ref": "Offers"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "series": {
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/series/membership/get",
              "httpMethod": "GET",
              "parameterOrder": [],
              "id": "books.series.membership.get",
              "parameters": {
                "series_id": {
                  "type": "string",
                  "location": "query",
                  "description": "String that identifies the series"
                },
                "page_token": {
                  "location": "query",
                  "type": "string",
                  "description": "The value of the nextToken from the previous page."
                },
                "page_size": {
                  "location": "query",
                  "description": "Number of maximum results per page to be included in the response.",
                  "type": "integer",
                  "format": "uint32"
                }
              },
              "response": {
                "$ref": "Seriesmembership"
              },
              "path": "books/v1/series/membership/get",
              "description": "Returns Series membership data given the series id."
            }
          }
        }
      },
      "methods": {
        "get": {
          "path": "books/v1/series/get",
          "description": "Returns Series metadata for the given series ids.",
          "httpMethod": "GET",
          "flatPath": "books/v1/series/get",
          "id": "books.series.get",
          "response": {
            "$ref": "Series"
          },
          "parameters": {
            "series_id": {
              "description": "String that identifies the series",
              "repeated": true,
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": []
        }
      }
    },
    "bookshelves": {
      "methods": {
        "get": {
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "httpMethod": "GET",
          "id": "books.bookshelves.get",
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "response": {
            "$ref": "Bookshelf"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "userId": {
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves.",
              "required": true,
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "shelf": {
              "type": "string",
              "description": "ID of bookshelf to retrieve.",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "parameterOrder": [
            "userId",
            "shelf"
          ]
        },
        "list": {
          "path": "books/v1/users/{userId}/bookshelves",
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "parameters": {
            "userId": {
              "description": "ID of user for whom to retrieve bookshelves.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Bookshelves"
          },
          "id": "books.bookshelves.list",
          "parameterOrder": [
            "userId"
          ],
          "httpMethod": "GET"
        }
      },
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "parameters": {
                "shelf": {
                  "location": "path",
                  "type": "string",
                  "description": "ID of bookshelf to retrieve volumes.",
                  "required": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "startIndex": {
                  "format": "uint32",
                  "description": "Index of the first element to return (starts at 0)",
                  "location": "query",
                  "type": "integer"
                },
                "maxResults": {
                  "location": "query",
                  "type": "integer",
                  "description": "Maximum number of results to return",
                  "format": "uint32"
                },
                "userId": {
                  "required": true,
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "location": "path",
                  "type": "string"
                },
                "showPreorders": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to true to show pre-ordered books. Defaults to false."
                }
              },
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "response": {
                "$ref": "Volumes"
              },
              "httpMethod": "GET",
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "id": "books.bookshelves.volumes.list"
            }
          }
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "description": "Returns notification details for a given notification id.",
          "httpMethod": "GET",
          "parameters": {
            "notification_id": {
              "description": "String to identify the notification.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating notification title and body."
            }
          },
          "id": "books.notification.get",
          "flatPath": "books/v1/notification/get",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Notification"
          },
          "path": "books/v1/notification/get"
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategoryVolumes": {
          "id": "books.onboarding.listCategoryVolumes",
          "description": "List available volumes under categories for onboarding experience.",
          "httpMethod": "GET",
          "response": {
            "$ref": "Volume2"
          },
          "parameters": {
            "pageSize": {
              "location": "query",
              "type": "integer",
              "description": "Number of maximum results per page to be included in the response.",
              "format": "uint32"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The value of the nextToken from the previous page."
            },
            "categoryId": {
              "repeated": true,
              "description": "List of category ids requested.",
              "type": "string",
              "location": "query"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "location": "query",
              "description": "The maximum allowed maturity rating of returned volumes. Books with a\nhigher maturity rating are filtered out.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/onboarding/listCategoryVolumes",
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "parameterOrder": []
        },
        "listCategories": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "flatPath": "books/v1/onboarding/listCategories",
          "path": "books/v1/onboarding/listCategories",
          "response": {
            "$ref": "Category"
          },
          "parameters": {
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."
            }
          },
          "description": "List categories for onboarding experience.",
          "id": "books.onboarding.listCategories",
          "httpMethod": "GET"
        }
      }
    },
    "familysharing": {
      "methods": {
        "getFamilyInfo": {
          "response": {
            "$ref": "FamilyInfo"
          },
          "parameterOrder": [],
          "description": "Gets information regarding the family that the user is part of.",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "id": "books.familysharing.getFamilyInfo",
          "httpMethod": "GET",
          "path": "books/v1/familysharing/getFamilyInfo",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/familysharing/getFamilyInfo"
        },
        "share": {
          "flatPath": "books/v1/familysharing/share",
          "path": "books/v1/familysharing/share",
          "httpMethod": "POST",
          "description": "Initiates sharing of the content with the user's family. Empty response\nindicates success.",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "docId": {
              "location": "query",
              "type": "string",
              "description": "The docid to share."
            },
            "volumeId": {
              "location": "query",
              "type": "string",
              "description": "The volume to share."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "id": "books.familysharing.share",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "unshare": {
          "path": "books/v1/familysharing/unshare",
          "flatPath": "books/v1/familysharing/unshare",
          "parameters": {
            "docId": {
              "type": "string",
              "description": "The docid to unshare.",
              "location": "query"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "volumeId": {
              "location": "query",
              "type": "string",
              "description": "The volume to unshare."
            }
          },
          "httpMethod": "POST",
          "id": "books.familysharing.unshare",
          "description": "Initiates revoking content that has already been shared with the user's\nfamily. Empty response indicates success.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          }
        }
      }
    },
    "mylibrary": {
      "resources": {
        "bookshelves": {
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "maxResults": {
                      "type": "integer",
                      "description": "Maximum number of results to return",
                      "format": "uint32",
                      "location": "query"
                    },
                    "projection": {
                      "type": "string",
                      "description": "Restrict information returned to a set of selected fields.",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "location": "query"
                    },
                    "shelf": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The bookshelf ID or name retrieve volumes for."
                    },
                    "source": {
                      "location": "query",
                      "type": "string",
                      "description": "String to identify the originator of this request."
                    },
                    "startIndex": {
                      "description": "Index of the first element to return (starts at 0)",
                      "type": "integer",
                      "location": "query",
                      "format": "uint32"
                    },
                    "showPreorders": {
                      "description": "Set to true to show pre-ordered books. Defaults to false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "q": {
                      "description": "Full-text search query string in this bookshelf.",
                      "type": "string",
                      "location": "query"
                    },
                    "country": {
                      "type": "string",
                      "location": "query",
                      "description": "ISO-3166-1 code to override the IP-based location."
                    }
                  },
                  "response": {
                    "$ref": "Volumes"
                  },
                  "parameterOrder": [
                    "shelf"
                  ],
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes"
                }
              }
            }
          },
          "methods": {
            "clearVolumes": {
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Clears all volumes from a bookshelf.",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "parameterOrder": [
                "shelf"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "shelf": {
                  "location": "path",
                  "required": true,
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "id": "books.mylibrary.bookshelves.clearVolumes"
            },
            "get": {
              "id": "books.mylibrary.bookshelves.get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "shelf": {
                  "required": true,
                  "location": "path",
                  "description": "ID of bookshelf to retrieve.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Bookshelf"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "shelf"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated\nuser.",
              "path": "books/v1/mylibrary/bookshelves/{shelf}"
            },
            "moveVolume": {
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "shelf": {
                  "type": "string",
                  "description": "ID of bookshelf with the volume.",
                  "required": true,
                  "location": "path"
                },
                "volumePosition": {
                  "location": "query",
                  "description": "Position on shelf to move the item (0 puts the item before the current\nfirst item, 1 puts it between the first and the second and so on.)",
                  "type": "integer",
                  "format": "int32"
                },
                "volumeId": {
                  "location": "query",
                  "description": "ID of volume to move.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "id": "books.mylibrary.bookshelves.moveVolume",
              "description": "Moves a volume within a bookshelf.",
              "parameterOrder": [
                "shelf"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "list": {
              "path": "books/v1/mylibrary/bookshelves",
              "id": "books.mylibrary.bookshelves.list",
              "flatPath": "books/v1/mylibrary/bookshelves",
              "parameterOrder": [],
              "response": {
                "$ref": "Bookshelves"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "httpMethod": "GET"
            },
            "addVolume": {
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "description": "Adds a volume to a bookshelf.",
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.bookshelves.addVolume",
              "httpMethod": "POST",
              "parameterOrder": [
                "shelf"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "reason": {
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "type": "string",
                  "description": "The reason for which the book is added to the library.",
                  "location": "query"
                },
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf to which to add a volume.",
                  "type": "string",
                  "required": true
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "ID of volume to add."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              }
            },
            "removeVolume": {
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "reason": {
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "type": "string",
                  "description": "The reason for which the book is removed from the library.",
                  "location": "query"
                },
                "volumeId": {
                  "description": "ID of volume to remove.",
                  "location": "query",
                  "type": "string"
                },
                "shelf": {
                  "type": "string",
                  "required": true,
                  "description": "ID of bookshelf from which to remove a volume.",
                  "location": "path"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Removes a volume from a bookshelf.",
              "id": "books.mylibrary.bookshelves.removeVolume",
              "parameterOrder": [
                "shelf"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "httpMethod": "POST"
            }
          }
        },
        "readingpositions": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "parameterOrder": [
                "volumeId"
              ],
              "description": "Retrieves my reading position information for a volume.",
              "response": {
                "$ref": "ReadingPosition"
              },
              "id": "books.mylibrary.readingpositions.get",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "description": "ID of volume for which to retrieve a reading position.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Volume content version for which this reading position is requested."
                }
              }
            },
            "setPosition": {
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.readingpositions.setPosition",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "POST",
              "parameters": {
                "position": {
                  "description": "Position string for the new volume reading position.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "ID of volume for which to update the reading position."
                },
                "action": {
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "description": "Action that caused this reading position to be set.",
                  "type": "string",
                  "location": "query"
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "Volume content version for which this reading position applies."
                },
                "timestamp": {
                  "type": "string",
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "location": "query"
                },
                "deviceCookie": {
                  "description": "Random persistent device cookie optional on set position.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "parameterOrder": [
                "volumeId"
              ],
              "description": "Sets my reading position information for a volume."
            }
          }
        },
        "annotations": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/annotations",
              "httpMethod": "GET",
              "parameterOrder": [],
              "parameters": {
                "updatedMax": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive).",
                  "type": "string"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "The content version for the requested volume.",
                  "location": "query"
                },
                "layerId": {
                  "location": "query",
                  "type": "string",
                  "description": "The layer ID to limit annotation by."
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false.",
                  "type": "boolean"
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return",
                  "format": "uint32",
                  "type": "integer"
                },
                "updatedMin": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive)."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "description": "The volume to restrict annotations to.",
                  "type": "string",
                  "location": "query"
                },
                "layerIds": {
                  "location": "query",
                  "repeated": true,
                  "description": "The layer ID(s) to limit annotation by.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                }
              },
              "description": "Retrieves a list of annotations, possibly filtered.",
              "id": "books.mylibrary.annotations.list",
              "flatPath": "books/v1/mylibrary/annotations",
              "response": {
                "$ref": "Annotations"
              }
            },
            "insert": {
              "response": {
                "$ref": "Annotation"
              },
              "path": "books/v1/mylibrary/annotations",
              "httpMethod": "POST",
              "flatPath": "books/v1/mylibrary/annotations",
              "description": "Inserts a new annotation.",
              "id": "books.mylibrary.annotations.insert",
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "annotationId": {
                  "location": "query",
                  "type": "string",
                  "description": "The ID for the annotation to insert."
                },
                "country": {
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query",
                  "type": "string"
                },
                "showOnlySummaryInResponse": {
                  "type": "boolean",
                  "description": "Requests that only the summary of the specified layer be provided in the\nresponse.",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "request": {
                "$ref": "Annotation"
              },
              "parameterOrder": []
            },
            "update": {
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "httpMethod": "PUT",
              "id": "books.mylibrary.annotations.update",
              "request": {
                "$ref": "Annotation"
              },
              "description": "Updates an existing annotation.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "annotationId"
              ],
              "parameters": {
                "annotationId": {
                  "required": true,
                  "description": "The ID for the annotation to update.",
                  "type": "string",
                  "location": "path"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Annotation"
              },
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}"
            },
            "summary": {
              "id": "books.mylibrary.annotations.summary",
              "httpMethod": "POST",
              "description": "Gets the summary of specified layers.",
              "path": "books/v1/mylibrary/annotations/summary",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "volumeId": {
                  "type": "string",
                  "description": "Volume id to get the summary for.",
                  "location": "query"
                },
                "layerIds": {
                  "description": "Array of layer IDs to get the summary for.",
                  "location": "query",
                  "type": "string",
                  "repeated": true
                }
              }
            },
            "delete": {
              "description": "Deletes an annotation.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "annotationId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "annotationId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The ID for the annotation to delete."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "books.mylibrary.annotations.delete",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "path": "books/v1/mylibrary/annotations/{annotationId}"
            }
          }
        }
      }
    },
    "layers": {
      "resources": {
        "volumeAnnotations": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "showDeleted": {
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false.",
                  "location": "query"
                },
                "maxResults": {
                  "location": "query",
                  "type": "integer",
                  "format": "uint32",
                  "description": "Maximum number of results to return"
                },
                "volumeAnnotationsVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The version of the volume annotations that you are requesting."
                },
                "volumeId": {
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "endOffset": {
                  "location": "query",
                  "type": "string",
                  "description": "The end offset to end retrieving data from."
                },
                "layerId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the layer to get the annotations."
                },
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive)."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "location": "query",
                  "type": "string"
                },
                "startOffset": {
                  "location": "query",
                  "description": "The start offset to start retrieving data from.",
                  "type": "string"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "location": "query",
                  "type": "string"
                },
                "endPosition": {
                  "type": "string",
                  "description": "The end position to end retrieving data from.",
                  "location": "query"
                },
                "startPosition": {
                  "description": "The start position to start retrieving data from.",
                  "type": "string",
                  "location": "query"
                },
                "updatedMin": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive)."
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.volumeAnnotations.list",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "response": {
                "$ref": "Volumeannotations"
              },
              "description": "Gets the volume annotations for a volume and layer.",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}"
            },
            "get": {
              "response": {
                "$ref": "Volumeannotation"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "httpMethod": "GET",
              "id": "books.layers.volumeAnnotations.get",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "layerId": {
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'."
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "annotationId": {
                  "description": "The ID of the volume annotation to retrieve.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Gets the volume annotation.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        },
        "annotationData": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.annotationData.get",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "httpMethod": "GET",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "parameters": {
                "allowWebDefinitions": {
                  "type": "boolean",
                  "location": "query",
                  "description": "For the dictionary layer. Whether or not to allow web definitions."
                },
                "scale": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The requested scale for the image.",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "w": {
                  "description": "The requested pixel width for any images. If width is provided height must\nalso be provided.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'."
                },
                "contentVersion": {
                  "description": "The content version for the volume you are trying to retrieve.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The volume to retrieve annotations for."
                },
                "h": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must\nalso be provided.",
                  "location": "query"
                },
                "layerId": {
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "location": "path",
                  "required": true
                },
                "annotationDataId": {
                  "description": "The ID of the annotation data to retrieve.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "description": "Gets the annotation data.",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId"
              ]
            },
            "list": {
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "id": "books.layers.annotationData.list",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "description": "Gets the annotation data for a volume and layer.",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "httpMethod": "GET",
              "response": {
                "$ref": "Annotationsdata"
              },
              "parameters": {
                "locale": {
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "type": "string"
                },
                "scale": {
                  "description": "The requested scale for the image.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "annotationDataId": {
                  "location": "query",
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this\nis set.",
                  "repeated": true,
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The volume to retrieve annotation data for."
                },
                "h": {
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must\nalso be provided.",
                  "location": "query",
                  "type": "integer"
                },
                "w": {
                  "description": "The requested pixel width for any images. If width is provided height must\nalso be provided.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive)."
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The content version for the requested volume."
                },
                "pageToken": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                },
                "updatedMin": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive)."
                },
                "maxResults": {
                  "description": "Maximum number of results to return",
                  "format": "uint32",
                  "type": "integer",
                  "location": "query"
                },
                "layerId": {
                  "location": "path",
                  "required": true,
                  "description": "The ID for the layer to get the annotation data.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        }
      },
      "methods": {
        "get": {
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "id": "books.layers.get",
          "description": "Gets the layer summary for a volume.",
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "httpMethod": "GET",
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "parameters": {
            "volumeId": {
              "type": "string",
              "description": "The volume to retrieve layers for.",
              "required": true,
              "location": "path"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "summaryId": {
              "description": "The ID for the layer to get the summary for.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "contentVersion": {
              "location": "query",
              "type": "string",
              "description": "The content version for the requested volume."
            }
          },
          "response": {
            "$ref": "Layersummary"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "list": {
          "parameters": {
            "volumeId": {
              "description": "The volume to retrieve layers for.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "contentVersion": {
              "location": "query",
              "description": "The content version for the requested volume.",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The value of the nextToken from the previous page."
            },
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "description": "Maximum number of results to return",
              "location": "query"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          },
          "response": {
            "$ref": "Layersummaries"
          },
          "description": "List the layer summaries for a volume.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "parameterOrder": [
            "volumeId"
          ],
          "httpMethod": "GET",
          "id": "books.layers.list"
        }
      }
    },
    "volumes": {
      "resources": {
        "associated": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "description": "Return a list of associated books.",
              "path": "books/v1/volumes/{volumeId}/associated",
              "httpMethod": "GET",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "maxAllowedMaturityRating": {
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ]
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations."
                },
                "association": {
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ],
                  "type": "string",
                  "description": "Association type.",
                  "location": "query"
                },
                "volumeId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "ID of the source volume."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "id": "books.volumes.associated.list",
              "parameterOrder": [
                "volumeId"
              ]
            }
          }
        },
        "recommended": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/recommended",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Return a list of recommended books for the current user.",
              "parameterOrder": [],
              "httpMethod": "GET",
              "parameters": {
                "maxAllowedMaturityRating": {
                  "location": "query",
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
                  "type": "string",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ]
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "Volumes"
              },
              "id": "books.volumes.recommended.list",
              "flatPath": "books/v1/volumes/recommended"
            },
            "rate": {
              "parameterOrder": [],
              "flatPath": "books/v1/volumes/recommended/rate",
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "id": "books.volumes.recommended.rate",
              "description": "Rate a recommended book for the current user.",
              "path": "books/v1/volumes/recommended/rate",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "POST",
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string"
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "ID of the source volume."
                },
                "rating": {
                  "description": "Rating to be given to the volume.",
                  "type": "string",
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "location": "query"
                }
              }
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "httpMethod": "GET",
              "parameters": {
                "startIndex": {
                  "type": "integer",
                  "format": "uint32",
                  "location": "query",
                  "description": "Index of the first result to return (starts at 0)"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string"
                },
                "maxResults": {
                  "format": "uint32",
                  "description": "Maximum number of results to return.",
                  "location": "query",
                  "type": "integer"
                },
                "volumeId": {
                  "description": "The ids of the volumes to be returned. If not specified all that match the\nprocessingState are returned.",
                  "type": "string",
                  "location": "query",
                  "repeated": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "processingState": {
                  "type": "string",
                  "repeated": true,
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "location": "query"
                }
              },
              "parameterOrder": [],
              "id": "books.volumes.useruploaded.list",
              "flatPath": "books/v1/volumes/useruploaded",
              "description": "Return a list of books uploaded by the current user.",
              "path": "books/v1/volumes/useruploaded"
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/mybooks",
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.mybooks.list",
              "description": "Return a list of books in My Library.",
              "httpMethod": "GET",
              "response": {
                "$ref": "Volumes"
              },
              "flatPath": "books/v1/volumes/mybooks",
              "parameters": {
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for\ngenerating recommendations.",
                  "location": "query",
                  "type": "string"
                },
                "country": {
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "type": "string",
                  "location": "query"
                },
                "processingState": {
                  "repeated": true,
                  "description": "The processing state of the user uploaded volumes to be returned.\nApplicable only if the UPLOADED is specified in the acquireMethod.",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ]
                },
                "startIndex": {
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer",
                  "location": "query"
                },
                "acquireMethod": {
                  "location": "query",
                  "repeated": true,
                  "type": "string",
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "description": "How the book was acquired"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return.",
                  "type": "integer",
                  "format": "uint32"
                }
              }
            }
          }
        }
      },
      "methods": {
        "list": {
          "path": "books/v1/volumes",
          "response": {
            "$ref": "Volumes"
          },
          "id": "books.volumes.list",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Performs a book search.",
          "parameterOrder": [],
          "parameters": {
            "langRestrict": {
              "type": "string",
              "description": "Restrict results to books with this language code.",
              "location": "query"
            },
            "partner": {
              "type": "string",
              "location": "query",
              "description": "Restrict and brand results for partner ID."
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "format": "uint32",
              "type": "integer",
              "location": "query"
            },
            "projection": {
              "type": "string",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "location": "query",
              "description": "Restrict information returned to a set of selected fields."
            },
            "filter": {
              "location": "query",
              "description": "Filter search results.",
              "type": "string",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ]
            },
            "libraryRestrict": {
              "location": "query",
              "description": "Restrict search to this user's library.",
              "type": "string",
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ]
            },
            "startIndex": {
              "type": "integer",
              "format": "uint32",
              "description": "Index of the first result to return (starts at 0)",
              "location": "query"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "q": {
              "description": "Full-text search query string.",
              "location": "query",
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "type": "string",
              "location": "query"
            },
            "download": {
              "location": "query",
              "description": "Restrict to volumes by download availability.",
              "type": "string",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ]
            },
            "orderBy": {
              "location": "query",
              "description": "Sort search results.",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "type": "string"
            },
            "printType": {
              "type": "string",
              "description": "Restrict to books or magazines.",
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "location": "query"
            },
            "showPreorders": {
              "location": "query",
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "type": "boolean"
            }
          },
          "httpMethod": "GET",
          "flatPath": "books/v1/volumes"
        },
        "get": {
          "parameterOrder": [
            "volumeId"
          ],
          "path": "books/v1/volumes/{volumeId}",
          "flatPath": "books/v1/volumes/{volumeId}",
          "description": "Gets volume information for a single volume.",
          "id": "books.volumes.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "user_library_consistent_read": {
              "location": "query",
              "type": "boolean"
            },
            "volumeId": {
              "location": "path",
              "description": "ID of volume to retrieve.",
              "type": "string",
              "required": true
            },
            "projection": {
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string",
              "description": "Restrict information returned to a set of selected fields."
            },
            "partner": {
              "description": "Brand results for partner ID.",
              "location": "query",
              "type": "string"
            },
            "includeNonComicsSeries": {
              "location": "query",
              "type": "boolean",
              "description": "Set to true to include non-comics series. Defaults to false."
            },
            "country": {
              "description": "ISO-3166-1 code to override the IP-based location.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "description": "string  to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Volume"
          },
          "httpMethod": "GET"
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "httpMethod": "GET",
          "response": {
            "$ref": "Metadata"
          },
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "parameterOrder": [],
          "description": "Returns a list of offline dictionary metadata available",
          "id": "books.dictionary.listOfflineMetadata",
          "path": "books/v1/dictionary/listOfflineMetadata",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "cpksver": {
              "location": "query",
              "type": "string",
              "description": "The device/version ID from which to request the data."
            }
          }
        }
      }
    },
    "cloudloading": {
      "methods": {
        "addBook": {
          "httpMethod": "POST",
          "id": "books.cloudloading.addBook",
          "flatPath": "books/v1/cloudloading/addBook",
          "parameterOrder": [],
          "path": "books/v1/cloudloading/addBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "name": {
              "type": "string",
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "location": "query"
            },
            "mime_type": {
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "location": "query",
              "type": "string"
            },
            "drive_document_id": {
              "type": "string",
              "location": "query",
              "description": "A drive document id. The upload_client_token must not be set."
            },
            "upload_client_token": {
              "location": "query",
              "type": "string",
              "description": "Scotty upload token."
            }
          },
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "description": "Add a user-upload volume and triggers processing."
        },
        "deleteBook": {
          "httpMethod": "POST",
          "description": "Remove the book and its contents",
          "id": "books.cloudloading.deleteBook",
          "parameters": {
            "volumeId": {
              "type": "string",
              "description": "The id of the book to be removed.",
              "location": "query"
            }
          },
          "flatPath": "books/v1/cloudloading/deleteBook",
          "path": "books/v1/cloudloading/deleteBook",
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "updateBook": {
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "flatPath": "books/v1/cloudloading/updateBook",
          "httpMethod": "POST",
          "path": "books/v1/cloudloading/updateBook",
          "parameters": {},
          "description": "Updates a user-upload volume.",
          "id": "books.cloudloading.updateBook",
          "parameterOrder": [],
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    }
  },
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "discoveryVersion": "v1",
  "servicePath": "",
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "title": "Books API",
  "id": "books:v1",
  "name": "books",
  "version": "v1",
  "batchPath": "batch/books/v1",
  "schemas": {
    "Volumeannotations": {
      "id": "Volumeannotations",
      "properties": {
        "totalItems": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of volume annotations found."
        },
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not\njust the ones in this response). Note: the version string\ndoesn't apply to the annotation data, just the information in this response\n(e.g. the location of annotations in the book).",
          "type": "string"
        },
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Volumeannotation"
          },
          "description": "A list of volume annotations."
        }
      },
      "type": "object"
    },
    "Offers": {
      "type": "object",
      "id": "Offers",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "description": "A list of offers.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "artUrl": {
                "type": "string"
              },
              "gservicesKey": {
                "type": "string"
              },
              "items": {
                "items": {
                  "type": "object",
                  "properties": {
                    "coverUrl": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    }
                  }
                },
                "type": "array"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Category": {
      "id": "Category",
      "type": "object",
      "properties": {
        "items": {
          "description": "A list of onboarding categories.",
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string"
              },
              "badgeUrl": {
                "type": "string"
              },
              "categoryId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "DownloadAccessRestriction": {
      "id": "DownloadAccessRestriction",
      "properties": {
        "justAcquired": {
          "description": "If deviceAllowed, whether access was just acquired with this request.",
          "type": "boolean"
        },
        "maxDownloadDevices": {
          "description": "If restricted, the maximum number of content download licenses for this\nvolume.",
          "type": "integer",
          "format": "int32"
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "restricted": {
          "description": "Whether this volume has any download access restrictions.",
          "type": "boolean"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and\nclient-validation only.",
          "type": "string"
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "reasonCode": {
          "description": "Error/warning reason code.  Additional codes may be added in the future. 0\nOK 100   ACCESS_DENIED_PUBLISHER_LIMIT 101   ACCESS_DENIED_LIMIT 200\nWARNING_USED_LAST_ACCESS",
          "type": "string"
        },
        "downloadsAcquired": {
          "description": "If restricted, the number of content download licenses already acquired\n(including the requesting client, if licensed).",
          "format": "int32",
          "type": "integer"
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "If restricted, whether access is granted for this (user, device, volume)."
        }
      },
      "type": "object"
    },
    "Dictlayerdata": {
      "id": "Dictlayerdata",
      "properties": {
        "kind": {
          "type": "string"
        },
        "common": {
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for\nthis entity on Google search."
            }
          },
          "type": "object"
        },
        "dict": {
          "type": "object",
          "properties": {
            "words": {
              "items": {
                "properties": {
                  "senses": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "syllabification": {
                          "type": "string"
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "definitions": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "examples": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    },
                                    "source": {
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                }
                              },
                              "definition": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "conjugations": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          }
                        },
                        "pronunciation": {
                          "type": "string"
                        },
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "properties": {
                                  "attribution": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "text": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "type": "array"
                  },
                  "examples": {
                    "items": {
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "derivatives": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "text": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "source": {
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "attribution": {
                        "type": "string"
                      }
                    },
                    "description": "The words with different meanings but not related words, e.g. \"go\"\n(game) and \"go\" (verb).",
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "source": {
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "attribution": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "type": "object"
    },
    "Seriesmembership": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string"
        },
        "member": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "id": "Seriesmembership"
    },
    "FamilyInfo": {
      "properties": {
        "membership": {
          "properties": {
            "ageGroup": {
              "description": "The age group of the user.",
              "type": "string"
            },
            "role": {
              "type": "string",
              "description": "The role of the user in the family."
            },
            "acquirePermission": {
              "type": "string",
              "description": "Restrictions on user buying and acquiring content."
            },
            "allowedMaturityRating": {
              "type": "string",
              "description": "The maximum allowed maturity rating for the user."
            },
            "isInFamily": {
              "type": "boolean"
            }
          },
          "type": "object",
          "description": "Family membership info of the user that made the request."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "FamilyInfo"
    },
    "Volumeseriesinfo": {
      "properties": {
        "shortSeriesBookTitle": {
          "type": "string",
          "description": "Short book title in the context of the series."
        },
        "volumeSeries": {
          "items": {
            "type": "object",
            "properties": {
              "issue": {
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "items": {
                  "type": "object",
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "type": "array"
              },
              "orderNumber": {
                "type": "integer",
                "description": "The book order number in the series.",
                "format": "int32"
              },
              "seriesBookType": {
                "type": "string",
                "description": "The book type in the context of series. Examples - Single Issue,\nCollection Edition, etc."
              },
              "seriesId": {
                "description": "The series id.",
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "bookDisplayNumber": {
          "description": "The display number string. This should be used only for display purposes\nand the actual sequence should be inferred from the below orderNumber.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Volumeseriesinfo"
    },
    "Volumes": {
      "id": "Volumes",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "totalItems": {
          "description": "Total number of volumes found. This might be greater than the number of\nvolumes returned in this response if results have been paginated.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Discoveryclusters": {
      "type": "object",
      "properties": {
        "totalClusters": {
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        },
        "clusters": {
          "items": {
            "type": "object",
            "properties": {
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "subTitle": {
                "type": "string"
              },
              "uid": {
                "type": "string"
              },
              "totalVolumes": {
                "type": "integer",
                "format": "int32"
              },
              "banner_with_content_container": {
                "properties": {
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "title": {
                "type": "string"
              }
            }
          },
          "type": "array"
        }
      },
      "id": "Discoveryclusters"
    },
    "Notification": {
      "id": "Notification",
      "type": "object",
      "properties": {
        "doc_id": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "doc_type": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        },
        "notificationGroup": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "timeToExpireMs": {
          "format": "int64",
          "type": "string"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "crmExperimentIds": {
          "type": "array",
          "description": "The list of crm experiment ids.",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "body": {
          "type": "string"
        }
      }
    },
    "GeoAnnotationdata": {
      "type": "object",
      "properties": {
        "encodedData": {
          "type": "string",
          "format": "byte",
          "description": "Base64 encoded data for this annotation data."
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat).",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "layerId": {
          "type": "string",
          "description": "The Layer id for this data. *"
        },
        "data": {
          "$ref": "Geolayerdata",
          "description": "JSON encoded data for this geo annotation data.\nEmitted with name 'data' in JSON output. Either this or dict_data will\nbe populated."
        }
      },
      "id": "GeoAnnotationdata"
    },
    "Metadata": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "items": {
            "properties": {
              "version": {
                "type": "string",
                "format": "int64"
              },
              "download_url": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "size": {
                "format": "int64",
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": "A list of offline dictionary metadata.",
          "type": "array"
        }
      },
      "id": "Metadata",
      "type": "object"
    },
    "RequestAccessData": {
      "type": "object",
      "id": "RequestAccessData",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "downloadAccess": {
          "$ref": "DownloadAccessRestriction",
          "description": "A download access response."
        },
        "concurrentAccess": {
          "description": "A concurrent access response.",
          "$ref": "ConcurrentAccessRestriction"
        }
      }
    },
    "AnnotationsSummary": {
      "id": "AnnotationsSummary",
      "properties": {
        "kind": {
          "type": "string"
        },
        "layers": {
          "items": {
            "type": "object",
            "properties": {
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "updated": {
                "type": "string"
              },
              "layerId": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "limitType": {
                "type": "string"
              }
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Volume": {
      "properties": {
        "searchInfo": {
          "properties": {
            "textSnippet": {
              "type": "string",
              "description": "A text snippet containing the search query."
            }
          },
          "type": "object",
          "description": "Search result information related to this volume."
        },
        "saleInfo": {
          "description": "Any information about a volume related to the eBookstore and/or\npurchaseability. This information can depend on the country where the\nrequest originates from (i.e. books may not be for sale in certain\ncountries).",
          "properties": {
            "buyLink": {
              "type": "string",
              "description": "URL to purchase this volume on the Google Books site. (In LITE\nprojection)"
            },
            "onSaleDate": {
              "description": "The date on which this book is available for sale.",
              "type": "string"
            },
            "retailPrice": {
              "description": "The actual selling price of the book. This is the same as the suggested\nretail or list price unless there are offers or discounts on this volume.\n(In LITE projection.)",
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "listPrice": {
              "description": "Suggested retail price. (In LITE projection.)",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                }
              }
            },
            "offers": {
              "items": {
                "properties": {
                  "retailPrice": {
                    "description": "Offer retail (=discounted) price in Micros",
                    "type": "object",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  },
                  "giftable": {
                    "description": "Indicates whether the offer is giftable.",
                    "type": "boolean"
                  },
                  "listPrice": {
                    "type": "object",
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  },
                  "rentalDuration": {
                    "description": "The rental duration (for rental offers only).",
                    "properties": {
                      "count": {
                        "type": "number",
                        "format": "double"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "finskyOfferType": {
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "description": "Offers available for this volume (sales and rentals)."
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this sale information is\nvalid. (In LITE projection.)",
              "type": "string"
            },
            "isEbook": {
              "type": "boolean",
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks\nshelf)."
            },
            "saleability": {
              "description": "Whether or not this book is available for sale or offered for free in the\nGoogle eBookstore for the country listed above. Possible values are\nFOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or\nFOR_PREORDER.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "userInfo": {
          "properties": {
            "review": {
              "description": "This user's review of this volume, if one exists.",
              "$ref": "Review"
            },
            "copy": {
              "description": "Copy/Paste accounting information.",
              "properties": {
                "updated": {
                  "type": "string"
                },
                "remainingCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "limitType": {
                  "type": "string"
                },
                "allowedCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "familySharing": {
              "properties": {
                "isSharingDisabledByFop": {
                  "type": "boolean",
                  "description": "Whether or not sharing this volume is temporarily disabled due to\nissues with the Family Wallet."
                },
                "isSharingAllowed": {
                  "description": "Whether or not this volume can be shared with the family by the user.\nThis includes sharing eligibility of both the volume and the user. If\nthe value is true, the user can initiate a family sharing action.",
                  "type": "boolean"
                },
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                }
              },
              "description": "Information on the ability to share with the family.",
              "type": "object"
            },
            "isInMyBooks": {
              "type": "boolean",
              "description": "Whether or not this volume is currently in \"my books.\""
            },
            "isFamilySharedFromUser": {
              "description": "Whether or not the user shared this volume with the family.",
              "type": "boolean"
            },
            "isPreordered": {
              "description": "Whether or not this volume was pre-ordered by the authenticated user\nmaking the request. (In LITE projection.)",
              "type": "boolean"
            },
            "isFamilySharingAllowed": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            },
            "isFamilySharingDisabledByFop": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            },
            "userUploadedVolumeInfo": {
              "properties": {
                "processingState": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "isPurchased": {
              "description": "Whether or not this volume was purchased by the authenticated user making\nthe request. (In LITE projection.)",
              "type": "boolean"
            },
            "readingPosition": {
              "$ref": "ReadingPosition",
              "description": "The user's current reading position in the volume, if one is available.\n(In LITE projection.)"
            },
            "isUploaded": {
              "type": "boolean",
              "description": "Whether or not this volume was user uploaded."
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "acquisitionType": {
              "type": "integer",
              "description": "How this volume was acquired.",
              "format": "int32"
            },
            "rentalPeriod": {
              "properties": {
                "startUtcSec": {
                  "type": "string",
                  "format": "int64"
                },
                "endUtcSec": {
                  "type": "string",
                  "format": "int64"
                }
              },
              "description": "Period during this book is/was a valid rental.",
              "type": "object"
            },
            "rentalState": {
              "type": "string",
              "description": "Whether this book is an active or an expired rental."
            },
            "acquiredTime": {
              "type": "string",
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC\ndate-time format) Acquiring includes purchase, user upload, receiving\nfamily sharing, etc."
            },
            "entitlementType": {
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "type": "integer",
              "format": "int32"
            },
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a\nreading position update, volume purchase or writing a review. (RFC 3339\nUTC date-time format)."
            }
          },
          "description": "User specific information related to this volume. (e.g. page this user last\nread or whether they purchased this book)",
          "type": "object"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for a volume. (In LITE projection.)"
        },
        "recommendedInfo": {
          "description": "Recommendation related information for this volume.",
          "properties": {
            "explanation": {
              "description": "A text explaining why this volume is recommended.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "etag": {
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE\nprojection)",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource. (In LITE projection.)",
          "type": "string"
        },
        "layerInfo": {
          "type": "object",
          "properties": {
            "layers": {
              "description": "A layer should appear here if and only if the layer exists for this book.",
              "type": "array",
              "items": {
                "properties": {
                  "volumeAnnotationsVersion": {
                    "type": "string",
                    "description": "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the\nbooks.layers.volumeAnnotations.* responses. The actual annotation data\nis versioned separately."
                  },
                  "layerId": {
                    "description": "The layer id of this layer (e.g. \"geo\").",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "What layers exist in this volume and high level information about them."
        },
        "kind": {
          "description": "Resource type for a volume. (In LITE projection.)",
          "type": "string"
        },
        "accessInfo": {
          "description": "Any information about a volume related to reading or obtaining that volume\ntext. This information can depend on country (books may be public domain in\none country but not in another, e.g.).",
          "properties": {
            "downloadAccess": {
              "$ref": "DownloadAccessRestriction",
              "description": "Information about a volume's download license access restrictions."
            },
            "accessViewStatus": {
              "type": "string",
              "description": "Combines the access and viewability of this volume into a single status\nfield for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN,\nSAMPLE or NONE. (In LITE projection.)"
            },
            "quoteSharingAllowed": {
              "description": "Whether quote sharing is allowed for this volume.",
              "type": "boolean"
            },
            "textToSpeechPermission": {
              "description": "Whether text-to-speech is permitted for this volume. Values can be\nALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.",
              "type": "string"
            },
            "epub": {
              "type": "object",
              "description": "Information about epub content. (In LITE projection.)",
              "properties": {
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a flowing text epub available either as public domain or for\npurchase. (In LITE projection.)"
                },
                "downloadLink": {
                  "description": "URL to download epub. (In LITE projection.)",
                  "type": "string"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)"
                }
              }
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this access information\nis valid. (In LITE projection.)"
            },
            "pdf": {
              "description": "Information about pdf content. (In LITE projection.)",
              "properties": {
                "downloadLink": {
                  "description": "URL to download pdf. (In LITE projection.)",
                  "type": "string"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a scanned image pdf available either as public domain or for\npurchase. (In LITE projection.)"
                }
              },
              "type": "object"
            },
            "driveImportedContentLink": {
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by\nselecting the file from Google Drive.",
              "type": "string"
            },
            "viewability": {
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES,\nNO_PAGES or UNKNOWN. This value depends on the country listed above. A\nvalue of PARTIAL means that the publisher has allowed some portion of the\nvolume to be viewed publicly, without purchase. This can apply to eBooks\nas well as non-eBooks. Public domain books will always have a value of\nALL_PAGES.",
              "type": "string"
            },
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used\nto go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "webReaderLink": {
              "type": "string",
              "description": "URL to read this volume on the Google Books site. Link will not allow\nusers to read non-viewable volumes."
            },
            "publicDomain": {
              "type": "boolean",
              "description": "Whether or not this book is public domain in the country listed above."
            },
            "embeddable": {
              "description": "Whether this volume can be embedded in a viewport using the Embedded\nViewer API.",
              "type": "boolean"
            },
            "explicitOfflineLicenseManagement": {
              "description": "Whether this volume requires that the client explicitly request offline\ndownload license rather than have it done automatically when loading the\ncontent, if the client supports it.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "volumeInfo": {
          "properties": {
            "description": {
              "description": "A synopsis of the volume. The text of the description is formatted in\nHTML and includes simple formatting elements, such as b, i, and br tags.\n(In LITE projection.)",
              "type": "string"
            },
            "comicsContent": {
              "type": "boolean",
              "description": "Whether the volume has comics content."
            },
            "categories": {
              "items": {
                "type": "string"
              },
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "type": "array"
            },
            "averageRating": {
              "format": "double",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "type": "number"
            },
            "imageLinks": {
              "description": "A list of image links for all the sizes that are available. (In LITE\nprojection.)",
              "properties": {
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                },
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                },
                "thumbnail": {
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE\nprojection)",
                  "type": "string"
                },
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE\nprojection)",
                  "type": "string"
                },
                "small": {
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)",
                  "type": "string"
                },
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE\nprojection)"
                }
              },
              "type": "object"
            },
            "mainCategory": {
              "description": "The main category to which this volume belongs. It will be the category\nfrom the categories list returned below that has the highest weight.",
              "type": "string"
            },
            "pageCount": {
              "format": "int32",
              "description": "Total number of pages as per publisher metadata.",
              "type": "integer"
            },
            "authors": {
              "description": "The names of the authors and/or editors for this volume. (In LITE\nprojection)",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "canonicalVolumeLink": {
              "type": "string",
              "description": "Canonical URL for a volume. (In LITE projection.)"
            },
            "panelizationSummary": {
              "description": "A top-level summary of the panelization info in this volume.",
              "type": "object",
              "properties": {
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "imageBubbleVersion": {
                  "type": "string"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                },
                "epubBubbleVersion": {
                  "type": "string"
                }
              }
            },
            "subtitle": {
              "type": "string",
              "description": "Volume subtitle. (In LITE projection.)"
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "dimensions": {
              "type": "object",
              "properties": {
                "thickness": {
                  "description": "Thickness of this volume (in cm).",
                  "type": "string"
                },
                "height": {
                  "type": "string",
                  "description": "Height or length of this volume (in cm)."
                },
                "width": {
                  "type": "string",
                  "description": "Width of this volume (in cm)."
                }
              },
              "description": "Physical dimensions of this volume."
            },
            "ratingsCount": {
              "description": "The number of review ratings for this volume.",
              "format": "int32",
              "type": "integer"
            },
            "publisher": {
              "description": "Publisher of this volume. (In LITE projection.)",
              "type": "string"
            },
            "publishedDate": {
              "description": "Date of publication. (In LITE projection.)",
              "type": "string"
            },
            "printedPageCount": {
              "format": "int32",
              "description": "Total number of printed pages in generated pdf representation.",
              "type": "integer"
            },
            "readingModes": {
              "description": "The reading modes available for this volume.",
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "infoLink": {
              "description": "URL to view information about this volume on the Google Books site. (In\nLITE projection)",
              "type": "string"
            },
            "previewLink": {
              "description": "URL to preview this volume on the Google Books site.",
              "type": "string"
            },
            "contentVersion": {
              "type": "string",
              "description": "An identifier for the version of the volume content (text & images). (In\nLITE projection)"
            },
            "title": {
              "description": "Volume title. (In LITE projection.)",
              "type": "string"
            },
            "printType": {
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE.",
              "type": "string"
            },
            "maturityRating": {
              "type": "string"
            },
            "samplePageCount": {
              "type": "integer",
              "description": "Total number of sample pages as per publisher metadata.",
              "format": "int32"
            },
            "language": {
              "type": "string",
              "description": "Best language for this volume (based on content). It is the two-letter\nISO 639-1 code such as 'fr', 'en', etc."
            },
            "industryIdentifiers": {
              "items": {
                "properties": {
                  "identifier": {
                    "description": "Industry specific volume identifier.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "description": "Industry standard identifiers for this volume."
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            }
          },
          "description": "General volume information.",
          "type": "object"
        }
      },
      "id": "Volume",
      "type": "object"
    },
    "Layersummaries": {
      "id": "Layersummaries",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Layersummary"
          },
          "description": "A list of layer summary items.",
          "type": "array"
        },
        "totalItems": {
          "format": "int32",
          "description": "The total number of layer summaries found.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BooksVolumesRecommendedRateResponse": {
      "type": "object",
      "id": "BooksVolumesRecommendedRateResponse",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      }
    },
    "DownloadAccesses": {
      "type": "object",
      "id": "DownloadAccesses",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "downloadAccessList": {
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "description": "A list of download access responses.",
          "type": "array"
        }
      }
    },
    "Bookshelf": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of this bookshelf, only unique by user.",
          "type": "integer"
        },
        "description": {
          "description": "Description of this bookshelf.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type for bookshelf metadata.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Title of this bookshelf."
        },
        "created": {
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond\nresolution).",
          "type": "string"
        },
        "volumeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of volumes in this bookshelf."
        },
        "updated": {
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with\nmillisecond resolution).",
          "type": "string"
        },
        "access": {
          "type": "string",
          "description": "Whether this bookshelf is PUBLIC or PRIVATE."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "volumesLastUpdated": {
          "type": "string",
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC\ntimestamp with millisecond resolution)."
        }
      },
      "id": "Bookshelf"
    },
    "BooksCloudloadingResource": {
      "properties": {
        "author": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "BooksCloudloadingResource"
    },
    "BooksAnnotationsRange": {
      "properties": {
        "startPosition": {
          "description": "The starting position for the range.",
          "type": "string"
        },
        "endOffset": {
          "type": "string",
          "description": "The offset from the ending position."
        },
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        },
        "startOffset": {
          "type": "string",
          "description": "The offset from the starting position."
        }
      },
      "id": "BooksAnnotationsRange",
      "type": "object"
    },
    "Volume2": {
      "id": "Volume2",
      "type": "object",
      "properties": {
        "items": {
          "description": "A list of volumes.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Bookshelves": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "description": "A list of bookshelves.",
          "items": {
            "$ref": "Bookshelf"
          }
        }
      },
      "id": "Bookshelves"
    },
    "Annotation": {
      "properties": {
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "id": {
          "description": "Id of this annotation, in the form of a GUID.",
          "type": "string"
        },
        "currentVersionRanges": {
          "type": "object",
          "description": "Selection ranges for the most recent content version.",
          "properties": {
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation for version above."
            }
          }
        },
        "created": {
          "type": "string",
          "description": "Timestamp for the created time of this annotation."
        },
        "afterSelectedText": {
          "type": "string",
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty."
        },
        "pageIds": {
          "description": "Pages that this annotation spans.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "beforeSelectedText": {
          "type": "string",
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty."
        },
        "layerSummary": {
          "properties": {
            "allowedCharacterCount": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\"\nlayer."
            },
            "limitType": {
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\"\nlayer.",
              "type": "string"
            },
            "remainingCharacterCount": {
              "type": "integer",
              "format": "int32",
              "description": "Remaining allowed characters on this layer, especially for the \"copy\"\nlayer."
            }
          },
          "type": "object"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume that this annotation belongs to."
        },
        "updated": {
          "description": "Timestamp for the last time this annotation was modified.",
          "type": "string"
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "clientVersionRanges": {
          "type": "object",
          "properties": {
            "gbImageRange": {
              "description": "Range in GB image format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "description": "Selection ranges sent from the client."
        },
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "data": {
          "description": "User-created data for this annotation.",
          "type": "string"
        }
      },
      "id": "Annotation",
      "type": "object"
    },
    "Usersettings": {
      "properties": {
        "notesExport": {
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          },
          "type": "object",
          "description": "User settings in sub-objects, each for different purposes."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "notification": {
          "properties": {
            "rewardExpirations": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "matchMyInterests": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromAuthors": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "priceDrop": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromSeries": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "id": "Usersettings",
      "type": "object"
    },
    "Geolayerdata": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "geo": {
          "type": "object",
          "properties": {
            "countryCode": {
              "type": "string",
              "description": "The country code of the location."
            },
            "mapType": {
              "description": "The type of map that should be used for this location. EX: HYBRID,\nROADMAP, SATELLITE, TERRAIN",
              "type": "string"
            },
            "boundary": {
              "type": "array",
              "description": "The boundary of the location as a set of loops containing pairs of\nlatitude, longitude coordinates.",
              "items": {
                "type": "string"
              }
            },
            "cachePolicy": {
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED,\nNEVER",
              "type": "string"
            },
            "longitude": {
              "format": "double",
              "description": "The longitude of the location.",
              "type": "number"
            },
            "latitude": {
              "description": "The latitude of the location.",
              "type": "number",
              "format": "double"
            },
            "viewport": {
              "description": "The viewport for showing this location. This is a latitude, longitude\nrectangle.",
              "type": "object",
              "properties": {
                "hi": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                },
                "lo": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                }
              }
            },
            "zoom": {
              "type": "integer",
              "format": "int32",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom\nlevel, in which the entire world can be seen on one map) to 21+ (down to\nindividual buildings). See: https:\n//developers.google.com/maps/documentation/staticmaps/#Zoomlevels"
            }
          }
        },
        "common": {
          "properties": {
            "lang": {
              "type": "string",
              "description": "The language of the information url and description."
            },
            "snippetUrl": {
              "type": "string",
              "description": "The URL for information for this location. Ex: wikipedia link."
            },
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for\nthis entity on Google search."
            },
            "previewImageUrl": {
              "description": "The URL for the preview image information.",
              "type": "string"
            },
            "snippet": {
              "description": "The description for this location.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "id": "Geolayerdata"
    },
    "Series": {
      "type": "object",
      "properties": {
        "series": {
          "items": {
            "properties": {
              "title": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "seriesSubscriptionReleaseInfo": {
                "type": "object",
                "properties": {
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "nextReleaseInfo": {
                    "properties": {
                      "releaseNumber": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "currentReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  },
                  "cancelTime": {
                    "type": "string"
                  }
                }
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              },
              "seriesId": {
                "type": "string"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "isComplete": {
                "type": "boolean"
              },
              "subscriptionId": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Series"
    },
    "ConcurrentAccessRestriction": {
      "id": "ConcurrentAccessRestriction",
      "properties": {
        "timeWindowSeconds": {
          "format": "int32",
          "type": "integer",
          "description": "Time in seconds for license auto-expiration."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code."
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "maxConcurrentDevices": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of concurrent access licenses for this volume."
        },
        "signature": {
          "type": "string",
          "description": "Response signature."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any concurrent access restrictions."
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and\nclient-validation only."
        },
        "deviceAllowed": {
          "description": "Whether access is granted for this (user, device, volume).",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Layersummary": {
      "type": "object",
      "id": "Layersummary",
      "properties": {
        "layerId": {
          "description": "The layer id for this summary.",
          "type": "string"
        },
        "id": {
          "description": "Unique id of this layer summary.",
          "type": "string"
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "volumeAnnotationsVersion": {
          "description": "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the books.layers.volumeAnnotations.*\nresponses. The actual annotation data is versioned separately.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339\nUTC date-time format)."
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id this resource is for."
        },
        "annotationCount": {
          "description": "The number of annotations for this layer.",
          "type": "integer",
          "format": "int32"
        },
        "contentVersion": {
          "description": "The content version this resource is for.",
          "type": "string"
        },
        "annotationsDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "dataCount": {
          "description": "The number of data items for this layer.",
          "type": "integer",
          "format": "int32"
        },
        "annotationTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of annotation types contained for this layer."
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        }
      }
    },
    "Annotations": {
      "id": "Annotations",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "items": {
            "$ref": "Annotation"
          },
          "type": "array",
          "description": "A list of annotations."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results."
        },
        "totalItems": {
          "description": "Total number of annotations found. This may be greater than the number of\nnotes returned in this response if results have been paginated.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DictionaryAnnotationdata": {
      "id": "DictionaryAnnotationdata",
      "properties": {
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "encodedData": {
          "type": "string",
          "format": "byte",
          "description": "Base64 encoded data for this annotation data."
        },
        "data": {
          "description": "JSON encoded data for this dictionary annotation data.\nEmitted with name 'data' in JSON output. Either this or geo_data will\nbe populated.",
          "$ref": "Dictlayerdata"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat)."
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Volumeannotation": {
      "properties": {
        "annotationDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "volumeId": {
          "type": "string",
          "description": "The Volume this annotation is for."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "pageIds": {
          "items": {
            "type": "string"
          },
          "description": "Pages the annotation spans.",
          "type": "array"
        },
        "layerId": {
          "description": "The Layer this annotation is for.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "annotationDataId": {
          "type": "string",
          "description": "The annotation data id for this volume annotation."
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "id": {
          "description": "Unique id of this volume annotation.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC\ndate-time format)."
        },
        "data": {
          "description": "Data for this annotation.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "contentRanges": {
          "type": "object",
          "description": "The content ranges to identify the selected text.",
          "properties": {
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            }
          }
        }
      },
      "id": "Volumeannotation",
      "type": "object"
    },
    "Annotationsdata": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results."
        },
        "items": {
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "description": "A list of Annotation Data.",
          "type": "array"
        },
        "totalItems": {
          "type": "integer",
          "description": "The total number of volume annotations found.",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type"
        }
      },
      "id": "Annotationsdata",
      "type": "object"
    },
    "ReadingPosition": {
      "id": "ReadingPosition",
      "type": "object",
      "properties": {
        "updated": {
          "type": "string",
          "description": "Timestamp when this reading position was last updated (formatted UTC\ntimestamp with millisecond resolution)."
        },
        "gbImagePosition": {
          "type": "string",
          "description": "Position in a volume for image-based content."
        },
        "pdfPosition": {
          "type": "string",
          "description": "Position in a PDF file."
        },
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        },
        "volumeId": {
          "description": "Volume id associated with this reading position.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type for a reading position.",
          "type": "string"
        },
        "gbTextPosition": {
          "type": "string",
          "description": "Position in a volume for text-based content."
        }
      }
    },
    "Review": {
      "type": "object",
      "id": "Review",
      "properties": {
        "title": {
          "description": "Title for this review.",
          "type": "string"
        },
        "fullTextUrl": {
          "type": "string",
          "description": "URL for the full review text, for reviews gathered from the web."
        },
        "source": {
          "properties": {
            "description": {
              "description": "Name of the source.",
              "type": "string"
            },
            "url": {
              "type": "string",
              "description": "URL of the source of the review."
            },
            "extraDescription": {
              "type": "string",
              "description": "Extra text about the source of the review."
            }
          },
          "description": "Information regarding the source of this review, when the review is not\nfrom a Google Books user.",
          "type": "object"
        },
        "date": {
          "description": "Date of this review.",
          "type": "string"
        },
        "type": {
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or\nGOOGLE_USER.",
          "type": "string"
        },
        "content": {
          "description": "Review text.",
          "type": "string"
        },
        "volumeId": {
          "description": "Volume that this review is for.",
          "type": "string"
        },
        "rating": {
          "type": "string",
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR,\nFIVE or NOT_RATED."
        },
        "author": {
          "type": "object",
          "description": "Author of this review.",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Name of this person."
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a review."
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object",
      "id": "Empty"
    }
  },
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "revision": "20200606",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "baseUrl": "https://www.googleapis.com/",
  "rootUrl": "https://www.googleapis.com/",
  "ownerDomain": "google.com",
  "parameters": {
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json",
      "description": "Data format for response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "ownerName": "Google",
  "version_module": true,
  "basePath": "",
  "kind": "discovery#restDescription"
}
