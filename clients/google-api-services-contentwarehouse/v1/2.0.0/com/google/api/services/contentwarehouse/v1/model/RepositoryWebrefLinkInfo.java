/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Represents all information we have about a specific/localized link. Next available tag: 11.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefLinkInfo extends com.google.api.client.json.GenericJson {

  /**
   * The score aggregated from all sources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float aggregatedScore;

  /**
   * The EntityJoin keeps bi-directional links, but for some applications we only need them in one
   * direction. This value indicates whether this is the preferred direction to keep. (We usually
   * prefer keeping the link from the less common to the more common entity for performance
   * reasons). For categorical links the preferred direction is from child to parent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isPreferredDirection;

  /**
   * The metadata associated with the link.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefEntityLinkMetadata metadata;

  /**
   * The per-source scores.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefEntityLinkSource> source;

  static {
    // hack to force ProGuard to consider RepositoryWebrefEntityLinkSource used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RepositoryWebrefEntityLinkSource.class);
  }

  /**
   * The score aggregated from all sources.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAggregatedScore() {
    return aggregatedScore;
  }

  /**
   * The score aggregated from all sources.
   * @param aggregatedScore aggregatedScore or {@code null} for none
   */
  public RepositoryWebrefLinkInfo setAggregatedScore(java.lang.Float aggregatedScore) {
    this.aggregatedScore = aggregatedScore;
    return this;
  }

  /**
   * The EntityJoin keeps bi-directional links, but for some applications we only need them in one
   * direction. This value indicates whether this is the preferred direction to keep. (We usually
   * prefer keeping the link from the less common to the more common entity for performance
   * reasons). For categorical links the preferred direction is from child to parent.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsPreferredDirection() {
    return isPreferredDirection;
  }

  /**
   * The EntityJoin keeps bi-directional links, but for some applications we only need them in one
   * direction. This value indicates whether this is the preferred direction to keep. (We usually
   * prefer keeping the link from the less common to the more common entity for performance
   * reasons). For categorical links the preferred direction is from child to parent.
   * @param isPreferredDirection isPreferredDirection or {@code null} for none
   */
  public RepositoryWebrefLinkInfo setIsPreferredDirection(java.lang.Boolean isPreferredDirection) {
    this.isPreferredDirection = isPreferredDirection;
    return this;
  }

  /**
   * The metadata associated with the link.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefEntityLinkMetadata getMetadata() {
    return metadata;
  }

  /**
   * The metadata associated with the link.
   * @param metadata metadata or {@code null} for none
   */
  public RepositoryWebrefLinkInfo setMetadata(RepositoryWebrefEntityLinkMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * The per-source scores.
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefEntityLinkSource> getSource() {
    return source;
  }

  /**
   * The per-source scores.
   * @param source source or {@code null} for none
   */
  public RepositoryWebrefLinkInfo setSource(java.util.List<RepositoryWebrefEntityLinkSource> source) {
    this.source = source;
    return this;
  }

  @Override
  public RepositoryWebrefLinkInfo set(String fieldName, Object value) {
    return (RepositoryWebrefLinkInfo) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefLinkInfo clone() {
    return (RepositoryWebrefLinkInfo) super.clone();
  }

}
