/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.fcm.v1.model;

/**
 * Basic notification template to use across all platforms.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Cloud Messaging API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Notification extends com.google.api.client.json.GenericJson {

  /**
   * The notification's body text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String body;

  /**
   * Contains the URL of an image that is going to be downloaded on the device and displayed in a
   * notification. JPEG, PNG, BMP have full support across platforms. Animated GIF and video only
   * work on iOS. WebP and HEIF have varying levels of support across platforms and platform
   * versions. Android has 1MB image size limit. Quota usage and implications/costs for hosting
   * image on Firebase Storage: https://firebase.google.com/pricing
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String image;

  /**
   * The notification's title.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * The notification's body text.
   * @return value or {@code null} for none
   */
  public java.lang.String getBody() {
    return body;
  }

  /**
   * The notification's body text.
   * @param body body or {@code null} for none
   */
  public Notification setBody(java.lang.String body) {
    this.body = body;
    return this;
  }

  /**
   * Contains the URL of an image that is going to be downloaded on the device and displayed in a
   * notification. JPEG, PNG, BMP have full support across platforms. Animated GIF and video only
   * work on iOS. WebP and HEIF have varying levels of support across platforms and platform
   * versions. Android has 1MB image size limit. Quota usage and implications/costs for hosting
   * image on Firebase Storage: https://firebase.google.com/pricing
   * @return value or {@code null} for none
   */
  public java.lang.String getImage() {
    return image;
  }

  /**
   * Contains the URL of an image that is going to be downloaded on the device and displayed in a
   * notification. JPEG, PNG, BMP have full support across platforms. Animated GIF and video only
   * work on iOS. WebP and HEIF have varying levels of support across platforms and platform
   * versions. Android has 1MB image size limit. Quota usage and implications/costs for hosting
   * image on Firebase Storage: https://firebase.google.com/pricing
   * @param image image or {@code null} for none
   */
  public Notification setImage(java.lang.String image) {
    this.image = image;
    return this;
  }

  /**
   * The notification's title.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * The notification's title.
   * @param title title or {@code null} for none
   */
  public Notification setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  @Override
  public Notification set(String fieldName, Object value) {
    return (Notification) super.set(fieldName, value);
  }

  @Override
  public Notification clone() {
    return (Notification) super.clone();
  }

}
