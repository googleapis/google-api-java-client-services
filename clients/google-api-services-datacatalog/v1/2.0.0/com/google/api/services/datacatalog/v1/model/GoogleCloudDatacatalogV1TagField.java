/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datacatalog.v1.model;

/**
 * Contains the value and additional information on a field within a Tag.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Data Catalog API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDatacatalogV1TagField extends com.google.api.client.json.GenericJson {

  /**
   * The value of a tag field with a boolean type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean boolValue;

  /**
   * Output only. The display name of this field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The value of a tag field with a double type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double doubleValue;

  /**
   * The value of a tag field with an enum type. This value must be one of the allowed values listed
   * in this enum.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatacatalogV1TagFieldEnumValue enumValue;

  /**
   * Output only. The order of this field with respect to other fields in this tag. Can be set by
   * Tag. For example, a higher value can indicate a more important field. The value can be
   * negative. Multiple fields can have the same order, and field orders within a tag don't have to
   * be sequential.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer order;

  /**
   * The value of a tag field with a rich text type. The maximum length is 10 MiB as this value
   * holds HTML descriptions including encoded images. The maximum length of the text without images
   * is 100 KiB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String richtextValue;

  /**
   * The value of a tag field with a string type. The maximum length is 2000 UTF-8 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stringValue;

  /**
   * The value of a tag field with a timestamp type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String timestampValue;

  /**
   * The value of a tag field with a boolean type.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBoolValue() {
    return boolValue;
  }

  /**
   * The value of a tag field with a boolean type.
   * @param boolValue boolValue or {@code null} for none
   */
  public GoogleCloudDatacatalogV1TagField setBoolValue(java.lang.Boolean boolValue) {
    this.boolValue = boolValue;
    return this;
  }

  /**
   * Output only. The display name of this field.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Output only. The display name of this field.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudDatacatalogV1TagField setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The value of a tag field with a double type.
   * @return value or {@code null} for none
   */
  public java.lang.Double getDoubleValue() {
    return doubleValue;
  }

  /**
   * The value of a tag field with a double type.
   * @param doubleValue doubleValue or {@code null} for none
   */
  public GoogleCloudDatacatalogV1TagField setDoubleValue(java.lang.Double doubleValue) {
    this.doubleValue = doubleValue;
    return this;
  }

  /**
   * The value of a tag field with an enum type. This value must be one of the allowed values listed
   * in this enum.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatacatalogV1TagFieldEnumValue getEnumValue() {
    return enumValue;
  }

  /**
   * The value of a tag field with an enum type. This value must be one of the allowed values listed
   * in this enum.
   * @param enumValue enumValue or {@code null} for none
   */
  public GoogleCloudDatacatalogV1TagField setEnumValue(GoogleCloudDatacatalogV1TagFieldEnumValue enumValue) {
    this.enumValue = enumValue;
    return this;
  }

  /**
   * Output only. The order of this field with respect to other fields in this tag. Can be set by
   * Tag. For example, a higher value can indicate a more important field. The value can be
   * negative. Multiple fields can have the same order, and field orders within a tag don't have to
   * be sequential.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOrder() {
    return order;
  }

  /**
   * Output only. The order of this field with respect to other fields in this tag. Can be set by
   * Tag. For example, a higher value can indicate a more important field. The value can be
   * negative. Multiple fields can have the same order, and field orders within a tag don't have to
   * be sequential.
   * @param order order or {@code null} for none
   */
  public GoogleCloudDatacatalogV1TagField setOrder(java.lang.Integer order) {
    this.order = order;
    return this;
  }

  /**
   * The value of a tag field with a rich text type. The maximum length is 10 MiB as this value
   * holds HTML descriptions including encoded images. The maximum length of the text without images
   * is 100 KiB.
   * @return value or {@code null} for none
   */
  public java.lang.String getRichtextValue() {
    return richtextValue;
  }

  /**
   * The value of a tag field with a rich text type. The maximum length is 10 MiB as this value
   * holds HTML descriptions including encoded images. The maximum length of the text without images
   * is 100 KiB.
   * @param richtextValue richtextValue or {@code null} for none
   */
  public GoogleCloudDatacatalogV1TagField setRichtextValue(java.lang.String richtextValue) {
    this.richtextValue = richtextValue;
    return this;
  }

  /**
   * The value of a tag field with a string type. The maximum length is 2000 UTF-8 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getStringValue() {
    return stringValue;
  }

  /**
   * The value of a tag field with a string type. The maximum length is 2000 UTF-8 characters.
   * @param stringValue stringValue or {@code null} for none
   */
  public GoogleCloudDatacatalogV1TagField setStringValue(java.lang.String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * The value of a tag field with a timestamp type.
   * @return value or {@code null} for none
   */
  public String getTimestampValue() {
    return timestampValue;
  }

  /**
   * The value of a tag field with a timestamp type.
   * @param timestampValue timestampValue or {@code null} for none
   */
  public GoogleCloudDatacatalogV1TagField setTimestampValue(String timestampValue) {
    this.timestampValue = timestampValue;
    return this;
  }

  @Override
  public GoogleCloudDatacatalogV1TagField set(String fieldName, Object value) {
    return (GoogleCloudDatacatalogV1TagField) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDatacatalogV1TagField clone() {
    return (GoogleCloudDatacatalogV1TagField) super.clone();
  }

}
