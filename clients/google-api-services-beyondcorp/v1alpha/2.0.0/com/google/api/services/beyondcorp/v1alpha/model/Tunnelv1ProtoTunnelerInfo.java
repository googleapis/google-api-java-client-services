/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.beyondcorp.v1alpha.model;

/**
 * TunnelerInfo contains metadata about tunneler launched by connection manager.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the BeyondCorp API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Tunnelv1ProtoTunnelerInfo extends com.google.api.client.json.GenericJson {

  /**
   * backoff_retry_count stores the number of times the tunneler has been retried by tunManager for
   * current backoff sequence. Gets reset to 0 if time difference between 2 consecutive retries
   * exceeds backoffRetryResetTime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long backoffRetryCount;

  /**
   * id is the unique id of a tunneler.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * latest_err stores the Error for the latest tunneler failure. Gets reset everytime the tunneler
   * is retried by tunManager.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Tunnelv1ProtoTunnelerError latestErr;

  /**
   * latest_retry_time stores the time when the tunneler was last restarted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String latestRetryTime;

  /**
   * total_retry_count stores the total number of times the tunneler has been retried by tunManager.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long totalRetryCount;

  /**
   * backoff_retry_count stores the number of times the tunneler has been retried by tunManager for
   * current backoff sequence. Gets reset to 0 if time difference between 2 consecutive retries
   * exceeds backoffRetryResetTime.
   * @return value or {@code null} for none
   */
  public java.lang.Long getBackoffRetryCount() {
    return backoffRetryCount;
  }

  /**
   * backoff_retry_count stores the number of times the tunneler has been retried by tunManager for
   * current backoff sequence. Gets reset to 0 if time difference between 2 consecutive retries
   * exceeds backoffRetryResetTime.
   * @param backoffRetryCount backoffRetryCount or {@code null} for none
   */
  public Tunnelv1ProtoTunnelerInfo setBackoffRetryCount(java.lang.Long backoffRetryCount) {
    this.backoffRetryCount = backoffRetryCount;
    return this;
  }

  /**
   * id is the unique id of a tunneler.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * id is the unique id of a tunneler.
   * @param id id or {@code null} for none
   */
  public Tunnelv1ProtoTunnelerInfo setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * latest_err stores the Error for the latest tunneler failure. Gets reset everytime the tunneler
   * is retried by tunManager.
   * @return value or {@code null} for none
   */
  public Tunnelv1ProtoTunnelerError getLatestErr() {
    return latestErr;
  }

  /**
   * latest_err stores the Error for the latest tunneler failure. Gets reset everytime the tunneler
   * is retried by tunManager.
   * @param latestErr latestErr or {@code null} for none
   */
  public Tunnelv1ProtoTunnelerInfo setLatestErr(Tunnelv1ProtoTunnelerError latestErr) {
    this.latestErr = latestErr;
    return this;
  }

  /**
   * latest_retry_time stores the time when the tunneler was last restarted.
   * @return value or {@code null} for none
   */
  public String getLatestRetryTime() {
    return latestRetryTime;
  }

  /**
   * latest_retry_time stores the time when the tunneler was last restarted.
   * @param latestRetryTime latestRetryTime or {@code null} for none
   */
  public Tunnelv1ProtoTunnelerInfo setLatestRetryTime(String latestRetryTime) {
    this.latestRetryTime = latestRetryTime;
    return this;
  }

  /**
   * total_retry_count stores the total number of times the tunneler has been retried by tunManager.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTotalRetryCount() {
    return totalRetryCount;
  }

  /**
   * total_retry_count stores the total number of times the tunneler has been retried by tunManager.
   * @param totalRetryCount totalRetryCount or {@code null} for none
   */
  public Tunnelv1ProtoTunnelerInfo setTotalRetryCount(java.lang.Long totalRetryCount) {
    this.totalRetryCount = totalRetryCount;
    return this;
  }

  @Override
  public Tunnelv1ProtoTunnelerInfo set(String fieldName, Object value) {
    return (Tunnelv1ProtoTunnelerInfo) super.set(fieldName, value);
  }

  @Override
  public Tunnelv1ProtoTunnelerInfo clone() {
    return (Tunnelv1ProtoTunnelerInfo) super.clone();
  }

}
