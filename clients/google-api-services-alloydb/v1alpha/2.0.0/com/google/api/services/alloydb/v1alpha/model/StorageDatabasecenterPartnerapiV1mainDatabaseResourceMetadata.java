/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.alloydb.v1alpha.model;

/**
 * Common model for database resource instance metadata.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AlloyDB API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Availability configuration for this instance
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration availabilityConfiguration;

  /**
   * Backup configuration for this instance
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StorageDatabasecenterPartnerapiV1mainBackupConfiguration backupConfiguration;

  /**
   * Latest backup run information for this instance
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StorageDatabasecenterPartnerapiV1mainBackupRun backupRun;

  /**
   * The creation time of the resource, i.e. the time when resource is created and recorded in
   * partner service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String creationTime;

  /**
   * Current state of the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String currentState;

  /**
   * The actual instance state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String expectedState;

  /**
   * Required. Unique identifier for a Database resource
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StorageDatabasecenterPartnerapiV1mainDatabaseResourceId id;

  /**
   * The type of the instance. Specified at creation time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instanceType;

  /**
   * The resource location. REQUIRED
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * Unique identifier for this resource's immediate parent resource. This parent resource id would
   * be used to build resource hierarchy in condor platform.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StorageDatabasecenterPartnerapiV1mainDatabaseResourceId primaryResourceId;

  /**
   * The product this resource represents.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StorageDatabasecenterProtoCommonProduct product;

  /**
   * Closest parent Cloud Resource Manager container of this resource. It must either be resource
   * name of a Cloud Resource Manager project, for ex: "projects/123".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceContainer;

  /**
   * Required. Different from unique_id, a resource name can be reused over time. That is after a
   * resource named "ABC" is deleted, the name "ABC" can be used to to create a new resource within
   * the same source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceName;

  /**
   * The time at which the resource was updated and recorded at partner service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updationTime;

  /**
   * User-provided labels, represented as a dictionary where each label is a single key value pair.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> userLabels;

  /**
   * Availability configuration for this instance
   * @return value or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration getAvailabilityConfiguration() {
    return availabilityConfiguration;
  }

  /**
   * Availability configuration for this instance
   * @param availabilityConfiguration availabilityConfiguration or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setAvailabilityConfiguration(StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration availabilityConfiguration) {
    this.availabilityConfiguration = availabilityConfiguration;
    return this;
  }

  /**
   * Backup configuration for this instance
   * @return value or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainBackupConfiguration getBackupConfiguration() {
    return backupConfiguration;
  }

  /**
   * Backup configuration for this instance
   * @param backupConfiguration backupConfiguration or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setBackupConfiguration(StorageDatabasecenterPartnerapiV1mainBackupConfiguration backupConfiguration) {
    this.backupConfiguration = backupConfiguration;
    return this;
  }

  /**
   * Latest backup run information for this instance
   * @return value or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainBackupRun getBackupRun() {
    return backupRun;
  }

  /**
   * Latest backup run information for this instance
   * @param backupRun backupRun or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setBackupRun(StorageDatabasecenterPartnerapiV1mainBackupRun backupRun) {
    this.backupRun = backupRun;
    return this;
  }

  /**
   * The creation time of the resource, i.e. the time when resource is created and recorded in
   * partner service.
   * @return value or {@code null} for none
   */
  public String getCreationTime() {
    return creationTime;
  }

  /**
   * The creation time of the resource, i.e. the time when resource is created and recorded in
   * partner service.
   * @param creationTime creationTime or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setCreationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Current state of the instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getCurrentState() {
    return currentState;
  }

  /**
   * Current state of the instance.
   * @param currentState currentState or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setCurrentState(java.lang.String currentState) {
    this.currentState = currentState;
    return this;
  }

  /**
   * The actual instance state.
   * @return value or {@code null} for none
   */
  public java.lang.String getExpectedState() {
    return expectedState;
  }

  /**
   * The actual instance state.
   * @param expectedState expectedState or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setExpectedState(java.lang.String expectedState) {
    this.expectedState = expectedState;
    return this;
  }

  /**
   * Required. Unique identifier for a Database resource
   * @return value or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceId getId() {
    return id;
  }

  /**
   * Required. Unique identifier for a Database resource
   * @param id id or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setId(StorageDatabasecenterPartnerapiV1mainDatabaseResourceId id) {
    this.id = id;
    return this;
  }

  /**
   * The type of the instance. Specified at creation time.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstanceType() {
    return instanceType;
  }

  /**
   * The type of the instance. Specified at creation time.
   * @param instanceType instanceType or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setInstanceType(java.lang.String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * The resource location. REQUIRED
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * The resource location. REQUIRED
   * @param location location or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * Unique identifier for this resource's immediate parent resource. This parent resource id would
   * be used to build resource hierarchy in condor platform.
   * @return value or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceId getPrimaryResourceId() {
    return primaryResourceId;
  }

  /**
   * Unique identifier for this resource's immediate parent resource. This parent resource id would
   * be used to build resource hierarchy in condor platform.
   * @param primaryResourceId primaryResourceId or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setPrimaryResourceId(StorageDatabasecenterPartnerapiV1mainDatabaseResourceId primaryResourceId) {
    this.primaryResourceId = primaryResourceId;
    return this;
  }

  /**
   * The product this resource represents.
   * @return value or {@code null} for none
   */
  public StorageDatabasecenterProtoCommonProduct getProduct() {
    return product;
  }

  /**
   * The product this resource represents.
   * @param product product or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setProduct(StorageDatabasecenterProtoCommonProduct product) {
    this.product = product;
    return this;
  }

  /**
   * Closest parent Cloud Resource Manager container of this resource. It must either be resource
   * name of a Cloud Resource Manager project, for ex: "projects/123".
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceContainer() {
    return resourceContainer;
  }

  /**
   * Closest parent Cloud Resource Manager container of this resource. It must either be resource
   * name of a Cloud Resource Manager project, for ex: "projects/123".
   * @param resourceContainer resourceContainer or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setResourceContainer(java.lang.String resourceContainer) {
    this.resourceContainer = resourceContainer;
    return this;
  }

  /**
   * Required. Different from unique_id, a resource name can be reused over time. That is after a
   * resource named "ABC" is deleted, the name "ABC" can be used to to create a new resource within
   * the same source.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceName() {
    return resourceName;
  }

  /**
   * Required. Different from unique_id, a resource name can be reused over time. That is after a
   * resource named "ABC" is deleted, the name "ABC" can be used to to create a new resource within
   * the same source.
   * @param resourceName resourceName or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setResourceName(java.lang.String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * The time at which the resource was updated and recorded at partner service.
   * @return value or {@code null} for none
   */
  public String getUpdationTime() {
    return updationTime;
  }

  /**
   * The time at which the resource was updated and recorded at partner service.
   * @param updationTime updationTime or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setUpdationTime(String updationTime) {
    this.updationTime = updationTime;
    return this;
  }

  /**
   * User-provided labels, represented as a dictionary where each label is a single key value pair.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getUserLabels() {
    return userLabels;
  }

  /**
   * User-provided labels, represented as a dictionary where each label is a single key value pair.
   * @param userLabels userLabels or {@code null} for none
   */
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata setUserLabels(java.util.Map<String, java.lang.String> userLabels) {
    this.userLabels = userLabels;
    return this;
  }

  @Override
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata set(String fieldName, Object value) {
    return (StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata) super.set(fieldName, value);
  }

  @Override
  public StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata clone() {
    return (StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata) super.clone();
  }

}
