/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v2.model;

/**
 * Each logical network interface is effectively a network and IP pair.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Bare Metal Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LogicalNetworkInterface extends com.google.api.client.json.GenericJson {

  /**
   * Whether this interface is the default gateway for the instance. Only one interface can be the
   * default gateway for the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean defaultGateway;

  /**
   * An identifier for the `Network`, generated by the backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * IP address in the network
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ipAddress;

  /**
   * Name of the network
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String network;

  /**
   * Type of network.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String networkType;

  /**
   * Whether this interface is the default gateway for the instance. Only one interface can be the
   * default gateway for the instance.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDefaultGateway() {
    return defaultGateway;
  }

  /**
   * Whether this interface is the default gateway for the instance. Only one interface can be the
   * default gateway for the instance.
   * @param defaultGateway defaultGateway or {@code null} for none
   */
  public LogicalNetworkInterface setDefaultGateway(java.lang.Boolean defaultGateway) {
    this.defaultGateway = defaultGateway;
    return this;
  }

  /**
   * An identifier for the `Network`, generated by the backend.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * An identifier for the `Network`, generated by the backend.
   * @param id id or {@code null} for none
   */
  public LogicalNetworkInterface setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * IP address in the network
   * @return value or {@code null} for none
   */
  public java.lang.String getIpAddress() {
    return ipAddress;
  }

  /**
   * IP address in the network
   * @param ipAddress ipAddress or {@code null} for none
   */
  public LogicalNetworkInterface setIpAddress(java.lang.String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Name of the network
   * @return value or {@code null} for none
   */
  public java.lang.String getNetwork() {
    return network;
  }

  /**
   * Name of the network
   * @param network network or {@code null} for none
   */
  public LogicalNetworkInterface setNetwork(java.lang.String network) {
    this.network = network;
    return this;
  }

  /**
   * Type of network.
   * @return value or {@code null} for none
   */
  public java.lang.String getNetworkType() {
    return networkType;
  }

  /**
   * Type of network.
   * @param networkType networkType or {@code null} for none
   */
  public LogicalNetworkInterface setNetworkType(java.lang.String networkType) {
    this.networkType = networkType;
    return this;
  }

  @Override
  public LogicalNetworkInterface set(String fieldName, Object value) {
    return (LogicalNetworkInterface) super.set(fieldName, value);
  }

  @Override
  public LogicalNetworkInterface clone() {
    return (LogicalNetworkInterface) super.clone();
  }

}
