/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v1.model;

/**
 * ConnectorVersion indicates a specific version of a connector.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Connectors API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ConnectorVersion extends com.google.api.client.json.GenericJson {

  /**
   * Output only. List of auth configs supported by the Connector Version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AuthConfigTemplate> authConfigTemplates;

  static {
    // hack to force ProGuard to consider AuthConfigTemplate used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AuthConfigTemplate.class);
  }

  /**
   * Output only. List of config variables needed to create a connection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ConfigVariableTemplate> configVariableTemplates;

  static {
    // hack to force ProGuard to consider ConfigVariableTemplate used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ConfigVariableTemplate.class);
  }

  /**
   * Output only. Created time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Configuration for Egress Control.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EgressControlConfig egressControlConfig;

  /**
   * Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation
   * on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. Flag to mark the version indicating the launch stage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String launchStage;

  /**
   * Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/prov
   * iders/{provider}/connectors/{connector}/versions/{version} Only global location is supported
   * for Connector resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. ReleaseVersion of the connector, for example: "1.0.1-alpha".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String releaseVersion;

  /**
   * Output only. Role grant configuration for this config variable. It will be DEPRECATED soon.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RoleGrant roleGrant;

  /**
   * Output only. Role grant configurations for this connector version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RoleGrant> roleGrants;

  /**
   * Output only. Information about the runtime features supported by the Connector.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SupportedRuntimeFeatures supportedRuntimeFeatures;

  /**
   * Output only. Updated time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. List of auth configs supported by the Connector Version.
   * @return value or {@code null} for none
   */
  public java.util.List<AuthConfigTemplate> getAuthConfigTemplates() {
    return authConfigTemplates;
  }

  /**
   * Output only. List of auth configs supported by the Connector Version.
   * @param authConfigTemplates authConfigTemplates or {@code null} for none
   */
  public ConnectorVersion setAuthConfigTemplates(java.util.List<AuthConfigTemplate> authConfigTemplates) {
    this.authConfigTemplates = authConfigTemplates;
    return this;
  }

  /**
   * Output only. List of config variables needed to create a connection.
   * @return value or {@code null} for none
   */
  public java.util.List<ConfigVariableTemplate> getConfigVariableTemplates() {
    return configVariableTemplates;
  }

  /**
   * Output only. List of config variables needed to create a connection.
   * @param configVariableTemplates configVariableTemplates or {@code null} for none
   */
  public ConnectorVersion setConfigVariableTemplates(java.util.List<ConfigVariableTemplate> configVariableTemplates) {
    this.configVariableTemplates = configVariableTemplates;
    return this;
  }

  /**
   * Output only. Created time.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Created time.
   * @param createTime createTime or {@code null} for none
   */
  public ConnectorVersion setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Display name.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Output only. Display name.
   * @param displayName displayName or {@code null} for none
   */
  public ConnectorVersion setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Configuration for Egress Control.
   * @return value or {@code null} for none
   */
  public EgressControlConfig getEgressControlConfig() {
    return egressControlConfig;
  }

  /**
   * Output only. Configuration for Egress Control.
   * @param egressControlConfig egressControlConfig or {@code null} for none
   */
  public ConnectorVersion setEgressControlConfig(EgressControlConfig egressControlConfig) {
    this.egressControlConfig = egressControlConfig;
    return this;
  }

  /**
   * Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation
   * on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation
   * on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
   * @param labels labels or {@code null} for none
   */
  public ConnectorVersion setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. Flag to mark the version indicating the launch stage.
   * @return value or {@code null} for none
   */
  public java.lang.String getLaunchStage() {
    return launchStage;
  }

  /**
   * Output only. Flag to mark the version indicating the launch stage.
   * @param launchStage launchStage or {@code null} for none
   */
  public ConnectorVersion setLaunchStage(java.lang.String launchStage) {
    this.launchStage = launchStage;
    return this;
  }

  /**
   * Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/prov
   * iders/{provider}/connectors/{connector}/versions/{version} Only global location is supported
   * for Connector resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/prov
   * iders/{provider}/connectors/{connector}/versions/{version} Only global location is supported
   * for Connector resource.
   * @param name name or {@code null} for none
   */
  public ConnectorVersion setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. ReleaseVersion of the connector, for example: "1.0.1-alpha".
   * @return value or {@code null} for none
   */
  public java.lang.String getReleaseVersion() {
    return releaseVersion;
  }

  /**
   * Output only. ReleaseVersion of the connector, for example: "1.0.1-alpha".
   * @param releaseVersion releaseVersion or {@code null} for none
   */
  public ConnectorVersion setReleaseVersion(java.lang.String releaseVersion) {
    this.releaseVersion = releaseVersion;
    return this;
  }

  /**
   * Output only. Role grant configuration for this config variable. It will be DEPRECATED soon.
   * @return value or {@code null} for none
   */
  public RoleGrant getRoleGrant() {
    return roleGrant;
  }

  /**
   * Output only. Role grant configuration for this config variable. It will be DEPRECATED soon.
   * @param roleGrant roleGrant or {@code null} for none
   */
  public ConnectorVersion setRoleGrant(RoleGrant roleGrant) {
    this.roleGrant = roleGrant;
    return this;
  }

  /**
   * Output only. Role grant configurations for this connector version.
   * @return value or {@code null} for none
   */
  public java.util.List<RoleGrant> getRoleGrants() {
    return roleGrants;
  }

  /**
   * Output only. Role grant configurations for this connector version.
   * @param roleGrants roleGrants or {@code null} for none
   */
  public ConnectorVersion setRoleGrants(java.util.List<RoleGrant> roleGrants) {
    this.roleGrants = roleGrants;
    return this;
  }

  /**
   * Output only. Information about the runtime features supported by the Connector.
   * @return value or {@code null} for none
   */
  public SupportedRuntimeFeatures getSupportedRuntimeFeatures() {
    return supportedRuntimeFeatures;
  }

  /**
   * Output only. Information about the runtime features supported by the Connector.
   * @param supportedRuntimeFeatures supportedRuntimeFeatures or {@code null} for none
   */
  public ConnectorVersion setSupportedRuntimeFeatures(SupportedRuntimeFeatures supportedRuntimeFeatures) {
    this.supportedRuntimeFeatures = supportedRuntimeFeatures;
    return this;
  }

  /**
   * Output only. Updated time.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Updated time.
   * @param updateTime updateTime or {@code null} for none
   */
  public ConnectorVersion setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public ConnectorVersion set(String fieldName, Object value) {
    return (ConnectorVersion) super.set(fieldName, value);
  }

  @Override
  public ConnectorVersion clone() {
    return (ConnectorVersion) super.clone();
  }

}
