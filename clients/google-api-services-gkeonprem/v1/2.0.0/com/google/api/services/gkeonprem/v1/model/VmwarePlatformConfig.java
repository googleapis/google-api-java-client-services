/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkeonprem.v1.model;

/**
 * VmwarePlatformConfig represents configuration for the VMware platform.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Anthos On-Prem API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VmwarePlatformConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The list of bundles installed in the admin cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VmwareBundleConfig> bundles;

  static {
    // hack to force ProGuard to consider VmwareBundleConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(VmwareBundleConfig.class);
  }

  /**
   * Output only. The platform version e.g. 1.13.2.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String platformVersion;

  /**
   * Input only. The required platform version e.g. 1.13.1. If the current platform version is lower
   * than the target version, the platform version will be updated to the target version. If the
   * target version is not installed in the platform (bundle versions), download the target version
   * bundle.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String requiredPlatformVersion;

  /**
   * Output only. Resource status for the platform.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceStatus status;

  /**
   * Output only. The list of bundles installed in the admin cluster.
   * @return value or {@code null} for none
   */
  public java.util.List<VmwareBundleConfig> getBundles() {
    return bundles;
  }

  /**
   * Output only. The list of bundles installed in the admin cluster.
   * @param bundles bundles or {@code null} for none
   */
  public VmwarePlatformConfig setBundles(java.util.List<VmwareBundleConfig> bundles) {
    this.bundles = bundles;
    return this;
  }

  /**
   * Output only. The platform version e.g. 1.13.2.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlatformVersion() {
    return platformVersion;
  }

  /**
   * Output only. The platform version e.g. 1.13.2.
   * @param platformVersion platformVersion or {@code null} for none
   */
  public VmwarePlatformConfig setPlatformVersion(java.lang.String platformVersion) {
    this.platformVersion = platformVersion;
    return this;
  }

  /**
   * Input only. The required platform version e.g. 1.13.1. If the current platform version is lower
   * than the target version, the platform version will be updated to the target version. If the
   * target version is not installed in the platform (bundle versions), download the target version
   * bundle.
   * @return value or {@code null} for none
   */
  public java.lang.String getRequiredPlatformVersion() {
    return requiredPlatformVersion;
  }

  /**
   * Input only. The required platform version e.g. 1.13.1. If the current platform version is lower
   * than the target version, the platform version will be updated to the target version. If the
   * target version is not installed in the platform (bundle versions), download the target version
   * bundle.
   * @param requiredPlatformVersion requiredPlatformVersion or {@code null} for none
   */
  public VmwarePlatformConfig setRequiredPlatformVersion(java.lang.String requiredPlatformVersion) {
    this.requiredPlatformVersion = requiredPlatformVersion;
    return this;
  }

  /**
   * Output only. Resource status for the platform.
   * @return value or {@code null} for none
   */
  public ResourceStatus getStatus() {
    return status;
  }

  /**
   * Output only. Resource status for the platform.
   * @param status status or {@code null} for none
   */
  public VmwarePlatformConfig setStatus(ResourceStatus status) {
    this.status = status;
    return this;
  }

  @Override
  public VmwarePlatformConfig set(String fieldName, Object value) {
    return (VmwarePlatformConfig) super.set(fieldName, value);
  }

  @Override
  public VmwarePlatformConfig clone() {
    return (VmwarePlatformConfig) super.clone();
  }

}
