/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Message posted to a Space.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsDynamiteMessage extends com.google.api.client.json.GenericJson {

  /**
   * Annotations parsed and extracted from the text body.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteAnnotation> annotations;

  static {
    // hack to force ProGuard to consider AppsDynamiteAnnotation used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppsDynamiteAnnotation.class);
  }

  /**
   * Custom display profile info for apps. Leave the field empty for real users.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedAppProfile appProfile;

  /**
   * Attachments parsed from incoming webhooks
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteAttachment> attachments;

  static {
    // hack to force ProGuard to consider AppsDynamiteAttachment used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppsDynamiteAttachment.class);
  }

  /**
   * Lightweight message attributes which values are calculated and set in the servers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteMessageAttributes attributes;

  /**
   * Responses from bots indicating if extra auth/config is needed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteBotResponse> botResponses;

  static {
    // hack to force ProGuard to consider AppsDynamiteBotResponse used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppsDynamiteBotResponse.class);
  }

  /**
   * Communal labels associated with a message. These exist on the message itself regardless of
   * which user fetches them. Order of entries is arbitrary and will not list duplicates of the same
   * label_id. See go/chat-labels-design for details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteBackendLabelsCommunalLabelTag> communalLabels;

  static {
    // hack to force ProGuard to consider AppsDynamiteBackendLabelsCommunalLabelTag used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppsDynamiteBackendLabelsCommunalLabelTag.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteMessageContentReportSummary contentReportSummary;

  /**
   * Time when the Message was posted in microseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long createTime;

  /**
   * ID of the User who posted the Message. This includes information to identify if this was posted
   * by an App on behalf of a user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteUserId creatorId;

  /**
   * Indicates who can delete the message. This field is set on the read path (e.g. ListTopics) but
   * doesn’t have any effect on the write path (e.g. CreateMessageRequest).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deletableBy;

  /**
   * Time when the Message was deleted in microseconds. This field is set to nonzero value only for
   * Messages deleted globally.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long deleteTime;

  /**
   * Time when the Message was per-user deleted by the message requester in microseconds. This field
   * is set to nonzero value only for Message per-user deleted by the requester.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long deleteTimeForRequester;

  /**
   * Was this message deleted by Vault (Only used for Vault support) This is false if message is
   * live or message was deleted by user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean deletedByVault;

  /**
   * Data Loss Prevention scan information for this message. Messages are evaluated in the backend
   * on create message/topic and edit message actions. DEPRECATED: use dlp_scan_summary instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dlpScanOutcome;

  /**
   * Data Loss Prevention scan information for this message. Messages are evaluated in the backend
   * on create message/topic and edit message actions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteBackendDlpScanSummary dlpScanSummary;

  /**
   * Indicates who can edit the message. This field is set on the read path (e.g. ListTopics) but
   * doesn’t have any effect on the write path (e.g. CreateMessageRequest).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String editableBy;

  /**
   * A plain-text description of the attachment, used when clients cannot display formatted
   * attachment (e.g. mobile push notifications).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fallbackText;

  /**
   * ID of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteMessageId id;

  /**
   * Output only. Indicates if the message is an inline reply. Set to true only if the message's
   * ParentPath is non-NULL. Currently, only inline replies have non-NULL ParentPath. See go/chat-
   * be-inline-reply-indicator.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isInlineReply;

  /**
   * If the message was edited by a user, timestamp of the last edit, in microseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long lastEditTime;

  /**
   * Time when the Message text was last updated in microseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long lastUpdateTime;

  /**
   * A unique id specified on the client side.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String localId;

  /**
   * An optional payload (restricted to 1P applications) that will be stored with this message. This
   * can only be set by the 1P API and should be used to deliver additional data such a 1P sync
   * version, 1P entity ID to the client for more advanced functionality [Eg. inform Group Tasks tab
   * of new version while linking, fetch & render a live Task/Meet call tile].
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedMessageIntegrationPayload messageIntegrationPayload;

  /**
   * Where the message was posted from
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String messageOrigin;

  /**
   * State of the message, indicating whether the message is visible to all members in the group or
   * is only visible to the sender only, or the private_message_viewer if it is set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String messageState;

  /**
   * Indicates if this message contains any suggestions that were provided by any Apps.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteSharedOriginAppSuggestion> originAppSuggestions;

  /**
   * Personal labels associated with a message for the viewing user. Order of entries is arbitrary
   * and will not list duplicates of the same label_id. See go/chat-labels-design for details. NOTE:
   * This will be unpopulated in the case of SpaceChangelog events.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteBackendLabelsPersonalLabelTag> personalLabels;

  static {
    // hack to force ProGuard to consider AppsDynamiteBackendLabelsPersonalLabelTag used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppsDynamiteBackendLabelsPersonalLabelTag.class);
  }

  /**
   * A list of per-user private information. This is deprecated, because we no longer plan to
   * support partially private messages or private messages for multiple users. The message_state
   * and private_message_viewer fields should be sufficient for this infrastructure.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamitePrivateMessageInfo> privateMessageInfos;

  /**
   * Should only be set if the Message State is PRIVATE. If set, the message content is only visible
   * to this user (and any apps associated with the message), as well as the message creator. If
   * unset, a private message is visible to the message creator only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteUserId privateMessageViewer;

  /**
   * Contains additional (currently Hangouts Classic only) properties applicable to this message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteMessageProps props;

  /**
   * Output only. Whether this message has been quoted by another message or not. Used by clients to
   * handle message edit flows for messages that have been quoted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String quotedByState;

  /**
   * Output only. Metadata for a message that is quoted by this message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteQuotedMessageMetadata quotedMessageMetadata;

  /**
   * A list of user reactions to this message. Ordered by the timestamp of the first reaction,
   * ascending (oldest to newest).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteSharedReaction> reactions;

  /**
   * Output only. Details of content reports. Set only when the request asks for it.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteContentReport> reports;

  static {
    // hack to force ProGuard to consider AppsDynamiteContentReport used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppsDynamiteContentReport.class);
  }

  /**
   * The retention settings of the message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedRetentionSettings retentionSettings;

  /**
   * A client-specified string that can be used to uniquely identify a message in a space, in lieu
   * of `id.message_id`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String secondaryMessageKey;

  /**
   * Plaintext body of the Message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String textBody;

  /**
   * Information for the stoning of a Message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteTombstoneMetadata tombstoneMetadata;

  /**
   * ID of the User who last updated (created/edited/deleted) the Message. This includes information
   * to identify if this was updated by an App on behalf of a user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteUserId updaterId;

  /**
   * UploadMetadata b/36864213 is an ongoing effort to move UploadMetadata out of annotations field
   * and save it to upload_metadata field only. After the migration, UploadMetadata will only be
   * saved in this field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteUploadMetadata> uploadMetadata;

  /**
   * Annotations parsed and extracted from the text body.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteAnnotation> getAnnotations() {
    return annotations;
  }

  /**
   * Annotations parsed and extracted from the text body.
   * @param annotations annotations or {@code null} for none
   */
  public AppsDynamiteMessage setAnnotations(java.util.List<AppsDynamiteAnnotation> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Custom display profile info for apps. Leave the field empty for real users.
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedAppProfile getAppProfile() {
    return appProfile;
  }

  /**
   * Custom display profile info for apps. Leave the field empty for real users.
   * @param appProfile appProfile or {@code null} for none
   */
  public AppsDynamiteMessage setAppProfile(AppsDynamiteSharedAppProfile appProfile) {
    this.appProfile = appProfile;
    return this;
  }

  /**
   * Attachments parsed from incoming webhooks
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteAttachment> getAttachments() {
    return attachments;
  }

  /**
   * Attachments parsed from incoming webhooks
   * @param attachments attachments or {@code null} for none
   */
  public AppsDynamiteMessage setAttachments(java.util.List<AppsDynamiteAttachment> attachments) {
    this.attachments = attachments;
    return this;
  }

  /**
   * Lightweight message attributes which values are calculated and set in the servers.
   * @return value or {@code null} for none
   */
  public AppsDynamiteMessageAttributes getAttributes() {
    return attributes;
  }

  /**
   * Lightweight message attributes which values are calculated and set in the servers.
   * @param attributes attributes or {@code null} for none
   */
  public AppsDynamiteMessage setAttributes(AppsDynamiteMessageAttributes attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Responses from bots indicating if extra auth/config is needed.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteBotResponse> getBotResponses() {
    return botResponses;
  }

  /**
   * Responses from bots indicating if extra auth/config is needed.
   * @param botResponses botResponses or {@code null} for none
   */
  public AppsDynamiteMessage setBotResponses(java.util.List<AppsDynamiteBotResponse> botResponses) {
    this.botResponses = botResponses;
    return this;
  }

  /**
   * Communal labels associated with a message. These exist on the message itself regardless of
   * which user fetches them. Order of entries is arbitrary and will not list duplicates of the same
   * label_id. See go/chat-labels-design for details.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteBackendLabelsCommunalLabelTag> getCommunalLabels() {
    return communalLabels;
  }

  /**
   * Communal labels associated with a message. These exist on the message itself regardless of
   * which user fetches them. Order of entries is arbitrary and will not list duplicates of the same
   * label_id. See go/chat-labels-design for details.
   * @param communalLabels communalLabels or {@code null} for none
   */
  public AppsDynamiteMessage setCommunalLabels(java.util.List<AppsDynamiteBackendLabelsCommunalLabelTag> communalLabels) {
    this.communalLabels = communalLabels;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AppsDynamiteMessageContentReportSummary getContentReportSummary() {
    return contentReportSummary;
  }

  /**
   * @param contentReportSummary contentReportSummary or {@code null} for none
   */
  public AppsDynamiteMessage setContentReportSummary(AppsDynamiteMessageContentReportSummary contentReportSummary) {
    this.contentReportSummary = contentReportSummary;
    return this;
  }

  /**
   * Time when the Message was posted in microseconds.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCreateTime() {
    return createTime;
  }

  /**
   * Time when the Message was posted in microseconds.
   * @param createTime createTime or {@code null} for none
   */
  public AppsDynamiteMessage setCreateTime(java.lang.Long createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * ID of the User who posted the Message. This includes information to identify if this was posted
   * by an App on behalf of a user.
   * @return value or {@code null} for none
   */
  public AppsDynamiteUserId getCreatorId() {
    return creatorId;
  }

  /**
   * ID of the User who posted the Message. This includes information to identify if this was posted
   * by an App on behalf of a user.
   * @param creatorId creatorId or {@code null} for none
   */
  public AppsDynamiteMessage setCreatorId(AppsDynamiteUserId creatorId) {
    this.creatorId = creatorId;
    return this;
  }

  /**
   * Indicates who can delete the message. This field is set on the read path (e.g. ListTopics) but
   * doesn’t have any effect on the write path (e.g. CreateMessageRequest).
   * @return value or {@code null} for none
   */
  public java.lang.String getDeletableBy() {
    return deletableBy;
  }

  /**
   * Indicates who can delete the message. This field is set on the read path (e.g. ListTopics) but
   * doesn’t have any effect on the write path (e.g. CreateMessageRequest).
   * @param deletableBy deletableBy or {@code null} for none
   */
  public AppsDynamiteMessage setDeletableBy(java.lang.String deletableBy) {
    this.deletableBy = deletableBy;
    return this;
  }

  /**
   * Time when the Message was deleted in microseconds. This field is set to nonzero value only for
   * Messages deleted globally.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDeleteTime() {
    return deleteTime;
  }

  /**
   * Time when the Message was deleted in microseconds. This field is set to nonzero value only for
   * Messages deleted globally.
   * @param deleteTime deleteTime or {@code null} for none
   */
  public AppsDynamiteMessage setDeleteTime(java.lang.Long deleteTime) {
    this.deleteTime = deleteTime;
    return this;
  }

  /**
   * Time when the Message was per-user deleted by the message requester in microseconds. This field
   * is set to nonzero value only for Message per-user deleted by the requester.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDeleteTimeForRequester() {
    return deleteTimeForRequester;
  }

  /**
   * Time when the Message was per-user deleted by the message requester in microseconds. This field
   * is set to nonzero value only for Message per-user deleted by the requester.
   * @param deleteTimeForRequester deleteTimeForRequester or {@code null} for none
   */
  public AppsDynamiteMessage setDeleteTimeForRequester(java.lang.Long deleteTimeForRequester) {
    this.deleteTimeForRequester = deleteTimeForRequester;
    return this;
  }

  /**
   * Was this message deleted by Vault (Only used for Vault support) This is false if message is
   * live or message was deleted by user.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDeletedByVault() {
    return deletedByVault;
  }

  /**
   * Was this message deleted by Vault (Only used for Vault support) This is false if message is
   * live or message was deleted by user.
   * @param deletedByVault deletedByVault or {@code null} for none
   */
  public AppsDynamiteMessage setDeletedByVault(java.lang.Boolean deletedByVault) {
    this.deletedByVault = deletedByVault;
    return this;
  }

  /**
   * Data Loss Prevention scan information for this message. Messages are evaluated in the backend
   * on create message/topic and edit message actions. DEPRECATED: use dlp_scan_summary instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getDlpScanOutcome() {
    return dlpScanOutcome;
  }

  /**
   * Data Loss Prevention scan information for this message. Messages are evaluated in the backend
   * on create message/topic and edit message actions. DEPRECATED: use dlp_scan_summary instead.
   * @param dlpScanOutcome dlpScanOutcome or {@code null} for none
   */
  public AppsDynamiteMessage setDlpScanOutcome(java.lang.String dlpScanOutcome) {
    this.dlpScanOutcome = dlpScanOutcome;
    return this;
  }

  /**
   * Data Loss Prevention scan information for this message. Messages are evaluated in the backend
   * on create message/topic and edit message actions.
   * @return value or {@code null} for none
   */
  public AppsDynamiteBackendDlpScanSummary getDlpScanSummary() {
    return dlpScanSummary;
  }

  /**
   * Data Loss Prevention scan information for this message. Messages are evaluated in the backend
   * on create message/topic and edit message actions.
   * @param dlpScanSummary dlpScanSummary or {@code null} for none
   */
  public AppsDynamiteMessage setDlpScanSummary(AppsDynamiteBackendDlpScanSummary dlpScanSummary) {
    this.dlpScanSummary = dlpScanSummary;
    return this;
  }

  /**
   * Indicates who can edit the message. This field is set on the read path (e.g. ListTopics) but
   * doesn’t have any effect on the write path (e.g. CreateMessageRequest).
   * @return value or {@code null} for none
   */
  public java.lang.String getEditableBy() {
    return editableBy;
  }

  /**
   * Indicates who can edit the message. This field is set on the read path (e.g. ListTopics) but
   * doesn’t have any effect on the write path (e.g. CreateMessageRequest).
   * @param editableBy editableBy or {@code null} for none
   */
  public AppsDynamiteMessage setEditableBy(java.lang.String editableBy) {
    this.editableBy = editableBy;
    return this;
  }

  /**
   * A plain-text description of the attachment, used when clients cannot display formatted
   * attachment (e.g. mobile push notifications).
   * @return value or {@code null} for none
   */
  public java.lang.String getFallbackText() {
    return fallbackText;
  }

  /**
   * A plain-text description of the attachment, used when clients cannot display formatted
   * attachment (e.g. mobile push notifications).
   * @param fallbackText fallbackText or {@code null} for none
   */
  public AppsDynamiteMessage setFallbackText(java.lang.String fallbackText) {
    this.fallbackText = fallbackText;
    return this;
  }

  /**
   * ID of the resource.
   * @return value or {@code null} for none
   */
  public AppsDynamiteMessageId getId() {
    return id;
  }

  /**
   * ID of the resource.
   * @param id id or {@code null} for none
   */
  public AppsDynamiteMessage setId(AppsDynamiteMessageId id) {
    this.id = id;
    return this;
  }

  /**
   * Output only. Indicates if the message is an inline reply. Set to true only if the message's
   * ParentPath is non-NULL. Currently, only inline replies have non-NULL ParentPath. See go/chat-
   * be-inline-reply-indicator.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsInlineReply() {
    return isInlineReply;
  }

  /**
   * Output only. Indicates if the message is an inline reply. Set to true only if the message's
   * ParentPath is non-NULL. Currently, only inline replies have non-NULL ParentPath. See go/chat-
   * be-inline-reply-indicator.
   * @param isInlineReply isInlineReply or {@code null} for none
   */
  public AppsDynamiteMessage setIsInlineReply(java.lang.Boolean isInlineReply) {
    this.isInlineReply = isInlineReply;
    return this;
  }

  /**
   * If the message was edited by a user, timestamp of the last edit, in microseconds.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLastEditTime() {
    return lastEditTime;
  }

  /**
   * If the message was edited by a user, timestamp of the last edit, in microseconds.
   * @param lastEditTime lastEditTime or {@code null} for none
   */
  public AppsDynamiteMessage setLastEditTime(java.lang.Long lastEditTime) {
    this.lastEditTime = lastEditTime;
    return this;
  }

  /**
   * Time when the Message text was last updated in microseconds.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLastUpdateTime() {
    return lastUpdateTime;
  }

  /**
   * Time when the Message text was last updated in microseconds.
   * @param lastUpdateTime lastUpdateTime or {@code null} for none
   */
  public AppsDynamiteMessage setLastUpdateTime(java.lang.Long lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

  /**
   * A unique id specified on the client side.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocalId() {
    return localId;
  }

  /**
   * A unique id specified on the client side.
   * @param localId localId or {@code null} for none
   */
  public AppsDynamiteMessage setLocalId(java.lang.String localId) {
    this.localId = localId;
    return this;
  }

  /**
   * An optional payload (restricted to 1P applications) that will be stored with this message. This
   * can only be set by the 1P API and should be used to deliver additional data such a 1P sync
   * version, 1P entity ID to the client for more advanced functionality [Eg. inform Group Tasks tab
   * of new version while linking, fetch & render a live Task/Meet call tile].
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedMessageIntegrationPayload getMessageIntegrationPayload() {
    return messageIntegrationPayload;
  }

  /**
   * An optional payload (restricted to 1P applications) that will be stored with this message. This
   * can only be set by the 1P API and should be used to deliver additional data such a 1P sync
   * version, 1P entity ID to the client for more advanced functionality [Eg. inform Group Tasks tab
   * of new version while linking, fetch & render a live Task/Meet call tile].
   * @param messageIntegrationPayload messageIntegrationPayload or {@code null} for none
   */
  public AppsDynamiteMessage setMessageIntegrationPayload(AppsDynamiteSharedMessageIntegrationPayload messageIntegrationPayload) {
    this.messageIntegrationPayload = messageIntegrationPayload;
    return this;
  }

  /**
   * Where the message was posted from
   * @return value or {@code null} for none
   */
  public java.lang.String getMessageOrigin() {
    return messageOrigin;
  }

  /**
   * Where the message was posted from
   * @param messageOrigin messageOrigin or {@code null} for none
   */
  public AppsDynamiteMessage setMessageOrigin(java.lang.String messageOrigin) {
    this.messageOrigin = messageOrigin;
    return this;
  }

  /**
   * State of the message, indicating whether the message is visible to all members in the group or
   * is only visible to the sender only, or the private_message_viewer if it is set.
   * @return value or {@code null} for none
   */
  public java.lang.String getMessageState() {
    return messageState;
  }

  /**
   * State of the message, indicating whether the message is visible to all members in the group or
   * is only visible to the sender only, or the private_message_viewer if it is set.
   * @param messageState messageState or {@code null} for none
   */
  public AppsDynamiteMessage setMessageState(java.lang.String messageState) {
    this.messageState = messageState;
    return this;
  }

  /**
   * Indicates if this message contains any suggestions that were provided by any Apps.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteSharedOriginAppSuggestion> getOriginAppSuggestions() {
    return originAppSuggestions;
  }

  /**
   * Indicates if this message contains any suggestions that were provided by any Apps.
   * @param originAppSuggestions originAppSuggestions or {@code null} for none
   */
  public AppsDynamiteMessage setOriginAppSuggestions(java.util.List<AppsDynamiteSharedOriginAppSuggestion> originAppSuggestions) {
    this.originAppSuggestions = originAppSuggestions;
    return this;
  }

  /**
   * Personal labels associated with a message for the viewing user. Order of entries is arbitrary
   * and will not list duplicates of the same label_id. See go/chat-labels-design for details. NOTE:
   * This will be unpopulated in the case of SpaceChangelog events.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteBackendLabelsPersonalLabelTag> getPersonalLabels() {
    return personalLabels;
  }

  /**
   * Personal labels associated with a message for the viewing user. Order of entries is arbitrary
   * and will not list duplicates of the same label_id. See go/chat-labels-design for details. NOTE:
   * This will be unpopulated in the case of SpaceChangelog events.
   * @param personalLabels personalLabels or {@code null} for none
   */
  public AppsDynamiteMessage setPersonalLabels(java.util.List<AppsDynamiteBackendLabelsPersonalLabelTag> personalLabels) {
    this.personalLabels = personalLabels;
    return this;
  }

  /**
   * A list of per-user private information. This is deprecated, because we no longer plan to
   * support partially private messages or private messages for multiple users. The message_state
   * and private_message_viewer fields should be sufficient for this infrastructure.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamitePrivateMessageInfo> getPrivateMessageInfos() {
    return privateMessageInfos;
  }

  /**
   * A list of per-user private information. This is deprecated, because we no longer plan to
   * support partially private messages or private messages for multiple users. The message_state
   * and private_message_viewer fields should be sufficient for this infrastructure.
   * @param privateMessageInfos privateMessageInfos or {@code null} for none
   */
  public AppsDynamiteMessage setPrivateMessageInfos(java.util.List<AppsDynamitePrivateMessageInfo> privateMessageInfos) {
    this.privateMessageInfos = privateMessageInfos;
    return this;
  }

  /**
   * Should only be set if the Message State is PRIVATE. If set, the message content is only visible
   * to this user (and any apps associated with the message), as well as the message creator. If
   * unset, a private message is visible to the message creator only.
   * @return value or {@code null} for none
   */
  public AppsDynamiteUserId getPrivateMessageViewer() {
    return privateMessageViewer;
  }

  /**
   * Should only be set if the Message State is PRIVATE. If set, the message content is only visible
   * to this user (and any apps associated with the message), as well as the message creator. If
   * unset, a private message is visible to the message creator only.
   * @param privateMessageViewer privateMessageViewer or {@code null} for none
   */
  public AppsDynamiteMessage setPrivateMessageViewer(AppsDynamiteUserId privateMessageViewer) {
    this.privateMessageViewer = privateMessageViewer;
    return this;
  }

  /**
   * Contains additional (currently Hangouts Classic only) properties applicable to this message.
   * @return value or {@code null} for none
   */
  public AppsDynamiteMessageProps getProps() {
    return props;
  }

  /**
   * Contains additional (currently Hangouts Classic only) properties applicable to this message.
   * @param props props or {@code null} for none
   */
  public AppsDynamiteMessage setProps(AppsDynamiteMessageProps props) {
    this.props = props;
    return this;
  }

  /**
   * Output only. Whether this message has been quoted by another message or not. Used by clients to
   * handle message edit flows for messages that have been quoted.
   * @return value or {@code null} for none
   */
  public java.lang.String getQuotedByState() {
    return quotedByState;
  }

  /**
   * Output only. Whether this message has been quoted by another message or not. Used by clients to
   * handle message edit flows for messages that have been quoted.
   * @param quotedByState quotedByState or {@code null} for none
   */
  public AppsDynamiteMessage setQuotedByState(java.lang.String quotedByState) {
    this.quotedByState = quotedByState;
    return this;
  }

  /**
   * Output only. Metadata for a message that is quoted by this message.
   * @return value or {@code null} for none
   */
  public AppsDynamiteQuotedMessageMetadata getQuotedMessageMetadata() {
    return quotedMessageMetadata;
  }

  /**
   * Output only. Metadata for a message that is quoted by this message.
   * @param quotedMessageMetadata quotedMessageMetadata or {@code null} for none
   */
  public AppsDynamiteMessage setQuotedMessageMetadata(AppsDynamiteQuotedMessageMetadata quotedMessageMetadata) {
    this.quotedMessageMetadata = quotedMessageMetadata;
    return this;
  }

  /**
   * A list of user reactions to this message. Ordered by the timestamp of the first reaction,
   * ascending (oldest to newest).
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteSharedReaction> getReactions() {
    return reactions;
  }

  /**
   * A list of user reactions to this message. Ordered by the timestamp of the first reaction,
   * ascending (oldest to newest).
   * @param reactions reactions or {@code null} for none
   */
  public AppsDynamiteMessage setReactions(java.util.List<AppsDynamiteSharedReaction> reactions) {
    this.reactions = reactions;
    return this;
  }

  /**
   * Output only. Details of content reports. Set only when the request asks for it.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteContentReport> getReports() {
    return reports;
  }

  /**
   * Output only. Details of content reports. Set only when the request asks for it.
   * @param reports reports or {@code null} for none
   */
  public AppsDynamiteMessage setReports(java.util.List<AppsDynamiteContentReport> reports) {
    this.reports = reports;
    return this;
  }

  /**
   * The retention settings of the message.
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedRetentionSettings getRetentionSettings() {
    return retentionSettings;
  }

  /**
   * The retention settings of the message.
   * @param retentionSettings retentionSettings or {@code null} for none
   */
  public AppsDynamiteMessage setRetentionSettings(AppsDynamiteSharedRetentionSettings retentionSettings) {
    this.retentionSettings = retentionSettings;
    return this;
  }

  /**
   * A client-specified string that can be used to uniquely identify a message in a space, in lieu
   * of `id.message_id`.
   * @return value or {@code null} for none
   */
  public java.lang.String getSecondaryMessageKey() {
    return secondaryMessageKey;
  }

  /**
   * A client-specified string that can be used to uniquely identify a message in a space, in lieu
   * of `id.message_id`.
   * @param secondaryMessageKey secondaryMessageKey or {@code null} for none
   */
  public AppsDynamiteMessage setSecondaryMessageKey(java.lang.String secondaryMessageKey) {
    this.secondaryMessageKey = secondaryMessageKey;
    return this;
  }

  /**
   * Plaintext body of the Message.
   * @return value or {@code null} for none
   */
  public java.lang.String getTextBody() {
    return textBody;
  }

  /**
   * Plaintext body of the Message.
   * @param textBody textBody or {@code null} for none
   */
  public AppsDynamiteMessage setTextBody(java.lang.String textBody) {
    this.textBody = textBody;
    return this;
  }

  /**
   * Information for the stoning of a Message.
   * @return value or {@code null} for none
   */
  public AppsDynamiteTombstoneMetadata getTombstoneMetadata() {
    return tombstoneMetadata;
  }

  /**
   * Information for the stoning of a Message.
   * @param tombstoneMetadata tombstoneMetadata or {@code null} for none
   */
  public AppsDynamiteMessage setTombstoneMetadata(AppsDynamiteTombstoneMetadata tombstoneMetadata) {
    this.tombstoneMetadata = tombstoneMetadata;
    return this;
  }

  /**
   * ID of the User who last updated (created/edited/deleted) the Message. This includes information
   * to identify if this was updated by an App on behalf of a user.
   * @return value or {@code null} for none
   */
  public AppsDynamiteUserId getUpdaterId() {
    return updaterId;
  }

  /**
   * ID of the User who last updated (created/edited/deleted) the Message. This includes information
   * to identify if this was updated by an App on behalf of a user.
   * @param updaterId updaterId or {@code null} for none
   */
  public AppsDynamiteMessage setUpdaterId(AppsDynamiteUserId updaterId) {
    this.updaterId = updaterId;
    return this;
  }

  /**
   * UploadMetadata b/36864213 is an ongoing effort to move UploadMetadata out of annotations field
   * and save it to upload_metadata field only. After the migration, UploadMetadata will only be
   * saved in this field.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteUploadMetadata> getUploadMetadata() {
    return uploadMetadata;
  }

  /**
   * UploadMetadata b/36864213 is an ongoing effort to move UploadMetadata out of annotations field
   * and save it to upload_metadata field only. After the migration, UploadMetadata will only be
   * saved in this field.
   * @param uploadMetadata uploadMetadata or {@code null} for none
   */
  public AppsDynamiteMessage setUploadMetadata(java.util.List<AppsDynamiteUploadMetadata> uploadMetadata) {
    this.uploadMetadata = uploadMetadata;
    return this;
  }

  @Override
  public AppsDynamiteMessage set(String fieldName, Object value) {
    return (AppsDynamiteMessage) super.set(fieldName, value);
  }

  @Override
  public AppsDynamiteMessage clone() {
    return (AppsDynamiteMessage) super.clone();
  }

}
