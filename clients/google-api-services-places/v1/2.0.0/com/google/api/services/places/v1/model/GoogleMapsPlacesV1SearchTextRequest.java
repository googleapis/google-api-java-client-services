/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Request proto for SearchText.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1SearchTextRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Set the searchable EV options of a place search request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1SearchTextRequestEVOptions evOptions;

  /**
   * Optional. Include pure service area businesses if the field is set to true. Pure service area
   * business is a business that visits or delivers to customers directly but does not serve
   * customers at their business address. For example, businesses like cleaning services or
   * plumbers. Those businesses do not have a physical address or location on Google Maps. Places
   * will not return fields including `location`, `plus_code`, and other location related fields for
   * these businesses.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean includePureServiceAreaBusinesses;

  /**
   * The requested place type. Full list of types supported:
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Only support
   * one included type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String includedType;

  /**
   * Place details will be displayed with the preferred language if available. If the language code
   * is unspecified or unrecognized, place details of any language may be returned, with a
   * preference for English if such details exist. Current list of supported languages:
   * https://developers.google.com/maps/faq#languagesupport.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * The region to search. This location serves as a bias which means results around given location
   * might be returned. Cannot be set along with location_restriction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1SearchTextRequestLocationBias locationBias;

  /**
   * The region to search. This location serves as a restriction which means results outside given
   * location will not be returned. Cannot be set along with location_bias.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1SearchTextRequestLocationRestriction locationRestriction;

  /**
   * Deprecated: Use `page_size` instead. The maximum number of results per page that can be
   * returned. If the number of available results is larger than `max_result_count`, a
   * `next_page_token` is returned which can be passed to `page_token` to get the next page of
   * results in subsequent requests. If 0 or no value is provided, a default of 20 is used. The
   * maximum value is 20; values above 20 will be coerced to 20. Negative values will return an
   * INVALID_ARGUMENT error. If both `max_result_count` and `page_size` are specified,
   * `max_result_count` will be ignored.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxResultCount;

  /**
   * Filter out results whose average user rating is strictly less than this limit. A valid value
   * must be a float between 0 and 5 (inclusively) at a 0.5 cadence i.e. [0, 0.5, 1.0, ... , 5.0]
   * inclusively. The input rating will round up to the nearest 0.5(ceiling). For instance, a rating
   * of 0.6 will eliminate all results with a less than 1.0 rating.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double minRating;

  /**
   * Used to restrict the search to places that are currently open. The default is false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean openNow;

  /**
   * Optional. The maximum number of results per page that can be returned. If the number of
   * available results is larger than `page_size`, a `next_page_token` is returned which can be
   * passed to `page_token` to get the next page of results in subsequent requests. If 0 or no value
   * is provided, a default of 20 is used. The maximum value is 20; values above 20 will be set to
   * 20. Negative values will return an INVALID_ARGUMENT error. If both `max_result_count` and
   * `page_size` are specified, `max_result_count` will be ignored.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer pageSize;

  /**
   * Optional. A page token, received from a previous TextSearch call. Provide this to retrieve the
   * subsequent page. When paginating, all parameters other than `page_token`, `page_size`, and
   * `max_result_count` provided to TextSearch must match the initial call that provided the page
   * token. Otherwise an INVALID_ARGUMENT error is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pageToken;

  /**
   * Used to restrict the search to places that are marked as certain price levels. Users can choose
   * any combinations of price levels. Default to select all price levels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> priceLevels;

  /**
   * How results will be ranked in the response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rankPreference;

  /**
   * The Unicode country/region code (CLDR) of the location where the request is coming from. This
   * parameter is used to display the place details, like region-specific place name, if available.
   * The parameter can affect results based on applicable law. For more information, see
   * https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
   * Note that 3-digit region codes are not currently supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * Optional. Additional parameters for routing to results.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1RoutingParameters routingParameters;

  /**
   * Optional. Additional parameters proto for searching along a route.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1SearchTextRequestSearchAlongRouteParameters searchAlongRouteParameters;

  /**
   * Used to set strict type filtering for included_type. If set to true, only results of the same
   * type will be returned. Default to false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean strictTypeFiltering;

  /**
   * Required. The text query for textual search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String textQuery;

  /**
   * Optional. Set the searchable EV options of a place search request.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequestEVOptions getEvOptions() {
    return evOptions;
  }

  /**
   * Optional. Set the searchable EV options of a place search request.
   * @param evOptions evOptions or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setEvOptions(GoogleMapsPlacesV1SearchTextRequestEVOptions evOptions) {
    this.evOptions = evOptions;
    return this;
  }

  /**
   * Optional. Include pure service area businesses if the field is set to true. Pure service area
   * business is a business that visits or delivers to customers directly but does not serve
   * customers at their business address. For example, businesses like cleaning services or
   * plumbers. Those businesses do not have a physical address or location on Google Maps. Places
   * will not return fields including `location`, `plus_code`, and other location related fields for
   * these businesses.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIncludePureServiceAreaBusinesses() {
    return includePureServiceAreaBusinesses;
  }

  /**
   * Optional. Include pure service area businesses if the field is set to true. Pure service area
   * business is a business that visits or delivers to customers directly but does not serve
   * customers at their business address. For example, businesses like cleaning services or
   * plumbers. Those businesses do not have a physical address or location on Google Maps. Places
   * will not return fields including `location`, `plus_code`, and other location related fields for
   * these businesses.
   * @param includePureServiceAreaBusinesses includePureServiceAreaBusinesses or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setIncludePureServiceAreaBusinesses(java.lang.Boolean includePureServiceAreaBusinesses) {
    this.includePureServiceAreaBusinesses = includePureServiceAreaBusinesses;
    return this;
  }

  /**
   * The requested place type. Full list of types supported:
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Only support
   * one included type.
   * @return value or {@code null} for none
   */
  public java.lang.String getIncludedType() {
    return includedType;
  }

  /**
   * The requested place type. Full list of types supported:
   * https://developers.google.com/maps/documentation/places/web-service/place-types. Only support
   * one included type.
   * @param includedType includedType or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setIncludedType(java.lang.String includedType) {
    this.includedType = includedType;
    return this;
  }

  /**
   * Place details will be displayed with the preferred language if available. If the language code
   * is unspecified or unrecognized, place details of any language may be returned, with a
   * preference for English if such details exist. Current list of supported languages:
   * https://developers.google.com/maps/faq#languagesupport.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * Place details will be displayed with the preferred language if available. If the language code
   * is unspecified or unrecognized, place details of any language may be returned, with a
   * preference for English if such details exist. Current list of supported languages:
   * https://developers.google.com/maps/faq#languagesupport.
   * @param languageCode languageCode or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The region to search. This location serves as a bias which means results around given location
   * might be returned. Cannot be set along with location_restriction.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequestLocationBias getLocationBias() {
    return locationBias;
  }

  /**
   * The region to search. This location serves as a bias which means results around given location
   * might be returned. Cannot be set along with location_restriction.
   * @param locationBias locationBias or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setLocationBias(GoogleMapsPlacesV1SearchTextRequestLocationBias locationBias) {
    this.locationBias = locationBias;
    return this;
  }

  /**
   * The region to search. This location serves as a restriction which means results outside given
   * location will not be returned. Cannot be set along with location_bias.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequestLocationRestriction getLocationRestriction() {
    return locationRestriction;
  }

  /**
   * The region to search. This location serves as a restriction which means results outside given
   * location will not be returned. Cannot be set along with location_bias.
   * @param locationRestriction locationRestriction or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setLocationRestriction(GoogleMapsPlacesV1SearchTextRequestLocationRestriction locationRestriction) {
    this.locationRestriction = locationRestriction;
    return this;
  }

  /**
   * Deprecated: Use `page_size` instead. The maximum number of results per page that can be
   * returned. If the number of available results is larger than `max_result_count`, a
   * `next_page_token` is returned which can be passed to `page_token` to get the next page of
   * results in subsequent requests. If 0 or no value is provided, a default of 20 is used. The
   * maximum value is 20; values above 20 will be coerced to 20. Negative values will return an
   * INVALID_ARGUMENT error. If both `max_result_count` and `page_size` are specified,
   * `max_result_count` will be ignored.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxResultCount() {
    return maxResultCount;
  }

  /**
   * Deprecated: Use `page_size` instead. The maximum number of results per page that can be
   * returned. If the number of available results is larger than `max_result_count`, a
   * `next_page_token` is returned which can be passed to `page_token` to get the next page of
   * results in subsequent requests. If 0 or no value is provided, a default of 20 is used. The
   * maximum value is 20; values above 20 will be coerced to 20. Negative values will return an
   * INVALID_ARGUMENT error. If both `max_result_count` and `page_size` are specified,
   * `max_result_count` will be ignored.
   * @param maxResultCount maxResultCount or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setMaxResultCount(java.lang.Integer maxResultCount) {
    this.maxResultCount = maxResultCount;
    return this;
  }

  /**
   * Filter out results whose average user rating is strictly less than this limit. A valid value
   * must be a float between 0 and 5 (inclusively) at a 0.5 cadence i.e. [0, 0.5, 1.0, ... , 5.0]
   * inclusively. The input rating will round up to the nearest 0.5(ceiling). For instance, a rating
   * of 0.6 will eliminate all results with a less than 1.0 rating.
   * @return value or {@code null} for none
   */
  public java.lang.Double getMinRating() {
    return minRating;
  }

  /**
   * Filter out results whose average user rating is strictly less than this limit. A valid value
   * must be a float between 0 and 5 (inclusively) at a 0.5 cadence i.e. [0, 0.5, 1.0, ... , 5.0]
   * inclusively. The input rating will round up to the nearest 0.5(ceiling). For instance, a rating
   * of 0.6 will eliminate all results with a less than 1.0 rating.
   * @param minRating minRating or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setMinRating(java.lang.Double minRating) {
    this.minRating = minRating;
    return this;
  }

  /**
   * Used to restrict the search to places that are currently open. The default is false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOpenNow() {
    return openNow;
  }

  /**
   * Used to restrict the search to places that are currently open. The default is false.
   * @param openNow openNow or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setOpenNow(java.lang.Boolean openNow) {
    this.openNow = openNow;
    return this;
  }

  /**
   * Optional. The maximum number of results per page that can be returned. If the number of
   * available results is larger than `page_size`, a `next_page_token` is returned which can be
   * passed to `page_token` to get the next page of results in subsequent requests. If 0 or no value
   * is provided, a default of 20 is used. The maximum value is 20; values above 20 will be set to
   * 20. Negative values will return an INVALID_ARGUMENT error. If both `max_result_count` and
   * `page_size` are specified, `max_result_count` will be ignored.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPageSize() {
    return pageSize;
  }

  /**
   * Optional. The maximum number of results per page that can be returned. If the number of
   * available results is larger than `page_size`, a `next_page_token` is returned which can be
   * passed to `page_token` to get the next page of results in subsequent requests. If 0 or no value
   * is provided, a default of 20 is used. The maximum value is 20; values above 20 will be set to
   * 20. Negative values will return an INVALID_ARGUMENT error. If both `max_result_count` and
   * `page_size` are specified, `max_result_count` will be ignored.
   * @param pageSize pageSize or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setPageSize(java.lang.Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Optional. A page token, received from a previous TextSearch call. Provide this to retrieve the
   * subsequent page. When paginating, all parameters other than `page_token`, `page_size`, and
   * `max_result_count` provided to TextSearch must match the initial call that provided the page
   * token. Otherwise an INVALID_ARGUMENT error is returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getPageToken() {
    return pageToken;
  }

  /**
   * Optional. A page token, received from a previous TextSearch call. Provide this to retrieve the
   * subsequent page. When paginating, all parameters other than `page_token`, `page_size`, and
   * `max_result_count` provided to TextSearch must match the initial call that provided the page
   * token. Otherwise an INVALID_ARGUMENT error is returned.
   * @param pageToken pageToken or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setPageToken(java.lang.String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * Used to restrict the search to places that are marked as certain price levels. Users can choose
   * any combinations of price levels. Default to select all price levels.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPriceLevels() {
    return priceLevels;
  }

  /**
   * Used to restrict the search to places that are marked as certain price levels. Users can choose
   * any combinations of price levels. Default to select all price levels.
   * @param priceLevels priceLevels or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setPriceLevels(java.util.List<java.lang.String> priceLevels) {
    this.priceLevels = priceLevels;
    return this;
  }

  /**
   * How results will be ranked in the response.
   * @return value or {@code null} for none
   */
  public java.lang.String getRankPreference() {
    return rankPreference;
  }

  /**
   * How results will be ranked in the response.
   * @param rankPreference rankPreference or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setRankPreference(java.lang.String rankPreference) {
    this.rankPreference = rankPreference;
    return this;
  }

  /**
   * The Unicode country/region code (CLDR) of the location where the request is coming from. This
   * parameter is used to display the place details, like region-specific place name, if available.
   * The parameter can affect results based on applicable law. For more information, see
   * https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
   * Note that 3-digit region codes are not currently supported.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * The Unicode country/region code (CLDR) of the location where the request is coming from. This
   * parameter is used to display the place details, like region-specific place name, if available.
   * The parameter can affect results based on applicable law. For more information, see
   * https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
   * Note that 3-digit region codes are not currently supported.
   * @param regionCode regionCode or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * Optional. Additional parameters for routing to results.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1RoutingParameters getRoutingParameters() {
    return routingParameters;
  }

  /**
   * Optional. Additional parameters for routing to results.
   * @param routingParameters routingParameters or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setRoutingParameters(GoogleMapsPlacesV1RoutingParameters routingParameters) {
    this.routingParameters = routingParameters;
    return this;
  }

  /**
   * Optional. Additional parameters proto for searching along a route.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequestSearchAlongRouteParameters getSearchAlongRouteParameters() {
    return searchAlongRouteParameters;
  }

  /**
   * Optional. Additional parameters proto for searching along a route.
   * @param searchAlongRouteParameters searchAlongRouteParameters or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setSearchAlongRouteParameters(GoogleMapsPlacesV1SearchTextRequestSearchAlongRouteParameters searchAlongRouteParameters) {
    this.searchAlongRouteParameters = searchAlongRouteParameters;
    return this;
  }

  /**
   * Used to set strict type filtering for included_type. If set to true, only results of the same
   * type will be returned. Default to false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getStrictTypeFiltering() {
    return strictTypeFiltering;
  }

  /**
   * Used to set strict type filtering for included_type. If set to true, only results of the same
   * type will be returned. Default to false.
   * @param strictTypeFiltering strictTypeFiltering or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setStrictTypeFiltering(java.lang.Boolean strictTypeFiltering) {
    this.strictTypeFiltering = strictTypeFiltering;
    return this;
  }

  /**
   * Required. The text query for textual search.
   * @return value or {@code null} for none
   */
  public java.lang.String getTextQuery() {
    return textQuery;
  }

  /**
   * Required. The text query for textual search.
   * @param textQuery textQuery or {@code null} for none
   */
  public GoogleMapsPlacesV1SearchTextRequest setTextQuery(java.lang.String textQuery) {
    this.textQuery = textQuery;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1SearchTextRequest set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1SearchTextRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1SearchTextRequest clone() {
    return (GoogleMapsPlacesV1SearchTextRequest) super.clone();
  }

}
