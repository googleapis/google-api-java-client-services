/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * A memory.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1Memory extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Timestamp when this Memory was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Description of the Memory.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. Input only. If true, no revision will be created for this request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disableMemoryRevisions;

  /**
   * Optional. Display name of the Memory.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Optional. Timestamp of when this resource is considered expired. This is *always* provided on
   * output when `expiration` is set on input, regardless of whether `expire_time` or `ttl` was
   * provided.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expireTime;

  /**
   * Required. Semantic knowledge extracted from the source content.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fact;

  /**
   * Identifier. The resource name of the Memory. Format:
   * `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}/memories/{memory}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. Input only. Timestamp of when the revision is considered expired. If not set, the
   * memory revision will be kept until manually deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String revisionExpireTime;

  /**
   * Optional. Input only. The TTL for the revision. The expiration time is computed: now + TTL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String revisionTtl;

  /**
   * Required. Immutable. The scope of the Memory. Memories are isolated within their scope. The
   * scope is defined when creating or generating memories. Scope values cannot contain the wildcard
   * character '*'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> scope;

  /**
   * Optional. Input only. The TTL for this resource. The expiration time is computed: now + TTL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String ttl;

  /**
   * Output only. Timestamp when this Memory was most recently updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Timestamp when this Memory was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp when this Memory was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Description of the Memory.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description of the Memory.
   * @param description description or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Input only. If true, no revision will be created for this request.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisableMemoryRevisions() {
    return disableMemoryRevisions;
  }

  /**
   * Optional. Input only. If true, no revision will be created for this request.
   * @param disableMemoryRevisions disableMemoryRevisions or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setDisableMemoryRevisions(java.lang.Boolean disableMemoryRevisions) {
    this.disableMemoryRevisions = disableMemoryRevisions;
    return this;
  }

  /**
   * Optional. Display name of the Memory.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Optional. Display name of the Memory.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. Timestamp of when this resource is considered expired. This is *always* provided on
   * output when `expiration` is set on input, regardless of whether `expire_time` or `ttl` was
   * provided.
   * @return value or {@code null} for none
   */
  public String getExpireTime() {
    return expireTime;
  }

  /**
   * Optional. Timestamp of when this resource is considered expired. This is *always* provided on
   * output when `expiration` is set on input, regardless of whether `expire_time` or `ttl` was
   * provided.
   * @param expireTime expireTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setExpireTime(String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * Required. Semantic knowledge extracted from the source content.
   * @return value or {@code null} for none
   */
  public java.lang.String getFact() {
    return fact;
  }

  /**
   * Required. Semantic knowledge extracted from the source content.
   * @param fact fact or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setFact(java.lang.String fact) {
    this.fact = fact;
    return this;
  }

  /**
   * Identifier. The resource name of the Memory. Format:
   * `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}/memories/{memory}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the Memory. Format:
   * `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}/memories/{memory}`
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. Input only. Timestamp of when the revision is considered expired. If not set, the
   * memory revision will be kept until manually deleted.
   * @return value or {@code null} for none
   */
  public String getRevisionExpireTime() {
    return revisionExpireTime;
  }

  /**
   * Optional. Input only. Timestamp of when the revision is considered expired. If not set, the
   * memory revision will be kept until manually deleted.
   * @param revisionExpireTime revisionExpireTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setRevisionExpireTime(String revisionExpireTime) {
    this.revisionExpireTime = revisionExpireTime;
    return this;
  }

  /**
   * Optional. Input only. The TTL for the revision. The expiration time is computed: now + TTL.
   * @return value or {@code null} for none
   */
  public String getRevisionTtl() {
    return revisionTtl;
  }

  /**
   * Optional. Input only. The TTL for the revision. The expiration time is computed: now + TTL.
   * @param revisionTtl revisionTtl or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setRevisionTtl(String revisionTtl) {
    this.revisionTtl = revisionTtl;
    return this;
  }

  /**
   * Required. Immutable. The scope of the Memory. Memories are isolated within their scope. The
   * scope is defined when creating or generating memories. Scope values cannot contain the wildcard
   * character '*'.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getScope() {
    return scope;
  }

  /**
   * Required. Immutable. The scope of the Memory. Memories are isolated within their scope. The
   * scope is defined when creating or generating memories. Scope values cannot contain the wildcard
   * character '*'.
   * @param scope scope or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setScope(java.util.Map<String, java.lang.String> scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Optional. Input only. The TTL for this resource. The expiration time is computed: now + TTL.
   * @return value or {@code null} for none
   */
  public String getTtl() {
    return ttl;
  }

  /**
   * Optional. Input only. The TTL for this resource. The expiration time is computed: now + TTL.
   * @param ttl ttl or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setTtl(String ttl) {
    this.ttl = ttl;
    return this;
  }

  /**
   * Output only. Timestamp when this Memory was most recently updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp when this Memory was most recently updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Memory setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1Memory set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1Memory) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1Memory clone() {
    return (GoogleCloudAiplatformV1beta1Memory) super.clone();
  }

}
