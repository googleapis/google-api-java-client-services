/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securesourcemanager.v1.model;

/**
 * Metadata of a PullRequest. PullRequest is the request from a user to merge a branch (head) into
 * another branch (base).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Secure Source Manager API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PullRequest extends com.google.api.client.json.GenericJson {

  /**
   * Required. The branch to merge changes in.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Branch base;

  /**
   * Optional. The pull request body. Provides a detailed description of the changes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String body;

  /**
   * Output only. Close timestamp (if closed or merged). Cleared when pull request is re-opened.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String closeTime;

  /**
   * Output only. Creation timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Immutable. The branch containing the changes to be merged.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Branch head;

  /**
   * Output only. A unique identifier for a PullRequest. The number appended at the end is generated
   * by the server. Format: `projects/{project}/locations/{location}/repositories/{repository}/pullR
   * equests/{pull_request_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. State of the pull request (open, closed or merged).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Required. The pull request title.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Output only. Last updated timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. The branch to merge changes in.
   * @return value or {@code null} for none
   */
  public Branch getBase() {
    return base;
  }

  /**
   * Required. The branch to merge changes in.
   * @param base base or {@code null} for none
   */
  public PullRequest setBase(Branch base) {
    this.base = base;
    return this;
  }

  /**
   * Optional. The pull request body. Provides a detailed description of the changes.
   * @return value or {@code null} for none
   */
  public java.lang.String getBody() {
    return body;
  }

  /**
   * Optional. The pull request body. Provides a detailed description of the changes.
   * @param body body or {@code null} for none
   */
  public PullRequest setBody(java.lang.String body) {
    this.body = body;
    return this;
  }

  /**
   * Output only. Close timestamp (if closed or merged). Cleared when pull request is re-opened.
   * @return value or {@code null} for none
   */
  public String getCloseTime() {
    return closeTime;
  }

  /**
   * Output only. Close timestamp (if closed or merged). Cleared when pull request is re-opened.
   * @param closeTime closeTime or {@code null} for none
   */
  public PullRequest setCloseTime(String closeTime) {
    this.closeTime = closeTime;
    return this;
  }

  /**
   * Output only. Creation timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Creation timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public PullRequest setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Immutable. The branch containing the changes to be merged.
   * @return value or {@code null} for none
   */
  public Branch getHead() {
    return head;
  }

  /**
   * Immutable. The branch containing the changes to be merged.
   * @param head head or {@code null} for none
   */
  public PullRequest setHead(Branch head) {
    this.head = head;
    return this;
  }

  /**
   * Output only. A unique identifier for a PullRequest. The number appended at the end is generated
   * by the server. Format: `projects/{project}/locations/{location}/repositories/{repository}/pullR
   * equests/{pull_request_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. A unique identifier for a PullRequest. The number appended at the end is generated
   * by the server. Format: `projects/{project}/locations/{location}/repositories/{repository}/pullR
   * equests/{pull_request_id}`
   * @param name name or {@code null} for none
   */
  public PullRequest setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. State of the pull request (open, closed or merged).
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. State of the pull request (open, closed or merged).
   * @param state state or {@code null} for none
   */
  public PullRequest setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Required. The pull request title.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Required. The pull request title.
   * @param title title or {@code null} for none
   */
  public PullRequest setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Output only. Last updated timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Last updated timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public PullRequest setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public PullRequest set(String fieldName, Object value) {
    return (PullRequest) super.set(fieldName, value);
  }

  @Override
  public PullRequest clone() {
    return (PullRequest) super.clone();
  }

}
