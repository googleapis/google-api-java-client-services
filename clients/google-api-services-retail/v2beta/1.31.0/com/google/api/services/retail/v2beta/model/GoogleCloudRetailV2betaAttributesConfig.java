/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.retail.v2beta.model;

/**
 * Catalog level attribute config.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Retail API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRetailV2betaAttributesConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The AttributeConfigLevel used for this catalog.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String attributeConfigLevel;

  /**
   * Enable attribute(s) config at catalog level. For example, indexable, dynamic_facetable, or
   * searchable for each attribute. The key is catalog attribute's name. For example: `color`,
   * `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number of
   * catalog attributes allowed in a request is 1000.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, GoogleCloudRetailV2betaCatalogAttribute> catalogAttributes;

  /**
   * Required. Immutable. The fully qualified resource name of the attribute config. Format:
   * "projects/locations/catalogs/attributesConfig"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The AttributeConfigLevel used for this catalog.
   * @return value or {@code null} for none
   */
  public java.lang.String getAttributeConfigLevel() {
    return attributeConfigLevel;
  }

  /**
   * Output only. The AttributeConfigLevel used for this catalog.
   * @param attributeConfigLevel attributeConfigLevel or {@code null} for none
   */
  public GoogleCloudRetailV2betaAttributesConfig setAttributeConfigLevel(java.lang.String attributeConfigLevel) {
    this.attributeConfigLevel = attributeConfigLevel;
    return this;
  }

  /**
   * Enable attribute(s) config at catalog level. For example, indexable, dynamic_facetable, or
   * searchable for each attribute. The key is catalog attribute's name. For example: `color`,
   * `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number of
   * catalog attributes allowed in a request is 1000.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, GoogleCloudRetailV2betaCatalogAttribute> getCatalogAttributes() {
    return catalogAttributes;
  }

  /**
   * Enable attribute(s) config at catalog level. For example, indexable, dynamic_facetable, or
   * searchable for each attribute. The key is catalog attribute's name. For example: `color`,
   * `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number of
   * catalog attributes allowed in a request is 1000.
   * @param catalogAttributes catalogAttributes or {@code null} for none
   */
  public GoogleCloudRetailV2betaAttributesConfig setCatalogAttributes(java.util.Map<String, GoogleCloudRetailV2betaCatalogAttribute> catalogAttributes) {
    this.catalogAttributes = catalogAttributes;
    return this;
  }

  /**
   * Required. Immutable. The fully qualified resource name of the attribute config. Format:
   * "projects/locations/catalogs/attributesConfig"
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. Immutable. The fully qualified resource name of the attribute config. Format:
   * "projects/locations/catalogs/attributesConfig"
   * @param name name or {@code null} for none
   */
  public GoogleCloudRetailV2betaAttributesConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public GoogleCloudRetailV2betaAttributesConfig set(String fieldName, Object value) {
    return (GoogleCloudRetailV2betaAttributesConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRetailV2betaAttributesConfig clone() {
    return (GoogleCloudRetailV2betaAttributesConfig) super.clone();
  }

}
