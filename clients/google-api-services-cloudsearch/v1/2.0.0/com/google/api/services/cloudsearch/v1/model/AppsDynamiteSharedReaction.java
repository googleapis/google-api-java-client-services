/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Model definition for AppsDynamiteSharedReaction.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsDynamiteSharedReaction extends com.google.api.client.json.GenericJson {

  /**
   * The total number of users who have reacted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer count;

  /**
   * When the first emoji of this type was added.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long createTimestamp;

  /**
   * Whether the current user reacted using this emoji. Note: Unlike most properties of messages,
   * this is different per-user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean currentUserParticipated;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedEmoji emoji;

  /**
   * The total number of users who have reacted.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * The total number of users who have reacted.
   * @param count count or {@code null} for none
   */
  public AppsDynamiteSharedReaction setCount(java.lang.Integer count) {
    this.count = count;
    return this;
  }

  /**
   * When the first emoji of this type was added.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCreateTimestamp() {
    return createTimestamp;
  }

  /**
   * When the first emoji of this type was added.
   * @param createTimestamp createTimestamp or {@code null} for none
   */
  public AppsDynamiteSharedReaction setCreateTimestamp(java.lang.Long createTimestamp) {
    this.createTimestamp = createTimestamp;
    return this;
  }

  /**
   * Whether the current user reacted using this emoji. Note: Unlike most properties of messages,
   * this is different per-user.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCurrentUserParticipated() {
    return currentUserParticipated;
  }

  /**
   * Whether the current user reacted using this emoji. Note: Unlike most properties of messages,
   * this is different per-user.
   * @param currentUserParticipated currentUserParticipated or {@code null} for none
   */
  public AppsDynamiteSharedReaction setCurrentUserParticipated(java.lang.Boolean currentUserParticipated) {
    this.currentUserParticipated = currentUserParticipated;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedEmoji getEmoji() {
    return emoji;
  }

  /**
   * @param emoji emoji or {@code null} for none
   */
  public AppsDynamiteSharedReaction setEmoji(AppsDynamiteSharedEmoji emoji) {
    this.emoji = emoji;
    return this;
  }

  @Override
  public AppsDynamiteSharedReaction set(String fieldName, Object value) {
    return (AppsDynamiteSharedReaction) super.set(fieldName, value);
  }

  @Override
  public AppsDynamiteSharedReaction clone() {
    return (AppsDynamiteSharedReaction) super.clone();
  }

}
