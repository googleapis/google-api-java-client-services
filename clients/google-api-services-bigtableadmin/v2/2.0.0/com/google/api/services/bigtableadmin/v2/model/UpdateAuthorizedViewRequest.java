/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.bigtableadmin.v2.model;

/**
 * The request for UpdateAuthorizedView.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Bigtable Admin API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UpdateAuthorizedViewRequest extends com.google.api.client.json.GenericJson {

  /**
   * Required. The AuthorizedView to update. The `name` in `authorized_view` is used to identify the
   * AuthorizedView. AuthorizedView name must in this format:
   * `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AuthorizedView authorizedView;

  /**
   * Optional. If true, ignore the safety checks when updating the AuthorizedView.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean ignoreWarnings;

  /**
   * Optional. The list of fields to update. A mask specifying which fields in the AuthorizedView
   * resource should be updated. This mask is relative to the AuthorizedView resource, not to the
   * request message. A field will be overwritten if it is in the mask. If empty, all fields set in
   * the request will be overwritten. A special value `*` means to overwrite all fields (including
   * fields not set in the request).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateMask;

  /**
   * Required. The AuthorizedView to update. The `name` in `authorized_view` is used to identify the
   * AuthorizedView. AuthorizedView name must in this format:
   * `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`.
   * @return value or {@code null} for none
   */
  public AuthorizedView getAuthorizedView() {
    return authorizedView;
  }

  /**
   * Required. The AuthorizedView to update. The `name` in `authorized_view` is used to identify the
   * AuthorizedView. AuthorizedView name must in this format:
   * `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`.
   * @param authorizedView authorizedView or {@code null} for none
   */
  public UpdateAuthorizedViewRequest setAuthorizedView(AuthorizedView authorizedView) {
    this.authorizedView = authorizedView;
    return this;
  }

  /**
   * Optional. If true, ignore the safety checks when updating the AuthorizedView.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIgnoreWarnings() {
    return ignoreWarnings;
  }

  /**
   * Optional. If true, ignore the safety checks when updating the AuthorizedView.
   * @param ignoreWarnings ignoreWarnings or {@code null} for none
   */
  public UpdateAuthorizedViewRequest setIgnoreWarnings(java.lang.Boolean ignoreWarnings) {
    this.ignoreWarnings = ignoreWarnings;
    return this;
  }

  /**
   * Optional. The list of fields to update. A mask specifying which fields in the AuthorizedView
   * resource should be updated. This mask is relative to the AuthorizedView resource, not to the
   * request message. A field will be overwritten if it is in the mask. If empty, all fields set in
   * the request will be overwritten. A special value `*` means to overwrite all fields (including
   * fields not set in the request).
   * @return value or {@code null} for none
   */
  public String getUpdateMask() {
    return updateMask;
  }

  /**
   * Optional. The list of fields to update. A mask specifying which fields in the AuthorizedView
   * resource should be updated. This mask is relative to the AuthorizedView resource, not to the
   * request message. A field will be overwritten if it is in the mask. If empty, all fields set in
   * the request will be overwritten. A special value `*` means to overwrite all fields (including
   * fields not set in the request).
   * @param updateMask updateMask or {@code null} for none
   */
  public UpdateAuthorizedViewRequest setUpdateMask(String updateMask) {
    this.updateMask = updateMask;
    return this;
  }

  @Override
  public UpdateAuthorizedViewRequest set(String fieldName, Object value) {
    return (UpdateAuthorizedViewRequest) super.set(fieldName, value);
  }

  @Override
  public UpdateAuthorizedViewRequest clone() {
    return (UpdateAuthorizedViewRequest) super.clone();
  }

}
