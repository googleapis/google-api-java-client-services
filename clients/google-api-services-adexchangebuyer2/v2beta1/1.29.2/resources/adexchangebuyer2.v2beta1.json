{
  "ownerName": "Google",
  "resources": {
    "bidders": {
      "resources": {
        "filterSets": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                  "location": "path",
                  "description": "Full name of the resource to delete.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}",
              "id": "adexchangebuyer2.bidders.filterSets.delete",
              "path": "v2beta1/{+name}",
              "description": "Deletes the requested filter set from the account with the given account\nID."
            },
            "get": {
              "description": "Retrieves the requested filter set for the account with the given account\nID.",
              "httpMethod": "GET",
              "response": {
                "$ref": "FilterSet"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Full name of the resource being requested.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                  "required": true,
                  "type": "string",
                  "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}",
              "id": "adexchangebuyer2.bidders.filterSets.get",
              "path": "v2beta1/{+name}"
            },
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "ownerName"
              ],
              "response": {
                "$ref": "ListFilterSetsResponse"
              },
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilterSetsResponse.nextPageToken\nreturned from the previous call to the\naccounts.filterSets.list\nmethod.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "ownerName": {
                  "location": "path",
                  "description": "Name of the owner (bidder or account) of the filter sets to be listed.\nFor example:\n\n- For a bidder-level filter set for bidder 123: `bidders/123`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456`",
                  "required": true,
                  "type": "string",
                  "pattern": "^bidders/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/bidders/{biddersId}/filterSets",
              "id": "adexchangebuyer2.bidders.filterSets.list",
              "path": "v2beta1/{+ownerName}/filterSets",
              "description": "Lists all filter sets for the account with the given account ID."
            },
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "ownerName"
              ],
              "response": {
                "$ref": "FilterSet"
              },
              "parameters": {
                "isTransient": {
                  "location": "query",
                  "description": "Whether the filter set is transient, or should be persisted indefinitely.\nBy default, filter sets are not transient.\nIf transient, it will be available for at least 1 hour after creation.",
                  "type": "boolean"
                },
                "ownerName": {
                  "pattern": "^bidders/[^/]+$",
                  "location": "path",
                  "description": "Name of the owner (bidder or account) of the filter set to be created.\nFor example:\n\n- For a bidder-level filter set for bidder 123: `bidders/123`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456`",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/bidders/{biddersId}/filterSets",
              "id": "adexchangebuyer2.bidders.filterSets.create",
              "path": "v2beta1/{+ownerName}/filterSets",
              "description": "Creates the specified filter set for the account with the given account ID.",
              "request": {
                "$ref": "FilterSet"
              }
            }
          },
          "resources": {
            "filteredBids": {
              "methods": {
                "list": {
                  "description": "List all reasons for which bids were filtered, with the number of bids\nfiltered for each reason.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "response": {
                    "$ref": "ListFilteredBidsResponse"
                  },
                  "parameters": {
                    "filterSetName": {
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidsResponse.nextPageToken\nreturned from the previous call to the filteredBids.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids",
                  "id": "adexchangebuyer2.bidders.filterSets.filteredBids.list",
                  "path": "v2beta1/{+filterSetName}/filteredBids"
                }
              },
              "resources": {
                "creatives": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListCreativeStatusBreakdownByCreativeResponse"
                      },
                      "parameterOrder": [
                        "filterSetName",
                        "creativeStatusId"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`"
                        },
                        "creativeStatusId": {
                          "location": "path",
                          "description": "The ID of the creative status for which to retrieve a breakdown by\ncreative.\nSee\n[creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).",
                          "format": "int32",
                          "required": true,
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByCreativeResponse.nextPageToken\nreturned from the previous call to the filteredBids.creatives.list\nmethod.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/creatives",
                      "id": "adexchangebuyer2.bidders.filterSets.filteredBids.creatives.list",
                      "path": "v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives",
                      "description": "List all creatives associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each creative."
                    }
                  }
                },
                "details": {
                  "methods": {
                    "list": {
                      "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/details",
                      "path": "v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details",
                      "id": "adexchangebuyer2.bidders.filterSets.filteredBids.details.list",
                      "description": "List all details associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each detail.",
                      "response": {
                        "$ref": "ListCreativeStatusBreakdownByDetailResponse"
                      },
                      "parameterOrder": [
                        "filterSetName",
                        "creativeStatusId"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                          "location": "path"
                        },
                        "creativeStatusId": {
                          "location": "path",
                          "description": "The ID of the creative status for which to retrieve a breakdown by detail.\nSee\n[creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).\nDetails are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.",
                          "format": "int32",
                          "required": true,
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByDetailResponse.nextPageToken\nreturned from the previous call to the filteredBids.details.list\nmethod.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      }
                    }
                  }
                }
              }
            },
            "nonBillableWinningBids": {
              "methods": {
                "list": {
                  "id": "adexchangebuyer2.bidders.filterSets.nonBillableWinningBids.list",
                  "path": "v2beta1/{+filterSetName}/nonBillableWinningBids",
                  "description": "List all reasons for which winning bids were not billable, with the number\nof bids not billed for each reason.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListNonBillableWinningBidsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filterSetName": {
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListNonBillableWinningBidsResponse.nextPageToken\nreturned from the previous call to the nonBillableWinningBids.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/nonBillableWinningBids"
                }
              }
            },
            "losingBids": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListLosingBidsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "parameters": {
                    "filterSetName": {
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListLosingBidsResponse.nextPageToken\nreturned from the previous call to the losingBids.list\nmethod."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/losingBids",
                  "id": "adexchangebuyer2.bidders.filterSets.losingBids.list",
                  "path": "v2beta1/{+filterSetName}/losingBids",
                  "description": "List all reasons for which bids lost in the auction, with the number of\nbids that lost for each reason."
                }
              }
            },
            "impressionMetrics": {
              "methods": {
                "list": {
                  "description": "Lists all metrics that are measured in terms of number of impressions.",
                  "response": {
                    "$ref": "ListImpressionMetricsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "filterSetName": {
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListImpressionMetricsResponse.nextPageToken\nreturned from the previous call to the impressionMetrics.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/impressionMetrics",
                  "path": "v2beta1/{+filterSetName}/impressionMetrics",
                  "id": "adexchangebuyer2.bidders.filterSets.impressionMetrics.list"
                }
              }
            },
            "bidMetrics": {
              "methods": {
                "list": {
                  "description": "Lists all metrics that are measured in terms of number of bids.",
                  "response": {
                    "$ref": "ListBidMetricsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "filterSetName": {
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidMetricsResponse.nextPageToken\nreturned from the previous call to the bidMetrics.list\nmethod.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidMetrics",
                  "path": "v2beta1/{+filterSetName}/bidMetrics",
                  "id": "adexchangebuyer2.bidders.filterSets.bidMetrics.list"
                }
              }
            },
            "bidResponseErrors": {
              "methods": {
                "list": {
                  "id": "adexchangebuyer2.bidders.filterSets.bidResponseErrors.list",
                  "path": "v2beta1/{+filterSetName}/bidResponseErrors",
                  "description": "List all errors that occurred in bid responses, with the number of bid\nresponses affected for each reason.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "response": {
                    "$ref": "ListBidResponseErrorsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "filterSetName": {
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponseErrorsResponse.nextPageToken\nreturned from the previous call to the bidResponseErrors.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidResponseErrors"
                }
              }
            },
            "bidResponsesWithoutBids": {
              "methods": {
                "list": {
                  "description": "List all reasons for which bid responses were considered to have no\napplicable bids, with the number of bid responses affected for each reason.",
                  "response": {
                    "$ref": "ListBidResponsesWithoutBidsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "filterSetName": {
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponsesWithoutBidsResponse.nextPageToken\nreturned from the previous call to the bidResponsesWithoutBids.list\nmethod."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidResponsesWithoutBids",
                  "path": "v2beta1/{+filterSetName}/bidResponsesWithoutBids",
                  "id": "adexchangebuyer2.bidders.filterSets.bidResponsesWithoutBids.list"
                }
              }
            },
            "filteredBidRequests": {
              "methods": {
                "list": {
                  "description": "List all reasons that caused a bid request not to be sent for an\nimpression, with the number of bid requests not sent for each reason.",
                  "response": {
                    "$ref": "ListFilteredBidRequestsResponse"
                  },
                  "parameterOrder": [
                    "filterSetName"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "filterSetName": {
                      "pattern": "^bidders/[^/]+/filterSets/[^/]+$",
                      "location": "path",
                      "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidRequestsResponse.nextPageToken\nreturned from the previous call to the filteredBidRequests.list\nmethod.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBidRequests",
                  "path": "v2beta1/{+filterSetName}/filteredBidRequests",
                  "id": "adexchangebuyer2.bidders.filterSets.filteredBidRequests.list"
                }
              }
            }
          }
        },
        "accounts": {
          "resources": {
            "filterSets": {
              "methods": {
                "get": {
                  "description": "Retrieves the requested filter set for the account with the given account\nID.",
                  "response": {
                    "$ref": "FilterSet"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Full name of the resource being requested.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}",
                  "path": "v2beta1/{+name}",
                  "id": "adexchangebuyer2.bidders.accounts.filterSets.get"
                },
                "list": {
                  "description": "Lists all filter sets for the account with the given account ID.",
                  "response": {
                    "$ref": "ListFilterSetsResponse"
                  },
                  "parameterOrder": [
                    "ownerName"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilterSetsResponse.nextPageToken\nreturned from the previous call to the\naccounts.filterSets.list\nmethod.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "ownerName": {
                      "pattern": "^bidders/[^/]+/accounts/[^/]+$",
                      "location": "path",
                      "description": "Name of the owner (bidder or account) of the filter sets to be listed.\nFor example:\n\n- For a bidder-level filter set for bidder 123: `bidders/123`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets",
                  "path": "v2beta1/{+ownerName}/filterSets",
                  "id": "adexchangebuyer2.bidders.accounts.filterSets.list"
                },
                "create": {
                  "path": "v2beta1/{+ownerName}/filterSets",
                  "id": "adexchangebuyer2.bidders.accounts.filterSets.create",
                  "request": {
                    "$ref": "FilterSet"
                  },
                  "description": "Creates the specified filter set for the account with the given account ID.",
                  "response": {
                    "$ref": "FilterSet"
                  },
                  "parameterOrder": [
                    "ownerName"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "isTransient": {
                      "location": "query",
                      "description": "Whether the filter set is transient, or should be persisted indefinitely.\nBy default, filter sets are not transient.\nIf transient, it will be available for at least 1 hour after creation.",
                      "type": "boolean"
                    },
                    "ownerName": {
                      "location": "path",
                      "description": "Name of the owner (bidder or account) of the filter set to be created.\nFor example:\n\n- For a bidder-level filter set for bidder 123: `bidders/123`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/accounts/[^/]+$"
                    }
                  },
                  "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets"
                },
                "delete": {
                  "id": "adexchangebuyer2.bidders.accounts.filterSets.delete",
                  "path": "v2beta1/{+name}",
                  "description": "Deletes the requested filter set from the account with the given account\nID.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Full name of the resource to delete.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                      "required": true,
                      "type": "string",
                      "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}"
                }
              },
              "resources": {
                "bidResponseErrors": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListBidResponseErrorsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponseErrorsResponse.nextPageToken\nreturned from the previous call to the bidResponseErrors.list\nmethod.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidResponseErrors",
                      "path": "v2beta1/{+filterSetName}/bidResponseErrors",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.bidResponseErrors.list",
                      "description": "List all errors that occurred in bid responses, with the number of bid\nresponses affected for each reason."
                    }
                  }
                },
                "bidResponsesWithoutBids": {
                  "methods": {
                    "list": {
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidResponsesWithoutBids",
                      "path": "v2beta1/{+filterSetName}/bidResponsesWithoutBids",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.bidResponsesWithoutBids.list",
                      "description": "List all reasons for which bid responses were considered to have no\napplicable bids, with the number of bid responses affected for each reason.",
                      "response": {
                        "$ref": "ListBidResponsesWithoutBidsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponsesWithoutBidsResponse.nextPageToken\nreturned from the previous call to the bidResponsesWithoutBids.list\nmethod.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "filteredBidRequests": {
                  "methods": {
                    "list": {
                      "path": "v2beta1/{+filterSetName}/filteredBidRequests",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.filteredBidRequests.list",
                      "description": "List all reasons that caused a bid request not to be sent for an\nimpression, with the number of bid requests not sent for each reason.",
                      "response": {
                        "$ref": "ListFilteredBidRequestsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidRequestsResponse.nextPageToken\nreturned from the previous call to the filteredBidRequests.list\nmethod.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBidRequests"
                    }
                  }
                },
                "nonBillableWinningBids": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListNonBillableWinningBidsResponse.nextPageToken\nreturned from the previous call to the nonBillableWinningBids.list\nmethod.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/nonBillableWinningBids",
                      "path": "v2beta1/{+filterSetName}/nonBillableWinningBids",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.nonBillableWinningBids.list",
                      "description": "List all reasons for which winning bids were not billable, with the number\nof bids not billed for each reason.",
                      "response": {
                        "$ref": "ListNonBillableWinningBidsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "httpMethod": "GET"
                    }
                  }
                },
                "filteredBids": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "response": {
                        "$ref": "ListFilteredBidsResponse"
                      },
                      "parameters": {
                        "filterSetName": {
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidsResponse.nextPageToken\nreturned from the previous call to the filteredBids.list\nmethod.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.list",
                      "path": "v2beta1/{+filterSetName}/filteredBids",
                      "description": "List all reasons for which bids were filtered, with the number of bids\nfiltered for each reason."
                    }
                  },
                  "resources": {
                    "creatives": {
                      "methods": {
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/adexchange.buyer"
                          ],
                          "parameters": {
                            "filterSetName": {
                              "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                              "required": true,
                              "type": "string",
                              "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                              "location": "path"
                            },
                            "creativeStatusId": {
                              "location": "path",
                              "description": "The ID of the creative status for which to retrieve a breakdown by\ncreative.\nSee\n[creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).",
                              "format": "int32",
                              "required": true,
                              "type": "integer"
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByCreativeResponse.nextPageToken\nreturned from the previous call to the filteredBids.creatives.list\nmethod.",
                              "type": "string"
                            },
                            "pageSize": {
                              "location": "query",
                              "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/creatives",
                          "id": "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.creatives.list",
                          "path": "v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives",
                          "description": "List all creatives associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each creative.",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "filterSetName",
                            "creativeStatusId"
                          ],
                          "response": {
                            "$ref": "ListCreativeStatusBreakdownByCreativeResponse"
                          }
                        }
                      }
                    },
                    "details": {
                      "methods": {
                        "list": {
                          "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/details",
                          "path": "v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details",
                          "id": "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.details.list",
                          "description": "List all details associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each detail.",
                          "response": {
                            "$ref": "ListCreativeStatusBreakdownByDetailResponse"
                          },
                          "parameterOrder": [
                            "filterSetName",
                            "creativeStatusId"
                          ],
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/adexchange.buyer"
                          ],
                          "parameters": {
                            "filterSetName": {
                              "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                              "required": true,
                              "type": "string",
                              "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                              "location": "path"
                            },
                            "creativeStatusId": {
                              "location": "path",
                              "description": "The ID of the creative status for which to retrieve a breakdown by detail.\nSee\n[creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).\nDetails are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.",
                              "format": "int32",
                              "required": true,
                              "type": "integer"
                            },
                            "pageToken": {
                              "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByDetailResponse.nextPageToken\nreturned from the previous call to the filteredBids.details.list\nmethod.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageSize": {
                              "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                              "format": "int32",
                              "type": "integer",
                              "location": "query"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "losingBids": {
                  "methods": {
                    "list": {
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.losingBids.list",
                      "path": "v2beta1/{+filterSetName}/losingBids",
                      "description": "List all reasons for which bids lost in the auction, with the number of\nbids that lost for each reason.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListLosingBidsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListLosingBidsResponse.nextPageToken\nreturned from the previous call to the losingBids.list\nmethod."
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/losingBids"
                    }
                  }
                },
                "impressionMetrics": {
                  "methods": {
                    "list": {
                      "description": "Lists all metrics that are measured in terms of number of impressions.",
                      "response": {
                        "$ref": "ListImpressionMetricsResponse"
                      },
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "parameters": {
                        "filterSetName": {
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string",
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListImpressionMetricsResponse.nextPageToken\nreturned from the previous call to the impressionMetrics.list\nmethod."
                        },
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/impressionMetrics",
                      "path": "v2beta1/{+filterSetName}/impressionMetrics",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.impressionMetrics.list"
                    }
                  }
                },
                "bidMetrics": {
                  "methods": {
                    "list": {
                      "description": "Lists all metrics that are measured in terms of number of bids.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "filterSetName"
                      ],
                      "response": {
                        "$ref": "ListBidMetricsResponse"
                      },
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "filterSetName": {
                          "pattern": "^bidders/[^/]+/accounts/[^/]+/filterSets/[^/]+$",
                          "location": "path",
                          "description": "Name of the filter set that should be applied to the requested metrics.\nFor example:\n\n- For a bidder-level filter set for bidder 123:\n  `bidders/123/filterSets/abc`\n\n- For an account-level filter set for the buyer account representing bidder\n  123: `bidders/123/accounts/123/filterSets/abc`\n\n- For an account-level filter set for the child seat buyer account 456\n  whose bidder is 123: `bidders/123/accounts/456/filterSets/abc`",
                          "required": true,
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidMetricsResponse.nextPageToken\nreturned from the previous call to the bidMetrics.list\nmethod."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/adexchange.buyer"
                      ],
                      "flatPath": "v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidMetrics",
                      "id": "adexchangebuyer2.bidders.accounts.filterSets.bidMetrics.list",
                      "path": "v2beta1/{+filterSetName}/bidMetrics"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "accounts": {
      "resources": {
        "clients": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "Numerical account ID of the client's sponsor buyer. (required)",
                  "format": "int64",
                  "required": true,
                  "type": "string"
                },
                "clientAccountId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Numerical account ID of the client buyer to retrieve. (required)",
                  "format": "int64"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}",
              "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}",
              "id": "adexchangebuyer2.accounts.clients.get",
              "description": "Gets a client buyer with a given client account ID.",
              "response": {
                "$ref": "Client"
              },
              "parameterOrder": [
                "accountId",
                "clientAccountId"
              ],
              "httpMethod": "GET"
            },
            "list": {
              "description": "Lists all the clients for the current sponsor buyer.",
              "response": {
                "$ref": "ListClientsResponse"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "description": "Unique numerical account ID of the sponsor buyer to list the clients for.",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Requested page size. The server may return fewer clients than requested.\nIf unspecified, the server will pick an appropriate default.",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListClientsResponse.nextPageToken\nreturned from the previous call to the\naccounts.clients.list\nmethod.",
                  "type": "string",
                  "location": "query"
                },
                "partnerClientId": {
                  "location": "query",
                  "description": "Optional unique identifier (from the standpoint of an Ad Exchange sponsor\nbuyer partner) of the client to return.\nIf specified, at most one client will be returned in the response.",
                  "type": "string"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/clients",
              "path": "v2beta1/accounts/{accountId}/clients",
              "id": "adexchangebuyer2.accounts.clients.list"
            },
            "update": {
              "description": "Updates an existing client buyer.",
              "request": {
                "$ref": "Client"
              },
              "response": {
                "$ref": "Client"
              },
              "parameterOrder": [
                "accountId",
                "clientAccountId"
              ],
              "httpMethod": "PUT",
              "parameters": {
                "accountId": {
                  "description": "Unique numerical account ID for the buyer of which the client buyer\nis a customer; the sponsor buyer to update a client for. (required)",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "clientAccountId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Unique numerical account ID of the client to update. (required)",
                  "format": "int64"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}",
              "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}",
              "id": "adexchangebuyer2.accounts.clients.update"
            },
            "create": {
              "description": "Creates a new client buyer.",
              "request": {
                "$ref": "Client"
              },
              "response": {
                "$ref": "Client"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "Unique numerical account ID for the buyer of which the client buyer\nis a customer; the sponsor buyer to create a client for. (required)",
                  "format": "int64",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/clients",
              "path": "v2beta1/accounts/{accountId}/clients",
              "id": "adexchangebuyer2.accounts.clients.create"
            }
          },
          "resources": {
            "invitations": {
              "methods": {
                "get": {
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}",
                  "id": "adexchangebuyer2.accounts.clients.invitations.get",
                  "description": "Retrieves an existing client user invitation.",
                  "response": {
                    "$ref": "ClientUserInvitation"
                  },
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId",
                    "invitationId"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "invitationId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Numerical identifier of the user invitation to retrieve. (required)",
                      "format": "int64"
                    },
                    "accountId": {
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "clientAccountId": {
                      "description": "Numerical account ID of the client buyer that the user invitation\nto be retrieved is associated with. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "description": "Lists all the client users invitations for a client\nwith a given account ID.",
                  "response": {
                    "$ref": "ListClientUserInvitationsResponse"
                  },
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListClientUserInvitationsResponse.nextPageToken\nreturned from the previous call to the\nclients.invitations.list\nmethod.",
                      "type": "string"
                    },
                    "accountId": {
                      "location": "path",
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer clients than requested.\nIf unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "clientAccountId": {
                      "location": "path",
                      "description": "Numerical account ID of the client buyer to list invitations for.\n(required)\nYou must either specify a string representation of a\nnumerical account identifier or the `-` character\nto list all the invitations for all the clients\nof a given sponsor buyer.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations",
                  "id": "adexchangebuyer2.accounts.clients.invitations.list"
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId"
                  ],
                  "response": {
                    "$ref": "ClientUserInvitation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "accountId": {
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "clientAccountId": {
                      "location": "path",
                      "description": "Numerical account ID of the client buyer that the user\nshould be associated with. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations",
                  "id": "adexchangebuyer2.accounts.clients.invitations.create",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations",
                  "request": {
                    "$ref": "ClientUserInvitation"
                  },
                  "description": "Creates and sends out an email invitation to access\nan Ad Exchange client buyer account."
                }
              }
            },
            "users": {
              "methods": {
                "update": {
                  "request": {
                    "$ref": "ClientUser"
                  },
                  "description": "Updates an existing client user.\nOnly the user status can be changed on update.",
                  "response": {
                    "$ref": "ClientUser"
                  },
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId",
                    "userId"
                  ],
                  "httpMethod": "PUT",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "userId": {
                      "location": "path",
                      "description": "Numerical identifier of the user to retrieve. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string"
                    },
                    "accountId": {
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "clientAccountId": {
                      "description": "Numerical account ID of the client buyer that the user to be retrieved\nis associated with. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}",
                  "id": "adexchangebuyer2.accounts.clients.users.update"
                },
                "list": {
                  "description": "Lists all the known client users for a specified\nsponsor buyer account ID.",
                  "response": {
                    "$ref": "ListClientUsersResponse"
                  },
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "clientAccountId": {
                      "location": "path",
                      "description": "The account ID of the client buyer to list users for. (required)\nYou must specify either a string representation of a\nnumerical account identifier or the `-` character\nto list all the client users for all the clients\nof a given sponsor buyer.",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListClientUsersResponse.nextPageToken\nreturned from the previous call to the\naccounts.clients.users.list\nmethod.",
                      "type": "string",
                      "location": "query"
                    },
                    "accountId": {
                      "description": "Numerical account ID of the sponsor buyer of the client to list users for.\n(required)",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server may return fewer clients than requested.\nIf unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users",
                  "id": "adexchangebuyer2.accounts.clients.users.list"
                },
                "get": {
                  "flatPath": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}",
                  "id": "adexchangebuyer2.accounts.clients.users.get",
                  "path": "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}",
                  "description": "Retrieves an existing client user.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "accountId",
                    "clientAccountId",
                    "userId"
                  ],
                  "response": {
                    "$ref": "ClientUser"
                  },
                  "parameters": {
                    "userId": {
                      "location": "path",
                      "description": "Numerical identifier of the user to retrieve. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string"
                    },
                    "accountId": {
                      "location": "path",
                      "description": "Numerical account ID of the client's sponsor buyer. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string"
                    },
                    "clientAccountId": {
                      "location": "path",
                      "description": "Numerical account ID of the client buyer\nthat the user to be retrieved is associated with. (required)",
                      "format": "int64",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ]
                }
              }
            }
          }
        },
        "publisherProfiles": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "publisherProfileId": {
                  "location": "path",
                  "description": "The id for the publisher profile to get.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}",
              "path": "v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}",
              "id": "adexchangebuyer2.accounts.publisherProfiles.get",
              "description": "Gets the requested publisher profile by id.",
              "response": {
                "$ref": "PublisherProfile"
              },
              "parameterOrder": [
                "accountId",
                "publisherProfileId"
              ],
              "httpMethod": "GET"
            },
            "list": {
              "response": {
                "$ref": "ListPublisherProfilesResponse"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The page token as return from ListPublisherProfilesResponse.",
                  "type": "string"
                },
                "accountId": {
                  "location": "path",
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Specify the number of results to include per page.",
                  "format": "int32"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/publisherProfiles",
              "path": "v2beta1/accounts/{accountId}/publisherProfiles",
              "id": "adexchangebuyer2.accounts.publisherProfiles.list",
              "description": "List all publisher profiles visible to the buyer"
            }
          }
        },
        "creatives": {
          "methods": {
            "list": {
              "description": "Lists creatives.",
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "accountId": {
                  "description": "The account to list the creatives from.\nSpecify \"-\" to list all creatives the current user has access to.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Requested page size. The server may return fewer creatives than requested\n(due to timeout constraint) even if more are available via another call.\nIf unspecified, server will pick an appropriate default.\nAcceptable values are 1 to 1000, inclusive.",
                  "format": "int32",
                  "type": "integer"
                },
                "query": {
                  "description": "An optional query string to filter creatives. If no filter is specified,\nall active creatives will be returned.\n\u003cp\u003eSupported queries are:\n\u003cul\u003e\n\u003cli\u003eaccountId=\u003ci\u003eaccount_id_string\u003c/i\u003e\n\u003cli\u003ecreativeId=\u003ci\u003ecreative_id_string\u003c/i\u003e\n\u003cli\u003edealsStatus: {approved, conditionally_approved, disapproved,\n                   not_checked}\n\u003cli\u003eopenAuctionStatus: {approved, conditionally_approved, disapproved,\n                          not_checked}\n\u003cli\u003eattribute: {a numeric attribute from the list of attributes}\n\u003cli\u003edisapprovalReason: {a reason from\nDisapprovalReason}\n\u003c/ul\u003e\nExample: 'accountId=12345 AND (dealsStatus:disapproved AND\ndisapprovalReason:unacceptable_content) OR attribute:47'",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativesResponse.next_page_token\nreturned from the previous call to 'ListCreatives' method.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/creatives",
              "path": "v2beta1/accounts/{accountId}/creatives",
              "id": "adexchangebuyer2.accounts.creatives.list"
            },
            "create": {
              "request": {
                "$ref": "Creative"
              },
              "description": "Creates a creative.",
              "httpMethod": "POST",
              "parameterOrder": [
                "accountId"
              ],
              "response": {
                "$ref": "Creative"
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "duplicateIdMode": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "NO_DUPLICATES",
                    "FORCE_ENABLE_DUPLICATE_IDS"
                  ],
                  "description": "Indicates if multiple creatives can share an ID or not. Default is\nNO_DUPLICATES (one ID per creative)."
                },
                "accountId": {
                  "location": "path",
                  "description": "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/creatives",
              "id": "adexchangebuyer2.accounts.creatives.create",
              "path": "v2beta1/accounts/{accountId}/creatives"
            },
            "stopWatching": {
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "The account of the creative to stop notifications for.",
                  "required": true,
                  "type": "string"
                },
                "creativeId": {
                  "location": "path",
                  "description": "The creative ID of the creative to stop notifications for.\nSpecify \"-\" to specify stopping account level notifications.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching",
              "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching",
              "id": "adexchangebuyer2.accounts.creatives.stopWatching",
              "description": "Stops watching a creative. Will stop push notifications being sent to the\ntopics when the creative changes status.",
              "request": {
                "$ref": "StopWatchingCreativeRequest"
              },
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "accountId",
                "creativeId"
              ],
              "httpMethod": "POST"
            },
            "watch": {
              "request": {
                "$ref": "WatchCreativeRequest"
              },
              "description": "Watches a creative. Will result in push notifications being sent to the\ntopic when the creative changes status.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "accountId",
                "creativeId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "The account of the creative to watch.",
                  "required": true,
                  "type": "string"
                },
                "creativeId": {
                  "description": "The creative ID to watch for status changes.\nSpecify \"-\" to watch all creatives under the above account.\nIf both creative-level and account-level notifications are\nsent, only a single notification will be sent to the\ncreative-level notification topic.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}:watch",
              "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}:watch",
              "id": "adexchangebuyer2.accounts.creatives.watch"
            },
            "get": {
              "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}",
              "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}",
              "id": "adexchangebuyer2.accounts.creatives.get",
              "description": "Gets a creative.",
              "response": {
                "$ref": "Creative"
              },
              "parameterOrder": [
                "accountId",
                "creativeId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "The account the creative belongs to.",
                  "required": true,
                  "type": "string"
                },
                "creativeId": {
                  "description": "The ID of the creative to retrieve.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "update": {
              "response": {
                "$ref": "Creative"
              },
              "parameterOrder": [
                "accountId",
                "creativeId"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "description": "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "creativeId": {
                  "description": "The buyer-defined creative ID of this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}",
              "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}",
              "id": "adexchangebuyer2.accounts.creatives.update",
              "request": {
                "$ref": "Creative"
              },
              "description": "Updates a creative."
            }
          },
          "resources": {
            "dealAssociations": {
              "methods": {
                "add": {
                  "request": {
                    "$ref": "AddDealAssociationRequest"
                  },
                  "description": "Associate an existing deal with a creative.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "accountId",
                    "creativeId"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "parameters": {
                    "creativeId": {
                      "description": "The ID of the creative associated with the deal.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "accountId": {
                      "location": "path",
                      "description": "The account the creative belongs to.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add",
                  "id": "adexchangebuyer2.accounts.creatives.dealAssociations.add",
                  "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add"
                },
                "remove": {
                  "description": "Remove the association between a deal and a creative.",
                  "request": {
                    "$ref": "RemoveDealAssociationRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "accountId",
                    "creativeId"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "accountId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The account the creative belongs to."
                    },
                    "creativeId": {
                      "location": "path",
                      "description": "The ID of the creative associated with the deal.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove",
                  "id": "adexchangebuyer2.accounts.creatives.dealAssociations.remove",
                  "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove"
                },
                "list": {
                  "description": "List all creative-deal associations.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListDealAssociationsResponse"
                  },
                  "parameterOrder": [
                    "accountId",
                    "creativeId"
                  ],
                  "parameters": {
                    "query": {
                      "location": "query",
                      "description": "An optional query string to filter deal associations. If no filter is\nspecified, all associations will be returned.\nSupported queries are:\n\u003cul\u003e\n\u003cli\u003eaccountId=\u003ci\u003eaccount_id_string\u003c/i\u003e\n\u003cli\u003ecreativeId=\u003ci\u003ecreative_id_string\u003c/i\u003e\n\u003cli\u003edealsId=\u003ci\u003edeals_id_string\u003c/i\u003e\n\u003cli\u003edealsStatus:{approved, conditionally_approved, disapproved,\n                  not_checked}\n\u003cli\u003eopenAuctionStatus:{approved, conditionally_approved, disapproved,\n                         not_checked}\n\u003c/ul\u003e\nExample: 'dealsId=12345 AND dealsStatus:disapproved'",
                      "type": "string"
                    },
                    "creativeId": {
                      "location": "path",
                      "description": "The creative ID to list the associations from.\nSpecify \"-\" to list all creatives under the above account.",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListDealAssociationsResponse.next_page_token\nreturned from the previous call to 'ListDealAssociations' method."
                    },
                    "accountId": {
                      "description": "The account to list the associations from.\nSpecify \"-\" to list all creatives the current user has access to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer associations than requested.\nIf unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/adexchange.buyer"
                  ],
                  "flatPath": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations",
                  "id": "adexchangebuyer2.accounts.creatives.dealAssociations.list",
                  "path": "v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations"
                }
              }
            }
          }
        },
        "products": {
          "methods": {
            "get": {
              "description": "Gets the requested product by ID.",
              "response": {
                "$ref": "Product"
              },
              "parameterOrder": [
                "accountId",
                "productId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "accountId": {
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "productId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the product to get the head revision for."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/products/{productId}",
              "path": "v2beta1/accounts/{accountId}/products/{productId}",
              "id": "adexchangebuyer2.accounts.products.get"
            },
            "list": {
              "description": "List all products visible to the buyer (optionally filtered by the\nspecified PQL query).",
              "response": {
                "$ref": "ListProductsResponse"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                  "format": "int32"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "An optional PQL query used to query for products. See\nhttps://developers.google.com/ad-manager/docs/pqlreference\nfor documentation about PQL and examples.\n\nNested repeated fields, such as product.targetingCriterion.inclusions,\ncannot be filtered."
                },
                "pageToken": {
                  "location": "query",
                  "description": "The page token as returned from ListProductsResponse.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/products",
              "path": "v2beta1/accounts/{accountId}/products",
              "id": "adexchangebuyer2.accounts.products.list"
            }
          }
        },
        "finalizedProposals": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListProposalsResponse"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "filterSyntax": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "FILTER_SYNTAX_UNSPECIFIED",
                    "PQL",
                    "LIST_FILTER"
                  ],
                  "description": "Syntax the filter is written in. Current implementation defaults to PQL\nbut in the future it will be LIST_FILTER."
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "An optional PQL filter query used to query for proposals.\n\nNested repeated fields, such as proposal.deals.targetingCriterion,\ncannot be filtered."
                },
                "pageToken": {
                  "description": "The page token as returned from ListProposalsResponse.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/finalizedProposals",
              "path": "v2beta1/accounts/{accountId}/finalizedProposals",
              "id": "adexchangebuyer2.accounts.finalizedProposals.list",
              "description": "List finalized proposals, regardless if a proposal is being renegotiated.\nA filter expression (PQL query) may be specified to filter the results.\nThe notes will not be returned."
            }
          }
        },
        "proposals": {
          "methods": {
            "accept": {
              "flatPath": "v2beta1/accounts/{accountId}/proposals/{proposalId}:accept",
              "path": "v2beta1/accounts/{accountId}/proposals/{proposalId}:accept",
              "id": "adexchangebuyer2.accounts.proposals.accept",
              "request": {
                "$ref": "AcceptProposalRequest"
              },
              "description": "Mark the proposal as accepted at the given revision number. If the number\ndoes not match the server's revision number an `ABORTED` error message will\nbe returned. This call updates the proposal_state from `PROPOSED` to\n`BUYER_ACCEPTED`, or from `SELLER_ACCEPTED` to `FINALIZED`.",
              "response": {
                "$ref": "Proposal"
              },
              "parameterOrder": [
                "accountId",
                "proposalId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "proposalId": {
                  "description": "The ID of the proposal to accept.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "pause": {
              "request": {
                "$ref": "PauseProposalRequest"
              },
              "description": "Update the given proposal to pause serving.\nThis method will set the\n`DealServingMetadata.DealPauseStatus.has_buyer_paused` bit to true for all\ndeals in the proposal.\n\nIt is a no-op to pause an already-paused proposal.\nIt is an error to call PauseProposal for a proposal that is not\nfinalized or renegotiating.",
              "httpMethod": "POST",
              "parameterOrder": [
                "accountId",
                "proposalId"
              ],
              "response": {
                "$ref": "Proposal"
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string"
                },
                "proposalId": {
                  "location": "path",
                  "description": "The ID of the proposal to pause.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/proposals/{proposalId}:pause",
              "id": "adexchangebuyer2.accounts.proposals.pause",
              "path": "v2beta1/accounts/{accountId}/proposals/{proposalId}:pause"
            },
            "list": {
              "description": "List proposals. A filter expression (PQL query) may be specified to\nfilter the results. To retrieve all finalized proposals, regardless if a\nproposal is being renegotiated, see the FinalizedProposals resource.\nNote that Bidder/ChildSeat relationships differ from the usual behavior.\nA Bidder account can only see its child seats' proposals by specifying\nthe ChildSeat's accountId in the request path.",
              "httpMethod": "GET",
              "parameterOrder": [
                "accountId"
              ],
              "response": {
                "$ref": "ListProposalsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The page token as returned from ListProposalsResponse.",
                  "type": "string"
                },
                "accountId": {
                  "location": "path",
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default.",
                  "format": "int32",
                  "type": "integer"
                },
                "filterSyntax": {
                  "location": "query",
                  "enum": [
                    "FILTER_SYNTAX_UNSPECIFIED",
                    "PQL",
                    "LIST_FILTER"
                  ],
                  "description": "Syntax the filter is written in. Current implementation defaults to PQL\nbut in the future it will be LIST_FILTER.",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "An optional PQL filter query used to query for proposals.\n\nNested repeated fields, such as proposal.deals.targetingCriterion,\ncannot be filtered."
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/proposals",
              "id": "adexchangebuyer2.accounts.proposals.list",
              "path": "v2beta1/accounts/{accountId}/proposals"
            },
            "create": {
              "request": {
                "$ref": "Proposal"
              },
              "description": "Create the given proposal. Each created proposal and any deals it contains\nare assigned a unique ID by the server.",
              "response": {
                "$ref": "Proposal"
              },
              "parameterOrder": [
                "accountId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/proposals",
              "path": "v2beta1/accounts/{accountId}/proposals",
              "id": "adexchangebuyer2.accounts.proposals.create"
            },
            "addNote": {
              "httpMethod": "POST",
              "parameterOrder": [
                "accountId",
                "proposalId"
              ],
              "response": {
                "$ref": "Note"
              },
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string"
                },
                "proposalId": {
                  "location": "path",
                  "description": "The ID of the proposal to attach the note to.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote",
              "id": "adexchangebuyer2.accounts.proposals.addNote",
              "path": "v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote",
              "description": "Create a new note and attach it to the proposal. The note is assigned\na unique ID by the server.\nThe proposal revision number will not increase when associated with a\nnew note.",
              "request": {
                "$ref": "AddNoteRequest"
              }
            },
            "resume": {
              "response": {
                "$ref": "Proposal"
              },
              "parameterOrder": [
                "accountId",
                "proposalId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string"
                },
                "proposalId": {
                  "description": "The ID of the proposal to resume.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/proposals/{proposalId}:resume",
              "path": "v2beta1/accounts/{accountId}/proposals/{proposalId}:resume",
              "id": "adexchangebuyer2.accounts.proposals.resume",
              "description": "Update the given proposal to resume serving.\nThis method will set the\n`DealServingMetadata.DealPauseStatus.has_buyer_paused` bit to false for all\ndeals in the proposal.\n\nNote that if the `has_seller_paused` bit is also set, serving will not\nresume until the seller also resumes.\n\nIt is a no-op to resume an already-running proposal.\nIt is an error to call ResumeProposal for a proposal that is not\nfinalized or renegotiating.",
              "request": {
                "$ref": "ResumeProposalRequest"
              }
            },
            "completeSetup": {
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "parameters": {
                "accountId": {
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "proposalId": {
                  "location": "path",
                  "description": "The ID of the proposal to mark as setup completed.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup",
              "path": "v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup",
              "id": "adexchangebuyer2.accounts.proposals.completeSetup",
              "request": {
                "$ref": "CompleteSetupRequest"
              },
              "description": "Update the given proposal to indicate that setup has been completed.\nThis method is called by the buyer when the line items have been created\non their end for a finalized proposal and all the required creatives\nhave been uploaded using the creatives API. This call updates the\n`is_setup_completed` bit on the proposal and also notifies the seller.\nThe server will advance the revision number of the most recent proposal.",
              "response": {
                "$ref": "Proposal"
              },
              "parameterOrder": [
                "accountId",
                "proposalId"
              ],
              "httpMethod": "POST"
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "accountId",
                "proposalId"
              ],
              "response": {
                "$ref": "Proposal"
              },
              "parameters": {
                "accountId": {
                  "location": "path",
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string"
                },
                "proposalId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The unique ID of the proposal"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/proposals/{proposalId}",
              "id": "adexchangebuyer2.accounts.proposals.get",
              "path": "v2beta1/accounts/{accountId}/proposals/{proposalId}",
              "description": "Gets a proposal given its ID. The proposal is returned at its head\nrevision."
            },
            "update": {
              "path": "v2beta1/accounts/{accountId}/proposals/{proposalId}",
              "id": "adexchangebuyer2.accounts.proposals.update",
              "description": "Update the given proposal at the client known revision number. If the\nserver revision has advanced since the passed-in\n`proposal.proposal_revision`, an `ABORTED` error message will be returned.\nOnly the buyer-modifiable fields of the proposal will be updated.\n\nNote that the deals in the proposal will be updated to match the passed-in\ncopy.\nIf a passed-in deal does not have a `deal_id`, the server will assign a new\nunique ID and create the deal.\nIf passed-in deal has a `deal_id`, it will be updated to match the\npassed-in copy.\nAny existing deals not present in the passed-in proposal will be deleted.\nIt is an error to pass in a deal with a `deal_id` not present at head.",
              "request": {
                "$ref": "Proposal"
              },
              "response": {
                "$ref": "Proposal"
              },
              "parameterOrder": [
                "accountId",
                "proposalId"
              ],
              "httpMethod": "PUT",
              "parameters": {
                "accountId": {
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "proposalId": {
                  "location": "path",
                  "description": "The unique ID of the proposal.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/proposals/{proposalId}"
            },
            "cancelNegotiation": {
              "path": "v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation",
              "id": "adexchangebuyer2.accounts.proposals.cancelNegotiation",
              "description": "Cancel an ongoing negotiation on a proposal. This does not cancel or end\nserving for the deals if the proposal has been finalized, but only cancels\na negotiation unilaterally.",
              "request": {
                "$ref": "CancelNegotiationRequest"
              },
              "response": {
                "$ref": "Proposal"
              },
              "parameterOrder": [
                "accountId",
                "proposalId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "accountId": {
                  "description": "Account ID of the buyer.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "proposalId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the proposal to cancel negotiation for."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/adexchange.buyer"
              ],
              "flatPath": "v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "version": "v2beta1",
  "baseUrl": "https://adexchangebuyer.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.",
  "servicePath": "",
  "basePath": "",
  "revision": "20190529",
  "documentationLink": "https://developers.google.com/authorized-buyers/apis/reference/rest/",
  "id": "adexchangebuyer2:v2beta1",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "AddNoteRequest": {
      "description": "Request message for adding a note to a given proposal.",
      "type": "object",
      "properties": {
        "note": {
          "$ref": "Note",
          "description": "Details of the note to add."
        }
      },
      "id": "AddNoteRequest"
    },
    "AppContext": {
      "description": "Output only. The app type the restriction applies to for mobile device.",
      "type": "object",
      "properties": {
        "appTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NATIVE",
              "WEB"
            ]
          },
          "enumDescriptions": [
            "Native app context.",
            "Mobile web app context."
          ],
          "description": "The app types this restriction applies to."
        }
      },
      "id": "AppContext"
    },
    "ListBidMetricsResponse": {
      "description": "Response message for listing the metrics that are measured in number of bids.",
      "type": "object",
      "properties": {
        "bidMetricsRows": {
          "description": "List of rows, each containing a set of bid metrics.",
          "type": "array",
          "items": {
            "$ref": "BidMetricsRow"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListBidMetricsRequest.pageToken\nfield in the subsequent call to the bidMetrics.list\nmethod to retrieve the next page of results."
        }
      },
      "id": "ListBidMetricsResponse"
    },
    "ListNonBillableWinningBidsResponse": {
      "description": "Response message for listing all reasons for which a buyer was not billed for\na winning bid.",
      "type": "object",
      "properties": {
        "nonBillableWinningBidStatusRows": {
          "description": "List of rows, with counts of bids not billed aggregated by reason.",
          "type": "array",
          "items": {
            "$ref": "NonBillableWinningBidStatusRow"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListNonBillableWinningBidsRequest.pageToken\nfield in the subsequent call to the nonBillableWinningBids.list\nmethod to retrieve the next page of results."
        }
      },
      "id": "ListNonBillableWinningBidsResponse"
    },
    "ListLosingBidsResponse": {
      "description": "Response message for listing all reasons that bids lost in the auction.",
      "type": "object",
      "properties": {
        "creativeStatusRows": {
          "type": "array",
          "items": {
            "$ref": "CreativeStatusRow"
          },
          "description": "List of rows, with counts of losing bids aggregated by loss reason (i.e.\ncreative status)."
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListLosingBidsRequest.pageToken\nfield in the subsequent call to the losingBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListLosingBidsResponse"
    },
    "TargetingValue": {
      "description": "A polymorphic targeting value used as part of Shared Targeting.",
      "type": "object",
      "properties": {
        "longValue": {
          "description": "The long value to include/exclude.",
          "format": "int64",
          "type": "string"
        },
        "dayPartTargetingValue": {
          "$ref": "DayPartTargeting",
          "description": "The daypart targeting to include / exclude.\nFilled in when the key is GOOG_DAYPART_TARGETING.\nThe definition of this targeting is derived from the structure\nused by Ad Manager."
        },
        "creativeSizeValue": {
          "description": "The creative size value to include/exclude.\nFilled in when key = GOOG_CREATIVE_SIZE",
          "$ref": "CreativeSize"
        },
        "stringValue": {
          "description": "The string value to include/exclude.",
          "type": "string"
        }
      },
      "id": "TargetingValue"
    },
    "AuctionContext": {
      "properties": {
        "auctionTypes": {
          "description": "The auction types this restriction applies to.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "OPEN_AUCTION",
              "DIRECT_DEALS"
            ]
          },
          "enumDescriptions": [
            "The restriction applies to open auction.",
            "The restriction applies to direct deals."
          ]
        }
      },
      "id": "AuctionContext",
      "description": "Output only. The auction type the restriction applies to.",
      "type": "object"
    },
    "DealServingMetadata": {
      "description": "Message captures metadata about the serving status of a deal.",
      "type": "object",
      "properties": {
        "dealPauseStatus": {
          "$ref": "DealPauseStatus",
          "description": "Output only. Tracks which parties (if any) have paused a deal."
        }
      },
      "id": "DealServingMetadata"
    },
    "ListImpressionMetricsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListImpressionMetricsRequest.pageToken\nfield in the subsequent call to the impressionMetrics.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "impressionMetricsRows": {
          "description": "List of rows, each containing a set of impression metrics.",
          "type": "array",
          "items": {
            "$ref": "ImpressionMetricsRow"
          }
        }
      },
      "id": "ListImpressionMetricsResponse",
      "description": "Response message for listing the metrics that are measured in number of\nimpressions."
    },
    "BidMetricsRow": {
      "description": "The set of metrics that are measured in numbers of bids, representing how\nmany bids with the specified dimension values were considered eligible at\neach stage of the bidding funnel;",
      "type": "object",
      "properties": {
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        },
        "impressionsWon": {
          "$ref": "MetricValue",
          "description": "The number of bids that won an impression."
        },
        "viewableImpressions": {
          "$ref": "MetricValue",
          "description": "The number of bids for which the corresponding impression was viewable (as\ndefined by Active View)."
        },
        "measurableImpressions": {
          "$ref": "MetricValue",
          "description": "The number of bids for which the corresponding impression was measurable\nfor viewability (as defined by Active View)."
        },
        "bids": {
          "$ref": "MetricValue",
          "description": "The number of bids that Ad Exchange received from the buyer."
        },
        "billedImpressions": {
          "$ref": "MetricValue",
          "description": "The number of bids for which the buyer was billed."
        },
        "bidsInAuction": {
          "description": "The number of bids that were permitted to compete in the auction.",
          "$ref": "MetricValue"
        }
      },
      "id": "BidMetricsRow"
    },
    "CreativeStatusRow": {
      "description": "The number of bids with the specified dimension values that did not win the\nauction (either were filtered pre-auction or lost the auction), as described\nby the specified creative status.",
      "type": "object",
      "properties": {
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        },
        "creativeStatusId": {
          "description": "The ID of the creative status.\nSee\n[creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).",
          "format": "int32",
          "type": "integer"
        },
        "bidCount": {
          "description": "The number of bids with the specified status.",
          "$ref": "MetricValue"
        }
      },
      "id": "CreativeStatusRow"
    },
    "GuaranteedFixedPriceTerms": {
      "description": "Terms for Programmatic Guaranteed Deals.",
      "type": "object",
      "properties": {
        "guaranteedLooks": {
          "description": "Count of guaranteed looks. Required for deal, optional for product.",
          "format": "int64",
          "type": "string"
        },
        "fixedPrices": {
          "description": "Fixed price for the specified buyer.",
          "type": "array",
          "items": {
            "$ref": "PricePerBuyer"
          }
        },
        "guaranteedImpressions": {
          "description": "Guaranteed impressions as a percentage. This is the percentage\nof guaranteed looks that the buyer is guaranteeing to buy.",
          "format": "int64",
          "type": "string"
        },
        "minimumDailyLooks": {
          "type": "string",
          "description": "Daily minimum looks for CPD deal types.",
          "format": "int64"
        }
      },
      "id": "GuaranteedFixedPriceTerms"
    },
    "TargetingCriteria": {
      "description": "Advertisers can target different attributes of an ad slot. For example,\nthey can choose to show ads only if the user is in the U.S. Such\ntargeting criteria can be specified as part of Shared Targeting.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The key representing the shared targeting criterion.\nTargeting criteria defined by Google ad servers will begin with GOOG_.\nThird parties may define their own keys.\nA list of permissible keys along with the acceptable values will be\nprovided as part of the external documentation.",
          "type": "string"
        },
        "inclusions": {
          "description": "The list of value to include as part of the targeting. Each value is OR'd\ntogether.",
          "type": "array",
          "items": {
            "$ref": "TargetingValue"
          }
        },
        "exclusions": {
          "description": "The list of values to exclude from targeting. Each value is AND'd\ntogether.",
          "type": "array",
          "items": {
            "$ref": "TargetingValue"
          }
        }
      },
      "id": "TargetingCriteria"
    },
    "VideoTargeting": {
      "description": "Represents targeting information about video.",
      "type": "object",
      "properties": {
        "targetedPositionTypes": {
          "description": "A list of video positions to be included.\nWhen the included list is present, the excluded list must be empty.\nWhen the excluded list is present, the included list must be empty.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "POSITION_TYPE_UNSPECIFIED",
              "PREROLL",
              "MIDROLL",
              "POSTROLL"
            ]
          },
          "enumDescriptions": [
            "A placeholder for an undefined video position.",
            "Ad is played before the video.",
            "Ad is played during the video.",
            "Ad is played after the video."
          ]
        },
        "excludedPositionTypes": {
          "description": "A list of video positions to be excluded.\nPosition types can either be included or excluded (XOR).",
          "type": "array",
          "items": {
            "enum": [
              "POSITION_TYPE_UNSPECIFIED",
              "PREROLL",
              "MIDROLL",
              "POSTROLL"
            ],
            "type": "string"
          },
          "enumDescriptions": [
            "A placeholder for an undefined video position.",
            "Ad is played before the video.",
            "Ad is played during the video.",
            "Ad is played after the video."
          ]
        }
      },
      "id": "VideoTargeting"
    },
    "Product": {
      "id": "Product",
      "description": "Note: this resource requires whitelisting for access. Please contact your\naccount manager for access to Marketplace resources.\n\nA product is a segment of inventory that a seller wishes to sell. It is\nassociated with certain terms and targeting information which helps the buyer\nknow more about the inventory.",
      "type": "object",
      "properties": {
        "availableStartTime": {
          "type": "string",
          "description": "Inventory availability dates. The start time will be truncated to seconds\nduring serving. Thus, a field specified as 3:23:34.456 (HH:mm:ss.SSS) will\nbe truncated to 3:23:34 when serving.",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "The display name for this product as set by the seller.",
          "type": "string"
        },
        "productId": {
          "description": "The unique ID for the product.",
          "type": "string"
        },
        "publisherProfileId": {
          "description": "An ID which can be used by the Publisher Profile API to get more\ninformation about the seller that created this product.",
          "type": "string"
        },
        "webPropertyCode": {
          "description": "The web-property code for the seller. This needs to be copied as is when\nadding a new deal to a proposal.",
          "type": "string"
        },
        "createTime": {
          "description": "Creation time.",
          "format": "google-datetime",
          "type": "string"
        },
        "creatorContacts": {
          "description": "Optional contact information for the creator of this product.",
          "type": "array",
          "items": {
            "$ref": "ContactInformation"
          }
        },
        "updateTime": {
          "description": "Time of last update.",
          "format": "google-datetime",
          "type": "string"
        },
        "targetingCriterion": {
          "description": "Targeting that is shared between the buyer and the seller. Each targeting\ncriterion has a specified key and for each key there is a list of inclusion\nvalue or exclusion values.",
          "type": "array",
          "items": {
            "$ref": "TargetingCriteria"
          }
        },
        "availableEndTime": {
          "description": "The proposed end time for the deal. The field will be truncated to the\norder of seconds during serving.",
          "format": "google-datetime",
          "type": "string"
        },
        "terms": {
          "$ref": "DealTerms",
          "description": "The negotiable terms of the deal."
        },
        "productRevision": {
          "description": "The revision number of the product (auto-assigned by Marketplace).",
          "format": "int64",
          "type": "string"
        },
        "seller": {
          "$ref": "Seller",
          "description": "Information about the seller that created this product."
        },
        "syndicationProduct": {
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined syndication product.",
            "This typically represents a web page.",
            "This represents a mobile property.",
            "This represents video ad formats.",
            "This represents ads shown within games."
          ],
          "enum": [
            "SYNDICATION_PRODUCT_UNSPECIFIED",
            "CONTENT",
            "MOBILE",
            "VIDEO",
            "GAMES"
          ],
          "description": "The syndication product associated with the deal."
        },
        "hasCreatorSignedOff": {
          "description": "If the creator has already signed off on the product, then the buyer can\nfinalize the deal by accepting the product as is. When copying to a\nproposal, if any of the terms are changed, then auto_finalize is\nautomatically set to false.",
          "type": "boolean"
        }
      }
    },
    "TimeOfDay": {
      "type": "object",
      "properties": {
        "nanos": {
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "type": "integer",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
          "format": "int32"
        },
        "minutes": {
          "type": "integer",
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "format": "int32"
        },
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "TimeOfDay",
      "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`."
    },
    "FilteredBidDetailRow": {
      "id": "FilteredBidDetailRow",
      "description": "The number of filtered bids with the specified dimension values, among those\nfiltered due to the requested filtering reason (i.e. creative status), that\nhave the specified detail.",
      "type": "object",
      "properties": {
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        },
        "bidCount": {
          "$ref": "MetricValue",
          "description": "The number of bids with the specified detail."
        },
        "detailId": {
          "description": "The ID of the detail. The associated value can be looked up in the\ndictionary file corresponding to the DetailType in the response message.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Size": {
      "description": "Message depicting the size of the creative. The units of width and\nheight depend on the type of the targeting.",
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "The height of the creative.",
          "format": "int32"
        },
        "width": {
          "description": "The width of the creative",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Size"
    },
    "AdSize": {
      "description": "Represents size of a single ad slot, or a creative.",
      "type": "object",
      "properties": {
        "width": {
          "description": "The width of the ad slot in pixels.\nThis field will be present only when size type is `PIXEL`.",
          "format": "int64",
          "type": "string"
        },
        "sizeType": {
          "enumDescriptions": [
            "A placeholder for an undefined size type.",
            "Ad slot with size specified by height and width in pixels.",
            "Special size to describe an interstitial ad slot.",
            "Native (mobile) ads rendered by the publisher.",
            "Fluid size (i.e., responsive size) can be resized automatically with the\nchange of outside environment."
          ],
          "enum": [
            "SIZE_TYPE_UNSPECIFIED",
            "PIXEL",
            "INTERSTITIAL",
            "NATIVE",
            "FLUID"
          ],
          "description": "The size type of the ad slot.",
          "type": "string"
        },
        "height": {
          "type": "string",
          "description": "The height of the ad slot in pixels.\nThis field will be present only when size type is `PIXEL`.",
          "format": "int64"
        }
      },
      "id": "AdSize"
    },
    "DayPart": {
      "id": "DayPart",
      "description": "Daypart targeting message that specifies if the ad can be shown\nonly during certain parts of a day/week.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The ending time of the day for the ad to show (minute level\ngranularity). The end time is exclusive. This field is not available\nfor filtering in PQL queries.",
          "$ref": "TimeOfDay"
        },
        "startTime": {
          "description": "The starting time of day for the ad to show (minute level granularity).\nThe start time is inclusive.\nThis field is not available for filtering in PQL queries.",
          "$ref": "TimeOfDay"
        },
        "dayOfWeek": {
          "description": "The day of the week to target. If unspecified, applicable to all days.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for when the day of the week is not specified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        }
      }
    },
    "TechnologyTargeting": {
      "id": "TechnologyTargeting",
      "description": "Represents targeting about various types of technology.",
      "type": "object",
      "properties": {
        "deviceCapabilityTargeting": {
          "description": "IDs of device capabilities to be included/excluded.",
          "$ref": "CriteriaTargeting"
        },
        "operatingSystemTargeting": {
          "description": "Operating system related targeting information.",
          "$ref": "OperatingSystemTargeting"
        },
        "deviceCategoryTargeting": {
          "description": "IDs of device categories to be included/excluded.",
          "$ref": "CriteriaTargeting"
        }
      }
    },
    "CreativeRestrictions": {
      "description": "Represents creative restrictions associated to Programmatic Guaranteed/\nPreferred Deal in Ad Manager.\nThis doesn't apply to Private Auction and AdX Preferred Deals.",
      "type": "object",
      "properties": {
        "creativeSpecifications": {
          "type": "array",
          "items": {
            "$ref": "CreativeSpecification"
          }
        },
        "skippableAdType": {
          "enumDescriptions": [
            "A placeholder for an undefined skippable ad type.",
            "This video ad can be skipped after 5 seconds.",
            "This video ad can be skipped after 5 seconds, and is counted as\nengaged view after 30 seconds. The creative is hosted on\nYouTube only, and viewcount of the YouTube video increments\nafter the engaged view.",
            "This video ad is not skippable."
          ],
          "enum": [
            "SKIPPABLE_AD_TYPE_UNSPECIFIED",
            "SKIPPABLE",
            "INSTREAM_SELECT",
            "NOT_SKIPPABLE"
          ],
          "description": "Skippable video ads allow viewers to skip ads after 5 seconds.",
          "type": "string"
        },
        "creativeFormat": {
          "description": "The format of the environment that the creatives will be displayed in.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined creative format.",
            "A creative that will be displayed in environments such as a browser.",
            "A video creative that will be displayed in environments such as a video\nplayer."
          ],
          "enum": [
            "CREATIVE_FORMAT_UNSPECIFIED",
            "DISPLAY",
            "VIDEO"
          ]
        }
      },
      "id": "CreativeRestrictions"
    },
    "AddDealAssociationRequest": {
      "properties": {
        "association": {
          "$ref": "CreativeDealAssociation",
          "description": "The association between a creative and a deal that should be added."
        }
      },
      "id": "AddDealAssociationRequest",
      "description": "A request for associating a deal and a creative.",
      "type": "object"
    },
    "OperatingSystemTargeting": {
      "id": "OperatingSystemTargeting",
      "description": "Represents targeting information for operating systems.",
      "type": "object",
      "properties": {
        "operatingSystemCriteria": {
          "description": "IDs of operating systems to be included/excluded.",
          "$ref": "CriteriaTargeting"
        },
        "operatingSystemVersionCriteria": {
          "$ref": "CriteriaTargeting",
          "description": "IDs of operating system versions to be included/excluded."
        }
      }
    },
    "ResumeProposalRequest": {
      "description": "Request message to resume (unpause) serving for an already-finalized\nproposal.",
      "type": "object",
      "properties": {},
      "id": "ResumeProposalRequest"
    },
    "CriteriaTargeting": {
      "type": "object",
      "properties": {
        "targetedCriteriaIds": {
          "description": "A list of numeric IDs to be included.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "excludedCriteriaIds": {
          "description": "A list of numeric IDs to be excluded.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        }
      },
      "id": "CriteriaTargeting",
      "description": "Generic targeting used for targeting dimensions that contains a list of\nincluded and excluded numeric IDs."
    },
    "TimeInterval": {
      "id": "TimeInterval",
      "description": "An interval of time, with an absolute start and end.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The timestamp marking the end of the range (exclusive) for which data is\nincluded.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "The timestamp marking the start of the range (inclusive) for which data is\nincluded.",
          "format": "google-datetime"
        }
      }
    },
    "RelativeDateRange": {
      "description": "A relative date range, specified by an offset and a duration.\nThe supported range of dates begins 30 days before today and ends today,\ni.e., the limits for these values are:\noffset_days \u003e= 0\nduration_days \u003e= 1\noffset_days + duration_days \u003c= 30",
      "type": "object",
      "properties": {
        "offsetDays": {
          "description": "The end date of the filter set, specified as the number of days before\ntoday, e.g., for a range where the last date is today: 0.",
          "format": "int32",
          "type": "integer"
        },
        "durationDays": {
          "type": "integer",
          "description": "The number of days in the requested date range, e.g., for a range spanning\ntoday: 1. For a range spanning the last 7 days: 7.",
          "format": "int32"
        }
      },
      "id": "RelativeDateRange"
    },
    "Proposal": {
      "description": "Note: this resource requires whitelisting for access. Please contact your\naccount manager for access to Marketplace resources.\n\nRepresents a proposal in the Marketplace. A proposal is the unit of\nnegotiation between a seller and a buyer and contains deals which\nare served.\n\nNote: you can not update, create, or otherwise modify Private\nAuction or Preferred Deals deals through the API.\n\nFields are updatable unless noted otherwise.",
      "type": "object",
      "properties": {
        "buyer": {
          "description": "Reference to the buyer on the proposal.\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
          "$ref": "Buyer"
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "Note"
          },
          "description": "Output only. The notes associated with this proposal."
        },
        "isRenegotiating": {
          "description": "Output only. True if the proposal is being renegotiated.",
          "type": "boolean"
        },
        "isSetupComplete": {
          "description": "Output only. True, if the buyside inventory setup is complete for this\nproposal.",
          "type": "boolean"
        },
        "proposalState": {
          "enumDescriptions": [
            "A placeholder for an undefined proposal state.",
            "The proposal is under negotiation or renegotiation.",
            "The proposal has been accepted by the buyer.",
            "The proposal has been accepted by the seller.",
            "The negotiations on the proposal were canceled and the proposal was never\nfinalized.",
            "The proposal is finalized. During renegotiation, the proposal may\nnot be in this state."
          ],
          "enum": [
            "PROPOSAL_STATE_UNSPECIFIED",
            "PROPOSED",
            "BUYER_ACCEPTED",
            "SELLER_ACCEPTED",
            "CANCELED",
            "FINALIZED"
          ],
          "description": "Output only. The current state of the proposal.",
          "type": "string"
        },
        "sellerContacts": {
          "description": "Output only. Contact information for the seller.",
          "type": "array",
          "items": {
            "$ref": "ContactInformation"
          }
        },
        "originatorRole": {
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined buyer/seller role.",
            "Specifies the role as buyer.",
            "Specifies the role as seller."
          ],
          "enum": [
            "BUYER_SELLER_ROLE_UNSPECIFIED",
            "BUYER",
            "SELLER"
          ],
          "description": "Output only. Indicates whether the buyer/seller created the proposal."
        },
        "privateAuctionId": {
          "type": "string",
          "description": "Output only. Private auction ID if this proposal is a private auction\nproposal."
        },
        "lastUpdaterOrCommentorRole": {
          "enum": [
            "BUYER_SELLER_ROLE_UNSPECIFIED",
            "BUYER",
            "SELLER"
          ],
          "description": "Output only. The role of the last user that either updated the proposal or\nleft a comment.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined buyer/seller role.",
            "Specifies the role as buyer.",
            "Specifies the role as seller."
          ]
        },
        "buyerPrivateData": {
          "$ref": "PrivateData",
          "description": "Private data for buyer. (hidden from seller)."
        },
        "displayName": {
          "description": "The name for the proposal.",
          "type": "string"
        },
        "buyerContacts": {
          "type": "array",
          "items": {
            "$ref": "ContactInformation"
          },
          "description": "Contact information for the buyer."
        },
        "billedBuyer": {
          "$ref": "Buyer",
          "description": "Output only. Reference to the buyer that will get billed for this proposal."
        },
        "updateTime": {
          "description": "Output only. The time when the proposal was last revised.",
          "format": "google-datetime",
          "type": "string"
        },
        "deals": {
          "type": "array",
          "items": {
            "$ref": "Deal"
          },
          "description": "The deals associated with this proposal. For Private Auction proposals\n(whose deals have NonGuaranteedAuctionTerms), there will only be one deal."
        },
        "proposalId": {
          "description": "Output only. The unique ID of the proposal.",
          "type": "string"
        },
        "proposalRevision": {
          "description": "Output only. The revision number for the proposal.\nEach update to the proposal or the deal causes the proposal revision number\nto auto-increment. The buyer keeps track of the last revision number they\nknow of and pass it in when making an update. If the head revision number\non the server has since incremented, then an ABORTED error is returned\nduring the update operation to let the buyer know that a subsequent update\nwas made.",
          "format": "int64",
          "type": "string"
        },
        "seller": {
          "description": "Reference to the seller on the proposal.\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
          "$ref": "Seller"
        }
      },
      "id": "Proposal"
    },
    "ListClientsResponse": {
      "type": "object",
      "properties": {
        "clients": {
          "description": "The returned list of clients.",
          "type": "array",
          "items": {
            "$ref": "Client"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListClientsRequest.pageToken\nfield in the subsequent call to the\naccounts.clients.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListClientsResponse"
    },
    "DealPauseStatus": {
      "type": "object",
      "properties": {
        "hasSellerPaused": {
          "description": "True, if the seller has paused the deal unilaterally.",
          "type": "boolean"
        },
        "buyerPauseReason": {
          "description": "The buyer's reason for pausing, if the buyer paused the deal.",
          "type": "string"
        },
        "hasBuyerPaused": {
          "description": "True, if the buyer has paused the deal unilaterally.",
          "type": "boolean"
        },
        "firstPausedBy": {
          "description": "The role of the person who first paused this deal.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined buyer/seller role.",
            "Specifies the role as buyer.",
            "Specifies the role as seller."
          ],
          "enum": [
            "BUYER_SELLER_ROLE_UNSPECIFIED",
            "BUYER",
            "SELLER"
          ]
        },
        "sellerPauseReason": {
          "description": "The seller's reason for pausing, if the seller paused the deal.",
          "type": "string"
        }
      },
      "id": "DealPauseStatus",
      "description": "Tracks which parties (if any) have paused a deal.\nThe deal is considered paused if either hasBuyerPaused or\nhasSellPaused is true."
    },
    "ListClientUserInvitationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListClientUserInvitationsRequest.pageToken\nfield in the subsequent call to the\nclients.invitations.list\nmethod to retrieve the next\npage of results."
        },
        "invitations": {
          "description": "The returned list of client users.",
          "type": "array",
          "items": {
            "$ref": "ClientUserInvitation"
          }
        }
      },
      "id": "ListClientUserInvitationsResponse"
    },
    "LocationContext": {
      "type": "object",
      "properties": {
        "geoCriteriaIds": {
          "description": "IDs representing the geo location for this context.\nPlease refer to the\n[geo-table.csv](https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv)\nfile for different geo criteria IDs.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "id": "LocationContext",
      "description": "Output only. The Geo criteria the restriction applies to."
    },
    "PlatformContext": {
      "description": "Output only. The type of platform the restriction applies to.",
      "type": "object",
      "properties": {
        "platforms": {
          "description": "The platforms this restriction applies to.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "DESKTOP",
              "ANDROID",
              "IOS"
            ]
          },
          "enumDescriptions": [
            "Desktop platform.",
            "Android platform.",
            "iOS platform."
          ]
        }
      },
      "id": "PlatformContext"
    },
    "MetricValue": {
      "description": "A metric value, with an expected value and a variance; represents a count\nthat may be either exact or estimated (i.e. when sampled).",
      "type": "object",
      "properties": {
        "value": {
          "description": "The expected value of the metric.",
          "format": "int64",
          "type": "string"
        },
        "variance": {
          "description": "The variance (i.e. square of the standard deviation) of the metric value.\nIf value is exact, variance is 0.\nCan be used to calculate margin of error as a percentage of value, using\nthe following formula, where Z is the standard constant that depends on the\ndesired size of the confidence interval (e.g. for 90% confidence interval,\nuse Z = 1.645):\n\n  marginOfError = 100 * Z * sqrt(variance) / value",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "MetricValue"
    },
    "AdTechnologyProviders": {
      "description": "Detected ad technology provider information.",
      "type": "object",
      "properties": {
        "hasUnidentifiedProvider": {
          "description": "Whether the creative contains an unidentified ad technology provider.\n\nIf true for a given creative, any bid submitted with that creative for an\nimpression that will serve to an EEA user will be filtered before the\nauction.",
          "type": "boolean"
        },
        "detectedProviderIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "The detected ad technology provider IDs for this creative.\nSee https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for\nmapping of provider ID to provided name, a privacy policy URL, and a list\nof domains which can be attributed to the provider.\n\nIf the creative contains provider IDs that are outside of those listed in\nthe `BidRequest.adslot.consented_providers_settings.consented_providers`\nfield on the (Google bid\nprotocol)[https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto]\nand the\n`BidRequest.user.ext.consented_providers_settings.consented_providers`\nfield on the (OpenRTB\nprotocol)[https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto],\nand a bid is submitted with that creative for an impression that will\nserve to an EEA user, the bid will be filtered before the auction."
        }
      },
      "id": "AdTechnologyProviders"
    },
    "CancelNegotiationRequest": {
      "description": "Request to cancel an ongoing negotiation.",
      "type": "object",
      "properties": {},
      "id": "CancelNegotiationRequest"
    },
    "ClientUser": {
      "description": "A client user is created under a client buyer and has restricted access to\nthe Marketplace and certain other sections of the Authorized Buyers UI based\non the role granted to the associated client buyer.\n\nThe only way a new client user can be created is via accepting an\nemail invitation\n(see the\naccounts.clients.invitations.create\nmethod).\n\nAll fields are required unless otherwise specified.",
      "type": "object",
      "properties": {
        "clientAccountId": {
          "description": "Numerical account ID of the client buyer\nwith which the user is associated; the\nbuyer must be a client of the current sponsor buyer.\nThe value of this field is ignored in an update operation.",
          "format": "int64",
          "type": "string"
        },
        "status": {
          "enumDescriptions": [
            "A placeholder for an undefined user status.",
            "A user who was already created but hasn't accepted the invitation yet.",
            "A user that is currently active.",
            "A user that is currently disabled."
          ],
          "enum": [
            "USER_STATUS_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "DISABLED"
          ],
          "description": "The status of the client user.",
          "type": "string"
        },
        "userId": {
          "description": "The unique numerical ID of the client user\nthat has accepted an invitation.\nThe value of this field is ignored in an update operation.",
          "format": "int64",
          "type": "string"
        },
        "email": {
          "description": "User's email address. The value of this field\nis ignored in an update operation.",
          "type": "string"
        }
      },
      "id": "ClientUser"
    },
    "InventorySizeTargeting": {
      "properties": {
        "excludedInventorySizes": {
          "description": "A list of inventory sizes to be excluded.",
          "type": "array",
          "items": {
            "$ref": "AdSize"
          }
        },
        "targetedInventorySizes": {
          "description": "A list of inventory sizes to be included.",
          "type": "array",
          "items": {
            "$ref": "AdSize"
          }
        }
      },
      "id": "InventorySizeTargeting",
      "description": "Represents the size of an ad unit that can be targeted on an ad\nrequest. It only applies to Private Auction, AdX Preferred Deals and\nAuction Packages. This targeting does not apply to Programmatic Guaranteed\nand Preferred Deals in Ad Manager.",
      "type": "object"
    },
    "MobileApplicationTargeting": {
      "id": "MobileApplicationTargeting",
      "description": "Mobile application targeting settings.",
      "type": "object",
      "properties": {
        "firstPartyTargeting": {
          "$ref": "FirstPartyMobileApplicationTargeting",
          "description": "Publisher owned apps to be targeted or excluded by the publisher to\ndisplay the ads in."
        }
      }
    },
    "RemoveDealAssociationRequest": {
      "description": "A request for removing the association between a deal and a creative.",
      "type": "object",
      "properties": {
        "association": {
          "description": "The association between a creative and a deal that should be removed.",
          "$ref": "CreativeDealAssociation"
        }
      },
      "id": "RemoveDealAssociationRequest"
    },
    "MarketplaceTargeting": {
      "type": "object",
      "properties": {
        "videoTargeting": {
          "$ref": "VideoTargeting",
          "description": "Video targeting information."
        },
        "technologyTargeting": {
          "$ref": "TechnologyTargeting",
          "description": "Technology targeting information, e.g., operating system, device category."
        },
        "placementTargeting": {
          "$ref": "PlacementTargeting",
          "description": "Placement targeting information, e.g., URL, mobile applications."
        },
        "geoTargeting": {
          "description": "Geo criteria IDs to be included/excluded.",
          "$ref": "CriteriaTargeting"
        },
        "inventorySizeTargeting": {
          "$ref": "InventorySizeTargeting",
          "description": "Inventory sizes to be included/excluded."
        }
      },
      "id": "MarketplaceTargeting",
      "description": "Targeting represents different criteria that can be used by advertisers to\ntarget ad inventory. For example, they can choose to target ad requests only\nif the user is in the US.\nMultiple types of targeting are always applied as a logical AND, unless noted\notherwise."
    },
    "PrivateData": {
      "type": "object",
      "properties": {
        "referenceId": {
          "description": "A buyer or seller specified reference ID. This can be queried in the list\noperations (max-length: 1024 unicode code units).",
          "type": "string"
        }
      },
      "id": "PrivateData",
      "description": "Buyers are allowed to store certain types of private data in a proposal/deal."
    },
    "Date": {
      "id": "Date",
      "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "type": "integer",
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
          "format": "int32"
        }
      }
    },
    "RowDimensions": {
      "description": "A response may include multiple rows, breaking down along various dimensions.\nEncapsulates the values of all dimensions for a given row.",
      "type": "object",
      "properties": {
        "timeInterval": {
          "$ref": "TimeInterval",
          "description": "The time interval that this row represents."
        },
        "publisherIdentifier": {
          "type": "string",
          "description": "The publisher identifier for this row, if a breakdown by\n[BreakdownDimension.PUBLISHER_IDENTIFIER](https://developers.google.com/authorized-buyers/apis/reference/rest/v2beta1/bidders.accounts.filterSets#FilterSet.BreakdownDimension)\nwas requested."
        }
      },
      "id": "RowDimensions"
    },
    "CompleteSetupRequest": {
      "type": "object",
      "properties": {},
      "id": "CompleteSetupRequest",
      "description": "Request message for indicating that the proposal's setup step is complete."
    },
    "PlacementTargeting": {
      "type": "object",
      "properties": {
        "urlTargeting": {
          "description": "URLs to be included/excluded.",
          "$ref": "UrlTargeting"
        },
        "mobileApplicationTargeting": {
          "description": "Mobile application targeting information in a deal.\nThis doesn't apply to Auction Packages.",
          "$ref": "MobileApplicationTargeting"
        }
      },
      "id": "PlacementTargeting",
      "description": "Represents targeting about where the ads can appear, e.g., certain sites or\nmobile applications.\nDifferent placement targeting types will be logically OR'ed."
    },
    "Seller": {
      "id": "Seller",
      "description": "Represents a seller of inventory. Each seller is identified by a unique\nAd Manager account ID.",
      "type": "object",
      "properties": {
        "subAccountId": {
          "description": "Optional sub-account ID for the seller.",
          "type": "string"
        },
        "accountId": {
          "description": "The unique ID for the seller. The seller fills in this field.\nThe seller account ID is then available to buyer in the product.",
          "type": "string"
        }
      }
    },
    "UrlTargeting": {
      "description": "Represents a list of targeted and excluded URLs (e.g., google.com).\nFor Private Auction and AdX Preferred Deals, URLs are either included or\nexcluded.\nFor Programmatic Guaranteed and Preferred Deals, this doesn't\napply.",
      "type": "object",
      "properties": {
        "targetedUrls": {
          "description": "A list of URLs to be included.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedUrls": {
          "description": "A list of URLs to be excluded.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "UrlTargeting"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "DayPartTargeting": {
      "description": "Specifies the day part targeting criteria.",
      "type": "object",
      "properties": {
        "dayParts": {
          "description": "A list of day part targeting criterion.",
          "type": "array",
          "items": {
            "$ref": "DayPart"
          }
        },
        "timeZoneType": {
          "enum": [
            "TIME_ZONE_SOURCE_UNSPECIFIED",
            "PUBLISHER",
            "USER"
          ],
          "description": "The timezone to use for interpreting the day part targeting.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined time zone source.",
            "Use publisher's time zone setting.",
            "Use the user's time zone setting."
          ]
        }
      },
      "id": "DayPartTargeting"
    },
    "ListFilteredBidsResponse": {
      "description": "Response message for listing all reasons that bids were filtered from the\nauction.",
      "type": "object",
      "properties": {
        "creativeStatusRows": {
          "type": "array",
          "items": {
            "$ref": "CreativeStatusRow"
          },
          "description": "List of rows, with counts of filtered bids aggregated by filtering reason\n(i.e. creative status)."
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListFilteredBidsRequest.pageToken\nfield in the subsequent call to the filteredBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListFilteredBidsResponse"
    },
    "SecurityContext": {
      "description": "Output only. A security context.",
      "type": "object",
      "properties": {
        "securities": {
          "type": "array",
          "items": {
            "enum": [
              "INSECURE",
              "SSL"
            ],
            "type": "string"
          },
          "enumDescriptions": [
            "Matches impressions that require insecure compatibility.",
            "Matches impressions that require SSL compatibility."
          ],
          "description": "The security types in this context."
        }
      },
      "id": "SecurityContext"
    },
    "ListFilteredBidRequestsResponse": {
      "id": "ListFilteredBidRequestsResponse",
      "description": "Response message for listing all reasons that bid requests were filtered and\nnot sent to the buyer.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListFilteredBidRequestsRequest.pageToken\nfield in the subsequent call to the filteredBidRequests.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "calloutStatusRows": {
          "description": "List of rows, with counts of filtered bid requests aggregated by callout\nstatus.",
          "type": "array",
          "items": {
            "$ref": "CalloutStatusRow"
          }
        }
      }
    },
    "HtmlContent": {
      "description": "HTML content for a creative.",
      "type": "object",
      "properties": {
        "height": {
          "description": "The height of the HTML snippet in pixels.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "description": "The width of the HTML snippet in pixels.",
          "format": "int32",
          "type": "integer"
        },
        "snippet": {
          "type": "string",
          "description": "The HTML snippet that displays the ad when inserted in the web page."
        }
      },
      "id": "HtmlContent"
    },
    "ListCreativesResponse": {
      "properties": {
        "creatives": {
          "description": "The list of creatives.",
          "type": "array",
          "items": {
            "$ref": "Creative"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListCreativesRequest.page_token\nfield in the subsequent call to `ListCreatives` method to retrieve the next\npage of results.",
          "type": "string"
        }
      },
      "id": "ListCreativesResponse",
      "description": "A response for listing creatives.",
      "type": "object"
    },
    "ListProposalsResponse": {
      "description": "Response message for listing proposals.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "proposals": {
          "description": "The list of proposals.",
          "type": "array",
          "items": {
            "$ref": "Proposal"
          }
        }
      },
      "id": "ListProposalsResponse"
    },
    "VideoContent": {
      "description": "Video content for a creative.",
      "type": "object",
      "properties": {
        "videoUrl": {
          "description": "The URL to fetch a video ad.",
          "type": "string"
        },
        "videoVastXml": {
          "description": "The contents of a VAST document for a video ad.\nThis document should conform to the VAST 2.0 or 3.0 standard.",
          "type": "string"
        }
      },
      "id": "VideoContent"
    },
    "Deal": {
      "description": "A deal represents a segment of inventory for displaying ads on.\nA proposal can contain multiple deals. A deal contains the terms and\ntargeting information that is used for serving.",
      "type": "object",
      "properties": {
        "creativePreApprovalPolicy": {
          "enum": [
            "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED",
            "SELLER_PRE_APPROVAL_REQUIRED",
            "SELLER_PRE_APPROVAL_NOT_REQUIRED"
          ],
          "description": "Output only. Specifies the creative pre-approval policy.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined creative pre-approval policy.",
            "The seller needs to approve each creative before it can serve.",
            "The seller does not need to approve each creative before it can serve."
          ]
        },
        "externalDealId": {
          "description": "Output only. The external deal ID assigned to this deal once the deal is\nfinalized. This is the deal ID that shows up in serving/reporting etc.",
          "type": "string"
        },
        "deliveryControl": {
          "$ref": "DeliveryControl",
          "description": "The set of fields around delivery control that are interesting for a buyer\nto see but are non-negotiable. These are set by the publisher."
        },
        "creativeRestrictions": {
          "$ref": "CreativeRestrictions",
          "description": "Output only. Restricitions about the creatives associated with the deal\n(i.e., size) This is available for Programmatic Guaranteed/Preferred Deals\nin Ad Manager."
        },
        "dealServingMetadata": {
          "description": "Output only. Metadata about the serving status of this deal.",
          "$ref": "DealServingMetadata"
        },
        "description": {
          "description": "Description for the deal terms.",
          "type": "string"
        },
        "programmaticCreativeSource": {
          "description": "Output only. Specifies the creative source for programmatic deals.\nPUBLISHER means creative is provided by seller and ADVERTISER means\ncreative is provided by buyer.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined programmatic creative source.",
            "The advertiser provides the creatives.",
            "The publisher provides the creatives to be served."
          ],
          "enum": [
            "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED",
            "ADVERTISER",
            "PUBLISHER"
          ]
        },
        "buyerPrivateData": {
          "description": "Buyer private data (hidden from seller).",
          "$ref": "PrivateData"
        },
        "displayName": {
          "description": "The name of the deal.",
          "type": "string"
        },
        "webPropertyCode": {
          "description": "The web property code for the seller copied over from the product.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time when the deal was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "targetingCriterion": {
          "description": "The shared targeting visible to buyers and sellers. Each shared\ntargeting entity is AND'd together.",
          "type": "array",
          "items": {
            "$ref": "TargetingCriteria"
          }
        },
        "dealId": {
          "description": "Output only. A unique deal ID for the deal (server-assigned).",
          "type": "string"
        },
        "proposalId": {
          "description": "Output only. ID of the proposal that this deal is part of.",
          "type": "string"
        },
        "availableEndTime": {
          "description": "Proposed flight end time of the deal.\nThis will generally be stored in a granularity of a second.\nA value is not required for Private Auction deals or Preferred Deals.",
          "format": "google-datetime",
          "type": "string"
        },
        "syndicationProduct": {
          "description": "The syndication product associated with the deal.\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined syndication product.",
            "This typically represents a web page.",
            "This represents a mobile property.",
            "This represents video ad formats.",
            "This represents ads shown within games."
          ],
          "enum": [
            "SYNDICATION_PRODUCT_UNSPECIFIED",
            "CONTENT",
            "MOBILE",
            "VIDEO",
            "GAMES"
          ]
        },
        "createProductId": {
          "description": "The product ID from which this deal was created.\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
          "type": "string"
        },
        "creativeSafeFrameCompatibility": {
          "enum": [
            "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED",
            "COMPATIBLE",
            "INCOMPATIBLE"
          ],
          "description": "Output only. Specifies whether the creative is safeFrame compatible.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined creative safe-frame compatibility.",
            "The creatives need to be compatible with the safe frame option.",
            "The creatives can be incompatible with the safe frame option."
          ]
        },
        "isSetupComplete": {
          "description": "Output only. True, if the buyside inventory setup is complete for this\ndeal.",
          "type": "boolean"
        },
        "createProductRevision": {
          "description": "Optional revision number of the product that the deal was created from.\nIf present on create, and the server `product_revision` has advanced sinced\nthe passed-in `create_product_revision`, an `ABORTED` error will be\nreturned.\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
          "format": "int64",
          "type": "string"
        },
        "sellerContacts": {
          "description": "Output only. Seller contact information for the deal.",
          "type": "array",
          "items": {
            "$ref": "ContactInformation"
          }
        },
        "availableStartTime": {
          "description": "Optional proposed flight start time of the deal.\nThis will generally be stored in the granularity of one second since deal\nserving starts at seconds boundary. Any time specified with more\ngranularity (e.g., in milliseconds) will be truncated towards the start of\ntime in seconds.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time of the deal creation.",
          "format": "google-datetime",
          "type": "string"
        },
        "dealTerms": {
          "$ref": "DealTerms",
          "description": "The negotiable terms of the deal."
        },
        "targeting": {
          "$ref": "MarketplaceTargeting",
          "description": "Output only. Specifies the subset of inventory targeted by the deal."
        }
      },
      "id": "Deal"
    },
    "ImpressionMetricsRow": {
      "description": "The set of metrics that are measured in numbers of impressions, representing\nhow many impressions with the specified dimension values were considered\neligible at each stage of the bidding funnel.",
      "type": "object",
      "properties": {
        "availableImpressions": {
          "$ref": "MetricValue",
          "description": "The number of impressions available to the buyer on Ad Exchange.\nIn some cases this value may be unavailable."
        },
        "rowDimensions": {
          "$ref": "RowDimensions",
          "description": "The values of all dimensions associated with metric values in this row."
        },
        "inventoryMatches": {
          "description": "The number of impressions that match the buyer's inventory pretargeting.",
          "$ref": "MetricValue"
        },
        "bidRequests": {
          "$ref": "MetricValue",
          "description": "The number of impressions for which Ad Exchange sent the buyer a bid\nrequest."
        },
        "responsesWithBids": {
          "description": "The number of impressions for which Ad Exchange received a response from\nthe buyer that contained at least one applicable bid.",
          "$ref": "MetricValue"
        },
        "successfulResponses": {
          "$ref": "MetricValue",
          "description": "The number of impressions for which the buyer successfully sent a response\nto Ad Exchange."
        }
      },
      "id": "ImpressionMetricsRow"
    },
    "CreativeSpecification": {
      "description": "Represents information for a creative that is associated with a Programmatic\nGuaranteed/Preferred Deal in Ad Manager.",
      "type": "object",
      "properties": {
        "creativeSize": {
          "$ref": "AdSize",
          "description": "The size of the creative."
        },
        "creativeCompanionSizes": {
          "type": "array",
          "items": {
            "$ref": "AdSize"
          },
          "description": "Companion sizes may be filled in only when this is a video creative."
        }
      },
      "id": "CreativeSpecification"
    },
    "ListPublisherProfilesResponse": {
      "description": "Response message for profiles visible to the buyer.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "List pagination support"
        },
        "publisherProfiles": {
          "type": "array",
          "items": {
            "$ref": "PublisherProfile"
          },
          "description": "The list of matching publisher profiles."
        }
      },
      "id": "ListPublisherProfilesResponse"
    },
    "ListBidResponseErrorsResponse": {
      "description": "Response message for listing all reasons that bid responses resulted in an\nerror.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListBidResponseErrorsRequest.pageToken\nfield in the subsequent call to the bidResponseErrors.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "calloutStatusRows": {
          "description": "List of rows, with counts of bid responses aggregated by callout status.",
          "type": "array",
          "items": {
            "$ref": "CalloutStatusRow"
          }
        }
      },
      "id": "ListBidResponseErrorsResponse"
    },
    "RealtimeTimeRange": {
      "description": "An open-ended realtime time range specified by the start timestamp.\nFor filter sets that specify a realtime time range RTB metrics continue to\nbe aggregated throughout the lifetime of the filter set.",
      "type": "object",
      "properties": {
        "startTimestamp": {
          "description": "The start timestamp of the real-time RTB metrics aggregation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "RealtimeTimeRange"
    },
    "CreativeSize": {
      "description": "Specifies the size of the creative.",
      "type": "object",
      "properties": {
        "allowedFormats": {
          "enumDescriptions": [
            "A placeholder for an undefined allowed format.",
            "An audio-only ad (without any video)."
          ],
          "description": "What formats are allowed by the publisher.\nIf this repeated field is empty then all formats are allowed.\nFor example, if this field contains AllowedFormatType.AUDIO then the\npublisher only allows an audio ad (without any video).",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "AUDIO"
            ]
          }
        },
        "size": {
          "$ref": "Size",
          "description": "For regular or video creative size type, specifies the size\nof the creative"
        },
        "companionSizes": {
          "description": "For video creatives specifies the sizes of companion ads (if present).\nCompanion sizes may be filled in only when creative_size_type = VIDEO",
          "type": "array",
          "items": {
            "$ref": "Size"
          }
        },
        "skippableAdType": {
          "enum": [
            "SKIPPABLE_AD_TYPE_UNSPECIFIED",
            "GENERIC",
            "INSTREAM_SELECT",
            "NOT_SKIPPABLE"
          ],
          "description": "The type of skippable ad for this creative. It will have a value only if\ncreative_size_type = CreativeSizeType.VIDEO.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined skippable ad type.",
            "This video ad can be skipped after 5 seconds.",
            "This video ad can be skipped after 5 seconds, and count as\nengaged view after 30 seconds. The creative is hosted on\nYouTube only, and viewcount of the YouTube video increments\nafter the engaged view.",
            "This video ad is not skippable."
          ]
        },
        "creativeSizeType": {
          "enum": [
            "CREATIVE_SIZE_TYPE_UNSPECIFIED",
            "REGULAR",
            "INTERSTITIAL",
            "VIDEO",
            "NATIVE"
          ],
          "description": "The creative size type.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined creative size type.",
            "The creative is a regular desktop creative.",
            "The creative is an interstitial creative.",
            "The creative is a video creative.",
            "The creative is a native (mobile) creative."
          ]
        },
        "nativeTemplate": {
          "enumDescriptions": [
            "A placeholder for an undefined native template.",
            "The creative is linked to native content ad.",
            "The creative is linked to native app install ad.",
            "The creative is linked to native video content ad.",
            "The creative is linked to native video app install ad."
          ],
          "enum": [
            "UNKNOWN_NATIVE_TEMPLATE",
            "NATIVE_CONTENT_AD",
            "NATIVE_APP_INSTALL_AD",
            "NATIVE_VIDEO_CONTENT_AD",
            "NATIVE_VIDEO_APP_INSTALL_AD"
          ],
          "description": "Output only. The native template for this creative. It will have a value\nonly if creative_size_type = CreativeSizeType.NATIVE.",
          "type": "string"
        }
      },
      "id": "CreativeSize"
    },
    "NonBillableWinningBidStatusRow": {
      "description": "The number of winning bids with the specified dimension values for which the\nbuyer was not billed, as described by the specified status.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status specifying why the winning bids were not billed.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined status.\nThis value will never be returned in responses.",
            "The buyer was not billed because the ad was not rendered by the\npublisher.",
            "The buyer was not billed because the impression won by the bid was\ndetermined to be invalid."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "AD_NOT_RENDERED",
            "INVALID_IMPRESSION"
          ]
        },
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        },
        "bidCount": {
          "description": "The number of bids with the specified status.",
          "$ref": "MetricValue"
        }
      },
      "id": "NonBillableWinningBidStatusRow"
    },
    "NonGuaranteedFixedPriceTerms": {
      "type": "object",
      "properties": {
        "fixedPrices": {
          "description": "Fixed price for the specified buyer.",
          "type": "array",
          "items": {
            "$ref": "PricePerBuyer"
          }
        }
      },
      "id": "NonGuaranteedFixedPriceTerms",
      "description": "Terms for Preferred Deals. Note that Preferred Deals cannot be created via\nthe API at this time, but can be returned in a get or list request."
    },
    "ListProductsResponse": {
      "description": "Response message for listing products visible to the buyer.",
      "type": "object",
      "properties": {
        "products": {
          "description": "The list of matching products at their head revision number.",
          "type": "array",
          "items": {
            "$ref": "Product"
          }
        },
        "nextPageToken": {
          "description": "List pagination support.",
          "type": "string"
        }
      },
      "id": "ListProductsResponse"
    },
    "AbsoluteDateRange": {
      "description": "An absolute date range, specified by its start date and end date.\nThe supported range of dates begins 30 days before today and ends today.\nValidity checked upon filter set creation. If a filter set with an absolute\ndate range is run at a later date more than 30 days after start_date, it will\nfail.",
      "type": "object",
      "properties": {
        "endDate": {
          "description": "The end date of the range (inclusive).\nMust be within the 30 days leading up to current date, and must be equal to\nor after start_date.",
          "$ref": "Date"
        },
        "startDate": {
          "$ref": "Date",
          "description": "The start date of the range (inclusive).\nMust be within the 30 days leading up to current date, and must be equal to\nor before end_date."
        }
      },
      "id": "AbsoluteDateRange"
    },
    "Price": {
      "description": "Represents a price and a pricing type for a product / deal.",
      "type": "object",
      "properties": {
        "pricingType": {
          "description": "The pricing type for the deal/product. (default: CPM)",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined pricing type. If the pricing type is\nunpsecified, `COST_PER_MILLE` will be used instead.",
            "Cost per thousand impressions.",
            "Cost per day"
          ],
          "enum": [
            "PRICING_TYPE_UNSPECIFIED",
            "COST_PER_MILLE",
            "COST_PER_DAY"
          ]
        },
        "amount": {
          "description": "The actual price with currency specified.",
          "$ref": "Money"
        }
      },
      "id": "Price"
    },
    "PauseProposalRequest": {
      "description": "Request message to pause serving for an already-finalized proposal.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason why the proposal is being paused.\nThis human readable message will be displayed in the seller's UI.\n(Max length: 1000 unicode code units.)",
          "type": "string"
        }
      },
      "id": "PauseProposalRequest"
    },
    "WatchCreativeRequest": {
      "description": "A request for watching changes to creative Status.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "The Pub/Sub topic to publish notifications to.\nThis topic must already exist and must give permission to\nad-exchange-buyside-reports@google.com to write to the topic.\nThis should be the full resource name in\n\"projects/{project_id}/topics/{topic_id}\" format.",
          "type": "string"
        }
      },
      "id": "WatchCreativeRequest"
    },
    "FilteredBidCreativeRow": {
      "description": "The number of filtered bids with the specified dimension values that have the\nspecified creative.",
      "type": "object",
      "properties": {
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        },
        "bidCount": {
          "$ref": "MetricValue",
          "description": "The number of bids with the specified creative."
        },
        "creativeId": {
          "description": "The ID of the creative.",
          "type": "string"
        }
      },
      "id": "FilteredBidCreativeRow"
    },
    "NativeContent": {
      "description": "Native content for a creative.",
      "type": "object",
      "properties": {
        "body": {
          "description": "A long description of the ad.",
          "type": "string"
        },
        "starRating": {
          "type": "number",
          "description": "The app rating in the app store. Must be in the range [0-5].",
          "format": "double"
        },
        "videoUrl": {
          "description": "The URL to fetch a native video ad.",
          "type": "string"
        },
        "clickLinkUrl": {
          "description": "The URL that the browser/SDK will load when the user clicks the ad.",
          "type": "string"
        },
        "logo": {
          "$ref": "Image",
          "description": "A smaller image, for the advertiser's logo."
        },
        "priceDisplayText": {
          "description": "The price of the promoted app including currency info.",
          "type": "string"
        },
        "image": {
          "$ref": "Image",
          "description": "A large image."
        },
        "clickTrackingUrl": {
          "description": "The URL to use for click tracking.",
          "type": "string"
        },
        "advertiserName": {
          "description": "The name of the advertiser or sponsor, to be displayed in the ad creative.",
          "type": "string"
        },
        "storeUrl": {
          "description": "The URL to the app store to purchase/download the promoted app.",
          "type": "string"
        },
        "headline": {
          "description": "A short title for the ad.",
          "type": "string"
        },
        "appIcon": {
          "description": "The app icon, for app download ads.",
          "$ref": "Image"
        },
        "callToAction": {
          "description": "A label for the button that the user is supposed to click.",
          "type": "string"
        }
      },
      "id": "NativeContent"
    },
    "ListBidResponsesWithoutBidsResponse": {
      "type": "object",
      "properties": {
        "bidResponseWithoutBidsStatusRows": {
          "type": "array",
          "items": {
            "$ref": "BidResponseWithoutBidsStatusRow"
          },
          "description": "List of rows, with counts of bid responses without bids aggregated by\nstatus."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListBidResponsesWithoutBidsRequest.pageToken\nfield in the subsequent call to the bidResponsesWithoutBids.list\nmethod to retrieve the next page of results."
        }
      },
      "id": "ListBidResponsesWithoutBidsResponse",
      "description": "Response message for listing all reasons that bid responses were considered\nto have no applicable bids."
    },
    "ServingContext": {
      "type": "object",
      "properties": {
        "platform": {
          "description": "Matches impressions coming from a particular platform.",
          "$ref": "PlatformContext"
        },
        "location": {
          "$ref": "LocationContext",
          "description": "Matches impressions coming from users *or* publishers in a specific\nlocation."
        },
        "auctionType": {
          "description": "Matches impressions for a particular auction type.",
          "$ref": "AuctionContext"
        },
        "all": {
          "description": "Matches all contexts.",
          "type": "string",
          "enumDescriptions": [
            "A simple context."
          ],
          "enum": [
            "SIMPLE_CONTEXT"
          ]
        },
        "appType": {
          "description": "Matches impressions for a particular app type.",
          "$ref": "AppContext"
        },
        "securityType": {
          "$ref": "SecurityContext",
          "description": "Matches impressions for a particular security type."
        }
      },
      "id": "ServingContext",
      "description": "The serving context for this restriction."
    },
    "Image": {
      "description": "An image resource. You may provide a larger image than was requested,\nso long as the aspect ratio is preserved.",
      "type": "object",
      "properties": {
        "height": {
          "description": "Image height in pixels.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "description": "Image width in pixels.",
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "type": "string",
          "description": "The URL of the image."
        }
      },
      "id": "Image"
    },
    "FirstPartyMobileApplicationTargeting": {
      "description": "Represents a list of targeted and excluded mobile application IDs that\npublishers own.\nMobile application IDs are from App Store and Google Play Store.\nAndroid App ID, for example, com.google.android.apps.maps, can be found in\nGoogle Play Store URL.\niOS App ID (which is a number) can be found at the end of iTunes store URL.\nFirst party mobile applications is either included or excluded.",
      "type": "object",
      "properties": {
        "targetedAppIds": {
          "description": "A list of application IDs to be included.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedAppIds": {
          "description": "A list of application IDs to be excluded.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "FirstPartyMobileApplicationTargeting"
    },
    "ListFilterSetsResponse": {
      "id": "ListFilterSetsResponse",
      "description": "Response message for listing filter sets.",
      "type": "object",
      "properties": {
        "filterSets": {
          "description": "The filter sets belonging to the buyer.",
          "type": "array",
          "items": {
            "$ref": "FilterSet"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListFilterSetsRequest.pageToken\nfield in the subsequent call to the\naccounts.filterSets.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "BidResponseWithoutBidsStatusRow": {
      "description": "The number of impressions with the specified dimension values that were\nconsidered to have no applicable bids, as described by the specified status.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status specifying why the bid responses were considered to have no\napplicable bids.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined status.\nThis value will never be returned in responses.",
            "The response had no bids.",
            "The response had no bids for the specified account, though it may have\nincluded bids on behalf of other accounts.",
            "The response had no bids for the specified deal, though it may have\nincluded bids on other deals on behalf of the account to which the deal\nbelongs."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "RESPONSES_WITHOUT_BIDS",
            "RESPONSES_WITHOUT_BIDS_FOR_ACCOUNT",
            "RESPONSES_WITHOUT_BIDS_FOR_DEAL"
          ]
        },
        "rowDimensions": {
          "$ref": "RowDimensions",
          "description": "The values of all dimensions associated with metric values in this row."
        },
        "impressionCount": {
          "$ref": "MetricValue",
          "description": "The number of impressions for which there was a bid response with the\nspecified status."
        }
      },
      "id": "BidResponseWithoutBidsStatusRow"
    },
    "ClientUserInvitation": {
      "type": "object",
      "properties": {
        "invitationId": {
          "description": "The unique numerical ID of the invitation that is sent to the user.\nThe value of this field is ignored in create operations.",
          "format": "int64",
          "type": "string"
        },
        "email": {
          "description": "The email address to which the invitation is sent. Email\naddresses should be unique among all client users under each sponsor\nbuyer.",
          "type": "string"
        },
        "clientAccountId": {
          "description": "Numerical account ID of the client buyer\nthat the invited user is associated with.\nThe value of this field is ignored in create operations.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "ClientUserInvitation",
      "description": "An invitation for a new client user to get access to the Authorized Buyers\nUI. All fields are required unless otherwise specified."
    },
    "PricePerBuyer": {
      "type": "object",
      "properties": {
        "advertiserIds": {
          "description": "The list of advertisers for this price when associated with this buyer.\nIf empty, all advertisers with this buyer pay this price.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "buyer": {
          "description": "The buyer who will pay this price. If unset, all buyers can pay this price\n(if the\nadvertisers match, and there's no more specific rule matching the buyer).",
          "$ref": "Buyer"
        },
        "price": {
          "$ref": "Price",
          "description": "The specified price."
        }
      },
      "id": "PricePerBuyer",
      "description": "Used to specify pricing rules for buyers/advertisers. Each PricePerBuyer in\na product can become 0 or 1 deals. To check if there is a PricePerBuyer for\na particular buyer or buyer/advertiser pair, we look for the most specific\nmatching rule - we first look for a rule matching the buyer and advertiser,\nnext a rule with the buyer but an empty advertiser list, and otherwise look\nfor a matching rule where no buyer is set."
    },
    "ListClientUsersResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListClientUsersRequest.pageToken\nfield in the subsequent call to the\nclients.invitations.list\nmethod to retrieve the next\npage of results.",
          "type": "string"
        },
        "users": {
          "description": "The returned list of client users.",
          "type": "array",
          "items": {
            "$ref": "ClientUser"
          }
        }
      },
      "id": "ListClientUsersResponse",
      "type": "object"
    },
    "ListCreativeStatusBreakdownByDetailResponse": {
      "description": "Response message for listing all details associated with a given filtered bid\nreason.",
      "type": "object",
      "properties": {
        "filteredBidDetailRows": {
          "description": "List of rows, with counts of bids with a given creative status aggregated\nby detail.",
          "type": "array",
          "items": {
            "$ref": "FilteredBidDetailRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListCreativeStatusBreakdownByDetailRequest.pageToken\nfield in the subsequent call to the filteredBids.details.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "detailType": {
          "enumDescriptions": [
            "A placeholder for an undefined status.\nThis value will never be returned in responses.",
            "Indicates that the detail ID refers to a creative attribute; see\n[publisher-excludable-creative-attributes](https://developers.google.com/authorized-buyers/rtb/downloads/publisher-excludable-creative-attributes).",
            "Indicates that the detail ID refers to a vendor; see\n[vendors](https://developers.google.com/authorized-buyers/rtb/downloads/vendors).",
            "Indicates that the detail ID refers to a sensitive category; see\n[ad-sensitive-categories](https://developers.google.com/authorized-buyers/rtb/downloads/ad-sensitive-categories).",
            "Indicates that the detail ID refers to a product category; see\n[ad-product-categories](https://developers.google.com/authorized-buyers/rtb/downloads/ad-product-categories).",
            "Indicates that the detail ID refers to a disapproval reason; see\nDisapprovalReason enum in\n[snippet-status-report-proto](https://developers.google.com/authorized-buyers/rtb/downloads/snippet-status-report-proto)."
          ],
          "enum": [
            "DETAIL_TYPE_UNSPECIFIED",
            "CREATIVE_ATTRIBUTE",
            "VENDOR",
            "SENSITIVE_CATEGORY",
            "PRODUCT_CATEGORY",
            "DISAPPROVAL_REASON"
          ],
          "description": "The type of detail that the detail IDs represent.",
          "type": "string"
        }
      },
      "id": "ListCreativeStatusBreakdownByDetailResponse"
    },
    "Money": {
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The 3-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "nanos": {
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32"
        },
        "units": {
          "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "Money"
    },
    "PublisherProfile": {
      "description": "Note: this resource requires whitelisting for access. Please contact your\naccount manager for access to Marketplace resources.\n\nRepresents a publisher profile in Marketplace.\n\nAll fields are read only. All string fields are free-form text entered by the\npublisher unless noted otherwise.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the publisher profile.",
          "type": "string"
        },
        "publisherProfileId": {
          "description": "Unique ID for publisher profile.",
          "type": "string"
        },
        "buyerPitchStatement": {
          "description": "Statement explaining what's unique about publisher's business, and why\nbuyers should partner with the publisher.",
          "type": "string"
        },
        "topHeadlines": {
          "description": "Up to three key metrics and rankings. Max 100 characters each.\nFor example \"#1 Mobile News Site for 20 Straight Months\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "programmaticDealsContact": {
          "description": "Contact information for programmatic deals. This is free text entered by\nthe publisher and may include information like names, phone numbers and\nemail addresses.",
          "type": "string"
        },
        "directDealsContact": {
          "description": "Contact information for direct reservation deals. This is free text entered\nby the publisher and may include information like names, phone numbers and\nemail addresses.",
          "type": "string"
        },
        "domains": {
          "description": "The list of domains represented in this publisher profile. Empty if this is\na parent profile. These are top private domains, meaning that these will\nnot contain a string like \"photos.google.co.uk/123\", but will instead\ncontain \"google.co.uk\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "samplePageUrl": {
          "description": "URL to a sample content page.",
          "type": "string"
        },
        "logoUrl": {
          "description": "A Google public URL to the logo for this publisher profile. The logo is\nstored as a PNG, JPG, or GIF image.",
          "type": "string"
        },
        "mediaKitUrl": {
          "description": "URL to additional marketing and sales materials.",
          "type": "string"
        },
        "seller": {
          "description": "Seller of the publisher profile.",
          "$ref": "Seller"
        },
        "googlePlusUrl": {
          "description": "URL to publisher's Google+ page.",
          "type": "string"
        },
        "overview": {
          "description": "Overview of the publisher.",
          "type": "string"
        },
        "audienceDescription": {
          "description": "Description on the publisher's audience.",
          "type": "string"
        },
        "rateCardInfoUrl": {
          "description": "URL to a publisher rate card.",
          "type": "string"
        }
      },
      "id": "PublisherProfile"
    },
    "CreativeDealAssociation": {
      "description": "The association between a creative and a deal.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account the creative belongs to.",
          "type": "string"
        },
        "creativeId": {
          "description": "The ID of the creative associated with the deal.",
          "type": "string"
        },
        "dealsId": {
          "description": "The externalDealId for the deal associated with the creative.",
          "type": "string"
        }
      },
      "id": "CreativeDealAssociation"
    },
    "Creative": {
      "description": "A creative and its classification data.",
      "type": "object",
      "properties": {
        "impressionTrackingUrls": {
          "description": "The set of URLs to be called to record an impression.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "html": {
          "$ref": "HtmlContent",
          "description": "An HTML creative."
        },
        "dealsStatus": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "NOT_CHECKED",
            "CONDITIONALLY_APPROVED",
            "APPROVED",
            "DISAPPROVED"
          ],
          "description": "Output only. The top-level deals status of this creative.\nIf disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in\nserving_restrictions will also exist. Note\nthat this may be nuanced with other contextual restrictions, in which case,\nit may be preferable to read from serving_restrictions directly.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string",
          "enumDescriptions": [
            "The status is unknown.",
            "The creative has not been checked.",
            "The creative has been conditionally approved.\nSee serving_restrictions for details.",
            "The creative has been approved.",
            "The creative has been disapproved."
          ]
        },
        "detectedProductCategories": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Output only. Detected product categories, if any.\nSee the ad-product-categories.txt file in the technical documentation\nfor a list of IDs."
        },
        "openAuctionStatus": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "NOT_CHECKED",
            "CONDITIONALLY_APPROVED",
            "APPROVED",
            "DISAPPROVED"
          ],
          "description": "Output only. The top-level open auction status of this creative.\nIf disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in\nserving_restrictions will also exist. Note\nthat this may be nuanced with other contextual restrictions, in which case,\nit may be preferable to read from serving_restrictions directly.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string",
          "enumDescriptions": [
            "The status is unknown.",
            "The creative has not been checked.",
            "The creative has been conditionally approved.\nSee serving_restrictions for details.",
            "The creative has been approved.",
            "The creative has been disapproved."
          ]
        },
        "advertiserName": {
          "description": "The name of the company being advertised in the creative.",
          "type": "string"
        },
        "declaredClickThroughUrls": {
          "description": "The set of declared destination URLs for the creative.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "detectedAdvertiserIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "Output only. Detected advertiser IDs, if any."
        },
        "detectedDomains": {
          "description": "Output only. The detected domains for this creative.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "description": "All attributes for the ads that may be shown from this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "array",
          "items": {
            "enum": [
              "ATTRIBUTE_UNSPECIFIED",
              "IMAGE_RICH_MEDIA",
              "ADOBE_FLASH_FLV",
              "IS_TAGGED",
              "IS_COOKIE_TARGETED",
              "IS_USER_INTEREST_TARGETED",
              "EXPANDING_DIRECTION_NONE",
              "EXPANDING_DIRECTION_UP",
              "EXPANDING_DIRECTION_DOWN",
              "EXPANDING_DIRECTION_LEFT",
              "EXPANDING_DIRECTION_RIGHT",
              "EXPANDING_DIRECTION_UP_LEFT",
              "EXPANDING_DIRECTION_UP_RIGHT",
              "EXPANDING_DIRECTION_DOWN_LEFT",
              "EXPANDING_DIRECTION_DOWN_RIGHT",
              "CREATIVE_TYPE_HTML",
              "CREATIVE_TYPE_VAST_VIDEO",
              "EXPANDING_DIRECTION_UP_OR_DOWN",
              "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
              "EXPANDING_DIRECTION_ANY_DIAGONAL",
              "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
              "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
              "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
              "SKIPPABLE_INSTREAM_VIDEO",
              "RICH_MEDIA_CAPABILITY_TYPE_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
              "NON_SKIPPABLE_INSTREAM_VIDEO",
              "NATIVE_ELIGIBILITY_ELIGIBLE",
              "NON_VPAID",
              "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
              "ANY_INTERSTITIAL",
              "NON_INTERSTITIAL",
              "IN_BANNER_VIDEO",
              "RENDERING_SIZELESS_ADX",
              "OMSDK_1_0"
            ],
            "type": "string"
          },
          "enumDescriptions": [
            "Do not use. This is a placeholder value only.",
            "The creative is of type image/rich media. For pretargeting.",
            "The creative is of video type Adobe Flash FLV. For pretargeting.",
            "The creative is tagged.",
            "The creative is cookie targeted.",
            "The creative is user interest targeted.",
            "The creative does not expand.",
            "The creative expands up.",
            "The creative expands down.",
            "The creative expands left.",
            "The creative expands right.",
            "The creative expands up and left.",
            "The creative expands up and right.",
            "The creative expands down and left.",
            "The creative expands down and right.",
            "The creative type is HTML.",
            "The creative type is VAST video.",
            "The creative expands up or down.",
            "The creative expands left or right.",
            "The creative expands on any diagonal.",
            "The creative expands when rolled over.",
            "The instream vast video type is vpaid flash.",
            "The creative is MRAID.",
            "The creative is Flash.",
            "The creative is HTML5.",
            "The creative has an instream VAST video type of skippable instream video.\nFor pretargeting.",
            "The creative is SSL.",
            "The creative is non-SSL.",
            "The creative is an interstitial.",
            "The creative has an instream VAST video type of non-skippable instream\nvideo. For pretargeting.",
            "The creative is eligible for native.",
            "The creative has an instream VAST video type of non-VPAID. For\npretargeting.",
            "The creative is not eligible for native.",
            "The creative has an interstitial size of any interstitial. For\npretargeting.",
            "The creative has an interstitial size of non interstitial. For\npretargeting.",
            "The video type is in-banner video.",
            "The creative can dynamically resize to fill a variety of slot sizes.",
            "The open measurement SDK is supported."
          ]
        },
        "apiUpdateTime": {
          "description": "Output only. The last update timestamp of the creative via API.",
          "format": "google-datetime",
          "type": "string"
        },
        "detectedLanguages": {
          "description": "Output only. The detected languages for this creative. The order is\narbitrary. The codes are 2 or 5 characters and are documented at\nhttps://developers.google.com/adwords/api/docs/appendix/languagecodes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creativeId": {
          "description": "The buyer-defined creative ID of this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string"
        },
        "accountId": {
          "description": "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string"
        },
        "native": {
          "description": "A native creative.",
          "$ref": "NativeContent"
        },
        "video": {
          "description": "A video creative.",
          "$ref": "VideoContent"
        },
        "servingRestrictions": {
          "type": "array",
          "items": {
            "$ref": "ServingRestriction"
          },
          "description": "Output only. The granular status of this ad in specific contexts.\nA context here relates to where something ultimately serves (for example,\na physical location, a platform, an HTTPS vs HTTP request, or the type\nof auction)."
        },
        "agencyId": {
          "description": "The agency ID for this creative.",
          "format": "int64",
          "type": "string"
        },
        "clickThroughUrls": {
          "description": "The set of destination URLs for the creative.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "detectedSensitiveCategories": {
          "description": "Output only. Detected sensitive categories, if any.\nSee the ad-sensitive-categories.txt file in the technical documentation for\na list of IDs. You should use these IDs along with the\nexcluded-sensitive-category field in the bid request to filter your bids.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "adChoicesDestinationUrl": {
          "description": "The link to AdChoices destination page.",
          "type": "string"
        },
        "restrictedCategories": {
          "description": "All restricted categories for the ads that may be shown from this creative.",
          "type": "array",
          "items": {
            "enum": [
              "NO_RESTRICTED_CATEGORIES",
              "ALCOHOL"
            ],
            "type": "string"
          },
          "enumDescriptions": [
            "The ad has no restricted categories",
            "The alcohol restricted category."
          ]
        },
        "corrections": {
          "description": "Output only. Shows any corrections that were applied to this creative.",
          "type": "array",
          "items": {
            "$ref": "Correction"
          }
        },
        "version": {
          "description": "Output only. The version of this creative.",
          "format": "int32",
          "type": "integer"
        },
        "adTechnologyProviders": {
          "$ref": "AdTechnologyProviders",
          "description": "Output only. The detected ad technology providers."
        },
        "vendorIds": {
          "description": "All vendor IDs for the ads that may be shown from this creative.\nSee https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt\nfor possible values.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "id": "Creative"
    },
    "NonGuaranteedAuctionTerms": {
      "description": "Terms for Private Auctions. Note that Private Auctions can be created only\nby the seller, but they can be returned in a get or list request.",
      "type": "object",
      "properties": {
        "autoOptimizePrivateAuction": {
          "description": "True if open auction buyers are allowed to compete with invited buyers\nin this private auction.",
          "type": "boolean"
        },
        "reservePricesPerBuyer": {
          "description": "Reserve price for the specified buyer.",
          "type": "array",
          "items": {
            "$ref": "PricePerBuyer"
          }
        }
      },
      "id": "NonGuaranteedAuctionTerms"
    },
    "DeliveryControl": {
      "description": "Message contains details about how the deals will be paced.",
      "type": "object",
      "properties": {
        "frequencyCaps": {
          "type": "array",
          "items": {
            "$ref": "FrequencyCap"
          },
          "description": "Output only. Specifies any frequency caps."
        },
        "creativeBlockingLevel": {
          "enumDescriptions": [
            "A placeholder for an undefined creative blocking level.",
            "Publisher blocking rules will be applied.",
            "The Ad Exchange policy blocking rules will be applied."
          ],
          "enum": [
            "CREATIVE_BLOCKING_LEVEL_UNSPECIFIED",
            "PUBLISHER_BLOCKING_RULES",
            "ADX_POLICY_BLOCKING_ONLY"
          ],
          "description": "Output only. Specified the creative blocking levels to be applied.",
          "type": "string"
        },
        "deliveryRateType": {
          "enumDescriptions": [
            "A placeholder for an undefined delivery rate type.",
            "Impressions are served uniformly over the life of the deal.",
            "Impressions are served front-loaded.",
            "Impressions are served as fast as possible."
          ],
          "enum": [
            "DELIVERY_RATE_TYPE_UNSPECIFIED",
            "EVENLY",
            "FRONT_LOADED",
            "AS_FAST_AS_POSSIBLE"
          ],
          "description": "Output only. Specifies how the impression delivery will be paced.",
          "type": "string"
        }
      },
      "id": "DeliveryControl"
    },
    "Client": {
      "description": "A client resource represents a client buyer&mdash;an agency, a brand, or an\nadvertiser customer of the sponsor buyer. Users associated with the client\nbuyer have restricted access to the Marketplace and certain other sections of\nthe Authorized Buyers UI based on the role granted to the client buyer. All\nfields are required unless otherwise specified.",
      "type": "object",
      "properties": {
        "entityName": {
          "description": "The name of the entity. This field is automatically fetched based on\nthe type and ID.\nThe value of this field is ignored in create and update operations.",
          "type": "string"
        },
        "status": {
          "enumDescriptions": [
            "A placeholder for an undefined client status.",
            "A client that is currently disabled.",
            "A client that is currently active."
          ],
          "enum": [
            "CLIENT_STATUS_UNSPECIFIED",
            "DISABLED",
            "ACTIVE"
          ],
          "description": "The status of the client buyer.",
          "type": "string"
        },
        "partnerClientId": {
          "description": "Optional arbitrary unique identifier of this client buyer from the\nstandpoint of its Ad Exchange sponsor buyer.\n\nThis field can be used to associate a client buyer with the identifier\nin the namespace of its sponsor buyer, lookup client buyers by that\nidentifier and verify whether an Ad Exchange counterpart of a given client\nbuyer already exists.\n\nIf present, must be unique among all the client buyers for its\nAd Exchange sponsor buyer.",
          "type": "string"
        },
        "entityType": {
          "enumDescriptions": [
            "A placeholder for an undefined client entity type. Should not be used.",
            "An advertiser.",
            "A brand.",
            "An advertising agency.",
            "An explicit value for a client that was not yet classified\nas any particular entity."
          ],
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "ADVERTISER",
            "BRAND",
            "AGENCY",
            "ENTITY_TYPE_UNCLASSIFIED"
          ],
          "description": "The type of the client entity: `ADVERTISER`, `BRAND`, or `AGENCY`.",
          "type": "string"
        },
        "clientName": {
          "description": "Name used to represent this client to publishers.\nYou may have multiple clients that map to the same entity,\nbut for each client the combination of `clientName` and entity\nmust be unique.\nYou can specify this field as empty.",
          "type": "string"
        },
        "role": {
          "enum": [
            "CLIENT_ROLE_UNSPECIFIED",
            "CLIENT_DEAL_VIEWER",
            "CLIENT_DEAL_NEGOTIATOR",
            "CLIENT_DEAL_APPROVER"
          ],
          "description": "The role which is assigned to the client buyer. Each role implies a set of\npermissions granted to the client. Must be one of `CLIENT_DEAL_VIEWER`,\n`CLIENT_DEAL_NEGOTIATOR` or `CLIENT_DEAL_APPROVER`.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined client role.",
            "Users associated with this client can see publisher deal offers\nin the Marketplace.\nThey can neither negotiate proposals nor approve deals.\nIf this client is visible to publishers, they can send deal proposals\nto this client.",
            "Users associated with this client can respond to deal proposals\nsent to them by publishers. They can also initiate deal proposals\nof their own.",
            "Users associated with this client can approve eligible deals\non your behalf. Some deals may still explicitly require publisher\nfinalization. If this role is not selected, the sponsor buyer\nwill need to manually approve each of their deals."
          ]
        },
        "visibleToSeller": {
          "description": "Whether the client buyer will be visible to sellers.",
          "type": "boolean"
        },
        "entityId": {
          "description": "Numerical identifier of the client entity.\nThe entity can be an advertiser, a brand, or an agency.\nThis identifier is unique among all the entities with the same type.\n\nA list of all known advertisers with their identifiers is available in the\n[advertisers.txt](https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt)\nfile.\n\nA list of all known brands with their identifiers is available in the\n[brands.txt](https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt)\nfile.\n\nA list of all known agencies with their identifiers is available in the\n[agencies.txt](https://storage.googleapis.com/adx-rtb-dictionaries/agencies.txt)\nfile.",
          "format": "int64",
          "type": "string"
        },
        "clientAccountId": {
          "description": "The globally-unique numerical ID of the client.\nThe value of this field is ignored in create and update operations.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "Client"
    },
    "ListCreativeStatusBreakdownByCreativeResponse": {
      "description": "Response message for listing all creatives associated with a given filtered\nbid reason.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListCreativeStatusBreakdownByCreativeRequest.pageToken\nfield in the subsequent call to the filteredBids.creatives.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "filteredBidCreativeRows": {
          "description": "List of rows, with counts of bids with a given creative status aggregated\nby creative.",
          "type": "array",
          "items": {
            "$ref": "FilteredBidCreativeRow"
          }
        }
      },
      "id": "ListCreativeStatusBreakdownByCreativeResponse"
    },
    "Correction": {
      "description": "Output only. Shows any corrections that were applied to this creative.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Additional details about what was corrected.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "enumDescriptions": [
            "The correction type is unknown. Refer to the details for more information.",
            "The ad's declared vendors did not match the vendors that were detected.\nThe detected vendors were added.",
            "The ad had the SSL attribute declared but was not SSL-compliant.\nThe SSL attribute was removed.",
            "The ad was declared as Flash-free but contained Flash, so the Flash-free\nattribute was removed.",
            "The ad was not declared as Flash-free but it did not reference any flash\ncontent, so the Flash-free attribute was added.",
            "The ad did not declare a required creative attribute.\nThe attribute was added.",
            "The ad did not declare a required technology vendor.\nThe technology vendor was added.",
            "The ad did not declare the SSL attribute but was SSL-compliant, so the\nSSL attribute was added.",
            "Properties consistent with In-banner video were found, so an\nIn-Banner Video attribute was added.",
            "The ad makes calls to the MRAID API so the MRAID attribute was added.",
            "The ad unnecessarily declared the Flash attribute, so the Flash attribute\nwas removed.",
            "The ad contains video content."
          ],
          "enum": [
            "CORRECTION_TYPE_UNSPECIFIED",
            "VENDOR_IDS_ADDED",
            "SSL_ATTRIBUTE_REMOVED",
            "FLASH_FREE_ATTRIBUTE_REMOVED",
            "FLASH_FREE_ATTRIBUTE_ADDED",
            "REQUIRED_ATTRIBUTE_ADDED",
            "REQUIRED_VENDOR_ADDED",
            "SSL_ATTRIBUTE_ADDED",
            "IN_BANNER_VIDEO_ATTRIBUTE_ADDED",
            "MRAID_ATTRIBUTE_ADDED",
            "FLASH_ATTRIBUTE_REMOVED",
            "VIDEO_IN_SNIPPET_ATTRIBUTE_ADDED"
          ],
          "description": "The type of correction that was applied to the creative.",
          "type": "string"
        },
        "contexts": {
          "type": "array",
          "items": {
            "$ref": "ServingContext"
          },
          "description": "The contexts for the correction."
        }
      },
      "id": "Correction"
    },
    "FilterSet": {
      "type": "object",
      "properties": {
        "sellerNetworkIds": {
          "description": "For Authorized Buyers only.\nThe list of IDs of the seller (publisher) networks on which to filter;\nmay be empty. The filters represented by multiple seller network IDs are\nORed together (i.e., if non-empty, results must match any one of the\npublisher networks). See\n[seller-network-ids](https://developers.google.com/authorized-buyers/rtb/downloads/seller-network-ids)\nfile for the set of existing seller network IDs.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "absoluteDateRange": {
          "description": "An absolute date range, defined by a start date and an end date.\nInterpreted relative to Pacific time zone.",
          "$ref": "AbsoluteDateRange"
        },
        "breakdownDimensions": {
          "enumDescriptions": [
            "A placeholder for an unspecified dimension; should not be used.",
            "The response should be broken down by publisher identifier.\nThis option is available only for Open Bidding buyers."
          ],
          "description": "The set of dimensions along which to break down the response; may be empty.\nIf multiple dimensions are requested, the breakdown is along the Cartesian\nproduct of the requested dimensions.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "BREAKDOWN_DIMENSION_UNSPECIFIED",
              "PUBLISHER_IDENTIFIER"
            ]
          }
        },
        "environment": {
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined environment; indicates that no environment\nfilter will be applied.",
            "The ad impression appears on the web.",
            "The ad impression appears in an app."
          ],
          "enum": [
            "ENVIRONMENT_UNSPECIFIED",
            "WEB",
            "APP"
          ],
          "description": "The environment on which to filter; optional."
        },
        "dealId": {
          "description": "The ID of the deal on which to filter; optional. This field may be set\nonly for a filter set that accesses account-level troubleshooting data,\ni.e., one whose name matches the `bidders/*/accounts/*/filterSets/*`\npattern.",
          "format": "int64",
          "type": "string"
        },
        "publisherIdentifiers": {
          "description": "For Open Bidding partners only.\nThe list of publisher identifiers on which to filter; may be empty.\nThe filters represented by multiple publisher identifiers are ORed\ntogether.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeSeriesGranularity": {
          "enum": [
            "TIME_SERIES_GRANULARITY_UNSPECIFIED",
            "HOURLY",
            "DAILY"
          ],
          "description": "The granularity of time intervals if a time series breakdown is desired;\noptional.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an unspecified interval; no time series is applied.\nAll rows in response will contain data for the entire requested time range.",
            "Indicates that data will be broken down by the hour.",
            "Indicates that data will be broken down by the day."
          ]
        },
        "realtimeTimeRange": {
          "$ref": "RealtimeTimeRange",
          "description": "An open-ended realtime time range, defined by the aggregation start\ntimestamp."
        },
        "formats": {
          "description": "The list of formats on which to filter; may be empty. The filters\nrepresented by multiple formats are ORed together (i.e., if non-empty,\nresults must match any one of the formats).",
          "type": "array",
          "items": {
            "enum": [
              "FORMAT_UNSPECIFIED",
              "NATIVE_DISPLAY",
              "NATIVE_VIDEO",
              "NON_NATIVE_DISPLAY",
              "NON_NATIVE_VIDEO"
            ],
            "type": "string"
          },
          "enumDescriptions": [
            "A placeholder for an undefined format; indicates that no format filter\nwill be applied.",
            "The ad impression is a native ad, and display (i.e., image) format.",
            "The ad impression is a native ad, and video format.",
            "The ad impression is not a native ad, and display (i.e., image) format.",
            "The ad impression is not a native ad, and video format."
          ]
        },
        "creativeId": {
          "description": "The ID of the creative on which to filter; optional. This field may be set\nonly for a filter set that accesses account-level troubleshooting data,\ni.e., one whose name matches the `bidders/*/accounts/*/filterSets/*`\npattern.",
          "type": "string"
        },
        "relativeDateRange": {
          "description": "A relative date range, defined by an offset from today and a duration.\nInterpreted relative to Pacific time zone.",
          "$ref": "RelativeDateRange"
        },
        "platforms": {
          "description": "The list of platforms on which to filter; may be empty. The filters\nrepresented by multiple platforms are ORed together (i.e., if non-empty,\nresults must match any one of the platforms).",
          "type": "array",
          "items": {
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "DESKTOP",
              "TABLET",
              "MOBILE"
            ],
            "type": "string"
          },
          "enumDescriptions": [
            "A placeholder for an undefined platform; indicates that no platform\nfilter will be applied.",
            "The ad impression appears on a desktop.",
            "The ad impression appears on a tablet.",
            "The ad impression appears on a mobile device."
          ]
        },
        "name": {
          "type": "string",
          "description": "A user-defined name of the filter set. Filter set names must be unique\nglobally and match one of the patterns:\n\n- `bidders/*/filterSets/*` (for accessing bidder-level troubleshooting\ndata)\n- `bidders/*/accounts/*/filterSets/*` (for accessing account-level\ntroubleshooting data)\n\nThis field is required in create operations."
        }
      },
      "id": "FilterSet",
      "description": "A set of filters that is applied to a request for data.\nWithin a filter set, an AND operation is performed across the filters\nrepresented by each field. An OR operation is performed across the filters\nrepresented by the multiple values of a repeated field, e.g.,\n\"format=VIDEO AND deal_id=12 AND (seller_network_id=34 OR\nseller_network_id=56)\"."
    },
    "CalloutStatusRow": {
      "description": "The number of impressions with the specified dimension values where the\ncorresponding bid request or bid response was not successful, as described by\nthe specified callout status.",
      "type": "object",
      "properties": {
        "calloutStatusId": {
          "description": "The ID of the callout status.\nSee\n[callout-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/callout-status-codes).",
          "format": "int32",
          "type": "integer"
        },
        "impressionCount": {
          "description": "The number of impressions for which there was a bid request or bid response\nwith the specified callout status.",
          "$ref": "MetricValue"
        },
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "$ref": "RowDimensions"
        }
      },
      "id": "CalloutStatusRow"
    },
    "ListDealAssociationsResponse": {
      "id": "ListDealAssociationsResponse",
      "description": "A response for listing creative and deal associations",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListDealAssociationsRequest.page_token\nfield in the subsequent call to 'ListDealAssociation' method to retrieve\nthe next page of results.",
          "type": "string"
        },
        "associations": {
          "description": "The list of associations.",
          "type": "array",
          "items": {
            "$ref": "CreativeDealAssociation"
          }
        }
      }
    },
    "StopWatchingCreativeRequest": {
      "type": "object",
      "properties": {},
      "id": "StopWatchingCreativeRequest",
      "description": "A request for stopping notifications for changes to creative Status."
    },
    "Disapproval": {
      "id": "Disapproval",
      "description": "Output only. The reason and details for a disapproval.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Additional details about the reason for disapproval.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reason": {
          "enum": [
            "LENGTH_OF_IMAGE_ANIMATION",
            "BROKEN_URL",
            "MEDIA_NOT_FUNCTIONAL",
            "INVALID_FOURTH_PARTY_CALL",
            "INCORRECT_REMARKETING_DECLARATION",
            "LANDING_PAGE_ERROR",
            "AD_SIZE_DOES_NOT_MATCH_AD_SLOT",
            "NO_BORDER",
            "FOURTH_PARTY_BROWSER_COOKIES",
            "LSO_OBJECTS",
            "BLANK_CREATIVE",
            "DESTINATION_URLS_UNDECLARED",
            "PROBLEM_WITH_CLICK_MACRO",
            "INCORRECT_AD_TECHNOLOGY_DECLARATION",
            "INCORRECT_DESTINATION_URL_DECLARATION",
            "EXPANDABLE_INCORRECT_DIRECTION",
            "EXPANDABLE_DIRECTION_NOT_SUPPORTED",
            "EXPANDABLE_INVALID_VENDOR",
            "EXPANDABLE_FUNCTIONALITY",
            "VIDEO_INVALID_VENDOR",
            "VIDEO_UNSUPPORTED_LENGTH",
            "VIDEO_UNSUPPORTED_FORMAT",
            "VIDEO_FUNCTIONALITY",
            "LANDING_PAGE_DISABLED",
            "MALWARE_SUSPECTED",
            "ADULT_IMAGE_OR_VIDEO",
            "INACCURATE_AD_TEXT",
            "COUNTERFEIT_DESIGNER_GOODS",
            "POP_UP",
            "INVALID_RTB_PROTOCOL_USAGE",
            "RAW_IP_ADDRESS_IN_SNIPPET",
            "UNACCEPTABLE_CONTENT_SOFTWARE",
            "UNAUTHORIZED_COOKIE_ON_GOOGLE_DOMAIN",
            "UNDECLARED_FLASH_OBJECTS",
            "INVALID_SSL_DECLARATION",
            "DIRECT_DOWNLOAD_IN_AD",
            "MAXIMUM_DOWNLOAD_SIZE_EXCEEDED",
            "DESTINATION_URL_SITE_NOT_CRAWLABLE",
            "BAD_URL_LEGAL_DISAPPROVAL",
            "PHARMA_GAMBLING_ALCOHOL_NOT_ALLOWED",
            "DYNAMIC_DNS_AT_DESTINATION_URL",
            "POOR_IMAGE_OR_VIDEO_QUALITY",
            "UNACCEPTABLE_IMAGE_CONTENT",
            "INCORRECT_IMAGE_LAYOUT",
            "IRRELEVANT_IMAGE_OR_VIDEO",
            "DESTINATION_SITE_DOES_NOT_ALLOW_GOING_BACK",
            "MISLEADING_CLAIMS_IN_AD",
            "RESTRICTED_PRODUCTS",
            "UNACCEPTABLE_CONTENT",
            "AUTOMATED_AD_CLICKING",
            "INVALID_URL_PROTOCOL",
            "UNDECLARED_RESTRICTED_CONTENT",
            "INVALID_REMARKETING_LIST_USAGE",
            "DESTINATION_SITE_NOT_CRAWLABLE_ROBOTS_TXT",
            "CLICK_TO_DOWNLOAD_NOT_AN_APP",
            "INACCURATE_REVIEW_EXTENSION",
            "SEXUALLY_EXPLICIT_CONTENT",
            "GAINING_AN_UNFAIR_ADVANTAGE",
            "GAMING_THE_GOOGLE_NETWORK",
            "DANGEROUS_PRODUCTS_KNIVES",
            "DANGEROUS_PRODUCTS_EXPLOSIVES",
            "DANGEROUS_PRODUCTS_GUNS",
            "DANGEROUS_PRODUCTS_DRUGS",
            "DANGEROUS_PRODUCTS_TOBACCO",
            "DANGEROUS_PRODUCTS_WEAPONS",
            "UNCLEAR_OR_IRRELEVANT_AD",
            "PROFESSIONAL_STANDARDS",
            "DYSFUNCTIONAL_PROMOTION",
            "INVALID_INTEREST_BASED_AD",
            "MISUSE_OF_PERSONAL_INFORMATION",
            "OMISSION_OF_RELEVANT_INFORMATION",
            "UNAVAILABLE_PROMOTIONS",
            "MISLEADING_PROMOTIONS",
            "INAPPROPRIATE_CONTENT",
            "SENSITIVE_EVENTS",
            "SHOCKING_CONTENT",
            "ENABLING_DISHONEST_BEHAVIOR",
            "TECHNICAL_REQUIREMENTS",
            "RESTRICTED_POLITICAL_CONTENT",
            "UNSUPPORTED_CONTENT",
            "INVALID_BIDDING_METHOD",
            "VIDEO_TOO_LONG",
            "VIOLATES_JAPANESE_PHARMACY_LAW",
            "UNACCREDITED_PET_PHARMACY",
            "ABORTION",
            "CONTRACEPTIVES",
            "NEED_CERTIFICATES_TO_ADVERTISE_IN_CHINA",
            "KCDSP_REGISTRATION",
            "NOT_FAMILY_SAFE",
            "CLINICAL_TRIAL_RECRUITMENT",
            "MAXIMUM_NUMBER_OF_HTTP_CALLS_EXCEEDED",
            "MAXIMUM_NUMBER_OF_COOKIES_EXCEEDED",
            "PERSONAL_LOANS",
            "UNSUPPORTED_FLASH_CONTENT",
            "MISUSE_BY_OMID_SCRIPT",
            "NON_WHITELISTED_OMID_VENDOR",
            "DESTINATION_EXPERIENCE",
            "UNSUPPORTED_LANGUAGE",
            "NON_SSL_COMPLIANT",
            "TEMPORARY_PAUSE",
            "BAIL_BONDS"
          ],
          "description": "The categorized reason for disapproval.",
          "type": "string",
          "enumDescriptions": [
            "The length of the image animation is longer than allowed.",
            "The click through URL doesn't work properly.",
            "Something is wrong with the creative itself.",
            "The ad makes a fourth party call to an unapproved vendor.",
            "The ad targets consumers using remarketing lists and/or collects\ndata for subsequent use in retargeting, but does not correctly declare\nthat use.",
            "Clicking on the ad leads to an error page.",
            "The ad size when rendered does not match the declaration.",
            "Ads with a white background require a border, which was missing.",
            "The creative attempts to set cookies from a fourth party that is not\ncertified.",
            "The creative sets an LSO object.",
            "The ad serves a blank.",
            "The ad uses rotation, but not all destination URLs were declared.",
            "There is a problem with the way the click macro is used.",
            "The ad technology declaration is not accurate.",
            "The actual destination URL does not match the declared destination URL.",
            "The declared expanding direction does not match the actual direction.",
            "The ad does not expand in a supported direction.",
            "The ad uses an expandable vendor that is not supported.",
            "There was an issue with the expandable ad.",
            "The ad uses a video vendor that is not supported.",
            "The length of the video ad is not supported.",
            "The format of the video ad is not supported.",
            "There was an issue with the video ad.",
            "The landing page does not conform to Ad Exchange policy.",
            "The ad or the landing page may contain malware.",
            "The ad contains adult images or video content.",
            "The ad contains text that is unclear or inaccurate.",
            "The ad promotes counterfeit designer goods.",
            "The ad causes a popup window to appear.",
            "The creative does not follow policies set for the RTB protocol.",
            "The ad contains a URL that uses a numeric IP address for the domain.",
            "The ad or landing page contains unacceptable content because it initiated\na software or executable download.",
            "The ad set an unauthorized cookie on a Google domain.",
            "Flash content found when no flash was declared.",
            "SSL support declared but not working correctly.",
            "Rich Media - Direct Download in Ad (ex. PDF download).",
            "Maximum download size exceeded.",
            "Bad Destination URL: Site Not Crawlable.",
            "Bad URL: Legal disapproval.",
            "Pharmaceuticals, Gambling, Alcohol not allowed and at least one was\ndetected.",
            "Dynamic DNS at Destination URL.",
            "Poor Image / Video Quality.",
            "For example, Image Trick to Click.",
            "Incorrect Image Layout.",
            "Irrelevant Image / Video.",
            "Broken back button.",
            "Misleading/Inaccurate claims in ads.",
            "Restricted Products.",
            "Unacceptable content. For example, malware.",
            "The ad automatically redirects to the destination site without a click,\nor reports a click when none were made.",
            "The ad uses URL protocols that do not exist or are not allowed on AdX.",
            "Restricted content (for example, alcohol) was found in the ad but not\ndeclared.",
            "Violation of the remarketing list policy.",
            "The destination site's robot.txt file prevents it from being crawled.",
            "Click to download must link to an app.",
            "A review extension must be an accurate review.",
            "Sexually explicit content.",
            "The ad tries to gain an unfair traffic advantage.",
            "The ad tries to circumvent Google's advertising systems.",
            "The ad promotes dangerous knives.",
            "The ad promotes explosives.",
            "The ad promotes guns & parts.",
            "The ad promotes recreational drugs/services & related equipment.",
            "The ad promotes tobacco products/services & related equipment.",
            "The ad promotes weapons.",
            "The ad is unclear or irrelevant to the destination site.",
            "The ad does not meet professional standards.",
            "The promotion is unnecessarily difficult to navigate.",
            "Violation of Google's policy for interest-based ads.",
            "Misuse of personal information.",
            "Omission of relevant information.",
            "Unavailable promotions.",
            "Misleading or unrealistic promotions.",
            "Offensive or inappropriate content.",
            "Capitalizing on sensitive events.",
            "Shocking content.",
            "Products & Services that enable dishonest behavior.",
            "The ad does not meet technical requirements.",
            "Restricted political content.",
            "Unsupported content.",
            "Invalid bidding method.",
            "Video length exceeds limits.",
            "Unacceptable content: Japanese healthcare.",
            "Online pharmacy ID required.",
            "Unacceptable content: Abortion.",
            "Unacceptable content: Birth control.",
            "Restricted in China.",
            "Unacceptable content: Korean healthcare.",
            "Non-family safe or adult content.",
            "Clinical trial recruitment.",
            "Maximum number of HTTP calls exceeded.",
            "Maximum number of cookies exceeded.",
            "Financial service ad does not adhere to specifications.",
            "Flash content was found in an unsupported context.",
            "Misuse by an Open Measurement SDK script.",
            "Use of an Open Measurement SDK vendor not on approved whitelist.",
            "Unacceptable landing page.",
            "Unsupported language.",
            "Non-SSL compliant.",
            "Temporary pausing of creative.",
            "Promotes services related to bail bonds."
          ]
        }
      }
    },
    "ServingRestriction": {
      "description": "Output only. A representation of the status of an ad in a\nspecific context. A context here relates to where something ultimately serves\n(for example, a user or publisher geo, a platform, an HTTPS vs HTTP request,\nor the type of auction).",
      "type": "object",
      "properties": {
        "contexts": {
          "type": "array",
          "items": {
            "$ref": "ServingContext"
          },
          "description": "The contexts for the restriction."
        },
        "disapproval": {
          "description": "Disapproval bound to this restriction.\nOnly present if status=DISAPPROVED.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "$ref": "Disapproval"
        },
        "status": {
          "enumDescriptions": [
            "The status is not known.",
            "The ad was disapproved in this context.",
            "The ad is pending review in this context."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "DISAPPROVAL",
            "PENDING_REVIEW"
          ],
          "description": "The status of the creative in this context (for example, it has been\nexplicitly disapproved or is pending review).",
          "type": "string"
        },
        "disapprovalReasons": {
          "description": "Any disapprovals bound to this restriction.\nOnly present if status=DISAPPROVED.\nCan be used to filter the response of the\ncreatives.list\nmethod.\nDeprecated; please use\ndisapproval\nfield instead.",
          "type": "array",
          "items": {
            "$ref": "Disapproval"
          }
        }
      },
      "id": "ServingRestriction"
    },
    "AcceptProposalRequest": {
      "description": "Request to accept a proposal.",
      "type": "object",
      "properties": {
        "proposalRevision": {
          "description": "The last known client revision number of the proposal.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "AcceptProposalRequest"
    },
    "Buyer": {
      "description": "Represents a buyer of inventory. Each buyer is identified by a unique\nAuthorized Buyers account ID.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Authorized Buyers account ID of the buyer.",
          "type": "string"
        }
      },
      "id": "Buyer"
    },
    "Note": {
      "description": "A proposal may be associated to several notes.",
      "type": "object",
      "properties": {
        "note": {
          "description": "The actual note to attach.\n(max-length: 1024 unicode code units)\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
          "type": "string"
        },
        "proposalRevision": {
          "type": "string",
          "description": "Output only. The revision number of the proposal when the note is created.",
          "format": "int64"
        },
        "noteId": {
          "description": "Output only. The unique ID for the note.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp for when this note was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "creatorRole": {
          "enumDescriptions": [
            "A placeholder for an undefined buyer/seller role.",
            "Specifies the role as buyer.",
            "Specifies the role as seller."
          ],
          "enum": [
            "BUYER_SELLER_ROLE_UNSPECIFIED",
            "BUYER",
            "SELLER"
          ],
          "description": "Output only. The role of the person (buyer/seller) creating the note.",
          "type": "string"
        }
      },
      "id": "Note"
    },
    "ContactInformation": {
      "description": "Contains information on how a buyer or seller can be reached.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Email address for the contact.",
          "type": "string"
        },
        "name": {
          "description": "The name of the contact.",
          "type": "string"
        }
      },
      "id": "ContactInformation"
    },
    "DealTerms": {
      "description": "The deal terms specify the details of a Product/deal. They specify things\nlike price per buyer, the type of pricing model (e.g., fixed price, auction)\nand expected impressions from the publisher.",
      "type": "object",
      "properties": {
        "estimatedGrossSpend": {
          "$ref": "Price",
          "description": "Non-binding estimate of the estimated gross spend for this deal.\nCan be set by buyer or seller."
        },
        "brandingType": {
          "enum": [
            "BRANDING_TYPE_UNSPECIFIED",
            "BRANDED",
            "SEMI_TRANSPARENT"
          ],
          "description": "Visibility of the URL in bid requests. (default: BRANDED)",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined branding type.",
            "Full URL is included in bid requests.",
            "A TopLevelDomain or masked URL is sent in bid requests\nrather than the full one."
          ]
        },
        "sellerTimeZone": {
          "description": "The time zone name. For deals with Cost Per Day billing, defines the\ntime zone used to mark the boundaries of a day. It should be an\nIANA TZ name, such as \"America/Los_Angeles\". For more information,\nsee https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
          "type": "string"
        },
        "guaranteedFixedPriceTerms": {
          "$ref": "GuaranteedFixedPriceTerms",
          "description": "The terms for guaranteed fixed price deals."
        },
        "description": {
          "description": "Publisher provided description for the terms.",
          "type": "string"
        },
        "nonGuaranteedFixedPriceTerms": {
          "$ref": "NonGuaranteedFixedPriceTerms",
          "description": "The terms for non-guaranteed fixed price deals."
        },
        "nonGuaranteedAuctionTerms": {
          "$ref": "NonGuaranteedAuctionTerms",
          "description": "The terms for non-guaranteed auction deals."
        },
        "estimatedImpressionsPerDay": {
          "description": "Non-binding estimate of the impressions served per day.\nCan be set by buyer or seller.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "DealTerms"
    },
    "FrequencyCap": {
      "description": "Frequency cap.",
      "type": "object",
      "properties": {
        "timeUnitType": {
          "description": "The time unit. Along with num_time_units defines the amount of time over\nwhich impressions per user are counted and capped.",
          "type": "string",
          "enumDescriptions": [
            "A placeholder for an undefined time unit type. This just indicates the\nvariable with this value hasn't been initialized.",
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Lifetime"
          ],
          "enum": [
            "TIME_UNIT_TYPE_UNSPECIFIED",
            "MINUTE",
            "HOUR",
            "DAY",
            "WEEK",
            "MONTH",
            "LIFETIME"
          ]
        },
        "numTimeUnits": {
          "description": "The amount of time, in the units specified by time_unit_type. Defines the\namount of time over which impressions per user are counted and capped.",
          "format": "int32",
          "type": "integer"
        },
        "maxImpressions": {
          "description": "The maximum number of impressions that can be served to a user within the\nspecified time period.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "FrequencyCap"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "canonicalName": "AdExchangeBuyerII",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/adexchange.buyer": {
          "description": "Manage your Ad Exchange buyer account configuration"
        }
      }
    }
  },
  "rootUrl": "https://adexchangebuyer.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "adexchangebuyer2",
  "batchPath": "batch",
  "title": "Ad Exchange Buyer API II"
}
