/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A TriggerCondition is described as a set of states which must be met by the device. It also
 * includes instructions to the Assistant on what kind of response to execute when the condition is
 * not met.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantDevicesPlatformProtoTriggerCondition extends com.google.api.client.json.GenericJson {

  /**
   * The map of state keys along with their values which must be returned by the device, for example
   * to start the dishwasher you may require states: {"door": "CLOSED", "detergent_status":
   * "READY"}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, AssistantDevicesPlatformProtoArgSpec> requiredStateValues;

  static {
    // hack to force ProGuard to consider AssistantDevicesPlatformProtoArgSpec used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AssistantDevicesPlatformProtoArgSpec.class);
  }

  /**
   * A simple TTS to play.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String simpleTts;

  /**
   * Refers to a defined ConditionalResult keyed by its status. It could be a built-in or custom
   * ConditionalResult for this Intent. Note: the states provided by the device MUST contain all of
   * the states required by the ConditionalResult.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * The map of state keys along with their values which must be returned by the device, for example
   * to start the dishwasher you may require states: {"door": "CLOSED", "detergent_status":
   * "READY"}.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, AssistantDevicesPlatformProtoArgSpec> getRequiredStateValues() {
    return requiredStateValues;
  }

  /**
   * The map of state keys along with their values which must be returned by the device, for example
   * to start the dishwasher you may require states: {"door": "CLOSED", "detergent_status":
   * "READY"}.
   * @param requiredStateValues requiredStateValues or {@code null} for none
   */
  public AssistantDevicesPlatformProtoTriggerCondition setRequiredStateValues(java.util.Map<String, AssistantDevicesPlatformProtoArgSpec> requiredStateValues) {
    this.requiredStateValues = requiredStateValues;
    return this;
  }

  /**
   * A simple TTS to play.
   * @return value or {@code null} for none
   */
  public java.lang.String getSimpleTts() {
    return simpleTts;
  }

  /**
   * A simple TTS to play.
   * @param simpleTts simpleTts or {@code null} for none
   */
  public AssistantDevicesPlatformProtoTriggerCondition setSimpleTts(java.lang.String simpleTts) {
    this.simpleTts = simpleTts;
    return this;
  }

  /**
   * Refers to a defined ConditionalResult keyed by its status. It could be a built-in or custom
   * ConditionalResult for this Intent. Note: the states provided by the device MUST contain all of
   * the states required by the ConditionalResult.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Refers to a defined ConditionalResult keyed by its status. It could be a built-in or custom
   * ConditionalResult for this Intent. Note: the states provided by the device MUST contain all of
   * the states required by the ConditionalResult.
   * @param status status or {@code null} for none
   */
  public AssistantDevicesPlatformProtoTriggerCondition setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  @Override
  public AssistantDevicesPlatformProtoTriggerCondition set(String fieldName, Object value) {
    return (AssistantDevicesPlatformProtoTriggerCondition) super.set(fieldName, value);
  }

  @Override
  public AssistantDevicesPlatformProtoTriggerCondition clone() {
    return (AssistantDevicesPlatformProtoTriggerCondition) super.clone();
  }

}
