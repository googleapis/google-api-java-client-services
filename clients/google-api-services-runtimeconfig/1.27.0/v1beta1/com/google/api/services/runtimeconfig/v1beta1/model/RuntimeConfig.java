/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.runtimeconfig.v1beta1.model;

/**
 * A RuntimeConfig resource is the primary resource in the Cloud RuntimeConfig service. A
 * RuntimeConfig resource consists of metadata and a hierarchy of variables.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Runtime Configuration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RuntimeConfig extends com.google.api.client.json.GenericJson {

  /**
   * An optional description of the RuntimeConfig object.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The resource name of a runtime config. The name must have the format:
   *
   *     projects/[PROJECT_ID]/configs/[CONFIG_NAME]
   *
   * The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an arbitrary name that
   * matches the `[0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])?` regular expression. The length
   * of `[CONFIG_NAME]` must be less than 64 characters.
   *
   * You pick the RuntimeConfig resource name, but the server will validate that the name adheres to
   * this format. After you create the resource, you cannot change the resource's name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * An optional description of the RuntimeConfig object.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * An optional description of the RuntimeConfig object.
   * @param description description or {@code null} for none
   */
  public RuntimeConfig setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * The resource name of a runtime config. The name must have the format:
   *
   *     projects/[PROJECT_ID]/configs/[CONFIG_NAME]
   *
   * The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an arbitrary name that
   * matches the `[0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])?` regular expression. The length
   * of `[CONFIG_NAME]` must be less than 64 characters.
   *
   * You pick the RuntimeConfig resource name, but the server will validate that the name adheres to
   * this format. After you create the resource, you cannot change the resource's name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name of a runtime config. The name must have the format:
   *
   *     projects/[PROJECT_ID]/configs/[CONFIG_NAME]
   *
   * The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an arbitrary name that
   * matches the `[0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])?` regular expression. The length
   * of `[CONFIG_NAME]` must be less than 64 characters.
   *
   * You pick the RuntimeConfig resource name, but the server will validate that the name adheres to
   * this format. After you create the resource, you cannot change the resource's name.
   * @param name name or {@code null} for none
   */
  public RuntimeConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public RuntimeConfig set(String fieldName, Object value) {
    return (RuntimeConfig) super.set(fieldName, value);
  }

  @Override
  public RuntimeConfig clone() {
    return (RuntimeConfig) super.clone();
  }

}
