/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Pattern for a MONTHLY recurrence. A MONTHLY recurrence may be specified in four different ways.
 * These fields should be set in a mutually exclusive way, i.e.: ((month_day OR last_day) XOR
 * (week_day AND (week_day_number OR last_week))) 1. Absolute days of the month (i.e. the 1st and
 * 15th) or relative day from the end of the month (i.e. -1 for last day, -2 for second-to-last
 * day). Set month_day. 2. [Deprecated] Relative last day of the month. Represented as a boolean
 * since the last absolute day number is dependent on the month. This is just a short-cut for
 * month_day=-1 and is deprecated. Set last_day=true. 3. The nth (or nth-last) specific weekday of
 * the month. For example, the 3rd Wednesday of the month. This represents the 3rd instance of a
 * Wednesday of the month, regardless of what weekday the month started on. It does not necessarily
 * mean the Wednesday on the 3rd week of the month. 4. [Deprecated] The last specific weekday of the
 * month. For example, the last Thursday of the month. This is a short-cut for week_day_number=-1.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingModelsRecurrenceMonthlyPattern extends com.google.api.client.json.GenericJson {

  /**
   * Special flag to indicate the last day of the month, equivalent to setting month_day to -1.
   * Deprecated, use month_day=-1 instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean lastDay;

  /**
   * Special flag to indicate a week_day in the last week of the month, as this cannot be captured
   * by week_day_number. Deprecated, use week_day_number=-1 instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean lastWeek;

  /**
   * Absolute day of the month (if positive) or relative day from the end of the month (if
   * negative). Example: 2nd and 20th of the month [2, 20]. Example: Last day of the month [-1].
   * Positive values should correspond to actual calendar day number (indexing starts at 1).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> monthDay;

  /**
   * For capturing the nth weekday of the month. Use together with week_day_number or last_week to
   * specify n.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String weekDay;

  /**
   * The nth occurrence of week_day to match. I.e. For 3rd Wednesday of the month, week_day =
   * WEDNESDAY and week_day_number = 3. Values beyond the end of the month are skipped. If negative,
   * this is interpreted as the nth-to-last occurrence of the week day in the month. I.e. for last
   * Thursday of the month, week_day = THURSDAY and week_day_number = -1.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer weekDayNumber;

  /**
   * Special flag to indicate the last day of the month, equivalent to setting month_day to -1.
   * Deprecated, use month_day=-1 instead.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLastDay() {
    return lastDay;
  }

  /**
   * Special flag to indicate the last day of the month, equivalent to setting month_day to -1.
   * Deprecated, use month_day=-1 instead.
   * @param lastDay lastDay or {@code null} for none
   */
  public NlpSemanticParsingModelsRecurrenceMonthlyPattern setLastDay(java.lang.Boolean lastDay) {
    this.lastDay = lastDay;
    return this;
  }

  /**
   * Special flag to indicate a week_day in the last week of the month, as this cannot be captured
   * by week_day_number. Deprecated, use week_day_number=-1 instead.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLastWeek() {
    return lastWeek;
  }

  /**
   * Special flag to indicate a week_day in the last week of the month, as this cannot be captured
   * by week_day_number. Deprecated, use week_day_number=-1 instead.
   * @param lastWeek lastWeek or {@code null} for none
   */
  public NlpSemanticParsingModelsRecurrenceMonthlyPattern setLastWeek(java.lang.Boolean lastWeek) {
    this.lastWeek = lastWeek;
    return this;
  }

  /**
   * Absolute day of the month (if positive) or relative day from the end of the month (if
   * negative). Example: 2nd and 20th of the month [2, 20]. Example: Last day of the month [-1].
   * Positive values should correspond to actual calendar day number (indexing starts at 1).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getMonthDay() {
    return monthDay;
  }

  /**
   * Absolute day of the month (if positive) or relative day from the end of the month (if
   * negative). Example: 2nd and 20th of the month [2, 20]. Example: Last day of the month [-1].
   * Positive values should correspond to actual calendar day number (indexing starts at 1).
   * @param monthDay monthDay or {@code null} for none
   */
  public NlpSemanticParsingModelsRecurrenceMonthlyPattern setMonthDay(java.util.List<java.lang.Integer> monthDay) {
    this.monthDay = monthDay;
    return this;
  }

  /**
   * For capturing the nth weekday of the month. Use together with week_day_number or last_week to
   * specify n.
   * @return value or {@code null} for none
   */
  public java.lang.String getWeekDay() {
    return weekDay;
  }

  /**
   * For capturing the nth weekday of the month. Use together with week_day_number or last_week to
   * specify n.
   * @param weekDay weekDay or {@code null} for none
   */
  public NlpSemanticParsingModelsRecurrenceMonthlyPattern setWeekDay(java.lang.String weekDay) {
    this.weekDay = weekDay;
    return this;
  }

  /**
   * The nth occurrence of week_day to match. I.e. For 3rd Wednesday of the month, week_day =
   * WEDNESDAY and week_day_number = 3. Values beyond the end of the month are skipped. If negative,
   * this is interpreted as the nth-to-last occurrence of the week day in the month. I.e. for last
   * Thursday of the month, week_day = THURSDAY and week_day_number = -1.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getWeekDayNumber() {
    return weekDayNumber;
  }

  /**
   * The nth occurrence of week_day to match. I.e. For 3rd Wednesday of the month, week_day =
   * WEDNESDAY and week_day_number = 3. Values beyond the end of the month are skipped. If negative,
   * this is interpreted as the nth-to-last occurrence of the week day in the month. I.e. for last
   * Thursday of the month, week_day = THURSDAY and week_day_number = -1.
   * @param weekDayNumber weekDayNumber or {@code null} for none
   */
  public NlpSemanticParsingModelsRecurrenceMonthlyPattern setWeekDayNumber(java.lang.Integer weekDayNumber) {
    this.weekDayNumber = weekDayNumber;
    return this;
  }

  @Override
  public NlpSemanticParsingModelsRecurrenceMonthlyPattern set(String fieldName, Object value) {
    return (NlpSemanticParsingModelsRecurrenceMonthlyPattern) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingModelsRecurrenceMonthlyPattern clone() {
    return (NlpSemanticParsingModelsRecurrenceMonthlyPattern) super.clone();
  }

}
