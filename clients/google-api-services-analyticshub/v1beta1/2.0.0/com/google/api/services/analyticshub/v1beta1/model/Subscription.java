/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticshub.v1beta1.model;

/**
 * A subscription represents a subscribers' access to a particular set of published data. It
 * contains references to associated listings, data exchanges, and linked datasets.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Analytics Hub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Subscription extends com.google.api.client.json.GenericJson {

  /**
   * Output only. This is set if this is a commercial subscription i.e. if this subscription was
   * created from subscribing to a commercial listing.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CommercialInfo commercialInfo;

  /**
   * Output only. Timestamp when the subscription was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String creationTime;

  /**
   * Output only. Resource name of the source Data Exchange. e.g.
   * projects/123/locations/US/dataExchanges/456
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataExchange;

  /**
   * Output only. Timestamp when the subscription was last modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastModifyTime;

  /**
   * Output only. Map of listing resource names to associated linked resource, e.g.
   * projects/123/locations/US/dataExchanges/456/listings/789 -> projects/123/datasets/my_dataset
   * For listing-level subscriptions, this is a map of size 1. Only contains values if state ==
   * STATE_ACTIVE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, LinkedResource> linkedDatasetMap;

  static {
    // hack to force ProGuard to consider LinkedResource used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(LinkedResource.class);
  }

  /**
   * Output only. Linked resources created in the subscription. Only contains values if state =
   * STATE_ACTIVE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<LinkedResource> linkedResources;

  static {
    // hack to force ProGuard to consider LinkedResource used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(LinkedResource.class);
  }

  /**
   * Output only. Resource name of the source Listing. e.g.
   * projects/123/locations/US/dataExchanges/456/listings/789
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String listing;

  /**
   * Output only. The resource name of the subscription. e.g.
   * `projects/myproject/locations/US/subscriptions/123`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Display name of the project of this subscription.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String organizationDisplayName;

  /**
   * Output only. Organization of the project this subscription belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String organizationId;

  /**
   * Output only. Listing shared asset type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceType;

  /**
   * Output only. Current state of the subscription.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Email of the subscriber.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subscriberContact;

  /**
   * Output only. This is set if this is a commercial subscription i.e. if this subscription was
   * created from subscribing to a commercial listing.
   * @return value or {@code null} for none
   */
  public CommercialInfo getCommercialInfo() {
    return commercialInfo;
  }

  /**
   * Output only. This is set if this is a commercial subscription i.e. if this subscription was
   * created from subscribing to a commercial listing.
   * @param commercialInfo commercialInfo or {@code null} for none
   */
  public Subscription setCommercialInfo(CommercialInfo commercialInfo) {
    this.commercialInfo = commercialInfo;
    return this;
  }

  /**
   * Output only. Timestamp when the subscription was created.
   * @return value or {@code null} for none
   */
  public String getCreationTime() {
    return creationTime;
  }

  /**
   * Output only. Timestamp when the subscription was created.
   * @param creationTime creationTime or {@code null} for none
   */
  public Subscription setCreationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Output only. Resource name of the source Data Exchange. e.g.
   * projects/123/locations/US/dataExchanges/456
   * @return value or {@code null} for none
   */
  public java.lang.String getDataExchange() {
    return dataExchange;
  }

  /**
   * Output only. Resource name of the source Data Exchange. e.g.
   * projects/123/locations/US/dataExchanges/456
   * @param dataExchange dataExchange or {@code null} for none
   */
  public Subscription setDataExchange(java.lang.String dataExchange) {
    this.dataExchange = dataExchange;
    return this;
  }

  /**
   * Output only. Timestamp when the subscription was last modified.
   * @return value or {@code null} for none
   */
  public String getLastModifyTime() {
    return lastModifyTime;
  }

  /**
   * Output only. Timestamp when the subscription was last modified.
   * @param lastModifyTime lastModifyTime or {@code null} for none
   */
  public Subscription setLastModifyTime(String lastModifyTime) {
    this.lastModifyTime = lastModifyTime;
    return this;
  }

  /**
   * Output only. Map of listing resource names to associated linked resource, e.g.
   * projects/123/locations/US/dataExchanges/456/listings/789 -> projects/123/datasets/my_dataset
   * For listing-level subscriptions, this is a map of size 1. Only contains values if state ==
   * STATE_ACTIVE.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, LinkedResource> getLinkedDatasetMap() {
    return linkedDatasetMap;
  }

  /**
   * Output only. Map of listing resource names to associated linked resource, e.g.
   * projects/123/locations/US/dataExchanges/456/listings/789 -> projects/123/datasets/my_dataset
   * For listing-level subscriptions, this is a map of size 1. Only contains values if state ==
   * STATE_ACTIVE.
   * @param linkedDatasetMap linkedDatasetMap or {@code null} for none
   */
  public Subscription setLinkedDatasetMap(java.util.Map<String, LinkedResource> linkedDatasetMap) {
    this.linkedDatasetMap = linkedDatasetMap;
    return this;
  }

  /**
   * Output only. Linked resources created in the subscription. Only contains values if state =
   * STATE_ACTIVE.
   * @return value or {@code null} for none
   */
  public java.util.List<LinkedResource> getLinkedResources() {
    return linkedResources;
  }

  /**
   * Output only. Linked resources created in the subscription. Only contains values if state =
   * STATE_ACTIVE.
   * @param linkedResources linkedResources or {@code null} for none
   */
  public Subscription setLinkedResources(java.util.List<LinkedResource> linkedResources) {
    this.linkedResources = linkedResources;
    return this;
  }

  /**
   * Output only. Resource name of the source Listing. e.g.
   * projects/123/locations/US/dataExchanges/456/listings/789
   * @return value or {@code null} for none
   */
  public java.lang.String getListing() {
    return listing;
  }

  /**
   * Output only. Resource name of the source Listing. e.g.
   * projects/123/locations/US/dataExchanges/456/listings/789
   * @param listing listing or {@code null} for none
   */
  public Subscription setListing(java.lang.String listing) {
    this.listing = listing;
    return this;
  }

  /**
   * Output only. The resource name of the subscription. e.g.
   * `projects/myproject/locations/US/subscriptions/123`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the subscription. e.g.
   * `projects/myproject/locations/US/subscriptions/123`.
   * @param name name or {@code null} for none
   */
  public Subscription setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Display name of the project of this subscription.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrganizationDisplayName() {
    return organizationDisplayName;
  }

  /**
   * Output only. Display name of the project of this subscription.
   * @param organizationDisplayName organizationDisplayName or {@code null} for none
   */
  public Subscription setOrganizationDisplayName(java.lang.String organizationDisplayName) {
    this.organizationDisplayName = organizationDisplayName;
    return this;
  }

  /**
   * Output only. Organization of the project this subscription belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrganizationId() {
    return organizationId;
  }

  /**
   * Output only. Organization of the project this subscription belongs to.
   * @param organizationId organizationId or {@code null} for none
   */
  public Subscription setOrganizationId(java.lang.String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Output only. Listing shared asset type.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceType() {
    return resourceType;
  }

  /**
   * Output only. Listing shared asset type.
   * @param resourceType resourceType or {@code null} for none
   */
  public Subscription setResourceType(java.lang.String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Output only. Current state of the subscription.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Current state of the subscription.
   * @param state state or {@code null} for none
   */
  public Subscription setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Email of the subscriber.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubscriberContact() {
    return subscriberContact;
  }

  /**
   * Output only. Email of the subscriber.
   * @param subscriberContact subscriberContact or {@code null} for none
   */
  public Subscription setSubscriberContact(java.lang.String subscriberContact) {
    this.subscriberContact = subscriberContact;
    return this;
  }

  @Override
  public Subscription set(String fieldName, Object value) {
    return (Subscription) super.set(fieldName, value);
  }

  @Override
  public Subscription clone() {
    return (Subscription) super.clone();
  }

}
