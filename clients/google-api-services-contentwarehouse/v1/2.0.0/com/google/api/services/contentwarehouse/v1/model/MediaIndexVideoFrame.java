/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Data about a frame associated with the video.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MediaIndexVideoFrame extends com.google.api.client.json.GenericJson {

  /**
   * The canonical docid of the frame.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger docid;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MediaIndexFrameIdentifier frameIdentifier;

  /**
   * Metadata associated with regions within this frame.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<MediaIndexRegion> regions;

  static {
    // hack to force ProGuard to consider MediaIndexRegion used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(MediaIndexRegion.class);
  }

  /**
   * Starburst v4 embedding and tokens.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String starburstFeaturesV4;

  /**
   * Note: due to the migration to Golden7-source Starburst v4 embedding, no starburst_tokens_v4
   * will be provided in video content corpus (go/video-content-corpus). But this field is kept in
   * case other purposes may still use it in the proto.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> starburstTokensV4;

  /**
   * Set of available thumbnail types for this frame. Should be valid image_base.ThumbnailType
   * values (enumerated at http://google3/image/base/thumbnail-type.proto).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> thumbnailType;

  /**
   * The canonical docid of the frame.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getDocid() {
    return docid;
  }

  /**
   * The canonical docid of the frame.
   * @param docid docid or {@code null} for none
   */
  public MediaIndexVideoFrame setDocid(java.math.BigInteger docid) {
    this.docid = docid;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public MediaIndexFrameIdentifier getFrameIdentifier() {
    return frameIdentifier;
  }

  /**
   * @param frameIdentifier frameIdentifier or {@code null} for none
   */
  public MediaIndexVideoFrame setFrameIdentifier(MediaIndexFrameIdentifier frameIdentifier) {
    this.frameIdentifier = frameIdentifier;
    return this;
  }

  /**
   * Metadata associated with regions within this frame.
   * @return value or {@code null} for none
   */
  public java.util.List<MediaIndexRegion> getRegions() {
    return regions;
  }

  /**
   * Metadata associated with regions within this frame.
   * @param regions regions or {@code null} for none
   */
  public MediaIndexVideoFrame setRegions(java.util.List<MediaIndexRegion> regions) {
    this.regions = regions;
    return this;
  }

  /**
   * Starburst v4 embedding and tokens.
   * @return value or {@code null} for none
   */
  public java.lang.String getStarburstFeaturesV4() {
    return starburstFeaturesV4;
  }

  /**
   * Starburst v4 embedding and tokens.
   * @param starburstFeaturesV4 starburstFeaturesV4 or {@code null} for none
   */
  public MediaIndexVideoFrame setStarburstFeaturesV4(java.lang.String starburstFeaturesV4) {
    this.starburstFeaturesV4 = starburstFeaturesV4;
    return this;
  }

  /**
   * Note: due to the migration to Golden7-source Starburst v4 embedding, no starburst_tokens_v4
   * will be provided in video content corpus (go/video-content-corpus). But this field is kept in
   * case other purposes may still use it in the proto.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getStarburstTokensV4() {
    return starburstTokensV4;
  }

  /**
   * Note: due to the migration to Golden7-source Starburst v4 embedding, no starburst_tokens_v4
   * will be provided in video content corpus (go/video-content-corpus). But this field is kept in
   * case other purposes may still use it in the proto.
   * @param starburstTokensV4 starburstTokensV4 or {@code null} for none
   */
  public MediaIndexVideoFrame setStarburstTokensV4(java.util.List<java.lang.String> starburstTokensV4) {
    this.starburstTokensV4 = starburstTokensV4;
    return this;
  }

  /**
   * Set of available thumbnail types for this frame. Should be valid image_base.ThumbnailType
   * values (enumerated at http://google3/image/base/thumbnail-type.proto).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getThumbnailType() {
    return thumbnailType;
  }

  /**
   * Set of available thumbnail types for this frame. Should be valid image_base.ThumbnailType
   * values (enumerated at http://google3/image/base/thumbnail-type.proto).
   * @param thumbnailType thumbnailType or {@code null} for none
   */
  public MediaIndexVideoFrame setThumbnailType(java.util.List<java.lang.Long> thumbnailType) {
    this.thumbnailType = thumbnailType;
    return this;
  }

  @Override
  public MediaIndexVideoFrame set(String fieldName, Object value) {
    return (MediaIndexVideoFrame) super.set(fieldName, value);
  }

  @Override
  public MediaIndexVideoFrame clone() {
    return (MediaIndexVideoFrame) super.clone();
  }

}
