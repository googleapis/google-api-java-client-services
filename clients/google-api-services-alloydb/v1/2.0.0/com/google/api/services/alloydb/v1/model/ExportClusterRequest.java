/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.alloydb.v1.model;

/**
 * Export cluster request.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AlloyDB API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ExportClusterRequest extends com.google.api.client.json.GenericJson {

  /**
   * Options for exporting data in CSV format. Required field to be set for CSV file type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CsvExportOptions csvExportOptions;

  /**
   * Required. Name of the database where the export command will be executed. Note - Value provided
   * should be the same as expected from `SELECT current_database();` and NOT as a resource
   * reference.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String database;

  /**
   * Required. Option to export data to cloud storage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GcsDestination gcsDestination;

  /**
   * Options for exporting data in SQL format. Required field to be set for SQL file type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SqlExportOptions sqlExportOptions;

  /**
   * Options for exporting data in CSV format. Required field to be set for CSV file type.
   * @return value or {@code null} for none
   */
  public CsvExportOptions getCsvExportOptions() {
    return csvExportOptions;
  }

  /**
   * Options for exporting data in CSV format. Required field to be set for CSV file type.
   * @param csvExportOptions csvExportOptions or {@code null} for none
   */
  public ExportClusterRequest setCsvExportOptions(CsvExportOptions csvExportOptions) {
    this.csvExportOptions = csvExportOptions;
    return this;
  }

  /**
   * Required. Name of the database where the export command will be executed. Note - Value provided
   * should be the same as expected from `SELECT current_database();` and NOT as a resource
   * reference.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabase() {
    return database;
  }

  /**
   * Required. Name of the database where the export command will be executed. Note - Value provided
   * should be the same as expected from `SELECT current_database();` and NOT as a resource
   * reference.
   * @param database database or {@code null} for none
   */
  public ExportClusterRequest setDatabase(java.lang.String database) {
    this.database = database;
    return this;
  }

  /**
   * Required. Option to export data to cloud storage.
   * @return value or {@code null} for none
   */
  public GcsDestination getGcsDestination() {
    return gcsDestination;
  }

  /**
   * Required. Option to export data to cloud storage.
   * @param gcsDestination gcsDestination or {@code null} for none
   */
  public ExportClusterRequest setGcsDestination(GcsDestination gcsDestination) {
    this.gcsDestination = gcsDestination;
    return this;
  }

  /**
   * Options for exporting data in SQL format. Required field to be set for SQL file type.
   * @return value or {@code null} for none
   */
  public SqlExportOptions getSqlExportOptions() {
    return sqlExportOptions;
  }

  /**
   * Options for exporting data in SQL format. Required field to be set for SQL file type.
   * @param sqlExportOptions sqlExportOptions or {@code null} for none
   */
  public ExportClusterRequest setSqlExportOptions(SqlExportOptions sqlExportOptions) {
    this.sqlExportOptions = sqlExportOptions;
    return this;
  }

  @Override
  public ExportClusterRequest set(String fieldName, Object value) {
    return (ExportClusterRequest) super.set(fieldName, value);
  }

  @Override
  public ExportClusterRequest clone() {
    return (ExportClusterRequest) super.clone();
  }

}
