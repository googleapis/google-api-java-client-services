{
  "basePath": "",
  "id": "iam:v1",
  "documentationLink": "https://cloud.google.com/iam/",
  "revision": "20190802",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "SignBlobResponse": {
      "description": "The service account sign blob response.",
      "type": "object",
      "properties": {
        "signature": {
          "type": "string",
          "description": "The signed blob.",
          "format": "byte"
        },
        "keyId": {
          "description": "The id of the key used to sign the blob.",
          "type": "string"
        }
      },
      "id": "SignBlobResponse"
    },
    "LintPolicyRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "Policy object to be linted. The functionality of linting a policy is not\nyet implemented and if this field is set, it returns NOT_IMPLEMENTED\nerror."
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "`context` contains additional *permission-controlled* data that any\nlint unit may depend on, in form of `{key: value}` pairs. Currently, this\nfield is non-operational and it will not be used during the lint operation."
        },
        "condition": {
          "$ref": "Expr",
          "description": "google.iam.v1.Binding.condition object to be linted."
        },
        "fullResourceName": {
          "description": "The full resource name of the policy this lint request is about.\n\nThe name follows the Google Cloud Platform (GCP) resource format.\nFor example, a GCP project with ID `my-project` will be named\n`//cloudresourcemanager.googleapis.com/projects/my-project`.\n\nThe resource name is not used to read the policy instance from the Cloud\nIAM database. The candidate policy for lint has to be provided in the same\nrequest object.",
          "type": "string"
        },
        "binding": {
          "$ref": "Binding",
          "description": "Binding object to be linted. The functionality of linting a binding is\nnot yet implemented and if this field is set, it returns NOT_IMPLEMENTED\nerror."
        }
      },
      "id": "LintPolicyRequest",
      "description": "The request to lint a Cloud IAM policy object. LintPolicy is currently\nfunctional only for `lint_object` of type `condition`."
    },
    "SignJwtRequest": {
      "id": "SignJwtRequest",
      "description": "The service account sign JWT request.",
      "type": "object",
      "properties": {
        "payload": {
          "description": "The JWT payload to sign, a JSON JWT Claim set.",
          "type": "string"
        }
      }
    },
    "Permission": {
      "description": "A permission which can be included by a role.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this Permission.",
          "type": "string"
        },
        "primaryPermission": {
          "description": "The preferred name for this permission. If present, then this permission is\nan alias of, and equivalent to, the listed primary_permission.",
          "type": "string"
        },
        "onlyInPredefinedRoles": {
          "description": "This permission can ONLY be used in predefined roles.",
          "type": "boolean"
        },
        "title": {
          "description": "The title of this Permission.",
          "type": "string"
        },
        "description": {
          "description": "A brief description of what this Permission is used for.",
          "type": "string"
        },
        "customRolesSupportLevel": {
          "type": "string",
          "enumDescriptions": [
            "Permission is fully supported for custom role use.",
            "Permission is being tested to check custom role compatibility.",
            "Permission is not supported for custom role use."
          ],
          "enum": [
            "SUPPORTED",
            "TESTING",
            "NOT_SUPPORTED"
          ],
          "description": "The current custom role support level."
        },
        "apiDisabled": {
          "type": "boolean",
          "description": "The service API associated with the permission is not enabled."
        },
        "stage": {
          "enumDescriptions": [
            "The permission is currently in an alpha phase.",
            "The permission is currently in a beta phase.",
            "The permission is generally available.",
            "The permission is being deprecated."
          ],
          "enum": [
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ],
          "description": "The current launch stage of the permission.",
          "type": "string"
        }
      },
      "id": "Permission"
    },
    "PolicyDelta": {
      "type": "object",
      "properties": {
        "bindingDeltas": {
          "description": "The delta for Bindings between two policies.",
          "type": "array",
          "items": {
            "$ref": "BindingDelta"
          }
        }
      },
      "id": "PolicyDelta",
      "description": "The difference delta between two policies."
    },
    "AuditableService": {
      "description": "Contains information about an auditable service.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Public name of the service.\nFor example, the service name for Cloud IAM is 'iam.googleapis.com'.",
          "type": "string"
        }
      },
      "id": "AuditableService"
    },
    "PermissionDelta": {
      "id": "PermissionDelta",
      "description": "A PermissionDelta message to record the added_permissions and\nremoved_permissions inside a role.",
      "type": "object",
      "properties": {
        "addedPermissions": {
          "description": "Added permissions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removedPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Removed permissions."
        }
      }
    },
    "ListServiceAccountsResponse": {
      "id": "ListServiceAccountsResponse",
      "description": "The service account list response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "To retrieve the next page of results, set\nListServiceAccountsRequest.page_token\nto this value.",
          "type": "string"
        },
        "accounts": {
          "description": "The list of matching service accounts.",
          "type": "array",
          "items": {
            "$ref": "ServiceAccount"
          }
        }
      }
    },
    "LintResult": {
      "type": "object",
      "properties": {
        "level": {
          "description": "The validation unit level.",
          "type": "string",
          "enumDescriptions": [
            "Level is unspecified.",
            "A validation unit which operates on a policy. It is executed only if the\ninput object to lint is of type google.iam.v1.Policy.",
            "A validation unit which operates on an individual binding. It is executed\nin both cases where the input object to lint is of type\ngoogle.iam.v1.Policy or google.iam.v1.Binding.",
            "A validation unit which operates on an individual condition within a\nbinding. It is executed in all three cases where the input object to\nlint is of type google.iam.v1.Policy,\ngoogle.iam.v1.Binding or\ngoogle.iam.v1.Binding.condition."
          ],
          "enum": [
            "LEVEL_UNSPECIFIED",
            "POLICY",
            "BINDING",
            "CONDITION"
          ]
        },
        "severity": {
          "type": "string",
          "enumDescriptions": [
            "Severity is unspecified.",
            "A validation unit returns an error only for critical issues. If an\nattempt is made to set the problematic policy without rectifying the\ncritical issue, it causes the `setPolicy` operation to fail.",
            "Any issue which is severe enough but does not cause an error.\nFor example, suspicious constructs in the input object will not\nnecessarily fail `setPolicy`, but there is a high likelihood that they\nwon't behave as expected during policy evaluation in `checkPolicy`.\nThis includes the following common scenarios:\n\n- Unsatisfiable condition: Expired timestamp in date/time condition.\n- Ineffective condition: Condition on a \u003cmember, role\u003e pair which is\n  granted unconditionally in another binding of the same policy.",
            "Reserved for the issues that are not severe as `ERROR`/`WARNING`, but\nneed special handling. For instance, messages about skipped validation\nunits are issued as `NOTICE`.",
            "Any informative statement which is not severe enough to raise\n`ERROR`/`WARNING`/`NOTICE`, like auto-correction recommendations on the\ninput content. Note that current version of the linter does not utilize\n`INFO`.",
            "Deprecated severity level."
          ],
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "NOTICE",
            "INFO",
            "DEPRECATED"
          ],
          "description": "The validation unit severity."
        },
        "bindingOrdinal": {
          "description": "0-based index ordinality of the binding in the input object associated\nwith this result.\nThis field is populated only if the input object to lint is of type\ngoogle.iam.v1.Policy, which can comprise more than one binding.\nIt is set to -1 if the result is not associated with any particular\nbinding and only targets the policy as a whole, such as results about\npolicy size violations.",
          "format": "int32",
          "type": "integer"
        },
        "validationUnitName": {
          "description": "The validation unit name, for instance\n“lintValidationUnits/ConditionComplexityCheck”.",
          "type": "string"
        },
        "locationOffset": {
          "description": "0-based character position of problematic construct within the object\nidentified by `field_name`. Currently, this is populated only for condition\nexpression.",
          "format": "int32",
          "type": "integer"
        },
        "debugMessage": {
          "description": "Human readable debug message associated with the issue.",
          "type": "string"
        },
        "fieldName": {
          "description": "The name of the field for which this lint result is about.\n\nFor nested messages, `field_name` consists of names of the embedded fields\nseparated by period character. The top-level qualifier is the input object\nto lint in the request. For instance, if the lint request is on a\ngoogle.iam.v1.Policy and this lint result is about a condition\nexpression of one of the input policy bindings, the field would be\npopulated as `policy.bindings.condition.expression`.\n\nThis field does not identify the ordinality of the repetitive fields (for\ninstance bindings in a policy).",
          "type": "string"
        }
      },
      "id": "LintResult",
      "description": "Structured response of a single validation unit."
    },
    "QueryGrantableRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "description": "The list of matching roles.",
          "type": "array",
          "items": {
            "$ref": "Role"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "To retrieve the next page of results, set\n`QueryGrantableRolesRequest.page_token` to this value."
        }
      },
      "id": "QueryGrantableRolesResponse",
      "description": "The grantable role query response."
    },
    "SignBlobRequest": {
      "id": "SignBlobRequest",
      "description": "The service account sign blob request.",
      "type": "object",
      "properties": {
        "bytesToSign": {
          "description": "The bytes to sign.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        },
        "updateMask": {
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "format": "google-fieldmask"
        }
      },
      "id": "SetIamPolicyRequest"
    },
    "DisableServiceAccountRequest": {
      "description": "The service account disable request.",
      "type": "object",
      "properties": {},
      "id": "DisableServiceAccountRequest"
    },
    "QueryTestablePermissionsResponse": {
      "description": "The response containing permissions which can be tested on a resource.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The Permissions testable on the requested resource.",
          "type": "array",
          "items": {
            "$ref": "Permission"
          }
        },
        "nextPageToken": {
          "description": "To retrieve the next page of results, set\n`QueryTestableRolesRequest.page_token` to this value.",
          "type": "string"
        }
      },
      "id": "QueryTestablePermissionsResponse"
    },
    "AdminAuditData": {
      "id": "AdminAuditData",
      "description": "Audit log information specific to Cloud IAM admin APIs. This message is\nserialized as an `Any` type in the `ServiceData` message of an\n`AuditLog` message.",
      "type": "object",
      "properties": {
        "permissionDelta": {
          "description": "The permission_delta when when creating or updating a Role.",
          "$ref": "PermissionDelta"
        }
      }
    },
    "PatchServiceAccountRequest": {
      "type": "object",
      "properties": {
        "serviceAccount": {
          "$ref": "ServiceAccount"
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "id": "PatchServiceAccountRequest",
      "description": "The patch service account request."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "AuditLogConfig": {
      "type": "object",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables."
        }
      },
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging."
    },
    "CreateServiceAccountKeyRequest": {
      "type": "object",
      "properties": {
        "keyAlgorithm": {
          "enumDescriptions": [
            "An unspecified key algorithm.",
            "1k RSA Key.",
            "2k RSA Key."
          ],
          "enum": [
            "KEY_ALG_UNSPECIFIED",
            "KEY_ALG_RSA_1024",
            "KEY_ALG_RSA_2048"
          ],
          "description": "Which type of key and algorithm to use for the key.\nThe default is currently a 2K RSA key.  However this may change in the\nfuture.",
          "type": "string"
        },
        "privateKeyType": {
          "enumDescriptions": [
            "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
            "PKCS12 format.\nThe password for the PKCS12 file is `notasecret`.\nFor more information, see https://tools.ietf.org/html/rfc7292.",
            "Google Credentials File format."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PKCS12_FILE",
            "TYPE_GOOGLE_CREDENTIALS_FILE"
          ],
          "description": "The output format of the private key. The default value is\n`TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File\nformat.",
          "type": "string"
        }
      },
      "id": "CreateServiceAccountKeyRequest",
      "description": "The service account key create request."
    },
    "SignJwtResponse": {
      "description": "The service account sign JWT response.",
      "type": "object",
      "properties": {
        "keyId": {
          "description": "The id of the key used to sign the JWT.",
          "type": "string"
        },
        "signedJwt": {
          "description": "The signed JWT.",
          "type": "string"
        }
      },
      "id": "SignJwtResponse"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest"
    },
    "Policy": {
      "id": "Policy",
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-other-app@appspot.gserviceaccount.com\n      role: roles/owner\n    - members:\n      - user:sean@example.com\n      role: roles/viewer\n\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam/docs).",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten.",
          "format": "byte"
        },
        "version": {
          "type": "integer",
          "description": "Deprecated.",
          "format": "int32"
        },
        "auditConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy."
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error."
        }
      }
    },
    "ListRolesResponse": {
      "description": "The response containing the roles defined under a resource.",
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "Role"
          },
          "description": "The Roles defined on this resource."
        },
        "nextPageToken": {
          "description": "To retrieve the next page of results, set\n`ListRolesRequest.page_token` to this value.",
          "type": "string"
        }
      },
      "id": "ListRolesResponse"
    },
    "AuditData": {
      "description": "Audit log information specific to Cloud IAM. This message is serialized\nas an `Any` type in the `ServiceData` message of an\n`AuditLog` message.",
      "type": "object",
      "properties": {
        "policyDelta": {
          "description": "Policy delta between the original policy and the newly set policy.",
          "$ref": "PolicyDelta"
        }
      },
      "id": "AuditData"
    },
    "UndeleteServiceAccountRequest": {
      "id": "UndeleteServiceAccountRequest",
      "description": "The service account undelete request.",
      "type": "object",
      "properties": {}
    },
    "BindingDelta": {
      "id": "BindingDelta",
      "description": "One delta entry for Binding. Each individual change (only one member in each\nentry) to a binding will be a separate entry.",
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.\nRequired"
        },
        "action": {
          "enum": [
            "ACTION_UNSPECIFIED",
            "ADD",
            "REMOVE"
          ],
          "description": "The action that was performed on a Binding.\nRequired",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Addition of a Binding.",
            "Removal of a Binding."
          ]
        },
        "member": {
          "description": "A single identity requesting access for a Cloud Platform resource.\nFollows the same format of Binding.members.\nRequired",
          "type": "string"
        },
        "condition": {
          "$ref": "Expr",
          "description": "Unimplemented. The condition that is associated with this binding.\nThis field is logged only for Cloud Audit Logging."
        }
      }
    },
    "QueryAuditableServicesRequest": {
      "description": "A request to get the list of auditable services for a resource.",
      "type": "object",
      "properties": {
        "fullResourceName": {
          "description": "Required. The full resource name to query from the list of auditable\nservices.\n\nThe name follows the Google Cloud Platform resource format.\nFor example, a Cloud Platform project with id `my-project` will be named\n`//cloudresourcemanager.googleapis.com/projects/my-project`.",
          "type": "string"
        }
      },
      "id": "QueryAuditableServicesRequest"
    },
    "UndeleteRoleRequest": {
      "id": "UndeleteRoleRequest",
      "description": "The request to undelete an existing role.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Used to perform a consistent read-modify-write.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        }
      },
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging."
    },
    "CreateServiceAccountRequest": {
      "description": "The service account create request.",
      "type": "object",
      "properties": {
        "serviceAccount": {
          "$ref": "ServiceAccount",
          "description": "The ServiceAccount resource to\ncreate. Currently, only the following values are user assignable:\n`display_name` ."
        },
        "accountId": {
          "description": "Required. The account id that is used to generate the service account\nemail address and a stable unique id. It is unique within a project,\nmust be 6-30 characters long, and match the regular expression\n`[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.",
          "type": "string"
        }
      },
      "id": "CreateServiceAccountRequest"
    },
    "Role": {
      "id": "Role",
      "description": "A role in the Identity and Access Management API.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Used to perform a consistent read-modify-write.",
          "format": "byte",
          "type": "string"
        },
        "stage": {
          "type": "string",
          "enumDescriptions": [
            "The user has indicated this role is currently in an Alpha phase. If this\nlaunch stage is selected, the `stage` field will not be included when\nrequesting the definition for a given role.",
            "The user has indicated this role is currently in a Beta phase.",
            "The user has indicated this role is generally available.",
            "The user has indicated this role is being deprecated.",
            "This role is disabled and will not contribute permissions to any members\nit is granted to in policies.",
            "The user has indicated this role is currently in an EAP phase."
          ],
          "enum": [
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED",
            "DISABLED",
            "EAP"
          ],
          "description": "The current launch stage of the role. If the `ALPHA` launch stage has been\nselected for a role, the `stage` field will not be included in the\nreturned definition for the role."
        },
        "name": {
          "description": "The name of the role.\n\nWhen Role is used in CreateRole, the role name must not be set.\n\nWhen Role is used in output and other input such as UpdateRole, the role\nname is the complete path, e.g., roles/logging.viewer for predefined roles\nand organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "The current deleted state of the role. This field is read only.\nIt will be ignored in calls to CreateRole and UpdateRole."
        },
        "title": {
          "type": "string",
          "description": "Optional. A human-readable title for the role.  Typically this\nis limited to 100 UTF-8 bytes."
        },
        "includedPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The names of the permissions this role grants when bound in an IAM policy."
        },
        "description": {
          "type": "string",
          "description": "Optional. A human-readable description for the role."
        }
      }
    },
    "QueryAuditableServicesResponse": {
      "description": "A response containing a list of auditable services for a resource.",
      "type": "object",
      "properties": {
        "services": {
          "description": "The auditable services for a resource.",
          "type": "array",
          "items": {
            "$ref": "AuditableService"
          }
        }
      },
      "id": "QueryAuditableServicesResponse"
    },
    "UndeleteServiceAccountResponse": {
      "type": "object",
      "properties": {
        "restoredAccount": {
          "$ref": "ServiceAccount",
          "description": "Metadata for the restored service account."
        }
      },
      "id": "UndeleteServiceAccountResponse"
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
          "$ref": "Expr"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      }
    },
    "Expr": {
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) \u003e 0\"",
      "type": "object",
      "properties": {
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported."
        }
      },
      "id": "Expr"
    },
    "ServiceAccount": {
      "type": "object",
      "properties": {
        "etag": {
          "description": "Optional. Note: `etag` is an inoperable legacy field that is only returned\nfor backwards compatibility.",
          "format": "byte",
          "type": "string"
        },
        "disabled": {
          "description": "@OutputOnly A bool indicate if the service account is disabled.\nThe field is currently in alpha phase.",
          "type": "boolean"
        },
        "name": {
          "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\n\nRequests using `-` as a wildcard for the `PROJECT_ID` will infer the\nproject from the `account` and the `ACCOUNT` value can be the `email`\naddress or the `unique_id` of the service account.\n\nIn responses the resource name will always be in the format\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.",
          "type": "string"
        },
        "email": {
          "description": "@OutputOnly The email address of the service account.",
          "type": "string"
        },
        "projectId": {
          "description": "@OutputOnly The id of the project that owns the service account.",
          "type": "string"
        },
        "uniqueId": {
          "description": "@OutputOnly The unique and stable id of the service account.",
          "type": "string"
        },
        "oauth2ClientId": {
          "description": "@OutputOnly The OAuth2 client id for the service account.\nThis is used in conjunction with the OAuth2 clientconfig API to make\nthree legged OAuth2 (3LO) flows to access the data of Google users.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. A user-specified name for the service account.\nMust be less than or equal to 100 UTF-8 bytes.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. A user-specified opaque description of the service account.\nMust be less than or equal to 256 UTF-8 bytes."
        }
      },
      "id": "ServiceAccount",
      "description": "A service account in the Identity and Access Management API.\n\nTo create a service account, specify the `project_id` and the `account_id`\nfor the account.  The `account_id` is unique within the project, and is used\nto generate the service account email address and a stable\n`unique_id`.\n\nIf the account already exists, the account's resource name is returned\nin the format of projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}. The caller\ncan use the name in other methods to access the account.\n\nAll other methods can identify the service account using the format\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account."
    },
    "QueryGrantableRolesRequest": {
      "id": "QueryGrantableRolesRequest",
      "description": "The grantable role query request.",
      "type": "object",
      "properties": {
        "view": {
          "type": "string",
          "enumDescriptions": [
            "Omits the `included_permissions` field.\nThis is the default value.",
            "Returns all fields."
          ],
          "enum": [
            "BASIC",
            "FULL"
          ]
        },
        "fullResourceName": {
          "type": "string",
          "description": "Required. The full resource name to query from the list of grantable roles.\n\nThe name follows the Google Cloud Platform resource format.\nFor example, a Cloud Platform project with id `my-project` will be named\n`//cloudresourcemanager.googleapis.com/projects/my-project`."
        },
        "pageToken": {
          "description": "Optional pagination token returned in an earlier\nQueryGrantableRolesResponse.",
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "description": "Optional limit on the number of roles to include in the response.",
          "format": "int32"
        }
      }
    },
    "EnableServiceAccountRequest": {
      "id": "EnableServiceAccountRequest",
      "description": "The service account enable request.",
      "type": "object",
      "properties": {}
    },
    "LintPolicyResponse": {
      "description": "The response of a lint operation. An empty response indicates\nthe operation was able to fully execute and no lint issue was found.",
      "type": "object",
      "properties": {
        "lintResults": {
          "description": "List of lint results sorted by a composite \u003cseverity, binding_ordinal\u003e key,\ndescending order of severity and ascending order of binding_ordinal.\nThere is no certain order among the same keys.\n\nFor cross-binding results (only if the input object to lint is\ninstance of google.iam.v1.Policy), there will be a\ngoogle.iam.admin.v1.LintResult for each of the involved bindings,\nand the associated debug_message may enumerate the other involved\nbinding ordinal number(s).",
          "type": "array",
          "items": {
            "$ref": "LintResult"
          }
        }
      },
      "id": "LintPolicyResponse"
    },
    "CreateRoleRequest": {
      "description": "The request to create a new role.",
      "type": "object",
      "properties": {
        "role": {
          "$ref": "Role",
          "description": "The Role resource to create."
        },
        "roleId": {
          "type": "string",
          "description": "The role ID to use for this role."
        }
      },
      "id": "CreateRoleRequest"
    },
    "ListServiceAccountKeysResponse": {
      "id": "ListServiceAccountKeysResponse",
      "description": "The service account keys list response.",
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "$ref": "ServiceAccountKey"
          },
          "description": "The public keys for the service account."
        }
      }
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsResponse"
    },
    "QueryTestablePermissionsRequest": {
      "description": "A request to get permissions which can be tested on a resource.",
      "type": "object",
      "properties": {
        "fullResourceName": {
          "description": "Required. The full resource name to query from the list of testable\npermissions.\n\nThe name follows the Google Cloud Platform resource format.\nFor example, a Cloud Platform project with id `my-project` will be named\n`//cloudresourcemanager.googleapis.com/projects/my-project`.",
          "type": "string"
        },
        "pageToken": {
          "description": "Optional pagination token returned in an earlier\nQueryTestablePermissionsRequest.",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional limit on the number of permissions to include in the response.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "QueryTestablePermissionsRequest"
    },
    "ServiceAccountKey": {
      "description": "Represents a service account key.\n\nA service account has two sets of key-pairs: user-managed, and\nsystem-managed.\n\nUser-managed key-pairs can be created and deleted by users.  Users are\nresponsible for rotating these keys periodically to ensure security of\ntheir service accounts.  Users retain the private key of these key-pairs,\nand Google retains ONLY the public key.\n\nSystem-managed keys are automatically rotated by Google, and are used for\nsigning for a maximum of two weeks. The rotation process is probabilistic,\nand usage of the new key will gradually ramp up and down over the key's\nlifetime. We recommend caching the public key set for a service account for\nno more than 24 hours to ensure you have access to the latest keys.\n\nPublic keys for all service accounts are also published at the OAuth2\nService Account API.",
      "type": "object",
      "properties": {
        "keyAlgorithm": {
          "description": "Specifies the algorithm (and possibly key size) for the key.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified key algorithm.",
            "1k RSA Key.",
            "2k RSA Key."
          ],
          "enum": [
            "KEY_ALG_UNSPECIFIED",
            "KEY_ALG_RSA_1024",
            "KEY_ALG_RSA_2048"
          ]
        },
        "keyOrigin": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified key origin.",
            "Key is provided by user.",
            "Key is provided by Google."
          ],
          "enum": [
            "ORIGIN_UNSPECIFIED",
            "USER_PROVIDED",
            "GOOGLE_PROVIDED"
          ],
          "description": "The key origin."
        },
        "validAfterTime": {
          "type": "string",
          "description": "The key can be used after this timestamp.",
          "format": "google-datetime"
        },
        "privateKeyType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
            "PKCS12 format.\nThe password for the PKCS12 file is `notasecret`.\nFor more information, see https://tools.ietf.org/html/rfc7292.",
            "Google Credentials File format."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PKCS12_FILE",
            "TYPE_GOOGLE_CREDENTIALS_FILE"
          ],
          "description": "The output format for the private key.\nOnly provided in `CreateServiceAccountKey` responses, not\nin `GetServiceAccountKey` or `ListServiceAccountKey` responses.\n\nGoogle never exposes system-managed private keys, and never retains\nuser-managed private keys."
        },
        "privateKeyData": {
          "type": "string",
          "description": "The private key data. Only provided in `CreateServiceAccountKey`\nresponses. Make sure to keep the private key data secure because it\nallows for the assertion of the service account identity.\nWhen base64 decoded, the private key data can be used to authenticate with\nGoogle API client libraries and with\n\u003ca href=\"/sdk/gcloud/reference/auth/activate-service-account\"\u003egcloud\nauth activate-service-account\u003c/a\u003e.",
          "format": "byte"
        },
        "publicKeyData": {
          "description": "The public key data. Only provided in `GetServiceAccountKey` responses.",
          "format": "byte",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the service account key in the following format\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`."
        },
        "validBeforeTime": {
          "type": "string",
          "description": "The key can be used before this timestamp.",
          "format": "google-datetime"
        }
      },
      "id": "ServiceAccountKey"
    }
  },
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "canonicalName": "iam",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://iam.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "iam",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Identity and Access Management (IAM) API",
  "ownerName": "Google",
  "resources": {
    "organizations": {
      "resources": {
        "roles": {
          "methods": {
            "list": {
              "description": "Lists the Roles defined on a resource.",
              "response": {
                "$ref": "ListRolesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The `parent` parameter's value depends on the target resource for the\nrequest, namely\n[`roles`](/iam/reference/rest/v1/roles),\n[`projects`](/iam/reference/rest/v1/projects.roles), or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `parent` value format is described below:\n\n* [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.\n  This method doesn't require a resource; it simply returns all\n  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in\n  Cloud IAM. Example request URL:\n  `https://iam.googleapis.com/v1/roles`\n\n* [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):\n  `projects/{PROJECT_ID}`. This method lists all project-level\n  [custom roles](/iam/docs/understanding-custom-roles).\n  Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`\n\n* [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):\n  `organizations/{ORGANIZATION_ID}`. This method lists all\n  organization-level [custom roles](/iam/docs/understanding-custom-roles).\n  Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                },
                "showDeleted": {
                  "description": "Include Roles that have been deleted.",
                  "type": "boolean",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Optional pagination token returned in an earlier ListRolesResponse.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Optional limit on the number of roles to include in the response.",
                  "format": "int32",
                  "type": "integer"
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "BASIC",
                    "FULL"
                  ],
                  "description": "Optional view for the returned Role objects. When `FULL` is specified,\nthe `includedPermissions` field is returned, which includes a list of all\npermissions in the role. The default value is `BASIC`, which does not\nreturn the `includedPermissions` field.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/roles",
              "path": "v1/{+parent}/roles",
              "id": "iam.organizations.roles.list"
            },
            "create": {
              "id": "iam.organizations.roles.create",
              "path": "v1/{+parent}/roles",
              "description": "Creates a new Role.",
              "request": {
                "$ref": "CreateRoleRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "Role"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "The `parent` parameter's value depends on the target resource for the\nrequest, namely\n[`projects`](/iam/reference/rest/v1/projects.roles) or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `parent` value format is described below:\n\n* [`projects.roles.create()`](/iam/reference/rest/v1/projects.roles/create):\n  `projects/{PROJECT_ID}`. This method creates project-level\n  [custom roles](/iam/docs/understanding-custom-roles).\n  Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`\n\n* [`organizations.roles.create()`](/iam/reference/rest/v1/organizations.roles/create):\n  `organizations/{ORGANIZATION_ID}`. This method creates organization-level\n  [custom roles](/iam/docs/understanding-custom-roles). Example request\n  URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/roles"
            },
            "undelete": {
              "response": {
                "$ref": "Role"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "The `name` parameter's value depends on the target resource for the\nrequest, namely\n[`projects`](/iam/reference/rest/v1/projects.roles) or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `name` value format is described below:\n\n* [`projects.roles.undelete()`](/iam/reference/rest/v1/projects.roles/undelete):\n  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes\n  only [custom roles](/iam/docs/understanding-custom-roles) that have been\n  created at the project level. Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`\n\n* [`organizations.roles.undelete()`](/iam/reference/rest/v1/organizations.roles/undelete):\n  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method\n  undeletes only [custom roles](/iam/docs/understanding-custom-roles) that\n  have been created at the organization level. Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/roles/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/roles/{rolesId}:undelete",
              "path": "v1/{+name}:undelete",
              "id": "iam.organizations.roles.undelete",
              "request": {
                "$ref": "UndeleteRoleRequest"
              },
              "description": "Undelete a Role, bringing it back in its previous state."
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Role"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/roles/[^/]+$",
                  "location": "path",
                  "description": "The `name` parameter's value depends on the target resource for the\nrequest, namely\n[`roles`](/iam/reference/rest/v1/roles),\n[`projects`](/iam/reference/rest/v1/projects.roles), or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `name` value format is described below:\n\n* [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.\n  This method returns results from all\n  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in\n  Cloud IAM. Example request URL:\n  `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`\n\n* [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):\n  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only\n  [custom roles](/iam/docs/understanding-custom-roles) that have been\n  created at the project level. Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`\n\n* [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):\n  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method\n  returns only [custom roles](/iam/docs/understanding-custom-roles) that\n  have been created at the organization level. Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/roles/{rolesId}",
              "id": "iam.organizations.roles.get",
              "path": "v1/{+name}",
              "description": "Gets a Role definition."
            },
            "patch": {
              "response": {
                "$ref": "Role"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/roles/[^/]+$",
                  "location": "path",
                  "description": "The `name` parameter's value depends on the target resource for the\nrequest, namely\n[`projects`](/iam/reference/rest/v1/projects.roles) or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `name` value format is described below:\n\n* [`projects.roles.patch()`](/iam/reference/rest/v1/projects.roles/patch):\n  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only\n  [custom roles](/iam/docs/understanding-custom-roles) that have been\n  created at the project level. Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`\n\n* [`organizations.roles.patch()`](/iam/reference/rest/v1/organizations.roles/patch):\n  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method\n  updates only [custom roles](/iam/docs/understanding-custom-roles) that\n  have been created at the organization level. Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID.",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "description": "A mask describing which fields in the Role have changed.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/roles/{rolesId}",
              "path": "v1/{+name}",
              "id": "iam.organizations.roles.patch",
              "description": "Updates a Role definition.",
              "request": {
                "$ref": "Role"
              }
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Role"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/roles/[^/]+$",
                  "location": "path",
                  "description": "The `name` parameter's value depends on the target resource for the\nrequest, namely\n[`projects`](/iam/reference/rest/v1/projects.roles) or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `name` value format is described below:\n\n* [`projects.roles.delete()`](/iam/reference/rest/v1/projects.roles/delete):\n  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only\n  [custom roles](/iam/docs/understanding-custom-roles) that have been\n  created at the project level. Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`\n\n* [`organizations.roles.delete()`](/iam/reference/rest/v1/organizations.roles/delete):\n  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method\n  deletes only [custom roles](/iam/docs/understanding-custom-roles) that\n  have been created at the organization level. Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID."
                },
                "etag": {
                  "location": "query",
                  "description": "Used to perform a consistent read-modify-write.",
                  "format": "byte",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/roles/{rolesId}",
              "id": "iam.organizations.roles.delete",
              "path": "v1/{+name}",
              "description": "Soft deletes a role. The role is suspended and cannot be used to create new\nIAM Policy Bindings.\nThe Role will not be included in `ListRoles()` unless `show_deleted` is set\nin the `ListRolesRequest`. The Role contains the deleted boolean set.\nExisting Bindings remains, but are inactive. The Role can be undeleted\nwithin 7 days. After 7 days the Role is deleted and all Bindings associated\nwith the role are removed."
            }
          }
        }
      }
    },
    "iamPolicies": {
      "methods": {
        "lintPolicy": {
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/iamPolicies:lintPolicy",
          "path": "v1/iamPolicies:lintPolicy",
          "id": "iam.iamPolicies.lintPolicy",
          "description": "Lints a Cloud IAM policy object or its sub fields. Currently supports\ngoogle.iam.v1.Policy, google.iam.v1.Binding and\ngoogle.iam.v1.Binding.condition.\n\nEach lint operation consists of multiple lint validation units.\nValidation units have the following properties:\n\n- Each unit inspects the input object in regard to a particular\n  linting aspect and issues a google.iam.admin.v1.LintResult\n  disclosing the result.\n- Domain of discourse of each unit can be either\n  google.iam.v1.Policy, google.iam.v1.Binding, or\n  google.iam.v1.Binding.condition depending on the purpose of the\n  validation.\n- A unit may require additional data (like the list of all possible\n  enumerable values of a particular attribute used in the policy instance)\n  which shall be provided by the caller. Refer to the comments of\n  google.iam.admin.v1.LintPolicyRequest.context for more details.\n\nThe set of applicable validation units is determined by the Cloud IAM\nserver and is not configurable.\n\nRegardless of any lint issues or their severities, successful calls to\n`lintPolicy` return an HTTP 200 OK status code.",
          "request": {
            "$ref": "LintPolicyRequest"
          },
          "response": {
            "$ref": "LintPolicyResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST"
        },
        "queryAuditableServices": {
          "response": {
            "$ref": "QueryAuditableServicesResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {},
          "flatPath": "v1/iamPolicies:queryAuditableServices",
          "path": "v1/iamPolicies:queryAuditableServices",
          "id": "iam.iamPolicies.queryAuditableServices",
          "request": {
            "$ref": "QueryAuditableServicesRequest"
          },
          "description": "Returns a list of services that support service level audit logging\nconfiguration for the given resource."
        }
      }
    },
    "projects": {
      "resources": {
        "serviceAccounts": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListServiceAccountsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the project associated with the service\naccounts, such as `projects/my-project-123`."
                },
                "pageToken": {
                  "location": "query",
                  "description": "Optional pagination token returned in an earlier\nListServiceAccountsResponse.next_page_token.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Optional limit on the number of service accounts to include in the\nresponse. Further accounts can subsequently be obtained by including the\nListServiceAccountsResponse.next_page_token\nin a subsequent request.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts",
              "path": "v1/{+name}/serviceAccounts",
              "id": "iam.projects.serviceAccounts.list",
              "description": "Lists ServiceAccounts for a project."
            },
            "signJwt": {
              "request": {
                "$ref": "SignJwtRequest"
              },
              "description": "**Note**: This method is in the process of being deprecated. Call the\n[`signJwt()`](/iam/credentials/reference/rest/v1/projects.serviceAccounts/signJwt)\nmethod of the Cloud IAM Service Account Credentials API instead.\n\nSigns a JWT using a service account's system-managed private key.\n\nIf no expiry time (`exp`) is provided in the `SignJwtRequest`, IAM sets an\nan expiry time of one hour by default. If you request an expiry time of\nmore than one hour, the request will fail.",
              "response": {
                "$ref": "SignJwtResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signJwt",
              "path": "v1/{+name}:signJwt",
              "id": "iam.projects.serviceAccounts.signJwt"
            },
            "create": {
              "flatPath": "v1/projects/{projectsId}/serviceAccounts",
              "path": "v1/{+name}/serviceAccounts",
              "id": "iam.projects.serviceAccounts.create",
              "request": {
                "$ref": "CreateServiceAccountRequest"
              },
              "description": "Creates a ServiceAccount\nand returns it.",
              "response": {
                "$ref": "ServiceAccount"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the project associated with the service\naccounts, such as `projects/my-project-123`.",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "ServiceAccount"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
              "id": "iam.projects.serviceAccounts.get",
              "path": "v1/{+name}",
              "description": "Gets a ServiceAccount."
            },
            "patch": {
              "response": {
                "$ref": "ServiceAccount"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\n\nRequests using `-` as a wildcard for the `PROJECT_ID` will infer the\nproject from the `account` and the `ACCOUNT` value can be the `email`\naddress or the `unique_id` of the service account.\n\nIn responses the resource name will always be in the format\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
              "path": "v1/{+name}",
              "id": "iam.projects.serviceAccounts.patch",
              "description": "Patches a ServiceAccount.\n\nCurrently, only the following fields are updatable:\n`display_name` and `description`.\n\nOnly fields specified in the request are guaranteed to be returned in\nthe response. Other fields in the response may be empty.\n\nNote: The field mask is required.",
              "request": {
                "$ref": "PatchServiceAccountRequest"
              }
            },
            "testIamPermissions": {
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:testIamPermissions",
              "id": "iam.projects.serviceAccounts.testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "description": "Tests the specified permissions against the IAM access control policy\nfor a ServiceAccount.",
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path"
                }
              }
            },
            "enable": {
              "description": "EnableServiceAccount is currently in the alpha launch stage.\n\n Restores a disabled ServiceAccount\n that has been manually disabled by using DisableServiceAccount. Service\n accounts that have been disabled by other means or for other reasons,\n such as abuse, cannot be restored using this method.\n\n EnableServiceAccount will have no effect on a service account that is\n not disabled.  Enabling an already enabled service account will have no\n effect.",
              "request": {
                "$ref": "EnableServiceAccountRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:enable",
              "id": "iam.projects.serviceAccounts.enable",
              "path": "v1/{+name}:enable"
            },
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
              "id": "iam.projects.serviceAccounts.delete",
              "path": "v1/{+name}",
              "description": "Deletes a ServiceAccount."
            },
            "signBlob": {
              "path": "v1/{+name}:signBlob",
              "id": "iam.projects.serviceAccounts.signBlob",
              "request": {
                "$ref": "SignBlobRequest"
              },
              "description": "**Note**: This method is in the process of being deprecated. Call the\n[`signBlob()`](/iam/credentials/reference/rest/v1/projects.serviceAccounts/signBlob)\nmethod of the Cloud IAM Service Account Credentials API instead.\n\nSigns a blob using a service account's system-managed private key.",
              "response": {
                "$ref": "SignBlobResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signBlob"
            },
            "setIamPolicy": {
              "path": "v1/{+resource}:setIamPolicy",
              "id": "iam.projects.serviceAccounts.setIamPolicy",
              "description": "Sets the Cloud IAM access control policy for a\nServiceAccount.\n\nNote: Service accounts are both\n[resources and\nidentities](/iam/docs/service-accounts#service_account_permissions). This\nmethod treats the service account as a resource. Use it to grant members\naccess to the service account, such as when they need to impersonate it.\n\nThis method does not grant the service account access to other resources,\nsuch as projects. To grant a service account access to resources, include\nthe service account in the Cloud IAM policy for the desired resource, then\ncall the appropriate `setIamPolicy` method on the target resource. For\nexample, to grant a service account access to a project, call the\n[projects.setIamPolicy](/resource-manager/reference/rest/v1/projects/setIamPolicy)\nmethod.",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:setIamPolicy"
            },
            "disable": {
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:disable",
              "path": "v1/{+name}:disable",
              "id": "iam.projects.serviceAccounts.disable",
              "description": "DisableServiceAccount is currently in the alpha launch stage.\n\nDisables a ServiceAccount,\nwhich immediately prevents the service account from authenticating and\ngaining access to APIs.\n\nDisabled service accounts can be safely restored by using\nEnableServiceAccount at any point. Deleted service accounts cannot be\nrestored using this method.\n\nDisabling a service account that is bound to VMs, Apps, Functions, or\nother jobs will cause those jobs to lose access to resources if they are\nusing the disabled service account.\n\nTo improve reliability of your services and avoid unexpected outages, it\nis recommended to first disable a service account rather than delete it.\nAfter disabling the service account, wait at least 24 hours to verify there\nare no unintended consequences, and then delete the service account.",
              "request": {
                "$ref": "DisableServiceAccountRequest"
              },
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST"
            },
            "getIamPolicy": {
              "parameters": {
                "options.requestedPolicyVersion": {
                  "location": "query",
                  "description": "Optional. The policy format version to be returned.\nAcceptable values are 0, 1, and 3.\nIf the value is 0, or the field is omitted, policy format version 1 will be\nreturned.",
                  "format": "int32",
                  "type": "integer"
                },
                "resource": {
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "id": "iam.projects.serviceAccounts.getIamPolicy",
              "description": "Returns the Cloud IAM access control policy for a\nServiceAccount.\n\nNote: Service accounts are both\n[resources and\nidentities](/iam/docs/service-accounts#service_account_permissions). This\nmethod treats the service account as a resource. It returns the Cloud IAM\npolicy that reflects what members have access to the service account.\n\nThis method does not return what resources the service account has access\nto. To see if a service account has access to a resource, call the\n`getIamPolicy` method on the target resource. For example, to view grants\nfor a project, call the\n[projects.getIamPolicy](/resource-manager/reference/rest/v1/projects/getIamPolicy)\nmethod.",
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST"
            },
            "undelete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_UNIQUE_ID}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:undelete",
              "id": "iam.projects.serviceAccounts.undelete",
              "path": "v1/{+name}:undelete",
              "request": {
                "$ref": "UndeleteServiceAccountRequest"
              },
              "description": "Restores a deleted ServiceAccount.\nThis is to be used as an action of last resort.  A service account may\nnot always be restorable.",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "UndeleteServiceAccountResponse"
              }
            },
            "update": {
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
              "path": "v1/{+name}",
              "id": "iam.projects.serviceAccounts.update",
              "request": {
                "$ref": "ServiceAccount"
              },
              "description": "Note: This method is in the process of being deprecated. Use\nPatchServiceAccount instead.\n\nUpdates a ServiceAccount.\n\nCurrently, only the following fields are updatable:\n`display_name` and `description`.",
              "response": {
                "$ref": "ServiceAccount"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\n\nRequests using `-` as a wildcard for the `PROJECT_ID` will infer the\nproject from the `account` and the `ACCOUNT` value can be the `email`\naddress or the `unique_id` of the service account.\n\nIn responses the resource name will always be in the format\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.",
                  "required": true,
                  "type": "string"
                }
              }
            }
          },
          "resources": {
            "keys": {
              "methods": {
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ServiceAccountKey"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys",
                  "id": "iam.projects.serviceAccounts.keys.create",
                  "path": "v1/{+name}/keys",
                  "description": "Creates a ServiceAccountKey\nand returns it.",
                  "request": {
                    "$ref": "CreateServiceAccountKeyRequest"
                  }
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}",
                  "id": "iam.projects.serviceAccounts.keys.delete",
                  "path": "v1/{+name}",
                  "description": "Deletes a ServiceAccountKey.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/serviceAccounts/[^/]+/keys/[^/]+$",
                      "location": "path",
                      "description": "The resource name of the service account key in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account."
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListServiceAccountKeysResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "keyTypes": {
                      "location": "query",
                      "enum": [
                        "KEY_TYPE_UNSPECIFIED",
                        "USER_MANAGED",
                        "SYSTEM_MANAGED"
                      ],
                      "description": "Filters the types of keys the user wants to include in the list\nresponse. Duplicate key types are not allowed. If no key type\nis provided, all keys are returned.",
                      "type": "string",
                      "repeated": true
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                      "location": "path",
                      "description": "The resource name of the service account in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.\n\nUsing `-` as a wildcard for the `PROJECT_ID`, will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys",
                  "id": "iam.projects.serviceAccounts.keys.list",
                  "path": "v1/{+name}/keys",
                  "description": "Lists ServiceAccountKeys."
                },
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ServiceAccountKey"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/serviceAccounts/[^/]+/keys/[^/]+$",
                      "location": "path",
                      "description": "The resource name of the service account key in the following format:\n`projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.\n\nUsing `-` as a wildcard for the `PROJECT_ID` will infer the project from\nthe account. The `ACCOUNT` value can be the `email` address or the\n`unique_id` of the service account."
                    },
                    "publicKeyType": {
                      "location": "query",
                      "enum": [
                        "TYPE_NONE",
                        "TYPE_X509_PEM_FILE",
                        "TYPE_RAW_PUBLIC_KEY"
                      ],
                      "description": "The output format of the public key requested.\nX509_PEM is the default output format.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}",
                  "id": "iam.projects.serviceAccounts.keys.get",
                  "path": "v1/{+name}",
                  "description": "Gets the ServiceAccountKey\nby key id."
                }
              }
            }
          }
        },
        "roles": {
          "methods": {
            "create": {
              "parameters": {
                "parent": {
                  "description": "The `parent` parameter's value depends on the target resource for the\nrequest, namely\n[`projects`](/iam/reference/rest/v1/projects.roles) or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `parent` value format is described below:\n\n* [`projects.roles.create()`](/iam/reference/rest/v1/projects.roles/create):\n  `projects/{PROJECT_ID}`. This method creates project-level\n  [custom roles](/iam/docs/understanding-custom-roles).\n  Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`\n\n* [`organizations.roles.create()`](/iam/reference/rest/v1/organizations.roles/create):\n  `organizations/{ORGANIZATION_ID}`. This method creates organization-level\n  [custom roles](/iam/docs/understanding-custom-roles). Example request\n  URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/roles",
              "path": "v1/{+parent}/roles",
              "id": "iam.projects.roles.create",
              "description": "Creates a new Role.",
              "request": {
                "$ref": "CreateRoleRequest"
              },
              "response": {
                "$ref": "Role"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST"
            },
            "undelete": {
              "request": {
                "$ref": "UndeleteRoleRequest"
              },
              "description": "Undelete a Role, bringing it back in its previous state.",
              "response": {
                "$ref": "Role"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The `name` parameter's value depends on the target resource for the\nrequest, namely\n[`projects`](/iam/reference/rest/v1/projects.roles) or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `name` value format is described below:\n\n* [`projects.roles.undelete()`](/iam/reference/rest/v1/projects.roles/undelete):\n  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes\n  only [custom roles](/iam/docs/understanding-custom-roles) that have been\n  created at the project level. Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`\n\n* [`organizations.roles.undelete()`](/iam/reference/rest/v1/organizations.roles/undelete):\n  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method\n  undeletes only [custom roles](/iam/docs/understanding-custom-roles) that\n  have been created at the organization level. Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/roles/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/roles/{rolesId}:undelete",
              "path": "v1/{+name}:undelete",
              "id": "iam.projects.roles.undelete"
            },
            "get": {
              "description": "Gets a Role definition.",
              "response": {
                "$ref": "Role"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/roles/[^/]+$",
                  "location": "path",
                  "description": "The `name` parameter's value depends on the target resource for the\nrequest, namely\n[`roles`](/iam/reference/rest/v1/roles),\n[`projects`](/iam/reference/rest/v1/projects.roles), or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `name` value format is described below:\n\n* [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.\n  This method returns results from all\n  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in\n  Cloud IAM. Example request URL:\n  `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`\n\n* [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):\n  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only\n  [custom roles](/iam/docs/understanding-custom-roles) that have been\n  created at the project level. Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`\n\n* [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):\n  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method\n  returns only [custom roles](/iam/docs/understanding-custom-roles) that\n  have been created at the organization level. Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/roles/{rolesId}",
              "path": "v1/{+name}",
              "id": "iam.projects.roles.get"
            },
            "patch": {
              "description": "Updates a Role definition.",
              "request": {
                "$ref": "Role"
              },
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Role"
              },
              "parameters": {
                "name": {
                  "description": "The `name` parameter's value depends on the target resource for the\nrequest, namely\n[`projects`](/iam/reference/rest/v1/projects.roles) or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `name` value format is described below:\n\n* [`projects.roles.patch()`](/iam/reference/rest/v1/projects.roles/patch):\n  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only\n  [custom roles](/iam/docs/understanding-custom-roles) that have been\n  created at the project level. Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`\n\n* [`organizations.roles.patch()`](/iam/reference/rest/v1/organizations.roles/patch):\n  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method\n  updates only [custom roles](/iam/docs/understanding-custom-roles) that\n  have been created at the organization level. Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/roles/[^/]+$",
                  "location": "path"
                },
                "updateMask": {
                  "location": "query",
                  "description": "A mask describing which fields in the Role have changed.",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/roles/{rolesId}",
              "id": "iam.projects.roles.patch",
              "path": "v1/{+name}"
            },
            "delete": {
              "description": "Soft deletes a role. The role is suspended and cannot be used to create new\nIAM Policy Bindings.\nThe Role will not be included in `ListRoles()` unless `show_deleted` is set\nin the `ListRolesRequest`. The Role contains the deleted boolean set.\nExisting Bindings remains, but are inactive. The Role can be undeleted\nwithin 7 days. After 7 days the Role is deleted and all Bindings associated\nwith the role are removed.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Role"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/roles/[^/]+$",
                  "location": "path",
                  "description": "The `name` parameter's value depends on the target resource for the\nrequest, namely\n[`projects`](/iam/reference/rest/v1/projects.roles) or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `name` value format is described below:\n\n* [`projects.roles.delete()`](/iam/reference/rest/v1/projects.roles/delete):\n  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only\n  [custom roles](/iam/docs/understanding-custom-roles) that have been\n  created at the project level. Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`\n\n* [`organizations.roles.delete()`](/iam/reference/rest/v1/organizations.roles/delete):\n  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method\n  deletes only [custom roles](/iam/docs/understanding-custom-roles) that\n  have been created at the organization level. Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID."
                },
                "etag": {
                  "type": "string",
                  "location": "query",
                  "description": "Used to perform a consistent read-modify-write.",
                  "format": "byte"
                }
              },
              "flatPath": "v1/projects/{projectsId}/roles/{rolesId}",
              "id": "iam.projects.roles.delete",
              "path": "v1/{+name}"
            },
            "list": {
              "description": "Lists the Roles defined on a resource.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListRolesResponse"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The `parent` parameter's value depends on the target resource for the\nrequest, namely\n[`roles`](/iam/reference/rest/v1/roles),\n[`projects`](/iam/reference/rest/v1/projects.roles), or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `parent` value format is described below:\n\n* [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.\n  This method doesn't require a resource; it simply returns all\n  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in\n  Cloud IAM. Example request URL:\n  `https://iam.googleapis.com/v1/roles`\n\n* [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):\n  `projects/{PROJECT_ID}`. This method lists all project-level\n  [custom roles](/iam/docs/understanding-custom-roles).\n  Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`\n\n* [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):\n  `organizations/{ORGANIZATION_ID}`. This method lists all\n  organization-level [custom roles](/iam/docs/understanding-custom-roles).\n  Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID."
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Include Roles that have been deleted.",
                  "type": "boolean"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional pagination token returned in an earlier ListRolesResponse."
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Optional limit on the number of roles to include in the response.",
                  "format": "int32"
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "BASIC",
                    "FULL"
                  ],
                  "description": "Optional view for the returned Role objects. When `FULL` is specified,\nthe `includedPermissions` field is returned, which includes a list of all\npermissions in the role. The default value is `BASIC`, which does not\nreturn the `includedPermissions` field.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/roles",
              "id": "iam.projects.roles.list",
              "path": "v1/{+parent}/roles"
            }
          }
        }
      }
    },
    "roles": {
      "methods": {
        "queryGrantableRoles": {
          "description": "Queries roles that can be granted on a particular resource.\nA role is grantable if it can be used as the role in a binding for a policy\nfor that resource.",
          "request": {
            "$ref": "QueryGrantableRolesRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "QueryGrantableRolesResponse"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/roles:queryGrantableRoles",
          "id": "iam.roles.queryGrantableRoles",
          "path": "v1/roles:queryGrantableRoles"
        },
        "list": {
          "description": "Lists the Roles defined on a resource.",
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "ListRolesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "view": {
              "type": "string",
              "location": "query",
              "enum": [
                "BASIC",
                "FULL"
              ],
              "description": "Optional view for the returned Role objects. When `FULL` is specified,\nthe `includedPermissions` field is returned, which includes a list of all\npermissions in the role. The default value is `BASIC`, which does not\nreturn the `includedPermissions` field."
            },
            "parent": {
              "location": "query",
              "description": "The `parent` parameter's value depends on the target resource for the\nrequest, namely\n[`roles`](/iam/reference/rest/v1/roles),\n[`projects`](/iam/reference/rest/v1/projects.roles), or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `parent` value format is described below:\n\n* [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.\n  This method doesn't require a resource; it simply returns all\n  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in\n  Cloud IAM. Example request URL:\n  `https://iam.googleapis.com/v1/roles`\n\n* [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):\n  `projects/{PROJECT_ID}`. This method lists all project-level\n  [custom roles](/iam/docs/understanding-custom-roles).\n  Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`\n\n* [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):\n  `organizations/{ORGANIZATION_ID}`. This method lists all\n  organization-level [custom roles](/iam/docs/understanding-custom-roles).\n  Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID.",
              "type": "string"
            },
            "showDeleted": {
              "location": "query",
              "description": "Include Roles that have been deleted.",
              "type": "boolean"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Optional pagination token returned in an earlier ListRolesResponse."
            },
            "pageSize": {
              "type": "integer",
              "location": "query",
              "description": "Optional limit on the number of roles to include in the response.",
              "format": "int32"
            }
          },
          "flatPath": "v1/roles",
          "id": "iam.roles.list",
          "path": "v1/roles"
        },
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Role"
          },
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^roles/[^/]+$",
              "location": "path",
              "description": "The `name` parameter's value depends on the target resource for the\nrequest, namely\n[`roles`](/iam/reference/rest/v1/roles),\n[`projects`](/iam/reference/rest/v1/projects.roles), or\n[`organizations`](/iam/reference/rest/v1/organizations.roles). Each\nresource type's `name` value format is described below:\n\n* [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.\n  This method returns results from all\n  [predefined roles](/iam/docs/understanding-roles#predefined_roles) in\n  Cloud IAM. Example request URL:\n  `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`\n\n* [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):\n  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only\n  [custom roles](/iam/docs/understanding-custom-roles) that have been\n  created at the project level. Example request URL:\n  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`\n\n* [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):\n  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method\n  returns only [custom roles](/iam/docs/understanding-custom-roles) that\n  have been created at the organization level. Example request URL:\n  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`\n\nNote: Wildcard (*) values are invalid; you must specify a complete project\nID or organization ID."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/roles/{rolesId}",
          "id": "iam.roles.get",
          "path": "v1/{+name}",
          "description": "Gets a Role definition."
        }
      }
    },
    "permissions": {
      "methods": {
        "queryTestablePermissions": {
          "response": {
            "$ref": "QueryTestablePermissionsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {},
          "flatPath": "v1/permissions:queryTestablePermissions",
          "path": "v1/permissions:queryTestablePermissions",
          "id": "iam.permissions.queryTestablePermissions",
          "request": {
            "$ref": "QueryTestablePermissionsRequest"
          },
          "description": "Lists the permissions testable on a resource.\nA permission is testable if it can be tested for an identity on a resource."
        }
      }
    }
  },
  "parameters": {
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    }
  },
  "version": "v1",
  "baseUrl": "https://iam.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls.",
  "servicePath": ""
}
