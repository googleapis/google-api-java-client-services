/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * Azure VM specific details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AzureVmPlatformDetails extends com.google.api.client.json.GenericJson {

  /**
   * Whether the machine is hyperthreaded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hyperthreading;

  /**
   * The location of the machine in the Azure format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * Azure platform's machine type label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String machineTypeLabel;

  /**
   * Azure platform's provisioning state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String provisioningState;

  /**
   * Whether the machine is hyperthreaded.
   * @return value or {@code null} for none
   */
  public java.lang.String getHyperthreading() {
    return hyperthreading;
  }

  /**
   * Whether the machine is hyperthreaded.
   * @param hyperthreading hyperthreading or {@code null} for none
   */
  public AzureVmPlatformDetails setHyperthreading(java.lang.String hyperthreading) {
    this.hyperthreading = hyperthreading;
    return this;
  }

  /**
   * The location of the machine in the Azure format.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * The location of the machine in the Azure format.
   * @param location location or {@code null} for none
   */
  public AzureVmPlatformDetails setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * Azure platform's machine type label.
   * @return value or {@code null} for none
   */
  public java.lang.String getMachineTypeLabel() {
    return machineTypeLabel;
  }

  /**
   * Azure platform's machine type label.
   * @param machineTypeLabel machineTypeLabel or {@code null} for none
   */
  public AzureVmPlatformDetails setMachineTypeLabel(java.lang.String machineTypeLabel) {
    this.machineTypeLabel = machineTypeLabel;
    return this;
  }

  /**
   * Azure platform's provisioning state.
   * @return value or {@code null} for none
   */
  public java.lang.String getProvisioningState() {
    return provisioningState;
  }

  /**
   * Azure platform's provisioning state.
   * @param provisioningState provisioningState or {@code null} for none
   */
  public AzureVmPlatformDetails setProvisioningState(java.lang.String provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  @Override
  public AzureVmPlatformDetails set(String fieldName, Object value) {
    return (AzureVmPlatformDetails) super.set(fieldName, value);
  }

  @Override
  public AzureVmPlatformDetails clone() {
    return (AzureVmPlatformDetails) super.clone();
  }

}
