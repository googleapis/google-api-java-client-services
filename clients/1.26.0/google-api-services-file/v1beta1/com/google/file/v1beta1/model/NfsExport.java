/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.file.v1beta1.model;

/**
 * NfsExport specifies attributes of a given NFS export rule.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Filestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NfsExport extends com.google.api.client.json.GenericJson {

  /**
   * GID for anonymous or squashed GIDs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long anonymousGid;

  /**
   * UID for anonymous or squashed UIDs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long anonymousUid;

  /**
   * Network transport protocols to be enabled. The default is TCP.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> protocols;

  /**
   * The mode of mapping of UIDs and GIDs (if any).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String squash;

  /**
   * If unauthenticated_locks_allowed is true, locking requests do not require authentication.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean unauthenticatedLocksAllowed;

  /**
   * If user_ports_allowed is true, client ports greater than or equal to 1024 are allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean userPortsAllowed;

  /**
   * GID for anonymous or squashed GIDs.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAnonymousGid() {
    return anonymousGid;
  }

  /**
   * GID for anonymous or squashed GIDs.
   * @param anonymousGid anonymousGid or {@code null} for none
   */
  public NfsExport setAnonymousGid(java.lang.Long anonymousGid) {
    this.anonymousGid = anonymousGid;
    return this;
  }

  /**
   * UID for anonymous or squashed UIDs.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAnonymousUid() {
    return anonymousUid;
  }

  /**
   * UID for anonymous or squashed UIDs.
   * @param anonymousUid anonymousUid or {@code null} for none
   */
  public NfsExport setAnonymousUid(java.lang.Long anonymousUid) {
    this.anonymousUid = anonymousUid;
    return this;
  }

  /**
   * Network transport protocols to be enabled. The default is TCP.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getProtocols() {
    return protocols;
  }

  /**
   * Network transport protocols to be enabled. The default is TCP.
   * @param protocols protocols or {@code null} for none
   */
  public NfsExport setProtocols(java.util.List<java.lang.String> protocols) {
    this.protocols = protocols;
    return this;
  }

  /**
   * The mode of mapping of UIDs and GIDs (if any).
   * @return value or {@code null} for none
   */
  public java.lang.String getSquash() {
    return squash;
  }

  /**
   * The mode of mapping of UIDs and GIDs (if any).
   * @param squash squash or {@code null} for none
   */
  public NfsExport setSquash(java.lang.String squash) {
    this.squash = squash;
    return this;
  }

  /**
   * If unauthenticated_locks_allowed is true, locking requests do not require authentication.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUnauthenticatedLocksAllowed() {
    return unauthenticatedLocksAllowed;
  }

  /**
   * If unauthenticated_locks_allowed is true, locking requests do not require authentication.
   * @param unauthenticatedLocksAllowed unauthenticatedLocksAllowed or {@code null} for none
   */
  public NfsExport setUnauthenticatedLocksAllowed(java.lang.Boolean unauthenticatedLocksAllowed) {
    this.unauthenticatedLocksAllowed = unauthenticatedLocksAllowed;
    return this;
  }

  /**
   * If user_ports_allowed is true, client ports greater than or equal to 1024 are allowed.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUserPortsAllowed() {
    return userPortsAllowed;
  }

  /**
   * If user_ports_allowed is true, client ports greater than or equal to 1024 are allowed.
   * @param userPortsAllowed userPortsAllowed or {@code null} for none
   */
  public NfsExport setUserPortsAllowed(java.lang.Boolean userPortsAllowed) {
    this.userPortsAllowed = userPortsAllowed;
    return this;
  }

  @Override
  public NfsExport set(String fieldName, Object value) {
    return (NfsExport) super.set(fieldName, value);
  }

  @Override
  public NfsExport clone() {
    return (NfsExport) super.clone();
  }

}
