/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1.model;

/**
 * Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based
 * authentication. See https://tools.ietf.org/html/rfc7523 for more details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer extends com.google.api.client.json.GenericJson {

  /**
   * Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client
   * Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization
   * grant. Specified in the form as: `projects/secrets/versions`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudConnectorsV1Secret clientKey;

  /**
   * JwtClaims providers fields to generate the token.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudConnectorsV1AuthConfigOauth2JwtBearerJwtClaims jwtClaims;

  /**
   * Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client
   * Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization
   * grant. Specified in the form as: `projects/secrets/versions`.
   * @return value or {@code null} for none
   */
  public GoogleCloudConnectorsV1Secret getClientKey() {
    return clientKey;
  }

  /**
   * Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client
   * Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization
   * grant. Specified in the form as: `projects/secrets/versions`.
   * @param clientKey clientKey or {@code null} for none
   */
  public GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer setClientKey(GoogleCloudConnectorsV1Secret clientKey) {
    this.clientKey = clientKey;
    return this;
  }

  /**
   * JwtClaims providers fields to generate the token.
   * @return value or {@code null} for none
   */
  public GoogleCloudConnectorsV1AuthConfigOauth2JwtBearerJwtClaims getJwtClaims() {
    return jwtClaims;
  }

  /**
   * JwtClaims providers fields to generate the token.
   * @param jwtClaims jwtClaims or {@code null} for none
   */
  public GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer setJwtClaims(GoogleCloudConnectorsV1AuthConfigOauth2JwtBearerJwtClaims jwtClaims) {
    this.jwtClaims = jwtClaims;
    return this;
  }

  @Override
  public GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer set(String fieldName, Object value) {
    return (GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer clone() {
    return (GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer) super.clone();
  }

}
