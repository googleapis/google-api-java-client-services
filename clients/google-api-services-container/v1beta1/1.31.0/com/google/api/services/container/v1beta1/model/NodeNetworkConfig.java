/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.container.v1beta1.model;

/**
 * Parameters for node pool-level network config. Only applicable if
 * `ip_allocation_policy.use_ip_aliases` is true.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Kubernetes Engine API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NodeNetworkConfig extends com.google.api.client.json.GenericJson {

  /**
   * Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided
   * for `pod_range` and `pod_ipv4_cidr_block` if they are not specified. If neither
   * `create_pod_range` or `pod_range` are specified, the cluster-level default
   * (`ip_allocation_policy.cluster_ipv4_cidr_block`) is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean createPodRange;

  /**
   * The IP address range for pod IPs in this node pool. Only applicable if `create_pod_range` is
   * true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`)
   * to have a range chosen with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki
   * /Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) to pick a specific range to
   * use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String podIpv4CidrBlock;

  /**
   * The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for
   * the new range. If `create_pod_range` is false, uses an existing secondary range with this ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String podRange;

  /**
   * Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided
   * for `pod_range` and `pod_ipv4_cidr_block` if they are not specified. If neither
   * `create_pod_range` or `pod_range` are specified, the cluster-level default
   * (`ip_allocation_policy.cluster_ipv4_cidr_block`) is used.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCreatePodRange() {
    return createPodRange;
  }

  /**
   * Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided
   * for `pod_range` and `pod_ipv4_cidr_block` if they are not specified. If neither
   * `create_pod_range` or `pod_range` are specified, the cluster-level default
   * (`ip_allocation_policy.cluster_ipv4_cidr_block`) is used.
   * @param createPodRange createPodRange or {@code null} for none
   */
  public NodeNetworkConfig setCreatePodRange(java.lang.Boolean createPodRange) {
    this.createPodRange = createPodRange;
    return this;
  }

  /**
   * The IP address range for pod IPs in this node pool. Only applicable if `create_pod_range` is
   * true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`)
   * to have a range chosen with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki
   * /Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) to pick a specific range to
   * use.
   * @return value or {@code null} for none
   */
  public java.lang.String getPodIpv4CidrBlock() {
    return podIpv4CidrBlock;
  }

  /**
   * The IP address range for pod IPs in this node pool. Only applicable if `create_pod_range` is
   * true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`)
   * to have a range chosen with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki
   * /Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) to pick a specific range to
   * use.
   * @param podIpv4CidrBlock podIpv4CidrBlock or {@code null} for none
   */
  public NodeNetworkConfig setPodIpv4CidrBlock(java.lang.String podIpv4CidrBlock) {
    this.podIpv4CidrBlock = podIpv4CidrBlock;
    return this;
  }

  /**
   * The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for
   * the new range. If `create_pod_range` is false, uses an existing secondary range with this ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getPodRange() {
    return podRange;
  }

  /**
   * The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for
   * the new range. If `create_pod_range` is false, uses an existing secondary range with this ID.
   * @param podRange podRange or {@code null} for none
   */
  public NodeNetworkConfig setPodRange(java.lang.String podRange) {
    this.podRange = podRange;
    return this;
  }

  @Override
  public NodeNetworkConfig set(String fieldName, Object value) {
    return (NodeNetworkConfig) super.set(fieldName, value);
  }

  @Override
  public NodeNetworkConfig clone() {
    return (NodeNetworkConfig) super.clone();
  }

}
