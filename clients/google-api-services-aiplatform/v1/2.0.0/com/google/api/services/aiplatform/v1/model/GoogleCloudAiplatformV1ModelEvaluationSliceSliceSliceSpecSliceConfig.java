/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * Specification message containing the config for this SliceSpec. When `kind` is selected as
 * `value` and/or `range`, only a single slice will be computed. When `all_values` is present, a
 * separate slice will be computed for each possible label/value for the corresponding key in
 * `config`. Examples, with feature zip_code with values 12345, 23334, 88888 and feature country
 * with values "US", "Canada", "Mexico" in the dataset: Example 1: { "zip_code": { "value": {
 * "float_value": 12345.0 } } } A single slice for any data with zip_code 12345 in the dataset.
 * Example 2: { "zip_code": { "range": { "low": 12345, "high": 20000 } } } A single slice containing
 * data where the zip_codes between 12345 and 20000 For this example, data with the zip_code of
 * 12345 will be in this slice. Example 3: { "zip_code": { "range": { "low": 10000, "high": 20000 }
 * }, "country": { "value": { "string_value": "US" } } } A single slice containing data where the
 * zip_codes between 10000 and 20000 has the country "US". For this example, data with the zip_code
 * of 12345 and country "US" will be in this slice. Example 4: { "country": {"all_values": {
 * "value": true } } } Three slices are computed, one for each unique country in the dataset.
 * Example 5: { "country": { "all_values": { "value": true } }, "zip_code": { "value": {
 * "float_value": 12345.0 } } } Three slices are computed, one for each unique country in the
 * dataset where the zip_code is also 12345. For this example, data with zip_code 12345 and country
 * "US" will be in one slice, zip_code 12345 and country "Canada" in another slice, and zip_code
 * 12345 and country "Mexico" in another slice, totaling 3 slices.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig extends com.google.api.client.json.GenericJson {

  /**
   * If all_values is set to true, then all possible labels of the keyed feature will have another
   * slice computed. Example: `{"all_values":{"value":true}}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allValues;

  /**
   * A range of values for a numerical feature. Example: `{"range":{"low":10000.0,"high":50000.0}}`
   * will capture 12345 and 23334 in the slice.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange range;

  /**
   * A unique specific value for a given feature. Example: `{ "value": { "string_value": "12345" }
   * }`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue value;

  /**
   * If all_values is set to true, then all possible labels of the keyed feature will have another
   * slice computed. Example: `{"all_values":{"value":true}}`
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllValues() {
    return allValues;
  }

  /**
   * If all_values is set to true, then all possible labels of the keyed feature will have another
   * slice computed. Example: `{"all_values":{"value":true}}`
   * @param allValues allValues or {@code null} for none
   */
  public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig setAllValues(java.lang.Boolean allValues) {
    this.allValues = allValues;
    return this;
  }

  /**
   * A range of values for a numerical feature. Example: `{"range":{"low":10000.0,"high":50000.0}}`
   * will capture 12345 and 23334 in the slice.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange getRange() {
    return range;
  }

  /**
   * A range of values for a numerical feature. Example: `{"range":{"low":10000.0,"high":50000.0}}`
   * will capture 12345 and 23334 in the slice.
   * @param range range or {@code null} for none
   */
  public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig setRange(GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange range) {
    this.range = range;
    return this;
  }

  /**
   * A unique specific value for a given feature. Example: `{ "value": { "string_value": "12345" }
   * }`
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue getValue() {
    return value;
  }

  /**
   * A unique specific value for a given feature. Example: `{ "value": { "string_value": "12345" }
   * }`
   * @param value value or {@code null} for none
   */
  public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig setValue(GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue value) {
    this.value = value;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig clone() {
    return (GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig) super.clone();
  }

}
