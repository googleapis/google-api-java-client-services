/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticsdata.v1beta.model;

/**
 * An audience export is a list of users in an audience at the time of the list's creation. One
 * audience may have multiple audience exports created for different days.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Analytics Data API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AudienceExport extends com.google.api.client.json.GenericJson {

  /**
   * Required. The audience resource name. This resource name identifies the audience being listed
   * and is shared between the Analytics Data & Admin APIs. Format:
   * `properties/{property}/audiences/{audience}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String audience;

  /**
   * Output only. The descriptive display name for this audience. For example, "Purchasers".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String audienceDisplayName;

  /**
   * Output only. The time when CreateAudienceExport was called and the AudienceExport began the
   * `CREATING` state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String beginCreatingTime;

  /**
   * Output only. The total quota tokens charged during creation of the AudienceExport. Because this
   * token count is based on activity from the `CREATING` state, this tokens charged will be fixed
   * once an AudienceExport enters the `ACTIVE` or `FAILED` states.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer creationQuotaTokensCharged;

  /**
   * Required. The dimensions requested and displayed in the query response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<V1betaAudienceDimension> dimensions;

  /**
   * Output only. Error message is populated when an audience export fails during creation. A common
   * reason for such a failure is quota exhaustion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String errorMessage;

  /**
   * Output only. Identifier. The audience export resource name assigned during creation. This
   * resource name identifies this `AudienceExport`. Format:
   * `properties/{property}/audienceExports/{audience_export}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The percentage completed for this audience export ranging between 0 to 100.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double percentageCompleted;

  /**
   * Output only. The total number of rows in the AudienceExport result.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer rowCount;

  /**
   * Output only. The current state for this AudienceExport.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Required. The audience resource name. This resource name identifies the audience being listed
   * and is shared between the Analytics Data & Admin APIs. Format:
   * `properties/{property}/audiences/{audience}`
   * @return value or {@code null} for none
   */
  public java.lang.String getAudience() {
    return audience;
  }

  /**
   * Required. The audience resource name. This resource name identifies the audience being listed
   * and is shared between the Analytics Data & Admin APIs. Format:
   * `properties/{property}/audiences/{audience}`
   * @param audience audience or {@code null} for none
   */
  public AudienceExport setAudience(java.lang.String audience) {
    this.audience = audience;
    return this;
  }

  /**
   * Output only. The descriptive display name for this audience. For example, "Purchasers".
   * @return value or {@code null} for none
   */
  public java.lang.String getAudienceDisplayName() {
    return audienceDisplayName;
  }

  /**
   * Output only. The descriptive display name for this audience. For example, "Purchasers".
   * @param audienceDisplayName audienceDisplayName or {@code null} for none
   */
  public AudienceExport setAudienceDisplayName(java.lang.String audienceDisplayName) {
    this.audienceDisplayName = audienceDisplayName;
    return this;
  }

  /**
   * Output only. The time when CreateAudienceExport was called and the AudienceExport began the
   * `CREATING` state.
   * @return value or {@code null} for none
   */
  public String getBeginCreatingTime() {
    return beginCreatingTime;
  }

  /**
   * Output only. The time when CreateAudienceExport was called and the AudienceExport began the
   * `CREATING` state.
   * @param beginCreatingTime beginCreatingTime or {@code null} for none
   */
  public AudienceExport setBeginCreatingTime(String beginCreatingTime) {
    this.beginCreatingTime = beginCreatingTime;
    return this;
  }

  /**
   * Output only. The total quota tokens charged during creation of the AudienceExport. Because this
   * token count is based on activity from the `CREATING` state, this tokens charged will be fixed
   * once an AudienceExport enters the `ACTIVE` or `FAILED` states.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCreationQuotaTokensCharged() {
    return creationQuotaTokensCharged;
  }

  /**
   * Output only. The total quota tokens charged during creation of the AudienceExport. Because this
   * token count is based on activity from the `CREATING` state, this tokens charged will be fixed
   * once an AudienceExport enters the `ACTIVE` or `FAILED` states.
   * @param creationQuotaTokensCharged creationQuotaTokensCharged or {@code null} for none
   */
  public AudienceExport setCreationQuotaTokensCharged(java.lang.Integer creationQuotaTokensCharged) {
    this.creationQuotaTokensCharged = creationQuotaTokensCharged;
    return this;
  }

  /**
   * Required. The dimensions requested and displayed in the query response.
   * @return value or {@code null} for none
   */
  public java.util.List<V1betaAudienceDimension> getDimensions() {
    return dimensions;
  }

  /**
   * Required. The dimensions requested and displayed in the query response.
   * @param dimensions dimensions or {@code null} for none
   */
  public AudienceExport setDimensions(java.util.List<V1betaAudienceDimension> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  /**
   * Output only. Error message is populated when an audience export fails during creation. A common
   * reason for such a failure is quota exhaustion.
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorMessage() {
    return errorMessage;
  }

  /**
   * Output only. Error message is populated when an audience export fails during creation. A common
   * reason for such a failure is quota exhaustion.
   * @param errorMessage errorMessage or {@code null} for none
   */
  public AudienceExport setErrorMessage(java.lang.String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Output only. Identifier. The audience export resource name assigned during creation. This
   * resource name identifies this `AudienceExport`. Format:
   * `properties/{property}/audienceExports/{audience_export}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Identifier. The audience export resource name assigned during creation. This
   * resource name identifies this `AudienceExport`. Format:
   * `properties/{property}/audienceExports/{audience_export}`
   * @param name name or {@code null} for none
   */
  public AudienceExport setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The percentage completed for this audience export ranging between 0 to 100.
   * @return value or {@code null} for none
   */
  public java.lang.Double getPercentageCompleted() {
    return percentageCompleted;
  }

  /**
   * Output only. The percentage completed for this audience export ranging between 0 to 100.
   * @param percentageCompleted percentageCompleted or {@code null} for none
   */
  public AudienceExport setPercentageCompleted(java.lang.Double percentageCompleted) {
    this.percentageCompleted = percentageCompleted;
    return this;
  }

  /**
   * Output only. The total number of rows in the AudienceExport result.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRowCount() {
    return rowCount;
  }

  /**
   * Output only. The total number of rows in the AudienceExport result.
   * @param rowCount rowCount or {@code null} for none
   */
  public AudienceExport setRowCount(java.lang.Integer rowCount) {
    this.rowCount = rowCount;
    return this;
  }

  /**
   * Output only. The current state for this AudienceExport.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The current state for this AudienceExport.
   * @param state state or {@code null} for none
   */
  public AudienceExport setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public AudienceExport set(String fieldName, Object value) {
    return (AudienceExport) super.set(fieldName, value);
  }

  @Override
  public AudienceExport clone() {
    return (AudienceExport) super.clone();
  }

}
