/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Capabilities related to SODA (Speech On-Device API). Next ID: 5
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiSodaCapabilities extends com.google.api.client.json.GenericJson {

  /**
   * Whether the device supports different levels of hotword sensitivity. go/hotword-sensitivity-prd
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean supportsHotwordSensitivity;

  /**
   * Whether Simple Stop (go/simple-stop) is enabled on the device. Simple stop allows users to stop
   * firing alarms and timers by just saying "stop" without first saying the hotword.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean supportsSimpleStop;

  /**
   * Whether the device supports speaker-id (speaker identification based on hotword and/or spoken
   * query - go/speaker-id). Note: there are existing devices that support speaker-id but does not
   * have this capability set. Not having this field populated doesn't necessarily mean the device
   * doesn't support speaker-id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean supportsSpeakerId;

  /**
   * Whether the device supports WarmWords (go/warm-words-framework).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean supportsWarmWords;

  /**
   * Whether the device supports different levels of hotword sensitivity. go/hotword-sensitivity-prd
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSupportsHotwordSensitivity() {
    return supportsHotwordSensitivity;
  }

  /**
   * Whether the device supports different levels of hotword sensitivity. go/hotword-sensitivity-prd
   * @param supportsHotwordSensitivity supportsHotwordSensitivity or {@code null} for none
   */
  public AssistantApiSodaCapabilities setSupportsHotwordSensitivity(java.lang.Boolean supportsHotwordSensitivity) {
    this.supportsHotwordSensitivity = supportsHotwordSensitivity;
    return this;
  }

  /**
   * Whether Simple Stop (go/simple-stop) is enabled on the device. Simple stop allows users to stop
   * firing alarms and timers by just saying "stop" without first saying the hotword.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSupportsSimpleStop() {
    return supportsSimpleStop;
  }

  /**
   * Whether Simple Stop (go/simple-stop) is enabled on the device. Simple stop allows users to stop
   * firing alarms and timers by just saying "stop" without first saying the hotword.
   * @param supportsSimpleStop supportsSimpleStop or {@code null} for none
   */
  public AssistantApiSodaCapabilities setSupportsSimpleStop(java.lang.Boolean supportsSimpleStop) {
    this.supportsSimpleStop = supportsSimpleStop;
    return this;
  }

  /**
   * Whether the device supports speaker-id (speaker identification based on hotword and/or spoken
   * query - go/speaker-id). Note: there are existing devices that support speaker-id but does not
   * have this capability set. Not having this field populated doesn't necessarily mean the device
   * doesn't support speaker-id.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSupportsSpeakerId() {
    return supportsSpeakerId;
  }

  /**
   * Whether the device supports speaker-id (speaker identification based on hotword and/or spoken
   * query - go/speaker-id). Note: there are existing devices that support speaker-id but does not
   * have this capability set. Not having this field populated doesn't necessarily mean the device
   * doesn't support speaker-id.
   * @param supportsSpeakerId supportsSpeakerId or {@code null} for none
   */
  public AssistantApiSodaCapabilities setSupportsSpeakerId(java.lang.Boolean supportsSpeakerId) {
    this.supportsSpeakerId = supportsSpeakerId;
    return this;
  }

  /**
   * Whether the device supports WarmWords (go/warm-words-framework).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSupportsWarmWords() {
    return supportsWarmWords;
  }

  /**
   * Whether the device supports WarmWords (go/warm-words-framework).
   * @param supportsWarmWords supportsWarmWords or {@code null} for none
   */
  public AssistantApiSodaCapabilities setSupportsWarmWords(java.lang.Boolean supportsWarmWords) {
    this.supportsWarmWords = supportsWarmWords;
    return this;
  }

  @Override
  public AssistantApiSodaCapabilities set(String fieldName, Object value) {
    return (AssistantApiSodaCapabilities) super.set(fieldName, value);
  }

  @Override
  public AssistantApiSodaCapabilities clone() {
    return (AssistantApiSodaCapabilities) super.clone();
  }

}
