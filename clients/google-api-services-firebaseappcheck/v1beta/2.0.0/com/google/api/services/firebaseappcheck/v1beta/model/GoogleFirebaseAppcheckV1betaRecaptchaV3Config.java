/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseappcheck.v1beta.model;

/**
 * An app's reCAPTCHA v3 configuration object. This configuration is used by
 * ExchangeRecaptchaV3Token to validate reCAPTCHA tokens issued to apps by reCAPTCHA v3. It also
 * controls certain properties of the returned `AppCheckToken`, such as its ttl.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase App Check API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirebaseAppcheckV1betaRecaptchaV3Config extends com.google.api.client.json.GenericJson {

  /**
   * Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format:
   * ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Input only. The site secret used to identify your service for reCAPTCHA v3
   * verification. For security reasons, this field will never be populated in any response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String siteSecret;

  /**
   * Output only. Whether the `site_secret` field was previously set. Since we will never return the
   * `site_secret` field, this field is the only way to find out whether it was previously set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean siteSecretSet;

  /**
   * Specifies the duration for which App Check tokens exchanged from reCAPTCHA tokens will be
   * valid. If unset, a default value of 1 day is assumed. Must be between 30 minutes and 7 days,
   * inclusive.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String tokenTtl;

  /**
   * Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format:
   * ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format:
   * ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```
   * @param name name or {@code null} for none
   */
  public GoogleFirebaseAppcheckV1betaRecaptchaV3Config setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Input only. The site secret used to identify your service for reCAPTCHA v3
   * verification. For security reasons, this field will never be populated in any response.
   * @return value or {@code null} for none
   */
  public java.lang.String getSiteSecret() {
    return siteSecret;
  }

  /**
   * Required. Input only. The site secret used to identify your service for reCAPTCHA v3
   * verification. For security reasons, this field will never be populated in any response.
   * @param siteSecret siteSecret or {@code null} for none
   */
  public GoogleFirebaseAppcheckV1betaRecaptchaV3Config setSiteSecret(java.lang.String siteSecret) {
    this.siteSecret = siteSecret;
    return this;
  }

  /**
   * Output only. Whether the `site_secret` field was previously set. Since we will never return the
   * `site_secret` field, this field is the only way to find out whether it was previously set.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSiteSecretSet() {
    return siteSecretSet;
  }

  /**
   * Output only. Whether the `site_secret` field was previously set. Since we will never return the
   * `site_secret` field, this field is the only way to find out whether it was previously set.
   * @param siteSecretSet siteSecretSet or {@code null} for none
   */
  public GoogleFirebaseAppcheckV1betaRecaptchaV3Config setSiteSecretSet(java.lang.Boolean siteSecretSet) {
    this.siteSecretSet = siteSecretSet;
    return this;
  }

  /**
   * Specifies the duration for which App Check tokens exchanged from reCAPTCHA tokens will be
   * valid. If unset, a default value of 1 day is assumed. Must be between 30 minutes and 7 days,
   * inclusive.
   * @return value or {@code null} for none
   */
  public String getTokenTtl() {
    return tokenTtl;
  }

  /**
   * Specifies the duration for which App Check tokens exchanged from reCAPTCHA tokens will be
   * valid. If unset, a default value of 1 day is assumed. Must be between 30 minutes and 7 days,
   * inclusive.
   * @param tokenTtl tokenTtl or {@code null} for none
   */
  public GoogleFirebaseAppcheckV1betaRecaptchaV3Config setTokenTtl(String tokenTtl) {
    this.tokenTtl = tokenTtl;
    return this;
  }

  @Override
  public GoogleFirebaseAppcheckV1betaRecaptchaV3Config set(String fieldName, Object value) {
    return (GoogleFirebaseAppcheckV1betaRecaptchaV3Config) super.set(fieldName, value);
  }

  @Override
  public GoogleFirebaseAppcheckV1betaRecaptchaV3Config clone() {
    return (GoogleFirebaseAppcheckV1betaRecaptchaV3Config) super.clone();
  }

}
