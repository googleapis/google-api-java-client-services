/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datamanager.v1.model;

/**
 * Information about the Google Cloud Platform wrapped key.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Data Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GcpWrappedKeyInfo extends com.google.api.client.json.GenericJson {

  /**
   * Required. The base64 encoded encrypted data encryption key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String encryptedDek;

  /**
   * Required. Google Cloud Platform [Cloud Key Management Service resource
   * ID](//cloud.google.com/kms/docs/getting-resource-ids). Should be in the format of
   * "projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{key}".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kekUri;

  /**
   * Required. The type of algorithm used to encrypt the data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String keyType;

  /**
   * Required. The [Workload Identity](//cloud.google.com/iam/docs/workload-identity-federation)
   * pool provider required to use KEK.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String wipProvider;

  /**
   * Required. The base64 encoded encrypted data encryption key.
   * @return value or {@code null} for none
   */
  public java.lang.String getEncryptedDek() {
    return encryptedDek;
  }

  /**
   * Required. The base64 encoded encrypted data encryption key.
   * @param encryptedDek encryptedDek or {@code null} for none
   */
  public GcpWrappedKeyInfo setEncryptedDek(java.lang.String encryptedDek) {
    this.encryptedDek = encryptedDek;
    return this;
  }

  /**
   * Required. Google Cloud Platform [Cloud Key Management Service resource
   * ID](//cloud.google.com/kms/docs/getting-resource-ids). Should be in the format of
   * "projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{key}".
   * @return value or {@code null} for none
   */
  public java.lang.String getKekUri() {
    return kekUri;
  }

  /**
   * Required. Google Cloud Platform [Cloud Key Management Service resource
   * ID](//cloud.google.com/kms/docs/getting-resource-ids). Should be in the format of
   * "projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{key}".
   * @param kekUri kekUri or {@code null} for none
   */
  public GcpWrappedKeyInfo setKekUri(java.lang.String kekUri) {
    this.kekUri = kekUri;
    return this;
  }

  /**
   * Required. The type of algorithm used to encrypt the data.
   * @return value or {@code null} for none
   */
  public java.lang.String getKeyType() {
    return keyType;
  }

  /**
   * Required. The type of algorithm used to encrypt the data.
   * @param keyType keyType or {@code null} for none
   */
  public GcpWrappedKeyInfo setKeyType(java.lang.String keyType) {
    this.keyType = keyType;
    return this;
  }

  /**
   * Required. The [Workload Identity](//cloud.google.com/iam/docs/workload-identity-federation)
   * pool provider required to use KEK.
   * @return value or {@code null} for none
   */
  public java.lang.String getWipProvider() {
    return wipProvider;
  }

  /**
   * Required. The [Workload Identity](//cloud.google.com/iam/docs/workload-identity-federation)
   * pool provider required to use KEK.
   * @param wipProvider wipProvider or {@code null} for none
   */
  public GcpWrappedKeyInfo setWipProvider(java.lang.String wipProvider) {
    this.wipProvider = wipProvider;
    return this;
  }

  @Override
  public GcpWrappedKeyInfo set(String fieldName, Object value) {
    return (GcpWrappedKeyInfo) super.set(fieldName, value);
  }

  @Override
  public GcpWrappedKeyInfo clone() {
    return (GcpWrappedKeyInfo) super.clone();
  }

}
