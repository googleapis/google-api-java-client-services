/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.orgpolicy.v2;

/**
 * Service definition for OrgPolicyAPI (v2).
 *
 * <p>
 * The Organization Policy API allows users to configure governance rules on their Google Cloud resources across the resource hierarchy.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/orgpolicy/docs/reference/rest/index.html" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link OrgPolicyAPIRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class OrgPolicyAPI extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Organization Policy API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://orgpolicy.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://orgpolicy.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public OrgPolicyAPI(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  OrgPolicyAPI(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Folders collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
   *   {@code OrgPolicyAPI.Folders.List request = orgpolicy.folders().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Folders folders() {
    return new Folders();
  }

  /**
   * The "folders" collection of methods.
   */
  public class Folders {

    /**
     * An accessor for creating requests from the Constraints collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
     *   {@code OrgPolicyAPI.Constraints.List request = orgpolicy.constraints().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Constraints constraints() {
      return new Constraints();
    }

    /**
     * The "constraints" collection of methods.
     */
    public class Constraints {

      /**
       * Lists constraints that could be applied on the specified resource.
       *
       * Create a request for the method "constraints.list".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The Google Cloud resource that parents the constraint. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListConstraintsResponse> {

        private static final String REST_PATH = "v2/{+parent}/constraints";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Lists constraints that could be applied on the specified resource.
         *
         * Create a request for the method "constraints.list".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The Google Cloud resource that parents the constraint. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListConstraintsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Google Cloud resource that parents the constraint. Must be in one of the
         * following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The Google Cloud resource that parents the constraint. Must be in one of the following
       forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The Google Cloud resource that parents the constraint. Must be in one of the
         * following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Size of the pages to be returned. This is currently unsupported and will be ignored. The server may
       at any point start using this field to limit page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token used to retrieve the next page. This is currently unsupported and will be ignored. The
       server may at any point start using this field.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Policies collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
     *   {@code OrgPolicyAPI.Policies.List request = orgpolicy.policies().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Policies policies() {
      return new Policies();
    }

    /**
     * The "policies" collection of methods.
     */
    public class Policies {

      /**
       * Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
       * constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if
       * the policy already exists on the given Google Cloud resource.
       *
       * Create a request for the method "policies.create".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The Google Cloud resource that will parent the new policy. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+parent}/policies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
         * constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS`
         * if the policy already exists on the given Google Cloud resource.
         *
         * Create a request for the method "policies.create".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The Google Cloud resource that will parent the new policy. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
         * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) {
          super(OrgPolicyAPI.this, "POST", REST_PATH, content, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Google Cloud resource that will parent the new policy. Must be in one of
         * the following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The Google Cloud resource that will parent the new policy. Must be in one of the
       following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The Google Cloud resource that will parent the new policy. Must be in one of
         * the following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
       * constraint or organization policy does not exist.
       *
       * Create a request for the method "policies.delete".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the policy to delete. See the policy entry for naming rules.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+/policies/[^/]+$");

        /**
         * Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
         * constraint or organization policy does not exist.
         *
         * Create a request for the method "policies.delete".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the policy to delete. See the policy entry for naming rules.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(OrgPolicyAPI.this, "DELETE", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Name of the policy to delete. See the policy entry for naming rules. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the policy to delete. See the policy entry for naming rules.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Name of the policy to delete. See the policy entry for naming rules. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. The current etag of policy. If an etag is provided and does not match the
         * current etag of the policy, deletion will be blocked and an ABORTED error will be
         * returned.
         */
        @com.google.api.client.util.Key
        private java.lang.String etag;

        /** Optional. The current etag of policy. If an etag is provided and does not match the current etag of
       the policy, deletion will be blocked and an ABORTED error will be returned.
         */
        public java.lang.String getEtag() {
          return etag;
        }

        /**
         * Optional. The current etag of policy. If an etag is provided and does not match the
         * current etag of the policy, deletion will be blocked and an ABORTED error will be
         * returned.
         */
        public Delete setEtag(java.lang.String etag) {
          this.etag = etag;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The
       * `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.
       *
       * Create a request for the method "policies.get".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the policy. See Policy for naming requirements.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+/policies/[^/]+$");

        /**
         * Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The
         * `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.
         *
         * Create a request for the method "policies.get".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the policy. See Policy for naming requirements.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Resource name of the policy. See Policy for naming requirements. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the policy. See Policy for naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Resource name of the policy. See Policy for naming requirements. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the effective policy on a resource. This is the result of merging policies in the resource
       * hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition`
       * set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager
       * resource hierarchy with 'under:' prefix will not be expanded.
       *
       * Create a request for the method "policies.getEffectivePolicy".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link GetEffectivePolicy#execute()} method to invoke the remote operation.
       *
       * @param name Required. The effective policy to compute. See Policy for naming requirements.
       * @return the request
       */
      public GetEffectivePolicy getEffectivePolicy(java.lang.String name) throws java.io.IOException {
        GetEffectivePolicy result = new GetEffectivePolicy(name);
        initialize(result);
        return result;
      }

      public class GetEffectivePolicy extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+name}:getEffectivePolicy";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+/policies/[^/]+$");

        /**
         * Gets the effective policy on a resource. This is the result of merging policies in the resource
         * hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition`
         * set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager
         * resource hierarchy with 'under:' prefix will not be expanded.
         *
         * Create a request for the method "policies.getEffectivePolicy".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link GetEffectivePolicy#execute()} method to invoke the remote
         * operation. <p> {@link GetEffectivePolicy#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The effective policy to compute. See Policy for naming requirements.
         * @since 1.13
         */
        protected GetEffectivePolicy(java.lang.String name) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetEffectivePolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetEffectivePolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetEffectivePolicy setAccessToken(java.lang.String accessToken) {
          return (GetEffectivePolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetEffectivePolicy setAlt(java.lang.String alt) {
          return (GetEffectivePolicy) super.setAlt(alt);
        }

        @Override
        public GetEffectivePolicy setCallback(java.lang.String callback) {
          return (GetEffectivePolicy) super.setCallback(callback);
        }

        @Override
        public GetEffectivePolicy setFields(java.lang.String fields) {
          return (GetEffectivePolicy) super.setFields(fields);
        }

        @Override
        public GetEffectivePolicy setKey(java.lang.String key) {
          return (GetEffectivePolicy) super.setKey(key);
        }

        @Override
        public GetEffectivePolicy setOauthToken(java.lang.String oauthToken) {
          return (GetEffectivePolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetEffectivePolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetEffectivePolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetEffectivePolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetEffectivePolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetEffectivePolicy setUploadType(java.lang.String uploadType) {
          return (GetEffectivePolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetEffectivePolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetEffectivePolicy) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The effective policy to compute. See Policy for naming requirements. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The effective policy to compute. See Policy for naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The effective policy to compute. See Policy for naming requirements. */
        public GetEffectivePolicy setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetEffectivePolicy set(String parameterName, Object value) {
          return (GetEffectivePolicy) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves all of the policies that exist on a particular resource.
       *
       * Create a request for the method "policies.list".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The target Google Cloud resource that parents the set of constraints and policies that
       *        will be returned from this call. Must be in one of the following forms: *
       *        `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListPoliciesResponse> {

        private static final String REST_PATH = "v2/{+parent}/policies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Retrieves all of the policies that exist on a particular resource.
         *
         * Create a request for the method "policies.list".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The target Google Cloud resource that parents the set of constraints and policies that
       *        will be returned from this call. Must be in one of the following forms: *
       *        `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListPoliciesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The target Google Cloud resource that parents the set of constraints and
         * policies that will be returned from this call. Must be in one of the following forms: *
         * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
         * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The target Google Cloud resource that parents the set of constraints and policies that
       will be returned from this call. Must be in one of the following forms: *
       `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The target Google Cloud resource that parents the set of constraints and
         * policies that will be returned from this call. Must be in one of the following forms: *
         * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
         * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Size of the pages to be returned. This is currently unsupported and will be ignored. The server may
       at any point start using this field to limit page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token used to retrieve the next page. This is currently unsupported and will be ignored. The
       server may at any point start using this field.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
       * constraint or the policy do not exist. Returns a `google.rpc.Status` with
       * `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag
       * of the policy Note: the supplied policy will perform a full overwrite of all fields.
       *
       * Create a request for the method "policies.patch".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Immutable. The resource name of the policy. Must be one of the following forms, where
       *        `constraint_name` is the name of the constraint which this policy configures: *
       *        `projects/{project_number}/policies/{constraint_name}` *
       *        `folders/{folder_id}/policies/{constraint_name}` *
       *        `organizations/{organization_id}/policies/{constraint_name}` For example,
       *        `projects/123/policies/compute.disableSerialPortAccess`. Note:
       *        `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
       *        requests, but responses will return the name using the equivalent project number.
       * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+/policies/[^/]+$");

        /**
         * Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
         * constraint or the policy do not exist. Returns a `google.rpc.Status` with
         * `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag
         * of the policy Note: the supplied policy will perform a full overwrite of all fields.
         *
         * Create a request for the method "policies.patch".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Immutable. The resource name of the policy. Must be one of the following forms, where
       *        `constraint_name` is the name of the constraint which this policy configures: *
       *        `projects/{project_number}/policies/{constraint_name}` *
       *        `folders/{folder_id}/policies/{constraint_name}` *
       *        `organizations/{organization_id}/policies/{constraint_name}` For example,
       *        `projects/123/policies/compute.disableSerialPortAccess`. Note:
       *        `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
       *        requests, but responses will return the name using the equivalent project number.
         * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) {
          super(OrgPolicyAPI.this, "PATCH", REST_PATH, content, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Immutable. The resource name of the policy. Must be one of the following forms, where
         * `constraint_name` is the name of the constraint which this policy configures: *
         * `projects/{project_number}/policies/{constraint_name}` *
         * `folders/{folder_id}/policies/{constraint_name}` *
         * `organizations/{organization_id}/policies/{constraint_name}` For example,
         * `projects/123/policies/compute.disableSerialPortAccess`. Note:
         * `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
         * requests, but responses will return the name using the equivalent project number.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Immutable. The resource name of the policy. Must be one of the following forms, where
       `constraint_name` is the name of the constraint which this policy configures: *
       `projects/{project_number}/policies/{constraint_name}` *
       `folders/{folder_id}/policies/{constraint_name}` *
       `organizations/{organization_id}/policies/{constraint_name}` For example,
       `projects/123/policies/compute.disableSerialPortAccess`. Note:
       `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but
       responses will return the name using the equivalent project number.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Immutable. The resource name of the policy. Must be one of the following forms, where
         * `constraint_name` is the name of the constraint which this policy configures: *
         * `projects/{project_number}/policies/{constraint_name}` *
         * `folders/{folder_id}/policies/{constraint_name}` *
         * `organizations/{organization_id}/policies/{constraint_name}` For example,
         * `projects/123/policies/compute.disableSerialPortAccess`. Note:
         * `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
         * requests, but responses will return the name using the equivalent project number.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Field mask used to specify the fields to be overwritten in the policy by the set. The
         * fields specified in the update_mask are relative to the policy, not the full request.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Field mask used to specify the fields to be overwritten in the policy by the set. The fields
       specified in the update_mask are relative to the policy, not the full request.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Field mask used to specify the fields to be overwritten in the policy by the set. The
         * fields specified in the update_mask are relative to the policy, not the full request.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
   *   {@code OrgPolicyAPI.Organizations.List request = orgpolicy.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * An accessor for creating requests from the Constraints collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
     *   {@code OrgPolicyAPI.Constraints.List request = orgpolicy.constraints().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Constraints constraints() {
      return new Constraints();
    }

    /**
     * The "constraints" collection of methods.
     */
    public class Constraints {

      /**
       * Lists constraints that could be applied on the specified resource.
       *
       * Create a request for the method "constraints.list".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The Google Cloud resource that parents the constraint. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListConstraintsResponse> {

        private static final String REST_PATH = "v2/{+parent}/constraints";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists constraints that could be applied on the specified resource.
         *
         * Create a request for the method "constraints.list".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The Google Cloud resource that parents the constraint. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListConstraintsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Google Cloud resource that parents the constraint. Must be in one of the
         * following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The Google Cloud resource that parents the constraint. Must be in one of the following
       forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The Google Cloud resource that parents the constraint. Must be in one of the
         * following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Size of the pages to be returned. This is currently unsupported and will be ignored. The server may
       at any point start using this field to limit page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token used to retrieve the next page. This is currently unsupported and will be ignored. The
       server may at any point start using this field.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the CustomConstraints collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
     *   {@code OrgPolicyAPI.CustomConstraints.List request = orgpolicy.customConstraints().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public CustomConstraints customConstraints() {
      return new CustomConstraints();
    }

    /**
     * The "customConstraints" collection of methods.
     */
    public class CustomConstraints {

      /**
       * Creates a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
       * the organization does not exist. Returns a `google.rpc.Status` with
       * `google.rpc.Code.ALREADY_EXISTS` if the constraint already exists on the given organization.
       *
       * Create a request for the method "customConstraints.create".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Must be in the following form: * `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint> {

        private static final String REST_PATH = "v2/{+parent}/customConstraints";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
         * the organization does not exist. Returns a `google.rpc.Status` with
         * `google.rpc.Code.ALREADY_EXISTS` if the constraint already exists on the given organization.
         *
         * Create a request for the method "customConstraints.create".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Must be in the following form: * `organizations/{organization_id}`
         * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint content) {
          super(OrgPolicyAPI.this, "POST", REST_PATH, content, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Must be in the following form: * `organizations/{organization_id}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Must be in the following form: * `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Must be in the following form: * `organizations/{organization_id}` */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
       * the constraint does not exist.
       *
       * Create a request for the method "customConstraints.delete".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the custom constraint to delete. See the custom constraint entry for naming rules.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/customConstraints/[^/]+$");

        /**
         * Deletes a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
         * the constraint does not exist.
         *
         * Create a request for the method "customConstraints.delete".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the custom constraint to delete. See the custom constraint entry for naming rules.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(OrgPolicyAPI.this, "DELETE", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/customConstraints/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the custom constraint to delete. See the custom constraint entry for
         * naming rules.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the custom constraint to delete. See the custom constraint entry for naming
       rules.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the custom constraint to delete. See the custom constraint entry for
         * naming rules.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/customConstraints/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a custom or managed constraint. Returns a `google.rpc.Status` with
       * `google.rpc.Code.NOT_FOUND` if the custom or managed constraint does not exist.
       *
       * Create a request for the method "customConstraints.get".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the custom or managed constraint. See the custom constraint entry for
       *        naming requirements.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/customConstraints/[^/]+$");

        /**
         * Gets a custom or managed constraint. Returns a `google.rpc.Status` with
         * `google.rpc.Code.NOT_FOUND` if the custom or managed constraint does not exist.
         *
         * Create a request for the method "customConstraints.get".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the custom or managed constraint. See the custom constraint entry for
       *        naming requirements.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/customConstraints/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name of the custom or managed constraint. See the custom constraint
         * entry for naming requirements.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the custom or managed constraint. See the custom constraint entry for
       naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name of the custom or managed constraint. See the custom constraint
         * entry for naming requirements.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/customConstraints/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves all of the custom constraints that exist on a particular organization resource.
       *
       * Create a request for the method "customConstraints.list".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The target Google Cloud resource that parents the set of custom constraints that will be
       *        returned from this call. Must be in one of the following forms: *
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListCustomConstraintsResponse> {

        private static final String REST_PATH = "v2/{+parent}/customConstraints";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Retrieves all of the custom constraints that exist on a particular organization resource.
         *
         * Create a request for the method "customConstraints.list".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The target Google Cloud resource that parents the set of custom constraints that will be
       *        returned from this call. Must be in one of the following forms: *
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListCustomConstraintsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The target Google Cloud resource that parents the set of custom constraints
         * that will be returned from this call. Must be in one of the following forms: *
         * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The target Google Cloud resource that parents the set of custom constraints that will be
       returned from this call. Must be in one of the following forms: * `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The target Google Cloud resource that parents the set of custom constraints
         * that will be returned from this call. Must be in one of the following forms: *
         * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Size of the pages to be returned. This is currently unsupported and will be ignored. The server may
       at any point start using this field to limit page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token used to retrieve the next page. This is currently unsupported and will be ignored. The
       server may at any point start using this field.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
       * the constraint does not exist. Note: the supplied policy will perform a full overwrite of all
       * fields.
       *
       * Create a request for the method "customConstraints.patch".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Immutable. Name of the constraint. This is unique within the organization. Format of the name should
       *        be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example:
       *        `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70
       *        characters and the minimum length is 1. Note that the prefix
       *        `organizations/{organization_id}/customConstraints/` is not counted.
       * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/customConstraints/[^/]+$");

        /**
         * Updates a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
         * the constraint does not exist. Note: the supplied policy will perform a full overwrite of all
         * fields.
         *
         * Create a request for the method "customConstraints.patch".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Immutable. Name of the constraint. This is unique within the organization. Format of the name should
       *        be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example:
       *        `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70
       *        characters and the minimum length is 1. Note that the prefix
       *        `organizations/{organization_id}/customConstraints/` is not counted.
         * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint content) {
          super(OrgPolicyAPI.this, "PATCH", REST_PATH, content, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2CustomConstraint.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/customConstraints/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Immutable. Name of the constraint. This is unique within the organization. Format of the
         * name should be *
         * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example:
         * `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70
         * characters and the minimum length is 1. Note that the prefix
         * `organizations/{organization_id}/customConstraints/` is not counted.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Immutable. Name of the constraint. This is unique within the organization. Format of the name
       should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example:
       `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70 characters
       and the minimum length is 1. Note that the prefix
       `organizations/{organization_id}/customConstraints/` is not counted.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Immutable. Name of the constraint. This is unique within the organization. Format of the
         * name should be *
         * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example:
         * `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70
         * characters and the minimum length is 1. Note that the prefix
         * `organizations/{organization_id}/customConstraints/` is not counted.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/customConstraints/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Policies collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
     *   {@code OrgPolicyAPI.Policies.List request = orgpolicy.policies().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Policies policies() {
      return new Policies();
    }

    /**
     * The "policies" collection of methods.
     */
    public class Policies {

      /**
       * Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
       * constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if
       * the policy already exists on the given Google Cloud resource.
       *
       * Create a request for the method "policies.create".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The Google Cloud resource that will parent the new policy. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+parent}/policies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
         * constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS`
         * if the policy already exists on the given Google Cloud resource.
         *
         * Create a request for the method "policies.create".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The Google Cloud resource that will parent the new policy. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
         * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) {
          super(OrgPolicyAPI.this, "POST", REST_PATH, content, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Google Cloud resource that will parent the new policy. Must be in one of
         * the following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The Google Cloud resource that will parent the new policy. Must be in one of the
       following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The Google Cloud resource that will parent the new policy. Must be in one of
         * the following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
       * constraint or organization policy does not exist.
       *
       * Create a request for the method "policies.delete".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the policy to delete. See the policy entry for naming rules.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/policies/[^/]+$");

        /**
         * Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
         * constraint or organization policy does not exist.
         *
         * Create a request for the method "policies.delete".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the policy to delete. See the policy entry for naming rules.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(OrgPolicyAPI.this, "DELETE", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Name of the policy to delete. See the policy entry for naming rules. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the policy to delete. See the policy entry for naming rules.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Name of the policy to delete. See the policy entry for naming rules. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. The current etag of policy. If an etag is provided and does not match the
         * current etag of the policy, deletion will be blocked and an ABORTED error will be
         * returned.
         */
        @com.google.api.client.util.Key
        private java.lang.String etag;

        /** Optional. The current etag of policy. If an etag is provided and does not match the current etag of
       the policy, deletion will be blocked and an ABORTED error will be returned.
         */
        public java.lang.String getEtag() {
          return etag;
        }

        /**
         * Optional. The current etag of policy. If an etag is provided and does not match the
         * current etag of the policy, deletion will be blocked and an ABORTED error will be
         * returned.
         */
        public Delete setEtag(java.lang.String etag) {
          this.etag = etag;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The
       * `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.
       *
       * Create a request for the method "policies.get".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the policy. See Policy for naming requirements.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/policies/[^/]+$");

        /**
         * Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The
         * `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.
         *
         * Create a request for the method "policies.get".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the policy. See Policy for naming requirements.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Resource name of the policy. See Policy for naming requirements. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the policy. See Policy for naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Resource name of the policy. See Policy for naming requirements. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the effective policy on a resource. This is the result of merging policies in the resource
       * hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition`
       * set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager
       * resource hierarchy with 'under:' prefix will not be expanded.
       *
       * Create a request for the method "policies.getEffectivePolicy".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link GetEffectivePolicy#execute()} method to invoke the remote operation.
       *
       * @param name Required. The effective policy to compute. See Policy for naming requirements.
       * @return the request
       */
      public GetEffectivePolicy getEffectivePolicy(java.lang.String name) throws java.io.IOException {
        GetEffectivePolicy result = new GetEffectivePolicy(name);
        initialize(result);
        return result;
      }

      public class GetEffectivePolicy extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+name}:getEffectivePolicy";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/policies/[^/]+$");

        /**
         * Gets the effective policy on a resource. This is the result of merging policies in the resource
         * hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition`
         * set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager
         * resource hierarchy with 'under:' prefix will not be expanded.
         *
         * Create a request for the method "policies.getEffectivePolicy".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link GetEffectivePolicy#execute()} method to invoke the remote
         * operation. <p> {@link GetEffectivePolicy#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The effective policy to compute. See Policy for naming requirements.
         * @since 1.13
         */
        protected GetEffectivePolicy(java.lang.String name) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetEffectivePolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetEffectivePolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetEffectivePolicy setAccessToken(java.lang.String accessToken) {
          return (GetEffectivePolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetEffectivePolicy setAlt(java.lang.String alt) {
          return (GetEffectivePolicy) super.setAlt(alt);
        }

        @Override
        public GetEffectivePolicy setCallback(java.lang.String callback) {
          return (GetEffectivePolicy) super.setCallback(callback);
        }

        @Override
        public GetEffectivePolicy setFields(java.lang.String fields) {
          return (GetEffectivePolicy) super.setFields(fields);
        }

        @Override
        public GetEffectivePolicy setKey(java.lang.String key) {
          return (GetEffectivePolicy) super.setKey(key);
        }

        @Override
        public GetEffectivePolicy setOauthToken(java.lang.String oauthToken) {
          return (GetEffectivePolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetEffectivePolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetEffectivePolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetEffectivePolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetEffectivePolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetEffectivePolicy setUploadType(java.lang.String uploadType) {
          return (GetEffectivePolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetEffectivePolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetEffectivePolicy) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The effective policy to compute. See Policy for naming requirements. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The effective policy to compute. See Policy for naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The effective policy to compute. See Policy for naming requirements. */
        public GetEffectivePolicy setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetEffectivePolicy set(String parameterName, Object value) {
          return (GetEffectivePolicy) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves all of the policies that exist on a particular resource.
       *
       * Create a request for the method "policies.list".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The target Google Cloud resource that parents the set of constraints and policies that
       *        will be returned from this call. Must be in one of the following forms: *
       *        `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListPoliciesResponse> {

        private static final String REST_PATH = "v2/{+parent}/policies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Retrieves all of the policies that exist on a particular resource.
         *
         * Create a request for the method "policies.list".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The target Google Cloud resource that parents the set of constraints and policies that
       *        will be returned from this call. Must be in one of the following forms: *
       *        `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListPoliciesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The target Google Cloud resource that parents the set of constraints and
         * policies that will be returned from this call. Must be in one of the following forms: *
         * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
         * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The target Google Cloud resource that parents the set of constraints and policies that
       will be returned from this call. Must be in one of the following forms: *
       `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The target Google Cloud resource that parents the set of constraints and
         * policies that will be returned from this call. Must be in one of the following forms: *
         * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
         * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Size of the pages to be returned. This is currently unsupported and will be ignored. The server may
       at any point start using this field to limit page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token used to retrieve the next page. This is currently unsupported and will be ignored. The
       server may at any point start using this field.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
       * constraint or the policy do not exist. Returns a `google.rpc.Status` with
       * `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag
       * of the policy Note: the supplied policy will perform a full overwrite of all fields.
       *
       * Create a request for the method "policies.patch".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Immutable. The resource name of the policy. Must be one of the following forms, where
       *        `constraint_name` is the name of the constraint which this policy configures: *
       *        `projects/{project_number}/policies/{constraint_name}` *
       *        `folders/{folder_id}/policies/{constraint_name}` *
       *        `organizations/{organization_id}/policies/{constraint_name}` For example,
       *        `projects/123/policies/compute.disableSerialPortAccess`. Note:
       *        `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
       *        requests, but responses will return the name using the equivalent project number.
       * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/policies/[^/]+$");

        /**
         * Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
         * constraint or the policy do not exist. Returns a `google.rpc.Status` with
         * `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag
         * of the policy Note: the supplied policy will perform a full overwrite of all fields.
         *
         * Create a request for the method "policies.patch".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Immutable. The resource name of the policy. Must be one of the following forms, where
       *        `constraint_name` is the name of the constraint which this policy configures: *
       *        `projects/{project_number}/policies/{constraint_name}` *
       *        `folders/{folder_id}/policies/{constraint_name}` *
       *        `organizations/{organization_id}/policies/{constraint_name}` For example,
       *        `projects/123/policies/compute.disableSerialPortAccess`. Note:
       *        `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
       *        requests, but responses will return the name using the equivalent project number.
         * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) {
          super(OrgPolicyAPI.this, "PATCH", REST_PATH, content, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Immutable. The resource name of the policy. Must be one of the following forms, where
         * `constraint_name` is the name of the constraint which this policy configures: *
         * `projects/{project_number}/policies/{constraint_name}` *
         * `folders/{folder_id}/policies/{constraint_name}` *
         * `organizations/{organization_id}/policies/{constraint_name}` For example,
         * `projects/123/policies/compute.disableSerialPortAccess`. Note:
         * `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
         * requests, but responses will return the name using the equivalent project number.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Immutable. The resource name of the policy. Must be one of the following forms, where
       `constraint_name` is the name of the constraint which this policy configures: *
       `projects/{project_number}/policies/{constraint_name}` *
       `folders/{folder_id}/policies/{constraint_name}` *
       `organizations/{organization_id}/policies/{constraint_name}` For example,
       `projects/123/policies/compute.disableSerialPortAccess`. Note:
       `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but
       responses will return the name using the equivalent project number.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Immutable. The resource name of the policy. Must be one of the following forms, where
         * `constraint_name` is the name of the constraint which this policy configures: *
         * `projects/{project_number}/policies/{constraint_name}` *
         * `folders/{folder_id}/policies/{constraint_name}` *
         * `organizations/{organization_id}/policies/{constraint_name}` For example,
         * `projects/123/policies/compute.disableSerialPortAccess`. Note:
         * `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
         * requests, but responses will return the name using the equivalent project number.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Field mask used to specify the fields to be overwritten in the policy by the set. The
         * fields specified in the update_mask are relative to the policy, not the full request.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Field mask used to specify the fields to be overwritten in the policy by the set. The fields
       specified in the update_mask are relative to the policy, not the full request.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Field mask used to specify the fields to be overwritten in the policy by the set. The
         * fields specified in the update_mask are relative to the policy, not the full request.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
   *   {@code OrgPolicyAPI.Projects.List request = orgpolicy.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Constraints collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
     *   {@code OrgPolicyAPI.Constraints.List request = orgpolicy.constraints().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Constraints constraints() {
      return new Constraints();
    }

    /**
     * The "constraints" collection of methods.
     */
    public class Constraints {

      /**
       * Lists constraints that could be applied on the specified resource.
       *
       * Create a request for the method "constraints.list".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The Google Cloud resource that parents the constraint. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListConstraintsResponse> {

        private static final String REST_PATH = "v2/{+parent}/constraints";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists constraints that could be applied on the specified resource.
         *
         * Create a request for the method "constraints.list".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The Google Cloud resource that parents the constraint. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListConstraintsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Google Cloud resource that parents the constraint. Must be in one of the
         * following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The Google Cloud resource that parents the constraint. Must be in one of the following
       forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The Google Cloud resource that parents the constraint. Must be in one of the
         * following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Size of the pages to be returned. This is currently unsupported and will be ignored. The server may
       at any point start using this field to limit page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token used to retrieve the next page. This is currently unsupported and will be ignored. The
       server may at any point start using this field.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Policies collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code OrgPolicyAPI orgpolicy = new OrgPolicyAPI(...);}
     *   {@code OrgPolicyAPI.Policies.List request = orgpolicy.policies().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Policies policies() {
      return new Policies();
    }

    /**
     * The "policies" collection of methods.
     */
    public class Policies {

      /**
       * Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
       * constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if
       * the policy already exists on the given Google Cloud resource.
       *
       * Create a request for the method "policies.create".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The Google Cloud resource that will parent the new policy. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+parent}/policies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
         * constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS`
         * if the policy already exists on the given Google Cloud resource.
         *
         * Create a request for the method "policies.create".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The Google Cloud resource that will parent the new policy. Must be in one of the following
       *        forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
         * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) {
          super(OrgPolicyAPI.this, "POST", REST_PATH, content, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Google Cloud resource that will parent the new policy. Must be in one of
         * the following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The Google Cloud resource that will parent the new policy. Must be in one of the
       following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The Google Cloud resource that will parent the new policy. Must be in one of
         * the following forms: * `projects/{project_number}` * `projects/{project_id}` *
         * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
       * constraint or organization policy does not exist.
       *
       * Create a request for the method "policies.delete".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the policy to delete. See the policy entry for naming rules.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/policies/[^/]+$");

        /**
         * Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
         * constraint or organization policy does not exist.
         *
         * Create a request for the method "policies.delete".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the policy to delete. See the policy entry for naming rules.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(OrgPolicyAPI.this, "DELETE", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Name of the policy to delete. See the policy entry for naming rules. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the policy to delete. See the policy entry for naming rules.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Name of the policy to delete. See the policy entry for naming rules. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. The current etag of policy. If an etag is provided and does not match the
         * current etag of the policy, deletion will be blocked and an ABORTED error will be
         * returned.
         */
        @com.google.api.client.util.Key
        private java.lang.String etag;

        /** Optional. The current etag of policy. If an etag is provided and does not match the current etag of
       the policy, deletion will be blocked and an ABORTED error will be returned.
         */
        public java.lang.String getEtag() {
          return etag;
        }

        /**
         * Optional. The current etag of policy. If an etag is provided and does not match the
         * current etag of the policy, deletion will be blocked and an ABORTED error will be
         * returned.
         */
        public Delete setEtag(java.lang.String etag) {
          this.etag = etag;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The
       * `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.
       *
       * Create a request for the method "policies.get".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the policy. See Policy for naming requirements.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/policies/[^/]+$");

        /**
         * Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The
         * `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.
         *
         * Create a request for the method "policies.get".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the policy. See Policy for naming requirements.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Resource name of the policy. See Policy for naming requirements. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the policy. See Policy for naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Resource name of the policy. See Policy for naming requirements. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the effective policy on a resource. This is the result of merging policies in the resource
       * hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition`
       * set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager
       * resource hierarchy with 'under:' prefix will not be expanded.
       *
       * Create a request for the method "policies.getEffectivePolicy".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link GetEffectivePolicy#execute()} method to invoke the remote operation.
       *
       * @param name Required. The effective policy to compute. See Policy for naming requirements.
       * @return the request
       */
      public GetEffectivePolicy getEffectivePolicy(java.lang.String name) throws java.io.IOException {
        GetEffectivePolicy result = new GetEffectivePolicy(name);
        initialize(result);
        return result;
      }

      public class GetEffectivePolicy extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+name}:getEffectivePolicy";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/policies/[^/]+$");

        /**
         * Gets the effective policy on a resource. This is the result of merging policies in the resource
         * hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition`
         * set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager
         * resource hierarchy with 'under:' prefix will not be expanded.
         *
         * Create a request for the method "policies.getEffectivePolicy".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link GetEffectivePolicy#execute()} method to invoke the remote
         * operation. <p> {@link GetEffectivePolicy#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The effective policy to compute. See Policy for naming requirements.
         * @since 1.13
         */
        protected GetEffectivePolicy(java.lang.String name) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetEffectivePolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetEffectivePolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetEffectivePolicy setAccessToken(java.lang.String accessToken) {
          return (GetEffectivePolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetEffectivePolicy setAlt(java.lang.String alt) {
          return (GetEffectivePolicy) super.setAlt(alt);
        }

        @Override
        public GetEffectivePolicy setCallback(java.lang.String callback) {
          return (GetEffectivePolicy) super.setCallback(callback);
        }

        @Override
        public GetEffectivePolicy setFields(java.lang.String fields) {
          return (GetEffectivePolicy) super.setFields(fields);
        }

        @Override
        public GetEffectivePolicy setKey(java.lang.String key) {
          return (GetEffectivePolicy) super.setKey(key);
        }

        @Override
        public GetEffectivePolicy setOauthToken(java.lang.String oauthToken) {
          return (GetEffectivePolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetEffectivePolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetEffectivePolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetEffectivePolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetEffectivePolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetEffectivePolicy setUploadType(java.lang.String uploadType) {
          return (GetEffectivePolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetEffectivePolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetEffectivePolicy) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The effective policy to compute. See Policy for naming requirements. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The effective policy to compute. See Policy for naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The effective policy to compute. See Policy for naming requirements. */
        public GetEffectivePolicy setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetEffectivePolicy set(String parameterName, Object value) {
          return (GetEffectivePolicy) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves all of the policies that exist on a particular resource.
       *
       * Create a request for the method "policies.list".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The target Google Cloud resource that parents the set of constraints and policies that
       *        will be returned from this call. Must be in one of the following forms: *
       *        `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListPoliciesResponse> {

        private static final String REST_PATH = "v2/{+parent}/policies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Retrieves all of the policies that exist on a particular resource.
         *
         * Create a request for the method "policies.list".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The target Google Cloud resource that parents the set of constraints and policies that
       *        will be returned from this call. Must be in one of the following forms: *
       *        `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(OrgPolicyAPI.this, "GET", REST_PATH, null, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2ListPoliciesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The target Google Cloud resource that parents the set of constraints and
         * policies that will be returned from this call. Must be in one of the following forms: *
         * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
         * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The target Google Cloud resource that parents the set of constraints and policies that
       will be returned from this call. Must be in one of the following forms: *
       `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The target Google Cloud resource that parents the set of constraints and
         * policies that will be returned from this call. Must be in one of the following forms: *
         * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` *
         * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Size of the pages to be returned. This is currently unsupported and will be ignored. The server may
       at any point start using this field to limit page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Size of the pages to be returned. This is currently unsupported and will be ignored. The
         * server may at any point start using this field to limit page size.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token used to retrieve the next page. This is currently unsupported and will be ignored. The
       server may at any point start using this field.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token used to retrieve the next page. This is currently unsupported and will be
         * ignored. The server may at any point start using this field.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
       * constraint or the policy do not exist. Returns a `google.rpc.Status` with
       * `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag
       * of the policy Note: the supplied policy will perform a full overwrite of all fields.
       *
       * Create a request for the method "policies.patch".
       *
       * This request holds the parameters needed by the orgpolicy server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Immutable. The resource name of the policy. Must be one of the following forms, where
       *        `constraint_name` is the name of the constraint which this policy configures: *
       *        `projects/{project_number}/policies/{constraint_name}` *
       *        `folders/{folder_id}/policies/{constraint_name}` *
       *        `organizations/{organization_id}/policies/{constraint_name}` For example,
       *        `projects/123/policies/compute.disableSerialPortAccess`. Note:
       *        `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
       *        requests, but responses will return the name using the equivalent project number.
       * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends OrgPolicyAPIRequest<com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/policies/[^/]+$");

        /**
         * Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the
         * constraint or the policy do not exist. Returns a `google.rpc.Status` with
         * `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag
         * of the policy Note: the supplied policy will perform a full overwrite of all fields.
         *
         * Create a request for the method "policies.patch".
         *
         * This request holds the parameters needed by the the orgpolicy server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Immutable. The resource name of the policy. Must be one of the following forms, where
       *        `constraint_name` is the name of the constraint which this policy configures: *
       *        `projects/{project_number}/policies/{constraint_name}` *
       *        `folders/{folder_id}/policies/{constraint_name}` *
       *        `organizations/{organization_id}/policies/{constraint_name}` For example,
       *        `projects/123/policies/compute.disableSerialPortAccess`. Note:
       *        `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
       *        requests, but responses will return the name using the equivalent project number.
         * @param content the {@link com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy content) {
          super(OrgPolicyAPI.this, "PATCH", REST_PATH, content, com.google.api.services.orgpolicy.v2.model.GoogleCloudOrgpolicyV2Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Immutable. The resource name of the policy. Must be one of the following forms, where
         * `constraint_name` is the name of the constraint which this policy configures: *
         * `projects/{project_number}/policies/{constraint_name}` *
         * `folders/{folder_id}/policies/{constraint_name}` *
         * `organizations/{organization_id}/policies/{constraint_name}` For example,
         * `projects/123/policies/compute.disableSerialPortAccess`. Note:
         * `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
         * requests, but responses will return the name using the equivalent project number.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Immutable. The resource name of the policy. Must be one of the following forms, where
       `constraint_name` is the name of the constraint which this policy configures: *
       `projects/{project_number}/policies/{constraint_name}` *
       `folders/{folder_id}/policies/{constraint_name}` *
       `organizations/{organization_id}/policies/{constraint_name}` For example,
       `projects/123/policies/compute.disableSerialPortAccess`. Note:
       `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but
       responses will return the name using the equivalent project number.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Immutable. The resource name of the policy. Must be one of the following forms, where
         * `constraint_name` is the name of the constraint which this policy configures: *
         * `projects/{project_number}/policies/{constraint_name}` *
         * `folders/{folder_id}/policies/{constraint_name}` *
         * `organizations/{organization_id}/policies/{constraint_name}` For example,
         * `projects/123/policies/compute.disableSerialPortAccess`. Note:
         * `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API
         * requests, but responses will return the name using the equivalent project number.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Field mask used to specify the fields to be overwritten in the policy by the set. The
         * fields specified in the update_mask are relative to the policy, not the full request.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Field mask used to specify the fields to be overwritten in the policy by the set. The fields
       specified in the update_mask are relative to the policy, not the full request.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Field mask used to specify the fields to be overwritten in the policy by the set. The
         * fields specified in the update_mask are relative to the policy, not the full request.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link OrgPolicyAPI}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link OrgPolicyAPI}. */
    @Override
    public OrgPolicyAPI build() {
      return new OrgPolicyAPI(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link OrgPolicyAPIRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setOrgPolicyAPIRequestInitializer(
        OrgPolicyAPIRequestInitializer orgpolicyapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(orgpolicyapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
