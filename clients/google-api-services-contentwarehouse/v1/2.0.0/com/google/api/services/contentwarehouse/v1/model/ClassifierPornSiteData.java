/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Next ID: 53
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ClassifierPornSiteData extends com.google.api.client.json.GenericJson {

  /**
   * The average pedo page score for the site.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float avgPedoPageScore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float finalPedoSiteScore;

  /**
   * The number of pages that were used to compute the scores and ratios.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger numberOfPages;

  /**
   * The number of pages with pedo restrict.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger numberOfPedoPages;

  /**
   * Sitechunk used to compute the signals. The field is present only for data created after
   * December 2022.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String site;

  /**
   * The ratio of porn/softporn of the site this page belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float sitePornRatio;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float siteSoftpornRatio;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ClassifierPornSiteDataVersionedScore> versionedscore;

  /**
   * The cubic mean aggregation of violence page scores in the site.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float violenceScore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ClassifierPornSiteViolenceStats violenceStats;

  /**
   * The average pedo page score for the site.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAvgPedoPageScore() {
    return avgPedoPageScore;
  }

  /**
   * The average pedo page score for the site.
   * @param avgPedoPageScore avgPedoPageScore or {@code null} for none
   */
  public ClassifierPornSiteData setAvgPedoPageScore(java.lang.Float avgPedoPageScore) {
    this.avgPedoPageScore = avgPedoPageScore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getFinalPedoSiteScore() {
    return finalPedoSiteScore;
  }

  /**
   * @param finalPedoSiteScore finalPedoSiteScore or {@code null} for none
   */
  public ClassifierPornSiteData setFinalPedoSiteScore(java.lang.Float finalPedoSiteScore) {
    this.finalPedoSiteScore = finalPedoSiteScore;
    return this;
  }

  /**
   * The number of pages that were used to compute the scores and ratios.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getNumberOfPages() {
    return numberOfPages;
  }

  /**
   * The number of pages that were used to compute the scores and ratios.
   * @param numberOfPages numberOfPages or {@code null} for none
   */
  public ClassifierPornSiteData setNumberOfPages(java.math.BigInteger numberOfPages) {
    this.numberOfPages = numberOfPages;
    return this;
  }

  /**
   * The number of pages with pedo restrict.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getNumberOfPedoPages() {
    return numberOfPedoPages;
  }

  /**
   * The number of pages with pedo restrict.
   * @param numberOfPedoPages numberOfPedoPages or {@code null} for none
   */
  public ClassifierPornSiteData setNumberOfPedoPages(java.math.BigInteger numberOfPedoPages) {
    this.numberOfPedoPages = numberOfPedoPages;
    return this;
  }

  /**
   * Sitechunk used to compute the signals. The field is present only for data created after
   * December 2022.
   * @return value or {@code null} for none
   */
  public java.lang.String getSite() {
    return site;
  }

  /**
   * Sitechunk used to compute the signals. The field is present only for data created after
   * December 2022.
   * @param site site or {@code null} for none
   */
  public ClassifierPornSiteData setSite(java.lang.String site) {
    this.site = site;
    return this;
  }

  /**
   * The ratio of porn/softporn of the site this page belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.Float getSitePornRatio() {
    return sitePornRatio;
  }

  /**
   * The ratio of porn/softporn of the site this page belongs to.
   * @param sitePornRatio sitePornRatio or {@code null} for none
   */
  public ClassifierPornSiteData setSitePornRatio(java.lang.Float sitePornRatio) {
    this.sitePornRatio = sitePornRatio;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getSiteSoftpornRatio() {
    return siteSoftpornRatio;
  }

  /**
   * @param siteSoftpornRatio siteSoftpornRatio or {@code null} for none
   */
  public ClassifierPornSiteData setSiteSoftpornRatio(java.lang.Float siteSoftpornRatio) {
    this.siteSoftpornRatio = siteSoftpornRatio;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<ClassifierPornSiteDataVersionedScore> getVersionedscore() {
    return versionedscore;
  }

  /**
   * @param versionedscore versionedscore or {@code null} for none
   */
  public ClassifierPornSiteData setVersionedscore(java.util.List<ClassifierPornSiteDataVersionedScore> versionedscore) {
    this.versionedscore = versionedscore;
    return this;
  }

  /**
   * The cubic mean aggregation of violence page scores in the site.
   * @return value or {@code null} for none
   */
  public java.lang.Float getViolenceScore() {
    return violenceScore;
  }

  /**
   * The cubic mean aggregation of violence page scores in the site.
   * @param violenceScore violenceScore or {@code null} for none
   */
  public ClassifierPornSiteData setViolenceScore(java.lang.Float violenceScore) {
    this.violenceScore = violenceScore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public ClassifierPornSiteViolenceStats getViolenceStats() {
    return violenceStats;
  }

  /**
   * @param violenceStats violenceStats or {@code null} for none
   */
  public ClassifierPornSiteData setViolenceStats(ClassifierPornSiteViolenceStats violenceStats) {
    this.violenceStats = violenceStats;
    return this;
  }

  @Override
  public ClassifierPornSiteData set(String fieldName, Object value) {
    return (ClassifierPornSiteData) super.set(fieldName, value);
  }

  @Override
  public ClassifierPornSiteData clone() {
    return (ClassifierPornSiteData) super.clone();
  }

}
