/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Describes restrictions on where the verdict applies.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AbuseiamVerdictRestriction extends com.google.api.client.json.GenericJson {

  /**
   * For a restriction to apply, all contexts must be satisfied. For example, if context[0] is
   * COUNTRY/'GERMANY' and context[1] is DESTINATION_STREAM/'gplus:SQUARE:knitting_discussion', then
   * the verdict applies only when the 'knitting discussion' square is viewed from inside Germany.
   * Please note that this is present for legacy reasons and users of this field would be migrated
   * to use the user_restriction field defined below.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AbuseiamVerdictRestrictionContext> context;

  /**
   * A boolean expression tree used to define the restrictions where the verdict applies. Please use
   * java/com/google/ccc/abuse/abuseiam/client/TakedownManager.java to evaluate this proto.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AbuseiamUserRestriction userRestriction;

  /**
   * For a restriction to apply, all contexts must be satisfied. For example, if context[0] is
   * COUNTRY/'GERMANY' and context[1] is DESTINATION_STREAM/'gplus:SQUARE:knitting_discussion', then
   * the verdict applies only when the 'knitting discussion' square is viewed from inside Germany.
   * Please note that this is present for legacy reasons and users of this field would be migrated
   * to use the user_restriction field defined below.
   * @return value or {@code null} for none
   */
  public java.util.List<AbuseiamVerdictRestrictionContext> getContext() {
    return context;
  }

  /**
   * For a restriction to apply, all contexts must be satisfied. For example, if context[0] is
   * COUNTRY/'GERMANY' and context[1] is DESTINATION_STREAM/'gplus:SQUARE:knitting_discussion', then
   * the verdict applies only when the 'knitting discussion' square is viewed from inside Germany.
   * Please note that this is present for legacy reasons and users of this field would be migrated
   * to use the user_restriction field defined below.
   * @param context context or {@code null} for none
   */
  public AbuseiamVerdictRestriction setContext(java.util.List<AbuseiamVerdictRestrictionContext> context) {
    this.context = context;
    return this;
  }

  /**
   * A boolean expression tree used to define the restrictions where the verdict applies. Please use
   * java/com/google/ccc/abuse/abuseiam/client/TakedownManager.java to evaluate this proto.
   * @return value or {@code null} for none
   */
  public AbuseiamUserRestriction getUserRestriction() {
    return userRestriction;
  }

  /**
   * A boolean expression tree used to define the restrictions where the verdict applies. Please use
   * java/com/google/ccc/abuse/abuseiam/client/TakedownManager.java to evaluate this proto.
   * @param userRestriction userRestriction or {@code null} for none
   */
  public AbuseiamVerdictRestriction setUserRestriction(AbuseiamUserRestriction userRestriction) {
    this.userRestriction = userRestriction;
    return this;
  }

  @Override
  public AbuseiamVerdictRestriction set(String fieldName, Object value) {
    return (AbuseiamVerdictRestriction) super.set(fieldName, value);
  }

  @Override
  public AbuseiamVerdictRestriction clone() {
    return (AbuseiamVerdictRestriction) super.clone();
  }

}
