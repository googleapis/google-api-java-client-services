/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.containeranalysis.v1alpha1.model;

/**
 * Provenance of a build. Contains all information needed to verify the full details about the build
 * from source to completion.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Container Analysis API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BuildProvenance extends com.google.api.client.json.GenericJson {

  /**
   * Special options applied to this build. This is a catch-all field where build providers can
   * enter any desired additional details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> buildOptions;

  /**
   * Version string of the builder at the time this build was executed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String builderVersion;

  /**
   * Output of the build.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Artifact> builtArtifacts;

  static {
    // hack to force ProGuard to consider Artifact used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Artifact.class);
  }

  /**
   * Commands requested by the build.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Command> commands;

  /**
   * Time at which the build was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * E-mail address of the user who initiated this build. Note that this was the user's e-mail
   * address at the time the build was initiated; this address may not represent the same end-user
   * for all time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String creator;

  /**
   * Time at which execution of the build was finished.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String finishTime;

  /**
   * Unique identifier of the build.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Google Cloud Storage bucket where logs were written.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String logsBucket;

  /**
   * ID of the project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * Details of the Source input to the build.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Source sourceProvenance;

  /**
   * Time at which execution of the build was started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Trigger identifier if the build was triggered automatically; empty if not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String triggerId;

  /**
   * Special options applied to this build. This is a catch-all field where build providers can
   * enter any desired additional details.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getBuildOptions() {
    return buildOptions;
  }

  /**
   * Special options applied to this build. This is a catch-all field where build providers can
   * enter any desired additional details.
   * @param buildOptions buildOptions or {@code null} for none
   */
  public BuildProvenance setBuildOptions(java.util.Map<String, java.lang.String> buildOptions) {
    this.buildOptions = buildOptions;
    return this;
  }

  /**
   * Version string of the builder at the time this build was executed.
   * @return value or {@code null} for none
   */
  public java.lang.String getBuilderVersion() {
    return builderVersion;
  }

  /**
   * Version string of the builder at the time this build was executed.
   * @param builderVersion builderVersion or {@code null} for none
   */
  public BuildProvenance setBuilderVersion(java.lang.String builderVersion) {
    this.builderVersion = builderVersion;
    return this;
  }

  /**
   * Output of the build.
   * @return value or {@code null} for none
   */
  public java.util.List<Artifact> getBuiltArtifacts() {
    return builtArtifacts;
  }

  /**
   * Output of the build.
   * @param builtArtifacts builtArtifacts or {@code null} for none
   */
  public BuildProvenance setBuiltArtifacts(java.util.List<Artifact> builtArtifacts) {
    this.builtArtifacts = builtArtifacts;
    return this;
  }

  /**
   * Commands requested by the build.
   * @return value or {@code null} for none
   */
  public java.util.List<Command> getCommands() {
    return commands;
  }

  /**
   * Commands requested by the build.
   * @param commands commands or {@code null} for none
   */
  public BuildProvenance setCommands(java.util.List<Command> commands) {
    this.commands = commands;
    return this;
  }

  /**
   * Time at which the build was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Time at which the build was created.
   * @param createTime createTime or {@code null} for none
   */
  public BuildProvenance setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * E-mail address of the user who initiated this build. Note that this was the user's e-mail
   * address at the time the build was initiated; this address may not represent the same end-user
   * for all time.
   * @return value or {@code null} for none
   */
  public java.lang.String getCreator() {
    return creator;
  }

  /**
   * E-mail address of the user who initiated this build. Note that this was the user's e-mail
   * address at the time the build was initiated; this address may not represent the same end-user
   * for all time.
   * @param creator creator or {@code null} for none
   */
  public BuildProvenance setCreator(java.lang.String creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Time at which execution of the build was finished.
   * @return value or {@code null} for none
   */
  public String getFinishTime() {
    return finishTime;
  }

  /**
   * Time at which execution of the build was finished.
   * @param finishTime finishTime or {@code null} for none
   */
  public BuildProvenance setFinishTime(String finishTime) {
    this.finishTime = finishTime;
    return this;
  }

  /**
   * Unique identifier of the build.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Unique identifier of the build.
   * @param id id or {@code null} for none
   */
  public BuildProvenance setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Google Cloud Storage bucket where logs were written.
   * @return value or {@code null} for none
   */
  public java.lang.String getLogsBucket() {
    return logsBucket;
  }

  /**
   * Google Cloud Storage bucket where logs were written.
   * @param logsBucket logsBucket or {@code null} for none
   */
  public BuildProvenance setLogsBucket(java.lang.String logsBucket) {
    this.logsBucket = logsBucket;
    return this;
  }

  /**
   * ID of the project.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * ID of the project.
   * @param projectId projectId or {@code null} for none
   */
  public BuildProvenance setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Details of the Source input to the build.
   * @return value or {@code null} for none
   */
  public Source getSourceProvenance() {
    return sourceProvenance;
  }

  /**
   * Details of the Source input to the build.
   * @param sourceProvenance sourceProvenance or {@code null} for none
   */
  public BuildProvenance setSourceProvenance(Source sourceProvenance) {
    this.sourceProvenance = sourceProvenance;
    return this;
  }

  /**
   * Time at which execution of the build was started.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Time at which execution of the build was started.
   * @param startTime startTime or {@code null} for none
   */
  public BuildProvenance setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Trigger identifier if the build was triggered automatically; empty if not.
   * @return value or {@code null} for none
   */
  public java.lang.String getTriggerId() {
    return triggerId;
  }

  /**
   * Trigger identifier if the build was triggered automatically; empty if not.
   * @param triggerId triggerId or {@code null} for none
   */
  public BuildProvenance setTriggerId(java.lang.String triggerId) {
    this.triggerId = triggerId;
    return this;
  }

  @Override
  public BuildProvenance set(String fieldName, Object value) {
    return (BuildProvenance) super.set(fieldName, value);
  }

  @Override
  public BuildProvenance clone() {
    return (BuildProvenance) super.clone();
  }

}
