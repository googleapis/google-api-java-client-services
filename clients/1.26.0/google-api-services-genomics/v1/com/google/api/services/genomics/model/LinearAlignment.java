/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * A linear alignment can be represented by one CIGAR string. Describes the mapped position and
 * local alignment of the read to the reference.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LinearAlignment extends com.google.api.client.json.GenericJson {

  /**
   * Represents the local alignment of this sequence (alignment matches, indels, etc) against the
   * reference.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CigarUnit> cigar;

  static {
    // hack to force ProGuard to consider CigarUnit used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(CigarUnit.class);
  }

  /**
   * The mapping quality of this alignment. Represents how likely the read maps to this position as
   * opposed to other locations.
   *
   * Specifically, this is -10 log10 Pr(mapping position is wrong), rounded to the nearest integer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer mappingQuality;

  /**
   * The position of this alignment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Position position;

  /**
   * Represents the local alignment of this sequence (alignment matches, indels, etc) against the
   * reference.
   * @return value or {@code null} for none
   */
  public java.util.List<CigarUnit> getCigar() {
    return cigar;
  }

  /**
   * Represents the local alignment of this sequence (alignment matches, indels, etc) against the
   * reference.
   * @param cigar cigar or {@code null} for none
   */
  public LinearAlignment setCigar(java.util.List<CigarUnit> cigar) {
    this.cigar = cigar;
    return this;
  }

  /**
   * The mapping quality of this alignment. Represents how likely the read maps to this position as
   * opposed to other locations.
   *
   * Specifically, this is -10 log10 Pr(mapping position is wrong), rounded to the nearest integer.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMappingQuality() {
    return mappingQuality;
  }

  /**
   * The mapping quality of this alignment. Represents how likely the read maps to this position as
   * opposed to other locations.
   *
   * Specifically, this is -10 log10 Pr(mapping position is wrong), rounded to the nearest integer.
   * @param mappingQuality mappingQuality or {@code null} for none
   */
  public LinearAlignment setMappingQuality(java.lang.Integer mappingQuality) {
    this.mappingQuality = mappingQuality;
    return this;
  }

  /**
   * The position of this alignment.
   * @return value or {@code null} for none
   */
  public Position getPosition() {
    return position;
  }

  /**
   * The position of this alignment.
   * @param position position or {@code null} for none
   */
  public LinearAlignment setPosition(Position position) {
    this.position = position;
    return this;
  }

  @Override
  public LinearAlignment set(String fieldName, Object value) {
    return (LinearAlignment) super.set(fieldName, value);
  }

  @Override
  public LinearAlignment clone() {
    return (LinearAlignment) super.clone();
  }

}
