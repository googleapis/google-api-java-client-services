/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.civicinfo.v2.model;

/**
 * Model definition for CivicinfoApiprotosV2RepresentativeInfoData.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Civic Information API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CivicinfoApiprotosV2RepresentativeInfoData extends com.google.api.client.json.GenericJson {

  /**
   * A map of political geographic divisions that contain the requested address, keyed by the unique
   * Open Civic Data identifier for this division.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, CivicinfoSchemaV2GeographicDivision> divisions;

  /**
   * Elected offices referenced by the divisions listed above. Will only be present if
   * includeOffices was true in the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CivicinfoSchemaV2Office> offices;

  /**
   * Officials holding the offices listed above. Will only be present if includeOffices was true in
   * the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CivicinfoSchemaV2Official> officials;

  /**
   * A map of political geographic divisions that contain the requested address, keyed by the unique
   * Open Civic Data identifier for this division.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, CivicinfoSchemaV2GeographicDivision> getDivisions() {
    return divisions;
  }

  /**
   * A map of political geographic divisions that contain the requested address, keyed by the unique
   * Open Civic Data identifier for this division.
   * @param divisions divisions or {@code null} for none
   */
  public CivicinfoApiprotosV2RepresentativeInfoData setDivisions(java.util.Map<String, CivicinfoSchemaV2GeographicDivision> divisions) {
    this.divisions = divisions;
    return this;
  }

  /**
   * Elected offices referenced by the divisions listed above. Will only be present if
   * includeOffices was true in the request.
   * @return value or {@code null} for none
   */
  public java.util.List<CivicinfoSchemaV2Office> getOffices() {
    return offices;
  }

  /**
   * Elected offices referenced by the divisions listed above. Will only be present if
   * includeOffices was true in the request.
   * @param offices offices or {@code null} for none
   */
  public CivicinfoApiprotosV2RepresentativeInfoData setOffices(java.util.List<CivicinfoSchemaV2Office> offices) {
    this.offices = offices;
    return this;
  }

  /**
   * Officials holding the offices listed above. Will only be present if includeOffices was true in
   * the request.
   * @return value or {@code null} for none
   */
  public java.util.List<CivicinfoSchemaV2Official> getOfficials() {
    return officials;
  }

  /**
   * Officials holding the offices listed above. Will only be present if includeOffices was true in
   * the request.
   * @param officials officials or {@code null} for none
   */
  public CivicinfoApiprotosV2RepresentativeInfoData setOfficials(java.util.List<CivicinfoSchemaV2Official> officials) {
    this.officials = officials;
    return this;
  }

  @Override
  public CivicinfoApiprotosV2RepresentativeInfoData set(String fieldName, Object value) {
    return (CivicinfoApiprotosV2RepresentativeInfoData) super.set(fieldName, value);
  }

  @Override
  public CivicinfoApiprotosV2RepresentativeInfoData clone() {
    return (CivicinfoApiprotosV2RepresentativeInfoData) super.clone();
  }

}
