/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.manufacturers.v1.model;

/**
 * Model definition for Nutrition.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Manufacturer Center API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Nutrition extends com.google.api.client.json.GenericJson {

  /**
   * Added sugars.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit addedSugars;

  /**
   * Added sugars daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double addedSugarsDailyPercentage;

  /**
   * Calcium.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit calcium;

  /**
   * Calcium daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double calciumDailyPercentage;

  /**
   * Cholesterol.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit cholesterol;

  /**
   * Cholesterol daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double cholesterolDailyPercentage;

  /**
   * Dietary fiber.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit dietaryFiber;

  /**
   * Dietary fiber daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double dietaryFiberDailyPercentage;

  /**
   * Mandatory Nutrition Facts. Energy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit energy;

  /**
   * Energy from fat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit energyFromFat;

  /**
   * Folate daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double folateDailyPercentage;

  /**
   * Folate folic acid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit folateFolicAcid;

  /**
   * Folate mcg DFE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double folateMcgDfe;

  /**
   * Iron.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit iron;

  /**
   * Iron daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double ironDailyPercentage;

  /**
   * Monounsaturated fat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit monounsaturatedFat;

  /**
   * Nutrition fact measure.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nutritionFactMeasure;

  /**
   * Polyols.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit polyols;

  /**
   * Polyunsaturated fat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit polyunsaturatedFat;

  /**
   * Potassium.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit potassium;

  /**
   * Potassium daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double potassiumDailyPercentage;

  /**
   * Prepared size description.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String preparedSizeDescription;

  /**
   * Protein.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit protein;

  /**
   * Protein daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double proteinDailyPercentage;

  /**
   * Saturated fat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit saturatedFat;

  /**
   * Saturated fat daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double saturatedFatDailyPercentage;

  /**
   * Food Serving Size. Serving size description.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String servingSizeDescription;

  /**
   * Serving size measure.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit servingSizeMeasure;

  /**
   * Servings per container.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String servingsPerContainer;

  /**
   * Sodium.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit sodium;

  /**
   * Sodium daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double sodiumDailyPercentage;

  /**
   * Starch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit starch;

  /**
   * Total carbohydrate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit totalCarbohydrate;

  /**
   * Total carbohydrate daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double totalCarbohydrateDailyPercentage;

  /**
   * Total fat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit totalFat;

  /**
   * Total fat daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double totalFatDailyPercentage;

  /**
   * Total sugars.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit totalSugars;

  /**
   * Total sugars daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double totalSugarsDailyPercentage;

  /**
   * Trans fat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit transFat;

  /**
   * Trans fat daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double transFatDailyPercentage;

  /**
   * Vitamin D.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FloatUnit vitaminD;

  /**
   * Vitamin D daily percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double vitaminDDailyPercentage;

  /**
   * Voluntary nutrition fact.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VoluntaryNutritionFact> voluntaryNutritionFact;

  /**
   * Added sugars.
   * @return value or {@code null} for none
   */
  public FloatUnit getAddedSugars() {
    return addedSugars;
  }

  /**
   * Added sugars.
   * @param addedSugars addedSugars or {@code null} for none
   */
  public Nutrition setAddedSugars(FloatUnit addedSugars) {
    this.addedSugars = addedSugars;
    return this;
  }

  /**
   * Added sugars daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAddedSugarsDailyPercentage() {
    return addedSugarsDailyPercentage;
  }

  /**
   * Added sugars daily percentage.
   * @param addedSugarsDailyPercentage addedSugarsDailyPercentage or {@code null} for none
   */
  public Nutrition setAddedSugarsDailyPercentage(java.lang.Double addedSugarsDailyPercentage) {
    this.addedSugarsDailyPercentage = addedSugarsDailyPercentage;
    return this;
  }

  /**
   * Calcium.
   * @return value or {@code null} for none
   */
  public FloatUnit getCalcium() {
    return calcium;
  }

  /**
   * Calcium.
   * @param calcium calcium or {@code null} for none
   */
  public Nutrition setCalcium(FloatUnit calcium) {
    this.calcium = calcium;
    return this;
  }

  /**
   * Calcium daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getCalciumDailyPercentage() {
    return calciumDailyPercentage;
  }

  /**
   * Calcium daily percentage.
   * @param calciumDailyPercentage calciumDailyPercentage or {@code null} for none
   */
  public Nutrition setCalciumDailyPercentage(java.lang.Double calciumDailyPercentage) {
    this.calciumDailyPercentage = calciumDailyPercentage;
    return this;
  }

  /**
   * Cholesterol.
   * @return value or {@code null} for none
   */
  public FloatUnit getCholesterol() {
    return cholesterol;
  }

  /**
   * Cholesterol.
   * @param cholesterol cholesterol or {@code null} for none
   */
  public Nutrition setCholesterol(FloatUnit cholesterol) {
    this.cholesterol = cholesterol;
    return this;
  }

  /**
   * Cholesterol daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getCholesterolDailyPercentage() {
    return cholesterolDailyPercentage;
  }

  /**
   * Cholesterol daily percentage.
   * @param cholesterolDailyPercentage cholesterolDailyPercentage or {@code null} for none
   */
  public Nutrition setCholesterolDailyPercentage(java.lang.Double cholesterolDailyPercentage) {
    this.cholesterolDailyPercentage = cholesterolDailyPercentage;
    return this;
  }

  /**
   * Dietary fiber.
   * @return value or {@code null} for none
   */
  public FloatUnit getDietaryFiber() {
    return dietaryFiber;
  }

  /**
   * Dietary fiber.
   * @param dietaryFiber dietaryFiber or {@code null} for none
   */
  public Nutrition setDietaryFiber(FloatUnit dietaryFiber) {
    this.dietaryFiber = dietaryFiber;
    return this;
  }

  /**
   * Dietary fiber daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getDietaryFiberDailyPercentage() {
    return dietaryFiberDailyPercentage;
  }

  /**
   * Dietary fiber daily percentage.
   * @param dietaryFiberDailyPercentage dietaryFiberDailyPercentage or {@code null} for none
   */
  public Nutrition setDietaryFiberDailyPercentage(java.lang.Double dietaryFiberDailyPercentage) {
    this.dietaryFiberDailyPercentage = dietaryFiberDailyPercentage;
    return this;
  }

  /**
   * Mandatory Nutrition Facts. Energy.
   * @return value or {@code null} for none
   */
  public FloatUnit getEnergy() {
    return energy;
  }

  /**
   * Mandatory Nutrition Facts. Energy.
   * @param energy energy or {@code null} for none
   */
  public Nutrition setEnergy(FloatUnit energy) {
    this.energy = energy;
    return this;
  }

  /**
   * Energy from fat.
   * @return value or {@code null} for none
   */
  public FloatUnit getEnergyFromFat() {
    return energyFromFat;
  }

  /**
   * Energy from fat.
   * @param energyFromFat energyFromFat or {@code null} for none
   */
  public Nutrition setEnergyFromFat(FloatUnit energyFromFat) {
    this.energyFromFat = energyFromFat;
    return this;
  }

  /**
   * Folate daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getFolateDailyPercentage() {
    return folateDailyPercentage;
  }

  /**
   * Folate daily percentage.
   * @param folateDailyPercentage folateDailyPercentage or {@code null} for none
   */
  public Nutrition setFolateDailyPercentage(java.lang.Double folateDailyPercentage) {
    this.folateDailyPercentage = folateDailyPercentage;
    return this;
  }

  /**
   * Folate folic acid.
   * @return value or {@code null} for none
   */
  public FloatUnit getFolateFolicAcid() {
    return folateFolicAcid;
  }

  /**
   * Folate folic acid.
   * @param folateFolicAcid folateFolicAcid or {@code null} for none
   */
  public Nutrition setFolateFolicAcid(FloatUnit folateFolicAcid) {
    this.folateFolicAcid = folateFolicAcid;
    return this;
  }

  /**
   * Folate mcg DFE.
   * @return value or {@code null} for none
   */
  public java.lang.Double getFolateMcgDfe() {
    return folateMcgDfe;
  }

  /**
   * Folate mcg DFE.
   * @param folateMcgDfe folateMcgDfe or {@code null} for none
   */
  public Nutrition setFolateMcgDfe(java.lang.Double folateMcgDfe) {
    this.folateMcgDfe = folateMcgDfe;
    return this;
  }

  /**
   * Iron.
   * @return value or {@code null} for none
   */
  public FloatUnit getIron() {
    return iron;
  }

  /**
   * Iron.
   * @param iron iron or {@code null} for none
   */
  public Nutrition setIron(FloatUnit iron) {
    this.iron = iron;
    return this;
  }

  /**
   * Iron daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getIronDailyPercentage() {
    return ironDailyPercentage;
  }

  /**
   * Iron daily percentage.
   * @param ironDailyPercentage ironDailyPercentage or {@code null} for none
   */
  public Nutrition setIronDailyPercentage(java.lang.Double ironDailyPercentage) {
    this.ironDailyPercentage = ironDailyPercentage;
    return this;
  }

  /**
   * Monounsaturated fat.
   * @return value or {@code null} for none
   */
  public FloatUnit getMonounsaturatedFat() {
    return monounsaturatedFat;
  }

  /**
   * Monounsaturated fat.
   * @param monounsaturatedFat monounsaturatedFat or {@code null} for none
   */
  public Nutrition setMonounsaturatedFat(FloatUnit monounsaturatedFat) {
    this.monounsaturatedFat = monounsaturatedFat;
    return this;
  }

  /**
   * Nutrition fact measure.
   * @return value or {@code null} for none
   */
  public java.lang.String getNutritionFactMeasure() {
    return nutritionFactMeasure;
  }

  /**
   * Nutrition fact measure.
   * @param nutritionFactMeasure nutritionFactMeasure or {@code null} for none
   */
  public Nutrition setNutritionFactMeasure(java.lang.String nutritionFactMeasure) {
    this.nutritionFactMeasure = nutritionFactMeasure;
    return this;
  }

  /**
   * Polyols.
   * @return value or {@code null} for none
   */
  public FloatUnit getPolyols() {
    return polyols;
  }

  /**
   * Polyols.
   * @param polyols polyols or {@code null} for none
   */
  public Nutrition setPolyols(FloatUnit polyols) {
    this.polyols = polyols;
    return this;
  }

  /**
   * Polyunsaturated fat.
   * @return value or {@code null} for none
   */
  public FloatUnit getPolyunsaturatedFat() {
    return polyunsaturatedFat;
  }

  /**
   * Polyunsaturated fat.
   * @param polyunsaturatedFat polyunsaturatedFat or {@code null} for none
   */
  public Nutrition setPolyunsaturatedFat(FloatUnit polyunsaturatedFat) {
    this.polyunsaturatedFat = polyunsaturatedFat;
    return this;
  }

  /**
   * Potassium.
   * @return value or {@code null} for none
   */
  public FloatUnit getPotassium() {
    return potassium;
  }

  /**
   * Potassium.
   * @param potassium potassium or {@code null} for none
   */
  public Nutrition setPotassium(FloatUnit potassium) {
    this.potassium = potassium;
    return this;
  }

  /**
   * Potassium daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getPotassiumDailyPercentage() {
    return potassiumDailyPercentage;
  }

  /**
   * Potassium daily percentage.
   * @param potassiumDailyPercentage potassiumDailyPercentage or {@code null} for none
   */
  public Nutrition setPotassiumDailyPercentage(java.lang.Double potassiumDailyPercentage) {
    this.potassiumDailyPercentage = potassiumDailyPercentage;
    return this;
  }

  /**
   * Prepared size description.
   * @return value or {@code null} for none
   */
  public java.lang.String getPreparedSizeDescription() {
    return preparedSizeDescription;
  }

  /**
   * Prepared size description.
   * @param preparedSizeDescription preparedSizeDescription or {@code null} for none
   */
  public Nutrition setPreparedSizeDescription(java.lang.String preparedSizeDescription) {
    this.preparedSizeDescription = preparedSizeDescription;
    return this;
  }

  /**
   * Protein.
   * @return value or {@code null} for none
   */
  public FloatUnit getProtein() {
    return protein;
  }

  /**
   * Protein.
   * @param protein protein or {@code null} for none
   */
  public Nutrition setProtein(FloatUnit protein) {
    this.protein = protein;
    return this;
  }

  /**
   * Protein daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getProteinDailyPercentage() {
    return proteinDailyPercentage;
  }

  /**
   * Protein daily percentage.
   * @param proteinDailyPercentage proteinDailyPercentage or {@code null} for none
   */
  public Nutrition setProteinDailyPercentage(java.lang.Double proteinDailyPercentage) {
    this.proteinDailyPercentage = proteinDailyPercentage;
    return this;
  }

  /**
   * Saturated fat.
   * @return value or {@code null} for none
   */
  public FloatUnit getSaturatedFat() {
    return saturatedFat;
  }

  /**
   * Saturated fat.
   * @param saturatedFat saturatedFat or {@code null} for none
   */
  public Nutrition setSaturatedFat(FloatUnit saturatedFat) {
    this.saturatedFat = saturatedFat;
    return this;
  }

  /**
   * Saturated fat daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getSaturatedFatDailyPercentage() {
    return saturatedFatDailyPercentage;
  }

  /**
   * Saturated fat daily percentage.
   * @param saturatedFatDailyPercentage saturatedFatDailyPercentage or {@code null} for none
   */
  public Nutrition setSaturatedFatDailyPercentage(java.lang.Double saturatedFatDailyPercentage) {
    this.saturatedFatDailyPercentage = saturatedFatDailyPercentage;
    return this;
  }

  /**
   * Food Serving Size. Serving size description.
   * @return value or {@code null} for none
   */
  public java.lang.String getServingSizeDescription() {
    return servingSizeDescription;
  }

  /**
   * Food Serving Size. Serving size description.
   * @param servingSizeDescription servingSizeDescription or {@code null} for none
   */
  public Nutrition setServingSizeDescription(java.lang.String servingSizeDescription) {
    this.servingSizeDescription = servingSizeDescription;
    return this;
  }

  /**
   * Serving size measure.
   * @return value or {@code null} for none
   */
  public FloatUnit getServingSizeMeasure() {
    return servingSizeMeasure;
  }

  /**
   * Serving size measure.
   * @param servingSizeMeasure servingSizeMeasure or {@code null} for none
   */
  public Nutrition setServingSizeMeasure(FloatUnit servingSizeMeasure) {
    this.servingSizeMeasure = servingSizeMeasure;
    return this;
  }

  /**
   * Servings per container.
   * @return value or {@code null} for none
   */
  public java.lang.String getServingsPerContainer() {
    return servingsPerContainer;
  }

  /**
   * Servings per container.
   * @param servingsPerContainer servingsPerContainer or {@code null} for none
   */
  public Nutrition setServingsPerContainer(java.lang.String servingsPerContainer) {
    this.servingsPerContainer = servingsPerContainer;
    return this;
  }

  /**
   * Sodium.
   * @return value or {@code null} for none
   */
  public FloatUnit getSodium() {
    return sodium;
  }

  /**
   * Sodium.
   * @param sodium sodium or {@code null} for none
   */
  public Nutrition setSodium(FloatUnit sodium) {
    this.sodium = sodium;
    return this;
  }

  /**
   * Sodium daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getSodiumDailyPercentage() {
    return sodiumDailyPercentage;
  }

  /**
   * Sodium daily percentage.
   * @param sodiumDailyPercentage sodiumDailyPercentage or {@code null} for none
   */
  public Nutrition setSodiumDailyPercentage(java.lang.Double sodiumDailyPercentage) {
    this.sodiumDailyPercentage = sodiumDailyPercentage;
    return this;
  }

  /**
   * Starch.
   * @return value or {@code null} for none
   */
  public FloatUnit getStarch() {
    return starch;
  }

  /**
   * Starch.
   * @param starch starch or {@code null} for none
   */
  public Nutrition setStarch(FloatUnit starch) {
    this.starch = starch;
    return this;
  }

  /**
   * Total carbohydrate.
   * @return value or {@code null} for none
   */
  public FloatUnit getTotalCarbohydrate() {
    return totalCarbohydrate;
  }

  /**
   * Total carbohydrate.
   * @param totalCarbohydrate totalCarbohydrate or {@code null} for none
   */
  public Nutrition setTotalCarbohydrate(FloatUnit totalCarbohydrate) {
    this.totalCarbohydrate = totalCarbohydrate;
    return this;
  }

  /**
   * Total carbohydrate daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getTotalCarbohydrateDailyPercentage() {
    return totalCarbohydrateDailyPercentage;
  }

  /**
   * Total carbohydrate daily percentage.
   * @param totalCarbohydrateDailyPercentage totalCarbohydrateDailyPercentage or {@code null} for none
   */
  public Nutrition setTotalCarbohydrateDailyPercentage(java.lang.Double totalCarbohydrateDailyPercentage) {
    this.totalCarbohydrateDailyPercentage = totalCarbohydrateDailyPercentage;
    return this;
  }

  /**
   * Total fat.
   * @return value or {@code null} for none
   */
  public FloatUnit getTotalFat() {
    return totalFat;
  }

  /**
   * Total fat.
   * @param totalFat totalFat or {@code null} for none
   */
  public Nutrition setTotalFat(FloatUnit totalFat) {
    this.totalFat = totalFat;
    return this;
  }

  /**
   * Total fat daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getTotalFatDailyPercentage() {
    return totalFatDailyPercentage;
  }

  /**
   * Total fat daily percentage.
   * @param totalFatDailyPercentage totalFatDailyPercentage or {@code null} for none
   */
  public Nutrition setTotalFatDailyPercentage(java.lang.Double totalFatDailyPercentage) {
    this.totalFatDailyPercentage = totalFatDailyPercentage;
    return this;
  }

  /**
   * Total sugars.
   * @return value or {@code null} for none
   */
  public FloatUnit getTotalSugars() {
    return totalSugars;
  }

  /**
   * Total sugars.
   * @param totalSugars totalSugars or {@code null} for none
   */
  public Nutrition setTotalSugars(FloatUnit totalSugars) {
    this.totalSugars = totalSugars;
    return this;
  }

  /**
   * Total sugars daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getTotalSugarsDailyPercentage() {
    return totalSugarsDailyPercentage;
  }

  /**
   * Total sugars daily percentage.
   * @param totalSugarsDailyPercentage totalSugarsDailyPercentage or {@code null} for none
   */
  public Nutrition setTotalSugarsDailyPercentage(java.lang.Double totalSugarsDailyPercentage) {
    this.totalSugarsDailyPercentage = totalSugarsDailyPercentage;
    return this;
  }

  /**
   * Trans fat.
   * @return value or {@code null} for none
   */
  public FloatUnit getTransFat() {
    return transFat;
  }

  /**
   * Trans fat.
   * @param transFat transFat or {@code null} for none
   */
  public Nutrition setTransFat(FloatUnit transFat) {
    this.transFat = transFat;
    return this;
  }

  /**
   * Trans fat daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getTransFatDailyPercentage() {
    return transFatDailyPercentage;
  }

  /**
   * Trans fat daily percentage.
   * @param transFatDailyPercentage transFatDailyPercentage or {@code null} for none
   */
  public Nutrition setTransFatDailyPercentage(java.lang.Double transFatDailyPercentage) {
    this.transFatDailyPercentage = transFatDailyPercentage;
    return this;
  }

  /**
   * Vitamin D.
   * @return value or {@code null} for none
   */
  public FloatUnit getVitaminD() {
    return vitaminD;
  }

  /**
   * Vitamin D.
   * @param vitaminD vitaminD or {@code null} for none
   */
  public Nutrition setVitaminD(FloatUnit vitaminD) {
    this.vitaminD = vitaminD;
    return this;
  }

  /**
   * Vitamin D daily percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getVitaminDDailyPercentage() {
    return vitaminDDailyPercentage;
  }

  /**
   * Vitamin D daily percentage.
   * @param vitaminDDailyPercentage vitaminDDailyPercentage or {@code null} for none
   */
  public Nutrition setVitaminDDailyPercentage(java.lang.Double vitaminDDailyPercentage) {
    this.vitaminDDailyPercentage = vitaminDDailyPercentage;
    return this;
  }

  /**
   * Voluntary nutrition fact.
   * @return value or {@code null} for none
   */
  public java.util.List<VoluntaryNutritionFact> getVoluntaryNutritionFact() {
    return voluntaryNutritionFact;
  }

  /**
   * Voluntary nutrition fact.
   * @param voluntaryNutritionFact voluntaryNutritionFact or {@code null} for none
   */
  public Nutrition setVoluntaryNutritionFact(java.util.List<VoluntaryNutritionFact> voluntaryNutritionFact) {
    this.voluntaryNutritionFact = voluntaryNutritionFact;
    return this;
  }

  @Override
  public Nutrition set(String fieldName, Object value) {
    return (Nutrition) super.set(fieldName, value);
  }

  @Override
  public Nutrition clone() {
    return (Nutrition) super.clone();
  }

}
