/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Information of an extension installed on a Chrome browser profile.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementVersionsV1ReportingDataExtensionData extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Description of the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. ID of the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String extensionId;

  /**
   * Output only. Type of the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String extensionType;

  /**
   * Output only. The URL of the homepage of the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String homepageUri;

  /**
   * Output only. Installation type of the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String installationType;

  /**
   * Output only. Represents whether the user disabled the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isDisabled;

  /**
   * Output only. Represents whether the extension is from the webstore.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isWebstoreExtension;

  /**
   * Output only. Manifest version of the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer manifestVersion;

  /**
   * Output only. Name of the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Permissions requested by the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> permissions;

  /**
   * Output only. Version of the extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Output only. Description of the extension.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Output only. Description of the extension.
   * @param description description or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. ID of the extension.
   * @return value or {@code null} for none
   */
  public java.lang.String getExtensionId() {
    return extensionId;
  }

  /**
   * Output only. ID of the extension.
   * @param extensionId extensionId or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setExtensionId(java.lang.String extensionId) {
    this.extensionId = extensionId;
    return this;
  }

  /**
   * Output only. Type of the extension.
   * @return value or {@code null} for none
   */
  public java.lang.String getExtensionType() {
    return extensionType;
  }

  /**
   * Output only. Type of the extension.
   * @param extensionType extensionType or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setExtensionType(java.lang.String extensionType) {
    this.extensionType = extensionType;
    return this;
  }

  /**
   * Output only. The URL of the homepage of the extension.
   * @return value or {@code null} for none
   */
  public java.lang.String getHomepageUri() {
    return homepageUri;
  }

  /**
   * Output only. The URL of the homepage of the extension.
   * @param homepageUri homepageUri or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setHomepageUri(java.lang.String homepageUri) {
    this.homepageUri = homepageUri;
    return this;
  }

  /**
   * Output only. Installation type of the extension.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstallationType() {
    return installationType;
  }

  /**
   * Output only. Installation type of the extension.
   * @param installationType installationType or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setInstallationType(java.lang.String installationType) {
    this.installationType = installationType;
    return this;
  }

  /**
   * Output only. Represents whether the user disabled the extension.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsDisabled() {
    return isDisabled;
  }

  /**
   * Output only. Represents whether the user disabled the extension.
   * @param isDisabled isDisabled or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setIsDisabled(java.lang.Boolean isDisabled) {
    this.isDisabled = isDisabled;
    return this;
  }

  /**
   * Output only. Represents whether the extension is from the webstore.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsWebstoreExtension() {
    return isWebstoreExtension;
  }

  /**
   * Output only. Represents whether the extension is from the webstore.
   * @param isWebstoreExtension isWebstoreExtension or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setIsWebstoreExtension(java.lang.Boolean isWebstoreExtension) {
    this.isWebstoreExtension = isWebstoreExtension;
    return this;
  }

  /**
   * Output only. Manifest version of the extension.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getManifestVersion() {
    return manifestVersion;
  }

  /**
   * Output only. Manifest version of the extension.
   * @param manifestVersion manifestVersion or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setManifestVersion(java.lang.Integer manifestVersion) {
    this.manifestVersion = manifestVersion;
    return this;
  }

  /**
   * Output only. Name of the extension.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the extension.
   * @param name name or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Permissions requested by the extension.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPermissions() {
    return permissions;
  }

  /**
   * Output only. Permissions requested by the extension.
   * @param permissions permissions or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setPermissions(java.util.List<java.lang.String> permissions) {
    this.permissions = permissions;
    return this;
  }

  /**
   * Output only. Version of the extension.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Output only. Version of the extension.
   * @param version version or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData set(String fieldName, Object value) {
    return (GoogleChromeManagementVersionsV1ReportingDataExtensionData) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementVersionsV1ReportingDataExtensionData clone() {
    return (GoogleChromeManagementVersionsV1ReportingDataExtensionData) super.clone();
  }

}
