/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudtasks.v2beta2.model;

/**
 * Retry config.
 *
 * These settings determine how a failed task attempt is retried.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Tasks API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RetryConfig extends com.google.api.client.json.GenericJson {

  /**
   * The maximum number of attempts for a task.
   *
   * Cloud Tasks will attempt the task `max_attempts` times (that is, if the first attempt fails,
   * then there will be `max_attempts - 1` retries).  Must be > 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxAttempts;

  /**
   * A task will be scheduled for retry between min_backoff and max_backoff duration after it fails,
   * if the queue's RetryConfig specifies that the task should be retried.
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * `max_backoff` will be truncated to the nearest second.
   *
   * This field has the same meaning as [max_backoff_seconds in queue.yaml/xml](https://cloud.google
   * .com/appengine/docs/standard/python/config/queueref#retry_parameters).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String maxBackoff;

  /**
   * The time between retries will double `max_doublings` times.
   *
   * A task's retry interval starts at min_backoff, then doubles `max_doublings` times, then
   * increases linearly, and finally retries retries at intervals of max_backoff up to max_attempts
   * times.
   *
   * For example, if min_backoff is 10s, max_backoff is 300s, and `max_doublings` is 3, then the a
   * task will first be retried in 10s. The retry interval will double three times, and then
   * increase linearly by 2^3 * 10s.  Finally, the task will retry at intervals of max_backoff until
   * the task has been attempted max_attempts times. Thus, the requests will retry at 10s, 20s, 40s,
   * 80s, 160s, 240s, 300s, 300s, ....
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * This field has the same meaning as [max_doublings in queue.yaml/xml](https://cloud.google.com/a
   * ppengine/docs/standard/python/config/queueref#retry_parameters).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxDoublings;

  /**
   * If positive, `max_retry_duration` specifies the time limit for retrying a failed task, measured
   * from when the task was first attempted. Once `max_retry_duration` time has passed *and* the
   * task has been attempted max_attempts times, no further attempts will be made and the task will
   * be deleted.
   *
   * If zero, then the task age is unlimited.
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * `max_retry_duration` will be truncated to the nearest second.
   *
   * This field has the same meaning as [task_age_limit in queue.yaml/xml](https://cloud.google.com/
   * appengine/docs/standard/python/config/queueref#retry_parameters).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String maxRetryDuration;

  /**
   * A task will be scheduled for retry between min_backoff and max_backoff duration after it fails,
   * if the queue's RetryConfig specifies that the task should be retried.
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * `min_backoff` will be truncated to the nearest second.
   *
   * This field has the same meaning as [min_backoff_seconds in queue.yaml/xml](https://cloud.google
   * .com/appengine/docs/standard/python/config/queueref#retry_parameters).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String minBackoff;

  /**
   * If true, then the number of attempts is unlimited.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean unlimitedAttempts;

  /**
   * The maximum number of attempts for a task.
   *
   * Cloud Tasks will attempt the task `max_attempts` times (that is, if the first attempt fails,
   * then there will be `max_attempts - 1` retries).  Must be > 0.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxAttempts() {
    return maxAttempts;
  }

  /**
   * The maximum number of attempts for a task.
   *
   * Cloud Tasks will attempt the task `max_attempts` times (that is, if the first attempt fails,
   * then there will be `max_attempts - 1` retries).  Must be > 0.
   * @param maxAttempts maxAttempts or {@code null} for none
   */
  public RetryConfig setMaxAttempts(java.lang.Integer maxAttempts) {
    this.maxAttempts = maxAttempts;
    return this;
  }

  /**
   * A task will be scheduled for retry between min_backoff and max_backoff duration after it fails,
   * if the queue's RetryConfig specifies that the task should be retried.
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * `max_backoff` will be truncated to the nearest second.
   *
   * This field has the same meaning as [max_backoff_seconds in queue.yaml/xml](https://cloud.google
   * .com/appengine/docs/standard/python/config/queueref#retry_parameters).
   * @return value or {@code null} for none
   */
  public String getMaxBackoff() {
    return maxBackoff;
  }

  /**
   * A task will be scheduled for retry between min_backoff and max_backoff duration after it fails,
   * if the queue's RetryConfig specifies that the task should be retried.
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * `max_backoff` will be truncated to the nearest second.
   *
   * This field has the same meaning as [max_backoff_seconds in queue.yaml/xml](https://cloud.google
   * .com/appengine/docs/standard/python/config/queueref#retry_parameters).
   * @param maxBackoff maxBackoff or {@code null} for none
   */
  public RetryConfig setMaxBackoff(String maxBackoff) {
    this.maxBackoff = maxBackoff;
    return this;
  }

  /**
   * The time between retries will double `max_doublings` times.
   *
   * A task's retry interval starts at min_backoff, then doubles `max_doublings` times, then
   * increases linearly, and finally retries retries at intervals of max_backoff up to max_attempts
   * times.
   *
   * For example, if min_backoff is 10s, max_backoff is 300s, and `max_doublings` is 3, then the a
   * task will first be retried in 10s. The retry interval will double three times, and then
   * increase linearly by 2^3 * 10s.  Finally, the task will retry at intervals of max_backoff until
   * the task has been attempted max_attempts times. Thus, the requests will retry at 10s, 20s, 40s,
   * 80s, 160s, 240s, 300s, 300s, ....
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * This field has the same meaning as [max_doublings in queue.yaml/xml](https://cloud.google.com/a
   * ppengine/docs/standard/python/config/queueref#retry_parameters).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxDoublings() {
    return maxDoublings;
  }

  /**
   * The time between retries will double `max_doublings` times.
   *
   * A task's retry interval starts at min_backoff, then doubles `max_doublings` times, then
   * increases linearly, and finally retries retries at intervals of max_backoff up to max_attempts
   * times.
   *
   * For example, if min_backoff is 10s, max_backoff is 300s, and `max_doublings` is 3, then the a
   * task will first be retried in 10s. The retry interval will double three times, and then
   * increase linearly by 2^3 * 10s.  Finally, the task will retry at intervals of max_backoff until
   * the task has been attempted max_attempts times. Thus, the requests will retry at 10s, 20s, 40s,
   * 80s, 160s, 240s, 300s, 300s, ....
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * This field has the same meaning as [max_doublings in queue.yaml/xml](https://cloud.google.com/a
   * ppengine/docs/standard/python/config/queueref#retry_parameters).
   * @param maxDoublings maxDoublings or {@code null} for none
   */
  public RetryConfig setMaxDoublings(java.lang.Integer maxDoublings) {
    this.maxDoublings = maxDoublings;
    return this;
  }

  /**
   * If positive, `max_retry_duration` specifies the time limit for retrying a failed task, measured
   * from when the task was first attempted. Once `max_retry_duration` time has passed *and* the
   * task has been attempted max_attempts times, no further attempts will be made and the task will
   * be deleted.
   *
   * If zero, then the task age is unlimited.
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * `max_retry_duration` will be truncated to the nearest second.
   *
   * This field has the same meaning as [task_age_limit in queue.yaml/xml](https://cloud.google.com/
   * appengine/docs/standard/python/config/queueref#retry_parameters).
   * @return value or {@code null} for none
   */
  public String getMaxRetryDuration() {
    return maxRetryDuration;
  }

  /**
   * If positive, `max_retry_duration` specifies the time limit for retrying a failed task, measured
   * from when the task was first attempted. Once `max_retry_duration` time has passed *and* the
   * task has been attempted max_attempts times, no further attempts will be made and the task will
   * be deleted.
   *
   * If zero, then the task age is unlimited.
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * `max_retry_duration` will be truncated to the nearest second.
   *
   * This field has the same meaning as [task_age_limit in queue.yaml/xml](https://cloud.google.com/
   * appengine/docs/standard/python/config/queueref#retry_parameters).
   * @param maxRetryDuration maxRetryDuration or {@code null} for none
   */
  public RetryConfig setMaxRetryDuration(String maxRetryDuration) {
    this.maxRetryDuration = maxRetryDuration;
    return this;
  }

  /**
   * A task will be scheduled for retry between min_backoff and max_backoff duration after it fails,
   * if the queue's RetryConfig specifies that the task should be retried.
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * `min_backoff` will be truncated to the nearest second.
   *
   * This field has the same meaning as [min_backoff_seconds in queue.yaml/xml](https://cloud.google
   * .com/appengine/docs/standard/python/config/queueref#retry_parameters).
   * @return value or {@code null} for none
   */
  public String getMinBackoff() {
    return minBackoff;
  }

  /**
   * A task will be scheduled for retry between min_backoff and max_backoff duration after it fails,
   * if the queue's RetryConfig specifies that the task should be retried.
   *
   * If unspecified when the queue is created, Cloud Tasks will pick the default.
   *
   * This field is output only for pull queues.
   *
   * `min_backoff` will be truncated to the nearest second.
   *
   * This field has the same meaning as [min_backoff_seconds in queue.yaml/xml](https://cloud.google
   * .com/appengine/docs/standard/python/config/queueref#retry_parameters).
   * @param minBackoff minBackoff or {@code null} for none
   */
  public RetryConfig setMinBackoff(String minBackoff) {
    this.minBackoff = minBackoff;
    return this;
  }

  /**
   * If true, then the number of attempts is unlimited.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUnlimitedAttempts() {
    return unlimitedAttempts;
  }

  /**
   * If true, then the number of attempts is unlimited.
   * @param unlimitedAttempts unlimitedAttempts or {@code null} for none
   */
  public RetryConfig setUnlimitedAttempts(java.lang.Boolean unlimitedAttempts) {
    this.unlimitedAttempts = unlimitedAttempts;
    return this;
  }

  @Override
  public RetryConfig set(String fieldName, Object value) {
    return (RetryConfig) super.set(fieldName, value);
  }

  @Override
  public RetryConfig clone() {
    return (RetryConfig) super.clone();
  }

}
