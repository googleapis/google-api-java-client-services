/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudasset.v1.model;

/**
 * A deny detail that explains which IAM deny rule denies the denied_access_tuple.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Asset API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAssetV1DeniedAccessDenyDetail extends com.google.api.client.json.GenericJson {

  /**
   * The denied accesses. If this deny_rule fully denies the denied_access_tuple, this field will be
   * same as AccessTuple.access. Otherwise, this field can contain AccessTuple.access and its
   * descendant accesses, such as a subset of IAM permissions contained in an IAM role.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAssetV1DeniedAccessAccess> accesses;

  static {
    // hack to force ProGuard to consider GoogleCloudAssetV1DeniedAccessAccess used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudAssetV1DeniedAccessAccess.class);
  }

  /**
   * A deny rule in an IAM deny policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleIamV2DenyRule denyRule;

  /**
   * Whether the deny_rule fully denies all access granted by the denied_access_tuple. `True` means
   * the deny rule fully blocks the access tuple. `False` means the deny rule partially blocks the
   * access tuple."
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean fullyDenied;

  /**
   * If this deny_rule fully denies the denied_access_tuple, this field will be same as
   * AccessTuple.identity. Otherwise, this field can contain AccessTuple.identity and its descendant
   * identities, such as a subset of users in a group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAssetV1DeniedAccessIdentity> identities;

  /**
   * The resources that the identities are denied access to. If this deny_rule fully denies the
   * denied_access_tuple, this field will be same as AccessTuple.resource. Otherwise, this field can
   * contain AccessTuple.resource and its descendant resources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAssetV1DeniedAccessResource> resources;

  /**
   * The denied accesses. If this deny_rule fully denies the denied_access_tuple, this field will be
   * same as AccessTuple.access. Otherwise, this field can contain AccessTuple.access and its
   * descendant accesses, such as a subset of IAM permissions contained in an IAM role.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAssetV1DeniedAccessAccess> getAccesses() {
    return accesses;
  }

  /**
   * The denied accesses. If this deny_rule fully denies the denied_access_tuple, this field will be
   * same as AccessTuple.access. Otherwise, this field can contain AccessTuple.access and its
   * descendant accesses, such as a subset of IAM permissions contained in an IAM role.
   * @param accesses accesses or {@code null} for none
   */
  public GoogleCloudAssetV1DeniedAccessDenyDetail setAccesses(java.util.List<GoogleCloudAssetV1DeniedAccessAccess> accesses) {
    this.accesses = accesses;
    return this;
  }

  /**
   * A deny rule in an IAM deny policy.
   * @return value or {@code null} for none
   */
  public GoogleIamV2DenyRule getDenyRule() {
    return denyRule;
  }

  /**
   * A deny rule in an IAM deny policy.
   * @param denyRule denyRule or {@code null} for none
   */
  public GoogleCloudAssetV1DeniedAccessDenyDetail setDenyRule(GoogleIamV2DenyRule denyRule) {
    this.denyRule = denyRule;
    return this;
  }

  /**
   * Whether the deny_rule fully denies all access granted by the denied_access_tuple. `True` means
   * the deny rule fully blocks the access tuple. `False` means the deny rule partially blocks the
   * access tuple."
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFullyDenied() {
    return fullyDenied;
  }

  /**
   * Whether the deny_rule fully denies all access granted by the denied_access_tuple. `True` means
   * the deny rule fully blocks the access tuple. `False` means the deny rule partially blocks the
   * access tuple."
   * @param fullyDenied fullyDenied or {@code null} for none
   */
  public GoogleCloudAssetV1DeniedAccessDenyDetail setFullyDenied(java.lang.Boolean fullyDenied) {
    this.fullyDenied = fullyDenied;
    return this;
  }

  /**
   * If this deny_rule fully denies the denied_access_tuple, this field will be same as
   * AccessTuple.identity. Otherwise, this field can contain AccessTuple.identity and its descendant
   * identities, such as a subset of users in a group.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAssetV1DeniedAccessIdentity> getIdentities() {
    return identities;
  }

  /**
   * If this deny_rule fully denies the denied_access_tuple, this field will be same as
   * AccessTuple.identity. Otherwise, this field can contain AccessTuple.identity and its descendant
   * identities, such as a subset of users in a group.
   * @param identities identities or {@code null} for none
   */
  public GoogleCloudAssetV1DeniedAccessDenyDetail setIdentities(java.util.List<GoogleCloudAssetV1DeniedAccessIdentity> identities) {
    this.identities = identities;
    return this;
  }

  /**
   * The resources that the identities are denied access to. If this deny_rule fully denies the
   * denied_access_tuple, this field will be same as AccessTuple.resource. Otherwise, this field can
   * contain AccessTuple.resource and its descendant resources.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAssetV1DeniedAccessResource> getResources() {
    return resources;
  }

  /**
   * The resources that the identities are denied access to. If this deny_rule fully denies the
   * denied_access_tuple, this field will be same as AccessTuple.resource. Otherwise, this field can
   * contain AccessTuple.resource and its descendant resources.
   * @param resources resources or {@code null} for none
   */
  public GoogleCloudAssetV1DeniedAccessDenyDetail setResources(java.util.List<GoogleCloudAssetV1DeniedAccessResource> resources) {
    this.resources = resources;
    return this;
  }

  @Override
  public GoogleCloudAssetV1DeniedAccessDenyDetail set(String fieldName, Object value) {
    return (GoogleCloudAssetV1DeniedAccessDenyDetail) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAssetV1DeniedAccessDenyDetail clone() {
    return (GoogleCloudAssetV1DeniedAccessDenyDetail) super.clone();
  }

}
