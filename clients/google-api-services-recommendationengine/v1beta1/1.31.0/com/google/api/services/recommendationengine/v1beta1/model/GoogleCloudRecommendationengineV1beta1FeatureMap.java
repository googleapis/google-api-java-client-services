/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.recommendationengine.v1beta1.model;

/**
 * FeatureMap represents extra features that customers want to include in the recommendation model
 * for catalogs/user events as categorical/numerical features.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Recommendations AI. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRecommendationengineV1beta1FeatureMap extends com.google.api.client.json.GenericJson {

  /**
   * Categorical features that can take on one of a limited number of possible values. Some examples
   * would be the brand/maker of a product, or country of a customer. Feature names and values must
   * be UTF-8 encoded strings. For example: `{ "colors": {"value": ["yellow", "green"]}, "sizes":
   * {"value":["S", "M"]}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, GoogleCloudRecommendationengineV1beta1FeatureMapStringList> categoricalFeatures;

  /**
   * Numerical features. Some examples would be the height/weight of a product, or age of a
   * customer. Feature names must be UTF-8 encoded strings. For example: `{ "lengths_cm":
   * {"value":[2.3, 15.4]}, "heights_cm": {"value":[8.1, 6.4]} }`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, GoogleCloudRecommendationengineV1beta1FeatureMapFloatList> numericalFeatures;

  /**
   * Categorical features that can take on one of a limited number of possible values. Some examples
   * would be the brand/maker of a product, or country of a customer. Feature names and values must
   * be UTF-8 encoded strings. For example: `{ "colors": {"value": ["yellow", "green"]}, "sizes":
   * {"value":["S", "M"]}`
   * @return value or {@code null} for none
   */
  public java.util.Map<String, GoogleCloudRecommendationengineV1beta1FeatureMapStringList> getCategoricalFeatures() {
    return categoricalFeatures;
  }

  /**
   * Categorical features that can take on one of a limited number of possible values. Some examples
   * would be the brand/maker of a product, or country of a customer. Feature names and values must
   * be UTF-8 encoded strings. For example: `{ "colors": {"value": ["yellow", "green"]}, "sizes":
   * {"value":["S", "M"]}`
   * @param categoricalFeatures categoricalFeatures or {@code null} for none
   */
  public GoogleCloudRecommendationengineV1beta1FeatureMap setCategoricalFeatures(java.util.Map<String, GoogleCloudRecommendationengineV1beta1FeatureMapStringList> categoricalFeatures) {
    this.categoricalFeatures = categoricalFeatures;
    return this;
  }

  /**
   * Numerical features. Some examples would be the height/weight of a product, or age of a
   * customer. Feature names must be UTF-8 encoded strings. For example: `{ "lengths_cm":
   * {"value":[2.3, 15.4]}, "heights_cm": {"value":[8.1, 6.4]} }`
   * @return value or {@code null} for none
   */
  public java.util.Map<String, GoogleCloudRecommendationengineV1beta1FeatureMapFloatList> getNumericalFeatures() {
    return numericalFeatures;
  }

  /**
   * Numerical features. Some examples would be the height/weight of a product, or age of a
   * customer. Feature names must be UTF-8 encoded strings. For example: `{ "lengths_cm":
   * {"value":[2.3, 15.4]}, "heights_cm": {"value":[8.1, 6.4]} }`
   * @param numericalFeatures numericalFeatures or {@code null} for none
   */
  public GoogleCloudRecommendationengineV1beta1FeatureMap setNumericalFeatures(java.util.Map<String, GoogleCloudRecommendationengineV1beta1FeatureMapFloatList> numericalFeatures) {
    this.numericalFeatures = numericalFeatures;
    return this;
  }

  @Override
  public GoogleCloudRecommendationengineV1beta1FeatureMap set(String fieldName, Object value) {
    return (GoogleCloudRecommendationengineV1beta1FeatureMap) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRecommendationengineV1beta1FeatureMap clone() {
    return (GoogleCloudRecommendationengineV1beta1FeatureMap) super.clone();
  }

}
