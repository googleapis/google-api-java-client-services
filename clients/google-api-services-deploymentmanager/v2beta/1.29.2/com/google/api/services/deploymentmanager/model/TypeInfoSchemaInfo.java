/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.deploymentmanager.model;

/**
 * Model definition for TypeInfoSchemaInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Deployment Manager API V2Beta Methods.
 * For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TypeInfoSchemaInfo extends com.google.api.client.json.GenericJson {

  /**
   * The properties that this composite type or base type collection accept as input, represented as
   * a json blob, format is: JSON Schema Draft V4
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String input;

  /**
   * The properties that this composite type or base type collection exposes as output, these
   * properties can be used for references, represented as json blob, format is: JSON Schema Draft
   * V4
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String output;

  /**
   * The properties that this composite type or base type collection accept as input, represented as
   * a json blob, format is: JSON Schema Draft V4
   * @return value or {@code null} for none
   */
  public java.lang.String getInput() {
    return input;
  }

  /**
   * The properties that this composite type or base type collection accept as input, represented as
   * a json blob, format is: JSON Schema Draft V4
   * @param input input or {@code null} for none
   */
  public TypeInfoSchemaInfo setInput(java.lang.String input) {
    this.input = input;
    return this;
  }

  /**
   * The properties that this composite type or base type collection exposes as output, these
   * properties can be used for references, represented as json blob, format is: JSON Schema Draft
   * V4
   * @return value or {@code null} for none
   */
  public java.lang.String getOutput() {
    return output;
  }

  /**
   * The properties that this composite type or base type collection exposes as output, these
   * properties can be used for references, represented as json blob, format is: JSON Schema Draft
   * V4
   * @param output output or {@code null} for none
   */
  public TypeInfoSchemaInfo setOutput(java.lang.String output) {
    this.output = output;
    return this;
  }

  @Override
  public TypeInfoSchemaInfo set(String fieldName, Object value) {
    return (TypeInfoSchemaInfo) super.set(fieldName, value);
  }

  @Override
  public TypeInfoSchemaInfo clone() {
    return (TypeInfoSchemaInfo) super.clone();
  }

}
