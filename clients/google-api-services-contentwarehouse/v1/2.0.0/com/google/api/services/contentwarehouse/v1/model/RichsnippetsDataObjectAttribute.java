/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Other attributes of the object.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RichsnippetsDataObjectAttribute extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cdata;

  /**
   * idata holds integer data under the attribute name, and could be interpreted differently
   * according to the attribute name. Example: stores the ImadeData.docid used to generate
   * thumbnails. idata will not be automatically converted into xml (the default behavior), but the
   * behavior can be overwritten if necessary.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger idata;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * A data object can have other data objects nested inside it. This is needed to represent
   * Microformats and RDFa which have nestings e.g., a review with a business with an address, or a
   * review with a rating object. See the Webmaster Central 2009/05 blog on "Introducing Rich
   * Snippets".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Proto2BridgeMessageSet subobject;

  /**
   * Whether we should tokenize the value and cdata when generating restricts from this attribute.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean tokenize;

  /**
   * Either of cdata or value should be present.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String value;

  /**
   * @see #decodeCdata()
   * @return value or {@code null} for none
   */
  public java.lang.String getCdata() {
    return cdata;
  }

  /**

   * @see #getCdata()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeCdata() {
    return com.google.api.client.util.Base64.decodeBase64(cdata);
  }

  /**
   * @see #encodeCdata()
   * @param cdata cdata or {@code null} for none
   */
  public RichsnippetsDataObjectAttribute setCdata(java.lang.String cdata) {
    this.cdata = cdata;
    return this;
  }

  /**

   * @see #setCdata()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public RichsnippetsDataObjectAttribute encodeCdata(byte[] cdata) {
    this.cdata = com.google.api.client.util.Base64.encodeBase64URLSafeString(cdata);
    return this;
  }

  /**
   * idata holds integer data under the attribute name, and could be interpreted differently
   * according to the attribute name. Example: stores the ImadeData.docid used to generate
   * thumbnails. idata will not be automatically converted into xml (the default behavior), but the
   * behavior can be overwritten if necessary.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getIdata() {
    return idata;
  }

  /**
   * idata holds integer data under the attribute name, and could be interpreted differently
   * according to the attribute name. Example: stores the ImadeData.docid used to generate
   * thumbnails. idata will not be automatically converted into xml (the default behavior), but the
   * behavior can be overwritten if necessary.
   * @param idata idata or {@code null} for none
   */
  public RichsnippetsDataObjectAttribute setIdata(java.math.BigInteger idata) {
    this.idata = idata;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public RichsnippetsDataObjectAttribute setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * A data object can have other data objects nested inside it. This is needed to represent
   * Microformats and RDFa which have nestings e.g., a review with a business with an address, or a
   * review with a rating object. See the Webmaster Central 2009/05 blog on "Introducing Rich
   * Snippets".
   * @return value or {@code null} for none
   */
  public Proto2BridgeMessageSet getSubobject() {
    return subobject;
  }

  /**
   * A data object can have other data objects nested inside it. This is needed to represent
   * Microformats and RDFa which have nestings e.g., a review with a business with an address, or a
   * review with a rating object. See the Webmaster Central 2009/05 blog on "Introducing Rich
   * Snippets".
   * @param subobject subobject or {@code null} for none
   */
  public RichsnippetsDataObjectAttribute setSubobject(Proto2BridgeMessageSet subobject) {
    this.subobject = subobject;
    return this;
  }

  /**
   * Whether we should tokenize the value and cdata when generating restricts from this attribute.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTokenize() {
    return tokenize;
  }

  /**
   * Whether we should tokenize the value and cdata when generating restricts from this attribute.
   * @param tokenize tokenize or {@code null} for none
   */
  public RichsnippetsDataObjectAttribute setTokenize(java.lang.Boolean tokenize) {
    this.tokenize = tokenize;
    return this;
  }

  /**
   * Either of cdata or value should be present.
   * @see #decodeValue()
   * @return value or {@code null} for none
   */
  public java.lang.String getValue() {
    return value;
  }

  /**
   * Either of cdata or value should be present.
   * @see #getValue()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeValue() {
    return com.google.api.client.util.Base64.decodeBase64(value);
  }

  /**
   * Either of cdata or value should be present.
   * @see #encodeValue()
   * @param value value or {@code null} for none
   */
  public RichsnippetsDataObjectAttribute setValue(java.lang.String value) {
    this.value = value;
    return this;
  }

  /**
   * Either of cdata or value should be present.
   * @see #setValue()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public RichsnippetsDataObjectAttribute encodeValue(byte[] value) {
    this.value = com.google.api.client.util.Base64.encodeBase64URLSafeString(value);
    return this;
  }

  @Override
  public RichsnippetsDataObjectAttribute set(String fieldName, Object value) {
    return (RichsnippetsDataObjectAttribute) super.set(fieldName, value);
  }

  @Override
  public RichsnippetsDataObjectAttribute clone() {
    return (RichsnippetsDataObjectAttribute) super.clone();
  }

}
