/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.notebooks.v2.model;

/**
 * The definition of a boot disk.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Notebooks API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BootDisk extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskEncryption;

  /**
   * Optional. The size of the boot disk in GB attached to this instance, up to a maximum of 64000
   * GB (64 TB). If not specified, this defaults to the recommended value of 150GB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long diskSizeGb;

  /**
   * Optional. Indicates the type of the disk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskType;

  /**
   * Optional. Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption
   * is CMEK. Format:
   * `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn
   * more about using your own encryption keys.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kmsKey;

  /**
   * Optional. Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskEncryption() {
    return diskEncryption;
  }

  /**
   * Optional. Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.
   * @param diskEncryption diskEncryption or {@code null} for none
   */
  public BootDisk setDiskEncryption(java.lang.String diskEncryption) {
    this.diskEncryption = diskEncryption;
    return this;
  }

  /**
   * Optional. The size of the boot disk in GB attached to this instance, up to a maximum of 64000
   * GB (64 TB). If not specified, this defaults to the recommended value of 150GB.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDiskSizeGb() {
    return diskSizeGb;
  }

  /**
   * Optional. The size of the boot disk in GB attached to this instance, up to a maximum of 64000
   * GB (64 TB). If not specified, this defaults to the recommended value of 150GB.
   * @param diskSizeGb diskSizeGb or {@code null} for none
   */
  public BootDisk setDiskSizeGb(java.lang.Long diskSizeGb) {
    this.diskSizeGb = diskSizeGb;
    return this;
  }

  /**
   * Optional. Indicates the type of the disk.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskType() {
    return diskType;
  }

  /**
   * Optional. Indicates the type of the disk.
   * @param diskType diskType or {@code null} for none
   */
  public BootDisk setDiskType(java.lang.String diskType) {
    this.diskType = diskType;
    return this;
  }

  /**
   * Optional. Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption
   * is CMEK. Format:
   * `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn
   * more about using your own encryption keys.
   * @return value or {@code null} for none
   */
  public java.lang.String getKmsKey() {
    return kmsKey;
  }

  /**
   * Optional. Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption
   * is CMEK. Format:
   * `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn
   * more about using your own encryption keys.
   * @param kmsKey kmsKey or {@code null} for none
   */
  public BootDisk setKmsKey(java.lang.String kmsKey) {
    this.kmsKey = kmsKey;
    return this;
  }

  @Override
  public BootDisk set(String fieldName, Object value) {
    return (BootDisk) super.set(fieldName, value);
  }

  @Override
  public BootDisk clone() {
    return (BootDisk) super.clone();
  }

}
