/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Vertex AI Feature Monitor Job.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1FeatureMonitorJob extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Timestamp when this FeatureMonitorJob was created. Creation of a FeatureMonitorJob
   * means that the job is pending / waiting for sufficient resources but may not have started
   * running yet.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Description of the FeatureMonitor.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. FeatureMonitorJob ID comparing to which the drift is calculated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long driftBaseFeatureMonitorJobId;

  /**
   * Output only. Data snapshot time comparing to which the drift is calculated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String driftBaseSnapshotTime;

  /**
   * Output only. Feature selection config used when creating FeatureMonitorJob.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1FeatureSelectionConfig featureSelectionConfig;

  /**
   * Output only. Final status of the FeatureMonitorJob.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleRpcStatus finalStatus;

  /**
   * Output only. Summary from the FeatureMonitorJob.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1FeatureMonitorJobJobSummary jobSummary;

  /**
   * Optional. The labels with user-defined metadata to organize your FeatureMonitorJob. Label keys
   * and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase
   * letters, numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user
   * labels can be associated with one FeatureMonitor(System labels are excluded)." System reserved
   * label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. Name of the FeatureMonitorJob. Format: `projects/{project}/locations/{location}/fea
   * tureGroups/{feature_group}/featureMonitors/{feature_monitor}/featureMonitorJobs/{feature_monito
   * r_job}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Trigger type of the Feature Monitor Job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String triggerType;

  /**
   * Output only. Timestamp when this FeatureMonitorJob was created. Creation of a FeatureMonitorJob
   * means that the job is pending / waiting for sufficient resources but may not have started
   * running yet.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp when this FeatureMonitorJob was created. Creation of a FeatureMonitorJob
   * means that the job is pending / waiting for sufficient resources but may not have started
   * running yet.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Description of the FeatureMonitor.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description of the FeatureMonitor.
   * @param description description or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. FeatureMonitorJob ID comparing to which the drift is calculated.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDriftBaseFeatureMonitorJobId() {
    return driftBaseFeatureMonitorJobId;
  }

  /**
   * Output only. FeatureMonitorJob ID comparing to which the drift is calculated.
   * @param driftBaseFeatureMonitorJobId driftBaseFeatureMonitorJobId or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setDriftBaseFeatureMonitorJobId(java.lang.Long driftBaseFeatureMonitorJobId) {
    this.driftBaseFeatureMonitorJobId = driftBaseFeatureMonitorJobId;
    return this;
  }

  /**
   * Output only. Data snapshot time comparing to which the drift is calculated.
   * @return value or {@code null} for none
   */
  public String getDriftBaseSnapshotTime() {
    return driftBaseSnapshotTime;
  }

  /**
   * Output only. Data snapshot time comparing to which the drift is calculated.
   * @param driftBaseSnapshotTime driftBaseSnapshotTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setDriftBaseSnapshotTime(String driftBaseSnapshotTime) {
    this.driftBaseSnapshotTime = driftBaseSnapshotTime;
    return this;
  }

  /**
   * Output only. Feature selection config used when creating FeatureMonitorJob.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureSelectionConfig getFeatureSelectionConfig() {
    return featureSelectionConfig;
  }

  /**
   * Output only. Feature selection config used when creating FeatureMonitorJob.
   * @param featureSelectionConfig featureSelectionConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setFeatureSelectionConfig(GoogleCloudAiplatformV1beta1FeatureSelectionConfig featureSelectionConfig) {
    this.featureSelectionConfig = featureSelectionConfig;
    return this;
  }

  /**
   * Output only. Final status of the FeatureMonitorJob.
   * @return value or {@code null} for none
   */
  public GoogleRpcStatus getFinalStatus() {
    return finalStatus;
  }

  /**
   * Output only. Final status of the FeatureMonitorJob.
   * @param finalStatus finalStatus or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setFinalStatus(GoogleRpcStatus finalStatus) {
    this.finalStatus = finalStatus;
    return this;
  }

  /**
   * Output only. Summary from the FeatureMonitorJob.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJobJobSummary getJobSummary() {
    return jobSummary;
  }

  /**
   * Output only. Summary from the FeatureMonitorJob.
   * @param jobSummary jobSummary or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setJobSummary(GoogleCloudAiplatformV1beta1FeatureMonitorJobJobSummary jobSummary) {
    this.jobSummary = jobSummary;
    return this;
  }

  /**
   * Optional. The labels with user-defined metadata to organize your FeatureMonitorJob. Label keys
   * and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase
   * letters, numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user
   * labels can be associated with one FeatureMonitor(System labels are excluded)." System reserved
   * label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. The labels with user-defined metadata to organize your FeatureMonitorJob. Label keys
   * and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase
   * letters, numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user
   * labels can be associated with one FeatureMonitor(System labels are excluded)." System reserved
   * label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. Name of the FeatureMonitorJob. Format: `projects/{project}/locations/{location}/fea
   * tureGroups/{feature_group}/featureMonitors/{feature_monitor}/featureMonitorJobs/{feature_monito
   * r_job}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. Name of the FeatureMonitorJob. Format: `projects/{project}/locations/{location}/fea
   * tureGroups/{feature_group}/featureMonitors/{feature_monitor}/featureMonitorJobs/{feature_monito
   * r_job}`.
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Trigger type of the Feature Monitor Job.
   * @return value or {@code null} for none
   */
  public java.lang.String getTriggerType() {
    return triggerType;
  }

  /**
   * Output only. Trigger type of the Feature Monitor Job.
   * @param triggerType triggerType or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob setTriggerType(java.lang.String triggerType) {
    this.triggerType = triggerType;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1FeatureMonitorJob) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1FeatureMonitorJob clone() {
    return (GoogleCloudAiplatformV1beta1FeatureMonitorJob) super.clone();
  }

}
