/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1beta.model;

/**
 * Detailed page information.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1betaPageInfo extends com.google.api.client.json.GenericJson {

  /**
   * The most specific category associated with a category page. To represent full path of category,
   * use '>' sign to separate different hierarchies. If '>' is part of the category name, please
   * replace it with other character(s). Category pages include special pages such as sales or
   * promotions. For instance, a special sale page may have the category hierarchy: "pageCategory" :
   * "Sales > 2017 Black Friday Deals". Required for `view-category-page` events. Other event types
   * should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pageCategory;

  /**
   * A unique ID of a web page view. This should be kept the same for all user events triggered from
   * the same pageview. For example, an item detail page view could trigger multiple events as the
   * user is browsing the page. The `pageViewId` property should be kept the same for all these
   * events so that they can be grouped together properly. When using the client side event
   * reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pageviewId;

  /**
   * The referrer URL of the current page. When using the client side event reporting with
   * JavaScript pixel and Google Tag Manager, this value is filled in automatically. However, some
   * browser privacy restrictions may cause this field to be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String referrerUri;

  /**
   * Complete URL (window.location.href) of the user's current page. When using the client side
   * event reporting with JavaScript pixel and Google Tag Manager, this value is filled in
   * automatically. Maximum length 5,000 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * The most specific category associated with a category page. To represent full path of category,
   * use '>' sign to separate different hierarchies. If '>' is part of the category name, please
   * replace it with other character(s). Category pages include special pages such as sales or
   * promotions. For instance, a special sale page may have the category hierarchy: "pageCategory" :
   * "Sales > 2017 Black Friday Deals". Required for `view-category-page` events. Other event types
   * should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getPageCategory() {
    return pageCategory;
  }

  /**
   * The most specific category associated with a category page. To represent full path of category,
   * use '>' sign to separate different hierarchies. If '>' is part of the category name, please
   * replace it with other character(s). Category pages include special pages such as sales or
   * promotions. For instance, a special sale page may have the category hierarchy: "pageCategory" :
   * "Sales > 2017 Black Friday Deals". Required for `view-category-page` events. Other event types
   * should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
   * @param pageCategory pageCategory or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaPageInfo setPageCategory(java.lang.String pageCategory) {
    this.pageCategory = pageCategory;
    return this;
  }

  /**
   * A unique ID of a web page view. This should be kept the same for all user events triggered from
   * the same pageview. For example, an item detail page view could trigger multiple events as the
   * user is browsing the page. The `pageViewId` property should be kept the same for all these
   * events so that they can be grouped together properly. When using the client side event
   * reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.
   * @return value or {@code null} for none
   */
  public java.lang.String getPageviewId() {
    return pageviewId;
  }

  /**
   * A unique ID of a web page view. This should be kept the same for all user events triggered from
   * the same pageview. For example, an item detail page view could trigger multiple events as the
   * user is browsing the page. The `pageViewId` property should be kept the same for all these
   * events so that they can be grouped together properly. When using the client side event
   * reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.
   * @param pageviewId pageviewId or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaPageInfo setPageviewId(java.lang.String pageviewId) {
    this.pageviewId = pageviewId;
    return this;
  }

  /**
   * The referrer URL of the current page. When using the client side event reporting with
   * JavaScript pixel and Google Tag Manager, this value is filled in automatically. However, some
   * browser privacy restrictions may cause this field to be empty.
   * @return value or {@code null} for none
   */
  public java.lang.String getReferrerUri() {
    return referrerUri;
  }

  /**
   * The referrer URL of the current page. When using the client side event reporting with
   * JavaScript pixel and Google Tag Manager, this value is filled in automatically. However, some
   * browser privacy restrictions may cause this field to be empty.
   * @param referrerUri referrerUri or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaPageInfo setReferrerUri(java.lang.String referrerUri) {
    this.referrerUri = referrerUri;
    return this;
  }

  /**
   * Complete URL (window.location.href) of the user's current page. When using the client side
   * event reporting with JavaScript pixel and Google Tag Manager, this value is filled in
   * automatically. Maximum length 5,000 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * Complete URL (window.location.href) of the user's current page. When using the client side
   * event reporting with JavaScript pixel and Google Tag Manager, this value is filled in
   * automatically. Maximum length 5,000 characters.
   * @param uri uri or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaPageInfo setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaPageInfo set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1betaPageInfo) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaPageInfo clone() {
    return (GoogleCloudDiscoveryengineV1betaPageInfo) super.clone();
  }

}
