/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.osconfig.v1alpha.model;

/**
 * Contains metadata information for the vulnerability. This information is collected from the
 * upstream feed of the operating system.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the OS Config API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VulnerabilityReportVulnerabilityDetails extends com.google.api.client.json.GenericJson {

  /**
   * The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique
   * across vulnerabilities for a VM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cve;

  /**
   * The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0
   * indicates low severity and 10 indicates high severity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float cvssV2Score;

  /**
   * The full description of the CVSSv3 for this vulnerability from NVD.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CVSSv3 cvssV3;

  /**
   * The note or description describing the vulnerability from the distro.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Corresponds to the references attached to the `VulnerabilityDetails`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VulnerabilityReportVulnerabilityDetailsReference> references;

  /**
   * Assigned severity/impact ranking from the distro.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String severity;

  /**
   * The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique
   * across vulnerabilities for a VM.
   * @return value or {@code null} for none
   */
  public java.lang.String getCve() {
    return cve;
  }

  /**
   * The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique
   * across vulnerabilities for a VM.
   * @param cve cve or {@code null} for none
   */
  public VulnerabilityReportVulnerabilityDetails setCve(java.lang.String cve) {
    this.cve = cve;
    return this;
  }

  /**
   * The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0
   * indicates low severity and 10 indicates high severity.
   * @return value or {@code null} for none
   */
  public java.lang.Float getCvssV2Score() {
    return cvssV2Score;
  }

  /**
   * The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0
   * indicates low severity and 10 indicates high severity.
   * @param cvssV2Score cvssV2Score or {@code null} for none
   */
  public VulnerabilityReportVulnerabilityDetails setCvssV2Score(java.lang.Float cvssV2Score) {
    this.cvssV2Score = cvssV2Score;
    return this;
  }

  /**
   * The full description of the CVSSv3 for this vulnerability from NVD.
   * @return value or {@code null} for none
   */
  public CVSSv3 getCvssV3() {
    return cvssV3;
  }

  /**
   * The full description of the CVSSv3 for this vulnerability from NVD.
   * @param cvssV3 cvssV3 or {@code null} for none
   */
  public VulnerabilityReportVulnerabilityDetails setCvssV3(CVSSv3 cvssV3) {
    this.cvssV3 = cvssV3;
    return this;
  }

  /**
   * The note or description describing the vulnerability from the distro.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * The note or description describing the vulnerability from the distro.
   * @param description description or {@code null} for none
   */
  public VulnerabilityReportVulnerabilityDetails setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Corresponds to the references attached to the `VulnerabilityDetails`.
   * @return value or {@code null} for none
   */
  public java.util.List<VulnerabilityReportVulnerabilityDetailsReference> getReferences() {
    return references;
  }

  /**
   * Corresponds to the references attached to the `VulnerabilityDetails`.
   * @param references references or {@code null} for none
   */
  public VulnerabilityReportVulnerabilityDetails setReferences(java.util.List<VulnerabilityReportVulnerabilityDetailsReference> references) {
    this.references = references;
    return this;
  }

  /**
   * Assigned severity/impact ranking from the distro.
   * @return value or {@code null} for none
   */
  public java.lang.String getSeverity() {
    return severity;
  }

  /**
   * Assigned severity/impact ranking from the distro.
   * @param severity severity or {@code null} for none
   */
  public VulnerabilityReportVulnerabilityDetails setSeverity(java.lang.String severity) {
    this.severity = severity;
    return this;
  }

  @Override
  public VulnerabilityReportVulnerabilityDetails set(String fieldName, Object value) {
    return (VulnerabilityReportVulnerabilityDetails) super.set(fieldName, value);
  }

  @Override
  public VulnerabilityReportVulnerabilityDetails clone() {
    return (VulnerabilityReportVulnerabilityDetails) super.clone();
  }

}
