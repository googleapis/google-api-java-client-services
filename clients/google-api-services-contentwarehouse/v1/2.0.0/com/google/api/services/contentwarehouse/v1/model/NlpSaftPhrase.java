/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A document phrase marks a range of tokens in a document as a phrase. The indices are token
 * positions in the document.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSaftPhrase extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer end;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String facet;

  /**
   * The head token in the phrase is the id of the top-most token within the phrase. It either has
   * an arc from outside the phrase going to it, or it is a root token of the sentence. A value of
   * -1 indicates that the head has not yet been computed for the phrase (not the same semantics as
   * the head of a token!). Note that even when it is uniquely defined, there is no guarantee that
   * the head is set for entities and measurements within a document: you may need to explicitly
   * compute it.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer head;

  /**
   * First and last token in the phrase. The phrase goes from start to end (inclusive).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer start;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEnd() {
    return end;
  }

  /**
   * @param end end or {@code null} for none
   */
  public NlpSaftPhrase setEnd(java.lang.Integer end) {
    this.end = end;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getFacet() {
    return facet;
  }

  /**
   * @param facet facet or {@code null} for none
   */
  public NlpSaftPhrase setFacet(java.lang.String facet) {
    this.facet = facet;
    return this;
  }

  /**
   * The head token in the phrase is the id of the top-most token within the phrase. It either has
   * an arc from outside the phrase going to it, or it is a root token of the sentence. A value of
   * -1 indicates that the head has not yet been computed for the phrase (not the same semantics as
   * the head of a token!). Note that even when it is uniquely defined, there is no guarantee that
   * the head is set for entities and measurements within a document: you may need to explicitly
   * compute it.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getHead() {
    return head;
  }

  /**
   * The head token in the phrase is the id of the top-most token within the phrase. It either has
   * an arc from outside the phrase going to it, or it is a root token of the sentence. A value of
   * -1 indicates that the head has not yet been computed for the phrase (not the same semantics as
   * the head of a token!). Note that even when it is uniquely defined, there is no guarantee that
   * the head is set for entities and measurements within a document: you may need to explicitly
   * compute it.
   * @param head head or {@code null} for none
   */
  public NlpSaftPhrase setHead(java.lang.Integer head) {
    this.head = head;
    return this;
  }

  /**
   * First and last token in the phrase. The phrase goes from start to end (inclusive).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStart() {
    return start;
  }

  /**
   * First and last token in the phrase. The phrase goes from start to end (inclusive).
   * @param start start or {@code null} for none
   */
  public NlpSaftPhrase setStart(java.lang.Integer start) {
    this.start = start;
    return this;
  }

  @Override
  public NlpSaftPhrase set(String fieldName, Object value) {
    return (NlpSaftPhrase) super.set(fieldName, value);
  }

  @Override
  public NlpSaftPhrase clone() {
    return (NlpSaftPhrase) super.clone();
  }

}
