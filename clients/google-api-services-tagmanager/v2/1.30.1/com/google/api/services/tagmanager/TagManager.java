/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.tagmanager;

/**
 * Service definition for TagManager (v2).
 *
 * <p>
 * This API allows clients to access and modify container and tag configuration.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/tag-manager" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TagManagerRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class TagManager extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.30.10 of the Tag Manager API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://tagmanager.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public TagManager(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  TagManager(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code TagManager tagmanager = new TagManager(...);}
   *   {@code TagManager.Accounts.List request = tagmanager.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * Gets a GTM Account.
     *
     * Create a request for the method "accounts.get".
     *
     * This request holds the parameters needed by the tagmanager server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param path GTM Accounts's API relative path. Example: accounts/{account_id}
     * @return the request
     */
    public Get get(java.lang.String path) throws java.io.IOException {
      Get result = new Get(path);
      initialize(result);
      return result;
    }

    public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Account> {

      private static final String REST_PATH = "tagmanager/v2/{+path}";

      private final java.util.regex.Pattern PATH_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Gets a GTM Account.
       *
       * Create a request for the method "accounts.get".
       *
       * This request holds the parameters needed by the the tagmanager server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param path GTM Accounts's API relative path. Example: accounts/{account_id}
       * @since 1.13
       */
      protected Get(java.lang.String path) {
        super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Account.class);
        this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
              "Parameter path must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** GTM Accounts's API relative path. Example: accounts/{account_id} */
      @com.google.api.client.util.Key
      private java.lang.String path;

      /** GTM Accounts's API relative path. Example: accounts/{account_id}
       */
      public java.lang.String getPath() {
        return path;
      }

      /** GTM Accounts's API relative path. Example: accounts/{account_id} */
      public Get setPath(java.lang.String path) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
              "Parameter path must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.path = path;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists all GTM Accounts that a user has access to.
     *
     * Create a request for the method "accounts.list".
     *
     * This request holds the parameters needed by the tagmanager server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListAccountsResponse> {

      private static final String REST_PATH = "tagmanager/v2/accounts";

      /**
       * Lists all GTM Accounts that a user has access to.
       *
       * Create a request for the method "accounts.list".
       *
       * This request holds the parameters needed by the the tagmanager server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListAccountsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Continuation token for fetching the next page of results. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Continuation token for fetching the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** Continuation token for fetching the next page of results. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a GTM Account.
     *
     * Create a request for the method "accounts.update".
     *
     * This request holds the parameters needed by the tagmanager server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param path GTM Accounts's API relative path. Example: accounts/{account_id}
     * @param content the {@link com.google.api.services.tagmanager.model.Account}
     * @return the request
     */
    public Update update(java.lang.String path, com.google.api.services.tagmanager.model.Account content) throws java.io.IOException {
      Update result = new Update(path, content);
      initialize(result);
      return result;
    }

    public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Account> {

      private static final String REST_PATH = "tagmanager/v2/{+path}";

      private final java.util.regex.Pattern PATH_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Updates a GTM Account.
       *
       * Create a request for the method "accounts.update".
       *
       * This request holds the parameters needed by the the tagmanager server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param path GTM Accounts's API relative path. Example: accounts/{account_id}
       * @param content the {@link com.google.api.services.tagmanager.model.Account}
       * @since 1.13
       */
      protected Update(java.lang.String path, com.google.api.services.tagmanager.model.Account content) {
        super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Account.class);
        this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
              "Parameter path must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /** GTM Accounts's API relative path. Example: accounts/{account_id} */
      @com.google.api.client.util.Key
      private java.lang.String path;

      /** GTM Accounts's API relative path. Example: accounts/{account_id}
       */
      public java.lang.String getPath() {
        return path;
      }

      /** GTM Accounts's API relative path. Example: accounts/{account_id} */
      public Update setPath(java.lang.String path) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
              "Parameter path must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.path = path;
        return this;
      }

      /** When provided, this fingerprint must match the fingerprint of the account in storage. */
      @com.google.api.client.util.Key
      private java.lang.String fingerprint;

      /** When provided, this fingerprint must match the fingerprint of the account in storage.
       */
      public java.lang.String getFingerprint() {
        return fingerprint;
      }

      /** When provided, this fingerprint must match the fingerprint of the account in storage. */
      public Update setFingerprint(java.lang.String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Containers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code TagManager tagmanager = new TagManager(...);}
     *   {@code TagManager.Containers.List request = tagmanager.containers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Containers containers() {
      return new Containers();
    }

    /**
     * The "containers" collection of methods.
     */
    public class Containers {

      /**
       * Creates a Container.
       *
       * Create a request for the method "containers.create".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent GTM Account's API relative path. Example: accounts/{account_id}.
       * @param content the {@link com.google.api.services.tagmanager.model.Container}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.Container content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Container> {

        private static final String REST_PATH = "tagmanager/v2/{+parent}/containers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Creates a Container.
         *
         * Create a request for the method "containers.create".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent GTM Account's API relative path. Example: accounts/{account_id}.
         * @param content the {@link com.google.api.services.tagmanager.model.Container}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.Container content) {
          super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Container.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          checkRequiredParameter(content, "content");
          checkRequiredParameter(content.getName(), "Container.getName()");
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** GTM Account's API relative path. Example: accounts/{account_id}. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** GTM Account's API relative path. Example: accounts/{account_id}.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** GTM Account's API relative path. Example: accounts/{account_id}. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a Container.
       *
       * Create a request for the method "containers.delete".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param path GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
       * @return the request
       */
      public Delete delete(java.lang.String path) throws java.io.IOException {
        Delete result = new Delete(path);
        initialize(result);
        return result;
      }

      public class Delete extends TagManagerRequest<Void> {

        private static final String REST_PATH = "tagmanager/v2/{+path}";

        private final java.util.regex.Pattern PATH_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

        /**
         * Deletes a Container.
         *
         * Create a request for the method "containers.delete".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param path GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @since 1.13
         */
        protected Delete(java.lang.String path) {
          super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
          this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/containers/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * GTM Container's API relative path. Example:
         * accounts/{account_id}/containers/{container_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String path;

        /** GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         */
        public java.lang.String getPath() {
          return path;
        }

        /**
         * GTM Container's API relative path. Example:
         * accounts/{account_id}/containers/{container_id}
         */
        public Delete setPath(java.lang.String path) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/containers/[^/]+$");
          }
          this.path = path;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a Container.
       *
       * Create a request for the method "containers.get".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param path GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
       * @return the request
       */
      public Get get(java.lang.String path) throws java.io.IOException {
        Get result = new Get(path);
        initialize(result);
        return result;
      }

      public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Container> {

        private static final String REST_PATH = "tagmanager/v2/{+path}";

        private final java.util.regex.Pattern PATH_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

        /**
         * Gets a Container.
         *
         * Create a request for the method "containers.get".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param path GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @since 1.13
         */
        protected Get(java.lang.String path) {
          super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Container.class);
          this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/containers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * GTM Container's API relative path. Example:
         * accounts/{account_id}/containers/{container_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String path;

        /** GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         */
        public java.lang.String getPath() {
          return path;
        }

        /**
         * GTM Container's API relative path. Example:
         * accounts/{account_id}/containers/{container_id}
         */
        public Get setPath(java.lang.String path) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/containers/[^/]+$");
          }
          this.path = path;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all Containers that belongs to a GTM Account.
       *
       * Create a request for the method "containers.list".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent GTM Accounts's API relative path. Example: accounts/{account_id}.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListContainersResponse> {

        private static final String REST_PATH = "tagmanager/v2/{+parent}/containers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists all Containers that belongs to a GTM Account.
         *
         * Create a request for the method "containers.list".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent GTM Accounts's API relative path. Example: accounts/{account_id}.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListContainersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** GTM Accounts's API relative path. Example: accounts/{account_id}. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** GTM Accounts's API relative path. Example: accounts/{account_id}.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** GTM Accounts's API relative path. Example: accounts/{account_id}. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Continuation token for fetching the next page of results. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Continuation token for fetching the next page of results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Continuation token for fetching the next page of results. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a Container.
       *
       * Create a request for the method "containers.update".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param path GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
       * @param content the {@link com.google.api.services.tagmanager.model.Container}
       * @return the request
       */
      public Update update(java.lang.String path, com.google.api.services.tagmanager.model.Container content) throws java.io.IOException {
        Update result = new Update(path, content);
        initialize(result);
        return result;
      }

      public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Container> {

        private static final String REST_PATH = "tagmanager/v2/{+path}";

        private final java.util.regex.Pattern PATH_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

        /**
         * Updates a Container.
         *
         * Create a request for the method "containers.update".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         * <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param path GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @param content the {@link com.google.api.services.tagmanager.model.Container}
         * @since 1.13
         */
        protected Update(java.lang.String path, com.google.api.services.tagmanager.model.Container content) {
          super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Container.class);
          this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/containers/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * GTM Container's API relative path. Example:
         * accounts/{account_id}/containers/{container_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String path;

        /** GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         */
        public java.lang.String getPath() {
          return path;
        }

        /**
         * GTM Container's API relative path. Example:
         * accounts/{account_id}/containers/{container_id}
         */
        public Update setPath(java.lang.String path) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/containers/[^/]+$");
          }
          this.path = path;
          return this;
        }

        /**
         * When provided, this fingerprint must match the fingerprint of the container in storage.
         */
        @com.google.api.client.util.Key
        private java.lang.String fingerprint;

        /** When provided, this fingerprint must match the fingerprint of the container in storage.
         */
        public java.lang.String getFingerprint() {
          return fingerprint;
        }

        /**
         * When provided, this fingerprint must match the fingerprint of the container in storage.
         */
        public Update setFingerprint(java.lang.String fingerprint) {
          this.fingerprint = fingerprint;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Environments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.Environments.List request = tagmanager.environments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Environments environments() {
        return new Environments();
      }

      /**
       * The "environments" collection of methods.
       */
      public class Environments {

        /**
         * Creates a GTM Environment.
         *
         * Create a request for the method "environments.create".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @param content the {@link com.google.api.services.tagmanager.model.Environment}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.Environment content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Environment> {

          private static final String REST_PATH = "tagmanager/v2/{+parent}/environments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

          /**
           * Creates a GTM Environment.
           *
           * Create a request for the method "environments.create".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Environment}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.Environment content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Environment.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Environment.getName()");
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a GTM Environment.
         *
         * Create a request for the method "environments.delete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param path GTM Environment's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/environments/{environment_id}
         * @return the request
         */
        public Delete delete(java.lang.String path) throws java.io.IOException {
          Delete result = new Delete(path);
          initialize(result);
          return result;
        }

        public class Delete extends TagManagerRequest<Void> {

          private static final String REST_PATH = "tagmanager/v2/{+path}";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");

          /**
           * Deletes a GTM Environment.
           *
           * Create a request for the method "environments.delete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Environment's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           * @since 1.13
           */
          protected Delete(java.lang.String path) {
            super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Environment's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Environment's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Environment's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          public Delete setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a GTM Environment.
         *
         * Create a request for the method "environments.get".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param path GTM Environment's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/environments/{environment_id}
         * @return the request
         */
        public Get get(java.lang.String path) throws java.io.IOException {
          Get result = new Get(path);
          initialize(result);
          return result;
        }

        public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Environment> {

          private static final String REST_PATH = "tagmanager/v2/{+path}";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");

          /**
           * Gets a GTM Environment.
           *
           * Create a request for the method "environments.get".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Environment's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           * @since 1.13
           */
          protected Get(java.lang.String path) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Environment.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Environment's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Environment's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Environment's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          public Get setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all GTM Environments of a GTM Container.
         *
         * Create a request for the method "environments.list".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListEnvironmentsResponse> {

          private static final String REST_PATH = "tagmanager/v2/{+parent}/environments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

          /**
           * Lists all GTM Environments of a GTM Container.
           *
           * Create a request for the method "environments.list".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListEnvironmentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Continuation token for fetching the next page of results. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Continuation token for fetching the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Continuation token for fetching the next page of results. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Re-generates the authorization code for a GTM Environment.
         *
         * Create a request for the method "environments.reauthorize".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Reauthorize#execute()} method to invoke the remote operation.
         *
         * @param path GTM Environment's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/environments/{environment_id}
         * @param content the {@link com.google.api.services.tagmanager.model.Environment}
         * @return the request
         */
        public Reauthorize reauthorize(java.lang.String path, com.google.api.services.tagmanager.model.Environment content) throws java.io.IOException {
          Reauthorize result = new Reauthorize(path, content);
          initialize(result);
          return result;
        }

        public class Reauthorize extends TagManagerRequest<com.google.api.services.tagmanager.model.Environment> {

          private static final String REST_PATH = "tagmanager/v2/{+path}:reauthorize";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");

          /**
           * Re-generates the authorization code for a GTM Environment.
           *
           * Create a request for the method "environments.reauthorize".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Reauthorize#execute()} method to invoke the remote
           * operation. <p> {@link
           * Reauthorize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Environment's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Environment}
           * @since 1.13
           */
          protected Reauthorize(java.lang.String path, com.google.api.services.tagmanager.model.Environment content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Environment.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Reauthorize set$Xgafv(java.lang.String $Xgafv) {
            return (Reauthorize) super.set$Xgafv($Xgafv);
          }

          @Override
          public Reauthorize setAccessToken(java.lang.String accessToken) {
            return (Reauthorize) super.setAccessToken(accessToken);
          }

          @Override
          public Reauthorize setAlt(java.lang.String alt) {
            return (Reauthorize) super.setAlt(alt);
          }

          @Override
          public Reauthorize setCallback(java.lang.String callback) {
            return (Reauthorize) super.setCallback(callback);
          }

          @Override
          public Reauthorize setFields(java.lang.String fields) {
            return (Reauthorize) super.setFields(fields);
          }

          @Override
          public Reauthorize setKey(java.lang.String key) {
            return (Reauthorize) super.setKey(key);
          }

          @Override
          public Reauthorize setOauthToken(java.lang.String oauthToken) {
            return (Reauthorize) super.setOauthToken(oauthToken);
          }

          @Override
          public Reauthorize setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Reauthorize) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Reauthorize setQuotaUser(java.lang.String quotaUser) {
            return (Reauthorize) super.setQuotaUser(quotaUser);
          }

          @Override
          public Reauthorize setUploadType(java.lang.String uploadType) {
            return (Reauthorize) super.setUploadType(uploadType);
          }

          @Override
          public Reauthorize setUploadProtocol(java.lang.String uploadProtocol) {
            return (Reauthorize) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Environment's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Environment's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Environment's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          public Reauthorize setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public Reauthorize set(String parameterName, Object value) {
            return (Reauthorize) super.set(parameterName, value);
          }
        }
        /**
         * Updates a GTM Environment.
         *
         * Create a request for the method "environments.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param path GTM Environment's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/environments/{environment_id}
         * @param content the {@link com.google.api.services.tagmanager.model.Environment}
         * @return the request
         */
        public Update update(java.lang.String path, com.google.api.services.tagmanager.model.Environment content) throws java.io.IOException {
          Update result = new Update(path, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Environment> {

          private static final String REST_PATH = "tagmanager/v2/{+path}";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");

          /**
           * Updates a GTM Environment.
           *
           * Create a request for the method "environments.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Environment's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Environment}
           * @since 1.13
           */
          protected Update(java.lang.String path, com.google.api.services.tagmanager.model.Environment content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Environment.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");
            }
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Environment.getName()");
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Environment's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Environment's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Environment's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/environments/{environment_id}
           */
          public Update setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$");
            }
            this.path = path;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the environment in
           * storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the environment in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the environment in
           * storage.
           */
          public Update setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the VersionHeaders collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.VersionHeaders.List request = tagmanager.versionHeaders().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public VersionHeaders versionHeaders() {
        return new VersionHeaders();
      }

      /**
       * The "version_headers" collection of methods.
       */
      public class VersionHeaders {

        /**
         * Gets the latest container version header
         *
         * Create a request for the method "version_headers.latest".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Latest#execute()} method to invoke the remote operation.
         *
         * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @return the request
         */
        public Latest latest(java.lang.String parent) throws java.io.IOException {
          Latest result = new Latest(parent);
          initialize(result);
          return result;
        }

        public class Latest extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersionHeader> {

          private static final String REST_PATH = "tagmanager/v2/{+parent}/version_headers:latest";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

          /**
           * Gets the latest container version header
           *
           * Create a request for the method "version_headers.latest".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Latest#execute()} method to invoke the remote operation.
           * <p> {@link
           * Latest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           * @since 1.13
           */
          protected Latest(java.lang.String parent) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ContainerVersionHeader.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Latest set$Xgafv(java.lang.String $Xgafv) {
            return (Latest) super.set$Xgafv($Xgafv);
          }

          @Override
          public Latest setAccessToken(java.lang.String accessToken) {
            return (Latest) super.setAccessToken(accessToken);
          }

          @Override
          public Latest setAlt(java.lang.String alt) {
            return (Latest) super.setAlt(alt);
          }

          @Override
          public Latest setCallback(java.lang.String callback) {
            return (Latest) super.setCallback(callback);
          }

          @Override
          public Latest setFields(java.lang.String fields) {
            return (Latest) super.setFields(fields);
          }

          @Override
          public Latest setKey(java.lang.String key) {
            return (Latest) super.setKey(key);
          }

          @Override
          public Latest setOauthToken(java.lang.String oauthToken) {
            return (Latest) super.setOauthToken(oauthToken);
          }

          @Override
          public Latest setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Latest) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Latest setQuotaUser(java.lang.String quotaUser) {
            return (Latest) super.setQuotaUser(quotaUser);
          }

          @Override
          public Latest setUploadType(java.lang.String uploadType) {
            return (Latest) super.setUploadType(uploadType);
          }

          @Override
          public Latest setUploadProtocol(java.lang.String uploadProtocol) {
            return (Latest) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          public Latest setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Latest set(String parameterName, Object value) {
            return (Latest) super.set(parameterName, value);
          }
        }
        /**
         * Lists all Container Versions of a GTM Container.
         *
         * Create a request for the method "version_headers.list".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListContainerVersionsResponse> {

          private static final String REST_PATH = "tagmanager/v2/{+parent}/version_headers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

          /**
           * Lists all Container Versions of a GTM Container.
           *
           * Create a request for the method "version_headers.list".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListContainerVersionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Also retrieve deleted (archived) versions when true. */
          @com.google.api.client.util.Key
          private java.lang.Boolean includeDeleted;

          /** Also retrieve deleted (archived) versions when true.
           */
          public java.lang.Boolean getIncludeDeleted() {
            return includeDeleted;
          }

          /** Also retrieve deleted (archived) versions when true. */
          public List setIncludeDeleted(java.lang.Boolean includeDeleted) {
            this.includeDeleted = includeDeleted;
            return this;
          }

          /** Continuation token for fetching the next page of results. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Continuation token for fetching the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Continuation token for fetching the next page of results. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Versions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.Versions.List request = tagmanager.versions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Versions versions() {
        return new Versions();
      }

      /**
       * The "versions" collection of methods.
       */
      public class Versions {

        /**
         * Deletes a Container Version.
         *
         * Create a request for the method "versions.delete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
         * @return the request
         */
        public Delete delete(java.lang.String path) throws java.io.IOException {
          Delete result = new Delete(path);
          initialize(result);
          return result;
        }

        public class Delete extends TagManagerRequest<Void> {

          private static final String REST_PATH = "tagmanager/v2/{+path}";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");

          /**
           * Deletes a Container Version.
           *
           * Create a request for the method "versions.delete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
           * @since 1.13
           */
          protected Delete(java.lang.String path) {
            super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM ContainerVersion's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public Delete setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Container Version.
         *
         * Create a request for the method "versions.get".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
         * @return the request
         */
        public Get get(java.lang.String path) throws java.io.IOException {
          Get result = new Get(path);
          initialize(result);
          return result;
        }

        public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersion> {

          private static final String REST_PATH = "tagmanager/v2/{+path}";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");

          /**
           * Gets a Container Version.
           *
           * Create a request for the method "versions.get".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
           * @since 1.13
           */
          protected Get(java.lang.String path) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ContainerVersion.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM ContainerVersion's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public Get setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
            this.path = path;
            return this;
          }

          /**
           * The GTM ContainerVersion ID. Specify published to retrieve the currently published
           * version.
           */
          @com.google.api.client.util.Key
          private java.lang.String containerVersionId;

          /** The GTM ContainerVersion ID. Specify published to retrieve the currently published version.
           */
          public java.lang.String getContainerVersionId() {
            return containerVersionId;
          }

          /**
           * The GTM ContainerVersion ID. Specify published to retrieve the currently published
           * version.
           */
          public Get setContainerVersionId(java.lang.String containerVersionId) {
            this.containerVersionId = containerVersionId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the live (i.e. published) container version
         *
         * Create a request for the method "versions.live".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Live#execute()} method to invoke the remote operation.
         *
         * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @return the request
         */
        public Live live(java.lang.String parent) throws java.io.IOException {
          Live result = new Live(parent);
          initialize(result);
          return result;
        }

        public class Live extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersion> {

          private static final String REST_PATH = "tagmanager/v2/{+parent}/versions:live";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

          /**
           * Gets the live (i.e. published) container version
           *
           * Create a request for the method "versions.live".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Live#execute()} method to invoke the remote operation. <p>
           * {@link Live#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           * @since 1.13
           */
          protected Live(java.lang.String parent) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ContainerVersion.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Live set$Xgafv(java.lang.String $Xgafv) {
            return (Live) super.set$Xgafv($Xgafv);
          }

          @Override
          public Live setAccessToken(java.lang.String accessToken) {
            return (Live) super.setAccessToken(accessToken);
          }

          @Override
          public Live setAlt(java.lang.String alt) {
            return (Live) super.setAlt(alt);
          }

          @Override
          public Live setCallback(java.lang.String callback) {
            return (Live) super.setCallback(callback);
          }

          @Override
          public Live setFields(java.lang.String fields) {
            return (Live) super.setFields(fields);
          }

          @Override
          public Live setKey(java.lang.String key) {
            return (Live) super.setKey(key);
          }

          @Override
          public Live setOauthToken(java.lang.String oauthToken) {
            return (Live) super.setOauthToken(oauthToken);
          }

          @Override
          public Live setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Live) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Live setQuotaUser(java.lang.String quotaUser) {
            return (Live) super.setQuotaUser(quotaUser);
          }

          @Override
          public Live setUploadType(java.lang.String uploadType) {
            return (Live) super.setUploadType(uploadType);
          }

          @Override
          public Live setUploadProtocol(java.lang.String uploadProtocol) {
            return (Live) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * GTM Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          public Live setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Live set(String parameterName, Object value) {
            return (Live) super.set(parameterName, value);
          }
        }
        /**
         * Publishes a Container Version.
         *
         * Create a request for the method "versions.publish".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Publish#execute()} method to invoke the remote operation.
         *
         * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
         * @return the request
         */
        public Publish publish(java.lang.String path) throws java.io.IOException {
          Publish result = new Publish(path);
          initialize(result);
          return result;
        }

        public class Publish extends TagManagerRequest<com.google.api.services.tagmanager.model.PublishContainerVersionResponse> {

          private static final String REST_PATH = "tagmanager/v2/{+path}:publish";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");

          /**
           * Publishes a Container Version.
           *
           * Create a request for the method "versions.publish".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Publish#execute()} method to invoke the remote operation.
           * <p> {@link
           * Publish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
           * @since 1.13
           */
          protected Publish(java.lang.String path) {
            super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.PublishContainerVersionResponse.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
          }

          @Override
          public Publish set$Xgafv(java.lang.String $Xgafv) {
            return (Publish) super.set$Xgafv($Xgafv);
          }

          @Override
          public Publish setAccessToken(java.lang.String accessToken) {
            return (Publish) super.setAccessToken(accessToken);
          }

          @Override
          public Publish setAlt(java.lang.String alt) {
            return (Publish) super.setAlt(alt);
          }

          @Override
          public Publish setCallback(java.lang.String callback) {
            return (Publish) super.setCallback(callback);
          }

          @Override
          public Publish setFields(java.lang.String fields) {
            return (Publish) super.setFields(fields);
          }

          @Override
          public Publish setKey(java.lang.String key) {
            return (Publish) super.setKey(key);
          }

          @Override
          public Publish setOauthToken(java.lang.String oauthToken) {
            return (Publish) super.setOauthToken(oauthToken);
          }

          @Override
          public Publish setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Publish) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Publish setQuotaUser(java.lang.String quotaUser) {
            return (Publish) super.setQuotaUser(quotaUser);
          }

          @Override
          public Publish setUploadType(java.lang.String uploadType) {
            return (Publish) super.setUploadType(uploadType);
          }

          @Override
          public Publish setUploadProtocol(java.lang.String uploadProtocol) {
            return (Publish) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM ContainerVersion's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public Publish setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
            this.path = path;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the container version in
           * storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the container version in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the container version in
           * storage.
           */
          public Publish setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Publish set(String parameterName, Object value) {
            return (Publish) super.set(parameterName, value);
          }
        }
        /**
         * Sets the latest version used for synchronization of workspaces when detecting conflicts and
         * errors.
         *
         * Create a request for the method "versions.set_latest".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link SetLatest#execute()} method to invoke the remote operation.
         *
         * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
         * @return the request
         */
        public SetLatest setLatest(java.lang.String path) throws java.io.IOException {
          SetLatest result = new SetLatest(path);
          initialize(result);
          return result;
        }

        public class SetLatest extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersion> {

          private static final String REST_PATH = "tagmanager/v2/{+path}:set_latest";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");

          /**
           * Sets the latest version used for synchronization of workspaces when detecting conflicts and
           * errors.
           *
           * Create a request for the method "versions.set_latest".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link SetLatest#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetLatest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
           * @since 1.13
           */
          protected SetLatest(java.lang.String path) {
            super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.ContainerVersion.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
          }

          @Override
          public SetLatest set$Xgafv(java.lang.String $Xgafv) {
            return (SetLatest) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetLatest setAccessToken(java.lang.String accessToken) {
            return (SetLatest) super.setAccessToken(accessToken);
          }

          @Override
          public SetLatest setAlt(java.lang.String alt) {
            return (SetLatest) super.setAlt(alt);
          }

          @Override
          public SetLatest setCallback(java.lang.String callback) {
            return (SetLatest) super.setCallback(callback);
          }

          @Override
          public SetLatest setFields(java.lang.String fields) {
            return (SetLatest) super.setFields(fields);
          }

          @Override
          public SetLatest setKey(java.lang.String key) {
            return (SetLatest) super.setKey(key);
          }

          @Override
          public SetLatest setOauthToken(java.lang.String oauthToken) {
            return (SetLatest) super.setOauthToken(oauthToken);
          }

          @Override
          public SetLatest setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetLatest) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetLatest setQuotaUser(java.lang.String quotaUser) {
            return (SetLatest) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetLatest setUploadType(java.lang.String uploadType) {
            return (SetLatest) super.setUploadType(uploadType);
          }

          @Override
          public SetLatest setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetLatest) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM ContainerVersion's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public SetLatest setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public SetLatest set(String parameterName, Object value) {
            return (SetLatest) super.set(parameterName, value);
          }
        }
        /**
         * Undeletes a Container Version.
         *
         * Create a request for the method "versions.undelete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Undelete#execute()} method to invoke the remote operation.
         *
         * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
         * @return the request
         */
        public Undelete undelete(java.lang.String path) throws java.io.IOException {
          Undelete result = new Undelete(path);
          initialize(result);
          return result;
        }

        public class Undelete extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersion> {

          private static final String REST_PATH = "tagmanager/v2/{+path}:undelete";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");

          /**
           * Undeletes a Container Version.
           *
           * Create a request for the method "versions.undelete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Undelete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Undelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
           * @since 1.13
           */
          protected Undelete(java.lang.String path) {
            super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.ContainerVersion.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
          }

          @Override
          public Undelete set$Xgafv(java.lang.String $Xgafv) {
            return (Undelete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Undelete setAccessToken(java.lang.String accessToken) {
            return (Undelete) super.setAccessToken(accessToken);
          }

          @Override
          public Undelete setAlt(java.lang.String alt) {
            return (Undelete) super.setAlt(alt);
          }

          @Override
          public Undelete setCallback(java.lang.String callback) {
            return (Undelete) super.setCallback(callback);
          }

          @Override
          public Undelete setFields(java.lang.String fields) {
            return (Undelete) super.setFields(fields);
          }

          @Override
          public Undelete setKey(java.lang.String key) {
            return (Undelete) super.setKey(key);
          }

          @Override
          public Undelete setOauthToken(java.lang.String oauthToken) {
            return (Undelete) super.setOauthToken(oauthToken);
          }

          @Override
          public Undelete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Undelete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Undelete setQuotaUser(java.lang.String quotaUser) {
            return (Undelete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Undelete setUploadType(java.lang.String uploadType) {
            return (Undelete) super.setUploadType(uploadType);
          }

          @Override
          public Undelete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Undelete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM ContainerVersion's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public Undelete setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public Undelete set(String parameterName, Object value) {
            return (Undelete) super.set(parameterName, value);
          }
        }
        /**
         * Updates a Container Version.
         *
         * Create a request for the method "versions.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
         * @param content the {@link com.google.api.services.tagmanager.model.ContainerVersion}
         * @return the request
         */
        public Update update(java.lang.String path, com.google.api.services.tagmanager.model.ContainerVersion content) throws java.io.IOException {
          Update result = new Update(path, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.ContainerVersion> {

          private static final String REST_PATH = "tagmanager/v2/{+path}";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");

          /**
           * Updates a Container Version.
           *
           * Create a request for the method "versions.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM ContainerVersion's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/versions/{version_id}
           * @param content the {@link com.google.api.services.tagmanager.model.ContainerVersion}
           * @since 1.13
           */
          protected Update(java.lang.String path, com.google.api.services.tagmanager.model.ContainerVersion content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.ContainerVersion.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM ContainerVersion's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM ContainerVersion's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/versions/{version_id}
           */
          public Update setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$");
            }
            this.path = path;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the container version in
           * storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the container version in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the container version in
           * storage.
           */
          public Update setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Workspaces collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code TagManager tagmanager = new TagManager(...);}
       *   {@code TagManager.Workspaces.List request = tagmanager.workspaces().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Workspaces workspaces() {
        return new Workspaces();
      }

      /**
       * The "workspaces" collection of methods.
       */
      public class Workspaces {

        /**
         * Creates a Workspace.
         *
         * Create a request for the method "workspaces.create".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @param content the {@link com.google.api.services.tagmanager.model.Workspace}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.Workspace content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Workspace> {

          private static final String REST_PATH = "tagmanager/v2/{+parent}/workspaces";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

          /**
           * Creates a Workspace.
           *
           * Create a request for the method "workspaces.create".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Workspace}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.Workspace content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Workspace.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Workspace.getName()");
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM parent Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * GTM parent Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Creates a Container Version from the entities present in the workspace, deletes the workspace,
         * and sets the base container version to the newly created version.
         *
         * Create a request for the method "workspaces.create_version".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link CreateVersion#execute()} method to invoke the remote operation.
         *
         * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
         * @param content the {@link com.google.api.services.tagmanager.model.CreateContainerVersionRequestVersionOptions}
         * @return the request
         */
        public CreateVersion createVersion(java.lang.String path, com.google.api.services.tagmanager.model.CreateContainerVersionRequestVersionOptions content) throws java.io.IOException {
          CreateVersion result = new CreateVersion(path, content);
          initialize(result);
          return result;
        }

        public class CreateVersion extends TagManagerRequest<com.google.api.services.tagmanager.model.CreateContainerVersionResponse> {

          private static final String REST_PATH = "tagmanager/v2/{+path}:create_version";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

          /**
           * Creates a Container Version from the entities present in the workspace, deletes the workspace,
           * and sets the base container version to the newly created version.
           *
           * Create a request for the method "workspaces.create_version".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link CreateVersion#execute()} method to invoke the remote
           * operation. <p> {@link CreateVersion#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @param content the {@link com.google.api.services.tagmanager.model.CreateContainerVersionRequestVersionOptions}
           * @since 1.13
           */
          protected CreateVersion(java.lang.String path, com.google.api.services.tagmanager.model.CreateContainerVersionRequestVersionOptions content) {
            super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.CreateContainerVersionResponse.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
          }

          @Override
          public CreateVersion set$Xgafv(java.lang.String $Xgafv) {
            return (CreateVersion) super.set$Xgafv($Xgafv);
          }

          @Override
          public CreateVersion setAccessToken(java.lang.String accessToken) {
            return (CreateVersion) super.setAccessToken(accessToken);
          }

          @Override
          public CreateVersion setAlt(java.lang.String alt) {
            return (CreateVersion) super.setAlt(alt);
          }

          @Override
          public CreateVersion setCallback(java.lang.String callback) {
            return (CreateVersion) super.setCallback(callback);
          }

          @Override
          public CreateVersion setFields(java.lang.String fields) {
            return (CreateVersion) super.setFields(fields);
          }

          @Override
          public CreateVersion setKey(java.lang.String key) {
            return (CreateVersion) super.setKey(key);
          }

          @Override
          public CreateVersion setOauthToken(java.lang.String oauthToken) {
            return (CreateVersion) super.setOauthToken(oauthToken);
          }

          @Override
          public CreateVersion setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CreateVersion) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CreateVersion setQuotaUser(java.lang.String quotaUser) {
            return (CreateVersion) super.setQuotaUser(quotaUser);
          }

          @Override
          public CreateVersion setUploadType(java.lang.String uploadType) {
            return (CreateVersion) super.setUploadType(uploadType);
          }

          @Override
          public CreateVersion setUploadProtocol(java.lang.String uploadProtocol) {
            return (CreateVersion) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Workspace's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public CreateVersion setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public CreateVersion set(String parameterName, Object value) {
            return (CreateVersion) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Workspace.
         *
         * Create a request for the method "workspaces.delete".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
         * @return the request
         */
        public Delete delete(java.lang.String path) throws java.io.IOException {
          Delete result = new Delete(path);
          initialize(result);
          return result;
        }

        public class Delete extends TagManagerRequest<Void> {

          private static final String REST_PATH = "tagmanager/v2/{+path}";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

          /**
           * Deletes a Workspace.
           *
           * Create a request for the method "workspaces.delete".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @since 1.13
           */
          protected Delete(java.lang.String path) {
            super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Workspace's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public Delete setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Workspace.
         *
         * Create a request for the method "workspaces.get".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
         * @return the request
         */
        public Get get(java.lang.String path) throws java.io.IOException {
          Get result = new Get(path);
          initialize(result);
          return result;
        }

        public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Workspace> {

          private static final String REST_PATH = "tagmanager/v2/{+path}";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

          /**
           * Gets a Workspace.
           *
           * Create a request for the method "workspaces.get".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @since 1.13
           */
          protected Get(java.lang.String path) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Workspace.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Workspace's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public Get setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Finds conflicting and modified entities in the workspace.
         *
         * Create a request for the method "workspaces.getStatus".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link GetStatus#execute()} method to invoke the remote operation.
         *
         * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
         * @return the request
         */
        public GetStatus getStatus(java.lang.String path) throws java.io.IOException {
          GetStatus result = new GetStatus(path);
          initialize(result);
          return result;
        }

        public class GetStatus extends TagManagerRequest<com.google.api.services.tagmanager.model.GetWorkspaceStatusResponse> {

          private static final String REST_PATH = "tagmanager/v2/{+path}/status";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

          /**
           * Finds conflicting and modified entities in the workspace.
           *
           * Create a request for the method "workspaces.getStatus".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link GetStatus#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetStatus#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @since 1.13
           */
          protected GetStatus(java.lang.String path) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.GetWorkspaceStatusResponse.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetStatus set$Xgafv(java.lang.String $Xgafv) {
            return (GetStatus) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetStatus setAccessToken(java.lang.String accessToken) {
            return (GetStatus) super.setAccessToken(accessToken);
          }

          @Override
          public GetStatus setAlt(java.lang.String alt) {
            return (GetStatus) super.setAlt(alt);
          }

          @Override
          public GetStatus setCallback(java.lang.String callback) {
            return (GetStatus) super.setCallback(callback);
          }

          @Override
          public GetStatus setFields(java.lang.String fields) {
            return (GetStatus) super.setFields(fields);
          }

          @Override
          public GetStatus setKey(java.lang.String key) {
            return (GetStatus) super.setKey(key);
          }

          @Override
          public GetStatus setOauthToken(java.lang.String oauthToken) {
            return (GetStatus) super.setOauthToken(oauthToken);
          }

          @Override
          public GetStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetStatus) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetStatus setQuotaUser(java.lang.String quotaUser) {
            return (GetStatus) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetStatus setUploadType(java.lang.String uploadType) {
            return (GetStatus) super.setUploadType(uploadType);
          }

          @Override
          public GetStatus setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetStatus) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Workspace's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public GetStatus setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public GetStatus set(String parameterName, Object value) {
            return (GetStatus) super.set(parameterName, value);
          }
        }
        /**
         * Lists all Workspaces that belong to a GTM Container.
         *
         * Create a request for the method "workspaces.list".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListWorkspacesResponse> {

          private static final String REST_PATH = "tagmanager/v2/{+parent}/workspaces";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+$");

          /**
           * Lists all Workspaces that belong to a GTM Container.
           *
           * Create a request for the method "workspaces.list".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListWorkspacesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM parent Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * GTM parent Container's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Continuation token for fetching the next page of results. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Continuation token for fetching the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Continuation token for fetching the next page of results. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Quick previews a workspace by creating a fake container version from all entities in the provided
         * workspace.
         *
         * Create a request for the method "workspaces.quick_preview".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link QuickPreview#execute()} method to invoke the remote operation.
         *
         * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
         * @return the request
         */
        public QuickPreview quickPreview(java.lang.String path) throws java.io.IOException {
          QuickPreview result = new QuickPreview(path);
          initialize(result);
          return result;
        }

        public class QuickPreview extends TagManagerRequest<com.google.api.services.tagmanager.model.QuickPreviewResponse> {

          private static final String REST_PATH = "tagmanager/v2/{+path}:quick_preview";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

          /**
           * Quick previews a workspace by creating a fake container version from all entities in the
           * provided workspace.
           *
           * Create a request for the method "workspaces.quick_preview".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link QuickPreview#execute()} method to invoke the remote
           * operation. <p> {@link
           * QuickPreview#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @since 1.13
           */
          protected QuickPreview(java.lang.String path) {
            super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.QuickPreviewResponse.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
          }

          @Override
          public QuickPreview set$Xgafv(java.lang.String $Xgafv) {
            return (QuickPreview) super.set$Xgafv($Xgafv);
          }

          @Override
          public QuickPreview setAccessToken(java.lang.String accessToken) {
            return (QuickPreview) super.setAccessToken(accessToken);
          }

          @Override
          public QuickPreview setAlt(java.lang.String alt) {
            return (QuickPreview) super.setAlt(alt);
          }

          @Override
          public QuickPreview setCallback(java.lang.String callback) {
            return (QuickPreview) super.setCallback(callback);
          }

          @Override
          public QuickPreview setFields(java.lang.String fields) {
            return (QuickPreview) super.setFields(fields);
          }

          @Override
          public QuickPreview setKey(java.lang.String key) {
            return (QuickPreview) super.setKey(key);
          }

          @Override
          public QuickPreview setOauthToken(java.lang.String oauthToken) {
            return (QuickPreview) super.setOauthToken(oauthToken);
          }

          @Override
          public QuickPreview setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (QuickPreview) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public QuickPreview setQuotaUser(java.lang.String quotaUser) {
            return (QuickPreview) super.setQuotaUser(quotaUser);
          }

          @Override
          public QuickPreview setUploadType(java.lang.String uploadType) {
            return (QuickPreview) super.setUploadType(uploadType);
          }

          @Override
          public QuickPreview setUploadProtocol(java.lang.String uploadProtocol) {
            return (QuickPreview) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Workspace's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public QuickPreview setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public QuickPreview set(String parameterName, Object value) {
            return (QuickPreview) super.set(parameterName, value);
          }
        }
        /**
         * Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in
         * the request.
         *
         * Create a request for the method "workspaces.resolve_conflict".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link ResolveConflict#execute()} method to invoke the remote operation.
         *
         * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
         * @param content the {@link com.google.api.services.tagmanager.model.Entity}
         * @return the request
         */
        public ResolveConflict resolveConflict(java.lang.String path, com.google.api.services.tagmanager.model.Entity content) throws java.io.IOException {
          ResolveConflict result = new ResolveConflict(path, content);
          initialize(result);
          return result;
        }

        public class ResolveConflict extends TagManagerRequest<Void> {

          private static final String REST_PATH = "tagmanager/v2/{+path}:resolve_conflict";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

          /**
           * Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed
           * in the request.
           *
           * Create a request for the method "workspaces.resolve_conflict".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link ResolveConflict#execute()} method to invoke the remote
           * operation. <p> {@link ResolveConflict#initialize(com.google.api.client.googleapis.services.Abst
           * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Entity}
           * @since 1.13
           */
          protected ResolveConflict(java.lang.String path, com.google.api.services.tagmanager.model.Entity content) {
            super(TagManager.this, "POST", REST_PATH, content, Void.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
          }

          @Override
          public ResolveConflict set$Xgafv(java.lang.String $Xgafv) {
            return (ResolveConflict) super.set$Xgafv($Xgafv);
          }

          @Override
          public ResolveConflict setAccessToken(java.lang.String accessToken) {
            return (ResolveConflict) super.setAccessToken(accessToken);
          }

          @Override
          public ResolveConflict setAlt(java.lang.String alt) {
            return (ResolveConflict) super.setAlt(alt);
          }

          @Override
          public ResolveConflict setCallback(java.lang.String callback) {
            return (ResolveConflict) super.setCallback(callback);
          }

          @Override
          public ResolveConflict setFields(java.lang.String fields) {
            return (ResolveConflict) super.setFields(fields);
          }

          @Override
          public ResolveConflict setKey(java.lang.String key) {
            return (ResolveConflict) super.setKey(key);
          }

          @Override
          public ResolveConflict setOauthToken(java.lang.String oauthToken) {
            return (ResolveConflict) super.setOauthToken(oauthToken);
          }

          @Override
          public ResolveConflict setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ResolveConflict) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ResolveConflict setQuotaUser(java.lang.String quotaUser) {
            return (ResolveConflict) super.setQuotaUser(quotaUser);
          }

          @Override
          public ResolveConflict setUploadType(java.lang.String uploadType) {
            return (ResolveConflict) super.setUploadType(uploadType);
          }

          @Override
          public ResolveConflict setUploadProtocol(java.lang.String uploadProtocol) {
            return (ResolveConflict) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Workspace's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public ResolveConflict setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
            this.path = path;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the entity_in_workspace
           * in the merge conflict.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge
         conflict.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the entity_in_workspace
           * in the merge conflict.
           */
          public ResolveConflict setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public ResolveConflict set(String parameterName, Object value) {
            return (ResolveConflict) super.set(parameterName, value);
          }
        }
        /**
         * Syncs a workspace to the latest container version by updating all unmodified workspace entities
         * and displaying conflicts for modified entities.
         *
         * Create a request for the method "workspaces.sync".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Sync#execute()} method to invoke the remote operation.
         *
         * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
         * @return the request
         */
        public Sync sync(java.lang.String path) throws java.io.IOException {
          Sync result = new Sync(path);
          initialize(result);
          return result;
        }

        public class Sync extends TagManagerRequest<com.google.api.services.tagmanager.model.SyncWorkspaceResponse> {

          private static final String REST_PATH = "tagmanager/v2/{+path}:sync";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

          /**
           * Syncs a workspace to the latest container version by updating all unmodified workspace entities
           * and displaying conflicts for modified entities.
           *
           * Create a request for the method "workspaces.sync".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Sync#execute()} method to invoke the remote operation. <p>
           * {@link Sync#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @since 1.13
           */
          protected Sync(java.lang.String path) {
            super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.SyncWorkspaceResponse.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
          }

          @Override
          public Sync set$Xgafv(java.lang.String $Xgafv) {
            return (Sync) super.set$Xgafv($Xgafv);
          }

          @Override
          public Sync setAccessToken(java.lang.String accessToken) {
            return (Sync) super.setAccessToken(accessToken);
          }

          @Override
          public Sync setAlt(java.lang.String alt) {
            return (Sync) super.setAlt(alt);
          }

          @Override
          public Sync setCallback(java.lang.String callback) {
            return (Sync) super.setCallback(callback);
          }

          @Override
          public Sync setFields(java.lang.String fields) {
            return (Sync) super.setFields(fields);
          }

          @Override
          public Sync setKey(java.lang.String key) {
            return (Sync) super.setKey(key);
          }

          @Override
          public Sync setOauthToken(java.lang.String oauthToken) {
            return (Sync) super.setOauthToken(oauthToken);
          }

          @Override
          public Sync setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Sync) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Sync setQuotaUser(java.lang.String quotaUser) {
            return (Sync) super.setQuotaUser(quotaUser);
          }

          @Override
          public Sync setUploadType(java.lang.String uploadType) {
            return (Sync) super.setUploadType(uploadType);
          }

          @Override
          public Sync setUploadProtocol(java.lang.String uploadProtocol) {
            return (Sync) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Workspace's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public Sync setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
            this.path = path;
            return this;
          }

          @Override
          public Sync set(String parameterName, Object value) {
            return (Sync) super.set(parameterName, value);
          }
        }
        /**
         * Updates a Workspace.
         *
         * Create a request for the method "workspaces.update".
         *
         * This request holds the parameters needed by the tagmanager server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
         * @param content the {@link com.google.api.services.tagmanager.model.Workspace}
         * @return the request
         */
        public Update update(java.lang.String path, com.google.api.services.tagmanager.model.Workspace content) throws java.io.IOException {
          Update result = new Update(path, content);
          initialize(result);
          return result;
        }

        public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Workspace> {

          private static final String REST_PATH = "tagmanager/v2/{+path}";

          private final java.util.regex.Pattern PATH_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

          /**
           * Updates a Workspace.
           *
           * Create a request for the method "workspaces.update".
           *
           * This request holds the parameters needed by the the tagmanager server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param path GTM Workspace's API relative path. Example:
         *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Workspace}
           * @since 1.13
           */
          protected Update(java.lang.String path, com.google.api.services.tagmanager.model.Workspace content) {
            super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Workspace.class);
            this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
            checkRequiredParameter(content, "content");
            checkRequiredParameter(content.getName(), "Workspace.getName()");
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String path;

          /** GTM Workspace's API relative path. Example:
         accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public java.lang.String getPath() {
            return path;
          }

          /**
           * GTM Workspace's API relative path. Example:
           * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           */
          public Update setPath(java.lang.String path) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                  "Parameter path must conform to the pattern " +
                  "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
            }
            this.path = path;
            return this;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the workspace in storage.
           */
          @com.google.api.client.util.Key
          private java.lang.String fingerprint;

          /** When provided, this fingerprint must match the fingerprint of the workspace in storage.
           */
          public java.lang.String getFingerprint() {
            return fingerprint;
          }

          /**
           * When provided, this fingerprint must match the fingerprint of the workspace in storage.
           */
          public Update setFingerprint(java.lang.String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the BuiltInVariables collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code TagManager tagmanager = new TagManager(...);}
         *   {@code TagManager.BuiltInVariables.List request = tagmanager.builtInVariables().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public BuiltInVariables builtInVariables() {
          return new BuiltInVariables();
        }

        /**
         * The "built_in_variables" collection of methods.
         */
        public class BuiltInVariables {

          /**
           * Creates one or more GTM Built-In Variables.
           *
           * Create a request for the method "built_in_variables.create".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @return the request
           */
          public Create create(java.lang.String parent) throws java.io.IOException {
            Create result = new Create(parent);
            initialize(result);
            return result;
          }

          public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.CreateBuiltInVariableResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/built_in_variables";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Creates one or more GTM Built-In Variables.
             *
             * Create a request for the method "built_in_variables.create".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @since 1.13
             */
            protected Create(java.lang.String parent) {
              super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.CreateBuiltInVariableResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The types of built-in variables to enable. */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> type;

            /** The types of built-in variables to enable.
             */
            public java.util.List<java.lang.String> getType() {
              return type;
            }

            /** The types of built-in variables to enable. */
            public Create setType(java.util.List<java.lang.String> type) {
              this.type = type;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes one or more GTM Built-In Variables.
           *
           * Create a request for the method "built_in_variables.delete".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param path GTM BuiltInVariable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variabl
           *        es
           * @return the request
           */
          public Delete delete(java.lang.String path) throws java.io.IOException {
            Delete result = new Delete(path);
            initialize(result);
            return result;
          }

          public class Delete extends TagManagerRequest<Void> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$");

            /**
             * Deletes one or more GTM Built-In Variables.
             *
             * Create a request for the method "built_in_variables.delete".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM BuiltInVariable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variabl
           *        es
             * @since 1.13
             */
            protected Delete(java.lang.String path) {
              super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/built_in_variables
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM BuiltInVariable's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/built_in_variables
             */
            public Delete setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$");
              }
              this.path = path;
              return this;
            }

            /** The types of built-in variables to delete. */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> type;

            /** The types of built-in variables to delete.
             */
            public java.util.List<java.lang.String> getType() {
              return type;
            }

            /** The types of built-in variables to delete. */
            public Delete setType(java.util.List<java.lang.String> type) {
              this.type = type;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Lists all the enabled Built-In Variables of a GTM Container.
           *
           * Create a request for the method "built_in_variables.list".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListEnabledBuiltInVariablesResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/built_in_variables";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Lists all the enabled Built-In Variables of a GTM Container.
             *
             * Create a request for the method "built_in_variables.list".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListEnabledBuiltInVariablesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Continuation token for fetching the next page of results. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Continuation token for fetching the next page of results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Continuation token for fetching the next page of results. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Reverts changes to a GTM Built-In Variables in a GTM Workspace.
           *
           * Create a request for the method "built_in_variables.revert".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Revert#execute()} method to invoke the remote operation.
           *
           * @param path GTM BuiltInVariable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variabl
           *        es
           * @return the request
           */
          public Revert revert(java.lang.String path) throws java.io.IOException {
            Revert result = new Revert(path);
            initialize(result);
            return result;
          }

          public class Revert extends TagManagerRequest<com.google.api.services.tagmanager.model.RevertBuiltInVariableResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+path}/built_in_variables:revert";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Reverts changes to a GTM Built-In Variables in a GTM Workspace.
             *
             * Create a request for the method "built_in_variables.revert".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Revert#execute()} method to invoke the remote operation.
             * <p> {@link
             * Revert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM BuiltInVariable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variabl
           *        es
             * @since 1.13
             */
            protected Revert(java.lang.String path) {
              super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.RevertBuiltInVariableResponse.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public Revert set$Xgafv(java.lang.String $Xgafv) {
              return (Revert) super.set$Xgafv($Xgafv);
            }

            @Override
            public Revert setAccessToken(java.lang.String accessToken) {
              return (Revert) super.setAccessToken(accessToken);
            }

            @Override
            public Revert setAlt(java.lang.String alt) {
              return (Revert) super.setAlt(alt);
            }

            @Override
            public Revert setCallback(java.lang.String callback) {
              return (Revert) super.setCallback(callback);
            }

            @Override
            public Revert setFields(java.lang.String fields) {
              return (Revert) super.setFields(fields);
            }

            @Override
            public Revert setKey(java.lang.String key) {
              return (Revert) super.setKey(key);
            }

            @Override
            public Revert setOauthToken(java.lang.String oauthToken) {
              return (Revert) super.setOauthToken(oauthToken);
            }

            @Override
            public Revert setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Revert) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Revert setQuotaUser(java.lang.String quotaUser) {
              return (Revert) super.setQuotaUser(quotaUser);
            }

            @Override
            public Revert setUploadType(java.lang.String uploadType) {
              return (Revert) super.setUploadType(uploadType);
            }

            @Override
            public Revert setUploadProtocol(java.lang.String uploadProtocol) {
              return (Revert) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/built_in_variables
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM BuiltInVariable's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/built_in_variables
             */
            public Revert setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /** The type of built-in variable to revert. */
            @com.google.api.client.util.Key
            private java.lang.String type;

            /** The type of built-in variable to revert.
             */
            public java.lang.String getType() {
              return type;
            }

            /** The type of built-in variable to revert. */
            public Revert setType(java.lang.String type) {
              this.type = type;
              return this;
            }

            @Override
            public Revert set(String parameterName, Object value) {
              return (Revert) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Folders collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code TagManager tagmanager = new TagManager(...);}
         *   {@code TagManager.Folders.List request = tagmanager.folders().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Folders folders() {
          return new Folders();
        }

        /**
         * The "folders" collection of methods.
         */
        public class Folders {

          /**
           * Creates a GTM Folder.
           *
           * Create a request for the method "folders.create".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Folder}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.Folder content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Folder> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/folders";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Creates a GTM Folder.
             *
             * Create a request for the method "folders.create".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @param content the {@link com.google.api.services.tagmanager.model.Folder}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.Folder content) {
              super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Folder.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getName(), "Folder.getName()");
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a GTM Folder.
           *
           * Create a request for the method "folders.delete".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
           * @return the request
           */
          public Delete delete(java.lang.String path) throws java.io.IOException {
            Delete result = new Delete(path);
            initialize(result);
            return result;
          }

          public class Delete extends TagManagerRequest<Void> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");

            /**
             * Deletes a GTM Folder.
             *
             * Create a request for the method "folders.delete".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
             * @since 1.13
             */
            protected Delete(java.lang.String path) {
              super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Folder's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public Delete setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * List all entities in a GTM Folder.
           *
           * Create a request for the method "folders.entities".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Entities#execute()} method to invoke the remote operation.
           *
           * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
           * @return the request
           */
          public Entities entities(java.lang.String path) throws java.io.IOException {
            Entities result = new Entities(path);
            initialize(result);
            return result;
          }

          public class Entities extends TagManagerRequest<com.google.api.services.tagmanager.model.FolderEntities> {

            private static final String REST_PATH = "tagmanager/v2/{+path}:entities";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");

            /**
             * List all entities in a GTM Folder.
             *
             * Create a request for the method "folders.entities".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Entities#execute()} method to invoke the remote operation.
             * <p> {@link
             * Entities#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
             * @since 1.13
             */
            protected Entities(java.lang.String path) {
              super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.FolderEntities.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
            }

            @Override
            public Entities set$Xgafv(java.lang.String $Xgafv) {
              return (Entities) super.set$Xgafv($Xgafv);
            }

            @Override
            public Entities setAccessToken(java.lang.String accessToken) {
              return (Entities) super.setAccessToken(accessToken);
            }

            @Override
            public Entities setAlt(java.lang.String alt) {
              return (Entities) super.setAlt(alt);
            }

            @Override
            public Entities setCallback(java.lang.String callback) {
              return (Entities) super.setCallback(callback);
            }

            @Override
            public Entities setFields(java.lang.String fields) {
              return (Entities) super.setFields(fields);
            }

            @Override
            public Entities setKey(java.lang.String key) {
              return (Entities) super.setKey(key);
            }

            @Override
            public Entities setOauthToken(java.lang.String oauthToken) {
              return (Entities) super.setOauthToken(oauthToken);
            }

            @Override
            public Entities setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Entities) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Entities setQuotaUser(java.lang.String quotaUser) {
              return (Entities) super.setQuotaUser(quotaUser);
            }

            @Override
            public Entities setUploadType(java.lang.String uploadType) {
              return (Entities) super.setUploadType(uploadType);
            }

            @Override
            public Entities setUploadProtocol(java.lang.String uploadProtocol) {
              return (Entities) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Folder's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public Entities setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /** Continuation token for fetching the next page of results. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Continuation token for fetching the next page of results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Continuation token for fetching the next page of results. */
            public Entities setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public Entities set(String parameterName, Object value) {
              return (Entities) super.set(parameterName, value);
            }
          }
          /**
           * Gets a GTM Folder.
           *
           * Create a request for the method "folders.get".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
           * @return the request
           */
          public Get get(java.lang.String path) throws java.io.IOException {
            Get result = new Get(path);
            initialize(result);
            return result;
          }

          public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Folder> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");

            /**
             * Gets a GTM Folder.
             *
             * Create a request for the method "folders.get".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
             * @since 1.13
             */
            protected Get(java.lang.String path) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Folder.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Folder's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public Get setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all GTM Folders of a Container.
           *
           * Create a request for the method "folders.list".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListFoldersResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/folders";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Lists all GTM Folders of a Container.
             *
             * Create a request for the method "folders.list".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListFoldersResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Continuation token for fetching the next page of results. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Continuation token for fetching the next page of results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Continuation token for fetching the next page of results. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Moves entities to a GTM Folder.
           *
           * Create a request for the method "folders.move_entities_to_folder".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link MoveEntitiesToFolder#execute()} method to invoke the remote
           * operation.
           *
           * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
           * @param content the {@link com.google.api.services.tagmanager.model.Folder}
           * @return the request
           */
          public MoveEntitiesToFolder moveEntitiesToFolder(java.lang.String path, com.google.api.services.tagmanager.model.Folder content) throws java.io.IOException {
            MoveEntitiesToFolder result = new MoveEntitiesToFolder(path, content);
            initialize(result);
            return result;
          }

          public class MoveEntitiesToFolder extends TagManagerRequest<Void> {

            private static final String REST_PATH = "tagmanager/v2/{+path}:move_entities_to_folder";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");

            /**
             * Moves entities to a GTM Folder.
             *
             * Create a request for the method "folders.move_entities_to_folder".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link MoveEntitiesToFolder#execute()} method to invoke the
             * remote operation. <p> {@link MoveEntitiesToFolder#initialize(com.google.api.client.googleapis.s
             * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
             * @param content the {@link com.google.api.services.tagmanager.model.Folder}
             * @since 1.13
             */
            protected MoveEntitiesToFolder(java.lang.String path, com.google.api.services.tagmanager.model.Folder content) {
              super(TagManager.this, "POST", REST_PATH, content, Void.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
            }

            @Override
            public MoveEntitiesToFolder set$Xgafv(java.lang.String $Xgafv) {
              return (MoveEntitiesToFolder) super.set$Xgafv($Xgafv);
            }

            @Override
            public MoveEntitiesToFolder setAccessToken(java.lang.String accessToken) {
              return (MoveEntitiesToFolder) super.setAccessToken(accessToken);
            }

            @Override
            public MoveEntitiesToFolder setAlt(java.lang.String alt) {
              return (MoveEntitiesToFolder) super.setAlt(alt);
            }

            @Override
            public MoveEntitiesToFolder setCallback(java.lang.String callback) {
              return (MoveEntitiesToFolder) super.setCallback(callback);
            }

            @Override
            public MoveEntitiesToFolder setFields(java.lang.String fields) {
              return (MoveEntitiesToFolder) super.setFields(fields);
            }

            @Override
            public MoveEntitiesToFolder setKey(java.lang.String key) {
              return (MoveEntitiesToFolder) super.setKey(key);
            }

            @Override
            public MoveEntitiesToFolder setOauthToken(java.lang.String oauthToken) {
              return (MoveEntitiesToFolder) super.setOauthToken(oauthToken);
            }

            @Override
            public MoveEntitiesToFolder setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (MoveEntitiesToFolder) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public MoveEntitiesToFolder setQuotaUser(java.lang.String quotaUser) {
              return (MoveEntitiesToFolder) super.setQuotaUser(quotaUser);
            }

            @Override
            public MoveEntitiesToFolder setUploadType(java.lang.String uploadType) {
              return (MoveEntitiesToFolder) super.setUploadType(uploadType);
            }

            @Override
            public MoveEntitiesToFolder setUploadProtocol(java.lang.String uploadProtocol) {
              return (MoveEntitiesToFolder) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Folder's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public MoveEntitiesToFolder setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /** The tags to be moved to the folder. */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> tagId;

            /** The tags to be moved to the folder.
             */
            public java.util.List<java.lang.String> getTagId() {
              return tagId;
            }

            /** The tags to be moved to the folder. */
            public MoveEntitiesToFolder setTagId(java.util.List<java.lang.String> tagId) {
              this.tagId = tagId;
              return this;
            }

            /** The triggers to be moved to the folder. */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> triggerId;

            /** The triggers to be moved to the folder.
             */
            public java.util.List<java.lang.String> getTriggerId() {
              return triggerId;
            }

            /** The triggers to be moved to the folder. */
            public MoveEntitiesToFolder setTriggerId(java.util.List<java.lang.String> triggerId) {
              this.triggerId = triggerId;
              return this;
            }

            /** The variables to be moved to the folder. */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> variableId;

            /** The variables to be moved to the folder.
             */
            public java.util.List<java.lang.String> getVariableId() {
              return variableId;
            }

            /** The variables to be moved to the folder. */
            public MoveEntitiesToFolder setVariableId(java.util.List<java.lang.String> variableId) {
              this.variableId = variableId;
              return this;
            }

            @Override
            public MoveEntitiesToFolder set(String parameterName, Object value) {
              return (MoveEntitiesToFolder) super.set(parameterName, value);
            }
          }
          /**
           * Reverts changes to a GTM Folder in a GTM Workspace.
           *
           * Create a request for the method "folders.revert".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Revert#execute()} method to invoke the remote operation.
           *
           * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
           * @return the request
           */
          public Revert revert(java.lang.String path) throws java.io.IOException {
            Revert result = new Revert(path);
            initialize(result);
            return result;
          }

          public class Revert extends TagManagerRequest<com.google.api.services.tagmanager.model.RevertFolderResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+path}:revert";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");

            /**
             * Reverts changes to a GTM Folder in a GTM Workspace.
             *
             * Create a request for the method "folders.revert".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Revert#execute()} method to invoke the remote operation.
             * <p> {@link
             * Revert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
             * @since 1.13
             */
            protected Revert(java.lang.String path) {
              super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.RevertFolderResponse.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
            }

            @Override
            public Revert set$Xgafv(java.lang.String $Xgafv) {
              return (Revert) super.set$Xgafv($Xgafv);
            }

            @Override
            public Revert setAccessToken(java.lang.String accessToken) {
              return (Revert) super.setAccessToken(accessToken);
            }

            @Override
            public Revert setAlt(java.lang.String alt) {
              return (Revert) super.setAlt(alt);
            }

            @Override
            public Revert setCallback(java.lang.String callback) {
              return (Revert) super.setCallback(callback);
            }

            @Override
            public Revert setFields(java.lang.String fields) {
              return (Revert) super.setFields(fields);
            }

            @Override
            public Revert setKey(java.lang.String key) {
              return (Revert) super.setKey(key);
            }

            @Override
            public Revert setOauthToken(java.lang.String oauthToken) {
              return (Revert) super.setOauthToken(oauthToken);
            }

            @Override
            public Revert setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Revert) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Revert setQuotaUser(java.lang.String quotaUser) {
              return (Revert) super.setQuotaUser(quotaUser);
            }

            @Override
            public Revert setUploadType(java.lang.String uploadType) {
              return (Revert) super.setUploadType(uploadType);
            }

            @Override
            public Revert setUploadProtocol(java.lang.String uploadProtocol) {
              return (Revert) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Folder's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public Revert setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the tag in storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the tag in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the tag in storage.
             */
            public Revert setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Revert set(String parameterName, Object value) {
              return (Revert) super.set(parameterName, value);
            }
          }
          /**
           * Updates a GTM Folder.
           *
           * Create a request for the method "folders.update".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
           * @param content the {@link com.google.api.services.tagmanager.model.Folder}
           * @return the request
           */
          public Update update(java.lang.String path, com.google.api.services.tagmanager.model.Folder content) throws java.io.IOException {
            Update result = new Update(path, content);
            initialize(result);
            return result;
          }

          public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Folder> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");

            /**
             * Updates a GTM Folder.
             *
             * Create a request for the method "folders.update".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
             * <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Folder's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_
           *        id}
             * @param content the {@link com.google.api.services.tagmanager.model.Folder}
             * @since 1.13
             */
            protected Update(java.lang.String path, com.google.api.services.tagmanager.model.Folder content) {
              super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Folder.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getName(), "Folder.getName()");
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Folder's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_
             * id}/workspaces/{workspace_id}/folders/{folder_id}
             */
            public Update setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the folder in storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the folder in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the folder in storage.
             */
            public Update setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Tags collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code TagManager tagmanager = new TagManager(...);}
         *   {@code TagManager.Tags.List request = tagmanager.tags().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Tags tags() {
          return new Tags();
        }

        /**
         * The "tags" collection of methods.
         */
        public class Tags {

          /**
           * Creates a GTM Tag.
           *
           * Create a request for the method "tags.create".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Tag}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.Tag content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Tag> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/tags";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Creates a GTM Tag.
             *
             * Create a request for the method "tags.create".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @param content the {@link com.google.api.services.tagmanager.model.Tag}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.Tag content) {
              super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Tag.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getName(), "Tag.getName()");
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getType(), "Tag.getType()");
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a GTM Tag.
           *
           * Create a request for the method "tags.delete".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param path GTM Tag's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
           * @return the request
           */
          public Delete delete(java.lang.String path) throws java.io.IOException {
            Delete result = new Delete(path);
            initialize(result);
            return result;
          }

          public class Delete extends TagManagerRequest<Void> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");

            /**
             * Deletes a GTM Tag.
             *
             * Create a request for the method "tags.delete".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Tag's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
             * @since 1.13
             */
            protected Delete(java.lang.String path) {
              super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}
             * /workspaces/{workspace_id}/tags/{tag_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Tag's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}
             * /workspaces/{workspace_id}/tags/{tag_id}
             */
            public Delete setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a GTM Tag.
           *
           * Create a request for the method "tags.get".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param path GTM Tag's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
           * @return the request
           */
          public Get get(java.lang.String path) throws java.io.IOException {
            Get result = new Get(path);
            initialize(result);
            return result;
          }

          public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Tag> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");

            /**
             * Gets a GTM Tag.
             *
             * Create a request for the method "tags.get".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Tag's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
             * @since 1.13
             */
            protected Get(java.lang.String path) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Tag.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}
             * /workspaces/{workspace_id}/tags/{tag_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Tag's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}
             * /workspaces/{workspace_id}/tags/{tag_id}
             */
            public Get setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all GTM Tags of a Container.
           *
           * Create a request for the method "tags.list".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListTagsResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/tags";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Lists all GTM Tags of a Container.
             *
             * Create a request for the method "tags.list".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListTagsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Continuation token for fetching the next page of results. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Continuation token for fetching the next page of results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Continuation token for fetching the next page of results. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Reverts changes to a GTM Tag in a GTM Workspace.
           *
           * Create a request for the method "tags.revert".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Revert#execute()} method to invoke the remote operation.
           *
           * @param path GTM Tag's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
           * @return the request
           */
          public Revert revert(java.lang.String path) throws java.io.IOException {
            Revert result = new Revert(path);
            initialize(result);
            return result;
          }

          public class Revert extends TagManagerRequest<com.google.api.services.tagmanager.model.RevertTagResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+path}:revert";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");

            /**
             * Reverts changes to a GTM Tag in a GTM Workspace.
             *
             * Create a request for the method "tags.revert".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Revert#execute()} method to invoke the remote operation.
             * <p> {@link
             * Revert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Tag's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
             * @since 1.13
             */
            protected Revert(java.lang.String path) {
              super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.RevertTagResponse.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");
              }
            }

            @Override
            public Revert set$Xgafv(java.lang.String $Xgafv) {
              return (Revert) super.set$Xgafv($Xgafv);
            }

            @Override
            public Revert setAccessToken(java.lang.String accessToken) {
              return (Revert) super.setAccessToken(accessToken);
            }

            @Override
            public Revert setAlt(java.lang.String alt) {
              return (Revert) super.setAlt(alt);
            }

            @Override
            public Revert setCallback(java.lang.String callback) {
              return (Revert) super.setCallback(callback);
            }

            @Override
            public Revert setFields(java.lang.String fields) {
              return (Revert) super.setFields(fields);
            }

            @Override
            public Revert setKey(java.lang.String key) {
              return (Revert) super.setKey(key);
            }

            @Override
            public Revert setOauthToken(java.lang.String oauthToken) {
              return (Revert) super.setOauthToken(oauthToken);
            }

            @Override
            public Revert setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Revert) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Revert setQuotaUser(java.lang.String quotaUser) {
              return (Revert) super.setQuotaUser(quotaUser);
            }

            @Override
            public Revert setUploadType(java.lang.String uploadType) {
              return (Revert) super.setUploadType(uploadType);
            }

            @Override
            public Revert setUploadProtocol(java.lang.String uploadProtocol) {
              return (Revert) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}
             * /workspaces/{workspace_id}/tags/{tag_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Tag's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}
             * /workspaces/{workspace_id}/tags/{tag_id}
             */
            public Revert setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /** When provided, this fingerprint must match the fingerprint of thetag in storage. */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of thetag in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /** When provided, this fingerprint must match the fingerprint of thetag in storage. */
            public Revert setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Revert set(String parameterName, Object value) {
              return (Revert) super.set(parameterName, value);
            }
          }
          /**
           * Updates a GTM Tag.
           *
           * Create a request for the method "tags.update".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param path GTM Tag's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Tag}
           * @return the request
           */
          public Update update(java.lang.String path, com.google.api.services.tagmanager.model.Tag content) throws java.io.IOException {
            Update result = new Update(path, content);
            initialize(result);
            return result;
          }

          public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Tag> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");

            /**
             * Updates a GTM Tag.
             *
             * Create a request for the method "tags.update".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
             * <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Tag's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
             * @param content the {@link com.google.api.services.tagmanager.model.Tag}
             * @since 1.13
             */
            protected Update(java.lang.String path, com.google.api.services.tagmanager.model.Tag content) {
              super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Tag.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");
              }
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getName(), "Tag.getName()");
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getType(), "Tag.getType()");
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}
             * /workspaces/{workspace_id}/tags/{tag_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Tag's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}
             * /workspaces/{workspace_id}/tags/{tag_id}
             */
            public Update setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the tag in storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the tag in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the tag in storage.
             */
            public Update setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Templates collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code TagManager tagmanager = new TagManager(...);}
         *   {@code TagManager.Templates.List request = tagmanager.templates().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Templates templates() {
          return new Templates();
        }

        /**
         * The "templates" collection of methods.
         */
        public class Templates {

          /**
           * Creates a GTM Custom Template.
           *
           * Create a request for the method "templates.create".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @param content the {@link com.google.api.services.tagmanager.model.CustomTemplate}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.CustomTemplate content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.CustomTemplate> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/templates";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Creates a GTM Custom Template.
             *
             * Create a request for the method "templates.create".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @param content the {@link com.google.api.services.tagmanager.model.CustomTemplate}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.CustomTemplate content) {
              super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.CustomTemplate.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a GTM Template.
           *
           * Create a request for the method "templates.delete".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param path GTM Custom Template's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{templ
           *        ate_id}
           * @return the request
           */
          public Delete delete(java.lang.String path) throws java.io.IOException {
            Delete result = new Delete(path);
            initialize(result);
            return result;
          }

          public class Delete extends TagManagerRequest<Void> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");

            /**
             * Deletes a GTM Template.
             *
             * Create a request for the method "templates.delete".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Custom Template's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{templ
           *        ate_id}
             * @since 1.13
             */
            protected Delete(java.lang.String path) {
              super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Custom Template's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            public Delete setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a GTM Template.
           *
           * Create a request for the method "templates.get".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param path GTM Custom Template's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{templ
           *        ate_id}
           * @return the request
           */
          public Get get(java.lang.String path) throws java.io.IOException {
            Get result = new Get(path);
            initialize(result);
            return result;
          }

          public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.CustomTemplate> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");

            /**
             * Gets a GTM Template.
             *
             * Create a request for the method "templates.get".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Custom Template's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{templ
           *        ate_id}
             * @since 1.13
             */
            protected Get(java.lang.String path) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.CustomTemplate.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Custom Template's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            public Get setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all GTM Templates of a GTM container workspace.
           *
           * Create a request for the method "templates.list".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListTemplatesResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/templates";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Lists all GTM Templates of a GTM container workspace.
             *
             * Create a request for the method "templates.list".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListTemplatesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Continuation token for fetching the next page of results. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Continuation token for fetching the next page of results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Continuation token for fetching the next page of results. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Reverts changes to a GTM Template in a GTM Workspace.
           *
           * Create a request for the method "templates.revert".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Revert#execute()} method to invoke the remote operation.
           *
           * @param path GTM Custom Template's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{templ
           *        ate_id}
           * @return the request
           */
          public Revert revert(java.lang.String path) throws java.io.IOException {
            Revert result = new Revert(path);
            initialize(result);
            return result;
          }

          public class Revert extends TagManagerRequest<com.google.api.services.tagmanager.model.RevertTemplateResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+path}:revert";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");

            /**
             * Reverts changes to a GTM Template in a GTM Workspace.
             *
             * Create a request for the method "templates.revert".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Revert#execute()} method to invoke the remote operation.
             * <p> {@link
             * Revert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Custom Template's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{templ
           *        ate_id}
             * @since 1.13
             */
            protected Revert(java.lang.String path) {
              super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.RevertTemplateResponse.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");
              }
            }

            @Override
            public Revert set$Xgafv(java.lang.String $Xgafv) {
              return (Revert) super.set$Xgafv($Xgafv);
            }

            @Override
            public Revert setAccessToken(java.lang.String accessToken) {
              return (Revert) super.setAccessToken(accessToken);
            }

            @Override
            public Revert setAlt(java.lang.String alt) {
              return (Revert) super.setAlt(alt);
            }

            @Override
            public Revert setCallback(java.lang.String callback) {
              return (Revert) super.setCallback(callback);
            }

            @Override
            public Revert setFields(java.lang.String fields) {
              return (Revert) super.setFields(fields);
            }

            @Override
            public Revert setKey(java.lang.String key) {
              return (Revert) super.setKey(key);
            }

            @Override
            public Revert setOauthToken(java.lang.String oauthToken) {
              return (Revert) super.setOauthToken(oauthToken);
            }

            @Override
            public Revert setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Revert) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Revert setQuotaUser(java.lang.String quotaUser) {
              return (Revert) super.setQuotaUser(quotaUser);
            }

            @Override
            public Revert setUploadType(java.lang.String uploadType) {
              return (Revert) super.setUploadType(uploadType);
            }

            @Override
            public Revert setUploadProtocol(java.lang.String uploadProtocol) {
              return (Revert) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Custom Template's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            public Revert setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the template in
             * storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the template in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the template in
             * storage.
             */
            public Revert setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Revert set(String parameterName, Object value) {
              return (Revert) super.set(parameterName, value);
            }
          }
          /**
           * Updates a GTM Template.
           *
           * Create a request for the method "templates.update".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param path GTM Custom Template's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{templ
           *        ate_id}
           * @param content the {@link com.google.api.services.tagmanager.model.CustomTemplate}
           * @return the request
           */
          public Update update(java.lang.String path, com.google.api.services.tagmanager.model.CustomTemplate content) throws java.io.IOException {
            Update result = new Update(path, content);
            initialize(result);
            return result;
          }

          public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.CustomTemplate> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");

            /**
             * Updates a GTM Template.
             *
             * Create a request for the method "templates.update".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
             * <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Custom Template's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{templ
           *        ate_id}
             * @param content the {@link com.google.api.services.tagmanager.model.CustomTemplate}
             * @since 1.13
             */
            protected Update(java.lang.String path, com.google.api.services.tagmanager.model.CustomTemplate content) {
              super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.CustomTemplate.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");
              }
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Custom Template's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{c
             * ontainer_id}/workspaces/{workspace_id}/templates/{template_id}
             */
            public Update setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the templates in
             * storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the templates in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the templates in
             * storage.
             */
            public Update setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Triggers collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code TagManager tagmanager = new TagManager(...);}
         *   {@code TagManager.Triggers.List request = tagmanager.triggers().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Triggers triggers() {
          return new Triggers();
        }

        /**
         * The "triggers" collection of methods.
         */
        public class Triggers {

          /**
           * Creates a GTM Trigger.
           *
           * Create a request for the method "triggers.create".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspaces's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Trigger}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.Trigger content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Trigger> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/triggers";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Creates a GTM Trigger.
             *
             * Create a request for the method "triggers.create".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspaces's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @param content the {@link com.google.api.services.tagmanager.model.Trigger}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.Trigger content) {
              super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Trigger.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getName(), "Trigger.getName()");
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getType(), "Trigger.getType()");
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspaces's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspaces's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspaces's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a GTM Trigger.
           *
           * Create a request for the method "triggers.delete".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param path GTM Trigger's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigge
           *        r_id}
           * @return the request
           */
          public Delete delete(java.lang.String path) throws java.io.IOException {
            Delete result = new Delete(path);
            initialize(result);
            return result;
          }

          public class Delete extends TagManagerRequest<Void> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");

            /**
             * Deletes a GTM Trigger.
             *
             * Create a request for the method "triggers.delete".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Trigger's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigge
           *        r_id}
             * @since 1.13
             */
            protected Delete(java.lang.String path) {
              super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container
             * _id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Trigger's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container
             * _id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            public Delete setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a GTM Trigger.
           *
           * Create a request for the method "triggers.get".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param path GTM Trigger's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigge
           *        r_id}
           * @return the request
           */
          public Get get(java.lang.String path) throws java.io.IOException {
            Get result = new Get(path);
            initialize(result);
            return result;
          }

          public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Trigger> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");

            /**
             * Gets a GTM Trigger.
             *
             * Create a request for the method "triggers.get".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Trigger's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigge
           *        r_id}
             * @since 1.13
             */
            protected Get(java.lang.String path) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Trigger.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container
             * _id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Trigger's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container
             * _id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            public Get setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all GTM Triggers of a Container.
           *
           * Create a request for the method "triggers.list".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspaces's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListTriggersResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/triggers";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Lists all GTM Triggers of a Container.
             *
             * Create a request for the method "triggers.list".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspaces's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListTriggersResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspaces's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspaces's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspaces's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Continuation token for fetching the next page of results. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Continuation token for fetching the next page of results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Continuation token for fetching the next page of results. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Reverts changes to a GTM Trigger in a GTM Workspace.
           *
           * Create a request for the method "triggers.revert".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Revert#execute()} method to invoke the remote operation.
           *
           * @param path GTM Trigger's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigge
           *        r_id}
           * @return the request
           */
          public Revert revert(java.lang.String path) throws java.io.IOException {
            Revert result = new Revert(path);
            initialize(result);
            return result;
          }

          public class Revert extends TagManagerRequest<com.google.api.services.tagmanager.model.RevertTriggerResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+path}:revert";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");

            /**
             * Reverts changes to a GTM Trigger in a GTM Workspace.
             *
             * Create a request for the method "triggers.revert".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Revert#execute()} method to invoke the remote operation.
             * <p> {@link
             * Revert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Trigger's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigge
           *        r_id}
             * @since 1.13
             */
            protected Revert(java.lang.String path) {
              super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.RevertTriggerResponse.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");
              }
            }

            @Override
            public Revert set$Xgafv(java.lang.String $Xgafv) {
              return (Revert) super.set$Xgafv($Xgafv);
            }

            @Override
            public Revert setAccessToken(java.lang.String accessToken) {
              return (Revert) super.setAccessToken(accessToken);
            }

            @Override
            public Revert setAlt(java.lang.String alt) {
              return (Revert) super.setAlt(alt);
            }

            @Override
            public Revert setCallback(java.lang.String callback) {
              return (Revert) super.setCallback(callback);
            }

            @Override
            public Revert setFields(java.lang.String fields) {
              return (Revert) super.setFields(fields);
            }

            @Override
            public Revert setKey(java.lang.String key) {
              return (Revert) super.setKey(key);
            }

            @Override
            public Revert setOauthToken(java.lang.String oauthToken) {
              return (Revert) super.setOauthToken(oauthToken);
            }

            @Override
            public Revert setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Revert) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Revert setQuotaUser(java.lang.String quotaUser) {
              return (Revert) super.setQuotaUser(quotaUser);
            }

            @Override
            public Revert setUploadType(java.lang.String uploadType) {
              return (Revert) super.setUploadType(uploadType);
            }

            @Override
            public Revert setUploadProtocol(java.lang.String uploadProtocol) {
              return (Revert) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container
             * _id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Trigger's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container
             * _id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            public Revert setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the trigger in storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the trigger in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the trigger in storage.
             */
            public Revert setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Revert set(String parameterName, Object value) {
              return (Revert) super.set(parameterName, value);
            }
          }
          /**
           * Updates a GTM Trigger.
           *
           * Create a request for the method "triggers.update".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param path GTM Trigger's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigge
           *        r_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Trigger}
           * @return the request
           */
          public Update update(java.lang.String path, com.google.api.services.tagmanager.model.Trigger content) throws java.io.IOException {
            Update result = new Update(path, content);
            initialize(result);
            return result;
          }

          public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Trigger> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");

            /**
             * Updates a GTM Trigger.
             *
             * Create a request for the method "triggers.update".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
             * <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Trigger's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigge
           *        r_id}
             * @param content the {@link com.google.api.services.tagmanager.model.Trigger}
             * @since 1.13
             */
            protected Update(java.lang.String path, com.google.api.services.tagmanager.model.Trigger content) {
              super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Trigger.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");
              }
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getName(), "Trigger.getName()");
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container
             * _id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Trigger's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container
             * _id}/workspaces/{workspace_id}/triggers/{trigger_id}
             */
            public Update setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the trigger in storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the trigger in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the trigger in storage.
             */
            public Update setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Variables collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code TagManager tagmanager = new TagManager(...);}
         *   {@code TagManager.Variables.List request = tagmanager.variables().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Variables variables() {
          return new Variables();
        }

        /**
         * The "variables" collection of methods.
         */
        public class Variables {

          /**
           * Creates a GTM Variable.
           *
           * Create a request for the method "variables.create".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Variable}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.Variable content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Variable> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/variables";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Creates a GTM Variable.
             *
             * Create a request for the method "variables.create".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @param content the {@link com.google.api.services.tagmanager.model.Variable}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.Variable content) {
              super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Variable.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getName(), "Variable.getName()");
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getType(), "Variable.getType()");
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a GTM Variable.
           *
           * Create a request for the method "variables.delete".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param path GTM Variable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{varia
           *        ble_id}
           * @return the request
           */
          public Delete delete(java.lang.String path) throws java.io.IOException {
            Delete result = new Delete(path);
            initialize(result);
            return result;
          }

          public class Delete extends TagManagerRequest<Void> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");

            /**
             * Deletes a GTM Variable.
             *
             * Create a request for the method "variables.delete".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Variable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{varia
           *        ble_id}
             * @since 1.13
             */
            protected Delete(java.lang.String path) {
              super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Variable's API relative path. Example: accounts/{account_id}/containers/{containe
             * r_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Variable's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Variable's API relative path. Example: accounts/{account_id}/containers/{containe
             * r_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            public Delete setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a GTM Variable.
           *
           * Create a request for the method "variables.get".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param path GTM Variable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{varia
           *        ble_id}
           * @return the request
           */
          public Get get(java.lang.String path) throws java.io.IOException {
            Get result = new Get(path);
            initialize(result);
            return result;
          }

          public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Variable> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");

            /**
             * Gets a GTM Variable.
             *
             * Create a request for the method "variables.get".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Variable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{varia
           *        ble_id}
             * @since 1.13
             */
            protected Get(java.lang.String path) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Variable.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Variable's API relative path. Example: accounts/{account_id}/containers/{containe
             * r_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Variable's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Variable's API relative path. Example: accounts/{account_id}/containers/{containe
             * r_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            public Get setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all GTM Variables of a Container.
           *
           * Create a request for the method "variables.list".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListVariablesResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/variables";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Lists all GTM Variables of a Container.
             *
             * Create a request for the method "variables.list".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListVariablesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Continuation token for fetching the next page of results. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Continuation token for fetching the next page of results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Continuation token for fetching the next page of results. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Reverts changes to a GTM Variable in a GTM Workspace.
           *
           * Create a request for the method "variables.revert".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Revert#execute()} method to invoke the remote operation.
           *
           * @param path GTM Variable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{varia
           *        ble_id}
           * @return the request
           */
          public Revert revert(java.lang.String path) throws java.io.IOException {
            Revert result = new Revert(path);
            initialize(result);
            return result;
          }

          public class Revert extends TagManagerRequest<com.google.api.services.tagmanager.model.RevertVariableResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+path}:revert";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");

            /**
             * Reverts changes to a GTM Variable in a GTM Workspace.
             *
             * Create a request for the method "variables.revert".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Revert#execute()} method to invoke the remote operation.
             * <p> {@link
             * Revert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Variable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{varia
           *        ble_id}
             * @since 1.13
             */
            protected Revert(java.lang.String path) {
              super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.RevertVariableResponse.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");
              }
            }

            @Override
            public Revert set$Xgafv(java.lang.String $Xgafv) {
              return (Revert) super.set$Xgafv($Xgafv);
            }

            @Override
            public Revert setAccessToken(java.lang.String accessToken) {
              return (Revert) super.setAccessToken(accessToken);
            }

            @Override
            public Revert setAlt(java.lang.String alt) {
              return (Revert) super.setAlt(alt);
            }

            @Override
            public Revert setCallback(java.lang.String callback) {
              return (Revert) super.setCallback(callback);
            }

            @Override
            public Revert setFields(java.lang.String fields) {
              return (Revert) super.setFields(fields);
            }

            @Override
            public Revert setKey(java.lang.String key) {
              return (Revert) super.setKey(key);
            }

            @Override
            public Revert setOauthToken(java.lang.String oauthToken) {
              return (Revert) super.setOauthToken(oauthToken);
            }

            @Override
            public Revert setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Revert) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Revert setQuotaUser(java.lang.String quotaUser) {
              return (Revert) super.setQuotaUser(quotaUser);
            }

            @Override
            public Revert setUploadType(java.lang.String uploadType) {
              return (Revert) super.setUploadType(uploadType);
            }

            @Override
            public Revert setUploadProtocol(java.lang.String uploadProtocol) {
              return (Revert) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Variable's API relative path. Example: accounts/{account_id}/containers/{containe
             * r_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Variable's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Variable's API relative path. Example: accounts/{account_id}/containers/{containe
             * r_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            public Revert setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the variable in
             * storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the variable in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the variable in
             * storage.
             */
            public Revert setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Revert set(String parameterName, Object value) {
              return (Revert) super.set(parameterName, value);
            }
          }
          /**
           * Updates a GTM Variable.
           *
           * Create a request for the method "variables.update".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param path GTM Variable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{varia
           *        ble_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Variable}
           * @return the request
           */
          public Update update(java.lang.String path, com.google.api.services.tagmanager.model.Variable content) throws java.io.IOException {
            Update result = new Update(path, content);
            initialize(result);
            return result;
          }

          public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Variable> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");

            /**
             * Updates a GTM Variable.
             *
             * Create a request for the method "variables.update".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
             * <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Variable's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{varia
           *        ble_id}
             * @param content the {@link com.google.api.services.tagmanager.model.Variable}
             * @since 1.13
             */
            protected Update(java.lang.String path, com.google.api.services.tagmanager.model.Variable content) {
              super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Variable.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");
              }
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getName(), "Variable.getName()");
              checkRequiredParameter(content, "content");
              checkRequiredParameter(content.getType(), "Variable.getType()");
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Variable's API relative path. Example: accounts/{account_id}/containers/{containe
             * r_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Variable's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Variable's API relative path. Example: accounts/{account_id}/containers/{containe
             * r_id}/workspaces/{workspace_id}/variables/{variable_id}
             */
            public Update setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the variable in
             * storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the variable in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the variable in
             * storage.
             */
            public Update setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Zones collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code TagManager tagmanager = new TagManager(...);}
         *   {@code TagManager.Zones.List request = tagmanager.zones().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Zones zones() {
          return new Zones();
        }

        /**
         * The "zones" collection of methods.
         */
        public class Zones {

          /**
           * Creates a GTM Zone.
           *
           * Create a request for the method "zones.create".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Zone}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.Zone content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.Zone> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/zones";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Creates a GTM Zone.
             *
             * Create a request for the method "zones.create".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @param content the {@link com.google.api.services.tagmanager.model.Zone}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.Zone content) {
              super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.Zone.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a GTM Zone.
           *
           * Create a request for the method "zones.delete".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param path GTM Zone's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
           * @return the request
           */
          public Delete delete(java.lang.String path) throws java.io.IOException {
            Delete result = new Delete(path);
            initialize(result);
            return result;
          }

          public class Delete extends TagManagerRequest<Void> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");

            /**
             * Deletes a GTM Zone.
             *
             * Create a request for the method "zones.delete".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Zone's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
             * @since 1.13
             */
            protected Delete(java.lang.String path) {
              super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id
             * }/workspaces/{workspace_id}/zones/{zone_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Zone's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id
             * }/workspaces/{workspace_id}/zones/{zone_id}
             */
            public Delete setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a GTM Zone.
           *
           * Create a request for the method "zones.get".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param path GTM Zone's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
           * @return the request
           */
          public Get get(java.lang.String path) throws java.io.IOException {
            Get result = new Get(path);
            initialize(result);
            return result;
          }

          public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.Zone> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");

            /**
             * Gets a GTM Zone.
             *
             * Create a request for the method "zones.get".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Zone's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
             * @since 1.13
             */
            protected Get(java.lang.String path) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.Zone.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id
             * }/workspaces/{workspace_id}/zones/{zone_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Zone's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id
             * }/workspaces/{workspace_id}/zones/{zone_id}
             */
            public Get setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");
              }
              this.path = path;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all GTM Zones of a GTM container workspace.
           *
           * Create a request for the method "zones.list".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListZonesResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+parent}/zones";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");

            /**
             * Lists all GTM Zones of a GTM container workspace.
             *
             * Create a request for the method "zones.list".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent GTM Workspace's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListZonesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** GTM Workspace's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * GTM Workspace's API relative path. Example:
             * accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Continuation token for fetching the next page of results. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Continuation token for fetching the next page of results.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Continuation token for fetching the next page of results. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Reverts changes to a GTM Zone in a GTM Workspace.
           *
           * Create a request for the method "zones.revert".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Revert#execute()} method to invoke the remote operation.
           *
           * @param path GTM Zone's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
           * @return the request
           */
          public Revert revert(java.lang.String path) throws java.io.IOException {
            Revert result = new Revert(path);
            initialize(result);
            return result;
          }

          public class Revert extends TagManagerRequest<com.google.api.services.tagmanager.model.RevertZoneResponse> {

            private static final String REST_PATH = "tagmanager/v2/{+path}:revert";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");

            /**
             * Reverts changes to a GTM Zone in a GTM Workspace.
             *
             * Create a request for the method "zones.revert".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Revert#execute()} method to invoke the remote operation.
             * <p> {@link
             * Revert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Zone's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
             * @since 1.13
             */
            protected Revert(java.lang.String path) {
              super(TagManager.this, "POST", REST_PATH, null, com.google.api.services.tagmanager.model.RevertZoneResponse.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");
              }
            }

            @Override
            public Revert set$Xgafv(java.lang.String $Xgafv) {
              return (Revert) super.set$Xgafv($Xgafv);
            }

            @Override
            public Revert setAccessToken(java.lang.String accessToken) {
              return (Revert) super.setAccessToken(accessToken);
            }

            @Override
            public Revert setAlt(java.lang.String alt) {
              return (Revert) super.setAlt(alt);
            }

            @Override
            public Revert setCallback(java.lang.String callback) {
              return (Revert) super.setCallback(callback);
            }

            @Override
            public Revert setFields(java.lang.String fields) {
              return (Revert) super.setFields(fields);
            }

            @Override
            public Revert setKey(java.lang.String key) {
              return (Revert) super.setKey(key);
            }

            @Override
            public Revert setOauthToken(java.lang.String oauthToken) {
              return (Revert) super.setOauthToken(oauthToken);
            }

            @Override
            public Revert setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Revert) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Revert setQuotaUser(java.lang.String quotaUser) {
              return (Revert) super.setQuotaUser(quotaUser);
            }

            @Override
            public Revert setUploadType(java.lang.String uploadType) {
              return (Revert) super.setUploadType(uploadType);
            }

            @Override
            public Revert setUploadProtocol(java.lang.String uploadProtocol) {
              return (Revert) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id
             * }/workspaces/{workspace_id}/zones/{zone_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Zone's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id
             * }/workspaces/{workspace_id}/zones/{zone_id}
             */
            public Revert setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the zone in storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the zone in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the zone in storage.
             */
            public Revert setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Revert set(String parameterName, Object value) {
              return (Revert) super.set(parameterName, value);
            }
          }
          /**
           * Updates a GTM Zone.
           *
           * Create a request for the method "zones.update".
           *
           * This request holds the parameters needed by the tagmanager server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param path GTM Zone's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
           * @param content the {@link com.google.api.services.tagmanager.model.Zone}
           * @return the request
           */
          public Update update(java.lang.String path, com.google.api.services.tagmanager.model.Zone content) throws java.io.IOException {
            Update result = new Update(path, content);
            initialize(result);
            return result;
          }

          public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.Zone> {

            private static final String REST_PATH = "tagmanager/v2/{+path}";

            private final java.util.regex.Pattern PATH_PATTERN =
                java.util.regex.Pattern.compile("^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");

            /**
             * Updates a GTM Zone.
             *
             * Create a request for the method "zones.update".
             *
             * This request holds the parameters needed by the the tagmanager server.  After setting any
             * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
             * <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param path GTM Zone's API relative path. Example:
           *        accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
             * @param content the {@link com.google.api.services.tagmanager.model.Zone}
             * @since 1.13
             */
            protected Update(java.lang.String path, com.google.api.services.tagmanager.model.Zone content) {
              super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.Zone.class);
              this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");
              }
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id
             * }/workspaces/{workspace_id}/zones/{zone_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String path;

            /** GTM Zone's API relative path. Example:
           accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}
             */
            public java.lang.String getPath() {
              return path;
            }

            /**
             * GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id
             * }/workspaces/{workspace_id}/zones/{zone_id}
             */
            public Update setPath(java.lang.String path) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                    "Parameter path must conform to the pattern " +
                    "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$");
              }
              this.path = path;
              return this;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the zone in storage.
             */
            @com.google.api.client.util.Key
            private java.lang.String fingerprint;

            /** When provided, this fingerprint must match the fingerprint of the zone in storage.
             */
            public java.lang.String getFingerprint() {
              return fingerprint;
            }

            /**
             * When provided, this fingerprint must match the fingerprint of the zone in storage.
             */
            public Update setFingerprint(java.lang.String fingerprint) {
              this.fingerprint = fingerprint;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the UserPermissions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code TagManager tagmanager = new TagManager(...);}
     *   {@code TagManager.UserPermissions.List request = tagmanager.userPermissions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public UserPermissions userPermissions() {
      return new UserPermissions();
    }

    /**
     * The "user_permissions" collection of methods.
     */
    public class UserPermissions {

      /**
       * Creates a user's Account & Container access.
       *
       * Create a request for the method "user_permissions.create".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent GTM Account's API relative path. Example: accounts/{account_id}
       * @param content the {@link com.google.api.services.tagmanager.model.UserPermission}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.tagmanager.model.UserPermission content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends TagManagerRequest<com.google.api.services.tagmanager.model.UserPermission> {

        private static final String REST_PATH = "tagmanager/v2/{+parent}/user_permissions";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Creates a user's Account & Container access.
         *
         * Create a request for the method "user_permissions.create".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent GTM Account's API relative path. Example: accounts/{account_id}
         * @param content the {@link com.google.api.services.tagmanager.model.UserPermission}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.tagmanager.model.UserPermission content) {
          super(TagManager.this, "POST", REST_PATH, content, com.google.api.services.tagmanager.model.UserPermission.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** GTM Account's API relative path. Example: accounts/{account_id} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** GTM Account's API relative path. Example: accounts/{account_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** GTM Account's API relative path. Example: accounts/{account_id} */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Removes a user from the account, revoking access to it and all of its containers.
       *
       * Create a request for the method "user_permissions.delete".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param path GTM UserPermission's API relative path. Example:
       *        accounts/{account_id}/user_permissions/{user_permission_id}
       * @return the request
       */
      public Delete delete(java.lang.String path) throws java.io.IOException {
        Delete result = new Delete(path);
        initialize(result);
        return result;
      }

      public class Delete extends TagManagerRequest<Void> {

        private static final String REST_PATH = "tagmanager/v2/{+path}";

        private final java.util.regex.Pattern PATH_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/user_permissions/[^/]+$");

        /**
         * Removes a user from the account, revoking access to it and all of its containers.
         *
         * Create a request for the method "user_permissions.delete".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param path GTM UserPermission's API relative path. Example:
       *        accounts/{account_id}/user_permissions/{user_permission_id}
         * @since 1.13
         */
        protected Delete(java.lang.String path) {
          super(TagManager.this, "DELETE", REST_PATH, null, Void.class);
          this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/user_permissions/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * GTM UserPermission's API relative path. Example:
         * accounts/{account_id}/user_permissions/{user_permission_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String path;

        /** GTM UserPermission's API relative path. Example:
       accounts/{account_id}/user_permissions/{user_permission_id}
         */
        public java.lang.String getPath() {
          return path;
        }

        /**
         * GTM UserPermission's API relative path. Example:
         * accounts/{account_id}/user_permissions/{user_permission_id}
         */
        public Delete setPath(java.lang.String path) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/user_permissions/[^/]+$");
          }
          this.path = path;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a user's Account & Container access.
       *
       * Create a request for the method "user_permissions.get".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param path GTM UserPermission's API relative path. Example:
       *        accounts/{account_id}/user_permissions/{user_permission_id}
       * @return the request
       */
      public Get get(java.lang.String path) throws java.io.IOException {
        Get result = new Get(path);
        initialize(result);
        return result;
      }

      public class Get extends TagManagerRequest<com.google.api.services.tagmanager.model.UserPermission> {

        private static final String REST_PATH = "tagmanager/v2/{+path}";

        private final java.util.regex.Pattern PATH_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/user_permissions/[^/]+$");

        /**
         * Gets a user's Account & Container access.
         *
         * Create a request for the method "user_permissions.get".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param path GTM UserPermission's API relative path. Example:
       *        accounts/{account_id}/user_permissions/{user_permission_id}
         * @since 1.13
         */
        protected Get(java.lang.String path) {
          super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.UserPermission.class);
          this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/user_permissions/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * GTM UserPermission's API relative path. Example:
         * accounts/{account_id}/user_permissions/{user_permission_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String path;

        /** GTM UserPermission's API relative path. Example:
       accounts/{account_id}/user_permissions/{user_permission_id}
         */
        public java.lang.String getPath() {
          return path;
        }

        /**
         * GTM UserPermission's API relative path. Example:
         * accounts/{account_id}/user_permissions/{user_permission_id}
         */
        public Get setPath(java.lang.String path) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/user_permissions/[^/]+$");
          }
          this.path = path;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all users that have access to the account along with Account and Container user access
       * granted to each of them.
       *
       * Create a request for the method "user_permissions.list".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent GTM Accounts's API relative path. Example: accounts/{account_id}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends TagManagerRequest<com.google.api.services.tagmanager.model.ListUserPermissionsResponse> {

        private static final String REST_PATH = "tagmanager/v2/{+parent}/user_permissions";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * List all users that have access to the account along with Account and Container user access
         * granted to each of them.
         *
         * Create a request for the method "user_permissions.list".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent GTM Accounts's API relative path. Example: accounts/{account_id}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(TagManager.this, "GET", REST_PATH, null, com.google.api.services.tagmanager.model.ListUserPermissionsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** GTM Accounts's API relative path. Example: accounts/{account_id} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** GTM Accounts's API relative path. Example: accounts/{account_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** GTM Accounts's API relative path. Example: accounts/{account_id} */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Continuation token for fetching the next page of results. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Continuation token for fetching the next page of results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Continuation token for fetching the next page of results. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a user's Account & Container access.
       *
       * Create a request for the method "user_permissions.update".
       *
       * This request holds the parameters needed by the tagmanager server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param path GTM UserPermission's API relative path. Example:
       *        accounts/{account_id}/user_permissions/{user_permission_id}
       * @param content the {@link com.google.api.services.tagmanager.model.UserPermission}
       * @return the request
       */
      public Update update(java.lang.String path, com.google.api.services.tagmanager.model.UserPermission content) throws java.io.IOException {
        Update result = new Update(path, content);
        initialize(result);
        return result;
      }

      public class Update extends TagManagerRequest<com.google.api.services.tagmanager.model.UserPermission> {

        private static final String REST_PATH = "tagmanager/v2/{+path}";

        private final java.util.regex.Pattern PATH_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/user_permissions/[^/]+$");

        /**
         * Updates a user's Account & Container access.
         *
         * Create a request for the method "user_permissions.update".
         *
         * This request holds the parameters needed by the the tagmanager server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         * <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param path GTM UserPermission's API relative path. Example:
       *        accounts/{account_id}/user_permissions/{user_permission_id}
         * @param content the {@link com.google.api.services.tagmanager.model.UserPermission}
         * @since 1.13
         */
        protected Update(java.lang.String path, com.google.api.services.tagmanager.model.UserPermission content) {
          super(TagManager.this, "PUT", REST_PATH, content, com.google.api.services.tagmanager.model.UserPermission.class);
          this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/user_permissions/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * GTM UserPermission's API relative path. Example:
         * accounts/{account_id}/user_permissions/{user_permission_id}
         */
        @com.google.api.client.util.Key
        private java.lang.String path;

        /** GTM UserPermission's API relative path. Example:
       accounts/{account_id}/user_permissions/{user_permission_id}
         */
        public java.lang.String getPath() {
          return path;
        }

        /**
         * GTM UserPermission's API relative path. Example:
         * accounts/{account_id}/user_permissions/{user_permission_id}
         */
        public Update setPath(java.lang.String path) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PATH_PATTERN.matcher(path).matches(),
                "Parameter path must conform to the pattern " +
                "^accounts/[^/]+/user_permissions/[^/]+$");
          }
          this.path = path;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link TagManager}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link TagManager}. */
    @Override
    public TagManager build() {
      return new TagManager(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TagManagerRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTagManagerRequestInitializer(
        TagManagerRequestInitializer tagmanagerRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(tagmanagerRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
