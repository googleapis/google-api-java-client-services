/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.jobs.v2.model;

/**
 * Deprecated. Use BatchDeleteJobsRequest instead.
 *
 * Input only.
 *
 * Delete job by filter request.
 *
 * The job typically becomes unsearchable within 10 seconds, but it may take up to 5 minutes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Talent Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DeleteJobsByFilterRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. If set to true, this call waits for all processing steps to complete before the job
   * is cleaned up. Otherwise, the call returns while some steps are still taking place
   * asynchronously, hence faster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disableFastProcess;

  /**
   * Required. Restrictions on the scope of the delete request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Filter filter;

  /**
   * Optional. If set to true, this call waits for all processing steps to complete before the job
   * is cleaned up. Otherwise, the call returns while some steps are still taking place
   * asynchronously, hence faster.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisableFastProcess() {
    return disableFastProcess;
  }

  /**
   * Optional. If set to true, this call waits for all processing steps to complete before the job
   * is cleaned up. Otherwise, the call returns while some steps are still taking place
   * asynchronously, hence faster.
   * @param disableFastProcess disableFastProcess or {@code null} for none
   */
  public DeleteJobsByFilterRequest setDisableFastProcess(java.lang.Boolean disableFastProcess) {
    this.disableFastProcess = disableFastProcess;
    return this;
  }

  /**
   * Required. Restrictions on the scope of the delete request.
   * @return value or {@code null} for none
   */
  public Filter getFilter() {
    return filter;
  }

  /**
   * Required. Restrictions on the scope of the delete request.
   * @param filter filter or {@code null} for none
   */
  public DeleteJobsByFilterRequest setFilter(Filter filter) {
    this.filter = filter;
    return this;
  }

  @Override
  public DeleteJobsByFilterRequest set(String fieldName, Object value) {
    return (DeleteJobsByFilterRequest) super.set(fieldName, value);
  }

  @Override
  public DeleteJobsByFilterRequest clone() {
    return (DeleteJobsByFilterRequest) super.clone();
  }

}
