/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Information about the state of a (recording, broadcast, transcription...) session in a
 * conference.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SessionStateInfo extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The ack info of the session.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AckInfo ackInfo;

  /**
   * Immutable. The language configuration used by this session. When empty, captions will be
   * disabled. It's a required field for transcription sessions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LanguageConfig languageConfig;

  /**
   * Output only. The device id of the actor is set if the current state is a result of a user
   * action, is empty otherwise.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lastActorDeviceId;

  /**
   * Output only. The max end time of the session, at this time the session will be force
   * stopped/terminated. Clients are expected to use this timestamp to warn users about the force
   * stop.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String maxEndTime;

  /**
   * State of the session.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sessionState;

  /**
   * Output only. The reason the session was transitioned to STOPPED state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sessionStopReason;

  /**
   * Output only. The ack info of the session.
   * @return value or {@code null} for none
   */
  public AckInfo getAckInfo() {
    return ackInfo;
  }

  /**
   * Output only. The ack info of the session.
   * @param ackInfo ackInfo or {@code null} for none
   */
  public SessionStateInfo setAckInfo(AckInfo ackInfo) {
    this.ackInfo = ackInfo;
    return this;
  }

  /**
   * Immutable. The language configuration used by this session. When empty, captions will be
   * disabled. It's a required field for transcription sessions.
   * @return value or {@code null} for none
   */
  public LanguageConfig getLanguageConfig() {
    return languageConfig;
  }

  /**
   * Immutable. The language configuration used by this session. When empty, captions will be
   * disabled. It's a required field for transcription sessions.
   * @param languageConfig languageConfig or {@code null} for none
   */
  public SessionStateInfo setLanguageConfig(LanguageConfig languageConfig) {
    this.languageConfig = languageConfig;
    return this;
  }

  /**
   * Output only. The device id of the actor is set if the current state is a result of a user
   * action, is empty otherwise.
   * @return value or {@code null} for none
   */
  public java.lang.String getLastActorDeviceId() {
    return lastActorDeviceId;
  }

  /**
   * Output only. The device id of the actor is set if the current state is a result of a user
   * action, is empty otherwise.
   * @param lastActorDeviceId lastActorDeviceId or {@code null} for none
   */
  public SessionStateInfo setLastActorDeviceId(java.lang.String lastActorDeviceId) {
    this.lastActorDeviceId = lastActorDeviceId;
    return this;
  }

  /**
   * Output only. The max end time of the session, at this time the session will be force
   * stopped/terminated. Clients are expected to use this timestamp to warn users about the force
   * stop.
   * @return value or {@code null} for none
   */
  public String getMaxEndTime() {
    return maxEndTime;
  }

  /**
   * Output only. The max end time of the session, at this time the session will be force
   * stopped/terminated. Clients are expected to use this timestamp to warn users about the force
   * stop.
   * @param maxEndTime maxEndTime or {@code null} for none
   */
  public SessionStateInfo setMaxEndTime(String maxEndTime) {
    this.maxEndTime = maxEndTime;
    return this;
  }

  /**
   * State of the session.
   * @return value or {@code null} for none
   */
  public java.lang.String getSessionState() {
    return sessionState;
  }

  /**
   * State of the session.
   * @param sessionState sessionState or {@code null} for none
   */
  public SessionStateInfo setSessionState(java.lang.String sessionState) {
    this.sessionState = sessionState;
    return this;
  }

  /**
   * Output only. The reason the session was transitioned to STOPPED state.
   * @return value or {@code null} for none
   */
  public java.lang.String getSessionStopReason() {
    return sessionStopReason;
  }

  /**
   * Output only. The reason the session was transitioned to STOPPED state.
   * @param sessionStopReason sessionStopReason or {@code null} for none
   */
  public SessionStateInfo setSessionStopReason(java.lang.String sessionStopReason) {
    this.sessionStopReason = sessionStopReason;
    return this;
  }

  @Override
  public SessionStateInfo set(String fieldName, Object value) {
    return (SessionStateInfo) super.set(fieldName, value);
  }

  @Override
  public SessionStateInfo clone() {
    return (SessionStateInfo) super.clone();
  }

}
