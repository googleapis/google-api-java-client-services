/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.travelimpactmodel.v1.model;

/**
 * Grouped emissions per seating class results.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Travel Impact Model API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EmissionsGramsPerPax extends com.google.api.client.json.GenericJson {

  /**
   * Emissions for one passenger in business class in grams. This field is always computed and
   * populated, regardless of whether the aircraft has business class seats or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer business;

  /**
   * Emissions for one passenger in economy class in grams. This field is always computed and
   * populated, regardless of whether the aircraft has economy class seats or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer economy;

  /**
   * Emissions for one passenger in first class in grams. This field is always computed and
   * populated, regardless of whether the aircraft has first class seats or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer first;

  /**
   * Emissions for one passenger in premium economy class in grams. This field is always computed
   * and populated, regardless of whether the aircraft has premium economy class seats or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer premiumEconomy;

  /**
   * Emissions for one passenger in business class in grams. This field is always computed and
   * populated, regardless of whether the aircraft has business class seats or not.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getBusiness() {
    return business;
  }

  /**
   * Emissions for one passenger in business class in grams. This field is always computed and
   * populated, regardless of whether the aircraft has business class seats or not.
   * @param business business or {@code null} for none
   */
  public EmissionsGramsPerPax setBusiness(java.lang.Integer business) {
    this.business = business;
    return this;
  }

  /**
   * Emissions for one passenger in economy class in grams. This field is always computed and
   * populated, regardless of whether the aircraft has economy class seats or not.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEconomy() {
    return economy;
  }

  /**
   * Emissions for one passenger in economy class in grams. This field is always computed and
   * populated, regardless of whether the aircraft has economy class seats or not.
   * @param economy economy or {@code null} for none
   */
  public EmissionsGramsPerPax setEconomy(java.lang.Integer economy) {
    this.economy = economy;
    return this;
  }

  /**
   * Emissions for one passenger in first class in grams. This field is always computed and
   * populated, regardless of whether the aircraft has first class seats or not.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFirst() {
    return first;
  }

  /**
   * Emissions for one passenger in first class in grams. This field is always computed and
   * populated, regardless of whether the aircraft has first class seats or not.
   * @param first first or {@code null} for none
   */
  public EmissionsGramsPerPax setFirst(java.lang.Integer first) {
    this.first = first;
    return this;
  }

  /**
   * Emissions for one passenger in premium economy class in grams. This field is always computed
   * and populated, regardless of whether the aircraft has premium economy class seats or not.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPremiumEconomy() {
    return premiumEconomy;
  }

  /**
   * Emissions for one passenger in premium economy class in grams. This field is always computed
   * and populated, regardless of whether the aircraft has premium economy class seats or not.
   * @param premiumEconomy premiumEconomy or {@code null} for none
   */
  public EmissionsGramsPerPax setPremiumEconomy(java.lang.Integer premiumEconomy) {
    this.premiumEconomy = premiumEconomy;
    return this;
  }

  @Override
  public EmissionsGramsPerPax set(String fieldName, Object value) {
    return (EmissionsGramsPerPax) super.set(fieldName, value);
  }

  @Override
  public EmissionsGramsPerPax clone() {
    return (EmissionsGramsPerPax) super.clone();
  }

}
