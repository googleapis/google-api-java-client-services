/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.mybusinesslodging.v1.model;

/**
 * Sustainable sourcing practices implemented at the hotel.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the My Business Lodging API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SustainableSourcing extends com.google.api.client.json.GenericJson {

  /**
   * Eco friendly toiletries. Soap, shampoo, lotion, and other toiletries provided for guests have a
   * nationally or internationally recognized sustainability certification, such as USDA Organic, EU
   * Organic, or cruelty-free.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean ecoFriendlyToiletries;

  /**
   * Eco friendly toiletries exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ecoFriendlyToiletriesException;

  /**
   * Locally sourced food and beverages. Property sources locally in order to lower the
   * environmental footprint from reduced transportation and to stimulate the local economy.
   * Products produced less than 62 miles from the establishment are normally considered as locally
   * produced.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean locallySourcedFoodAndBeverages;

  /**
   * Locally sourced food and beverages exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locallySourcedFoodAndBeveragesException;

  /**
   * Organic cage free eggs. The property sources 100% certified organic and cage-free eggs (shell,
   * liquid, and egg products). Cage-free means hens are able to walk, spread their wings and lay
   * their eggs in nests).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean organicCageFreeEggs;

  /**
   * Organic cage free eggs exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String organicCageFreeEggsException;

  /**
   * Organic food and beverages. At least 25% of food and beverages, by spend, are certified
   * organic. Organic means products that are certified to one of the organic standard listed in the
   * IFOAM family of standards. Qualifying certifications include USDA Organic and EU Organic, among
   * others.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean organicFoodAndBeverages;

  /**
   * Organic food and beverages exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String organicFoodAndBeveragesException;

  /**
   * Responsible purchasing policy. The property has a responsible procurement policy in place.
   * Responsible means integration of social, ethical, and/or environmental performance factors into
   * the procurement process when selecting suppliers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean responsiblePurchasingPolicy;

  /**
   * Responsible purchasing policy exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String responsiblePurchasingPolicyException;

  /**
   * Responsibly sources seafood. The property does not source seafood from the Monterey Bay
   * Aquarium Seafood Watch "avoid" list, and must sustainably source seafood listed as "good
   * alternative," "eco-certified," and "best choice". The property has a policy outlining a
   * commitment to source Marine Stewardship Council (MSC) and/or Aquaculture Stewardship Council
   * (ASC) Chain of Custody certified seafood.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean responsiblySourcesSeafood;

  /**
   * Responsibly sources seafood exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String responsiblySourcesSeafoodException;

  /**
   * Vegan meals. The property provides vegan menu options for guests. Vegan food does not contain
   * animal products or byproducts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean veganMeals;

  /**
   * Vegan meals exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String veganMealsException;

  /**
   * Vegetarian meals. The property provides vegetarian menu options for guests. Vegetarian food
   * does not contain meat, poultry, fish, or seafood.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean vegetarianMeals;

  /**
   * Vegetarian meals exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vegetarianMealsException;

  /**
   * Eco friendly toiletries. Soap, shampoo, lotion, and other toiletries provided for guests have a
   * nationally or internationally recognized sustainability certification, such as USDA Organic, EU
   * Organic, or cruelty-free.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEcoFriendlyToiletries() {
    return ecoFriendlyToiletries;
  }

  /**
   * Eco friendly toiletries. Soap, shampoo, lotion, and other toiletries provided for guests have a
   * nationally or internationally recognized sustainability certification, such as USDA Organic, EU
   * Organic, or cruelty-free.
   * @param ecoFriendlyToiletries ecoFriendlyToiletries or {@code null} for none
   */
  public SustainableSourcing setEcoFriendlyToiletries(java.lang.Boolean ecoFriendlyToiletries) {
    this.ecoFriendlyToiletries = ecoFriendlyToiletries;
    return this;
  }

  /**
   * Eco friendly toiletries exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getEcoFriendlyToiletriesException() {
    return ecoFriendlyToiletriesException;
  }

  /**
   * Eco friendly toiletries exception.
   * @param ecoFriendlyToiletriesException ecoFriendlyToiletriesException or {@code null} for none
   */
  public SustainableSourcing setEcoFriendlyToiletriesException(java.lang.String ecoFriendlyToiletriesException) {
    this.ecoFriendlyToiletriesException = ecoFriendlyToiletriesException;
    return this;
  }

  /**
   * Locally sourced food and beverages. Property sources locally in order to lower the
   * environmental footprint from reduced transportation and to stimulate the local economy.
   * Products produced less than 62 miles from the establishment are normally considered as locally
   * produced.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLocallySourcedFoodAndBeverages() {
    return locallySourcedFoodAndBeverages;
  }

  /**
   * Locally sourced food and beverages. Property sources locally in order to lower the
   * environmental footprint from reduced transportation and to stimulate the local economy.
   * Products produced less than 62 miles from the establishment are normally considered as locally
   * produced.
   * @param locallySourcedFoodAndBeverages locallySourcedFoodAndBeverages or {@code null} for none
   */
  public SustainableSourcing setLocallySourcedFoodAndBeverages(java.lang.Boolean locallySourcedFoodAndBeverages) {
    this.locallySourcedFoodAndBeverages = locallySourcedFoodAndBeverages;
    return this;
  }

  /**
   * Locally sourced food and beverages exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocallySourcedFoodAndBeveragesException() {
    return locallySourcedFoodAndBeveragesException;
  }

  /**
   * Locally sourced food and beverages exception.
   * @param locallySourcedFoodAndBeveragesException locallySourcedFoodAndBeveragesException or {@code null} for none
   */
  public SustainableSourcing setLocallySourcedFoodAndBeveragesException(java.lang.String locallySourcedFoodAndBeveragesException) {
    this.locallySourcedFoodAndBeveragesException = locallySourcedFoodAndBeveragesException;
    return this;
  }

  /**
   * Organic cage free eggs. The property sources 100% certified organic and cage-free eggs (shell,
   * liquid, and egg products). Cage-free means hens are able to walk, spread their wings and lay
   * their eggs in nests).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOrganicCageFreeEggs() {
    return organicCageFreeEggs;
  }

  /**
   * Organic cage free eggs. The property sources 100% certified organic and cage-free eggs (shell,
   * liquid, and egg products). Cage-free means hens are able to walk, spread their wings and lay
   * their eggs in nests).
   * @param organicCageFreeEggs organicCageFreeEggs or {@code null} for none
   */
  public SustainableSourcing setOrganicCageFreeEggs(java.lang.Boolean organicCageFreeEggs) {
    this.organicCageFreeEggs = organicCageFreeEggs;
    return this;
  }

  /**
   * Organic cage free eggs exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrganicCageFreeEggsException() {
    return organicCageFreeEggsException;
  }

  /**
   * Organic cage free eggs exception.
   * @param organicCageFreeEggsException organicCageFreeEggsException or {@code null} for none
   */
  public SustainableSourcing setOrganicCageFreeEggsException(java.lang.String organicCageFreeEggsException) {
    this.organicCageFreeEggsException = organicCageFreeEggsException;
    return this;
  }

  /**
   * Organic food and beverages. At least 25% of food and beverages, by spend, are certified
   * organic. Organic means products that are certified to one of the organic standard listed in the
   * IFOAM family of standards. Qualifying certifications include USDA Organic and EU Organic, among
   * others.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOrganicFoodAndBeverages() {
    return organicFoodAndBeverages;
  }

  /**
   * Organic food and beverages. At least 25% of food and beverages, by spend, are certified
   * organic. Organic means products that are certified to one of the organic standard listed in the
   * IFOAM family of standards. Qualifying certifications include USDA Organic and EU Organic, among
   * others.
   * @param organicFoodAndBeverages organicFoodAndBeverages or {@code null} for none
   */
  public SustainableSourcing setOrganicFoodAndBeverages(java.lang.Boolean organicFoodAndBeverages) {
    this.organicFoodAndBeverages = organicFoodAndBeverages;
    return this;
  }

  /**
   * Organic food and beverages exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrganicFoodAndBeveragesException() {
    return organicFoodAndBeveragesException;
  }

  /**
   * Organic food and beverages exception.
   * @param organicFoodAndBeveragesException organicFoodAndBeveragesException or {@code null} for none
   */
  public SustainableSourcing setOrganicFoodAndBeveragesException(java.lang.String organicFoodAndBeveragesException) {
    this.organicFoodAndBeveragesException = organicFoodAndBeveragesException;
    return this;
  }

  /**
   * Responsible purchasing policy. The property has a responsible procurement policy in place.
   * Responsible means integration of social, ethical, and/or environmental performance factors into
   * the procurement process when selecting suppliers.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getResponsiblePurchasingPolicy() {
    return responsiblePurchasingPolicy;
  }

  /**
   * Responsible purchasing policy. The property has a responsible procurement policy in place.
   * Responsible means integration of social, ethical, and/or environmental performance factors into
   * the procurement process when selecting suppliers.
   * @param responsiblePurchasingPolicy responsiblePurchasingPolicy or {@code null} for none
   */
  public SustainableSourcing setResponsiblePurchasingPolicy(java.lang.Boolean responsiblePurchasingPolicy) {
    this.responsiblePurchasingPolicy = responsiblePurchasingPolicy;
    return this;
  }

  /**
   * Responsible purchasing policy exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getResponsiblePurchasingPolicyException() {
    return responsiblePurchasingPolicyException;
  }

  /**
   * Responsible purchasing policy exception.
   * @param responsiblePurchasingPolicyException responsiblePurchasingPolicyException or {@code null} for none
   */
  public SustainableSourcing setResponsiblePurchasingPolicyException(java.lang.String responsiblePurchasingPolicyException) {
    this.responsiblePurchasingPolicyException = responsiblePurchasingPolicyException;
    return this;
  }

  /**
   * Responsibly sources seafood. The property does not source seafood from the Monterey Bay
   * Aquarium Seafood Watch "avoid" list, and must sustainably source seafood listed as "good
   * alternative," "eco-certified," and "best choice". The property has a policy outlining a
   * commitment to source Marine Stewardship Council (MSC) and/or Aquaculture Stewardship Council
   * (ASC) Chain of Custody certified seafood.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getResponsiblySourcesSeafood() {
    return responsiblySourcesSeafood;
  }

  /**
   * Responsibly sources seafood. The property does not source seafood from the Monterey Bay
   * Aquarium Seafood Watch "avoid" list, and must sustainably source seafood listed as "good
   * alternative," "eco-certified," and "best choice". The property has a policy outlining a
   * commitment to source Marine Stewardship Council (MSC) and/or Aquaculture Stewardship Council
   * (ASC) Chain of Custody certified seafood.
   * @param responsiblySourcesSeafood responsiblySourcesSeafood or {@code null} for none
   */
  public SustainableSourcing setResponsiblySourcesSeafood(java.lang.Boolean responsiblySourcesSeafood) {
    this.responsiblySourcesSeafood = responsiblySourcesSeafood;
    return this;
  }

  /**
   * Responsibly sources seafood exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getResponsiblySourcesSeafoodException() {
    return responsiblySourcesSeafoodException;
  }

  /**
   * Responsibly sources seafood exception.
   * @param responsiblySourcesSeafoodException responsiblySourcesSeafoodException or {@code null} for none
   */
  public SustainableSourcing setResponsiblySourcesSeafoodException(java.lang.String responsiblySourcesSeafoodException) {
    this.responsiblySourcesSeafoodException = responsiblySourcesSeafoodException;
    return this;
  }

  /**
   * Vegan meals. The property provides vegan menu options for guests. Vegan food does not contain
   * animal products or byproducts.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVeganMeals() {
    return veganMeals;
  }

  /**
   * Vegan meals. The property provides vegan menu options for guests. Vegan food does not contain
   * animal products or byproducts.
   * @param veganMeals veganMeals or {@code null} for none
   */
  public SustainableSourcing setVeganMeals(java.lang.Boolean veganMeals) {
    this.veganMeals = veganMeals;
    return this;
  }

  /**
   * Vegan meals exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getVeganMealsException() {
    return veganMealsException;
  }

  /**
   * Vegan meals exception.
   * @param veganMealsException veganMealsException or {@code null} for none
   */
  public SustainableSourcing setVeganMealsException(java.lang.String veganMealsException) {
    this.veganMealsException = veganMealsException;
    return this;
  }

  /**
   * Vegetarian meals. The property provides vegetarian menu options for guests. Vegetarian food
   * does not contain meat, poultry, fish, or seafood.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVegetarianMeals() {
    return vegetarianMeals;
  }

  /**
   * Vegetarian meals. The property provides vegetarian menu options for guests. Vegetarian food
   * does not contain meat, poultry, fish, or seafood.
   * @param vegetarianMeals vegetarianMeals or {@code null} for none
   */
  public SustainableSourcing setVegetarianMeals(java.lang.Boolean vegetarianMeals) {
    this.vegetarianMeals = vegetarianMeals;
    return this;
  }

  /**
   * Vegetarian meals exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getVegetarianMealsException() {
    return vegetarianMealsException;
  }

  /**
   * Vegetarian meals exception.
   * @param vegetarianMealsException vegetarianMealsException or {@code null} for none
   */
  public SustainableSourcing setVegetarianMealsException(java.lang.String vegetarianMealsException) {
    this.vegetarianMealsException = vegetarianMealsException;
    return this;
  }

  @Override
  public SustainableSourcing set(String fieldName, Object value) {
    return (SustainableSourcing) super.set(fieldName, value);
  }

  @Override
  public SustainableSourcing clone() {
    return (SustainableSourcing) super.clone();
  }

}
