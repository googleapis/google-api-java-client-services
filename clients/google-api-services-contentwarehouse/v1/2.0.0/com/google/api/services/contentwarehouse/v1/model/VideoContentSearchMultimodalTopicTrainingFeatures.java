/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Multimodal features for a single generated topic used to build training data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoContentSearchMultimodalTopicTrainingFeatures extends com.google.api.client.json.GenericJson {

  /**
   * The similarity info for the frame with maximum similarity to the topic in its visual interval.
   * The repeated similarity field in this proto has a single value corresponding to the maximum
   * similarity. This similarity score is used to filter and pick the training data examples.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchFrameSimilarityInterval maxFrameSimilarityInterval;

  /**
   * The topic/query normalized for Navboost and QBST lookups as well as fetching of the Rankembed
   * nearest neighbors.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String normalizedTopic;

  /**
   * QBST terms overlap features for a candidate query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchQbstTermsOverlapFeatures qbstTermsOverlapFeatures;

  /**
   * Rankembed similarity features for a candidate nearest neighbor rankembed query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchRankEmbedNearestNeighborsFeatures rankembedNearestNeighborsFeatures;

  /**
   * The information about the saft entity annotation for this topic.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchSaftEntityInfo saftEntityInfo;

  /**
   * Raw float feature vector of the topic's co-text embedding representation in the Starburst
   * space.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Float> topicDenseVector;

  /**
   * The similarity info for the frame with maximum similarity to the topic in its visual interval.
   * The repeated similarity field in this proto has a single value corresponding to the maximum
   * similarity. This similarity score is used to filter and pick the training data examples.
   * @return value or {@code null} for none
   */
  public VideoContentSearchFrameSimilarityInterval getMaxFrameSimilarityInterval() {
    return maxFrameSimilarityInterval;
  }

  /**
   * The similarity info for the frame with maximum similarity to the topic in its visual interval.
   * The repeated similarity field in this proto has a single value corresponding to the maximum
   * similarity. This similarity score is used to filter and pick the training data examples.
   * @param maxFrameSimilarityInterval maxFrameSimilarityInterval or {@code null} for none
   */
  public VideoContentSearchMultimodalTopicTrainingFeatures setMaxFrameSimilarityInterval(VideoContentSearchFrameSimilarityInterval maxFrameSimilarityInterval) {
    this.maxFrameSimilarityInterval = maxFrameSimilarityInterval;
    return this;
  }

  /**
   * The topic/query normalized for Navboost and QBST lookups as well as fetching of the Rankembed
   * nearest neighbors.
   * @return value or {@code null} for none
   */
  public java.lang.String getNormalizedTopic() {
    return normalizedTopic;
  }

  /**
   * The topic/query normalized for Navboost and QBST lookups as well as fetching of the Rankembed
   * nearest neighbors.
   * @param normalizedTopic normalizedTopic or {@code null} for none
   */
  public VideoContentSearchMultimodalTopicTrainingFeatures setNormalizedTopic(java.lang.String normalizedTopic) {
    this.normalizedTopic = normalizedTopic;
    return this;
  }

  /**
   * QBST terms overlap features for a candidate query.
   * @return value or {@code null} for none
   */
  public VideoContentSearchQbstTermsOverlapFeatures getQbstTermsOverlapFeatures() {
    return qbstTermsOverlapFeatures;
  }

  /**
   * QBST terms overlap features for a candidate query.
   * @param qbstTermsOverlapFeatures qbstTermsOverlapFeatures or {@code null} for none
   */
  public VideoContentSearchMultimodalTopicTrainingFeatures setQbstTermsOverlapFeatures(VideoContentSearchQbstTermsOverlapFeatures qbstTermsOverlapFeatures) {
    this.qbstTermsOverlapFeatures = qbstTermsOverlapFeatures;
    return this;
  }

  /**
   * Rankembed similarity features for a candidate nearest neighbor rankembed query.
   * @return value or {@code null} for none
   */
  public VideoContentSearchRankEmbedNearestNeighborsFeatures getRankembedNearestNeighborsFeatures() {
    return rankembedNearestNeighborsFeatures;
  }

  /**
   * Rankembed similarity features for a candidate nearest neighbor rankembed query.
   * @param rankembedNearestNeighborsFeatures rankembedNearestNeighborsFeatures or {@code null} for none
   */
  public VideoContentSearchMultimodalTopicTrainingFeatures setRankembedNearestNeighborsFeatures(VideoContentSearchRankEmbedNearestNeighborsFeatures rankembedNearestNeighborsFeatures) {
    this.rankembedNearestNeighborsFeatures = rankembedNearestNeighborsFeatures;
    return this;
  }

  /**
   * The information about the saft entity annotation for this topic.
   * @return value or {@code null} for none
   */
  public VideoContentSearchSaftEntityInfo getSaftEntityInfo() {
    return saftEntityInfo;
  }

  /**
   * The information about the saft entity annotation for this topic.
   * @param saftEntityInfo saftEntityInfo or {@code null} for none
   */
  public VideoContentSearchMultimodalTopicTrainingFeatures setSaftEntityInfo(VideoContentSearchSaftEntityInfo saftEntityInfo) {
    this.saftEntityInfo = saftEntityInfo;
    return this;
  }

  /**
   * Raw float feature vector of the topic's co-text embedding representation in the Starburst
   * space.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Float> getTopicDenseVector() {
    return topicDenseVector;
  }

  /**
   * Raw float feature vector of the topic's co-text embedding representation in the Starburst
   * space.
   * @param topicDenseVector topicDenseVector or {@code null} for none
   */
  public VideoContentSearchMultimodalTopicTrainingFeatures setTopicDenseVector(java.util.List<java.lang.Float> topicDenseVector) {
    this.topicDenseVector = topicDenseVector;
    return this;
  }

  @Override
  public VideoContentSearchMultimodalTopicTrainingFeatures set(String fieldName, Object value) {
    return (VideoContentSearchMultimodalTopicTrainingFeatures) super.set(fieldName, value);
  }

  @Override
  public VideoContentSearchMultimodalTopicTrainingFeatures clone() {
    return (VideoContentSearchMultimodalTopicTrainingFeatures) super.clone();
  }

}
