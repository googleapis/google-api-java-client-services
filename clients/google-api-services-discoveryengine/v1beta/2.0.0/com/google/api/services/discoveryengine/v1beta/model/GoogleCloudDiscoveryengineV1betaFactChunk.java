/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1beta.model;

/**
 * Fact Chunk.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1betaFactChunk extends com.google.api.client.json.GenericJson {

  /**
   * Text content of the fact chunk. Can be at most 10K characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String chunkText;

  /**
   * The index of this chunk. Currently, only used for the streaming mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer index;

  /**
   * Source from which this fact chunk was retrieved. If it was retrieved from the GroundingFacts
   * provided in the request then this field will contain the index of the specific fact from which
   * this chunk was retrieved.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String source;

  /**
   * More fine-grained information for the source reference.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> sourceMetadata;

  /**
   * Text content of the fact chunk. Can be at most 10K characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getChunkText() {
    return chunkText;
  }

  /**
   * Text content of the fact chunk. Can be at most 10K characters long.
   * @param chunkText chunkText or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaFactChunk setChunkText(java.lang.String chunkText) {
    this.chunkText = chunkText;
    return this;
  }

  /**
   * The index of this chunk. Currently, only used for the streaming mode.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getIndex() {
    return index;
  }

  /**
   * The index of this chunk. Currently, only used for the streaming mode.
   * @param index index or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaFactChunk setIndex(java.lang.Integer index) {
    this.index = index;
    return this;
  }

  /**
   * Source from which this fact chunk was retrieved. If it was retrieved from the GroundingFacts
   * provided in the request then this field will contain the index of the specific fact from which
   * this chunk was retrieved.
   * @return value or {@code null} for none
   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * Source from which this fact chunk was retrieved. If it was retrieved from the GroundingFacts
   * provided in the request then this field will contain the index of the specific fact from which
   * this chunk was retrieved.
   * @param source source or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaFactChunk setSource(java.lang.String source) {
    this.source = source;
    return this;
  }

  /**
   * More fine-grained information for the source reference.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getSourceMetadata() {
    return sourceMetadata;
  }

  /**
   * More fine-grained information for the source reference.
   * @param sourceMetadata sourceMetadata or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaFactChunk setSourceMetadata(java.util.Map<String, java.lang.String> sourceMetadata) {
    this.sourceMetadata = sourceMetadata;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaFactChunk set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1betaFactChunk) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaFactChunk clone() {
    return (GoogleCloudDiscoveryengineV1betaFactChunk) super.clone();
  }

}
