/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Represents a principal which possesses a particular secret string whose cryptographic hash is
 * specified here. CapTokens ("Capability Tokens") are used in ACLProto. It's expected that ACLs
 * with CapTokenHolders will strongly enforce them by Keystore-wrapping crypto keys for the
 * corresponding CapTokens.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SecurityCredentialsCapTokenHolderProto extends com.google.api.client.json.GenericJson {

  /**
   * The hash of the corresponding capability token. The value is defined to be identical to the one
   * in acl.proto's CapTokenMetadata: 10-byte prefix of HMAC-SHA1 of the token. The HMAC key is the
   * following fixed (non-secret) 512-bit value: 79b1c8f4 82baf523 b8a9ab4a e960f438 c45be041
   * 11f1f222 e8a3f64d aeb05e3d c3576acc ec649194 aede422c 4e48e0d1 ff21234a a6ed6b49 a7fa592e
   * efd7bba3
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tokenHmacSha1Prefix;

  /**
   * The hash of the corresponding capability token. The value is defined to be identical to the one
   * in acl.proto's CapTokenMetadata: 10-byte prefix of HMAC-SHA1 of the token. The HMAC key is the
   * following fixed (non-secret) 512-bit value: 79b1c8f4 82baf523 b8a9ab4a e960f438 c45be041
   * 11f1f222 e8a3f64d aeb05e3d c3576acc ec649194 aede422c 4e48e0d1 ff21234a a6ed6b49 a7fa592e
   * efd7bba3
   * @see #decodeTokenHmacSha1Prefix()
   * @return value or {@code null} for none
   */
  public java.lang.String getTokenHmacSha1Prefix() {
    return tokenHmacSha1Prefix;
  }

  /**
   * The hash of the corresponding capability token. The value is defined to be identical to the one
   * in acl.proto's CapTokenMetadata: 10-byte prefix of HMAC-SHA1 of the token. The HMAC key is the
   * following fixed (non-secret) 512-bit value: 79b1c8f4 82baf523 b8a9ab4a e960f438 c45be041
   * 11f1f222 e8a3f64d aeb05e3d c3576acc ec649194 aede422c 4e48e0d1 ff21234a a6ed6b49 a7fa592e
   * efd7bba3
   * @see #getTokenHmacSha1Prefix()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeTokenHmacSha1Prefix() {
    return com.google.api.client.util.Base64.decodeBase64(tokenHmacSha1Prefix);
  }

  /**
   * The hash of the corresponding capability token. The value is defined to be identical to the one
   * in acl.proto's CapTokenMetadata: 10-byte prefix of HMAC-SHA1 of the token. The HMAC key is the
   * following fixed (non-secret) 512-bit value: 79b1c8f4 82baf523 b8a9ab4a e960f438 c45be041
   * 11f1f222 e8a3f64d aeb05e3d c3576acc ec649194 aede422c 4e48e0d1 ff21234a a6ed6b49 a7fa592e
   * efd7bba3
   * @see #encodeTokenHmacSha1Prefix()
   * @param tokenHmacSha1Prefix tokenHmacSha1Prefix or {@code null} for none
   */
  public SecurityCredentialsCapTokenHolderProto setTokenHmacSha1Prefix(java.lang.String tokenHmacSha1Prefix) {
    this.tokenHmacSha1Prefix = tokenHmacSha1Prefix;
    return this;
  }

  /**
   * The hash of the corresponding capability token. The value is defined to be identical to the one
   * in acl.proto's CapTokenMetadata: 10-byte prefix of HMAC-SHA1 of the token. The HMAC key is the
   * following fixed (non-secret) 512-bit value: 79b1c8f4 82baf523 b8a9ab4a e960f438 c45be041
   * 11f1f222 e8a3f64d aeb05e3d c3576acc ec649194 aede422c 4e48e0d1 ff21234a a6ed6b49 a7fa592e
   * efd7bba3
   * @see #setTokenHmacSha1Prefix()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public SecurityCredentialsCapTokenHolderProto encodeTokenHmacSha1Prefix(byte[] tokenHmacSha1Prefix) {
    this.tokenHmacSha1Prefix = com.google.api.client.util.Base64.encodeBase64URLSafeString(tokenHmacSha1Prefix);
    return this;
  }

  @Override
  public SecurityCredentialsCapTokenHolderProto set(String fieldName, Object value) {
    return (SecurityCredentialsCapTokenHolderProto) super.set(fieldName, value);
  }

  @Override
  public SecurityCredentialsCapTokenHolderProto clone() {
    return (SecurityCredentialsCapTokenHolderProto) super.clone();
  }

}
