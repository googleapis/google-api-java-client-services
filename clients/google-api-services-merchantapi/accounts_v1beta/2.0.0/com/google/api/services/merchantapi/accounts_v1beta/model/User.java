/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * The `User` message represents a user associated with a Merchant Center account. It is used to
 * manage user permissions and access rights within the account. For more information, see
 * [Frequently asked questions about people and access
 * levels](//support.google.com/merchants/answer/12160472).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class User extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The [access rights](https://support.google.com/merchants/answer/12160472?sjid=6789834
   * 943175119429-EU#accesstypes) the user has.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> accessRights;

  /**
   * Identifier. The resource name of the user. Format: `accounts/{account}/user/{email}` Use `me`
   * to refer to your own email address, for example `accounts/{account}/users/me`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The state of the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Optional. The [access rights](https://support.google.com/merchants/answer/12160472?sjid=6789834
   * 943175119429-EU#accesstypes) the user has.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAccessRights() {
    return accessRights;
  }

  /**
   * Optional. The [access rights](https://support.google.com/merchants/answer/12160472?sjid=6789834
   * 943175119429-EU#accesstypes) the user has.
   * @param accessRights accessRights or {@code null} for none
   */
  public User setAccessRights(java.util.List<java.lang.String> accessRights) {
    this.accessRights = accessRights;
    return this;
  }

  /**
   * Identifier. The resource name of the user. Format: `accounts/{account}/user/{email}` Use `me`
   * to refer to your own email address, for example `accounts/{account}/users/me`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the user. Format: `accounts/{account}/user/{email}` Use `me`
   * to refer to your own email address, for example `accounts/{account}/users/me`.
   * @param name name or {@code null} for none
   */
  public User setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The state of the user.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The state of the user.
   * @param state state or {@code null} for none
   */
  public User setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public User set(String fieldName, Object value) {
    return (User) super.set(fieldName, value);
  }

  @Override
  public User clone() {
    return (User) super.clone();
  }

}
