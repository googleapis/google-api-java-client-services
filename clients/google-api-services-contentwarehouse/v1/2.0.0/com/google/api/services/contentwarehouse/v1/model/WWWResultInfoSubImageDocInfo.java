/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The following message contains info of sub image docs, it is populated in query_state and
 * consumed in web image boost twiddler: (go/WebImageBoostTwiddler).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WWWResultInfoSubImageDocInfo extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> additionalSafesearchSignals;

  /**
   * The best thumbnail type is either 300K or 50K.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bestThumbnailType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long crops;

  /**
   * Deepcrop thumbnail cropping hints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deepCropBytes;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger docid;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float documentTrust;

  /**
   * EQ* is a unified signal to capture the emotional quality (e.g. inspiration, lifestyle, context,
   * etc.) of an image. For more information, please refer to go/image-inspiration-ranking-
   * framework.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float eqStar;

  /**
   * Estimated Image Relevance ranging between 0.0 (Off-Topic) to 1.0 (Very Useful).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float estRelevance;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageContentFlowProtoProd flowOutput;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer height;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long height50k;

  /**
   * DeepTags human model score. go/VisualShoppingImageAttributes
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float humanModelScore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float pamirNormalizedScore;

  /**
   * Encoded Safe Search annotations of the image. See
   * image/safesearch/overall/public/image_porn_attachments.h for decoding functions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer pornSignals;

  /**
   * Result is not on the Images Universal blacklist. For more comprehensive filtering of IU images,
   * including this bit, see superroot/impls/images/quality/safesearch/iu_inappropriate_filter_lib.h
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean safeForUniversal;

  /**
   * Salient score, indicating how important an image is to the page it's on. Check go/salient-
   * images-design-doc for details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float salience;

  /**
   * 4-bytes: (low order on the left) RRRRRRRR GGGGGGGG BBBBBBBB SS where R: 8-bits encoding color
   * 'r' G: 8-bits encoding color 'g' B: 8-bits encoding color 'b' S: 2-bits encoding the color
   * source - 00 = from color detection result - 01 = from cairo This field has the salient color
   * information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long salientColorInfo;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float score;

  /**
   * TQ* is a signal to capture the technical quality (e.g. exposure, sharpness, composition, etc.)
   * of an image. For more information, please refer to go/tqstar.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float tqStar;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float tradFrac;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer width;

  /**
   * Width and height of the AREA_50K thumbnail for this image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long width50k;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getAdditionalSafesearchSignals() {
    return additionalSafesearchSignals;
  }

  /**
   * @param additionalSafesearchSignals additionalSafesearchSignals or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setAdditionalSafesearchSignals(java.util.List<java.lang.Integer> additionalSafesearchSignals) {
    this.additionalSafesearchSignals = additionalSafesearchSignals;
    return this;
  }

  /**
   * The best thumbnail type is either 300K or 50K.
   * @return value or {@code null} for none
   */
  public java.lang.String getBestThumbnailType() {
    return bestThumbnailType;
  }

  /**
   * The best thumbnail type is either 300K or 50K.
   * @param bestThumbnailType bestThumbnailType or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setBestThumbnailType(java.lang.String bestThumbnailType) {
    this.bestThumbnailType = bestThumbnailType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getCrops() {
    return crops;
  }

  /**
   * @param crops crops or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setCrops(java.lang.Long crops) {
    this.crops = crops;
    return this;
  }

  /**
   * Deepcrop thumbnail cropping hints.
   * @see #decodeDeepCropBytes()
   * @return value or {@code null} for none
   */
  public java.lang.String getDeepCropBytes() {
    return deepCropBytes;
  }

  /**
   * Deepcrop thumbnail cropping hints.
   * @see #getDeepCropBytes()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeDeepCropBytes() {
    return com.google.api.client.util.Base64.decodeBase64(deepCropBytes);
  }

  /**
   * Deepcrop thumbnail cropping hints.
   * @see #encodeDeepCropBytes()
   * @param deepCropBytes deepCropBytes or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setDeepCropBytes(java.lang.String deepCropBytes) {
    this.deepCropBytes = deepCropBytes;
    return this;
  }

  /**
   * Deepcrop thumbnail cropping hints.
   * @see #setDeepCropBytes()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public WWWResultInfoSubImageDocInfo encodeDeepCropBytes(byte[] deepCropBytes) {
    this.deepCropBytes = com.google.api.client.util.Base64.encodeBase64URLSafeString(deepCropBytes);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getDocid() {
    return docid;
  }

  /**
   * @param docid docid or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setDocid(java.math.BigInteger docid) {
    this.docid = docid;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getDocumentTrust() {
    return documentTrust;
  }

  /**
   * @param documentTrust documentTrust or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setDocumentTrust(java.lang.Float documentTrust) {
    this.documentTrust = documentTrust;
    return this;
  }

  /**
   * EQ* is a unified signal to capture the emotional quality (e.g. inspiration, lifestyle, context,
   * etc.) of an image. For more information, please refer to go/image-inspiration-ranking-
   * framework.
   * @return value or {@code null} for none
   */
  public java.lang.Float getEqStar() {
    return eqStar;
  }

  /**
   * EQ* is a unified signal to capture the emotional quality (e.g. inspiration, lifestyle, context,
   * etc.) of an image. For more information, please refer to go/image-inspiration-ranking-
   * framework.
   * @param eqStar eqStar or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setEqStar(java.lang.Float eqStar) {
    this.eqStar = eqStar;
    return this;
  }

  /**
   * Estimated Image Relevance ranging between 0.0 (Off-Topic) to 1.0 (Very Useful).
   * @return value or {@code null} for none
   */
  public java.lang.Float getEstRelevance() {
    return estRelevance;
  }

  /**
   * Estimated Image Relevance ranging between 0.0 (Off-Topic) to 1.0 (Very Useful).
   * @param estRelevance estRelevance or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setEstRelevance(java.lang.Float estRelevance) {
    this.estRelevance = estRelevance;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public ImageContentFlowProtoProd getFlowOutput() {
    return flowOutput;
  }

  /**
   * @param flowOutput flowOutput or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setFlowOutput(ImageContentFlowProtoProd flowOutput) {
    this.flowOutput = flowOutput;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getHeight() {
    return height;
  }

  /**
   * @param height height or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setHeight(java.lang.Integer height) {
    this.height = height;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getHeight50k() {
    return height50k;
  }

  /**
   * @param height50k height50k or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setHeight50k(java.lang.Long height50k) {
    this.height50k = height50k;
    return this;
  }

  /**
   * DeepTags human model score. go/VisualShoppingImageAttributes
   * @return value or {@code null} for none
   */
  public java.lang.Float getHumanModelScore() {
    return humanModelScore;
  }

  /**
   * DeepTags human model score. go/VisualShoppingImageAttributes
   * @param humanModelScore humanModelScore or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setHumanModelScore(java.lang.Float humanModelScore) {
    this.humanModelScore = humanModelScore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getImageUrl() {
    return imageUrl;
  }

  /**
   * @param imageUrl imageUrl or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setImageUrl(java.lang.String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPamirNormalizedScore() {
    return pamirNormalizedScore;
  }

  /**
   * @param pamirNormalizedScore pamirNormalizedScore or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setPamirNormalizedScore(java.lang.Float pamirNormalizedScore) {
    this.pamirNormalizedScore = pamirNormalizedScore;
    return this;
  }

  /**
   * Encoded Safe Search annotations of the image. See
   * image/safesearch/overall/public/image_porn_attachments.h for decoding functions.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPornSignals() {
    return pornSignals;
  }

  /**
   * Encoded Safe Search annotations of the image. See
   * image/safesearch/overall/public/image_porn_attachments.h for decoding functions.
   * @param pornSignals pornSignals or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setPornSignals(java.lang.Integer pornSignals) {
    this.pornSignals = pornSignals;
    return this;
  }

  /**
   * Result is not on the Images Universal blacklist. For more comprehensive filtering of IU images,
   * including this bit, see superroot/impls/images/quality/safesearch/iu_inappropriate_filter_lib.h
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSafeForUniversal() {
    return safeForUniversal;
  }

  /**
   * Result is not on the Images Universal blacklist. For more comprehensive filtering of IU images,
   * including this bit, see superroot/impls/images/quality/safesearch/iu_inappropriate_filter_lib.h
   * @param safeForUniversal safeForUniversal or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setSafeForUniversal(java.lang.Boolean safeForUniversal) {
    this.safeForUniversal = safeForUniversal;
    return this;
  }

  /**
   * Salient score, indicating how important an image is to the page it's on. Check go/salient-
   * images-design-doc for details.
   * @return value or {@code null} for none
   */
  public java.lang.Float getSalience() {
    return salience;
  }

  /**
   * Salient score, indicating how important an image is to the page it's on. Check go/salient-
   * images-design-doc for details.
   * @param salience salience or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setSalience(java.lang.Float salience) {
    this.salience = salience;
    return this;
  }

  /**
   * 4-bytes: (low order on the left) RRRRRRRR GGGGGGGG BBBBBBBB SS where R: 8-bits encoding color
   * 'r' G: 8-bits encoding color 'g' B: 8-bits encoding color 'b' S: 2-bits encoding the color
   * source - 00 = from color detection result - 01 = from cairo This field has the salient color
   * information.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSalientColorInfo() {
    return salientColorInfo;
  }

  /**
   * 4-bytes: (low order on the left) RRRRRRRR GGGGGGGG BBBBBBBB SS where R: 8-bits encoding color
   * 'r' G: 8-bits encoding color 'g' B: 8-bits encoding color 'b' S: 2-bits encoding the color
   * source - 00 = from color detection result - 01 = from cairo This field has the salient color
   * information.
   * @param salientColorInfo salientColorInfo or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setSalientColorInfo(java.lang.Long salientColorInfo) {
    this.salientColorInfo = salientColorInfo;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getScore() {
    return score;
  }

  /**
   * @param score score or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setScore(java.lang.Float score) {
    this.score = score;
    return this;
  }

  /**
   * TQ* is a signal to capture the technical quality (e.g. exposure, sharpness, composition, etc.)
   * of an image. For more information, please refer to go/tqstar.
   * @return value or {@code null} for none
   */
  public java.lang.Float getTqStar() {
    return tqStar;
  }

  /**
   * TQ* is a signal to capture the technical quality (e.g. exposure, sharpness, composition, etc.)
   * of an image. For more information, please refer to go/tqstar.
   * @param tqStar tqStar or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setTqStar(java.lang.Float tqStar) {
    this.tqStar = tqStar;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getTradFrac() {
    return tradFrac;
  }

  /**
   * @param tradFrac tradFrac or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setTradFrac(java.lang.Float tradFrac) {
    this.tradFrac = tradFrac;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getWidth() {
    return width;
  }

  /**
   * @param width width or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setWidth(java.lang.Integer width) {
    this.width = width;
    return this;
  }

  /**
   * Width and height of the AREA_50K thumbnail for this image.
   * @return value or {@code null} for none
   */
  public java.lang.Long getWidth50k() {
    return width50k;
  }

  /**
   * Width and height of the AREA_50K thumbnail for this image.
   * @param width50k width50k or {@code null} for none
   */
  public WWWResultInfoSubImageDocInfo setWidth50k(java.lang.Long width50k) {
    this.width50k = width50k;
    return this;
  }

  @Override
  public WWWResultInfoSubImageDocInfo set(String fieldName, Object value) {
    return (WWWResultInfoSubImageDocInfo) super.set(fieldName, value);
  }

  @Override
  public WWWResultInfoSubImageDocInfo clone() {
    return (WWWResultInfoSubImageDocInfo) super.clone();
  }

}
