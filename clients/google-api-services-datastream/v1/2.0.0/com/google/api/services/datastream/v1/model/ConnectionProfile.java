/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datastream.v1.model;

/**
 * A set of reusable connection configurations to be used as a source or destination for a stream.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Datastream API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ConnectionProfile extends com.google.api.client.json.GenericJson {

  /**
   * BigQuery Connection Profile configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BigQueryProfile bigqueryProfile;

  /**
   * Output only. The create time of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. Display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Forward SSH tunnel connectivity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ForwardSshTunnelConnectivity forwardSshConnectivity;

  /**
   * Cloud Storage ConnectionProfile configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GcsProfile gcsProfile;

  /**
   * Labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * MySQL ConnectionProfile configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MysqlProfile mysqlProfile;

  /**
   * Output only. Identifier. The resource's name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Oracle ConnectionProfile configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private OracleProfile oracleProfile;

  /**
   * PostgreSQL Connection Profile configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PostgresqlProfile postgresqlProfile;

  /**
   * Private connectivity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PrivateConnectivity privateConnectivity;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzi;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzs;

  /**
   * SQLServer Connection Profile configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SqlServerProfile sqlServerProfile;

  /**
   * Static Service IP connectivity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StaticServiceIpConnectivity staticServiceIpConnectivity;

  /**
   * Output only. The update time of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * BigQuery Connection Profile configuration.
   * @return value or {@code null} for none
   */
  public BigQueryProfile getBigqueryProfile() {
    return bigqueryProfile;
  }

  /**
   * BigQuery Connection Profile configuration.
   * @param bigqueryProfile bigqueryProfile or {@code null} for none
   */
  public ConnectionProfile setBigqueryProfile(BigQueryProfile bigqueryProfile) {
    this.bigqueryProfile = bigqueryProfile;
    return this;
  }

  /**
   * Output only. The create time of the resource.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The create time of the resource.
   * @param createTime createTime or {@code null} for none
   */
  public ConnectionProfile setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. Display name.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. Display name.
   * @param displayName displayName or {@code null} for none
   */
  public ConnectionProfile setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Forward SSH tunnel connectivity.
   * @return value or {@code null} for none
   */
  public ForwardSshTunnelConnectivity getForwardSshConnectivity() {
    return forwardSshConnectivity;
  }

  /**
   * Forward SSH tunnel connectivity.
   * @param forwardSshConnectivity forwardSshConnectivity or {@code null} for none
   */
  public ConnectionProfile setForwardSshConnectivity(ForwardSshTunnelConnectivity forwardSshConnectivity) {
    this.forwardSshConnectivity = forwardSshConnectivity;
    return this;
  }

  /**
   * Cloud Storage ConnectionProfile configuration.
   * @return value or {@code null} for none
   */
  public GcsProfile getGcsProfile() {
    return gcsProfile;
  }

  /**
   * Cloud Storage ConnectionProfile configuration.
   * @param gcsProfile gcsProfile or {@code null} for none
   */
  public ConnectionProfile setGcsProfile(GcsProfile gcsProfile) {
    this.gcsProfile = gcsProfile;
    return this;
  }

  /**
   * Labels.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels.
   * @param labels labels or {@code null} for none
   */
  public ConnectionProfile setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * MySQL ConnectionProfile configuration.
   * @return value or {@code null} for none
   */
  public MysqlProfile getMysqlProfile() {
    return mysqlProfile;
  }

  /**
   * MySQL ConnectionProfile configuration.
   * @param mysqlProfile mysqlProfile or {@code null} for none
   */
  public ConnectionProfile setMysqlProfile(MysqlProfile mysqlProfile) {
    this.mysqlProfile = mysqlProfile;
    return this;
  }

  /**
   * Output only. Identifier. The resource's name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Identifier. The resource's name.
   * @param name name or {@code null} for none
   */
  public ConnectionProfile setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Oracle ConnectionProfile configuration.
   * @return value or {@code null} for none
   */
  public OracleProfile getOracleProfile() {
    return oracleProfile;
  }

  /**
   * Oracle ConnectionProfile configuration.
   * @param oracleProfile oracleProfile or {@code null} for none
   */
  public ConnectionProfile setOracleProfile(OracleProfile oracleProfile) {
    this.oracleProfile = oracleProfile;
    return this;
  }

  /**
   * PostgreSQL Connection Profile configuration.
   * @return value or {@code null} for none
   */
  public PostgresqlProfile getPostgresqlProfile() {
    return postgresqlProfile;
  }

  /**
   * PostgreSQL Connection Profile configuration.
   * @param postgresqlProfile postgresqlProfile or {@code null} for none
   */
  public ConnectionProfile setPostgresqlProfile(PostgresqlProfile postgresqlProfile) {
    this.postgresqlProfile = postgresqlProfile;
    return this;
  }

  /**
   * Private connectivity.
   * @return value or {@code null} for none
   */
  public PrivateConnectivity getPrivateConnectivity() {
    return privateConnectivity;
  }

  /**
   * Private connectivity.
   * @param privateConnectivity privateConnectivity or {@code null} for none
   */
  public ConnectionProfile setPrivateConnectivity(PrivateConnectivity privateConnectivity) {
    this.privateConnectivity = privateConnectivity;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzi() {
    return satisfiesPzi;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzi satisfiesPzi or {@code null} for none
   */
  public ConnectionProfile setSatisfiesPzi(java.lang.Boolean satisfiesPzi) {
    this.satisfiesPzi = satisfiesPzi;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzs satisfiesPzs or {@code null} for none
   */
  public ConnectionProfile setSatisfiesPzs(java.lang.Boolean satisfiesPzs) {
    this.satisfiesPzs = satisfiesPzs;
    return this;
  }

  /**
   * SQLServer Connection Profile configuration.
   * @return value or {@code null} for none
   */
  public SqlServerProfile getSqlServerProfile() {
    return sqlServerProfile;
  }

  /**
   * SQLServer Connection Profile configuration.
   * @param sqlServerProfile sqlServerProfile or {@code null} for none
   */
  public ConnectionProfile setSqlServerProfile(SqlServerProfile sqlServerProfile) {
    this.sqlServerProfile = sqlServerProfile;
    return this;
  }

  /**
   * Static Service IP connectivity.
   * @return value or {@code null} for none
   */
  public StaticServiceIpConnectivity getStaticServiceIpConnectivity() {
    return staticServiceIpConnectivity;
  }

  /**
   * Static Service IP connectivity.
   * @param staticServiceIpConnectivity staticServiceIpConnectivity or {@code null} for none
   */
  public ConnectionProfile setStaticServiceIpConnectivity(StaticServiceIpConnectivity staticServiceIpConnectivity) {
    this.staticServiceIpConnectivity = staticServiceIpConnectivity;
    return this;
  }

  /**
   * Output only. The update time of the resource.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The update time of the resource.
   * @param updateTime updateTime or {@code null} for none
   */
  public ConnectionProfile setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public ConnectionProfile set(String fieldName, Object value) {
    return (ConnectionProfile) super.set(fieldName, value);
  }

  @Override
  public ConnectionProfile clone() {
    return (ConnectionProfile) super.clone();
  }

}
