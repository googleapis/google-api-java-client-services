/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for PhotosVisionServiceFaceFaceParamsLandmarkPosition.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PhotosVisionServiceFaceFaceParamsLandmarkPosition extends com.google.api.client.json.GenericJson {

  /**
   * Some landmarks are set during face finding and some are set during landmark finding. Only after
   * landmarking will all landmarks be set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String landmark;

  /**
   * NOTE that landmark positions may fall outside the bounds of the image when the face is near one
   * or more edges of the image. That is, it is NOT guaranteed that 0 <= x < width or 0 <= y <
   * height. Rounded version of x_f.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer x;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float xF;

  /**
   * Rounded version of y_f.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer y;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float yF;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float z;

  /**
   * Some landmarks are set during face finding and some are set during landmark finding. Only after
   * landmarking will all landmarks be set.
   * @return value or {@code null} for none
   */
  public java.lang.String getLandmark() {
    return landmark;
  }

  /**
   * Some landmarks are set during face finding and some are set during landmark finding. Only after
   * landmarking will all landmarks be set.
   * @param landmark landmark or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsLandmarkPosition setLandmark(java.lang.String landmark) {
    this.landmark = landmark;
    return this;
  }

  /**
   * NOTE that landmark positions may fall outside the bounds of the image when the face is near one
   * or more edges of the image. That is, it is NOT guaranteed that 0 <= x < width or 0 <= y <
   * height. Rounded version of x_f.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getX() {
    return x;
  }

  /**
   * NOTE that landmark positions may fall outside the bounds of the image when the face is near one
   * or more edges of the image. That is, it is NOT guaranteed that 0 <= x < width or 0 <= y <
   * height. Rounded version of x_f.
   * @param x x or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsLandmarkPosition setX(java.lang.Integer x) {
    this.x = x;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getXF() {
    return xF;
  }

  /**
   * @param xF xF or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsLandmarkPosition setXF(java.lang.Float xF) {
    this.xF = xF;
    return this;
  }

  /**
   * Rounded version of y_f.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getY() {
    return y;
  }

  /**
   * Rounded version of y_f.
   * @param y y or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsLandmarkPosition setY(java.lang.Integer y) {
    this.y = y;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getYF() {
    return yF;
  }

  /**
   * @param yF yF or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsLandmarkPosition setYF(java.lang.Float yF) {
    this.yF = yF;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getZ() {
    return z;
  }

  /**
   * @param z z or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsLandmarkPosition setZ(java.lang.Float z) {
    this.z = z;
    return this;
  }

  @Override
  public PhotosVisionServiceFaceFaceParamsLandmarkPosition set(String fieldName, Object value) {
    return (PhotosVisionServiceFaceFaceParamsLandmarkPosition) super.set(fieldName, value);
  }

  @Override
  public PhotosVisionServiceFaceFaceParamsLandmarkPosition clone() {
    return (PhotosVisionServiceFaceFaceParamsLandmarkPosition) super.clone();
  }

}
