/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contactcenterinsights.v1.model;

/**
 * Request for the BulkDownloadFeedbackLabel endpoint.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Contact Center AI Insights API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Filter parent conversations to download feedback labels for. When specified, the
   * feedback labels will be downloaded for the conversations that match the filter. If
   * `template_qa_scorecard_id` is set, all the conversations that match the filter will be paired
   * with the questions under the scorecard for labeling.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String conversationFilter;

  /**
   * Optional. The type of feedback labels that will be downloaded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String feedbackLabelType;

  /**
   * Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and
   * conjunctions (AND). Supported fields: * `issue_model_id` * `qa_question_id` * `qa_scorecard_id`
   * * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` *
   * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * A cloud storage bucket destination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination gcsDestination;

  /**
   * Optional. Limits the maximum number of feedback labels that will be downloaded. The first `N`
   * feedback labels will be downloaded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxDownloadCount;

  /**
   * Required. The parent resource for new feedback labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parent;

  /**
   * A sheets document destination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestSheetsDestination sheetsDestination;

  /**
   * Optional. If set, a template for labeling conversations and scorecard questions will be created
   * from the conversation_filter and the questions under the scorecard(s). The feedback label
   * `filter` will be ignored.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> templateQaScorecardId;

  /**
   * Optional. Filter parent conversations to download feedback labels for. When specified, the
   * feedback labels will be downloaded for the conversations that match the filter. If
   * `template_qa_scorecard_id` is set, all the conversations that match the filter will be paired
   * with the questions under the scorecard for labeling.
   * @return value or {@code null} for none
   */
  public java.lang.String getConversationFilter() {
    return conversationFilter;
  }

  /**
   * Optional. Filter parent conversations to download feedback labels for. When specified, the
   * feedback labels will be downloaded for the conversations that match the filter. If
   * `template_qa_scorecard_id` is set, all the conversations that match the filter will be paired
   * with the questions under the scorecard for labeling.
   * @param conversationFilter conversationFilter or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest setConversationFilter(java.lang.String conversationFilter) {
    this.conversationFilter = conversationFilter;
    return this;
  }

  /**
   * Optional. The type of feedback labels that will be downloaded.
   * @return value or {@code null} for none
   */
  public java.lang.String getFeedbackLabelType() {
    return feedbackLabelType;
  }

  /**
   * Optional. The type of feedback labels that will be downloaded.
   * @param feedbackLabelType feedbackLabelType or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest setFeedbackLabelType(java.lang.String feedbackLabelType) {
    this.feedbackLabelType = feedbackLabelType;
    return this;
  }

  /**
   * Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and
   * conjunctions (AND). Supported fields: * `issue_model_id` * `qa_question_id` * `qa_scorecard_id`
   * * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` *
   * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * Optional. A filter to reduce results to a specific subset. Supports disjunctions (OR) and
   * conjunctions (AND). Supported fields: * `issue_model_id` * `qa_question_id` * `qa_scorecard_id`
   * * `min_create_time` * `max_create_time` * `min_update_time` * `max_update_time` *
   * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING
   * @param filter filter or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * A cloud storage bucket destination.
   * @return value or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination getGcsDestination() {
    return gcsDestination;
  }

  /**
   * A cloud storage bucket destination.
   * @param gcsDestination gcsDestination or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest setGcsDestination(GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination gcsDestination) {
    this.gcsDestination = gcsDestination;
    return this;
  }

  /**
   * Optional. Limits the maximum number of feedback labels that will be downloaded. The first `N`
   * feedback labels will be downloaded.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxDownloadCount() {
    return maxDownloadCount;
  }

  /**
   * Optional. Limits the maximum number of feedback labels that will be downloaded. The first `N`
   * feedback labels will be downloaded.
   * @param maxDownloadCount maxDownloadCount or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest setMaxDownloadCount(java.lang.Integer maxDownloadCount) {
    this.maxDownloadCount = maxDownloadCount;
    return this;
  }

  /**
   * Required. The parent resource for new feedback labels.
   * @return value or {@code null} for none
   */
  public java.lang.String getParent() {
    return parent;
  }

  /**
   * Required. The parent resource for new feedback labels.
   * @param parent parent or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest setParent(java.lang.String parent) {
    this.parent = parent;
    return this;
  }

  /**
   * A sheets document destination.
   * @return value or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestSheetsDestination getSheetsDestination() {
    return sheetsDestination;
  }

  /**
   * A sheets document destination.
   * @param sheetsDestination sheetsDestination or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest setSheetsDestination(GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestSheetsDestination sheetsDestination) {
    this.sheetsDestination = sheetsDestination;
    return this;
  }

  /**
   * Optional. If set, a template for labeling conversations and scorecard questions will be created
   * from the conversation_filter and the questions under the scorecard(s). The feedback label
   * `filter` will be ignored.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTemplateQaScorecardId() {
    return templateQaScorecardId;
  }

  /**
   * Optional. If set, a template for labeling conversations and scorecard questions will be created
   * from the conversation_filter and the questions under the scorecard(s). The feedback label
   * `filter` will be ignored.
   * @param templateQaScorecardId templateQaScorecardId or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest setTemplateQaScorecardId(java.util.List<java.lang.String> templateQaScorecardId) {
    this.templateQaScorecardId = templateQaScorecardId;
    return this;
  }

  @Override
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest set(String fieldName, Object value) {
    return (GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest clone() {
    return (GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest) super.clone();
  }

}
