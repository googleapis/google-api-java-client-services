/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Provider deeplink and associated metadata, in particular restrictions on platform and user's
 * subscription. Next ID: 18
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingModelsMediaDeeplinkInfo extends com.google.api.client.json.GenericJson {

  /**
   * The type of the deeplink. Sometimes the deeplink is not only used for playing media, but also
   * used for other actions. For example, the deeplink could be for playing a movie trailer from
   * YouTube or recording a movie from YouTube TV.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String actionType;

  /**
   * The upper-case, III country code, e.g., "US", in which the deeplink cannot play. For possible
   * values, see: google3/i18n/identifiers/regioncode.h
   * google3/java/com/google/i18n/identifiers/RegionCode.java For details on converting to and from
   * ISO country codes, see http://iii-howto#GettingCanonRegionCodes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> blacklistedCountry;

  /**
   * The upper-case, III country code, e.g., "US", in which the deeplink can play. If unset or has
   * "earth" (b/72566951), means the deeplink can be used world-wide except in |blacklisted_country|
   * list. For possible values, see: google3/i18n/identifiers/regioncode.h
   * google3/java/com/google/i18n/identifiers/RegionCode.java For details on converting to and from
   * ISO country codes, see http://iii-howto#GettingCanonRegionCodes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> country;

  /**
   * Deeplink to the media. This deeplink is meant to be send to the provider app on available
   * platforms without any modifications. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deeplink;

  /**
   * Some providers give us an opaque, unstable deeplink to use at execution-time. E.g. see
   * http://go/collab-ranking-nl-uri#heading=h.ndmdfw388tk3 Such a deeplink is not useful for
   * logging, caching, comparing to other candidate deeplinks, etc. So most fulfillment code will
   * want the traditional, stable deeplink that can be interpreted, parsed, cached, etc (found in
   * the "deeplink" field, above). But this opaque, unstable deeplink (if non-empty) must be
   * included in the music initiation clientop.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deeplinkForExecution;

  /**
   * Indicate whether the deeplink is compatible with credentials. If true, CCS will not send the
   * credentials to cast app. Currently this field is only used for voice-follow on cases on smart
   * displays.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean incompatibleWithCredentials;

  /**
   * List of offers that allow user to access the deeplink, that is if the list contains
   * PREMIUM_SUBSCRIPTION and BASIC_SUBSCRIPTION users that have either premium or basic
   * subscription can use the deeplink. If the list is empty it means that there are no subscription
   * restrictions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> offer;

  /**
   * This field is only used when "offer" includes a PAY_PER_USE. When "offer" includes a
   * PAY_PER_USE, paid_offer_detail will contain offers for BUY and RENT offer_types with associated
   * cost info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSemanticParsingModelsMediaPaidOfferDetail> paidOfferDetail;

  /**
   * List of platforms that support the deeplink. If the list is empty it means that there are no
   * platform restrictions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> platform;

  /**
   * Document scores which are used for ranking action links. Document scores might come from CDOC
   * in Raffia or other indexing systems. For example, for web pages, the score shows how likely the
   * web page (composite doc) which generated this link refers to the given entity or how close a
   * particular entity is with the given composite doc. For the larger design, please see
   * go/ma_dedup. For PACIFIC_COLLAB_RANKING deeplink, the score is the normalized confidence score
   * returned by partner for fulfillment candidate. For pivot candidates, the score is calculated
   * with the index of the alternative results.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double score;

  /**
   * Name of subscription packages which are granted access to this deeplink. This is to match
   * exactly the end users authentication system. This is to be used if the offer is
   * BASIC_SUBSCRIPTION or PREMIUM_SUBSCRIPTION. There can be multiple packages -- the user needs
   * only to authenticate with a single package. For more information please see: go/subscription-
   * package
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> subscriptionPackageName;

  /**
   * Tags associated with the content played by this deeplink. In the common case, the deeplink is
   * supposed to specify a music entity within the provider's inventory, and the provider app should
   * decide the actual content based on the user's account profile (e.g., for a deeplink to an
   * artist, playing tracks from the artist or similar artists, and for a song, playing the official
   * album recording of the song). But in some cases, the deeplink belong to special content. For
   * example, for an artist a seed radio based on the artist, and a live or karaoke version of a
   * song. We use this field to mark such special content types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> tag;

  /**
   * A time window in which the deeplink is valid. If not set, the deeplink is considered valid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingModelsMediaDeeplinkInfoTimeWindow validTimeWindow;

  /**
   * DEPRECATED: This field is ignored by understanding and fulfillment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vuiId;

  /**
   * Additional info specific to YouTube Deeplink (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingModelsMediaYouTubeDeeplinkInfo youtubeDeeplinkInfo;

  /**
   * The type of the deeplink. Sometimes the deeplink is not only used for playing media, but also
   * used for other actions. For example, the deeplink could be for playing a movie trailer from
   * YouTube or recording a movie from YouTube TV.
   * @return value or {@code null} for none
   */
  public java.lang.String getActionType() {
    return actionType;
  }

  /**
   * The type of the deeplink. Sometimes the deeplink is not only used for playing media, but also
   * used for other actions. For example, the deeplink could be for playing a movie trailer from
   * YouTube or recording a movie from YouTube TV.
   * @param actionType actionType or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setActionType(java.lang.String actionType) {
    this.actionType = actionType;
    return this;
  }

  /**
   * The upper-case, III country code, e.g., "US", in which the deeplink cannot play. For possible
   * values, see: google3/i18n/identifiers/regioncode.h
   * google3/java/com/google/i18n/identifiers/RegionCode.java For details on converting to and from
   * ISO country codes, see http://iii-howto#GettingCanonRegionCodes.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getBlacklistedCountry() {
    return blacklistedCountry;
  }

  /**
   * The upper-case, III country code, e.g., "US", in which the deeplink cannot play. For possible
   * values, see: google3/i18n/identifiers/regioncode.h
   * google3/java/com/google/i18n/identifiers/RegionCode.java For details on converting to and from
   * ISO country codes, see http://iii-howto#GettingCanonRegionCodes.
   * @param blacklistedCountry blacklistedCountry or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setBlacklistedCountry(java.util.List<java.lang.String> blacklistedCountry) {
    this.blacklistedCountry = blacklistedCountry;
    return this;
  }

  /**
   * The upper-case, III country code, e.g., "US", in which the deeplink can play. If unset or has
   * "earth" (b/72566951), means the deeplink can be used world-wide except in |blacklisted_country|
   * list. For possible values, see: google3/i18n/identifiers/regioncode.h
   * google3/java/com/google/i18n/identifiers/RegionCode.java For details on converting to and from
   * ISO country codes, see http://iii-howto#GettingCanonRegionCodes.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCountry() {
    return country;
  }

  /**
   * The upper-case, III country code, e.g., "US", in which the deeplink can play. If unset or has
   * "earth" (b/72566951), means the deeplink can be used world-wide except in |blacklisted_country|
   * list. For possible values, see: google3/i18n/identifiers/regioncode.h
   * google3/java/com/google/i18n/identifiers/RegionCode.java For details on converting to and from
   * ISO country codes, see http://iii-howto#GettingCanonRegionCodes.
   * @param country country or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setCountry(java.util.List<java.lang.String> country) {
    this.country = country;
    return this;
  }

  /**
   * Deeplink to the media. This deeplink is meant to be send to the provider app on available
   * platforms without any modifications. Required.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeeplink() {
    return deeplink;
  }

  /**
   * Deeplink to the media. This deeplink is meant to be send to the provider app on available
   * platforms without any modifications. Required.
   * @param deeplink deeplink or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setDeeplink(java.lang.String deeplink) {
    this.deeplink = deeplink;
    return this;
  }

  /**
   * Some providers give us an opaque, unstable deeplink to use at execution-time. E.g. see
   * http://go/collab-ranking-nl-uri#heading=h.ndmdfw388tk3 Such a deeplink is not useful for
   * logging, caching, comparing to other candidate deeplinks, etc. So most fulfillment code will
   * want the traditional, stable deeplink that can be interpreted, parsed, cached, etc (found in
   * the "deeplink" field, above). But this opaque, unstable deeplink (if non-empty) must be
   * included in the music initiation clientop.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeeplinkForExecution() {
    return deeplinkForExecution;
  }

  /**
   * Some providers give us an opaque, unstable deeplink to use at execution-time. E.g. see
   * http://go/collab-ranking-nl-uri#heading=h.ndmdfw388tk3 Such a deeplink is not useful for
   * logging, caching, comparing to other candidate deeplinks, etc. So most fulfillment code will
   * want the traditional, stable deeplink that can be interpreted, parsed, cached, etc (found in
   * the "deeplink" field, above). But this opaque, unstable deeplink (if non-empty) must be
   * included in the music initiation clientop.
   * @param deeplinkForExecution deeplinkForExecution or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setDeeplinkForExecution(java.lang.String deeplinkForExecution) {
    this.deeplinkForExecution = deeplinkForExecution;
    return this;
  }

  /**
   * Indicate whether the deeplink is compatible with credentials. If true, CCS will not send the
   * credentials to cast app. Currently this field is only used for voice-follow on cases on smart
   * displays.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIncompatibleWithCredentials() {
    return incompatibleWithCredentials;
  }

  /**
   * Indicate whether the deeplink is compatible with credentials. If true, CCS will not send the
   * credentials to cast app. Currently this field is only used for voice-follow on cases on smart
   * displays.
   * @param incompatibleWithCredentials incompatibleWithCredentials or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setIncompatibleWithCredentials(java.lang.Boolean incompatibleWithCredentials) {
    this.incompatibleWithCredentials = incompatibleWithCredentials;
    return this;
  }

  /**
   * List of offers that allow user to access the deeplink, that is if the list contains
   * PREMIUM_SUBSCRIPTION and BASIC_SUBSCRIPTION users that have either premium or basic
   * subscription can use the deeplink. If the list is empty it means that there are no subscription
   * restrictions.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOffer() {
    return offer;
  }

  /**
   * List of offers that allow user to access the deeplink, that is if the list contains
   * PREMIUM_SUBSCRIPTION and BASIC_SUBSCRIPTION users that have either premium or basic
   * subscription can use the deeplink. If the list is empty it means that there are no subscription
   * restrictions.
   * @param offer offer or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setOffer(java.util.List<java.lang.String> offer) {
    this.offer = offer;
    return this;
  }

  /**
   * This field is only used when "offer" includes a PAY_PER_USE. When "offer" includes a
   * PAY_PER_USE, paid_offer_detail will contain offers for BUY and RENT offer_types with associated
   * cost info.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSemanticParsingModelsMediaPaidOfferDetail> getPaidOfferDetail() {
    return paidOfferDetail;
  }

  /**
   * This field is only used when "offer" includes a PAY_PER_USE. When "offer" includes a
   * PAY_PER_USE, paid_offer_detail will contain offers for BUY and RENT offer_types with associated
   * cost info.
   * @param paidOfferDetail paidOfferDetail or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setPaidOfferDetail(java.util.List<NlpSemanticParsingModelsMediaPaidOfferDetail> paidOfferDetail) {
    this.paidOfferDetail = paidOfferDetail;
    return this;
  }

  /**
   * List of platforms that support the deeplink. If the list is empty it means that there are no
   * platform restrictions.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPlatform() {
    return platform;
  }

  /**
   * List of platforms that support the deeplink. If the list is empty it means that there are no
   * platform restrictions.
   * @param platform platform or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setPlatform(java.util.List<java.lang.String> platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Document scores which are used for ranking action links. Document scores might come from CDOC
   * in Raffia or other indexing systems. For example, for web pages, the score shows how likely the
   * web page (composite doc) which generated this link refers to the given entity or how close a
   * particular entity is with the given composite doc. For the larger design, please see
   * go/ma_dedup. For PACIFIC_COLLAB_RANKING deeplink, the score is the normalized confidence score
   * returned by partner for fulfillment candidate. For pivot candidates, the score is calculated
   * with the index of the alternative results.
   * @return value or {@code null} for none
   */
  public java.lang.Double getScore() {
    return score;
  }

  /**
   * Document scores which are used for ranking action links. Document scores might come from CDOC
   * in Raffia or other indexing systems. For example, for web pages, the score shows how likely the
   * web page (composite doc) which generated this link refers to the given entity or how close a
   * particular entity is with the given composite doc. For the larger design, please see
   * go/ma_dedup. For PACIFIC_COLLAB_RANKING deeplink, the score is the normalized confidence score
   * returned by partner for fulfillment candidate. For pivot candidates, the score is calculated
   * with the index of the alternative results.
   * @param score score or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setScore(java.lang.Double score) {
    this.score = score;
    return this;
  }

  /**
   * Name of subscription packages which are granted access to this deeplink. This is to match
   * exactly the end users authentication system. This is to be used if the offer is
   * BASIC_SUBSCRIPTION or PREMIUM_SUBSCRIPTION. There can be multiple packages -- the user needs
   * only to authenticate with a single package. For more information please see: go/subscription-
   * package
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSubscriptionPackageName() {
    return subscriptionPackageName;
  }

  /**
   * Name of subscription packages which are granted access to this deeplink. This is to match
   * exactly the end users authentication system. This is to be used if the offer is
   * BASIC_SUBSCRIPTION or PREMIUM_SUBSCRIPTION. There can be multiple packages -- the user needs
   * only to authenticate with a single package. For more information please see: go/subscription-
   * package
   * @param subscriptionPackageName subscriptionPackageName or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setSubscriptionPackageName(java.util.List<java.lang.String> subscriptionPackageName) {
    this.subscriptionPackageName = subscriptionPackageName;
    return this;
  }

  /**
   * Tags associated with the content played by this deeplink. In the common case, the deeplink is
   * supposed to specify a music entity within the provider's inventory, and the provider app should
   * decide the actual content based on the user's account profile (e.g., for a deeplink to an
   * artist, playing tracks from the artist or similar artists, and for a song, playing the official
   * album recording of the song). But in some cases, the deeplink belong to special content. For
   * example, for an artist a seed radio based on the artist, and a live or karaoke version of a
   * song. We use this field to mark such special content types.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTag() {
    return tag;
  }

  /**
   * Tags associated with the content played by this deeplink. In the common case, the deeplink is
   * supposed to specify a music entity within the provider's inventory, and the provider app should
   * decide the actual content based on the user's account profile (e.g., for a deeplink to an
   * artist, playing tracks from the artist or similar artists, and for a song, playing the official
   * album recording of the song). But in some cases, the deeplink belong to special content. For
   * example, for an artist a seed radio based on the artist, and a live or karaoke version of a
   * song. We use this field to mark such special content types.
   * @param tag tag or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setTag(java.util.List<java.lang.String> tag) {
    this.tag = tag;
    return this;
  }

  /**
   * A time window in which the deeplink is valid. If not set, the deeplink is considered valid.
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfoTimeWindow getValidTimeWindow() {
    return validTimeWindow;
  }

  /**
   * A time window in which the deeplink is valid. If not set, the deeplink is considered valid.
   * @param validTimeWindow validTimeWindow or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setValidTimeWindow(NlpSemanticParsingModelsMediaDeeplinkInfoTimeWindow validTimeWindow) {
    this.validTimeWindow = validTimeWindow;
    return this;
  }

  /**
   * DEPRECATED: This field is ignored by understanding and fulfillment.
   * @return value or {@code null} for none
   */
  public java.lang.String getVuiId() {
    return vuiId;
  }

  /**
   * DEPRECATED: This field is ignored by understanding and fulfillment.
   * @param vuiId vuiId or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setVuiId(java.lang.String vuiId) {
    this.vuiId = vuiId;
    return this;
  }

  /**
   * Additional info specific to YouTube Deeplink (if applicable).
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaYouTubeDeeplinkInfo getYoutubeDeeplinkInfo() {
    return youtubeDeeplinkInfo;
  }

  /**
   * Additional info specific to YouTube Deeplink (if applicable).
   * @param youtubeDeeplinkInfo youtubeDeeplinkInfo or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaDeeplinkInfo setYoutubeDeeplinkInfo(NlpSemanticParsingModelsMediaYouTubeDeeplinkInfo youtubeDeeplinkInfo) {
    this.youtubeDeeplinkInfo = youtubeDeeplinkInfo;
    return this;
  }

  @Override
  public NlpSemanticParsingModelsMediaDeeplinkInfo set(String fieldName, Object value) {
    return (NlpSemanticParsingModelsMediaDeeplinkInfo) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingModelsMediaDeeplinkInfo clone() {
    return (NlpSemanticParsingModelsMediaDeeplinkInfo) super.clone();
  }

}
