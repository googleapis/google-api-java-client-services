/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.logging.v2.model;

/**
 * Configuration for an indexed field.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Logging API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IndexConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The timestamp when the index was last modified.This is used to return the
   * timestamp, and will be ignored if supplied during update.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. The LogEntry field path to index.Note that some paths are automatically indexed, and
   * other paths are not eligible for indexing. See indexing documentation(
   * https://cloud.google.com/logging/docs/view/advanced-queries#indexed-fields) for details.For
   * example: jsonPayload.request.status
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fieldPath;

  /**
   * Required. The type of data in this index.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Output only. The timestamp when the index was last modified.This is used to return the
   * timestamp, and will be ignored if supplied during update.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the index was last modified.This is used to return the
   * timestamp, and will be ignored if supplied during update.
   * @param createTime createTime or {@code null} for none
   */
  public IndexConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. The LogEntry field path to index.Note that some paths are automatically indexed, and
   * other paths are not eligible for indexing. See indexing documentation(
   * https://cloud.google.com/logging/docs/view/advanced-queries#indexed-fields) for details.For
   * example: jsonPayload.request.status
   * @return value or {@code null} for none
   */
  public java.lang.String getFieldPath() {
    return fieldPath;
  }

  /**
   * Required. The LogEntry field path to index.Note that some paths are automatically indexed, and
   * other paths are not eligible for indexing. See indexing documentation(
   * https://cloud.google.com/logging/docs/view/advanced-queries#indexed-fields) for details.For
   * example: jsonPayload.request.status
   * @param fieldPath fieldPath or {@code null} for none
   */
  public IndexConfig setFieldPath(java.lang.String fieldPath) {
    this.fieldPath = fieldPath;
    return this;
  }

  /**
   * Required. The type of data in this index.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Required. The type of data in this index.
   * @param type type or {@code null} for none
   */
  public IndexConfig setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public IndexConfig set(String fieldName, Object value) {
    return (IndexConfig) super.set(fieldName, value);
  }

  @Override
  public IndexConfig clone() {
    return (IndexConfig) super.clone();
  }

}
