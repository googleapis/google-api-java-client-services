/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Sentiment information extracted from the annotated content by Goldmine. This mirrors
 * nlp_sentiment.SentimentAnnotation. Next tag: 5.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class YoutubeCommentsSentimentSentiment extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<YoutubeCommentsSentimentSentimentEntitySentimentAnnotation> entitySentiment;

  /**
   * Total magnitude of the sentiment. A positive number representing the total intensity of
   * sentiment regardless of positive vs negative polarity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float magnitude;

  /**
   * Polarity of the sentiment. Value is between -1.0 and 1.0 inclusive, with larger numbers
   * representing more positive sentiment and negative numbers representing negative sentiment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float polarity;

  /**
   * The average score over sentences. This combines the polarity and magnitude signals into one
   * value. Bounded between -1.0 and 1.0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float score;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<YoutubeCommentsSentimentSentimentEntitySentimentAnnotation> getEntitySentiment() {
    return entitySentiment;
  }

  /**
   * @param entitySentiment entitySentiment or {@code null} for none
   */
  public YoutubeCommentsSentimentSentiment setEntitySentiment(java.util.List<YoutubeCommentsSentimentSentimentEntitySentimentAnnotation> entitySentiment) {
    this.entitySentiment = entitySentiment;
    return this;
  }

  /**
   * Total magnitude of the sentiment. A positive number representing the total intensity of
   * sentiment regardless of positive vs negative polarity.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMagnitude() {
    return magnitude;
  }

  /**
   * Total magnitude of the sentiment. A positive number representing the total intensity of
   * sentiment regardless of positive vs negative polarity.
   * @param magnitude magnitude or {@code null} for none
   */
  public YoutubeCommentsSentimentSentiment setMagnitude(java.lang.Float magnitude) {
    this.magnitude = magnitude;
    return this;
  }

  /**
   * Polarity of the sentiment. Value is between -1.0 and 1.0 inclusive, with larger numbers
   * representing more positive sentiment and negative numbers representing negative sentiment.
   * @return value or {@code null} for none
   */
  public java.lang.Float getPolarity() {
    return polarity;
  }

  /**
   * Polarity of the sentiment. Value is between -1.0 and 1.0 inclusive, with larger numbers
   * representing more positive sentiment and negative numbers representing negative sentiment.
   * @param polarity polarity or {@code null} for none
   */
  public YoutubeCommentsSentimentSentiment setPolarity(java.lang.Float polarity) {
    this.polarity = polarity;
    return this;
  }

  /**
   * The average score over sentences. This combines the polarity and magnitude signals into one
   * value. Bounded between -1.0 and 1.0.
   * @return value or {@code null} for none
   */
  public java.lang.Float getScore() {
    return score;
  }

  /**
   * The average score over sentences. This combines the polarity and magnitude signals into one
   * value. Bounded between -1.0 and 1.0.
   * @param score score or {@code null} for none
   */
  public YoutubeCommentsSentimentSentiment setScore(java.lang.Float score) {
    this.score = score;
    return this;
  }

  @Override
  public YoutubeCommentsSentimentSentiment set(String fieldName, Object value) {
    return (YoutubeCommentsSentimentSentiment) super.set(fieldName, value);
  }

  @Override
  public YoutubeCommentsSentimentSentiment clone() {
    return (YoutubeCommentsSentimentSentiment) super.clone();
  }

}
