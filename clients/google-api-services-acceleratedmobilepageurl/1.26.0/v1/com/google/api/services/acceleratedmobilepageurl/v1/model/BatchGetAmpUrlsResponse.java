/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.acceleratedmobilepageurl.v1.model;

/**
 * Batch AMP URL response.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Accelerated Mobile Pages (AMP) URL API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BatchGetAmpUrlsResponse extends com.google.api.client.json.GenericJson {

  /**
   * For each URL in BatchAmpUrlsRequest, the URL response. The response might not be in the same
   * order as URLs in the batch request. If BatchAmpUrlsRequest contains duplicate URLs, AmpUrl is
   * generated only once.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AmpUrl> ampUrls;

  static {
    // hack to force ProGuard to consider AmpUrl used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AmpUrl.class);
  }

  /**
   * The errors for requested URLs that have no AMP URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AmpUrlError> urlErrors;

  static {
    // hack to force ProGuard to consider AmpUrlError used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AmpUrlError.class);
  }

  /**
   * For each URL in BatchAmpUrlsRequest, the URL response. The response might not be in the same
   * order as URLs in the batch request. If BatchAmpUrlsRequest contains duplicate URLs, AmpUrl is
   * generated only once.
   * @return value or {@code null} for none
   */
  public java.util.List<AmpUrl> getAmpUrls() {
    return ampUrls;
  }

  /**
   * For each URL in BatchAmpUrlsRequest, the URL response. The response might not be in the same
   * order as URLs in the batch request. If BatchAmpUrlsRequest contains duplicate URLs, AmpUrl is
   * generated only once.
   * @param ampUrls ampUrls or {@code null} for none
   */
  public BatchGetAmpUrlsResponse setAmpUrls(java.util.List<AmpUrl> ampUrls) {
    this.ampUrls = ampUrls;
    return this;
  }

  /**
   * The errors for requested URLs that have no AMP URL.
   * @return value or {@code null} for none
   */
  public java.util.List<AmpUrlError> getUrlErrors() {
    return urlErrors;
  }

  /**
   * The errors for requested URLs that have no AMP URL.
   * @param urlErrors urlErrors or {@code null} for none
   */
  public BatchGetAmpUrlsResponse setUrlErrors(java.util.List<AmpUrlError> urlErrors) {
    this.urlErrors = urlErrors;
    return this;
  }

  @Override
  public BatchGetAmpUrlsResponse set(String fieldName, Object value) {
    return (BatchGetAmpUrlsResponse) super.set(fieldName, value);
  }

  @Override
  public BatchGetAmpUrlsResponse clone() {
    return (BatchGetAmpUrlsResponse) super.clone();
  }

}
