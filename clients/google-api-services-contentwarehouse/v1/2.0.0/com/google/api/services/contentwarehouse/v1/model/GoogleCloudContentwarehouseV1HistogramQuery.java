/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The histogram request.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContentwarehouseV1HistogramQuery extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Filter the result of histogram query by the property names. It only works with
   * histogram query count('FilterableProperties'). It is an optional. It will perform histogram on
   * all the property names for all the document schemas. Setting this field will have a better
   * performance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter filters;

  /**
   * An expression specifies a histogram request against matching documents for searches. See
   * SearchDocumentsRequest.histogram_queries for details about syntax.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String histogramQuery;

  /**
   * Controls if the histogram query requires the return of a precise count. Enable this flag may
   * adversely impact performance. Defaults to true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean requirePreciseResultSize;

  /**
   * Optional. Filter the result of histogram query by the property names. It only works with
   * histogram query count('FilterableProperties'). It is an optional. It will perform histogram on
   * all the property names for all the document schemas. Setting this field will have a better
   * performance.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter getFilters() {
    return filters;
  }

  /**
   * Optional. Filter the result of histogram query by the property names. It only works with
   * histogram query count('FilterableProperties'). It is an optional. It will perform histogram on
   * all the property names for all the document schemas. Setting this field will have a better
   * performance.
   * @param filters filters or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1HistogramQuery setFilters(GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter filters) {
    this.filters = filters;
    return this;
  }

  /**
   * An expression specifies a histogram request against matching documents for searches. See
   * SearchDocumentsRequest.histogram_queries for details about syntax.
   * @return value or {@code null} for none
   */
  public java.lang.String getHistogramQuery() {
    return histogramQuery;
  }

  /**
   * An expression specifies a histogram request against matching documents for searches. See
   * SearchDocumentsRequest.histogram_queries for details about syntax.
   * @param histogramQuery histogramQuery or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1HistogramQuery setHistogramQuery(java.lang.String histogramQuery) {
    this.histogramQuery = histogramQuery;
    return this;
  }

  /**
   * Controls if the histogram query requires the return of a precise count. Enable this flag may
   * adversely impact performance. Defaults to true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRequirePreciseResultSize() {
    return requirePreciseResultSize;
  }

  /**
   * Controls if the histogram query requires the return of a precise count. Enable this flag may
   * adversely impact performance. Defaults to true.
   * @param requirePreciseResultSize requirePreciseResultSize or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1HistogramQuery setRequirePreciseResultSize(java.lang.Boolean requirePreciseResultSize) {
    this.requirePreciseResultSize = requirePreciseResultSize;
    return this;
  }

  @Override
  public GoogleCloudContentwarehouseV1HistogramQuery set(String fieldName, Object value) {
    return (GoogleCloudContentwarehouseV1HistogramQuery) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContentwarehouseV1HistogramQuery clone() {
    return (GoogleCloudContentwarehouseV1HistogramQuery) super.clone();
  }

}
