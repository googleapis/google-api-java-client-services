/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The NsrChunksProto corresponds to the NSRChunks class. The data saved by the proto and the class
 * is the same. We provide utilities to go from one to the other.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityNsrNsrChunksProto extends com.google.api.client.json.GenericJson {

  /**
   * Primary NSR sitechunk. In most of the cases it's same as HOST_LEVEL_V3 sitechunked canonical
   * url of the document. In rare, but important cases it's based on page markup (see
   * quality/nsr/util/sitechunker.h for details).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryChunk;

  /**
   * Secondary NSR sitechunk. When present, it provides more granular chunking than primary
   * sitechunks (see quality/nsr/util/sitechunker.h for details). Note that the NSRChunks class does
   * not store trivial secondary chunks. Be aware of this when constructing NsrChunksProto from
   * scratch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> secondaryChunks;

  /**
   * Primary NSR sitechunk. In most of the cases it's same as HOST_LEVEL_V3 sitechunked canonical
   * url of the document. In rare, but important cases it's based on page markup (see
   * quality/nsr/util/sitechunker.h for details).
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryChunk() {
    return primaryChunk;
  }

  /**
   * Primary NSR sitechunk. In most of the cases it's same as HOST_LEVEL_V3 sitechunked canonical
   * url of the document. In rare, but important cases it's based on page markup (see
   * quality/nsr/util/sitechunker.h for details).
   * @param primaryChunk primaryChunk or {@code null} for none
   */
  public QualityNsrNsrChunksProto setPrimaryChunk(java.lang.String primaryChunk) {
    this.primaryChunk = primaryChunk;
    return this;
  }

  /**
   * Secondary NSR sitechunk. When present, it provides more granular chunking than primary
   * sitechunks (see quality/nsr/util/sitechunker.h for details). Note that the NSRChunks class does
   * not store trivial secondary chunks. Be aware of this when constructing NsrChunksProto from
   * scratch.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSecondaryChunks() {
    return secondaryChunks;
  }

  /**
   * Secondary NSR sitechunk. When present, it provides more granular chunking than primary
   * sitechunks (see quality/nsr/util/sitechunker.h for details). Note that the NSRChunks class does
   * not store trivial secondary chunks. Be aware of this when constructing NsrChunksProto from
   * scratch.
   * @param secondaryChunks secondaryChunks or {@code null} for none
   */
  public QualityNsrNsrChunksProto setSecondaryChunks(java.util.List<java.lang.String> secondaryChunks) {
    this.secondaryChunks = secondaryChunks;
    return this;
  }

  @Override
  public QualityNsrNsrChunksProto set(String fieldName, Object value) {
    return (QualityNsrNsrChunksProto) super.set(fieldName, value);
  }

  @Override
  public QualityNsrNsrChunksProto clone() {
    return (QualityNsrNsrChunksProto) super.clone();
  }

}
