/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.realtimebidding.v1.model;

/**
 * Represents an Authorized Buyers user list. Authorized Buyers can create/update/list user lists.
 * Once a user list is created in the system, Authorized Buyers can add users to the user list using
 * the bulk uploader API. Alternatively, users can be added by hosting a tag on the advertiser's
 * page.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Real-time Bidding API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UserList extends com.google.api.client.json.GenericJson {

  /**
   * The description for the user list.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. Display name of the user list. This must be unique across all user lists for a given
   * account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Required. The number of days a user's cookie stays on the user list. The field must be between
   * 0 and 540 inclusive.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long membershipDurationDays;

  /**
   * Output only. Name of the user list that must follow the pattern
   * `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer
   * who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer,
   * `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64
   * identifier assigned by Google to uniquely identify a user list.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The status of the user list. A new user list starts out as open.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * Required. The URL restriction for the user list.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UrlRestriction urlRestriction;

  /**
   * The description for the user list.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * The description for the user list.
   * @param description description or {@code null} for none
   */
  public UserList setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. Display name of the user list. This must be unique across all user lists for a given
   * account.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. Display name of the user list. This must be unique across all user lists for a given
   * account.
   * @param displayName displayName or {@code null} for none
   */
  public UserList setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The number of days a user's cookie stays on the user list. The field must be between
   * 0 and 540 inclusive.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMembershipDurationDays() {
    return membershipDurationDays;
  }

  /**
   * Required. The number of days a user's cookie stays on the user list. The field must be between
   * 0 and 540 inclusive.
   * @param membershipDurationDays membershipDurationDays or {@code null} for none
   */
  public UserList setMembershipDurationDays(java.lang.Long membershipDurationDays) {
    this.membershipDurationDays = membershipDurationDays;
    return this;
  }

  /**
   * Output only. Name of the user list that must follow the pattern
   * `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer
   * who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer,
   * `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64
   * identifier assigned by Google to uniquely identify a user list.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the user list that must follow the pattern
   * `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer
   * who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer,
   * `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64
   * identifier assigned by Google to uniquely identify a user list.
   * @param name name or {@code null} for none
   */
  public UserList setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The status of the user list. A new user list starts out as open.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Output only. The status of the user list. A new user list starts out as open.
   * @param status status or {@code null} for none
   */
  public UserList setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  /**
   * Required. The URL restriction for the user list.
   * @return value or {@code null} for none
   */
  public UrlRestriction getUrlRestriction() {
    return urlRestriction;
  }

  /**
   * Required. The URL restriction for the user list.
   * @param urlRestriction urlRestriction or {@code null} for none
   */
  public UserList setUrlRestriction(UrlRestriction urlRestriction) {
    this.urlRestriction = urlRestriction;
    return this;
  }

  @Override
  public UserList set(String fieldName, Object value) {
    return (UserList) super.set(fieldName, value);
  }

  @Override
  public UserList clone() {
    return (UserList) super.clone();
  }

}
