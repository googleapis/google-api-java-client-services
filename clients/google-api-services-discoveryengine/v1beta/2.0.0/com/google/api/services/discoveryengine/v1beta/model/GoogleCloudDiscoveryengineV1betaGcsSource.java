/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1beta.model;

/**
 * Cloud Storage location for input content.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1betaGcsSource extends com.google.api.client.json.GenericJson {

  /**
   * The schema to use when parsing the data from the source. Supported values for document imports:
   * * `document` (default): One JSON Document per line. Each document must have a valid
   * Document.id. * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by `input_uris`
   * will become a document, with the ID set to the first 128 bits of SHA256(URI) encoded as a hex
   * string. Supported values for user even imports: * `user_event` (default): One JSON UserEvent
   * per line.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataSchema;

  /**
   * Required. Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can
   * match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern
   * matching one or more files, such as `gs://bucket/directory.json`. A request can contain at most
   * 100 files (or 100,000 files if `data_schema` is `content`). Each file can be up to 2 GB (or 100
   * MB if `data_schema` is `content`).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> inputUris;

  /**
   * The schema to use when parsing the data from the source. Supported values for document imports:
   * * `document` (default): One JSON Document per line. Each document must have a valid
   * Document.id. * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by `input_uris`
   * will become a document, with the ID set to the first 128 bits of SHA256(URI) encoded as a hex
   * string. Supported values for user even imports: * `user_event` (default): One JSON UserEvent
   * per line.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataSchema() {
    return dataSchema;
  }

  /**
   * The schema to use when parsing the data from the source. Supported values for document imports:
   * * `document` (default): One JSON Document per line. Each document must have a valid
   * Document.id. * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by `input_uris`
   * will become a document, with the ID set to the first 128 bits of SHA256(URI) encoded as a hex
   * string. Supported values for user even imports: * `user_event` (default): One JSON UserEvent
   * per line.
   * @param dataSchema dataSchema or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaGcsSource setDataSchema(java.lang.String dataSchema) {
    this.dataSchema = dataSchema;
    return this;
  }

  /**
   * Required. Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can
   * match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern
   * matching one or more files, such as `gs://bucket/directory.json`. A request can contain at most
   * 100 files (or 100,000 files if `data_schema` is `content`). Each file can be up to 2 GB (or 100
   * MB if `data_schema` is `content`).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getInputUris() {
    return inputUris;
  }

  /**
   * Required. Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can
   * match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern
   * matching one or more files, such as `gs://bucket/directory.json`. A request can contain at most
   * 100 files (or 100,000 files if `data_schema` is `content`). Each file can be up to 2 GB (or 100
   * MB if `data_schema` is `content`).
   * @param inputUris inputUris or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaGcsSource setInputUris(java.util.List<java.lang.String> inputUris) {
    this.inputUris = inputUris;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaGcsSource set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1betaGcsSource) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaGcsSource clone() {
    return (GoogleCloudDiscoveryengineV1betaGcsSource) super.clone();
  }

}
