/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Information about the broadcast to YouTube.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class YouTubeLiveBroadcastEvent extends com.google.api.client.json.GenericJson {

  /**
   * Input only. The broadcast id, used to control the lifecycle of the event on YouTube
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String broadcastId;

  /**
   * YouTube channel associated with the broadcast.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String channelId;

  /**
   * Output only. A URL that can be used to watch the meeting broadcast. Will be populated by the
   * backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String viewUrl;

  /**
   * Input only. The broadcast id, used to control the lifecycle of the event on YouTube
   * @return value or {@code null} for none
   */
  public java.lang.String getBroadcastId() {
    return broadcastId;
  }

  /**
   * Input only. The broadcast id, used to control the lifecycle of the event on YouTube
   * @param broadcastId broadcastId or {@code null} for none
   */
  public YouTubeLiveBroadcastEvent setBroadcastId(java.lang.String broadcastId) {
    this.broadcastId = broadcastId;
    return this;
  }

  /**
   * YouTube channel associated with the broadcast.
   * @return value or {@code null} for none
   */
  public java.lang.String getChannelId() {
    return channelId;
  }

  /**
   * YouTube channel associated with the broadcast.
   * @param channelId channelId or {@code null} for none
   */
  public YouTubeLiveBroadcastEvent setChannelId(java.lang.String channelId) {
    this.channelId = channelId;
    return this;
  }

  /**
   * Output only. A URL that can be used to watch the meeting broadcast. Will be populated by the
   * backend.
   * @return value or {@code null} for none
   */
  public java.lang.String getViewUrl() {
    return viewUrl;
  }

  /**
   * Output only. A URL that can be used to watch the meeting broadcast. Will be populated by the
   * backend.
   * @param viewUrl viewUrl or {@code null} for none
   */
  public YouTubeLiveBroadcastEvent setViewUrl(java.lang.String viewUrl) {
    this.viewUrl = viewUrl;
    return this;
  }

  @Override
  public YouTubeLiveBroadcastEvent set(String fieldName, Object value) {
    return (YouTubeLiveBroadcastEvent) super.set(fieldName, value);
  }

  @Override
  public YouTubeLiveBroadcastEvent clone() {
    return (YouTubeLiveBroadcastEvent) super.clone();
  }

}
