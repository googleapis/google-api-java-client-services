/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmmigration.v1alpha1.model;

/**
 * Details for creation of a Persistent Disk.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VM Migration API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PersistentDiskDefaults extends com.google.api.client.json.GenericJson {

  /**
   * A map of labels to associate with the Persistent Disk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> additionalLabels;

  /**
   * Optional. The name of the Persistent Disk to create.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskName;

  /**
   * The disk type to use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskType;

  /**
   * Optional. The encryption to apply to the disk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Encryption encryption;

  /**
   * Required. The ordinal number of the source VM disk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer sourceDiskNumber;

  /**
   * Optional. Details for attachment of the disk to a VM. Used when the disk is set to be attached
   * to a target VM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VmAttachmentDetails vmAttachmentDetails;

  /**
   * A map of labels to associate with the Persistent Disk.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAdditionalLabels() {
    return additionalLabels;
  }

  /**
   * A map of labels to associate with the Persistent Disk.
   * @param additionalLabels additionalLabels or {@code null} for none
   */
  public PersistentDiskDefaults setAdditionalLabels(java.util.Map<String, java.lang.String> additionalLabels) {
    this.additionalLabels = additionalLabels;
    return this;
  }

  /**
   * Optional. The name of the Persistent Disk to create.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskName() {
    return diskName;
  }

  /**
   * Optional. The name of the Persistent Disk to create.
   * @param diskName diskName or {@code null} for none
   */
  public PersistentDiskDefaults setDiskName(java.lang.String diskName) {
    this.diskName = diskName;
    return this;
  }

  /**
   * The disk type to use.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskType() {
    return diskType;
  }

  /**
   * The disk type to use.
   * @param diskType diskType or {@code null} for none
   */
  public PersistentDiskDefaults setDiskType(java.lang.String diskType) {
    this.diskType = diskType;
    return this;
  }

  /**
   * Optional. The encryption to apply to the disk.
   * @return value or {@code null} for none
   */
  public Encryption getEncryption() {
    return encryption;
  }

  /**
   * Optional. The encryption to apply to the disk.
   * @param encryption encryption or {@code null} for none
   */
  public PersistentDiskDefaults setEncryption(Encryption encryption) {
    this.encryption = encryption;
    return this;
  }

  /**
   * Required. The ordinal number of the source VM disk.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSourceDiskNumber() {
    return sourceDiskNumber;
  }

  /**
   * Required. The ordinal number of the source VM disk.
   * @param sourceDiskNumber sourceDiskNumber or {@code null} for none
   */
  public PersistentDiskDefaults setSourceDiskNumber(java.lang.Integer sourceDiskNumber) {
    this.sourceDiskNumber = sourceDiskNumber;
    return this;
  }

  /**
   * Optional. Details for attachment of the disk to a VM. Used when the disk is set to be attached
   * to a target VM.
   * @return value or {@code null} for none
   */
  public VmAttachmentDetails getVmAttachmentDetails() {
    return vmAttachmentDetails;
  }

  /**
   * Optional. Details for attachment of the disk to a VM. Used when the disk is set to be attached
   * to a target VM.
   * @param vmAttachmentDetails vmAttachmentDetails or {@code null} for none
   */
  public PersistentDiskDefaults setVmAttachmentDetails(VmAttachmentDetails vmAttachmentDetails) {
    this.vmAttachmentDetails = vmAttachmentDetails;
    return this;
  }

  @Override
  public PersistentDiskDefaults set(String fieldName, Object value) {
    return (PersistentDiskDefaults) super.set(fieldName, value);
  }

  @Override
  public PersistentDiskDefaults clone() {
    return (PersistentDiskDefaults) super.clone();
  }

}
