/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * Shipping rate group definitions. Only the last one is allowed to have an empty
 * `applicable_shipping_labels`, which means "everything else". The other
 * `applicable_shipping_labels` must not overlap.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RateGroup extends com.google.api.client.json.GenericJson {

  /**
   * Required. A list of [shipping labels](https://support.google.com/merchants/answer/6324504)
   * defining the products to which this rate group applies to. This is a disjunction: only one of
   * the labels has to match for the rate group to apply. May only be empty for the last rate group
   * of a service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> applicableShippingLabels;

  /**
   * Optional. A list of carrier rates that can be referred to by `main_table` or `single_value`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CarrierRate> carrierRates;

  static {
    // hack to force ProGuard to consider CarrierRate used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(CarrierRate.class);
  }

  /**
   * A table defining the rate group, when `single_value` is not expressive enough. Can only be set
   * if `single_value` is not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Table mainTable;

  /**
   * Optional. Name of the rate group. If set has to be unique within shipping service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value of the rate group (For example flat rate $10). Can only be set if `main_table` and
   * `subtables` are not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Value singleValue;

  /**
   * Optional. A list of subtables referred to by `main_table`. Can only be set if `main_table` is
   * set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Table> subtables;

  /**
   * Required. A list of [shipping labels](https://support.google.com/merchants/answer/6324504)
   * defining the products to which this rate group applies to. This is a disjunction: only one of
   * the labels has to match for the rate group to apply. May only be empty for the last rate group
   * of a service.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getApplicableShippingLabels() {
    return applicableShippingLabels;
  }

  /**
   * Required. A list of [shipping labels](https://support.google.com/merchants/answer/6324504)
   * defining the products to which this rate group applies to. This is a disjunction: only one of
   * the labels has to match for the rate group to apply. May only be empty for the last rate group
   * of a service.
   * @param applicableShippingLabels applicableShippingLabels or {@code null} for none
   */
  public RateGroup setApplicableShippingLabels(java.util.List<java.lang.String> applicableShippingLabels) {
    this.applicableShippingLabels = applicableShippingLabels;
    return this;
  }

  /**
   * Optional. A list of carrier rates that can be referred to by `main_table` or `single_value`.
   * @return value or {@code null} for none
   */
  public java.util.List<CarrierRate> getCarrierRates() {
    return carrierRates;
  }

  /**
   * Optional. A list of carrier rates that can be referred to by `main_table` or `single_value`.
   * @param carrierRates carrierRates or {@code null} for none
   */
  public RateGroup setCarrierRates(java.util.List<CarrierRate> carrierRates) {
    this.carrierRates = carrierRates;
    return this;
  }

  /**
   * A table defining the rate group, when `single_value` is not expressive enough. Can only be set
   * if `single_value` is not set.
   * @return value or {@code null} for none
   */
  public Table getMainTable() {
    return mainTable;
  }

  /**
   * A table defining the rate group, when `single_value` is not expressive enough. Can only be set
   * if `single_value` is not set.
   * @param mainTable mainTable or {@code null} for none
   */
  public RateGroup setMainTable(Table mainTable) {
    this.mainTable = mainTable;
    return this;
  }

  /**
   * Optional. Name of the rate group. If set has to be unique within shipping service.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Optional. Name of the rate group. If set has to be unique within shipping service.
   * @param name name or {@code null} for none
   */
  public RateGroup setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The value of the rate group (For example flat rate $10). Can only be set if `main_table` and
   * `subtables` are not set.
   * @return value or {@code null} for none
   */
  public Value getSingleValue() {
    return singleValue;
  }

  /**
   * The value of the rate group (For example flat rate $10). Can only be set if `main_table` and
   * `subtables` are not set.
   * @param singleValue singleValue or {@code null} for none
   */
  public RateGroup setSingleValue(Value singleValue) {
    this.singleValue = singleValue;
    return this;
  }

  /**
   * Optional. A list of subtables referred to by `main_table`. Can only be set if `main_table` is
   * set.
   * @return value or {@code null} for none
   */
  public java.util.List<Table> getSubtables() {
    return subtables;
  }

  /**
   * Optional. A list of subtables referred to by `main_table`. Can only be set if `main_table` is
   * set.
   * @param subtables subtables or {@code null} for none
   */
  public RateGroup setSubtables(java.util.List<Table> subtables) {
    this.subtables = subtables;
    return this;
  }

  @Override
  public RateGroup set(String fieldName, Object value) {
    return (RateGroup) super.set(fieldName, value);
  }

  @Override
  public RateGroup clone() {
    return (RateGroup) super.clone();
  }

}
