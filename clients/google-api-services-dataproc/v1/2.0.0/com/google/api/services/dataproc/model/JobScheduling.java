/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * Job scheduling options.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class JobScheduling extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Maximum number of times per hour a driver may be restarted as a result of driver
   * exiting with non-zero code before job is reported failed.A job may be reported as thrashing if
   * the driver exits with a non-zero code four times within a 10-minute window.Maximum value is
   * 10.Note: This restartable job option is not supported in Dataproc workflow templates
   * (https://cloud.google.com/dataproc/docs/concepts/workflows/using-
   * workflows#adding_jobs_to_a_template).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxFailuresPerHour;

  /**
   * Optional. Maximum total number of times a driver may be restarted as a result of the driver
   * exiting with a non-zero code. After the maximum number is reached, the job will be reported as
   * failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in
   * Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-
   * workflows#adding_jobs_to_a_template).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxFailuresTotal;

  /**
   * Optional. Maximum number of times per hour a driver may be restarted as a result of driver
   * exiting with non-zero code before job is reported failed.A job may be reported as thrashing if
   * the driver exits with a non-zero code four times within a 10-minute window.Maximum value is
   * 10.Note: This restartable job option is not supported in Dataproc workflow templates
   * (https://cloud.google.com/dataproc/docs/concepts/workflows/using-
   * workflows#adding_jobs_to_a_template).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxFailuresPerHour() {
    return maxFailuresPerHour;
  }

  /**
   * Optional. Maximum number of times per hour a driver may be restarted as a result of driver
   * exiting with non-zero code before job is reported failed.A job may be reported as thrashing if
   * the driver exits with a non-zero code four times within a 10-minute window.Maximum value is
   * 10.Note: This restartable job option is not supported in Dataproc workflow templates
   * (https://cloud.google.com/dataproc/docs/concepts/workflows/using-
   * workflows#adding_jobs_to_a_template).
   * @param maxFailuresPerHour maxFailuresPerHour or {@code null} for none
   */
  public JobScheduling setMaxFailuresPerHour(java.lang.Integer maxFailuresPerHour) {
    this.maxFailuresPerHour = maxFailuresPerHour;
    return this;
  }

  /**
   * Optional. Maximum total number of times a driver may be restarted as a result of the driver
   * exiting with a non-zero code. After the maximum number is reached, the job will be reported as
   * failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in
   * Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-
   * workflows#adding_jobs_to_a_template).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxFailuresTotal() {
    return maxFailuresTotal;
  }

  /**
   * Optional. Maximum total number of times a driver may be restarted as a result of the driver
   * exiting with a non-zero code. After the maximum number is reached, the job will be reported as
   * failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in
   * Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-
   * workflows#adding_jobs_to_a_template).
   * @param maxFailuresTotal maxFailuresTotal or {@code null} for none
   */
  public JobScheduling setMaxFailuresTotal(java.lang.Integer maxFailuresTotal) {
    this.maxFailuresTotal = maxFailuresTotal;
    return this;
  }

  @Override
  public JobScheduling set(String fieldName, Object value) {
    return (JobScheduling) super.set(fieldName, value);
  }

  @Override
  public JobScheduling clone() {
    return (JobScheduling) super.clone();
  }

}
