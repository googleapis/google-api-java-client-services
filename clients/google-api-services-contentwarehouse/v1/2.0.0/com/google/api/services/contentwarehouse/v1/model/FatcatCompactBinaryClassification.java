/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for FatcatCompactBinaryClassification.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FatcatCompactBinaryClassification extends com.google.api.client.json.GenericJson {

  /**
   * Either binary_classifier will be set, using the enum above, or binary_classifier_name will be
   * set, if it is not one of the classifiers in the enum - never both.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String binaryClassifier;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String binaryClassifierName;

  /**
   * A CompactDocClassification will not usually have a weight. For a CompactSiteClassification,
   * this value will be 0...127 corresponding to 0.0...1.0, indicating fraction of the site that
   * this label applies to
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer discreteFraction;

  /**
   * Either binary_classifier will be set, using the enum above, or binary_classifier_name will be
   * set, if it is not one of the classifiers in the enum - never both.
   * @return value or {@code null} for none
   */
  public java.lang.String getBinaryClassifier() {
    return binaryClassifier;
  }

  /**
   * Either binary_classifier will be set, using the enum above, or binary_classifier_name will be
   * set, if it is not one of the classifiers in the enum - never both.
   * @param binaryClassifier binaryClassifier or {@code null} for none
   */
  public FatcatCompactBinaryClassification setBinaryClassifier(java.lang.String binaryClassifier) {
    this.binaryClassifier = binaryClassifier;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBinaryClassifierName() {
    return binaryClassifierName;
  }

  /**
   * @param binaryClassifierName binaryClassifierName or {@code null} for none
   */
  public FatcatCompactBinaryClassification setBinaryClassifierName(java.lang.String binaryClassifierName) {
    this.binaryClassifierName = binaryClassifierName;
    return this;
  }

  /**
   * A CompactDocClassification will not usually have a weight. For a CompactSiteClassification,
   * this value will be 0...127 corresponding to 0.0...1.0, indicating fraction of the site that
   * this label applies to
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDiscreteFraction() {
    return discreteFraction;
  }

  /**
   * A CompactDocClassification will not usually have a weight. For a CompactSiteClassification,
   * this value will be 0...127 corresponding to 0.0...1.0, indicating fraction of the site that
   * this label applies to
   * @param discreteFraction discreteFraction or {@code null} for none
   */
  public FatcatCompactBinaryClassification setDiscreteFraction(java.lang.Integer discreteFraction) {
    this.discreteFraction = discreteFraction;
    return this;
  }

  @Override
  public FatcatCompactBinaryClassification set(String fieldName, Object value) {
    return (FatcatCompactBinaryClassification) super.set(fieldName, value);
  }

  @Override
  public FatcatCompactBinaryClassification clone() {
    return (FatcatCompactBinaryClassification) super.clone();
  }

}
