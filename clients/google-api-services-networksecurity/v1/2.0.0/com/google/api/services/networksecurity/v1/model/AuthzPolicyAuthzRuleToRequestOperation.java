/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networksecurity.v1.model;

/**
 * Describes properties of one or more targets of a request.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Security API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AuthzPolicyAuthzRuleToRequestOperation extends com.google.api.client.json.GenericJson {

  /**
   * Optional. A list of headers to match against in http header.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AuthzPolicyAuthzRuleToRequestOperationHeaderSet headerSet;

  /**
   * Optional. A list of HTTP Hosts to match against. The match can be one of exact, prefix, suffix,
   * or contains (substring match). Matches are always case sensitive unless the ignoreCase is set.
   * Limited to 5 matches.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AuthzPolicyAuthzRuleStringMatch> hosts;

  static {
    // hack to force ProGuard to consider AuthzPolicyAuthzRuleStringMatch used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AuthzPolicyAuthzRuleStringMatch.class);
  }

  /**
   * Optional. A list of HTTP methods to match against. Each entry must be a valid HTTP method name
   * (GET, PUT, POST, HEAD, PATCH, DELETE, OPTIONS). It only allows exact match and is always case
   * sensitive.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> methods;

  /**
   * Optional. A list of paths to match against. The match can be one of exact, prefix, suffix, or
   * contains (substring match). Matches are always case sensitive unless the ignoreCase is set.
   * Limited to 5 matches. Note that this path match includes the query parameters. For gRPC
   * services, this should be a fully-qualified name of the form /package.service/method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AuthzPolicyAuthzRuleStringMatch> paths;

  static {
    // hack to force ProGuard to consider AuthzPolicyAuthzRuleStringMatch used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AuthzPolicyAuthzRuleStringMatch.class);
  }

  /**
   * Optional. A list of headers to match against in http header.
   * @return value or {@code null} for none
   */
  public AuthzPolicyAuthzRuleToRequestOperationHeaderSet getHeaderSet() {
    return headerSet;
  }

  /**
   * Optional. A list of headers to match against in http header.
   * @param headerSet headerSet or {@code null} for none
   */
  public AuthzPolicyAuthzRuleToRequestOperation setHeaderSet(AuthzPolicyAuthzRuleToRequestOperationHeaderSet headerSet) {
    this.headerSet = headerSet;
    return this;
  }

  /**
   * Optional. A list of HTTP Hosts to match against. The match can be one of exact, prefix, suffix,
   * or contains (substring match). Matches are always case sensitive unless the ignoreCase is set.
   * Limited to 5 matches.
   * @return value or {@code null} for none
   */
  public java.util.List<AuthzPolicyAuthzRuleStringMatch> getHosts() {
    return hosts;
  }

  /**
   * Optional. A list of HTTP Hosts to match against. The match can be one of exact, prefix, suffix,
   * or contains (substring match). Matches are always case sensitive unless the ignoreCase is set.
   * Limited to 5 matches.
   * @param hosts hosts or {@code null} for none
   */
  public AuthzPolicyAuthzRuleToRequestOperation setHosts(java.util.List<AuthzPolicyAuthzRuleStringMatch> hosts) {
    this.hosts = hosts;
    return this;
  }

  /**
   * Optional. A list of HTTP methods to match against. Each entry must be a valid HTTP method name
   * (GET, PUT, POST, HEAD, PATCH, DELETE, OPTIONS). It only allows exact match and is always case
   * sensitive.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getMethods() {
    return methods;
  }

  /**
   * Optional. A list of HTTP methods to match against. Each entry must be a valid HTTP method name
   * (GET, PUT, POST, HEAD, PATCH, DELETE, OPTIONS). It only allows exact match and is always case
   * sensitive.
   * @param methods methods or {@code null} for none
   */
  public AuthzPolicyAuthzRuleToRequestOperation setMethods(java.util.List<java.lang.String> methods) {
    this.methods = methods;
    return this;
  }

  /**
   * Optional. A list of paths to match against. The match can be one of exact, prefix, suffix, or
   * contains (substring match). Matches are always case sensitive unless the ignoreCase is set.
   * Limited to 5 matches. Note that this path match includes the query parameters. For gRPC
   * services, this should be a fully-qualified name of the form /package.service/method.
   * @return value or {@code null} for none
   */
  public java.util.List<AuthzPolicyAuthzRuleStringMatch> getPaths() {
    return paths;
  }

  /**
   * Optional. A list of paths to match against. The match can be one of exact, prefix, suffix, or
   * contains (substring match). Matches are always case sensitive unless the ignoreCase is set.
   * Limited to 5 matches. Note that this path match includes the query parameters. For gRPC
   * services, this should be a fully-qualified name of the form /package.service/method.
   * @param paths paths or {@code null} for none
   */
  public AuthzPolicyAuthzRuleToRequestOperation setPaths(java.util.List<AuthzPolicyAuthzRuleStringMatch> paths) {
    this.paths = paths;
    return this;
  }

  @Override
  public AuthzPolicyAuthzRuleToRequestOperation set(String fieldName, Object value) {
    return (AuthzPolicyAuthzRuleToRequestOperation) super.set(fieldName, value);
  }

  @Override
  public AuthzPolicyAuthzRuleToRequestOperation clone() {
    return (AuthzPolicyAuthzRuleToRequestOperation) super.clone();
  }

}
