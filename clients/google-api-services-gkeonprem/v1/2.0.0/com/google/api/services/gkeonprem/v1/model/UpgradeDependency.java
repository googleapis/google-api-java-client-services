/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkeonprem.v1.model;

/**
 * UpgradeDependency represents a dependency when upgrading a resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Anthos On-Prem API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UpgradeDependency extends com.google.api.client.json.GenericJson {

  /**
   * Current version of the dependency e.g. 1.15.0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String currentVersion;

  /**
   * Local name of the dependency.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String localName;

  /**
   * Resource name of the dependency.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceName;

  /**
   * Target version of the dependency e.g. 1.16.1. This is the version the dependency needs to be
   * upgraded to before a resource can be upgraded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetVersion;

  /**
   * Current version of the dependency e.g. 1.15.0.
   * @return value or {@code null} for none
   */
  public java.lang.String getCurrentVersion() {
    return currentVersion;
  }

  /**
   * Current version of the dependency e.g. 1.15.0.
   * @param currentVersion currentVersion or {@code null} for none
   */
  public UpgradeDependency setCurrentVersion(java.lang.String currentVersion) {
    this.currentVersion = currentVersion;
    return this;
  }

  /**
   * Local name of the dependency.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocalName() {
    return localName;
  }

  /**
   * Local name of the dependency.
   * @param localName localName or {@code null} for none
   */
  public UpgradeDependency setLocalName(java.lang.String localName) {
    this.localName = localName;
    return this;
  }

  /**
   * Resource name of the dependency.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceName() {
    return resourceName;
  }

  /**
   * Resource name of the dependency.
   * @param resourceName resourceName or {@code null} for none
   */
  public UpgradeDependency setResourceName(java.lang.String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Target version of the dependency e.g. 1.16.1. This is the version the dependency needs to be
   * upgraded to before a resource can be upgraded.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetVersion() {
    return targetVersion;
  }

  /**
   * Target version of the dependency e.g. 1.16.1. This is the version the dependency needs to be
   * upgraded to before a resource can be upgraded.
   * @param targetVersion targetVersion or {@code null} for none
   */
  public UpgradeDependency setTargetVersion(java.lang.String targetVersion) {
    this.targetVersion = targetVersion;
    return this;
  }

  @Override
  public UpgradeDependency set(String fieldName, Object value) {
    return (UpgradeDependency) super.set(fieldName, value);
  }

  @Override
  public UpgradeDependency clone() {
    return (UpgradeDependency) super.clone();
  }

}
