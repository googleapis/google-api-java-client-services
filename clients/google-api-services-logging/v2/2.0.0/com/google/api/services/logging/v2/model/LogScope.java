/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.logging.v2.model;

/**
 * Describes a group of resources to read log entries from.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Logging API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LogScope extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The creation timestamp of the log scope.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Describes this log scope.The maximum length of the description is 8000 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. The resource name of the log scope.Log scopes are only available in the global
   * location. For example:projects/my-project/locations/global/logScopes/my-log-scope
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Names of one or more parent resources: projects/[PROJECT_ID]May alternatively be one
   * or more views:
   * projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]A log scope
   * can include a maximum of 5 projects and a maximum of 100 resources in total.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> resourceNames;

  /**
   * Output only. The last update timestamp of the log scope.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The creation timestamp of the log scope.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The creation timestamp of the log scope.
   * @param createTime createTime or {@code null} for none
   */
  public LogScope setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Describes this log scope.The maximum length of the description is 8000 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Describes this log scope.The maximum length of the description is 8000 characters.
   * @param description description or {@code null} for none
   */
  public LogScope setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. The resource name of the log scope.Log scopes are only available in the global
   * location. For example:projects/my-project/locations/global/logScopes/my-log-scope
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the log scope.Log scopes are only available in the global
   * location. For example:projects/my-project/locations/global/logScopes/my-log-scope
   * @param name name or {@code null} for none
   */
  public LogScope setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Names of one or more parent resources: projects/[PROJECT_ID]May alternatively be one
   * or more views:
   * projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]A log scope
   * can include a maximum of 5 projects and a maximum of 100 resources in total.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getResourceNames() {
    return resourceNames;
  }

  /**
   * Required. Names of one or more parent resources: projects/[PROJECT_ID]May alternatively be one
   * or more views:
   * projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]A log scope
   * can include a maximum of 5 projects and a maximum of 100 resources in total.
   * @param resourceNames resourceNames or {@code null} for none
   */
  public LogScope setResourceNames(java.util.List<java.lang.String> resourceNames) {
    this.resourceNames = resourceNames;
    return this;
  }

  /**
   * Output only. The last update timestamp of the log scope.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The last update timestamp of the log scope.
   * @param updateTime updateTime or {@code null} for none
   */
  public LogScope setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public LogScope set(String fieldName, Object value) {
    return (LogScope) super.set(fieldName, value);
  }

  @Override
  public LogScope clone() {
    return (LogScope) super.clone();
  }

}
