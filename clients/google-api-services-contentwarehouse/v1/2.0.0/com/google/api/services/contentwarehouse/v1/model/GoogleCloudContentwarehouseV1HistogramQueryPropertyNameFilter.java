/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter extends com.google.api.client.json.GenericJson {

  /**
   * This filter specifies the exact document schema(s) Document.document_schema_name to run
   * histogram query against. It is optional. It will perform histogram for property names for all
   * the document schemas if it is not set. At most 10 document schema names are allowed. Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> documentSchemas;

  /**
   * It is optional. It will perform histogram for all the property names if it is not set. The
   * properties need to be defined with the is_filterable flag set to true and the name of the
   * property should be in the format: "schemaId.propertyName". The property needs to be defined in
   * the schema. Example: the schema id is abc. Then the name of property for property MORTGAGE_TYPE
   * will be "abc.MORTGAGE_TYPE".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> propertyNames;

  /**
   * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String yAxis;

  /**
   * This filter specifies the exact document schema(s) Document.document_schema_name to run
   * histogram query against. It is optional. It will perform histogram for property names for all
   * the document schemas if it is not set. At most 10 document schema names are allowed. Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDocumentSchemas() {
    return documentSchemas;
  }

  /**
   * This filter specifies the exact document schema(s) Document.document_schema_name to run
   * histogram query against. It is optional. It will perform histogram for property names for all
   * the document schemas if it is not set. At most 10 document schema names are allowed. Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * @param documentSchemas documentSchemas or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter setDocumentSchemas(java.util.List<java.lang.String> documentSchemas) {
    this.documentSchemas = documentSchemas;
    return this;
  }

  /**
   * It is optional. It will perform histogram for all the property names if it is not set. The
   * properties need to be defined with the is_filterable flag set to true and the name of the
   * property should be in the format: "schemaId.propertyName". The property needs to be defined in
   * the schema. Example: the schema id is abc. Then the name of property for property MORTGAGE_TYPE
   * will be "abc.MORTGAGE_TYPE".
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPropertyNames() {
    return propertyNames;
  }

  /**
   * It is optional. It will perform histogram for all the property names if it is not set. The
   * properties need to be defined with the is_filterable flag set to true and the name of the
   * property should be in the format: "schemaId.propertyName". The property needs to be defined in
   * the schema. Example: the schema id is abc. Then the name of property for property MORTGAGE_TYPE
   * will be "abc.MORTGAGE_TYPE".
   * @param propertyNames propertyNames or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter setPropertyNames(java.util.List<java.lang.String> propertyNames) {
    this.propertyNames = propertyNames;
    return this;
  }

  /**
   * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not set.
   * @return value or {@code null} for none
   */
  public java.lang.String getYAxis() {
    return yAxis;
  }

  /**
   * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not set.
   * @param yAxis yAxis or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter setYAxis(java.lang.String yAxis) {
    this.yAxis = yAxis;
    return this;
  }

  @Override
  public GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter set(String fieldName, Object value) {
    return (GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter clone() {
    return (GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter) super.clone();
  }

}
