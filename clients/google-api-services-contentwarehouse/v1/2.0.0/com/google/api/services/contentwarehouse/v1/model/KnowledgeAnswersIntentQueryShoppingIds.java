/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Additional shopping identifiers related to an entity or IQL function call. This must be passed
 * along to the shopping backend (go/o4) to aid in fulfillment. Because the shopping data models do
 * not always line up 1-1 with KG entities and are not always reconciled with each other, the
 * message may contain multiple ids. Next id: 8 LINT.IfChange
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KnowledgeAnswersIntentQueryShoppingIds extends com.google.api.client.json.GenericJson {

  /**
   * A shopping aspect cluster id. These are attributes mined from mentions in web articles.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.math.BigInteger> aspectClusterIds;

  /**
   * Brand entity id. Brands are fully reconciled with KG entities so there should never be
   * ambiguity as to which brand applies (those would be separate MIDs).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger brandEntityId;

  /**
   * A category in the shopping browseonomy, a taxonomy of product types that can be found at go/bx.
   * This field is expected to contain the deepest node in the browseonomy that the intent or
   * argument pertains to, which may be an internal node. It does not contain the entire path of
   * categories.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> bxCategoryIds;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<KnowledgeAnswersIntentQueryShoppingIdsMeasureValue> measures;

  /**
   * List of merchant customer account IDs associated with a merchant entity in KG. NOTE: Soon to be
   * deprecated, see go/merchant_mids_in_indexer design
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> merchantIds;

  /**
   * A shopping merchant source id, i.e. the key used to identify Shopping Merchants as they are
   * imported into KG. For reference, these IDs are populated in: * CommerceDB under
   * BusinessIdentification.knowledge_graph.source_id * KG using the /shopping/merchant/id predicate
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> merchantSourceIds;

  /**
   * Moka attributes of a product. This includes color tags but currently not brand. We allow the
   * possibility for multiple tag ids, as multiple Moka tag ids may map to the same mid, and we may
   * not be able to find a single matching Moka tag. Also, cross-category Moka colors intentionally
   * map a single color mentioned in the query to an expansion of many tags representing points in
   * LAB color space (although this representation is expected to change).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> tagIds;

  /**
   * A shopping aspect cluster id. These are attributes mined from mentions in web articles.
   * @return value or {@code null} for none
   */
  public java.util.List<java.math.BigInteger> getAspectClusterIds() {
    return aspectClusterIds;
  }

  /**
   * A shopping aspect cluster id. These are attributes mined from mentions in web articles.
   * @param aspectClusterIds aspectClusterIds or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryShoppingIds setAspectClusterIds(java.util.List<java.math.BigInteger> aspectClusterIds) {
    this.aspectClusterIds = aspectClusterIds;
    return this;
  }

  /**
   * Brand entity id. Brands are fully reconciled with KG entities so there should never be
   * ambiguity as to which brand applies (those would be separate MIDs).
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getBrandEntityId() {
    return brandEntityId;
  }

  /**
   * Brand entity id. Brands are fully reconciled with KG entities so there should never be
   * ambiguity as to which brand applies (those would be separate MIDs).
   * @param brandEntityId brandEntityId or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryShoppingIds setBrandEntityId(java.math.BigInteger brandEntityId) {
    this.brandEntityId = brandEntityId;
    return this;
  }

  /**
   * A category in the shopping browseonomy, a taxonomy of product types that can be found at go/bx.
   * This field is expected to contain the deepest node in the browseonomy that the intent or
   * argument pertains to, which may be an internal node. It does not contain the entire path of
   * categories.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getBxCategoryIds() {
    return bxCategoryIds;
  }

  /**
   * A category in the shopping browseonomy, a taxonomy of product types that can be found at go/bx.
   * This field is expected to contain the deepest node in the browseonomy that the intent or
   * argument pertains to, which may be an internal node. It does not contain the entire path of
   * categories.
   * @param bxCategoryIds bxCategoryIds or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryShoppingIds setBxCategoryIds(java.util.List<java.lang.Integer> bxCategoryIds) {
    this.bxCategoryIds = bxCategoryIds;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<KnowledgeAnswersIntentQueryShoppingIdsMeasureValue> getMeasures() {
    return measures;
  }

  /**
   * @param measures measures or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryShoppingIds setMeasures(java.util.List<KnowledgeAnswersIntentQueryShoppingIdsMeasureValue> measures) {
    this.measures = measures;
    return this;
  }

  /**
   * List of merchant customer account IDs associated with a merchant entity in KG. NOTE: Soon to be
   * deprecated, see go/merchant_mids_in_indexer design
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getMerchantIds() {
    return merchantIds;
  }

  /**
   * List of merchant customer account IDs associated with a merchant entity in KG. NOTE: Soon to be
   * deprecated, see go/merchant_mids_in_indexer design
   * @param merchantIds merchantIds or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryShoppingIds setMerchantIds(java.util.List<java.lang.Long> merchantIds) {
    this.merchantIds = merchantIds;
    return this;
  }

  /**
   * A shopping merchant source id, i.e. the key used to identify Shopping Merchants as they are
   * imported into KG. For reference, these IDs are populated in: * CommerceDB under
   * BusinessIdentification.knowledge_graph.source_id * KG using the /shopping/merchant/id predicate
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getMerchantSourceIds() {
    return merchantSourceIds;
  }

  /**
   * A shopping merchant source id, i.e. the key used to identify Shopping Merchants as they are
   * imported into KG. For reference, these IDs are populated in: * CommerceDB under
   * BusinessIdentification.knowledge_graph.source_id * KG using the /shopping/merchant/id predicate
   * @param merchantSourceIds merchantSourceIds or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryShoppingIds setMerchantSourceIds(java.util.List<java.lang.Long> merchantSourceIds) {
    this.merchantSourceIds = merchantSourceIds;
    return this;
  }

  /**
   * Moka attributes of a product. This includes color tags but currently not brand. We allow the
   * possibility for multiple tag ids, as multiple Moka tag ids may map to the same mid, and we may
   * not be able to find a single matching Moka tag. Also, cross-category Moka colors intentionally
   * map a single color mentioned in the query to an expansion of many tags representing points in
   * LAB color space (although this representation is expected to change).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getTagIds() {
    return tagIds;
  }

  /**
   * Moka attributes of a product. This includes color tags but currently not brand. We allow the
   * possibility for multiple tag ids, as multiple Moka tag ids may map to the same mid, and we may
   * not be able to find a single matching Moka tag. Also, cross-category Moka colors intentionally
   * map a single color mentioned in the query to an expansion of many tags representing points in
   * LAB color space (although this representation is expected to change).
   * @param tagIds tagIds or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryShoppingIds setTagIds(java.util.List<java.lang.Long> tagIds) {
    this.tagIds = tagIds;
    return this;
  }

  @Override
  public KnowledgeAnswersIntentQueryShoppingIds set(String fieldName, Object value) {
    return (KnowledgeAnswersIntentQueryShoppingIds) super.set(fieldName, value);
  }

  @Override
  public KnowledgeAnswersIntentQueryShoppingIds clone() {
    return (KnowledgeAnswersIntentQueryShoppingIds) super.clone();
  }

}
