/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Cluster-level Metadata about list anchors. Next id: 15.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoContentSearchListAnchorSetFeatures extends com.google.api.client.json.GenericJson {

  /**
   * The following fields are used for description span anchors, The aggregated span token texts
   * over all the span candidates of the anchor set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String aggregatedSpanText;

  /**
   * A summary of the span scores over the anchor set. This summary is calculated over the
   * aggregation of the individual token spans belonging to the span candidates of anchors.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchMetricStats anchorSetSpanScoreStats;

  /**
   * Median, average and standard deviation of babel_match_score among anchors in the same
   * VideoAnchors cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchMetricStats babelMatchScoreStats;

  /**
   * A summary of the context token counts over the anchor set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchMetricStats contextTokenCountStats;

  /**
   * The ratio of anchors timespan duration over the total duration of the video. Anchors timespan
   * duration is defined as the time span from the first anchor to the last anchor in VideoAnchors.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float durationSpanRatio;

  /**
   * Median, average and standard deviation of duration_to_predicted_time_ms among anchors in the
   * same VideoAnchors cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchMetricStats durationToPredictedTimeMsStats;

  /**
   * The source of anchors extracted from the video descriptions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String listAnchorSource;

  /**
   * The total number of list items mentioned in the video description. Not all these list items are
   * necessarily found as list anchors.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer listDescriptionItemsSize;

  /**
   * The number of matched anchors in the list anchors over the total number of post-filtering list
   * items in the video description, i.e. matched_list_description_anchors_ratio =
   * matched_list_description_anchors_size / post_filtering_list_description_items_size.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float matchedListDescriptionAnchorsRatio;

  /**
   * The number of matched list anchors found in the ASR. The matched list anchors are a subset of
   * the post-filtering list items in the video description, and as such
   * matched_list_description_anchors_size <= post_filtering_list_description_items_size.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer matchedListDescriptionAnchorsSize;

  /**
   * The total number of list items in the video description that are actually considered for
   * matching. This is a subset of list items in the video description that passed filterings such
   * as language filtering, i.e. post_filtering_list_description_items_size <=
   * list_description_items_size
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer postFilteringListDescriptionItemsSize;

  /**
   * Median, average and standard deviation of pretrigger_score among anchors in the same cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchMetricStats pretriggerScoreStats;

  /**
   * A summary of the span token count ratios over the anchor set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchMetricStats spanTokenCountRatioStats;

  /**
   * A summary of the span token counts over the anchor set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchMetricStats spanTokenCountStats;

  /**
   * The following fields are used for description span anchors, The aggregated span token texts
   * over all the span candidates of the anchor set.
   * @return value or {@code null} for none
   */
  public java.lang.String getAggregatedSpanText() {
    return aggregatedSpanText;
  }

  /**
   * The following fields are used for description span anchors, The aggregated span token texts
   * over all the span candidates of the anchor set.
   * @param aggregatedSpanText aggregatedSpanText or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setAggregatedSpanText(java.lang.String aggregatedSpanText) {
    this.aggregatedSpanText = aggregatedSpanText;
    return this;
  }

  /**
   * A summary of the span scores over the anchor set. This summary is calculated over the
   * aggregation of the individual token spans belonging to the span candidates of anchors.
   * @return value or {@code null} for none
   */
  public VideoContentSearchMetricStats getAnchorSetSpanScoreStats() {
    return anchorSetSpanScoreStats;
  }

  /**
   * A summary of the span scores over the anchor set. This summary is calculated over the
   * aggregation of the individual token spans belonging to the span candidates of anchors.
   * @param anchorSetSpanScoreStats anchorSetSpanScoreStats or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setAnchorSetSpanScoreStats(VideoContentSearchMetricStats anchorSetSpanScoreStats) {
    this.anchorSetSpanScoreStats = anchorSetSpanScoreStats;
    return this;
  }

  /**
   * Median, average and standard deviation of babel_match_score among anchors in the same
   * VideoAnchors cluster.
   * @return value or {@code null} for none
   */
  public VideoContentSearchMetricStats getBabelMatchScoreStats() {
    return babelMatchScoreStats;
  }

  /**
   * Median, average and standard deviation of babel_match_score among anchors in the same
   * VideoAnchors cluster.
   * @param babelMatchScoreStats babelMatchScoreStats or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setBabelMatchScoreStats(VideoContentSearchMetricStats babelMatchScoreStats) {
    this.babelMatchScoreStats = babelMatchScoreStats;
    return this;
  }

  /**
   * A summary of the context token counts over the anchor set.
   * @return value or {@code null} for none
   */
  public VideoContentSearchMetricStats getContextTokenCountStats() {
    return contextTokenCountStats;
  }

  /**
   * A summary of the context token counts over the anchor set.
   * @param contextTokenCountStats contextTokenCountStats or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setContextTokenCountStats(VideoContentSearchMetricStats contextTokenCountStats) {
    this.contextTokenCountStats = contextTokenCountStats;
    return this;
  }

  /**
   * The ratio of anchors timespan duration over the total duration of the video. Anchors timespan
   * duration is defined as the time span from the first anchor to the last anchor in VideoAnchors.
   * @return value or {@code null} for none
   */
  public java.lang.Float getDurationSpanRatio() {
    return durationSpanRatio;
  }

  /**
   * The ratio of anchors timespan duration over the total duration of the video. Anchors timespan
   * duration is defined as the time span from the first anchor to the last anchor in VideoAnchors.
   * @param durationSpanRatio durationSpanRatio or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setDurationSpanRatio(java.lang.Float durationSpanRatio) {
    this.durationSpanRatio = durationSpanRatio;
    return this;
  }

  /**
   * Median, average and standard deviation of duration_to_predicted_time_ms among anchors in the
   * same VideoAnchors cluster.
   * @return value or {@code null} for none
   */
  public VideoContentSearchMetricStats getDurationToPredictedTimeMsStats() {
    return durationToPredictedTimeMsStats;
  }

  /**
   * Median, average and standard deviation of duration_to_predicted_time_ms among anchors in the
   * same VideoAnchors cluster.
   * @param durationToPredictedTimeMsStats durationToPredictedTimeMsStats or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setDurationToPredictedTimeMsStats(VideoContentSearchMetricStats durationToPredictedTimeMsStats) {
    this.durationToPredictedTimeMsStats = durationToPredictedTimeMsStats;
    return this;
  }

  /**
   * The source of anchors extracted from the video descriptions.
   * @return value or {@code null} for none
   */
  public java.lang.String getListAnchorSource() {
    return listAnchorSource;
  }

  /**
   * The source of anchors extracted from the video descriptions.
   * @param listAnchorSource listAnchorSource or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setListAnchorSource(java.lang.String listAnchorSource) {
    this.listAnchorSource = listAnchorSource;
    return this;
  }

  /**
   * The total number of list items mentioned in the video description. Not all these list items are
   * necessarily found as list anchors.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getListDescriptionItemsSize() {
    return listDescriptionItemsSize;
  }

  /**
   * The total number of list items mentioned in the video description. Not all these list items are
   * necessarily found as list anchors.
   * @param listDescriptionItemsSize listDescriptionItemsSize or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setListDescriptionItemsSize(java.lang.Integer listDescriptionItemsSize) {
    this.listDescriptionItemsSize = listDescriptionItemsSize;
    return this;
  }

  /**
   * The number of matched anchors in the list anchors over the total number of post-filtering list
   * items in the video description, i.e. matched_list_description_anchors_ratio =
   * matched_list_description_anchors_size / post_filtering_list_description_items_size.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMatchedListDescriptionAnchorsRatio() {
    return matchedListDescriptionAnchorsRatio;
  }

  /**
   * The number of matched anchors in the list anchors over the total number of post-filtering list
   * items in the video description, i.e. matched_list_description_anchors_ratio =
   * matched_list_description_anchors_size / post_filtering_list_description_items_size.
   * @param matchedListDescriptionAnchorsRatio matchedListDescriptionAnchorsRatio or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setMatchedListDescriptionAnchorsRatio(java.lang.Float matchedListDescriptionAnchorsRatio) {
    this.matchedListDescriptionAnchorsRatio = matchedListDescriptionAnchorsRatio;
    return this;
  }

  /**
   * The number of matched list anchors found in the ASR. The matched list anchors are a subset of
   * the post-filtering list items in the video description, and as such
   * matched_list_description_anchors_size <= post_filtering_list_description_items_size.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMatchedListDescriptionAnchorsSize() {
    return matchedListDescriptionAnchorsSize;
  }

  /**
   * The number of matched list anchors found in the ASR. The matched list anchors are a subset of
   * the post-filtering list items in the video description, and as such
   * matched_list_description_anchors_size <= post_filtering_list_description_items_size.
   * @param matchedListDescriptionAnchorsSize matchedListDescriptionAnchorsSize or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setMatchedListDescriptionAnchorsSize(java.lang.Integer matchedListDescriptionAnchorsSize) {
    this.matchedListDescriptionAnchorsSize = matchedListDescriptionAnchorsSize;
    return this;
  }

  /**
   * The total number of list items in the video description that are actually considered for
   * matching. This is a subset of list items in the video description that passed filterings such
   * as language filtering, i.e. post_filtering_list_description_items_size <=
   * list_description_items_size
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPostFilteringListDescriptionItemsSize() {
    return postFilteringListDescriptionItemsSize;
  }

  /**
   * The total number of list items in the video description that are actually considered for
   * matching. This is a subset of list items in the video description that passed filterings such
   * as language filtering, i.e. post_filtering_list_description_items_size <=
   * list_description_items_size
   * @param postFilteringListDescriptionItemsSize postFilteringListDescriptionItemsSize or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setPostFilteringListDescriptionItemsSize(java.lang.Integer postFilteringListDescriptionItemsSize) {
    this.postFilteringListDescriptionItemsSize = postFilteringListDescriptionItemsSize;
    return this;
  }

  /**
   * Median, average and standard deviation of pretrigger_score among anchors in the same cluster.
   * @return value or {@code null} for none
   */
  public VideoContentSearchMetricStats getPretriggerScoreStats() {
    return pretriggerScoreStats;
  }

  /**
   * Median, average and standard deviation of pretrigger_score among anchors in the same cluster.
   * @param pretriggerScoreStats pretriggerScoreStats or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setPretriggerScoreStats(VideoContentSearchMetricStats pretriggerScoreStats) {
    this.pretriggerScoreStats = pretriggerScoreStats;
    return this;
  }

  /**
   * A summary of the span token count ratios over the anchor set.
   * @return value or {@code null} for none
   */
  public VideoContentSearchMetricStats getSpanTokenCountRatioStats() {
    return spanTokenCountRatioStats;
  }

  /**
   * A summary of the span token count ratios over the anchor set.
   * @param spanTokenCountRatioStats spanTokenCountRatioStats or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setSpanTokenCountRatioStats(VideoContentSearchMetricStats spanTokenCountRatioStats) {
    this.spanTokenCountRatioStats = spanTokenCountRatioStats;
    return this;
  }

  /**
   * A summary of the span token counts over the anchor set.
   * @return value or {@code null} for none
   */
  public VideoContentSearchMetricStats getSpanTokenCountStats() {
    return spanTokenCountStats;
  }

  /**
   * A summary of the span token counts over the anchor set.
   * @param spanTokenCountStats spanTokenCountStats or {@code null} for none
   */
  public VideoContentSearchListAnchorSetFeatures setSpanTokenCountStats(VideoContentSearchMetricStats spanTokenCountStats) {
    this.spanTokenCountStats = spanTokenCountStats;
    return this;
  }

  @Override
  public VideoContentSearchListAnchorSetFeatures set(String fieldName, Object value) {
    return (VideoContentSearchListAnchorSetFeatures) super.set(fieldName, value);
  }

  @Override
  public VideoContentSearchListAnchorSetFeatures clone() {
    return (VideoContentSearchListAnchorSetFeatures) super.clone();
  }

}
