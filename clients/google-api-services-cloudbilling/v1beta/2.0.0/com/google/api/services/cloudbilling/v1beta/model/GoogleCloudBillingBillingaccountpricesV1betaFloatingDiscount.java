/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbilling.v1beta.model;

/**
 * Encapsulates a discount off the current list price, not anchored to any list price as of a fixed
 * time.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Billing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount extends com.google.api.client.json.GenericJson {

  /**
   * Percentage of the floating discount.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Decimal discountPercent;

  /**
   * Type of the floating discount scope which indicates the source of the discount. It can have
   * values such as 'unspecified' and 'sku-group'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String discountScopeType;

  /**
   * SKU group where the floating discount comes from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String skuGroup;

  /**
   * Percentage of the floating discount.
   * @return value or {@code null} for none
   */
  public Decimal getDiscountPercent() {
    return discountPercent;
  }

  /**
   * Percentage of the floating discount.
   * @param discountPercent discountPercent or {@code null} for none
   */
  public GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount setDiscountPercent(Decimal discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

  /**
   * Type of the floating discount scope which indicates the source of the discount. It can have
   * values such as 'unspecified' and 'sku-group'.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiscountScopeType() {
    return discountScopeType;
  }

  /**
   * Type of the floating discount scope which indicates the source of the discount. It can have
   * values such as 'unspecified' and 'sku-group'.
   * @param discountScopeType discountScopeType or {@code null} for none
   */
  public GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount setDiscountScopeType(java.lang.String discountScopeType) {
    this.discountScopeType = discountScopeType;
    return this;
  }

  /**
   * SKU group where the floating discount comes from.
   * @return value or {@code null} for none
   */
  public java.lang.String getSkuGroup() {
    return skuGroup;
  }

  /**
   * SKU group where the floating discount comes from.
   * @param skuGroup skuGroup or {@code null} for none
   */
  public GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount setSkuGroup(java.lang.String skuGroup) {
    this.skuGroup = skuGroup;
    return this;
  }

  @Override
  public GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount set(String fieldName, Object value) {
    return (GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount clone() {
    return (GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount) super.clone();
  }

}
