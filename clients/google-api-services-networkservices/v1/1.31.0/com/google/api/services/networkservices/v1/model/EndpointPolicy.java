/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkservices.v1.model;

/**
 * EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match
 * specific criteria. For example, this resource can be used to apply "authentication config" an all
 * endpoints that serve on port 8080.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Services API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EndpointPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Optional. This field specifies the URL of AuthorizationPolicy resource that applies
   * authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization.
   * If this field is not specified, authorization is disabled(no authz checks) for this endpoint.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authorizationPolicy;

  /**
   * Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify
   * the authentication for traffic from the proxy to the actual endpoints. More specifically, it is
   * applied to the outgoing traffic from the proxy to the endpoint. This is typically used for
   * sidecar model where the proxy identifies itself as endpoint to the control plane, with the
   * connection between sidecar and endpoint requiring authentication. If this field is not set,
   * authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientTlsPolicy;

  /**
   * Output only. The timestamp when the resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. A free-text description of the resource. Max length 1024 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. A matcher that selects endpoints to which the policies should be applied.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EndpointMatcher endpointMatcher;

  /**
   * Optional. Set of label tags associated with the EndpointPolicy resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. Name of the EndpointPolicy resource. It matches pattern
   * `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the
   * authentication policy to be applied to terminate the inbound traffic at the identified
   * backends. If this field is not set, authentication is disabled(open) for this endpoint.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serverTlsPolicy;

  /**
   * Optional. Port selector for the (matched) endpoints. If no port selector is provided, the
   * matched config is applied to all ports.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TrafficPortSelector trafficPortSelector;

  /**
   * Required. The type of endpoint policy. This is primarily used to validate the configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Output only. The timestamp when the resource was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. This field specifies the URL of AuthorizationPolicy resource that applies
   * authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization.
   * If this field is not specified, authorization is disabled(no authz checks) for this endpoint.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorizationPolicy() {
    return authorizationPolicy;
  }

  /**
   * Optional. This field specifies the URL of AuthorizationPolicy resource that applies
   * authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization.
   * If this field is not specified, authorization is disabled(no authz checks) for this endpoint.
   * @param authorizationPolicy authorizationPolicy or {@code null} for none
   */
  public EndpointPolicy setAuthorizationPolicy(java.lang.String authorizationPolicy) {
    this.authorizationPolicy = authorizationPolicy;
    return this;
  }

  /**
   * Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify
   * the authentication for traffic from the proxy to the actual endpoints. More specifically, it is
   * applied to the outgoing traffic from the proxy to the endpoint. This is typically used for
   * sidecar model where the proxy identifies itself as endpoint to the control plane, with the
   * connection between sidecar and endpoint requiring authentication. If this field is not set,
   * authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientTlsPolicy() {
    return clientTlsPolicy;
  }

  /**
   * Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify
   * the authentication for traffic from the proxy to the actual endpoints. More specifically, it is
   * applied to the outgoing traffic from the proxy to the endpoint. This is typically used for
   * sidecar model where the proxy identifies itself as endpoint to the control plane, with the
   * connection between sidecar and endpoint requiring authentication. If this field is not set,
   * authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY.
   * @param clientTlsPolicy clientTlsPolicy or {@code null} for none
   */
  public EndpointPolicy setClientTlsPolicy(java.lang.String clientTlsPolicy) {
    this.clientTlsPolicy = clientTlsPolicy;
    return this;
  }

  /**
   * Output only. The timestamp when the resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public EndpointPolicy setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. A free-text description of the resource. Max length 1024 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. A free-text description of the resource. Max length 1024 characters.
   * @param description description or {@code null} for none
   */
  public EndpointPolicy setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. A matcher that selects endpoints to which the policies should be applied.
   * @return value or {@code null} for none
   */
  public EndpointMatcher getEndpointMatcher() {
    return endpointMatcher;
  }

  /**
   * Required. A matcher that selects endpoints to which the policies should be applied.
   * @param endpointMatcher endpointMatcher or {@code null} for none
   */
  public EndpointPolicy setEndpointMatcher(EndpointMatcher endpointMatcher) {
    this.endpointMatcher = endpointMatcher;
    return this;
  }

  /**
   * Optional. Set of label tags associated with the EndpointPolicy resource.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Set of label tags associated with the EndpointPolicy resource.
   * @param labels labels or {@code null} for none
   */
  public EndpointPolicy setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. Name of the EndpointPolicy resource. It matches pattern
   * `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. Name of the EndpointPolicy resource. It matches pattern
   * `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`.
   * @param name name or {@code null} for none
   */
  public EndpointPolicy setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the
   * authentication policy to be applied to terminate the inbound traffic at the identified
   * backends. If this field is not set, authentication is disabled(open) for this endpoint.
   * @return value or {@code null} for none
   */
  public java.lang.String getServerTlsPolicy() {
    return serverTlsPolicy;
  }

  /**
   * Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the
   * authentication policy to be applied to terminate the inbound traffic at the identified
   * backends. If this field is not set, authentication is disabled(open) for this endpoint.
   * @param serverTlsPolicy serverTlsPolicy or {@code null} for none
   */
  public EndpointPolicy setServerTlsPolicy(java.lang.String serverTlsPolicy) {
    this.serverTlsPolicy = serverTlsPolicy;
    return this;
  }

  /**
   * Optional. Port selector for the (matched) endpoints. If no port selector is provided, the
   * matched config is applied to all ports.
   * @return value or {@code null} for none
   */
  public TrafficPortSelector getTrafficPortSelector() {
    return trafficPortSelector;
  }

  /**
   * Optional. Port selector for the (matched) endpoints. If no port selector is provided, the
   * matched config is applied to all ports.
   * @param trafficPortSelector trafficPortSelector or {@code null} for none
   */
  public EndpointPolicy setTrafficPortSelector(TrafficPortSelector trafficPortSelector) {
    this.trafficPortSelector = trafficPortSelector;
    return this;
  }

  /**
   * Required. The type of endpoint policy. This is primarily used to validate the configuration.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Required. The type of endpoint policy. This is primarily used to validate the configuration.
   * @param type type or {@code null} for none
   */
  public EndpointPolicy setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Output only. The timestamp when the resource was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the resource was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public EndpointPolicy setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public EndpointPolicy set(String fieldName, Object value) {
    return (EndpointPolicy) super.set(fieldName, value);
  }

  @Override
  public EndpointPolicy clone() {
    return (EndpointPolicy) super.clone();
  }

}
