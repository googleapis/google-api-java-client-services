/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contactcenterinsights.v1.model;

/**
 * The response for querying metrics.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Contact Center AI Insights API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContactcenterinsightsV1QueryMetricsResponse extends com.google.api.client.json.GenericJson {

  /**
   * Required. The location of the data. "projects/{project}/locations/{location}"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * The macro average slice contains aggregated averages across all selected dimensions. i.e. if
   * group_by agent and scorecard_id is specified, this field will contain the average across all
   * agents and all scorecards. This field is only populated if the request specifies a Dimension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice macroAverageSlice;

  /**
   * A slice contains a total and (if the request specified a time granularity) a time series of
   * metric values. Each slice contains a unique combination of the cardinality of dimensions from
   * the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice> slices;

  /**
   * The metrics last update time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. The location of the data. "projects/{project}/locations/{location}"
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * Required. The location of the data. "projects/{project}/locations/{location}"
   * @param location location or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponse setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * The macro average slice contains aggregated averages across all selected dimensions. i.e. if
   * group_by agent and scorecard_id is specified, this field will contain the average across all
   * agents and all scorecards. This field is only populated if the request specifies a Dimension.
   * @return value or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice getMacroAverageSlice() {
    return macroAverageSlice;
  }

  /**
   * The macro average slice contains aggregated averages across all selected dimensions. i.e. if
   * group_by agent and scorecard_id is specified, this field will contain the average across all
   * agents and all scorecards. This field is only populated if the request specifies a Dimension.
   * @param macroAverageSlice macroAverageSlice or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponse setMacroAverageSlice(GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice macroAverageSlice) {
    this.macroAverageSlice = macroAverageSlice;
    return this;
  }

  /**
   * A slice contains a total and (if the request specified a time granularity) a time series of
   * metric values. Each slice contains a unique combination of the cardinality of dimensions from
   * the request.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice> getSlices() {
    return slices;
  }

  /**
   * A slice contains a total and (if the request specified a time granularity) a time series of
   * metric values. Each slice contains a unique combination of the cardinality of dimensions from
   * the request.
   * @param slices slices or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponse setSlices(java.util.List<GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice> slices) {
    this.slices = slices;
    return this;
  }

  /**
   * The metrics last update time.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * The metrics last update time.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponse setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponse set(String fieldName, Object value) {
    return (GoogleCloudContactcenterinsightsV1QueryMetricsResponse) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponse clone() {
    return (GoogleCloudContactcenterinsightsV1QueryMetricsResponse) super.clone();
  }

}
