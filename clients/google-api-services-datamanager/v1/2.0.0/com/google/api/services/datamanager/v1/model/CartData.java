/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datamanager.v1.model;

/**
 * The cart data associated with the event.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Data Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CartData extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The list of items associated with the event.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Item> items;

  /**
   * Optional. The Merchant Center feed label associated with the feed of the items.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantFeedLabel;

  /**
   * Optional. The language code in ISO 639-1 associated with the Merchant Center feed of the
   * items.where your items are uploaded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantFeedLanguageCode;

  /**
   * Optional. The Merchant Center ID associated with the items.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantId;

  /**
   * Optional. The sum of all discounts associated with the transaction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double transactionDiscount;

  /**
   * Optional. The list of items associated with the event.
   * @return value or {@code null} for none
   */
  public java.util.List<Item> getItems() {
    return items;
  }

  /**
   * Optional. The list of items associated with the event.
   * @param items items or {@code null} for none
   */
  public CartData setItems(java.util.List<Item> items) {
    this.items = items;
    return this;
  }

  /**
   * Optional. The Merchant Center feed label associated with the feed of the items.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantFeedLabel() {
    return merchantFeedLabel;
  }

  /**
   * Optional. The Merchant Center feed label associated with the feed of the items.
   * @param merchantFeedLabel merchantFeedLabel or {@code null} for none
   */
  public CartData setMerchantFeedLabel(java.lang.String merchantFeedLabel) {
    this.merchantFeedLabel = merchantFeedLabel;
    return this;
  }

  /**
   * Optional. The language code in ISO 639-1 associated with the Merchant Center feed of the
   * items.where your items are uploaded.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantFeedLanguageCode() {
    return merchantFeedLanguageCode;
  }

  /**
   * Optional. The language code in ISO 639-1 associated with the Merchant Center feed of the
   * items.where your items are uploaded.
   * @param merchantFeedLanguageCode merchantFeedLanguageCode or {@code null} for none
   */
  public CartData setMerchantFeedLanguageCode(java.lang.String merchantFeedLanguageCode) {
    this.merchantFeedLanguageCode = merchantFeedLanguageCode;
    return this;
  }

  /**
   * Optional. The Merchant Center ID associated with the items.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantId() {
    return merchantId;
  }

  /**
   * Optional. The Merchant Center ID associated with the items.
   * @param merchantId merchantId or {@code null} for none
   */
  public CartData setMerchantId(java.lang.String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  /**
   * Optional. The sum of all discounts associated with the transaction.
   * @return value or {@code null} for none
   */
  public java.lang.Double getTransactionDiscount() {
    return transactionDiscount;
  }

  /**
   * Optional. The sum of all discounts associated with the transaction.
   * @param transactionDiscount transactionDiscount or {@code null} for none
   */
  public CartData setTransactionDiscount(java.lang.Double transactionDiscount) {
    this.transactionDiscount = transactionDiscount;
    return this;
  }

  @Override
  public CartData set(String fieldName, Object value) {
    return (CartData) super.set(fieldName, value);
  }

  @Override
  public CartData clone() {
    return (CartData) super.clone();
  }

}
