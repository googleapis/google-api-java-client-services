/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Similar to social.graph.storage.Affinity, but pared down to what the clients of the People API
 * are interested in.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiAffinity extends com.google.api.client.json.GenericJson {

  /**
   * Contains extra ranking information returned by DAS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SocialGraphWireProtoPeopleapiAffinityMetadata affinityMetadata;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String affinityType;

  /**
   * The ID of the container
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containerId;

  /**
   * The type of container to which this affinity applies
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containerType;

  /**
   * Used to log events for this affinity value, for disco diagnostic-purposes. See go/disco-
   * diagnostics.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String loggingId;

  /**
   * Affinity value. Frequently represented as an inverse ranking, sometimes with additional data
   * encoded. If data_formats.affinity_formats.score_format is set to RAW_SCORE then the value will
   * be the score returned by DAS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double value;

  /**
   * Contains extra ranking information returned by DAS.
   * @return value or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiAffinityMetadata getAffinityMetadata() {
    return affinityMetadata;
  }

  /**
   * Contains extra ranking information returned by DAS.
   * @param affinityMetadata affinityMetadata or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAffinity setAffinityMetadata(SocialGraphWireProtoPeopleapiAffinityMetadata affinityMetadata) {
    this.affinityMetadata = affinityMetadata;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getAffinityType() {
    return affinityType;
  }

  /**
   * @param affinityType affinityType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAffinity setAffinityType(java.lang.String affinityType) {
    this.affinityType = affinityType;
    return this;
  }

  /**
   * The ID of the container
   * @return value or {@code null} for none
   */
  public java.lang.String getContainerId() {
    return containerId;
  }

  /**
   * The ID of the container
   * @param containerId containerId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAffinity setContainerId(java.lang.String containerId) {
    this.containerId = containerId;
    return this;
  }

  /**
   * The type of container to which this affinity applies
   * @return value or {@code null} for none
   */
  public java.lang.String getContainerType() {
    return containerType;
  }

  /**
   * The type of container to which this affinity applies
   * @param containerType containerType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAffinity setContainerType(java.lang.String containerType) {
    this.containerType = containerType;
    return this;
  }

  /**
   * Used to log events for this affinity value, for disco diagnostic-purposes. See go/disco-
   * diagnostics.
   * @return value or {@code null} for none
   */
  public java.lang.String getLoggingId() {
    return loggingId;
  }

  /**
   * Used to log events for this affinity value, for disco diagnostic-purposes. See go/disco-
   * diagnostics.
   * @param loggingId loggingId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAffinity setLoggingId(java.lang.String loggingId) {
    this.loggingId = loggingId;
    return this;
  }

  /**
   * Affinity value. Frequently represented as an inverse ranking, sometimes with additional data
   * encoded. If data_formats.affinity_formats.score_format is set to RAW_SCORE then the value will
   * be the score returned by DAS.
   * @return value or {@code null} for none
   */
  public java.lang.Double getValue() {
    return value;
  }

  /**
   * Affinity value. Frequently represented as an inverse ranking, sometimes with additional data
   * encoded. If data_formats.affinity_formats.score_format is set to RAW_SCORE then the value will
   * be the score returned by DAS.
   * @param value value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAffinity setValue(java.lang.Double value) {
    this.value = value;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiAffinity set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiAffinity) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiAffinity clone() {
    return (AppsPeopleOzExternalMergedpeopleapiAffinity) super.clone();
  }

}
