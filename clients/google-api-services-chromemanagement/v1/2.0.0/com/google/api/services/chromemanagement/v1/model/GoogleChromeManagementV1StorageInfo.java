/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Status data for storage.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1StorageInfo extends com.google.api.client.json.GenericJson {

  /**
   * The available space for user data storage in the device in bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long availableDiskBytes;

  /**
   * The total space for user data storage in the device in bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long totalDiskBytes;

  /**
   * Information for disk volumes
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleChromeManagementV1StorageInfoDiskVolume> volume;

  /**
   * The available space for user data storage in the device in bytes.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAvailableDiskBytes() {
    return availableDiskBytes;
  }

  /**
   * The available space for user data storage in the device in bytes.
   * @param availableDiskBytes availableDiskBytes or {@code null} for none
   */
  public GoogleChromeManagementV1StorageInfo setAvailableDiskBytes(java.lang.Long availableDiskBytes) {
    this.availableDiskBytes = availableDiskBytes;
    return this;
  }

  /**
   * The total space for user data storage in the device in bytes.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTotalDiskBytes() {
    return totalDiskBytes;
  }

  /**
   * The total space for user data storage in the device in bytes.
   * @param totalDiskBytes totalDiskBytes or {@code null} for none
   */
  public GoogleChromeManagementV1StorageInfo setTotalDiskBytes(java.lang.Long totalDiskBytes) {
    this.totalDiskBytes = totalDiskBytes;
    return this;
  }

  /**
   * Information for disk volumes
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleChromeManagementV1StorageInfoDiskVolume> getVolume() {
    return volume;
  }

  /**
   * Information for disk volumes
   * @param volume volume or {@code null} for none
   */
  public GoogleChromeManagementV1StorageInfo setVolume(java.util.List<GoogleChromeManagementV1StorageInfoDiskVolume> volume) {
    this.volume = volume;
    return this;
  }

  @Override
  public GoogleChromeManagementV1StorageInfo set(String fieldName, Object value) {
    return (GoogleChromeManagementV1StorageInfo) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1StorageInfo clone() {
    return (GoogleChromeManagementV1StorageInfo) super.clone();
  }

}
