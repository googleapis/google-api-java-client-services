/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * This message holds person attributes from the LookNet-Person model (go/looknet-person) and the
 * Style AI Iconic Person Scorer (http://go/styleai-indexing-g3doc#iconic-person-scorer) for the
 * most iconic person in a style image. There is an ongoing collaboration with the Human Sensing
 * team on LookNet-Person v3 (go/looknet-person-v3-collaboration) that deals with some of these
 * signals together. Hence, the combined proto definition. Discretization of float values is
 * recommended by CDS for cheaper and more efficient storage. Next ID: 11
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LensDiscoveryStylePersonAttributes extends com.google.api.client.json.GenericJson {

  /**
   * The visibility of the face of the most iconic person in the image discretized into range [0,
   * 100].
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer discretizedFaceVisibilityScore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer discretizedFemaleConfidence;

  /**
   * Male and female confidence scores are discretized into the [0, 100] range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer discretizedMaleConfidence;

  /**
   * Age prediction is rounded to the first decimal place and multiplied by 10 (e.g. 12.3 -> 123).
   * *** Not populated in Amarna for legal reasons. ***
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer discretizedPredictedAge;

  /**
   * The area ratio of the most iconic person to the whole image discretized into range [0, 100].
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer discretizedVisualSaliencyScore;

  /**
   * Bounding box of the most iconic person in the image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LensDiscoveryStyleBoundingBox personBoundingBox;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LensDiscoveryStylePersonAttributesPersonVisibilityScores personVisibilityScores;

  /**
   * Bucketed version of the predicted age.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String predictedAgeBucket;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * The visibility of the face of the most iconic person in the image discretized into range [0,
   * 100].
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDiscretizedFaceVisibilityScore() {
    return discretizedFaceVisibilityScore;
  }

  /**
   * The visibility of the face of the most iconic person in the image discretized into range [0,
   * 100].
   * @param discretizedFaceVisibilityScore discretizedFaceVisibilityScore or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributes setDiscretizedFaceVisibilityScore(java.lang.Integer discretizedFaceVisibilityScore) {
    this.discretizedFaceVisibilityScore = discretizedFaceVisibilityScore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDiscretizedFemaleConfidence() {
    return discretizedFemaleConfidence;
  }

  /**
   * @param discretizedFemaleConfidence discretizedFemaleConfidence or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributes setDiscretizedFemaleConfidence(java.lang.Integer discretizedFemaleConfidence) {
    this.discretizedFemaleConfidence = discretizedFemaleConfidence;
    return this;
  }

  /**
   * Male and female confidence scores are discretized into the [0, 100] range.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDiscretizedMaleConfidence() {
    return discretizedMaleConfidence;
  }

  /**
   * Male and female confidence scores are discretized into the [0, 100] range.
   * @param discretizedMaleConfidence discretizedMaleConfidence or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributes setDiscretizedMaleConfidence(java.lang.Integer discretizedMaleConfidence) {
    this.discretizedMaleConfidence = discretizedMaleConfidence;
    return this;
  }

  /**
   * Age prediction is rounded to the first decimal place and multiplied by 10 (e.g. 12.3 -> 123).
   * *** Not populated in Amarna for legal reasons. ***
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDiscretizedPredictedAge() {
    return discretizedPredictedAge;
  }

  /**
   * Age prediction is rounded to the first decimal place and multiplied by 10 (e.g. 12.3 -> 123).
   * *** Not populated in Amarna for legal reasons. ***
   * @param discretizedPredictedAge discretizedPredictedAge or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributes setDiscretizedPredictedAge(java.lang.Integer discretizedPredictedAge) {
    this.discretizedPredictedAge = discretizedPredictedAge;
    return this;
  }

  /**
   * The area ratio of the most iconic person to the whole image discretized into range [0, 100].
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDiscretizedVisualSaliencyScore() {
    return discretizedVisualSaliencyScore;
  }

  /**
   * The area ratio of the most iconic person to the whole image discretized into range [0, 100].
   * @param discretizedVisualSaliencyScore discretizedVisualSaliencyScore or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributes setDiscretizedVisualSaliencyScore(java.lang.Integer discretizedVisualSaliencyScore) {
    this.discretizedVisualSaliencyScore = discretizedVisualSaliencyScore;
    return this;
  }

  /**
   * Bounding box of the most iconic person in the image.
   * @return value or {@code null} for none
   */
  public LensDiscoveryStyleBoundingBox getPersonBoundingBox() {
    return personBoundingBox;
  }

  /**
   * Bounding box of the most iconic person in the image.
   * @param personBoundingBox personBoundingBox or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributes setPersonBoundingBox(LensDiscoveryStyleBoundingBox personBoundingBox) {
    this.personBoundingBox = personBoundingBox;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributesPersonVisibilityScores getPersonVisibilityScores() {
    return personVisibilityScores;
  }

  /**
   * @param personVisibilityScores personVisibilityScores or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributes setPersonVisibilityScores(LensDiscoveryStylePersonAttributesPersonVisibilityScores personVisibilityScores) {
    this.personVisibilityScores = personVisibilityScores;
    return this;
  }

  /**
   * Bucketed version of the predicted age.
   * @return value or {@code null} for none
   */
  public java.lang.String getPredictedAgeBucket() {
    return predictedAgeBucket;
  }

  /**
   * Bucketed version of the predicted age.
   * @param predictedAgeBucket predictedAgeBucket or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributes setPredictedAgeBucket(java.lang.String predictedAgeBucket) {
    this.predictedAgeBucket = predictedAgeBucket;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * @param version version or {@code null} for none
   */
  public LensDiscoveryStylePersonAttributes setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public LensDiscoveryStylePersonAttributes set(String fieldName, Object value) {
    return (LensDiscoveryStylePersonAttributes) super.set(fieldName, value);
  }

  @Override
  public LensDiscoveryStylePersonAttributes clone() {
    return (LensDiscoveryStylePersonAttributes) super.clone();
  }

}
