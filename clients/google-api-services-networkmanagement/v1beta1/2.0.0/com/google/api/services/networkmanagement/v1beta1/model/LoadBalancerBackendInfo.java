/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkmanagement.v1beta1.model;

/**
 * For display only. Metadata associated with the load balancer backend.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LoadBalancerBackendInfo extends com.google.api.client.json.GenericJson {

  /**
   * Display name of the backend. For example, it might be an instance name for the instance group
   * backends, or an IP address and port for zonal network endpoint group backends.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backendDisplayName;

  /**
   * URI of the backend service this backend belongs to (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backendServiceUri;

  /**
   * Output only. Health check configuration state for the backend. This is a result of the static
   * firewall analysis (verifying that health check traffic from required IP ranges to the backend
   * is allowed or not). The backend might still be unhealthy even if these firewalls are
   * configured. Please refer to the documentation for more information: https://cloud.google.com
   * /load-balancing/docs/firewall-rules
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String healthCheckConfigState;

  /**
   * URI of the health check attached to this backend (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String healthCheckUri;

  /**
   * URI of the instance group this backend belongs to (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instanceGroupUri;

  /**
   * URI of the backend instance (if applicable). Populated for instance group backends, and zonal
   * NEG backends.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instanceUri;

  /**
   * URI of the network endpoint group this backend belongs to (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String networkEndpointGroupUri;

  /**
   * Display name of the backend. For example, it might be an instance name for the instance group
   * backends, or an IP address and port for zonal network endpoint group backends.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackendDisplayName() {
    return backendDisplayName;
  }

  /**
   * Display name of the backend. For example, it might be an instance name for the instance group
   * backends, or an IP address and port for zonal network endpoint group backends.
   * @param backendDisplayName backendDisplayName or {@code null} for none
   */
  public LoadBalancerBackendInfo setBackendDisplayName(java.lang.String backendDisplayName) {
    this.backendDisplayName = backendDisplayName;
    return this;
  }

  /**
   * URI of the backend service this backend belongs to (if applicable).
   * @return value or {@code null} for none
   */
  public java.lang.String getBackendServiceUri() {
    return backendServiceUri;
  }

  /**
   * URI of the backend service this backend belongs to (if applicable).
   * @param backendServiceUri backendServiceUri or {@code null} for none
   */
  public LoadBalancerBackendInfo setBackendServiceUri(java.lang.String backendServiceUri) {
    this.backendServiceUri = backendServiceUri;
    return this;
  }

  /**
   * Output only. Health check configuration state for the backend. This is a result of the static
   * firewall analysis (verifying that health check traffic from required IP ranges to the backend
   * is allowed or not). The backend might still be unhealthy even if these firewalls are
   * configured. Please refer to the documentation for more information: https://cloud.google.com
   * /load-balancing/docs/firewall-rules
   * @return value or {@code null} for none
   */
  public java.lang.String getHealthCheckConfigState() {
    return healthCheckConfigState;
  }

  /**
   * Output only. Health check configuration state for the backend. This is a result of the static
   * firewall analysis (verifying that health check traffic from required IP ranges to the backend
   * is allowed or not). The backend might still be unhealthy even if these firewalls are
   * configured. Please refer to the documentation for more information: https://cloud.google.com
   * /load-balancing/docs/firewall-rules
   * @param healthCheckConfigState healthCheckConfigState or {@code null} for none
   */
  public LoadBalancerBackendInfo setHealthCheckConfigState(java.lang.String healthCheckConfigState) {
    this.healthCheckConfigState = healthCheckConfigState;
    return this;
  }

  /**
   * URI of the health check attached to this backend (if applicable).
   * @return value or {@code null} for none
   */
  public java.lang.String getHealthCheckUri() {
    return healthCheckUri;
  }

  /**
   * URI of the health check attached to this backend (if applicable).
   * @param healthCheckUri healthCheckUri or {@code null} for none
   */
  public LoadBalancerBackendInfo setHealthCheckUri(java.lang.String healthCheckUri) {
    this.healthCheckUri = healthCheckUri;
    return this;
  }

  /**
   * URI of the instance group this backend belongs to (if applicable).
   * @return value or {@code null} for none
   */
  public java.lang.String getInstanceGroupUri() {
    return instanceGroupUri;
  }

  /**
   * URI of the instance group this backend belongs to (if applicable).
   * @param instanceGroupUri instanceGroupUri or {@code null} for none
   */
  public LoadBalancerBackendInfo setInstanceGroupUri(java.lang.String instanceGroupUri) {
    this.instanceGroupUri = instanceGroupUri;
    return this;
  }

  /**
   * URI of the backend instance (if applicable). Populated for instance group backends, and zonal
   * NEG backends.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstanceUri() {
    return instanceUri;
  }

  /**
   * URI of the backend instance (if applicable). Populated for instance group backends, and zonal
   * NEG backends.
   * @param instanceUri instanceUri or {@code null} for none
   */
  public LoadBalancerBackendInfo setInstanceUri(java.lang.String instanceUri) {
    this.instanceUri = instanceUri;
    return this;
  }

  /**
   * URI of the network endpoint group this backend belongs to (if applicable).
   * @return value or {@code null} for none
   */
  public java.lang.String getNetworkEndpointGroupUri() {
    return networkEndpointGroupUri;
  }

  /**
   * URI of the network endpoint group this backend belongs to (if applicable).
   * @param networkEndpointGroupUri networkEndpointGroupUri or {@code null} for none
   */
  public LoadBalancerBackendInfo setNetworkEndpointGroupUri(java.lang.String networkEndpointGroupUri) {
    this.networkEndpointGroupUri = networkEndpointGroupUri;
    return this;
  }

  @Override
  public LoadBalancerBackendInfo set(String fieldName, Object value) {
    return (LoadBalancerBackendInfo) super.set(fieldName, value);
  }

  @Override
  public LoadBalancerBackendInfo clone() {
    return (LoadBalancerBackendInfo) super.clone();
  }

}
