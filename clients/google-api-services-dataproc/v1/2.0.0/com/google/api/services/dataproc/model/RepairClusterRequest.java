/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * A request to repair a cluster.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepairClusterRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a
   * cluster with the specified UUID does not exist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clusterUuid;

  /**
   * Optional. Timeout for graceful YARN decomissioning. Graceful decommissioning facilitates the
   * removal of cluster nodes without interrupting jobs in progress. The timeout specifies the
   * amount of time to wait for jobs finish before forcefully removing nodes. The default timeout is
   * 0 for forceful decommissioning, and the maximum timeout period is 1 day. (see JSON
   * Mapping—Duration (https://developers.google.com/protocol-
   * buffers/docs/proto3#json)).graceful_decommission_timeout is supported in Dataproc image
   * versions 1.2+.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String gracefulDecommissionTimeout;

  /**
   * Optional. Node pools and corresponding repair action to be taken. All node pools should be
   * unique in this request. i.e. Multiple entries for the same node pool id are not allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NodePool> nodePools;

  static {
    // hack to force ProGuard to consider NodePool used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(NodePool.class);
  }

  /**
   * Optional. operation id of the parent operation sending the repair request
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentOperationId;

  /**
   * Optional. A unique ID used to identify the request. If the server receives two
   * RepairClusterRequests with the same ID, the second request is ignored, and the first
   * google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set
   * this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must
   * contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
   * length is 40 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String requestId;

  /**
   * Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a
   * cluster with the specified UUID does not exist.
   * @return value or {@code null} for none
   */
  public java.lang.String getClusterUuid() {
    return clusterUuid;
  }

  /**
   * Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a
   * cluster with the specified UUID does not exist.
   * @param clusterUuid clusterUuid or {@code null} for none
   */
  public RepairClusterRequest setClusterUuid(java.lang.String clusterUuid) {
    this.clusterUuid = clusterUuid;
    return this;
  }

  /**
   * Optional. Timeout for graceful YARN decomissioning. Graceful decommissioning facilitates the
   * removal of cluster nodes without interrupting jobs in progress. The timeout specifies the
   * amount of time to wait for jobs finish before forcefully removing nodes. The default timeout is
   * 0 for forceful decommissioning, and the maximum timeout period is 1 day. (see JSON
   * Mapping—Duration (https://developers.google.com/protocol-
   * buffers/docs/proto3#json)).graceful_decommission_timeout is supported in Dataproc image
   * versions 1.2+.
   * @return value or {@code null} for none
   */
  public String getGracefulDecommissionTimeout() {
    return gracefulDecommissionTimeout;
  }

  /**
   * Optional. Timeout for graceful YARN decomissioning. Graceful decommissioning facilitates the
   * removal of cluster nodes without interrupting jobs in progress. The timeout specifies the
   * amount of time to wait for jobs finish before forcefully removing nodes. The default timeout is
   * 0 for forceful decommissioning, and the maximum timeout period is 1 day. (see JSON
   * Mapping—Duration (https://developers.google.com/protocol-
   * buffers/docs/proto3#json)).graceful_decommission_timeout is supported in Dataproc image
   * versions 1.2+.
   * @param gracefulDecommissionTimeout gracefulDecommissionTimeout or {@code null} for none
   */
  public RepairClusterRequest setGracefulDecommissionTimeout(String gracefulDecommissionTimeout) {
    this.gracefulDecommissionTimeout = gracefulDecommissionTimeout;
    return this;
  }

  /**
   * Optional. Node pools and corresponding repair action to be taken. All node pools should be
   * unique in this request. i.e. Multiple entries for the same node pool id are not allowed.
   * @return value or {@code null} for none
   */
  public java.util.List<NodePool> getNodePools() {
    return nodePools;
  }

  /**
   * Optional. Node pools and corresponding repair action to be taken. All node pools should be
   * unique in this request. i.e. Multiple entries for the same node pool id are not allowed.
   * @param nodePools nodePools or {@code null} for none
   */
  public RepairClusterRequest setNodePools(java.util.List<NodePool> nodePools) {
    this.nodePools = nodePools;
    return this;
  }

  /**
   * Optional. operation id of the parent operation sending the repair request
   * @return value or {@code null} for none
   */
  public java.lang.String getParentOperationId() {
    return parentOperationId;
  }

  /**
   * Optional. operation id of the parent operation sending the repair request
   * @param parentOperationId parentOperationId or {@code null} for none
   */
  public RepairClusterRequest setParentOperationId(java.lang.String parentOperationId) {
    this.parentOperationId = parentOperationId;
    return this;
  }

  /**
   * Optional. A unique ID used to identify the request. If the server receives two
   * RepairClusterRequests with the same ID, the second request is ignored, and the first
   * google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set
   * this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must
   * contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
   * length is 40 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getRequestId() {
    return requestId;
  }

  /**
   * Optional. A unique ID used to identify the request. If the server receives two
   * RepairClusterRequests with the same ID, the second request is ignored, and the first
   * google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set
   * this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must
   * contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
   * length is 40 characters.
   * @param requestId requestId or {@code null} for none
   */
  public RepairClusterRequest setRequestId(java.lang.String requestId) {
    this.requestId = requestId;
    return this;
  }

  @Override
  public RepairClusterRequest set(String fieldName, Object value) {
    return (RepairClusterRequest) super.set(fieldName, value);
  }

  @Override
  public RepairClusterRequest clone() {
    return (RepairClusterRequest) super.clone();
  }

}
