/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Decoder configuration for Dolby Vision encoded by any codec. Dolby Vision defines a separate
 * profile & level hierarchy regardless of the base codec. See Dolby Vision profiles, levels and
 * compatibility: https://dolby.my.salesforce.com/sfc/p/#700000009YuG/a/4u000000l6G4/4R18riPaaW3gxpV
 * x7XwyQLdEITLFjB.w.Si0LoQR5j8 Dolby Vision DASH streaming:
 * https://professional.dolby.com/siteassets/content-creation/dolby-vision-for-content-
 * creators/dolbyvisioninmpegdashspecification_v2_0_public_20190107.pdf HTTP Live Streaming:
 * https://professional.dolby.com/siteassets/content-creation/dolby-vision-for-content-creators
 * /dolby-vision-streams-within-the-http-live-streaming-format-v2.0-13-november-2018.pdf Dolby
 * Vision bitstreams: https://professional.dolby.com/siteassets/pdfs/dolbyvisionstreamsinisobmffspec
 * ification-v2.1.2.pdf
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoDoViDecoderConfiguration extends com.google.api.client.json.GenericJson {

  /**
   * If a track contains the base layer substream.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean blPresentFlag;

  /**
   * Whether the stream is compatible with other sets of standard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long dvBlSignalCompatibilityId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long dvLevel;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long dvProfile;

  /**
   * Specifies the major version number of the Dolby Vision specification that the stream complies
   * with.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long dvVersionMajor;

  /**
   * Specifies the minor version number of the Dolby Vision specification that the stream complies
   * with.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long dvVersionMinor;

  /**
   * If a track contains the enhancement layer substream.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean elPresentFlag;

  /**
   * dvhe, dvh1, dvav, dva1: https://screenshot.googleplex.com/ipMGXFqLX9E
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fourccTag;

  /**
   * If a track contains the reference picture unit substream.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean rpuPresentFlag;

  /**
   * If a track contains the base layer substream.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBlPresentFlag() {
    return blPresentFlag;
  }

  /**
   * If a track contains the base layer substream.
   * @param blPresentFlag blPresentFlag or {@code null} for none
   */
  public VideoDoViDecoderConfiguration setBlPresentFlag(java.lang.Boolean blPresentFlag) {
    this.blPresentFlag = blPresentFlag;
    return this;
  }

  /**
   * Whether the stream is compatible with other sets of standard.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDvBlSignalCompatibilityId() {
    return dvBlSignalCompatibilityId;
  }

  /**
   * Whether the stream is compatible with other sets of standard.
   * @param dvBlSignalCompatibilityId dvBlSignalCompatibilityId or {@code null} for none
   */
  public VideoDoViDecoderConfiguration setDvBlSignalCompatibilityId(java.lang.Long dvBlSignalCompatibilityId) {
    this.dvBlSignalCompatibilityId = dvBlSignalCompatibilityId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getDvLevel() {
    return dvLevel;
  }

  /**
   * @param dvLevel dvLevel or {@code null} for none
   */
  public VideoDoViDecoderConfiguration setDvLevel(java.lang.Long dvLevel) {
    this.dvLevel = dvLevel;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getDvProfile() {
    return dvProfile;
  }

  /**
   * @param dvProfile dvProfile or {@code null} for none
   */
  public VideoDoViDecoderConfiguration setDvProfile(java.lang.Long dvProfile) {
    this.dvProfile = dvProfile;
    return this;
  }

  /**
   * Specifies the major version number of the Dolby Vision specification that the stream complies
   * with.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDvVersionMajor() {
    return dvVersionMajor;
  }

  /**
   * Specifies the major version number of the Dolby Vision specification that the stream complies
   * with.
   * @param dvVersionMajor dvVersionMajor or {@code null} for none
   */
  public VideoDoViDecoderConfiguration setDvVersionMajor(java.lang.Long dvVersionMajor) {
    this.dvVersionMajor = dvVersionMajor;
    return this;
  }

  /**
   * Specifies the minor version number of the Dolby Vision specification that the stream complies
   * with.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDvVersionMinor() {
    return dvVersionMinor;
  }

  /**
   * Specifies the minor version number of the Dolby Vision specification that the stream complies
   * with.
   * @param dvVersionMinor dvVersionMinor or {@code null} for none
   */
  public VideoDoViDecoderConfiguration setDvVersionMinor(java.lang.Long dvVersionMinor) {
    this.dvVersionMinor = dvVersionMinor;
    return this;
  }

  /**
   * If a track contains the enhancement layer substream.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getElPresentFlag() {
    return elPresentFlag;
  }

  /**
   * If a track contains the enhancement layer substream.
   * @param elPresentFlag elPresentFlag or {@code null} for none
   */
  public VideoDoViDecoderConfiguration setElPresentFlag(java.lang.Boolean elPresentFlag) {
    this.elPresentFlag = elPresentFlag;
    return this;
  }

  /**
   * dvhe, dvh1, dvav, dva1: https://screenshot.googleplex.com/ipMGXFqLX9E
   * @return value or {@code null} for none
   */
  public java.lang.String getFourccTag() {
    return fourccTag;
  }

  /**
   * dvhe, dvh1, dvav, dva1: https://screenshot.googleplex.com/ipMGXFqLX9E
   * @param fourccTag fourccTag or {@code null} for none
   */
  public VideoDoViDecoderConfiguration setFourccTag(java.lang.String fourccTag) {
    this.fourccTag = fourccTag;
    return this;
  }

  /**
   * If a track contains the reference picture unit substream.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRpuPresentFlag() {
    return rpuPresentFlag;
  }

  /**
   * If a track contains the reference picture unit substream.
   * @param rpuPresentFlag rpuPresentFlag or {@code null} for none
   */
  public VideoDoViDecoderConfiguration setRpuPresentFlag(java.lang.Boolean rpuPresentFlag) {
    this.rpuPresentFlag = rpuPresentFlag;
    return this;
  }

  @Override
  public VideoDoViDecoderConfiguration set(String fieldName, Object value) {
    return (VideoDoViDecoderConfiguration) super.set(fieldName, value);
  }

  @Override
  public VideoDoViDecoderConfiguration clone() {
    return (VideoDoViDecoderConfiguration) super.clone();
  }

}
