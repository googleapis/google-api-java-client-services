/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The attributes of encoded thumbnail images. Next id: 7.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DrishtiVesperEncodedThumbnail extends com.google.api.client.json.GenericJson {

  /**
   * JPEG/WEBP quality factor in range [0,100].
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer encodingQuality;

  /**
   * Image encoding type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String encodingType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer height;

  /**
   * Encoded thumbnail bytes. Prefer this over `image_string` as we are not supposed to store image
   * bytes in a proto string field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageBytes;

  /**
   * Please migrate to `image_bytes`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageString;

  /**
   * Thumbnail resolution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer width;

  /**
   * JPEG/WEBP quality factor in range [0,100].
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEncodingQuality() {
    return encodingQuality;
  }

  /**
   * JPEG/WEBP quality factor in range [0,100].
   * @param encodingQuality encodingQuality or {@code null} for none
   */
  public DrishtiVesperEncodedThumbnail setEncodingQuality(java.lang.Integer encodingQuality) {
    this.encodingQuality = encodingQuality;
    return this;
  }

  /**
   * Image encoding type.
   * @return value or {@code null} for none
   */
  public java.lang.String getEncodingType() {
    return encodingType;
  }

  /**
   * Image encoding type.
   * @param encodingType encodingType or {@code null} for none
   */
  public DrishtiVesperEncodedThumbnail setEncodingType(java.lang.String encodingType) {
    this.encodingType = encodingType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getHeight() {
    return height;
  }

  /**
   * @param height height or {@code null} for none
   */
  public DrishtiVesperEncodedThumbnail setHeight(java.lang.Integer height) {
    this.height = height;
    return this;
  }

  /**
   * Encoded thumbnail bytes. Prefer this over `image_string` as we are not supposed to store image
   * bytes in a proto string field.
   * @see #decodeImageBytes()
   * @return value or {@code null} for none
   */
  public java.lang.String getImageBytes() {
    return imageBytes;
  }

  /**
   * Encoded thumbnail bytes. Prefer this over `image_string` as we are not supposed to store image
   * bytes in a proto string field.
   * @see #getImageBytes()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeImageBytes() {
    return com.google.api.client.util.Base64.decodeBase64(imageBytes);
  }

  /**
   * Encoded thumbnail bytes. Prefer this over `image_string` as we are not supposed to store image
   * bytes in a proto string field.
   * @see #encodeImageBytes()
   * @param imageBytes imageBytes or {@code null} for none
   */
  public DrishtiVesperEncodedThumbnail setImageBytes(java.lang.String imageBytes) {
    this.imageBytes = imageBytes;
    return this;
  }

  /**
   * Encoded thumbnail bytes. Prefer this over `image_string` as we are not supposed to store image
   * bytes in a proto string field.
   * @see #setImageBytes()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public DrishtiVesperEncodedThumbnail encodeImageBytes(byte[] imageBytes) {
    this.imageBytes = com.google.api.client.util.Base64.encodeBase64URLSafeString(imageBytes);
    return this;
  }

  /**
   * Please migrate to `image_bytes`.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageString() {
    return imageString;
  }

  /**
   * Please migrate to `image_bytes`.
   * @param imageString imageString or {@code null} for none
   */
  public DrishtiVesperEncodedThumbnail setImageString(java.lang.String imageString) {
    this.imageString = imageString;
    return this;
  }

  /**
   * Thumbnail resolution.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getWidth() {
    return width;
  }

  /**
   * Thumbnail resolution.
   * @param width width or {@code null} for none
   */
  public DrishtiVesperEncodedThumbnail setWidth(java.lang.Integer width) {
    this.width = width;
    return this;
  }

  @Override
  public DrishtiVesperEncodedThumbnail set(String fieldName, Object value) {
    return (DrishtiVesperEncodedThumbnail) super.set(fieldName, value);
  }

  @Override
  public DrishtiVesperEncodedThumbnail clone() {
    return (DrishtiVesperEncodedThumbnail) super.clone();
  }

}
