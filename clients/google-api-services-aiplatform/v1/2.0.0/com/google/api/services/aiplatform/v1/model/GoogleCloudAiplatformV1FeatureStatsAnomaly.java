/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and
 * end_time are used to define the time range of the dataset that current stats belongs to, e.g.
 * prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not
 * defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers
 * to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow
 * defined protos. Field data_stats contains almost identical information with the raw stats in
 * Vertex AI defined proto, for UI to display.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1FeatureStatsAnomaly extends com.google.api.client.json.GenericJson {

  /**
   * This is the threshold used when detecting anomalies. The threshold can be changed by user, so
   * this one might be different from ThresholdConfig.value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double anomalyDetectionThreshold;

  /**
   * Path of the anomaly file for current feature values in Cloud Storage bucket. Format:
   * gs:/anomalies. Example: gs://monitoring_bucket/feature_name/anomalies. Stats are stored as
   * binary format with Protobuf message Anoamlies are stored as binary format with Protobuf message
   * [tensorflow.metadata.v0.AnomalyInfo] (https://github.com/tensorflow/metadata/blob/master/tensor
   * flow_metadata/proto/v0/anomalies.proto).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String anomalyUri;

  /**
   * Deviation from the current stats to baseline stats. 1. For categorical feature, the
   * distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the
   * distribution distance is calculated by Jensen–Shannon divergence.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double distributionDeviation;

  /**
   * The end timestamp of window where stats were generated. For objectives where time window
   * doesn't make sense (e.g. Featurestore Snapshot Monitoring), end_time indicates the timestamp of
   * the data used to generate stats (e.g. timestamp we take snapshots for feature values).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * Feature importance score, only populated when cross-feature monitoring is enabled. For now only
   * used to represent feature attribution score within range [0, 1] for
   * ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and
   * ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double score;

  /**
   * The start timestamp of window where stats were generated. For objectives where time window
   * doesn't make sense (e.g. Featurestore Snapshot Monitoring), start_time is only used to indicate
   * the monitoring intervals, so it always equals to (end_time - monitoring_interval).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Path of the stats file for current feature values in Cloud Storage bucket. Format: gs:/stats.
   * Example: gs://monitoring_bucket/feature_name/stats. Stats are stored as binary format with
   * Protobuf message [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/m
   * etadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String statsUri;

  /**
   * This is the threshold used when detecting anomalies. The threshold can be changed by user, so
   * this one might be different from ThresholdConfig.value.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAnomalyDetectionThreshold() {
    return anomalyDetectionThreshold;
  }

  /**
   * This is the threshold used when detecting anomalies. The threshold can be changed by user, so
   * this one might be different from ThresholdConfig.value.
   * @param anomalyDetectionThreshold anomalyDetectionThreshold or {@code null} for none
   */
  public GoogleCloudAiplatformV1FeatureStatsAnomaly setAnomalyDetectionThreshold(java.lang.Double anomalyDetectionThreshold) {
    this.anomalyDetectionThreshold = anomalyDetectionThreshold;
    return this;
  }

  /**
   * Path of the anomaly file for current feature values in Cloud Storage bucket. Format:
   * gs:/anomalies. Example: gs://monitoring_bucket/feature_name/anomalies. Stats are stored as
   * binary format with Protobuf message Anoamlies are stored as binary format with Protobuf message
   * [tensorflow.metadata.v0.AnomalyInfo] (https://github.com/tensorflow/metadata/blob/master/tensor
   * flow_metadata/proto/v0/anomalies.proto).
   * @return value or {@code null} for none
   */
  public java.lang.String getAnomalyUri() {
    return anomalyUri;
  }

  /**
   * Path of the anomaly file for current feature values in Cloud Storage bucket. Format:
   * gs:/anomalies. Example: gs://monitoring_bucket/feature_name/anomalies. Stats are stored as
   * binary format with Protobuf message Anoamlies are stored as binary format with Protobuf message
   * [tensorflow.metadata.v0.AnomalyInfo] (https://github.com/tensorflow/metadata/blob/master/tensor
   * flow_metadata/proto/v0/anomalies.proto).
   * @param anomalyUri anomalyUri or {@code null} for none
   */
  public GoogleCloudAiplatformV1FeatureStatsAnomaly setAnomalyUri(java.lang.String anomalyUri) {
    this.anomalyUri = anomalyUri;
    return this;
  }

  /**
   * Deviation from the current stats to baseline stats. 1. For categorical feature, the
   * distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the
   * distribution distance is calculated by Jensen–Shannon divergence.
   * @return value or {@code null} for none
   */
  public java.lang.Double getDistributionDeviation() {
    return distributionDeviation;
  }

  /**
   * Deviation from the current stats to baseline stats. 1. For categorical feature, the
   * distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the
   * distribution distance is calculated by Jensen–Shannon divergence.
   * @param distributionDeviation distributionDeviation or {@code null} for none
   */
  public GoogleCloudAiplatformV1FeatureStatsAnomaly setDistributionDeviation(java.lang.Double distributionDeviation) {
    this.distributionDeviation = distributionDeviation;
    return this;
  }

  /**
   * The end timestamp of window where stats were generated. For objectives where time window
   * doesn't make sense (e.g. Featurestore Snapshot Monitoring), end_time indicates the timestamp of
   * the data used to generate stats (e.g. timestamp we take snapshots for feature values).
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * The end timestamp of window where stats were generated. For objectives where time window
   * doesn't make sense (e.g. Featurestore Snapshot Monitoring), end_time indicates the timestamp of
   * the data used to generate stats (e.g. timestamp we take snapshots for feature values).
   * @param endTime endTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1FeatureStatsAnomaly setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Feature importance score, only populated when cross-feature monitoring is enabled. For now only
   * used to represent feature attribution score within range [0, 1] for
   * ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and
   * ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT.
   * @return value or {@code null} for none
   */
  public java.lang.Double getScore() {
    return score;
  }

  /**
   * Feature importance score, only populated when cross-feature monitoring is enabled. For now only
   * used to represent feature attribution score within range [0, 1] for
   * ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and
   * ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT.
   * @param score score or {@code null} for none
   */
  public GoogleCloudAiplatformV1FeatureStatsAnomaly setScore(java.lang.Double score) {
    this.score = score;
    return this;
  }

  /**
   * The start timestamp of window where stats were generated. For objectives where time window
   * doesn't make sense (e.g. Featurestore Snapshot Monitoring), start_time is only used to indicate
   * the monitoring intervals, so it always equals to (end_time - monitoring_interval).
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * The start timestamp of window where stats were generated. For objectives where time window
   * doesn't make sense (e.g. Featurestore Snapshot Monitoring), start_time is only used to indicate
   * the monitoring intervals, so it always equals to (end_time - monitoring_interval).
   * @param startTime startTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1FeatureStatsAnomaly setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Path of the stats file for current feature values in Cloud Storage bucket. Format: gs:/stats.
   * Example: gs://monitoring_bucket/feature_name/stats. Stats are stored as binary format with
   * Protobuf message [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/m
   * etadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto).
   * @return value or {@code null} for none
   */
  public java.lang.String getStatsUri() {
    return statsUri;
  }

  /**
   * Path of the stats file for current feature values in Cloud Storage bucket. Format: gs:/stats.
   * Example: gs://monitoring_bucket/feature_name/stats. Stats are stored as binary format with
   * Protobuf message [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/m
   * etadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto).
   * @param statsUri statsUri or {@code null} for none
   */
  public GoogleCloudAiplatformV1FeatureStatsAnomaly setStatsUri(java.lang.String statsUri) {
    this.statsUri = statsUri;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1FeatureStatsAnomaly set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1FeatureStatsAnomaly) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1FeatureStatsAnomaly clone() {
    return (GoogleCloudAiplatformV1FeatureStatsAnomaly) super.clone();
  }

}
