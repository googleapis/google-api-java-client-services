/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * Model definition for StreamingQueryProgress.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StreamingQueryProgress extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long batchDuration;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long batchId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.Map<String, java.lang.Long> durationMillis;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> eventTime;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> observedMetrics;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String runId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SinkProgress sink;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SourceProgress> sources;

  static {
    // hack to force ProGuard to consider SourceProgress used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(SourceProgress.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<StateOperatorProgress> stateOperators;

  static {
    // hack to force ProGuard to consider StateOperatorProgress used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(StateOperatorProgress.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String streamingQueryProgressId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String timestamp;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBatchDuration() {
    return batchDuration;
  }

  /**
   * @param batchDuration batchDuration or {@code null} for none
   */
  public StreamingQueryProgress setBatchDuration(java.lang.Long batchDuration) {
    this.batchDuration = batchDuration;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBatchId() {
    return batchId;
  }

  /**
   * @param batchId batchId or {@code null} for none
   */
  public StreamingQueryProgress setBatchId(java.lang.Long batchId) {
    this.batchId = batchId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Long> getDurationMillis() {
    return durationMillis;
  }

  /**
   * @param durationMillis durationMillis or {@code null} for none
   */
  public StreamingQueryProgress setDurationMillis(java.util.Map<String, java.lang.Long> durationMillis) {
    this.durationMillis = durationMillis;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getEventTime() {
    return eventTime;
  }

  /**
   * @param eventTime eventTime or {@code null} for none
   */
  public StreamingQueryProgress setEventTime(java.util.Map<String, java.lang.String> eventTime) {
    this.eventTime = eventTime;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public StreamingQueryProgress setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getObservedMetrics() {
    return observedMetrics;
  }

  /**
   * @param observedMetrics observedMetrics or {@code null} for none
   */
  public StreamingQueryProgress setObservedMetrics(java.util.Map<String, java.lang.String> observedMetrics) {
    this.observedMetrics = observedMetrics;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getRunId() {
    return runId;
  }

  /**
   * @param runId runId or {@code null} for none
   */
  public StreamingQueryProgress setRunId(java.lang.String runId) {
    this.runId = runId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public SinkProgress getSink() {
    return sink;
  }

  /**
   * @param sink sink or {@code null} for none
   */
  public StreamingQueryProgress setSink(SinkProgress sink) {
    this.sink = sink;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<SourceProgress> getSources() {
    return sources;
  }

  /**
   * @param sources sources or {@code null} for none
   */
  public StreamingQueryProgress setSources(java.util.List<SourceProgress> sources) {
    this.sources = sources;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<StateOperatorProgress> getStateOperators() {
    return stateOperators;
  }

  /**
   * @param stateOperators stateOperators or {@code null} for none
   */
  public StreamingQueryProgress setStateOperators(java.util.List<StateOperatorProgress> stateOperators) {
    this.stateOperators = stateOperators;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getStreamingQueryProgressId() {
    return streamingQueryProgressId;
  }

  /**
   * @param streamingQueryProgressId streamingQueryProgressId or {@code null} for none
   */
  public StreamingQueryProgress setStreamingQueryProgressId(java.lang.String streamingQueryProgressId) {
    this.streamingQueryProgressId = streamingQueryProgressId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getTimestamp() {
    return timestamp;
  }

  /**
   * @param timestamp timestamp or {@code null} for none
   */
  public StreamingQueryProgress setTimestamp(java.lang.String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  @Override
  public StreamingQueryProgress set(String fieldName, Object value) {
    return (StreamingQueryProgress) super.set(fieldName, value);
  }

  @Override
  public StreamingQueryProgress clone() {
    return (StreamingQueryProgress) super.clone();
  }

}
