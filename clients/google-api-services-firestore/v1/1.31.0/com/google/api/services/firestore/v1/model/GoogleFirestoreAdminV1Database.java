/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firestore.v1.model;

/**
 * A Cloud Firestore Database in Native Mode. Currently one database is allowed per cloud project.
 * It is named '(default)'
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Firestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirestoreAdminV1Database extends com.google.api.client.json.GenericJson {

  /**
   * The concurrency control mode to use for this database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String concurrencyMode;

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * The location of the database. Available databases are listed at
   * https://cloud.google.com/firestore/docs/locations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locationId;

  /**
   * The resource name of the Database. Format: `projects/{project}/databases/{database}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The type of the database. See https://cloud.google.com/datastore/docs/firestore-or-datastore
   * for information about how to choose.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The concurrency control mode to use for this database.
   * @return value or {@code null} for none
   */
  public java.lang.String getConcurrencyMode() {
    return concurrencyMode;
  }

  /**
   * The concurrency control mode to use for this database.
   * @param concurrencyMode concurrencyMode or {@code null} for none
   */
  public GoogleFirestoreAdminV1Database setConcurrencyMode(java.lang.String concurrencyMode) {
    this.concurrencyMode = concurrencyMode;
    return this;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public GoogleFirestoreAdminV1Database setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * The location of the database. Available databases are listed at
   * https://cloud.google.com/firestore/docs/locations.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocationId() {
    return locationId;
  }

  /**
   * The location of the database. Available databases are listed at
   * https://cloud.google.com/firestore/docs/locations.
   * @param locationId locationId or {@code null} for none
   */
  public GoogleFirestoreAdminV1Database setLocationId(java.lang.String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * The resource name of the Database. Format: `projects/{project}/databases/{database}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name of the Database. Format: `projects/{project}/databases/{database}`
   * @param name name or {@code null} for none
   */
  public GoogleFirestoreAdminV1Database setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The type of the database. See https://cloud.google.com/datastore/docs/firestore-or-datastore
   * for information about how to choose.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of the database. See https://cloud.google.com/datastore/docs/firestore-or-datastore
   * for information about how to choose.
   * @param type type or {@code null} for none
   */
  public GoogleFirestoreAdminV1Database setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public GoogleFirestoreAdminV1Database set(String fieldName, Object value) {
    return (GoogleFirestoreAdminV1Database) super.set(fieldName, value);
  }

  @Override
  public GoogleFirestoreAdminV1Database clone() {
    return (GoogleFirestoreAdminV1Database) super.clone();
  }

}
