/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apphub.v1alpha.model;

/**
 * Workload is an App Hub data model that contains a discovered workload, which represents a binary
 * deployment (such as managed instance groups (MIGs) and GKE deployments) that performs the
 * smallest logical subset of business functionality.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the App Hub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Workload extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Consumer provided attributes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Attributes attributes;

  /**
   * Output only. Create time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. User-defined description of a Workload.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. Immutable. The resource name of the original discovered workload.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String discoveredWorkload;

  /**
   * Optional. User-defined name for the Workload.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Identifier. The resource name of the Workload. Format: "projects/{host-project-
   * id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Workload state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Update time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Properties of an underlying compute resource represented by the Workload. These
   * are immutable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WorkloadProperties workloadProperties;

  /**
   * Output only. Reference of an underlying compute resource represented by the Workload. These are
   * immutable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WorkloadReference workloadReference;

  /**
   * Optional. Consumer provided attributes.
   * @return value or {@code null} for none
   */
  public Attributes getAttributes() {
    return attributes;
  }

  /**
   * Optional. Consumer provided attributes.
   * @param attributes attributes or {@code null} for none
   */
  public Workload setAttributes(Attributes attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Output only. Create time.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Create time.
   * @param createTime createTime or {@code null} for none
   */
  public Workload setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. User-defined description of a Workload.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. User-defined description of a Workload.
   * @param description description or {@code null} for none
   */
  public Workload setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. Immutable. The resource name of the original discovered workload.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiscoveredWorkload() {
    return discoveredWorkload;
  }

  /**
   * Required. Immutable. The resource name of the original discovered workload.
   * @param discoveredWorkload discoveredWorkload or {@code null} for none
   */
  public Workload setDiscoveredWorkload(java.lang.String discoveredWorkload) {
    this.discoveredWorkload = discoveredWorkload;
    return this;
  }

  /**
   * Optional. User-defined name for the Workload.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Optional. User-defined name for the Workload.
   * @param displayName displayName or {@code null} for none
   */
  public Workload setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Identifier. The resource name of the Workload. Format: "projects/{host-project-
   * id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the Workload. Format: "projects/{host-project-
   * id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
   * @param name name or {@code null} for none
   */
  public Workload setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Workload state.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Workload state.
   * @param state state or {@code null} for none
   */
  public Workload setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
   * @param uid uid or {@code null} for none
   */
  public Workload setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. Update time.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Update time.
   * @param updateTime updateTime or {@code null} for none
   */
  public Workload setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. Properties of an underlying compute resource represented by the Workload. These
   * are immutable.
   * @return value or {@code null} for none
   */
  public WorkloadProperties getWorkloadProperties() {
    return workloadProperties;
  }

  /**
   * Output only. Properties of an underlying compute resource represented by the Workload. These
   * are immutable.
   * @param workloadProperties workloadProperties or {@code null} for none
   */
  public Workload setWorkloadProperties(WorkloadProperties workloadProperties) {
    this.workloadProperties = workloadProperties;
    return this;
  }

  /**
   * Output only. Reference of an underlying compute resource represented by the Workload. These are
   * immutable.
   * @return value or {@code null} for none
   */
  public WorkloadReference getWorkloadReference() {
    return workloadReference;
  }

  /**
   * Output only. Reference of an underlying compute resource represented by the Workload. These are
   * immutable.
   * @param workloadReference workloadReference or {@code null} for none
   */
  public Workload setWorkloadReference(WorkloadReference workloadReference) {
    this.workloadReference = workloadReference;
    return this;
  }

  @Override
  public Workload set(String fieldName, Object value) {
    return (Workload) super.set(fieldName, value);
  }

  @Override
  public Workload clone() {
    return (Workload) super.clone();
  }

}
