/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.domains.v1beta1;

/**
 * Service definition for CloudDomains (v1beta1).
 *
 * <p>
 * Enables management and configuration of domain names.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/domains/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudDomainsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudDomains extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Cloud Domains API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://domains.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://domains.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudDomains(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudDomains(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudDomains domains = new CloudDomains(...);}
   *   {@code CloudDomains.Projects.List request = domains.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudDomains domains = new CloudDomains(...);}
     *   {@code CloudDomains.Locations.List request = domains.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the domains server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Location> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the domains server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the domains server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1beta1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the domains server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudDomains domains = new CloudDomains(...);}
       *   {@code CloudDomains.Operations.List request = domains.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override
         * the binding to use different resource name schemes, such as `users/operations`. To override the
         * binding, API services can add a binding such as `"/v1/{name=users}/operations"` to their service
         * configuration. For backwards compatibility, the default name includes the operations collection
         * id, however overriding users must ensure the name binding is the parent resource, without the
         * operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1beta1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
           * override the binding to use different resource name schemes, such as `users/operations`. To
           * override the binding, API services can add a binding such as `"/v1/{name=users}/operations"` to
           * their service configuration. For backwards compatibility, the default name includes the
           * operations collection id, however overriding users must ensure the name binding is the parent
           * resource, without the operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Registrations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudDomains domains = new CloudDomains(...);}
       *   {@code CloudDomains.Registrations.List request = domains.registrations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Registrations registrations() {
        return new Registrations();
      }

      /**
       * The "registrations" collection of methods.
       */
      public class Registrations {

        /**
         * Updates a `Registration`'s contact settings. Some changes require confirmation by the domain's
         * registrant contact .
         *
         * Create a request for the method "registrations.configureContactSettings".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link ConfigureContactSettings#execute()} method to invoke the remote
         * operation.
         *
         * @param registration Required. The name of the `Registration` whose contact settings are being updated, in the format
         *        `projects/locations/registrations`.
         * @param content the {@link com.google.api.services.domains.v1beta1.model.ConfigureContactSettingsRequest}
         * @return the request
         */
        public ConfigureContactSettings configureContactSettings(java.lang.String registration, com.google.api.services.domains.v1beta1.model.ConfigureContactSettingsRequest content) throws java.io.IOException {
          ConfigureContactSettings result = new ConfigureContactSettings(registration, content);
          initialize(result);
          return result;
        }

        public class ConfigureContactSettings extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+registration}:configureContactSettings";

          private final java.util.regex.Pattern REGISTRATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Updates a `Registration`'s contact settings. Some changes require confirmation by the domain's
           * registrant contact .
           *
           * Create a request for the method "registrations.configureContactSettings".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link ConfigureContactSettings#execute()} method to invoke the remote
           * operation. <p> {@link ConfigureContactSettings#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param registration Required. The name of the `Registration` whose contact settings are being updated, in the format
         *        `projects/locations/registrations`.
           * @param content the {@link com.google.api.services.domains.v1beta1.model.ConfigureContactSettingsRequest}
           * @since 1.13
           */
          protected ConfigureContactSettings(java.lang.String registration, com.google.api.services.domains.v1beta1.model.ConfigureContactSettingsRequest content) {
            super(CloudDomains.this, "POST", REST_PATH, content, com.google.api.services.domains.v1beta1.model.Operation.class);
            this.registration = com.google.api.client.util.Preconditions.checkNotNull(registration, "Required parameter registration must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public ConfigureContactSettings set$Xgafv(java.lang.String $Xgafv) {
            return (ConfigureContactSettings) super.set$Xgafv($Xgafv);
          }

          @Override
          public ConfigureContactSettings setAccessToken(java.lang.String accessToken) {
            return (ConfigureContactSettings) super.setAccessToken(accessToken);
          }

          @Override
          public ConfigureContactSettings setAlt(java.lang.String alt) {
            return (ConfigureContactSettings) super.setAlt(alt);
          }

          @Override
          public ConfigureContactSettings setCallback(java.lang.String callback) {
            return (ConfigureContactSettings) super.setCallback(callback);
          }

          @Override
          public ConfigureContactSettings setFields(java.lang.String fields) {
            return (ConfigureContactSettings) super.setFields(fields);
          }

          @Override
          public ConfigureContactSettings setKey(java.lang.String key) {
            return (ConfigureContactSettings) super.setKey(key);
          }

          @Override
          public ConfigureContactSettings setOauthToken(java.lang.String oauthToken) {
            return (ConfigureContactSettings) super.setOauthToken(oauthToken);
          }

          @Override
          public ConfigureContactSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ConfigureContactSettings) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ConfigureContactSettings setQuotaUser(java.lang.String quotaUser) {
            return (ConfigureContactSettings) super.setQuotaUser(quotaUser);
          }

          @Override
          public ConfigureContactSettings setUploadType(java.lang.String uploadType) {
            return (ConfigureContactSettings) super.setUploadType(uploadType);
          }

          @Override
          public ConfigureContactSettings setUploadProtocol(java.lang.String uploadProtocol) {
            return (ConfigureContactSettings) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the `Registration` whose contact settings are being updated, in
           * the format `projects/locations/registrations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String registration;

          /** Required. The name of the `Registration` whose contact settings are being updated, in the format
         `projects/locations/registrations`.
           */
          public java.lang.String getRegistration() {
            return registration;
          }

          /**
           * Required. The name of the `Registration` whose contact settings are being updated, in
           * the format `projects/locations/registrations`.
           */
          public ConfigureContactSettings setRegistration(java.lang.String registration) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.registration = registration;
            return this;
          }

          @Override
          public ConfigureContactSettings set(String parameterName, Object value) {
            return (ConfigureContactSettings) super.set(parameterName, value);
          }
        }
        /**
         * Updates a `Registration`'s DNS settings.
         *
         * Create a request for the method "registrations.configureDnsSettings".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link ConfigureDnsSettings#execute()} method to invoke the remote
         * operation.
         *
         * @param registration Required. The name of the `Registration` whose DNS settings are being updated, in the format
         *        `projects/locations/registrations`.
         * @param content the {@link com.google.api.services.domains.v1beta1.model.ConfigureDnsSettingsRequest}
         * @return the request
         */
        public ConfigureDnsSettings configureDnsSettings(java.lang.String registration, com.google.api.services.domains.v1beta1.model.ConfigureDnsSettingsRequest content) throws java.io.IOException {
          ConfigureDnsSettings result = new ConfigureDnsSettings(registration, content);
          initialize(result);
          return result;
        }

        public class ConfigureDnsSettings extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+registration}:configureDnsSettings";

          private final java.util.regex.Pattern REGISTRATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Updates a `Registration`'s DNS settings.
           *
           * Create a request for the method "registrations.configureDnsSettings".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link ConfigureDnsSettings#execute()} method to invoke the remote
           * operation. <p> {@link ConfigureDnsSettings#initialize(com.google.api.client.googleapis.services
           * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param registration Required. The name of the `Registration` whose DNS settings are being updated, in the format
         *        `projects/locations/registrations`.
           * @param content the {@link com.google.api.services.domains.v1beta1.model.ConfigureDnsSettingsRequest}
           * @since 1.13
           */
          protected ConfigureDnsSettings(java.lang.String registration, com.google.api.services.domains.v1beta1.model.ConfigureDnsSettingsRequest content) {
            super(CloudDomains.this, "POST", REST_PATH, content, com.google.api.services.domains.v1beta1.model.Operation.class);
            this.registration = com.google.api.client.util.Preconditions.checkNotNull(registration, "Required parameter registration must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public ConfigureDnsSettings set$Xgafv(java.lang.String $Xgafv) {
            return (ConfigureDnsSettings) super.set$Xgafv($Xgafv);
          }

          @Override
          public ConfigureDnsSettings setAccessToken(java.lang.String accessToken) {
            return (ConfigureDnsSettings) super.setAccessToken(accessToken);
          }

          @Override
          public ConfigureDnsSettings setAlt(java.lang.String alt) {
            return (ConfigureDnsSettings) super.setAlt(alt);
          }

          @Override
          public ConfigureDnsSettings setCallback(java.lang.String callback) {
            return (ConfigureDnsSettings) super.setCallback(callback);
          }

          @Override
          public ConfigureDnsSettings setFields(java.lang.String fields) {
            return (ConfigureDnsSettings) super.setFields(fields);
          }

          @Override
          public ConfigureDnsSettings setKey(java.lang.String key) {
            return (ConfigureDnsSettings) super.setKey(key);
          }

          @Override
          public ConfigureDnsSettings setOauthToken(java.lang.String oauthToken) {
            return (ConfigureDnsSettings) super.setOauthToken(oauthToken);
          }

          @Override
          public ConfigureDnsSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ConfigureDnsSettings) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ConfigureDnsSettings setQuotaUser(java.lang.String quotaUser) {
            return (ConfigureDnsSettings) super.setQuotaUser(quotaUser);
          }

          @Override
          public ConfigureDnsSettings setUploadType(java.lang.String uploadType) {
            return (ConfigureDnsSettings) super.setUploadType(uploadType);
          }

          @Override
          public ConfigureDnsSettings setUploadProtocol(java.lang.String uploadProtocol) {
            return (ConfigureDnsSettings) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the `Registration` whose DNS settings are being updated, in the
           * format `projects/locations/registrations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String registration;

          /** Required. The name of the `Registration` whose DNS settings are being updated, in the format
         `projects/locations/registrations`.
           */
          public java.lang.String getRegistration() {
            return registration;
          }

          /**
           * Required. The name of the `Registration` whose DNS settings are being updated, in the
           * format `projects/locations/registrations`.
           */
          public ConfigureDnsSettings setRegistration(java.lang.String registration) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.registration = registration;
            return this;
          }

          @Override
          public ConfigureDnsSettings set(String parameterName, Object value) {
            return (ConfigureDnsSettings) super.set(parameterName, value);
          }
        }
        /**
         * Updates a `Registration`'s management settings.
         *
         * Create a request for the method "registrations.configureManagementSettings".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link ConfigureManagementSettings#execute()} method to invoke the remote
         * operation.
         *
         * @param registration Required. The name of the `Registration` whose management settings are being updated, in the format
         *        `projects/locations/registrations`.
         * @param content the {@link com.google.api.services.domains.v1beta1.model.ConfigureManagementSettingsRequest}
         * @return the request
         */
        public ConfigureManagementSettings configureManagementSettings(java.lang.String registration, com.google.api.services.domains.v1beta1.model.ConfigureManagementSettingsRequest content) throws java.io.IOException {
          ConfigureManagementSettings result = new ConfigureManagementSettings(registration, content);
          initialize(result);
          return result;
        }

        public class ConfigureManagementSettings extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+registration}:configureManagementSettings";

          private final java.util.regex.Pattern REGISTRATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Updates a `Registration`'s management settings.
           *
           * Create a request for the method "registrations.configureManagementSettings".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link ConfigureManagementSettings#execute()} method to invoke the remote
           * operation. <p> {@link ConfigureManagementSettings#initialize(com.google.api.client.googleapis.s
           * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param registration Required. The name of the `Registration` whose management settings are being updated, in the format
         *        `projects/locations/registrations`.
           * @param content the {@link com.google.api.services.domains.v1beta1.model.ConfigureManagementSettingsRequest}
           * @since 1.13
           */
          protected ConfigureManagementSettings(java.lang.String registration, com.google.api.services.domains.v1beta1.model.ConfigureManagementSettingsRequest content) {
            super(CloudDomains.this, "POST", REST_PATH, content, com.google.api.services.domains.v1beta1.model.Operation.class);
            this.registration = com.google.api.client.util.Preconditions.checkNotNull(registration, "Required parameter registration must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public ConfigureManagementSettings set$Xgafv(java.lang.String $Xgafv) {
            return (ConfigureManagementSettings) super.set$Xgafv($Xgafv);
          }

          @Override
          public ConfigureManagementSettings setAccessToken(java.lang.String accessToken) {
            return (ConfigureManagementSettings) super.setAccessToken(accessToken);
          }

          @Override
          public ConfigureManagementSettings setAlt(java.lang.String alt) {
            return (ConfigureManagementSettings) super.setAlt(alt);
          }

          @Override
          public ConfigureManagementSettings setCallback(java.lang.String callback) {
            return (ConfigureManagementSettings) super.setCallback(callback);
          }

          @Override
          public ConfigureManagementSettings setFields(java.lang.String fields) {
            return (ConfigureManagementSettings) super.setFields(fields);
          }

          @Override
          public ConfigureManagementSettings setKey(java.lang.String key) {
            return (ConfigureManagementSettings) super.setKey(key);
          }

          @Override
          public ConfigureManagementSettings setOauthToken(java.lang.String oauthToken) {
            return (ConfigureManagementSettings) super.setOauthToken(oauthToken);
          }

          @Override
          public ConfigureManagementSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ConfigureManagementSettings) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ConfigureManagementSettings setQuotaUser(java.lang.String quotaUser) {
            return (ConfigureManagementSettings) super.setQuotaUser(quotaUser);
          }

          @Override
          public ConfigureManagementSettings setUploadType(java.lang.String uploadType) {
            return (ConfigureManagementSettings) super.setUploadType(uploadType);
          }

          @Override
          public ConfigureManagementSettings setUploadProtocol(java.lang.String uploadProtocol) {
            return (ConfigureManagementSettings) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the `Registration` whose management settings are being updated,
           * in the format `projects/locations/registrations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String registration;

          /** Required. The name of the `Registration` whose management settings are being updated, in the format
         `projects/locations/registrations`.
           */
          public java.lang.String getRegistration() {
            return registration;
          }

          /**
           * Required. The name of the `Registration` whose management settings are being updated,
           * in the format `projects/locations/registrations`.
           */
          public ConfigureManagementSettings setRegistration(java.lang.String registration) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.registration = registration;
            return this;
          }

          @Override
          public ConfigureManagementSettings set(String parameterName, Object value) {
            return (ConfigureManagementSettings) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a `Registration` resource. This method only works on resources in one of the following
         * states: * `state` is `EXPORTED` with `expire_time` in the past * `state` is `REGISTRATION_FAILED`
         *
         * Create a request for the method "registrations.delete".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the `Registration` to delete, in the format
         *        `projects/locations/registrations`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Deletes a `Registration` resource. This method only works on resources in one of the following
           * states: * `state` is `EXPORTED` with `expire_time` in the past * `state` is
           * `REGISTRATION_FAILED`
           *
           * Create a request for the method "registrations.delete".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the `Registration` to delete, in the format
         *        `projects/locations/registrations`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudDomains.this, "DELETE", REST_PATH, null, com.google.api.services.domains.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the `Registration` to delete, in the format
           * `projects/locations/registrations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the `Registration` to delete, in the format
         `projects/locations/registrations`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the `Registration` to delete, in the format
           * `projects/locations/registrations`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Exports a `Registration` that you no longer want to use with Cloud Domains. You can continue to
         * use the domain in [Google Domains](https://domains.google/) until it expires. If the export is
         * successful: * The resource's `state` becomes `EXPORTED`, meaning that it is no longer managed by
         * Cloud Domains * Because individual users can own domains in Google Domains, the calling user
         * becomes the domain's sole owner. Permissions for the domain are subsequently managed in Google
         * Domains. * Without further action, the domain does not renew automatically. The new owner can set
         * up billing in Google Domains to renew the domain if needed.
         *
         * Create a request for the method "registrations.export".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link Export#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the `Registration` to export, in the format
         *        `projects/locations/registrations`.
         * @param content the {@link com.google.api.services.domains.v1beta1.model.ExportRegistrationRequest}
         * @return the request
         */
        public Export export(java.lang.String name, com.google.api.services.domains.v1beta1.model.ExportRegistrationRequest content) throws java.io.IOException {
          Export result = new Export(name, content);
          initialize(result);
          return result;
        }

        public class Export extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}:export";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Exports a `Registration` that you no longer want to use with Cloud Domains. You can continue to
           * use the domain in [Google Domains](https://domains.google/) until it expires. If the export is
           * successful: * The resource's `state` becomes `EXPORTED`, meaning that it is no longer managed
           * by Cloud Domains * Because individual users can own domains in Google Domains, the calling user
           * becomes the domain's sole owner. Permissions for the domain are subsequently managed in Google
           * Domains. * Without further action, the domain does not renew automatically. The new owner can
           * set up billing in Google Domains to renew the domain if needed.
           *
           * Create a request for the method "registrations.export".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link Export#execute()} method to invoke the remote operation. <p> {@link
           * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the `Registration` to export, in the format
         *        `projects/locations/registrations`.
           * @param content the {@link com.google.api.services.domains.v1beta1.model.ExportRegistrationRequest}
           * @since 1.13
           */
          protected Export(java.lang.String name, com.google.api.services.domains.v1beta1.model.ExportRegistrationRequest content) {
            super(CloudDomains.this, "POST", REST_PATH, content, com.google.api.services.domains.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public Export set$Xgafv(java.lang.String $Xgafv) {
            return (Export) super.set$Xgafv($Xgafv);
          }

          @Override
          public Export setAccessToken(java.lang.String accessToken) {
            return (Export) super.setAccessToken(accessToken);
          }

          @Override
          public Export setAlt(java.lang.String alt) {
            return (Export) super.setAlt(alt);
          }

          @Override
          public Export setCallback(java.lang.String callback) {
            return (Export) super.setCallback(callback);
          }

          @Override
          public Export setFields(java.lang.String fields) {
            return (Export) super.setFields(fields);
          }

          @Override
          public Export setKey(java.lang.String key) {
            return (Export) super.setKey(key);
          }

          @Override
          public Export setOauthToken(java.lang.String oauthToken) {
            return (Export) super.setOauthToken(oauthToken);
          }

          @Override
          public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Export) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Export setQuotaUser(java.lang.String quotaUser) {
            return (Export) super.setQuotaUser(quotaUser);
          }

          @Override
          public Export setUploadType(java.lang.String uploadType) {
            return (Export) super.setUploadType(uploadType);
          }

          @Override
          public Export setUploadProtocol(java.lang.String uploadProtocol) {
            return (Export) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the `Registration` to export, in the format
           * `projects/locations/registrations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the `Registration` to export, in the format
         `projects/locations/registrations`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the `Registration` to export, in the format
           * `projects/locations/registrations`.
           */
          public Export setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Export set(String parameterName, Object value) {
            return (Export) super.set(parameterName, value);
          }
        }
        /**
         * Gets the details of a `Registration` resource.
         *
         * Create a request for the method "registrations.get".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the `Registration` to get, in the format `projects/locations/registrations`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Registration> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Gets the details of a `Registration` resource.
           *
           * Create a request for the method "registrations.get".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the `Registration` to get, in the format `projects/locations/registrations`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.Registration.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the `Registration` to get, in the format
           * `projects/locations/registrations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the `Registration` to get, in the format `projects/locations/registrations`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the `Registration` to get, in the format
           * `projects/locations/registrations`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "registrations.getIamPolicy".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         *        the appropriate value for this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Policy> {

          private static final String REST_PATH = "v1beta1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "registrations.getIamPolicy".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         *        the appropriate value for this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The policy format version to be returned. Valid values are 0, 1, and 3.
           * Requests specifying an invalid value will be rejected. Requests for policies with any
           * conditional bindings must specify version 3. Policies without any conditional bindings
           * may specify any valid value or leave the field unset. To learn which resources support
           * conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests
         specifying an invalid value will be rejected. Requests for policies with any conditional bindings
         must specify version 3. Policies without any conditional bindings may specify any valid value or
         leave the field unset. To learn which resources support conditions in their IAM policies, see the
         [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The policy format version to be returned. Valid values are 0, 1, and 3.
           * Requests specifying an invalid value will be rejected. Requests for policies with any
           * conditional bindings must specify version 3. Policies without any conditional bindings
           * may specify any valid value or leave the field unset. To learn which resources support
           * conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists the `Registration` resources in a project.
         *
         * Create a request for the method "registrations.list".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project and location from which to list `Registration`s, specified in the format
         *        `projects/locations`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.ListRegistrationsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/registrations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the `Registration` resources in a project.
           *
           * Create a request for the method "registrations.list".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project and location from which to list `Registration`s, specified in the format
         *        `projects/locations`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.ListRegistrationsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project and location from which to list `Registration`s, specified in the
           * format `projects/locations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project and location from which to list `Registration`s, specified in the format
         `projects/locations`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project and location from which to list `Registration`s, specified in the
           * format `projects/locations`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Filter expression to restrict the `Registration`s returned. The expression must specify
           * the field name, a comparison operator, and the value that you want to use for
           * filtering. The value must be a string, a number, a boolean, or an enum value. The
           * comparison operator should be one of =, !=, >, <, >=, <=, or : for prefix or wildcard
           * matches. For example, to filter to a specific domain name, use an expression like
           * `domainName="example.com"`. You can also check for the existence of a field; for
           * example, to find domains using custom DNS settings, use an expression like
           * `dnsSettings.customDns:*`. You can also create compound filters by combining
           * expressions with the `AND` and `OR` operators. For example, to find domains that are
           * suspended or have specific issues flagged, use an expression like `(state=SUSPENDED) OR
           * (issue:*)`.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter expression to restrict the `Registration`s returned. The expression must specify the field
         name, a comparison operator, and the value that you want to use for filtering. The value must be a
         string, a number, a boolean, or an enum value. The comparison operator should be one of =, !=, >,
         <, >=, <=, or : for prefix or wildcard matches. For example, to filter to a specific domain name,
         use an expression like `domainName="example.com"`. You can also check for the existence of a field;
         for example, to find domains using custom DNS settings, use an expression like
         `dnsSettings.customDns:*`. You can also create compound filters by combining expressions with the
         `AND` and `OR` operators. For example, to find domains that are suspended or have specific issues
         flagged, use an expression like `(state=SUSPENDED) OR (issue:*)`.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Filter expression to restrict the `Registration`s returned. The expression must specify
           * the field name, a comparison operator, and the value that you want to use for
           * filtering. The value must be a string, a number, a boolean, or an enum value. The
           * comparison operator should be one of =, !=, >, <, >=, <=, or : for prefix or wildcard
           * matches. For example, to filter to a specific domain name, use an expression like
           * `domainName="example.com"`. You can also check for the existence of a field; for
           * example, to find domains using custom DNS settings, use an expression like
           * `dnsSettings.customDns:*`. You can also create compound filters by combining
           * expressions with the `AND` and `OR` operators. For example, to find domains that are
           * suspended or have specific issues flagged, use an expression like `(state=SUSPENDED) OR
           * (issue:*)`.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Maximum number of results to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of results to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Maximum number of results to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * When set to the `next_page_token` from a prior response, provides the next page of
           * results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** When set to the `next_page_token` from a prior response, provides the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * When set to the `next_page_token` from a prior response, provides the next page of
           * results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates select fields of a `Registration` resource, notably `labels`. To update other fields, use
         * the appropriate custom update method: * To update management settings, see
         * `ConfigureManagementSettings` * To update DNS configuration, see `ConfigureDnsSettings` * To
         * update contact information, see `ConfigureContactSettings`
         *
         * Create a request for the method "registrations.patch".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Name of the `Registration` resource, in the format `projects/locations/registrations/`.
         * @param content the {@link com.google.api.services.domains.v1beta1.model.Registration}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.domains.v1beta1.model.Registration content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Updates select fields of a `Registration` resource, notably `labels`. To update other fields,
           * use the appropriate custom update method: * To update management settings, see
           * `ConfigureManagementSettings` * To update DNS configuration, see `ConfigureDnsSettings` * To
           * update contact information, see `ConfigureContactSettings`
           *
           * Create a request for the method "registrations.patch".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Name of the `Registration` resource, in the format `projects/locations/registrations/`.
           * @param content the {@link com.google.api.services.domains.v1beta1.model.Registration}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.domains.v1beta1.model.Registration content) {
            super(CloudDomains.this, "PATCH", REST_PATH, content, com.google.api.services.domains.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Name of the `Registration` resource, in the format
           * `projects/locations/registrations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Name of the `Registration` resource, in the format
         `projects/locations/registrations/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Name of the `Registration` resource, in the format
           * `projects/locations/registrations/`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The field mask describing which fields to update as a comma-separated list.
           * For example, if only the labels are being updated, the `update_mask` would be
           * `"labels"`.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The field mask describing which fields to update as a comma-separated list. For example,
         if only the labels are being updated, the `update_mask` would be `"labels"`.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The field mask describing which fields to update as a comma-separated list.
           * For example, if only the labels are being updated, the `update_mask` would be
           * `"labels"`.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Registers a new domain name and creates a corresponding `Registration` resource. Call
         * `RetrieveRegisterParameters` first to check availability of the domain name and determine
         * parameters like price that are needed to build a call to this method. A successful call creates a
         * `Registration` resource in state `REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2
         * minutes, indicating that the domain was successfully registered. If the resource ends up in state
         * `REGISTRATION_FAILED`, it indicates that the domain was not registered successfully, and you can
         * safely delete the resource and retry registration.
         *
         * Create a request for the method "registrations.register".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link Register#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource of the `Registration`. Must be in the format `projects/locations`.
         * @param content the {@link com.google.api.services.domains.v1beta1.model.RegisterDomainRequest}
         * @return the request
         */
        public Register register(java.lang.String parent, com.google.api.services.domains.v1beta1.model.RegisterDomainRequest content) throws java.io.IOException {
          Register result = new Register(parent, content);
          initialize(result);
          return result;
        }

        public class Register extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+parent}/registrations:register";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Registers a new domain name and creates a corresponding `Registration` resource. Call
           * `RetrieveRegisterParameters` first to check availability of the domain name and determine
           * parameters like price that are needed to build a call to this method. A successful call creates
           * a `Registration` resource in state `REGISTRATION_PENDING`, which resolves to `ACTIVE` within
           * 1-2 minutes, indicating that the domain was successfully registered. If the resource ends up in
           * state `REGISTRATION_FAILED`, it indicates that the domain was not registered successfully, and
           * you can safely delete the resource and retry registration.
           *
           * Create a request for the method "registrations.register".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link Register#execute()} method to invoke the remote operation. <p>
           * {@link
           * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource of the `Registration`. Must be in the format `projects/locations`.
           * @param content the {@link com.google.api.services.domains.v1beta1.model.RegisterDomainRequest}
           * @since 1.13
           */
          protected Register(java.lang.String parent, com.google.api.services.domains.v1beta1.model.RegisterDomainRequest content) {
            super(CloudDomains.this, "POST", REST_PATH, content, com.google.api.services.domains.v1beta1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Register set$Xgafv(java.lang.String $Xgafv) {
            return (Register) super.set$Xgafv($Xgafv);
          }

          @Override
          public Register setAccessToken(java.lang.String accessToken) {
            return (Register) super.setAccessToken(accessToken);
          }

          @Override
          public Register setAlt(java.lang.String alt) {
            return (Register) super.setAlt(alt);
          }

          @Override
          public Register setCallback(java.lang.String callback) {
            return (Register) super.setCallback(callback);
          }

          @Override
          public Register setFields(java.lang.String fields) {
            return (Register) super.setFields(fields);
          }

          @Override
          public Register setKey(java.lang.String key) {
            return (Register) super.setKey(key);
          }

          @Override
          public Register setOauthToken(java.lang.String oauthToken) {
            return (Register) super.setOauthToken(oauthToken);
          }

          @Override
          public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Register) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Register setQuotaUser(java.lang.String quotaUser) {
            return (Register) super.setQuotaUser(quotaUser);
          }

          @Override
          public Register setUploadType(java.lang.String uploadType) {
            return (Register) super.setUploadType(uploadType);
          }

          @Override
          public Register setUploadProtocol(java.lang.String uploadProtocol) {
            return (Register) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource of the `Registration`. Must be in the format
           * `projects/locations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource of the `Registration`. Must be in the format `projects/locations`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource of the `Registration`. Must be in the format
           * `projects/locations`.
           */
          public Register setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Register set(String parameterName, Object value) {
            return (Register) super.set(parameterName, value);
          }
        }
        /**
         * Resets the authorization code of the `Registration` to a new random string. You can call this
         * method only after 60 days have elapsed since the initial domain registration.
         *
         * Create a request for the method "registrations.resetAuthorizationCode".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link ResetAuthorizationCode#execute()} method to invoke the remote
         * operation.
         *
         * @param registration Required. The name of the `Registration` whose authorization code is being reset, in the format
         *        `projects/locations/registrations`.
         * @param content the {@link com.google.api.services.domains.v1beta1.model.ResetAuthorizationCodeRequest}
         * @return the request
         */
        public ResetAuthorizationCode resetAuthorizationCode(java.lang.String registration, com.google.api.services.domains.v1beta1.model.ResetAuthorizationCodeRequest content) throws java.io.IOException {
          ResetAuthorizationCode result = new ResetAuthorizationCode(registration, content);
          initialize(result);
          return result;
        }

        public class ResetAuthorizationCode extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.AuthorizationCode> {

          private static final String REST_PATH = "v1beta1/{+registration}:resetAuthorizationCode";

          private final java.util.regex.Pattern REGISTRATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Resets the authorization code of the `Registration` to a new random string. You can call this
           * method only after 60 days have elapsed since the initial domain registration.
           *
           * Create a request for the method "registrations.resetAuthorizationCode".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link ResetAuthorizationCode#execute()} method to invoke the remote
           * operation. <p> {@link ResetAuthorizationCode#initialize(com.google.api.client.googleapis.servic
           * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param registration Required. The name of the `Registration` whose authorization code is being reset, in the format
         *        `projects/locations/registrations`.
           * @param content the {@link com.google.api.services.domains.v1beta1.model.ResetAuthorizationCodeRequest}
           * @since 1.13
           */
          protected ResetAuthorizationCode(java.lang.String registration, com.google.api.services.domains.v1beta1.model.ResetAuthorizationCodeRequest content) {
            super(CloudDomains.this, "POST", REST_PATH, content, com.google.api.services.domains.v1beta1.model.AuthorizationCode.class);
            this.registration = com.google.api.client.util.Preconditions.checkNotNull(registration, "Required parameter registration must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public ResetAuthorizationCode set$Xgafv(java.lang.String $Xgafv) {
            return (ResetAuthorizationCode) super.set$Xgafv($Xgafv);
          }

          @Override
          public ResetAuthorizationCode setAccessToken(java.lang.String accessToken) {
            return (ResetAuthorizationCode) super.setAccessToken(accessToken);
          }

          @Override
          public ResetAuthorizationCode setAlt(java.lang.String alt) {
            return (ResetAuthorizationCode) super.setAlt(alt);
          }

          @Override
          public ResetAuthorizationCode setCallback(java.lang.String callback) {
            return (ResetAuthorizationCode) super.setCallback(callback);
          }

          @Override
          public ResetAuthorizationCode setFields(java.lang.String fields) {
            return (ResetAuthorizationCode) super.setFields(fields);
          }

          @Override
          public ResetAuthorizationCode setKey(java.lang.String key) {
            return (ResetAuthorizationCode) super.setKey(key);
          }

          @Override
          public ResetAuthorizationCode setOauthToken(java.lang.String oauthToken) {
            return (ResetAuthorizationCode) super.setOauthToken(oauthToken);
          }

          @Override
          public ResetAuthorizationCode setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ResetAuthorizationCode) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ResetAuthorizationCode setQuotaUser(java.lang.String quotaUser) {
            return (ResetAuthorizationCode) super.setQuotaUser(quotaUser);
          }

          @Override
          public ResetAuthorizationCode setUploadType(java.lang.String uploadType) {
            return (ResetAuthorizationCode) super.setUploadType(uploadType);
          }

          @Override
          public ResetAuthorizationCode setUploadProtocol(java.lang.String uploadProtocol) {
            return (ResetAuthorizationCode) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the `Registration` whose authorization code is being reset, in
           * the format `projects/locations/registrations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String registration;

          /** Required. The name of the `Registration` whose authorization code is being reset, in the format
         `projects/locations/registrations`.
           */
          public java.lang.String getRegistration() {
            return registration;
          }

          /**
           * Required. The name of the `Registration` whose authorization code is being reset, in
           * the format `projects/locations/registrations`.
           */
          public ResetAuthorizationCode setRegistration(java.lang.String registration) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.registration = registration;
            return this;
          }

          @Override
          public ResetAuthorizationCode set(String parameterName, Object value) {
            return (ResetAuthorizationCode) super.set(parameterName, value);
          }
        }
        /**
         * Gets the authorization code of the `Registration` for the purpose of transferring the domain to
         * another registrar. You can call this method only after 60 days have elapsed since the initial
         * domain registration.
         *
         * Create a request for the method "registrations.retrieveAuthorizationCode".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link RetrieveAuthorizationCode#execute()} method to invoke the remote
         * operation.
         *
         * @param registration Required. The name of the `Registration` whose authorization code is being retrieved, in the format
         *        `projects/locations/registrations`.
         * @return the request
         */
        public RetrieveAuthorizationCode retrieveAuthorizationCode(java.lang.String registration) throws java.io.IOException {
          RetrieveAuthorizationCode result = new RetrieveAuthorizationCode(registration);
          initialize(result);
          return result;
        }

        public class RetrieveAuthorizationCode extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.AuthorizationCode> {

          private static final String REST_PATH = "v1beta1/{+registration}:retrieveAuthorizationCode";

          private final java.util.regex.Pattern REGISTRATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Gets the authorization code of the `Registration` for the purpose of transferring the domain to
           * another registrar. You can call this method only after 60 days have elapsed since the initial
           * domain registration.
           *
           * Create a request for the method "registrations.retrieveAuthorizationCode".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link RetrieveAuthorizationCode#execute()} method to invoke the remote
           * operation. <p> {@link RetrieveAuthorizationCode#initialize(com.google.api.client.googleapis.ser
           * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param registration Required. The name of the `Registration` whose authorization code is being retrieved, in the format
         *        `projects/locations/registrations`.
           * @since 1.13
           */
          protected RetrieveAuthorizationCode(java.lang.String registration) {
            super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.AuthorizationCode.class);
            this.registration = com.google.api.client.util.Preconditions.checkNotNull(registration, "Required parameter registration must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public RetrieveAuthorizationCode set$Xgafv(java.lang.String $Xgafv) {
            return (RetrieveAuthorizationCode) super.set$Xgafv($Xgafv);
          }

          @Override
          public RetrieveAuthorizationCode setAccessToken(java.lang.String accessToken) {
            return (RetrieveAuthorizationCode) super.setAccessToken(accessToken);
          }

          @Override
          public RetrieveAuthorizationCode setAlt(java.lang.String alt) {
            return (RetrieveAuthorizationCode) super.setAlt(alt);
          }

          @Override
          public RetrieveAuthorizationCode setCallback(java.lang.String callback) {
            return (RetrieveAuthorizationCode) super.setCallback(callback);
          }

          @Override
          public RetrieveAuthorizationCode setFields(java.lang.String fields) {
            return (RetrieveAuthorizationCode) super.setFields(fields);
          }

          @Override
          public RetrieveAuthorizationCode setKey(java.lang.String key) {
            return (RetrieveAuthorizationCode) super.setKey(key);
          }

          @Override
          public RetrieveAuthorizationCode setOauthToken(java.lang.String oauthToken) {
            return (RetrieveAuthorizationCode) super.setOauthToken(oauthToken);
          }

          @Override
          public RetrieveAuthorizationCode setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (RetrieveAuthorizationCode) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public RetrieveAuthorizationCode setQuotaUser(java.lang.String quotaUser) {
            return (RetrieveAuthorizationCode) super.setQuotaUser(quotaUser);
          }

          @Override
          public RetrieveAuthorizationCode setUploadType(java.lang.String uploadType) {
            return (RetrieveAuthorizationCode) super.setUploadType(uploadType);
          }

          @Override
          public RetrieveAuthorizationCode setUploadProtocol(java.lang.String uploadProtocol) {
            return (RetrieveAuthorizationCode) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the `Registration` whose authorization code is being retrieved,
           * in the format `projects/locations/registrations`.
           */
          @com.google.api.client.util.Key
          private java.lang.String registration;

          /** Required. The name of the `Registration` whose authorization code is being retrieved, in the format
         `projects/locations/registrations`.
           */
          public java.lang.String getRegistration() {
            return registration;
          }

          /**
           * Required. The name of the `Registration` whose authorization code is being retrieved,
           * in the format `projects/locations/registrations`.
           */
          public RetrieveAuthorizationCode setRegistration(java.lang.String registration) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGISTRATION_PATTERN.matcher(registration).matches(),
                  "Parameter registration must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.registration = registration;
            return this;
          }

          @Override
          public RetrieveAuthorizationCode set(String parameterName, Object value) {
            return (RetrieveAuthorizationCode) super.set(parameterName, value);
          }
        }
        /**
         * Gets parameters needed to register a new domain name, including price and up-to-date
         * availability. Use the returned values to call `RegisterDomain`.
         *
         * Create a request for the method "registrations.retrieveRegisterParameters".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link RetrieveRegisterParameters#execute()} method to invoke the remote
         * operation.
         *
         * @param location Required. The location. Must be in the format `projects/locations`.
         * @return the request
         */
        public RetrieveRegisterParameters retrieveRegisterParameters(java.lang.String location) throws java.io.IOException {
          RetrieveRegisterParameters result = new RetrieveRegisterParameters(location);
          initialize(result);
          return result;
        }

        public class RetrieveRegisterParameters extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.RetrieveRegisterParametersResponse> {

          private static final String REST_PATH = "v1beta1/{+location}/registrations:retrieveRegisterParameters";

          private final java.util.regex.Pattern LOCATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Gets parameters needed to register a new domain name, including price and up-to-date
           * availability. Use the returned values to call `RegisterDomain`.
           *
           * Create a request for the method "registrations.retrieveRegisterParameters".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link RetrieveRegisterParameters#execute()} method to invoke the remote
           * operation. <p> {@link RetrieveRegisterParameters#initialize(com.google.api.client.googleapis.se
           * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param location Required. The location. Must be in the format `projects/locations`.
           * @since 1.13
           */
          protected RetrieveRegisterParameters(java.lang.String location) {
            super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.RetrieveRegisterParametersResponse.class);
            this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public RetrieveRegisterParameters set$Xgafv(java.lang.String $Xgafv) {
            return (RetrieveRegisterParameters) super.set$Xgafv($Xgafv);
          }

          @Override
          public RetrieveRegisterParameters setAccessToken(java.lang.String accessToken) {
            return (RetrieveRegisterParameters) super.setAccessToken(accessToken);
          }

          @Override
          public RetrieveRegisterParameters setAlt(java.lang.String alt) {
            return (RetrieveRegisterParameters) super.setAlt(alt);
          }

          @Override
          public RetrieveRegisterParameters setCallback(java.lang.String callback) {
            return (RetrieveRegisterParameters) super.setCallback(callback);
          }

          @Override
          public RetrieveRegisterParameters setFields(java.lang.String fields) {
            return (RetrieveRegisterParameters) super.setFields(fields);
          }

          @Override
          public RetrieveRegisterParameters setKey(java.lang.String key) {
            return (RetrieveRegisterParameters) super.setKey(key);
          }

          @Override
          public RetrieveRegisterParameters setOauthToken(java.lang.String oauthToken) {
            return (RetrieveRegisterParameters) super.setOauthToken(oauthToken);
          }

          @Override
          public RetrieveRegisterParameters setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (RetrieveRegisterParameters) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public RetrieveRegisterParameters setQuotaUser(java.lang.String quotaUser) {
            return (RetrieveRegisterParameters) super.setQuotaUser(quotaUser);
          }

          @Override
          public RetrieveRegisterParameters setUploadType(java.lang.String uploadType) {
            return (RetrieveRegisterParameters) super.setUploadType(uploadType);
          }

          @Override
          public RetrieveRegisterParameters setUploadProtocol(java.lang.String uploadProtocol) {
            return (RetrieveRegisterParameters) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The location. Must be in the format `projects/locations`. */
          @com.google.api.client.util.Key
          private java.lang.String location;

          /** Required. The location. Must be in the format `projects/locations`.
           */
          public java.lang.String getLocation() {
            return location;
          }

          /** Required. The location. Must be in the format `projects/locations`. */
          public RetrieveRegisterParameters setLocation(java.lang.String location) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.location = location;
            return this;
          }

          /**
           * Required. The domain name. Unicode domain names must be expressed in Punycode format.
           */
          @com.google.api.client.util.Key
          private java.lang.String domainName;

          /** Required. The domain name. Unicode domain names must be expressed in Punycode format.
           */
          public java.lang.String getDomainName() {
            return domainName;
          }

          /**
           * Required. The domain name. Unicode domain names must be expressed in Punycode format.
           */
          public RetrieveRegisterParameters setDomainName(java.lang.String domainName) {
            this.domainName = domainName;
            return this;
          }

          @Override
          public RetrieveRegisterParameters set(String parameterName, Object value) {
            return (RetrieveRegisterParameters) super.set(parameterName, value);
          }
        }
        /**
         * Searches for available domain names similar to the provided query. Availability results from this
         * method are approximate; call `RetrieveRegisterParameters` on a domain before registering to
         * confirm availability.
         *
         * Create a request for the method "registrations.searchDomains".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link SearchDomains#execute()} method to invoke the remote operation.
         *
         * @param location Required. The location. Must be in the format `projects/locations`.
         * @return the request
         */
        public SearchDomains searchDomains(java.lang.String location) throws java.io.IOException {
          SearchDomains result = new SearchDomains(location);
          initialize(result);
          return result;
        }

        public class SearchDomains extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.SearchDomainsResponse> {

          private static final String REST_PATH = "v1beta1/{+location}/registrations:searchDomains";

          private final java.util.regex.Pattern LOCATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Searches for available domain names similar to the provided query. Availability results from
           * this method are approximate; call `RetrieveRegisterParameters` on a domain before registering
           * to confirm availability.
           *
           * Create a request for the method "registrations.searchDomains".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link SearchDomains#execute()} method to invoke the remote operation. <p>
           * {@link SearchDomains#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
           * equest)} must be called to initialize this instance immediately after invoking the constructor.
           * </p>
           *
           * @param location Required. The location. Must be in the format `projects/locations`.
           * @since 1.13
           */
          protected SearchDomains(java.lang.String location) {
            super(CloudDomains.this, "GET", REST_PATH, null, com.google.api.services.domains.v1beta1.model.SearchDomainsResponse.class);
            this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public SearchDomains set$Xgafv(java.lang.String $Xgafv) {
            return (SearchDomains) super.set$Xgafv($Xgafv);
          }

          @Override
          public SearchDomains setAccessToken(java.lang.String accessToken) {
            return (SearchDomains) super.setAccessToken(accessToken);
          }

          @Override
          public SearchDomains setAlt(java.lang.String alt) {
            return (SearchDomains) super.setAlt(alt);
          }

          @Override
          public SearchDomains setCallback(java.lang.String callback) {
            return (SearchDomains) super.setCallback(callback);
          }

          @Override
          public SearchDomains setFields(java.lang.String fields) {
            return (SearchDomains) super.setFields(fields);
          }

          @Override
          public SearchDomains setKey(java.lang.String key) {
            return (SearchDomains) super.setKey(key);
          }

          @Override
          public SearchDomains setOauthToken(java.lang.String oauthToken) {
            return (SearchDomains) super.setOauthToken(oauthToken);
          }

          @Override
          public SearchDomains setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SearchDomains) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SearchDomains setQuotaUser(java.lang.String quotaUser) {
            return (SearchDomains) super.setQuotaUser(quotaUser);
          }

          @Override
          public SearchDomains setUploadType(java.lang.String uploadType) {
            return (SearchDomains) super.setUploadType(uploadType);
          }

          @Override
          public SearchDomains setUploadProtocol(java.lang.String uploadProtocol) {
            return (SearchDomains) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The location. Must be in the format `projects/locations`. */
          @com.google.api.client.util.Key
          private java.lang.String location;

          /** Required. The location. Must be in the format `projects/locations`.
           */
          public java.lang.String getLocation() {
            return location;
          }

          /** Required. The location. Must be in the format `projects/locations`. */
          public SearchDomains setLocation(java.lang.String location) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.location = location;
            return this;
          }

          /** Required. String used to search for available domain names. */
          @com.google.api.client.util.Key
          private java.lang.String query;

          /** Required. String used to search for available domain names.
           */
          public java.lang.String getQuery() {
            return query;
          }

          /** Required. String used to search for available domain names. */
          public SearchDomains setQuery(java.lang.String query) {
            this.query = query;
            return this;
          }

          @Override
          public SearchDomains set(String parameterName, Object value) {
            return (SearchDomains) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "registrations.setIamPolicy".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.domains.v1beta1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.domains.v1beta1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.Policy> {

          private static final String REST_PATH = "v1beta1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "registrations.setIamPolicy".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation. <p>
           * {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.domains.v1beta1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.domains.v1beta1.model.SetIamPolicyRequest content) {
            super(CloudDomains.this, "POST", REST_PATH, content, com.google.api.services.domains.v1beta1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "registrations.testIamPermissions".
         *
         * This request holds the parameters needed by the domains server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
         *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.domains.v1beta1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.domains.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends CloudDomainsRequest<com.google.api.services.domains.v1beta1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "registrations.testIamPermissions".
           *
           * This request holds the parameters needed by the the domains server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
         *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.domains.v1beta1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.domains.v1beta1.model.TestIamPermissionsRequest content) {
            super(CloudDomains.this, "POST", REST_PATH, content, com.google.api.services.domains.v1beta1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See the operation
         documentation for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/registrations/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link CloudDomains}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudDomains}. */
    @Override
    public CloudDomains build() {
      return new CloudDomains(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudDomainsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudDomainsRequestInitializer(
        CloudDomainsRequestInitializer clouddomainsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(clouddomainsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
