/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.metastore.v1alpha.model;

/**
 * The details of a migration execution resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dataproc Metastore API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MigrationExecution extends com.google.api.client.json.GenericJson {

  /**
   * Configuration information specific to migrating from self-managed hive metastore on GCP using
   * Cloud SQL as the backend database to DPMS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudSQLMigrationConfig cloudSqlMigrationConfig;

  /**
   * Output only. The time when the migration execution was started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The time when the migration execution finished.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * Output only. The relative resource name of the migration execution, in the following form: proj
   * ects/{project_number}/locations/{location_id}/services/{service_id}/migrationExecutions/{migrat
   * ion_execution_id}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The current phase of the migration execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String phase;

  /**
   * Output only. The current state of the migration execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Additional information about the current state of the migration execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stateMessage;

  /**
   * Configuration information specific to migrating from self-managed hive metastore on GCP using
   * Cloud SQL as the backend database to DPMS.
   * @return value or {@code null} for none
   */
  public CloudSQLMigrationConfig getCloudSqlMigrationConfig() {
    return cloudSqlMigrationConfig;
  }

  /**
   * Configuration information specific to migrating from self-managed hive metastore on GCP using
   * Cloud SQL as the backend database to DPMS.
   * @param cloudSqlMigrationConfig cloudSqlMigrationConfig or {@code null} for none
   */
  public MigrationExecution setCloudSqlMigrationConfig(CloudSQLMigrationConfig cloudSqlMigrationConfig) {
    this.cloudSqlMigrationConfig = cloudSqlMigrationConfig;
    return this;
  }

  /**
   * Output only. The time when the migration execution was started.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the migration execution was started.
   * @param createTime createTime or {@code null} for none
   */
  public MigrationExecution setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The time when the migration execution finished.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * Output only. The time when the migration execution finished.
   * @param endTime endTime or {@code null} for none
   */
  public MigrationExecution setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Output only. The relative resource name of the migration execution, in the following form: proj
   * ects/{project_number}/locations/{location_id}/services/{service_id}/migrationExecutions/{migrat
   * ion_execution_id}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The relative resource name of the migration execution, in the following form: proj
   * ects/{project_number}/locations/{location_id}/services/{service_id}/migrationExecutions/{migrat
   * ion_execution_id}
   * @param name name or {@code null} for none
   */
  public MigrationExecution setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The current phase of the migration execution.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhase() {
    return phase;
  }

  /**
   * Output only. The current phase of the migration execution.
   * @param phase phase or {@code null} for none
   */
  public MigrationExecution setPhase(java.lang.String phase) {
    this.phase = phase;
    return this;
  }

  /**
   * Output only. The current state of the migration execution.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The current state of the migration execution.
   * @param state state or {@code null} for none
   */
  public MigrationExecution setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Additional information about the current state of the migration execution.
   * @return value or {@code null} for none
   */
  public java.lang.String getStateMessage() {
    return stateMessage;
  }

  /**
   * Output only. Additional information about the current state of the migration execution.
   * @param stateMessage stateMessage or {@code null} for none
   */
  public MigrationExecution setStateMessage(java.lang.String stateMessage) {
    this.stateMessage = stateMessage;
    return this;
  }

  @Override
  public MigrationExecution set(String fieldName, Object value) {
    return (MigrationExecution) super.set(fieldName, value);
  }

  @Override
  public MigrationExecution clone() {
    return (MigrationExecution) super.clone();
  }

}
