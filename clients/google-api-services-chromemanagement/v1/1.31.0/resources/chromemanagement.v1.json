{
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/chrome.management.reports.readonly": {
          "description": "See reports about devices and Chrome browsers managed within your organization"
        }
      }
    }
  },
  "rootUrl": "https://chromemanagement.googleapis.com/",
  "description": "The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "schemas": {
    "GoogleChromeManagementV1BrowserVersion": {
      "id": "GoogleChromeManagementV1BrowserVersion",
      "properties": {
        "deviceOsVersion": {
          "description": "Output only. Version of the system-specified operating system.",
          "readOnly": true,
          "type": "string"
        },
        "channel": {
          "description": "Output only. The release channel of the installed browser.",
          "enum": [
            "RELEASE_CHANNEL_UNSPECIFIED",
            "CANARY",
            "DEV",
            "BETA",
            "STABLE"
          ],
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "No release channel specified.",
            "Canary release channel.",
            "Dev release channel.",
            "Beta release channel.",
            "Stable release channel."
          ]
        },
        "system": {
          "enum": [
            "DEVICE_SYSTEM_UNSPECIFIED",
            "SYSTEM_OTHER",
            "SYSTEM_ANDROID",
            "SYSTEM_IOS",
            "SYSTEM_CROS",
            "SYSTEM_WINDOWS",
            "SYSTEM_MAC",
            "SYSTEM_LINUX"
          ],
          "readOnly": true,
          "description": "Output only. The device operating system.",
          "type": "string",
          "enumDescriptions": [
            "No operating system specified.",
            "Other operating system.",
            "Android operating system.",
            "Apple iOS operating system.",
            "Chrome OS operating system.",
            "Microsoft Windows operating system.",
            "Apple macOS operating system.",
            "Linux operating system."
          ]
        },
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full version of the installed browser."
        },
        "count": {
          "format": "int64",
          "type": "string",
          "description": "Output only. Count grouped by device_system and major version",
          "readOnly": true
        }
      },
      "description": "Describes a browser version and its install count.",
      "type": "object"
    },
    "GoogleChromeManagementV1FindInstalledAppDevicesResponse": {
      "description": "Response containing a list of devices with queried app installed.",
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "description": "A list of devices which have the app installed. Sorted in ascending alphabetical order on the Device.machine field.",
          "items": {
            "$ref": "GoogleChromeManagementV1Device"
          }
        },
        "nextPageToken": {
          "description": "Token to specify the next page in the list.",
          "type": "string"
        },
        "totalSize": {
          "format": "int32",
          "description": "Total number of devices matching request.",
          "type": "integer"
        }
      },
      "id": "GoogleChromeManagementV1FindInstalledAppDevicesResponse"
    },
    "GoogleChromeManagementV1CountInstalledAppsResponse": {
      "description": "Response containing details of queried installed apps.",
      "properties": {
        "installedApps": {
          "type": "array",
          "items": {
            "$ref": "GoogleChromeManagementV1InstalledApp"
          },
          "description": "List of installed apps matching request."
        },
        "totalSize": {
          "description": "Total number of installed apps matching request.",
          "type": "integer",
          "format": "int32"
        },
        "nextPageToken": {
          "description": "Token to specify next page in the list.",
          "type": "string"
        }
      },
      "id": "GoogleChromeManagementV1CountInstalledAppsResponse",
      "type": "object"
    },
    "GoogleChromeManagementV1CountChromeVersionsResponse": {
      "properties": {
        "browserVersions": {
          "items": {
            "$ref": "GoogleChromeManagementV1BrowserVersion"
          },
          "type": "array",
          "description": "List of all browser versions and their install counts."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to specify the next page in the list."
        },
        "totalSize": {
          "format": "int32",
          "type": "integer",
          "description": "Total number browser versions matching request."
        }
      },
      "type": "object",
      "id": "GoogleChromeManagementV1CountChromeVersionsResponse",
      "description": "Response containing requested browser versions details and counts."
    },
    "GoogleChromeManagementV1Device": {
      "description": "Describes a device reporting Chrome browser information.",
      "type": "object",
      "id": "GoogleChromeManagementV1Device",
      "properties": {
        "machine": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the machine within its local network."
        },
        "deviceId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The ID of the device that reported this Chrome browser information."
        }
      }
    },
    "GoogleChromeManagementV1InstalledApp": {
      "properties": {
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Description of the installed app."
        },
        "appType": {
          "description": "Output only. Type of the app.",
          "enumDescriptions": [
            "App type not specified.",
            "Chrome extension.",
            "Chrome app.",
            "Chrome theme.",
            "Chrome hosted app.",
            "ARC++ app."
          ],
          "enum": [
            "APP_TYPE_UNSPECIFIED",
            "EXTENSION",
            "APP",
            "THEME",
            "HOSTED_APP",
            "ANDROID_APP"
          ],
          "type": "string",
          "readOnly": true
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Permissions of the installed app."
        },
        "appId": {
          "description": "Output only. Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).",
          "type": "string",
          "readOnly": true
        },
        "appInstallType": {
          "readOnly": true,
          "enum": [
            "APP_INSTALL_TYPE_UNSPECIFIED",
            "MULTIPLE",
            "NORMAL",
            "ADMIN",
            "DEVELOPMENT",
            "SIDELOAD",
            "OTHER"
          ],
          "type": "string",
          "description": "Output only. How the app was installed.",
          "enumDescriptions": [
            "Application install type not specified.",
            "Multiple app install types.",
            "Normal app install type.",
            "Administrator app install type.",
            "Development app install type.",
            "Sideloaded app install type.",
            "Other app install type."
          ]
        },
        "appSource": {
          "description": "Output only. Source of the installed app.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "APP_SOURCE_UNSPECIFIED",
            "CHROME_WEBSTORE",
            "PLAY_STORE"
          ],
          "enumDescriptions": [
            "Application source not specified.",
            "Generally for extensions and Chrome apps.",
            "Play Store app."
          ]
        },
        "displayName": {
          "description": "Output only. Name of the installed app.",
          "readOnly": true,
          "type": "string"
        },
        "browserDeviceCount": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Count of browser devices with this app installed.",
          "type": "string"
        },
        "disabled": {
          "description": "Output only. Whether the app is disabled.",
          "type": "boolean",
          "readOnly": true
        },
        "osUserCount": {
          "format": "int64",
          "description": "Output only. Count of ChromeOS users with this app installed.",
          "type": "string",
          "readOnly": true
        },
        "homepageUri": {
          "description": "Output only. Homepage uri of the installed app.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Describes an installed app.",
      "id": "GoogleChromeManagementV1InstalledApp"
    }
  },
  "resources": {
    "customers": {
      "resources": {
        "reports": {
          "methods": {
            "findInstalledAppDevices": {
              "id": "chromemanagement.customers.reports.findInstalledAppDevices",
              "description": "Generate report of devices that have a specified app installed.",
              "parameterOrder": [
                "customer"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleChromeManagementV1FindInstalledAppDevicesResponse"
              },
              "path": "v1/{+customer}/reports:findInstalledAppDevices",
              "parameters": {
                "orgUnitId": {
                  "description": "The ID of the organizational unit.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "description": "Token to specify the next page in the list.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "location": "query"
                },
                "appId": {
                  "type": "string",
                  "description": "Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date"
                },
                "appType": {
                  "type": "string",
                  "description": "Type of the app.",
                  "location": "query",
                  "enum": [
                    "APP_TYPE_UNSPECIFIED",
                    "EXTENSION",
                    "APP",
                    "THEME",
                    "HOSTED_APP",
                    "ANDROID_APP"
                  ],
                  "enumDescriptions": [
                    "App type not specified.",
                    "Chrome extension.",
                    "Chrome app.",
                    "Chrome theme.",
                    "Chrome hosted app.",
                    "ARC++ app."
                  ]
                },
                "orderBy": {
                  "type": "string",
                  "description": "Field used to order results. Supported order by fields: * machine * device_id",
                  "location": "query"
                },
                "customer": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "required": true
                }
              },
              "flatPath": "v1/customers/{customersId}/reports:findInstalledAppDevices"
            },
            "countChromeVersions": {
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "parameterOrder": [
                "customer"
              ],
              "flatPath": "v1/customers/{customersId}/reports:countChromeVersions",
              "description": "Generate report of installed Chrome versions.",
              "id": "chromemanagement.customers.reports.countChromeVersions",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleChromeManagementV1CountChromeVersionsResponse"
              },
              "path": "v1/{+customer}/reports:countChromeVersions",
              "parameters": {
                "orgUnitId": {
                  "location": "query",
                  "type": "string",
                  "description": "The ID of the organizational unit."
                },
                "pageToken": {
                  "description": "Token to specify the next page in the list.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date",
                  "type": "string"
                },
                "customer": {
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "required": true,
                  "location": "path"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Maximum number of results to return. Maximum and default are 100."
                }
              }
            },
            "countInstalledApps": {
              "id": "chromemanagement.customers.reports.countInstalledApps",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleChromeManagementV1CountInstalledAppsResponse"
              },
              "description": "Generate report of app installations.",
              "flatPath": "v1/customers/{customersId}/reports:countInstalledApps",
              "scopes": [
                "https://www.googleapis.com/auth/chrome.management.reports.readonly"
              ],
              "parameters": {
                "orderBy": {
                  "type": "string",
                  "description": "Field used to order results. Supported order by fields: * app_name * app_type * install_type * number_of_permissions * total_install_count",
                  "location": "query"
                },
                "pageToken": {
                  "description": "Token to specify next page in the list.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Maximum number of results to return. Maximum and default are 100.",
                  "format": "int32"
                },
                "customer": {
                  "description": "Required. Customer id or \"my_customer\" to use the customer associated to the account making the request.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * app_name * app_type * install_type * number_of_permissions * total_install_count * latest_profile_active_date * permission_name"
                },
                "orgUnitId": {
                  "description": "The ID of the organizational unit.",
                  "type": "string",
                  "location": "query"
                }
              },
              "path": "v1/{+customer}/reports:countInstalledApps",
              "parameterOrder": [
                "customer"
              ]
            }
          }
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "id": "chromemanagement:v1",
  "version_module": true,
  "revision": "20210319",
  "protocol": "rest",
  "canonicalName": "Chrome Management",
  "title": "Chrome Management API",
  "baseUrl": "https://chromemanagement.googleapis.com/",
  "documentationLink": "http://developers.google.com/chrome/management/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "mtlsRootUrl": "https://chromemanagement.mtls.googleapis.com/",
  "version": "v1",
  "name": "chromemanagement",
  "parameters": {
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    }
  }
}
