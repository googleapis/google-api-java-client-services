/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * LINT.IfChanged Identifier for an application provider. NOTE: AppProviderId contains surface-
 * specific info, such as the Android package name of the application. This was necessary for
 * supporting current use cases that rely on surface-specific info in feature code. Eventually we
 * want to deprecate AppProviderId and fetch surface-specific info in some other way (e.g. in a
 * surface-translation layer). But until then, we may continue extending AppProviderId with other
 * surface-specific info.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantContextAppProviderId extends com.google.api.client.json.GenericJson {

  /**
   * The activity class name. E.g. com.google.android.gm.ui.MailActivityGmail
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String activityClassName;

  /**
   * Unique package name that identifies an Android app of the provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String androidPackageName;

  /**
   * Version code of the application.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer versionCode;

  /**
   * The activity class name. E.g. com.google.android.gm.ui.MailActivityGmail
   * @return value or {@code null} for none
   */
  public java.lang.String getActivityClassName() {
    return activityClassName;
  }

  /**
   * The activity class name. E.g. com.google.android.gm.ui.MailActivityGmail
   * @param activityClassName activityClassName or {@code null} for none
   */
  public AssistantContextAppProviderId setActivityClassName(java.lang.String activityClassName) {
    this.activityClassName = activityClassName;
    return this;
  }

  /**
   * Unique package name that identifies an Android app of the provider.
   * @return value or {@code null} for none
   */
  public java.lang.String getAndroidPackageName() {
    return androidPackageName;
  }

  /**
   * Unique package name that identifies an Android app of the provider.
   * @param androidPackageName androidPackageName or {@code null} for none
   */
  public AssistantContextAppProviderId setAndroidPackageName(java.lang.String androidPackageName) {
    this.androidPackageName = androidPackageName;
    return this;
  }

  /**
   * Version code of the application.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getVersionCode() {
    return versionCode;
  }

  /**
   * Version code of the application.
   * @param versionCode versionCode or {@code null} for none
   */
  public AssistantContextAppProviderId setVersionCode(java.lang.Integer versionCode) {
    this.versionCode = versionCode;
    return this;
  }

  @Override
  public AssistantContextAppProviderId set(String fieldName, Object value) {
    return (AssistantContextAppProviderId) super.set(fieldName, value);
  }

  @Override
  public AssistantContextAppProviderId clone() {
    return (AssistantContextAppProviderId) super.clone();
  }

}
