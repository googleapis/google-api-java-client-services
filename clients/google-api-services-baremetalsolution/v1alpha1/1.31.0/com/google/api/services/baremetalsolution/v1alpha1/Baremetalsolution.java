/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v1alpha1;

/**
 * Service definition for Baremetalsolution (v1alpha1).
 *
 * <p>
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/bare-metal" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BaremetalsolutionRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Baremetalsolution extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.32.1 of the Bare Metal Solution API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://baremetalsolution.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://baremetalsolution.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Baremetalsolution(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Baremetalsolution(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
   *   {@code Baremetalsolution.Projects.List request = baremetalsolution.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
     *   {@code Baremetalsolution.Locations.List request = baremetalsolution.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Submit a provisiong configuration for a given project.
       *
       * Create a request for the method "locations.submitProvisioningConfig".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link SubmitProvisioningConfig#execute()} method to invoke the
       * remote operation.
       *
       * @param project Required. The target project of the provisioning request.
       * @param location Required. The target location of the provisioning request.
       * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SubmitProvisioningConfigRequest}
       * @return the request
       */
      public SubmitProvisioningConfig submitProvisioningConfig(java.lang.String project, java.lang.String location, com.google.api.services.baremetalsolution.v1alpha1.model.SubmitProvisioningConfigRequest content) throws java.io.IOException {
        SubmitProvisioningConfig result = new SubmitProvisioningConfig(project, location, content);
        initialize(result);
        return result;
      }

      public class SubmitProvisioningConfig extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.ProvisioningConfig> {

        private static final String REST_PATH = "v1alpha1/{+project}/{+location}:submitProvisioningConfig";

        private final java.util.regex.Pattern PROJECT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        private final java.util.regex.Pattern LOCATION_PATTERN =
            java.util.regex.Pattern.compile("^locations/[^/]+$");

        /**
         * Submit a provisiong configuration for a given project.
         *
         * Create a request for the method "locations.submitProvisioningConfig".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link SubmitProvisioningConfig#execute()} method to invoke
         * the remote operation. <p> {@link SubmitProvisioningConfig#initialize(com.google.api.client.goog
         * leapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param project Required. The target project of the provisioning request.
         * @param location Required. The target location of the provisioning request.
         * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SubmitProvisioningConfigRequest}
         * @since 1.13
         */
        protected SubmitProvisioningConfig(java.lang.String project, java.lang.String location, com.google.api.services.baremetalsolution.v1alpha1.model.SubmitProvisioningConfigRequest content) {
          super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.ProvisioningConfig.class);
          this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
                "Parameter project must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                "Parameter location must conform to the pattern " +
                "^locations/[^/]+$");
          }
        }

        @Override
        public SubmitProvisioningConfig set$Xgafv(java.lang.String $Xgafv) {
          return (SubmitProvisioningConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public SubmitProvisioningConfig setAccessToken(java.lang.String accessToken) {
          return (SubmitProvisioningConfig) super.setAccessToken(accessToken);
        }

        @Override
        public SubmitProvisioningConfig setAlt(java.lang.String alt) {
          return (SubmitProvisioningConfig) super.setAlt(alt);
        }

        @Override
        public SubmitProvisioningConfig setCallback(java.lang.String callback) {
          return (SubmitProvisioningConfig) super.setCallback(callback);
        }

        @Override
        public SubmitProvisioningConfig setFields(java.lang.String fields) {
          return (SubmitProvisioningConfig) super.setFields(fields);
        }

        @Override
        public SubmitProvisioningConfig setKey(java.lang.String key) {
          return (SubmitProvisioningConfig) super.setKey(key);
        }

        @Override
        public SubmitProvisioningConfig setOauthToken(java.lang.String oauthToken) {
          return (SubmitProvisioningConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public SubmitProvisioningConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SubmitProvisioningConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SubmitProvisioningConfig setQuotaUser(java.lang.String quotaUser) {
          return (SubmitProvisioningConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public SubmitProvisioningConfig setUploadType(java.lang.String uploadType) {
          return (SubmitProvisioningConfig) super.setUploadType(uploadType);
        }

        @Override
        public SubmitProvisioningConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (SubmitProvisioningConfig) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The target project of the provisioning request. */
        @com.google.api.client.util.Key
        private java.lang.String project;

        /** Required. The target project of the provisioning request.
         */
        public java.lang.String getProject() {
          return project;
        }

        /** Required. The target project of the provisioning request. */
        public SubmitProvisioningConfig setProject(java.lang.String project) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
                "Parameter project must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.project = project;
          return this;
        }

        /** Required. The target location of the provisioning request. */
        @com.google.api.client.util.Key
        private java.lang.String location;

        /** Required. The target location of the provisioning request.
         */
        public java.lang.String getLocation() {
          return location;
        }

        /** Required. The target location of the provisioning request. */
        public SubmitProvisioningConfig setLocation(java.lang.String location) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                "Parameter location must conform to the pattern " +
                "^locations/[^/]+$");
          }
          this.location = location;
          return this;
        }

        @Override
        public SubmitProvisioningConfig set(String parameterName, Object value) {
          return (SubmitProvisioningConfig) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Instances collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.Instances.List request = baremetalsolution.instances().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Instances instances() {
        return new Instances();
      }

      /**
       * The "instances" collection of methods.
       */
      public class Instances {

        /**
         * Disable the interactive serial console feature on a specific machine.
         *
         * Create a request for the method "instances.disableInteractiveSerialConsole".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link DisableInteractiveSerialConsole#execute()} method to invoke
         * the remote operation.
         *
         * @param instance Required. Name of the instance to disable the interactive serial console feature on.
         * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.DisableInteractiveSerialConsoleRequest}
         * @return the request
         */
        public DisableInteractiveSerialConsole disableInteractiveSerialConsole(java.lang.String instance, com.google.api.services.baremetalsolution.v1alpha1.model.DisableInteractiveSerialConsoleRequest content) throws java.io.IOException {
          DisableInteractiveSerialConsole result = new DisableInteractiveSerialConsole(instance, content);
          initialize(result);
          return result;
        }

        public class DisableInteractiveSerialConsole extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.DisableInteractiveSerialConsoleResponse> {

          private static final String REST_PATH = "v1alpha1/{+instance}:disableInteractiveSerialConsole";

          private final java.util.regex.Pattern INSTANCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Disable the interactive serial console feature on a specific machine.
           *
           * Create a request for the method "instances.disableInteractiveSerialConsole".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link DisableInteractiveSerialConsole#execute()} method to
           * invoke the remote operation. <p> {@link DisableInteractiveSerialConsole#initialize(com.google.a
           * pi.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
           * instance immediately after invoking the constructor. </p>
           *
           * @param instance Required. Name of the instance to disable the interactive serial console feature on.
           * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.DisableInteractiveSerialConsoleRequest}
           * @since 1.13
           */
          protected DisableInteractiveSerialConsole(java.lang.String instance, com.google.api.services.baremetalsolution.v1alpha1.model.DisableInteractiveSerialConsoleRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.DisableInteractiveSerialConsoleResponse.class);
            this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public DisableInteractiveSerialConsole set$Xgafv(java.lang.String $Xgafv) {
            return (DisableInteractiveSerialConsole) super.set$Xgafv($Xgafv);
          }

          @Override
          public DisableInteractiveSerialConsole setAccessToken(java.lang.String accessToken) {
            return (DisableInteractiveSerialConsole) super.setAccessToken(accessToken);
          }

          @Override
          public DisableInteractiveSerialConsole setAlt(java.lang.String alt) {
            return (DisableInteractiveSerialConsole) super.setAlt(alt);
          }

          @Override
          public DisableInteractiveSerialConsole setCallback(java.lang.String callback) {
            return (DisableInteractiveSerialConsole) super.setCallback(callback);
          }

          @Override
          public DisableInteractiveSerialConsole setFields(java.lang.String fields) {
            return (DisableInteractiveSerialConsole) super.setFields(fields);
          }

          @Override
          public DisableInteractiveSerialConsole setKey(java.lang.String key) {
            return (DisableInteractiveSerialConsole) super.setKey(key);
          }

          @Override
          public DisableInteractiveSerialConsole setOauthToken(java.lang.String oauthToken) {
            return (DisableInteractiveSerialConsole) super.setOauthToken(oauthToken);
          }

          @Override
          public DisableInteractiveSerialConsole setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DisableInteractiveSerialConsole) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DisableInteractiveSerialConsole setQuotaUser(java.lang.String quotaUser) {
            return (DisableInteractiveSerialConsole) super.setQuotaUser(quotaUser);
          }

          @Override
          public DisableInteractiveSerialConsole setUploadType(java.lang.String uploadType) {
            return (DisableInteractiveSerialConsole) super.setUploadType(uploadType);
          }

          @Override
          public DisableInteractiveSerialConsole setUploadProtocol(java.lang.String uploadProtocol) {
            return (DisableInteractiveSerialConsole) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the instance to disable the interactive serial console feature on.
           */
          @com.google.api.client.util.Key
          private java.lang.String instance;

          /** Required. Name of the instance to disable the interactive serial console feature on.
           */
          public java.lang.String getInstance() {
            return instance;
          }

          /**
           * Required. Name of the instance to disable the interactive serial console feature on.
           */
          public DisableInteractiveSerialConsole setInstance(java.lang.String instance) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.instance = instance;
            return this;
          }

          @Override
          public DisableInteractiveSerialConsole set(String parameterName, Object value) {
            return (DisableInteractiveSerialConsole) super.set(parameterName, value);
          }
        }
        /**
         * Enable the interactive serial console feature on a specific machine.
         *
         * Create a request for the method "instances.enableInteractiveSerialConsole".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link EnableInteractiveSerialConsole#execute()} method to invoke
         * the remote operation.
         *
         * @param instance Required. Name of the instance to enable the interactive serial console feature on.
         * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.EnableInteractiveSerialConsoleRequest}
         * @return the request
         */
        public EnableInteractiveSerialConsole enableInteractiveSerialConsole(java.lang.String instance, com.google.api.services.baremetalsolution.v1alpha1.model.EnableInteractiveSerialConsoleRequest content) throws java.io.IOException {
          EnableInteractiveSerialConsole result = new EnableInteractiveSerialConsole(instance, content);
          initialize(result);
          return result;
        }

        public class EnableInteractiveSerialConsole extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.EnableInteractiveSerialConsoleResponse> {

          private static final String REST_PATH = "v1alpha1/{+instance}:enableInteractiveSerialConsole";

          private final java.util.regex.Pattern INSTANCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Enable the interactive serial console feature on a specific machine.
           *
           * Create a request for the method "instances.enableInteractiveSerialConsole".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link EnableInteractiveSerialConsole#execute()} method to
           * invoke the remote operation. <p> {@link EnableInteractiveSerialConsole#initialize(com.google.ap
           * i.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
           * instance immediately after invoking the constructor. </p>
           *
           * @param instance Required. Name of the instance to enable the interactive serial console feature on.
           * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.EnableInteractiveSerialConsoleRequest}
           * @since 1.13
           */
          protected EnableInteractiveSerialConsole(java.lang.String instance, com.google.api.services.baremetalsolution.v1alpha1.model.EnableInteractiveSerialConsoleRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.EnableInteractiveSerialConsoleResponse.class);
            this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public EnableInteractiveSerialConsole set$Xgafv(java.lang.String $Xgafv) {
            return (EnableInteractiveSerialConsole) super.set$Xgafv($Xgafv);
          }

          @Override
          public EnableInteractiveSerialConsole setAccessToken(java.lang.String accessToken) {
            return (EnableInteractiveSerialConsole) super.setAccessToken(accessToken);
          }

          @Override
          public EnableInteractiveSerialConsole setAlt(java.lang.String alt) {
            return (EnableInteractiveSerialConsole) super.setAlt(alt);
          }

          @Override
          public EnableInteractiveSerialConsole setCallback(java.lang.String callback) {
            return (EnableInteractiveSerialConsole) super.setCallback(callback);
          }

          @Override
          public EnableInteractiveSerialConsole setFields(java.lang.String fields) {
            return (EnableInteractiveSerialConsole) super.setFields(fields);
          }

          @Override
          public EnableInteractiveSerialConsole setKey(java.lang.String key) {
            return (EnableInteractiveSerialConsole) super.setKey(key);
          }

          @Override
          public EnableInteractiveSerialConsole setOauthToken(java.lang.String oauthToken) {
            return (EnableInteractiveSerialConsole) super.setOauthToken(oauthToken);
          }

          @Override
          public EnableInteractiveSerialConsole setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (EnableInteractiveSerialConsole) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public EnableInteractiveSerialConsole setQuotaUser(java.lang.String quotaUser) {
            return (EnableInteractiveSerialConsole) super.setQuotaUser(quotaUser);
          }

          @Override
          public EnableInteractiveSerialConsole setUploadType(java.lang.String uploadType) {
            return (EnableInteractiveSerialConsole) super.setUploadType(uploadType);
          }

          @Override
          public EnableInteractiveSerialConsole setUploadProtocol(java.lang.String uploadProtocol) {
            return (EnableInteractiveSerialConsole) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the instance to enable the interactive serial console feature on.
           */
          @com.google.api.client.util.Key
          private java.lang.String instance;

          /** Required. Name of the instance to enable the interactive serial console feature on.
           */
          public java.lang.String getInstance() {
            return instance;
          }

          /**
           * Required. Name of the instance to enable the interactive serial console feature on.
           */
          public EnableInteractiveSerialConsole setInstance(java.lang.String instance) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.instance = instance;
            return this;
          }

          @Override
          public EnableInteractiveSerialConsole set(String parameterName, Object value) {
            return (EnableInteractiveSerialConsole) super.set(parameterName, value);
          }
        }
        /**
         * Get details for a specific named Instance.
         *
         * Create a request for the method "instances.get".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Instance to retrieve.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.Instance> {

          private static final String REST_PATH = "v1alpha1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Get details for a specific named Instance.
           *
           * Create a request for the method "instances.get".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Instance to retrieve.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.Instance.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the Instance to retrieve. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Instance to retrieve.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the Instance to retrieve. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List Instances (physical servers).
         *
         * Create a request for the method "instances.list".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location to list Instances in.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.ListInstancesResponse> {

          private static final String REST_PATH = "v1alpha1/{+parent}/instances";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List Instances (physical servers).
           *
           * Create a request for the method "instances.list".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location to list Instances in.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.ListInstancesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The location to list Instances in. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location to list Instances in.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The location to list Instances in. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Read the most recent serial port output from a machine.
         *
         * Create a request for the method "instances.readSerialPortOutput".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link ReadSerialPortOutput#execute()} method to invoke the remote
         * operation.
         *
         * @param instance Required. Name of the instance to get serial port output of.
         * @return the request
         */
        public ReadSerialPortOutput readSerialPortOutput(java.lang.String instance) throws java.io.IOException {
          ReadSerialPortOutput result = new ReadSerialPortOutput(instance);
          initialize(result);
          return result;
        }

        public class ReadSerialPortOutput extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.SerialPortOutput> {

          private static final String REST_PATH = "v1alpha1/{+instance}:readSerialPortOutput";

          private final java.util.regex.Pattern INSTANCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Read the most recent serial port output from a machine.
           *
           * Create a request for the method "instances.readSerialPortOutput".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link ReadSerialPortOutput#execute()} method to invoke the
           * remote operation. <p> {@link ReadSerialPortOutput#initialize(com.google.api.client.googleapis.s
           * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param instance Required. Name of the instance to get serial port output of.
           * @since 1.13
           */
          protected ReadSerialPortOutput(java.lang.String instance) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.SerialPortOutput.class);
            this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ReadSerialPortOutput set$Xgafv(java.lang.String $Xgafv) {
            return (ReadSerialPortOutput) super.set$Xgafv($Xgafv);
          }

          @Override
          public ReadSerialPortOutput setAccessToken(java.lang.String accessToken) {
            return (ReadSerialPortOutput) super.setAccessToken(accessToken);
          }

          @Override
          public ReadSerialPortOutput setAlt(java.lang.String alt) {
            return (ReadSerialPortOutput) super.setAlt(alt);
          }

          @Override
          public ReadSerialPortOutput setCallback(java.lang.String callback) {
            return (ReadSerialPortOutput) super.setCallback(callback);
          }

          @Override
          public ReadSerialPortOutput setFields(java.lang.String fields) {
            return (ReadSerialPortOutput) super.setFields(fields);
          }

          @Override
          public ReadSerialPortOutput setKey(java.lang.String key) {
            return (ReadSerialPortOutput) super.setKey(key);
          }

          @Override
          public ReadSerialPortOutput setOauthToken(java.lang.String oauthToken) {
            return (ReadSerialPortOutput) super.setOauthToken(oauthToken);
          }

          @Override
          public ReadSerialPortOutput setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ReadSerialPortOutput) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ReadSerialPortOutput setQuotaUser(java.lang.String quotaUser) {
            return (ReadSerialPortOutput) super.setQuotaUser(quotaUser);
          }

          @Override
          public ReadSerialPortOutput setUploadType(java.lang.String uploadType) {
            return (ReadSerialPortOutput) super.setUploadType(uploadType);
          }

          @Override
          public ReadSerialPortOutput setUploadProtocol(java.lang.String uploadProtocol) {
            return (ReadSerialPortOutput) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the instance to get serial port output of. */
          @com.google.api.client.util.Key
          private java.lang.String instance;

          /** Required. Name of the instance to get serial port output of.
           */
          public java.lang.String getInstance() {
            return instance;
          }

          /** Required. Name of the instance to get serial port output of. */
          public ReadSerialPortOutput setInstance(java.lang.String instance) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.instance = instance;
            return this;
          }

          /** Optional. The start byte of the serial port output to return. */
          @com.google.api.client.util.Key
          private java.lang.Long startByte;

          /** Optional. The start byte of the serial port output to return.
           */
          public java.lang.Long getStartByte() {
            return startByte;
          }

          /** Optional. The start byte of the serial port output to return. */
          public ReadSerialPortOutput setStartByte(java.lang.Long startByte) {
            this.startByte = startByte;
            return this;
          }

          @Override
          public ReadSerialPortOutput set(String parameterName, Object value) {
            return (ReadSerialPortOutput) super.set(parameterName, value);
          }
        }
        /**
         * Perform an ungraceful, hard reset on a machine (equivalent to physically turning power off and
         * then back on).
         *
         * Create a request for the method "instances.resetInstance".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link ResetInstance#execute()} method to invoke the remote
         * operation.
         *
         * @param instance Required. Name of the instance to reset.
         * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.ResetInstanceRequest}
         * @return the request
         */
        public ResetInstance resetInstance(java.lang.String instance, com.google.api.services.baremetalsolution.v1alpha1.model.ResetInstanceRequest content) throws java.io.IOException {
          ResetInstance result = new ResetInstance(instance, content);
          initialize(result);
          return result;
        }

        public class ResetInstance extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.ResetInstanceResponse> {

          private static final String REST_PATH = "v1alpha1/{+instance}:resetInstance";

          private final java.util.regex.Pattern INSTANCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Perform an ungraceful, hard reset on a machine (equivalent to physically turning power off and
           * then back on).
           *
           * Create a request for the method "instances.resetInstance".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link ResetInstance#execute()} method to invoke the remote
           * operation. <p> {@link ResetInstance#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param instance Required. Name of the instance to reset.
           * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.ResetInstanceRequest}
           * @since 1.13
           */
          protected ResetInstance(java.lang.String instance, com.google.api.services.baremetalsolution.v1alpha1.model.ResetInstanceRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.ResetInstanceResponse.class);
            this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public ResetInstance set$Xgafv(java.lang.String $Xgafv) {
            return (ResetInstance) super.set$Xgafv($Xgafv);
          }

          @Override
          public ResetInstance setAccessToken(java.lang.String accessToken) {
            return (ResetInstance) super.setAccessToken(accessToken);
          }

          @Override
          public ResetInstance setAlt(java.lang.String alt) {
            return (ResetInstance) super.setAlt(alt);
          }

          @Override
          public ResetInstance setCallback(java.lang.String callback) {
            return (ResetInstance) super.setCallback(callback);
          }

          @Override
          public ResetInstance setFields(java.lang.String fields) {
            return (ResetInstance) super.setFields(fields);
          }

          @Override
          public ResetInstance setKey(java.lang.String key) {
            return (ResetInstance) super.setKey(key);
          }

          @Override
          public ResetInstance setOauthToken(java.lang.String oauthToken) {
            return (ResetInstance) super.setOauthToken(oauthToken);
          }

          @Override
          public ResetInstance setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ResetInstance) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ResetInstance setQuotaUser(java.lang.String quotaUser) {
            return (ResetInstance) super.setQuotaUser(quotaUser);
          }

          @Override
          public ResetInstance setUploadType(java.lang.String uploadType) {
            return (ResetInstance) super.setUploadType(uploadType);
          }

          @Override
          public ResetInstance setUploadProtocol(java.lang.String uploadProtocol) {
            return (ResetInstance) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the instance to reset. */
          @com.google.api.client.util.Key
          private java.lang.String instance;

          /** Required. Name of the instance to reset.
           */
          public java.lang.String getInstance() {
            return instance;
          }

          /** Required. Name of the instance to reset. */
          public ResetInstance setInstance(java.lang.String instance) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.instance = instance;
            return this;
          }

          @Override
          public ResetInstance set(String parameterName, Object value) {
            return (ResetInstance) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Luns collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.Luns.List request = baremetalsolution.luns().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Luns luns() {
        return new Luns();
      }

      /**
       * The "luns" collection of methods.
       */
      public class Luns {

        /**
         * Get details for a specific named Lun.
         *
         * Create a request for the method "luns.get".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Lun to retrieve.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.Lun> {

          private static final String REST_PATH = "v1alpha1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/luns/[^/]+$");

          /**
           * Get details for a specific named Lun.
           *
           * Create a request for the method "luns.get".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Lun to retrieve.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.Lun.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/luns/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the Lun to retrieve. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Lun to retrieve.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the Lun to retrieve. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/luns/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List Luns.
         *
         * Create a request for the method "luns.list".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location to list Luns in.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.ListLunsResponse> {

          private static final String REST_PATH = "v1alpha1/{+parent}/luns";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List Luns.
           *
           * Create a request for the method "luns.list".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location to list Luns in.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.ListLunsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The location to list Luns in. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location to list Luns in.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The location to list Luns in. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Volumes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.Volumes.List request = baremetalsolution.volumes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Volumes volumes() {
        return new Volumes();
      }

      /**
       * The "volumes" collection of methods.
       */
      public class Volumes {

        /**
         * Get details for a specific named Volume.
         *
         * Create a request for the method "volumes.get".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Volume to retrieve.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.Volume> {

          private static final String REST_PATH = "v1alpha1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Get details for a specific named Volume.
           *
           * Create a request for the method "volumes.get".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Volume to retrieve.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.Volume.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the Volume to retrieve. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Volume to retrieve.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the Volume to retrieve. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List the volumes for the specified project
         *
         * Create a request for the method "volumes.list".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location to list Volumes in.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.ListVolumesResponse> {

          private static final String REST_PATH = "v1alpha1/{+parent}/volumes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List the volumes for the specified project
           *
           * Create a request for the method "volumes.list".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location to list Volumes in.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.ListVolumesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The location to list Volumes in. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location to list Volumes in.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The location to list Volumes in. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update certain parameters on a Volume.
         *
         * Create a request for the method "volumes.patch".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The name of this Volume.
         * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.Volume}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.baremetalsolution.v1alpha1.model.Volume content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.Volume> {

          private static final String REST_PATH = "v1alpha1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Update certain parameters on a Volume.
           *
           * Create a request for the method "volumes.patch".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The name of this Volume.
           * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.Volume}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.baremetalsolution.v1alpha1.model.Volume content) {
            super(Baremetalsolution.this, "PATCH", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.Volume.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. The name of this Volume. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The name of this Volume.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. The name of this Volume. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The list of fields to update. The only currently supported field is
           * `snapshot_reserved_space_percent`.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to update. The only currently supported field is
         `snapshot_reserved_space_percent`.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The list of fields to update. The only currently supported field is
           * `snapshot_reserved_space_percent`.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the specified snapshot schedule policy on the specified volume.
         *
         * Create a request for the method "volumes.setVolumeSnapshotSchedulePolicy".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link SetVolumeSnapshotSchedulePolicy#execute()} method to invoke
         * the remote operation.
         *
         * @param volume Required. Name of the volume to set snapshot schedule policy on.
         * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SetVolumeSnapshotSchedulePolicyRequest}
         * @return the request
         */
        public SetVolumeSnapshotSchedulePolicy setVolumeSnapshotSchedulePolicy(java.lang.String volume, com.google.api.services.baremetalsolution.v1alpha1.model.SetVolumeSnapshotSchedulePolicyRequest content) throws java.io.IOException {
          SetVolumeSnapshotSchedulePolicy result = new SetVolumeSnapshotSchedulePolicy(volume, content);
          initialize(result);
          return result;
        }

        public class SetVolumeSnapshotSchedulePolicy extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.SetVolumeSnapshotSchedulePolicyResponse> {

          private static final String REST_PATH = "v1alpha1/{+volume}:setVolumeSnapshotSchedulePolicy";

          private final java.util.regex.Pattern VOLUME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Sets the specified snapshot schedule policy on the specified volume.
           *
           * Create a request for the method "volumes.setVolumeSnapshotSchedulePolicy".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link SetVolumeSnapshotSchedulePolicy#execute()} method to
           * invoke the remote operation. <p> {@link SetVolumeSnapshotSchedulePolicy#initialize(com.google.a
           * pi.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
           * instance immediately after invoking the constructor. </p>
           *
           * @param volume Required. Name of the volume to set snapshot schedule policy on.
           * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SetVolumeSnapshotSchedulePolicyRequest}
           * @since 1.13
           */
          protected SetVolumeSnapshotSchedulePolicy(java.lang.String volume, com.google.api.services.baremetalsolution.v1alpha1.model.SetVolumeSnapshotSchedulePolicyRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.SetVolumeSnapshotSchedulePolicyResponse.class);
            this.volume = com.google.api.client.util.Preconditions.checkNotNull(volume, "Required parameter volume must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(VOLUME_PATTERN.matcher(volume).matches(),
                  "Parameter volume must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetVolumeSnapshotSchedulePolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setAccessToken(java.lang.String accessToken) {
            return (SetVolumeSnapshotSchedulePolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setAlt(java.lang.String alt) {
            return (SetVolumeSnapshotSchedulePolicy) super.setAlt(alt);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setCallback(java.lang.String callback) {
            return (SetVolumeSnapshotSchedulePolicy) super.setCallback(callback);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setFields(java.lang.String fields) {
            return (SetVolumeSnapshotSchedulePolicy) super.setFields(fields);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setKey(java.lang.String key) {
            return (SetVolumeSnapshotSchedulePolicy) super.setKey(key);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setOauthToken(java.lang.String oauthToken) {
            return (SetVolumeSnapshotSchedulePolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetVolumeSnapshotSchedulePolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetVolumeSnapshotSchedulePolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setUploadType(java.lang.String uploadType) {
            return (SetVolumeSnapshotSchedulePolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetVolumeSnapshotSchedulePolicy) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the volume to set snapshot schedule policy on. */
          @com.google.api.client.util.Key
          private java.lang.String volume;

          /** Required. Name of the volume to set snapshot schedule policy on.
           */
          public java.lang.String getVolume() {
            return volume;
          }

          /** Required. Name of the volume to set snapshot schedule policy on. */
          public SetVolumeSnapshotSchedulePolicy setVolume(java.lang.String volume) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(VOLUME_PATTERN.matcher(volume).matches(),
                  "Parameter volume must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.volume = volume;
            return this;
          }

          @Override
          public SetVolumeSnapshotSchedulePolicy set(String parameterName, Object value) {
            return (SetVolumeSnapshotSchedulePolicy) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Snapshots collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
         *   {@code Baremetalsolution.Snapshots.List request = baremetalsolution.snapshots().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Snapshots snapshots() {
          return new Snapshots();
        }

        /**
         * The "snapshots" collection of methods.
         */
        public class Snapshots {

          /**
           * Create snapshot of the specified Volume
           *
           * Create a request for the method "snapshots.create".
           *
           * This request holds the parameters needed by the baremetalsolution server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The Volume containing the VolumeSnapshots.
           * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.VolumeSnapshot}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.baremetalsolution.v1alpha1.model.VolumeSnapshot content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.VolumeSnapshot> {

            private static final String REST_PATH = "v1alpha1/{+parent}/snapshots";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

            /**
             * Create snapshot of the specified Volume
             *
             * Create a request for the method "snapshots.create".
             *
             * This request holds the parameters needed by the the baremetalsolution server.  After setting
             * any optional parameters, call the {@link Create#execute()} method to invoke the remote
             * operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The Volume containing the VolumeSnapshots.
             * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.VolumeSnapshot}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.baremetalsolution.v1alpha1.model.VolumeSnapshot content) {
              super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.VolumeSnapshot.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The Volume containing the VolumeSnapshots. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The Volume containing the VolumeSnapshots.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The Volume containing the VolumeSnapshots. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Delete specific named snapshot.
           *
           * Create a request for the method "snapshots.delete".
           *
           * This request holds the parameters needed by the baremetalsolution server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the snapshot to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.Empty> {

            private static final String REST_PATH = "v1alpha1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");

            /**
             * Delete specific named snapshot.
             *
             * Create a request for the method "snapshots.delete".
             *
             * This request holds the parameters needed by the the baremetalsolution server.  After setting
             * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
             * operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the snapshot to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Baremetalsolution.this, "DELETE", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the snapshot to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the snapshot to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the snapshot to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Get details for a specific named snapshot.
           *
           * Create a request for the method "snapshots.get".
           *
           * This request holds the parameters needed by the baremetalsolution server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the snapshot to retrieve.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.VolumeSnapshot> {

            private static final String REST_PATH = "v1alpha1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");

            /**
             * Get details for a specific named snapshot.
             *
             * Create a request for the method "snapshots.get".
             *
             * This request holds the parameters needed by the the baremetalsolution server.  After setting
             * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             * <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the snapshot to retrieve.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.VolumeSnapshot.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the snapshot to retrieve. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the snapshot to retrieve.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the snapshot to retrieve. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * List the Snapshots for the specified Volume
           *
           * Create a request for the method "snapshots.list".
           *
           * This request holds the parameters needed by the baremetalsolution server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The Volume containing the VolumeSnapshots.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.ListVolumeSnapshotsResponse> {

            private static final String REST_PATH = "v1alpha1/{+parent}/snapshots";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

            /**
             * List the Snapshots for the specified Volume
             *
             * Create a request for the method "snapshots.list".
             *
             * This request holds the parameters needed by the the baremetalsolution server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The Volume containing the VolumeSnapshots.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.ListVolumeSnapshotsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The Volume containing the VolumeSnapshots. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The Volume containing the VolumeSnapshots.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The Volume containing the VolumeSnapshots. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The maximum number of items to return. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of items to return.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The maximum number of items to return. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from a previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from a previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from a previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Restore a VolumeSnapshot.
           *
           * Create a request for the method "snapshots.restore".
           *
           * This request holds the parameters needed by the baremetalsolution server.  After setting any
           * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the VolumeSnapshot to restore.
           * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.RestoreVolumeSnapshotRequest}
           * @return the request
           */
          public Restore restore(java.lang.String name, com.google.api.services.baremetalsolution.v1alpha1.model.RestoreVolumeSnapshotRequest content) throws java.io.IOException {
            Restore result = new Restore(name, content);
            initialize(result);
            return result;
          }

          public class Restore extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.Empty> {

            private static final String REST_PATH = "v1alpha1/{+name}:restore";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");

            /**
             * Restore a VolumeSnapshot.
             *
             * Create a request for the method "snapshots.restore".
             *
             * This request holds the parameters needed by the the baremetalsolution server.  After setting
             * any optional parameters, call the {@link Restore#execute()} method to invoke the remote
             * operation. <p> {@link
             * Restore#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the VolumeSnapshot to restore.
             * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.RestoreVolumeSnapshotRequest}
             * @since 1.13
             */
            protected Restore(java.lang.String name, com.google.api.services.baremetalsolution.v1alpha1.model.RestoreVolumeSnapshotRequest content) {
              super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
            }

            @Override
            public Restore set$Xgafv(java.lang.String $Xgafv) {
              return (Restore) super.set$Xgafv($Xgafv);
            }

            @Override
            public Restore setAccessToken(java.lang.String accessToken) {
              return (Restore) super.setAccessToken(accessToken);
            }

            @Override
            public Restore setAlt(java.lang.String alt) {
              return (Restore) super.setAlt(alt);
            }

            @Override
            public Restore setCallback(java.lang.String callback) {
              return (Restore) super.setCallback(callback);
            }

            @Override
            public Restore setFields(java.lang.String fields) {
              return (Restore) super.setFields(fields);
            }

            @Override
            public Restore setKey(java.lang.String key) {
              return (Restore) super.setKey(key);
            }

            @Override
            public Restore setOauthToken(java.lang.String oauthToken) {
              return (Restore) super.setOauthToken(oauthToken);
            }

            @Override
            public Restore setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Restore) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Restore setQuotaUser(java.lang.String quotaUser) {
              return (Restore) super.setQuotaUser(quotaUser);
            }

            @Override
            public Restore setUploadType(java.lang.String uploadType) {
              return (Restore) super.setUploadType(uploadType);
            }

            @Override
            public Restore setUploadProtocol(java.lang.String uploadProtocol) {
              return (Restore) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the VolumeSnapshot to restore. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the VolumeSnapshot to restore.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Name of the VolumeSnapshot to restore. */
            public Restore setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Restore set(String parameterName, Object value) {
              return (Restore) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the ProvisioningQuotas collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
     *   {@code Baremetalsolution.ProvisioningQuotas.List request = baremetalsolution.provisioningQuotas().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public ProvisioningQuotas provisioningQuotas() {
      return new ProvisioningQuotas();
    }

    /**
     * The "provisioningQuotas" collection of methods.
     */
    public class ProvisioningQuotas {

      /**
       * List the budget details to provision resources on a given project.
       *
       * Create a request for the method "provisioningQuotas.list".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent project containing the provisioning quotas.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.ListProvisioningQuotasResponse> {

        private static final String REST_PATH = "v1alpha1/{+parent}/provisioningQuotas";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * List the budget details to provision resources on a given project.
         *
         * Create a request for the method "provisioningQuotas.list".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent project containing the provisioning quotas.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.ListProvisioningQuotasResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent project containing the provisioning quotas. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent project containing the provisioning quotas.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent project containing the provisioning quotas. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The maximum number of items to return. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of items to return. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the SnapshotSchedulePolicies collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
     *   {@code Baremetalsolution.SnapshotSchedulePolicies.List request = baremetalsolution.snapshotSchedulePolicies().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public SnapshotSchedulePolicies snapshotSchedulePolicies() {
      return new SnapshotSchedulePolicies();
    }

    /**
     * The "snapshotSchedulePolicies" collection of methods.
     */
    public class SnapshotSchedulePolicies {

      /**
       * Create a SnapshotSchedulePolicy.
       *
       * Create a request for the method "snapshotSchedulePolicies.create".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent project containing the SnapshotSchedulePolicy.
       * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy> {

        private static final String REST_PATH = "v1alpha1/{+parent}/snapshotSchedulePolicies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Create a SnapshotSchedulePolicy.
         *
         * Create a request for the method "snapshotSchedulePolicies.create".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent project containing the SnapshotSchedulePolicy.
         * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy content) {
          super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent project containing the SnapshotSchedulePolicy. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent project containing the SnapshotSchedulePolicy.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent project containing the SnapshotSchedulePolicy. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete removes named snapshot schedule policy
       *
       * Create a request for the method "snapshotSchedulePolicies.delete".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the snapshot to delete.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.Empty> {

        private static final String REST_PATH = "v1alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/snapshotSchedulePolicies/[^/]+$");

        /**
         * Delete removes named snapshot schedule policy
         *
         * Create a request for the method "snapshotSchedulePolicies.delete".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the snapshot to delete.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Baremetalsolution.this, "DELETE", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the snapshot to delete. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the snapshot to delete.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the snapshot to delete. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Get details for a specific snapshot schedule policy
       *
       * Create a request for the method "snapshotSchedulePolicies.get".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the policy to retrieve.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy> {

        private static final String REST_PATH = "v1alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/snapshotSchedulePolicies/[^/]+$");

        /**
         * Get details for a specific snapshot schedule policy
         *
         * Create a request for the method "snapshotSchedulePolicies.get".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the policy to retrieve.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the policy to retrieve. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the policy to retrieve.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the policy to retrieve. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List the snapshot schedule policies for the specified project
       *
       * Create a request for the method "snapshotSchedulePolicies.list".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent project containing the Snapshot Schedule Policies.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.ListSnapshotSchedulePoliciesResponse> {

        private static final String REST_PATH = "v1alpha1/{+parent}/snapshotSchedulePolicies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * List the snapshot schedule policies for the specified project
         *
         * Create a request for the method "snapshotSchedulePolicies.list".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent project containing the Snapshot Schedule Policies.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.ListSnapshotSchedulePoliciesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent project containing the Snapshot Schedule Policies. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent project containing the Snapshot Schedule Policies.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent project containing the Snapshot Schedule Policies. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The maximum number of items to return. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of items to return. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update a SnapshotSchedulePolicy.
       *
       * Create a request for the method "snapshotSchedulePolicies.patch".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. The name of this SnapshotSchedulePolicy.
       * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy> {

        private static final String REST_PATH = "v1alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/snapshotSchedulePolicies/[^/]+$");

        /**
         * Update a SnapshotSchedulePolicy.
         *
         * Create a request for the method "snapshotSchedulePolicies.patch".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. The name of this SnapshotSchedulePolicy.
         * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy content) {
          super(Baremetalsolution.this, "PATCH", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.SnapshotSchedulePolicy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** Output only. The name of this SnapshotSchedulePolicy. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. The name of this SnapshotSchedulePolicy.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Output only. The name of this SnapshotSchedulePolicy. */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The list of fields to update. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The list of fields to update.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** The list of fields to update. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the SshKeys collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
     *   {@code Baremetalsolution.SshKeys.List request = baremetalsolution.sshKeys().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public SshKeys sshKeys() {
      return new SshKeys();
    }

    /**
     * The "sshKeys" collection of methods.
     */
    public class SshKeys {

      /**
       * Create a new SSH key registration in the specified project.
       *
       * Create a request for the method "sshKeys.create".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent project containing the SSH keys.
       * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SSHKey}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.baremetalsolution.v1alpha1.model.SSHKey content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.SSHKey> {

        private static final String REST_PATH = "v1alpha1/{+parent}/sshKeys";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Create a new SSH key registration in the specified project.
         *
         * Create a request for the method "sshKeys.create".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent project containing the SSH keys.
         * @param content the {@link com.google.api.services.baremetalsolution.v1alpha1.model.SSHKey}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.baremetalsolution.v1alpha1.model.SSHKey content) {
          super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1alpha1.model.SSHKey.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent project containing the SSH keys. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent project containing the SSH keys.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent project containing the SSH keys. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Required. The ID to use for the key, which will become the final component of the key's
         * resource name. This value should be match the regex: [a-zA-Z0-9@.\-_]{1,64}
         */
        @com.google.api.client.util.Key
        private java.lang.String sshKeyId;

        /** Required. The ID to use for the key, which will become the final component of the key's resource
       name. This value should be match the regex: [a-zA-Z0-9@.\-_]{1,64}
         */
        public java.lang.String getSshKeyId() {
          return sshKeyId;
        }

        /**
         * Required. The ID to use for the key, which will become the final component of the key's
         * resource name. This value should be match the regex: [a-zA-Z0-9@.\-_]{1,64}
         */
        public Create setSshKeyId(java.lang.String sshKeyId) {
          this.sshKeyId = sshKeyId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete an SSH key registration in the specified project.
       *
       * Create a request for the method "sshKeys.delete".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the SSH key to delete.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.Empty> {

        private static final String REST_PATH = "v1alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/sshKeys/[^/]+$");

        /**
         * Delete an SSH key registration in the specified project.
         *
         * Create a request for the method "sshKeys.delete".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the SSH key to delete.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Baremetalsolution.this, "DELETE", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/sshKeys/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the SSH key to delete. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the SSH key to delete.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the SSH key to delete. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/sshKeys/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * List the public SSH keys registered for the specified project.
       *
       * Create a request for the method "sshKeys.list".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent project containing the SSH keys.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1alpha1.model.ListSSHKeysResponse> {

        private static final String REST_PATH = "v1alpha1/{+parent}/sshKeys";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * List the public SSH keys registered for the specified project.
         *
         * Create a request for the method "sshKeys.list".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent project containing the SSH keys.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v1alpha1.model.ListSSHKeysResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent project containing the SSH keys. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent project containing the SSH keys.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent project containing the SSH keys. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The maximum number of items to return. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of items to return. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Baremetalsolution}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Baremetalsolution}. */
    @Override
    public Baremetalsolution build() {
      return new Baremetalsolution(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BaremetalsolutionRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBaremetalsolutionRequestInitializer(
        BaremetalsolutionRequestInitializer baremetalsolutionRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(baremetalsolutionRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
