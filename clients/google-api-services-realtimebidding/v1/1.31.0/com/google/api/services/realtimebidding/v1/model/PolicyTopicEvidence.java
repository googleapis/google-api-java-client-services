/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.realtimebidding.v1.model;

/**
 * Evidence associated with a policy topic entry.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Real-time Bidding API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PolicyTopicEvidence extends com.google.api.client.json.GenericJson {

  /**
   * The creative's destination URL was not crawlable by Google.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DestinationNotCrawlableEvidence destinationNotCrawlable;

  /**
   * The creative's destination URL did not function properly or was incorrectly set up.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DestinationNotWorkingEvidence destinationNotWorking;

  /**
   * URL of the actual landing page.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DestinationUrlEvidence destinationUrl;

  /**
   * Number of HTTP calls made by the creative, broken down by domain.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DomainCallEvidence domainCall;

  /**
   * Total download size and URL-level download size breakdown for resources in a creative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DownloadSizeEvidence downloadSize;

  /**
   * HTTP calls made by the creative that resulted in policy violations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HttpCallEvidence httpCall;

  /**
   * Evidence for HTTP cookie-related policy violations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HttpCookieEvidence httpCookie;

  /**
   * The creative's destination URL was not crawlable by Google.
   * @return value or {@code null} for none
   */
  public DestinationNotCrawlableEvidence getDestinationNotCrawlable() {
    return destinationNotCrawlable;
  }

  /**
   * The creative's destination URL was not crawlable by Google.
   * @param destinationNotCrawlable destinationNotCrawlable or {@code null} for none
   */
  public PolicyTopicEvidence setDestinationNotCrawlable(DestinationNotCrawlableEvidence destinationNotCrawlable) {
    this.destinationNotCrawlable = destinationNotCrawlable;
    return this;
  }

  /**
   * The creative's destination URL did not function properly or was incorrectly set up.
   * @return value or {@code null} for none
   */
  public DestinationNotWorkingEvidence getDestinationNotWorking() {
    return destinationNotWorking;
  }

  /**
   * The creative's destination URL did not function properly or was incorrectly set up.
   * @param destinationNotWorking destinationNotWorking or {@code null} for none
   */
  public PolicyTopicEvidence setDestinationNotWorking(DestinationNotWorkingEvidence destinationNotWorking) {
    this.destinationNotWorking = destinationNotWorking;
    return this;
  }

  /**
   * URL of the actual landing page.
   * @return value or {@code null} for none
   */
  public DestinationUrlEvidence getDestinationUrl() {
    return destinationUrl;
  }

  /**
   * URL of the actual landing page.
   * @param destinationUrl destinationUrl or {@code null} for none
   */
  public PolicyTopicEvidence setDestinationUrl(DestinationUrlEvidence destinationUrl) {
    this.destinationUrl = destinationUrl;
    return this;
  }

  /**
   * Number of HTTP calls made by the creative, broken down by domain.
   * @return value or {@code null} for none
   */
  public DomainCallEvidence getDomainCall() {
    return domainCall;
  }

  /**
   * Number of HTTP calls made by the creative, broken down by domain.
   * @param domainCall domainCall or {@code null} for none
   */
  public PolicyTopicEvidence setDomainCall(DomainCallEvidence domainCall) {
    this.domainCall = domainCall;
    return this;
  }

  /**
   * Total download size and URL-level download size breakdown for resources in a creative.
   * @return value or {@code null} for none
   */
  public DownloadSizeEvidence getDownloadSize() {
    return downloadSize;
  }

  /**
   * Total download size and URL-level download size breakdown for resources in a creative.
   * @param downloadSize downloadSize or {@code null} for none
   */
  public PolicyTopicEvidence setDownloadSize(DownloadSizeEvidence downloadSize) {
    this.downloadSize = downloadSize;
    return this;
  }

  /**
   * HTTP calls made by the creative that resulted in policy violations.
   * @return value or {@code null} for none
   */
  public HttpCallEvidence getHttpCall() {
    return httpCall;
  }

  /**
   * HTTP calls made by the creative that resulted in policy violations.
   * @param httpCall httpCall or {@code null} for none
   */
  public PolicyTopicEvidence setHttpCall(HttpCallEvidence httpCall) {
    this.httpCall = httpCall;
    return this;
  }

  /**
   * Evidence for HTTP cookie-related policy violations.
   * @return value or {@code null} for none
   */
  public HttpCookieEvidence getHttpCookie() {
    return httpCookie;
  }

  /**
   * Evidence for HTTP cookie-related policy violations.
   * @param httpCookie httpCookie or {@code null} for none
   */
  public PolicyTopicEvidence setHttpCookie(HttpCookieEvidence httpCookie) {
    this.httpCookie = httpCookie;
    return this;
  }

  @Override
  public PolicyTopicEvidence set(String fieldName, Object value) {
    return (PolicyTopicEvidence) super.set(fieldName, value);
  }

  @Override
  public PolicyTopicEvidence clone() {
    return (PolicyTopicEvidence) super.clone();
  }

}
