{
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "documents": {
          "methods": {
            "batchProcess": {
              "id": "documentai.projects.documents.batchProcess",
              "path": "v1beta2/{+parent}/documents:batchProcess",
              "request": {
                "$ref": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest"
              },
              "description": "LRO endpoint to batch process many documents. The output is written\nto Cloud Storage as JSON in the [Document] format.",
              "parameters": {
                "parent": {
                  "description": "Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no location is specified, a region will be chosen automatically.",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "v1beta2/projects/{projectsId}/documents:batchProcess",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              }
            },
            "process": {
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no location is specified, a region will be chosen automatically.\nThis field is only populated when used in ProcessDocument method.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "path": "v1beta2/{+parent}/documents:process",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Processes a single document.",
              "response": {
                "$ref": "GoogleCloudDocumentaiV1beta2Document"
              },
              "flatPath": "v1beta2/projects/{projectsId}/documents:process",
              "id": "documentai.projects.documents.process"
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "id": "documentai.projects.operations.get",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "description": "The name of the operation resource.",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/projects/{projectsId}/operations/{operationsId}",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "GET",
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
              "path": "v1beta2/{+name}",
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "locations": {
          "resources": {
            "documents": {
              "methods": {
                "batchProcess": {
                  "id": "documentai.projects.locations.documents.batchProcess",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no location is specified, a region will be chosen automatically.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1beta2/{+parent}/documents:batchProcess",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/documents:batchProcess",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "LRO endpoint to batch process many documents. The output is written\nto Cloud Storage as JSON in the [Document] format.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest"
                  },
                  "httpMethod": "POST"
                },
                "process": {
                  "description": "Processes a single document.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/documents:process",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
                  },
                  "path": "v1beta2/{+parent}/documents:process",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no location is specified, a region will be chosen automatically.\nThis field is only populated when used in ProcessDocument method.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "documentai.projects.locations.documents.process",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta2Document"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1beta2/{+name}",
                  "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource."
                    }
                  },
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "documentai.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                }
              }
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "title": "Cloud Document AI API",
  "version": "v1beta2",
  "baseUrl": "https://documentai.googleapis.com/",
  "servicePath": "",
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "id": "documentai:v1beta2",
  "canonicalName": "Document",
  "revision": "20200612",
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/",
  "rootUrl": "https://documentai.googleapis.com/",
  "discoveryVersion": "v1",
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "basePath": "",
  "fullyEncodeReservedExpansion": true,
  "name": "documentai",
  "kind": "discovery#restDescription",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "schemas": {
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "description": "A form field detected on the page.",
      "type": "object",
      "properties": {
        "valueType": {
          "description": "If the value is non-textual, this field represents the type. Current\nvalid values are:\n- blank (this indicates the field_value is normal text)\n- \"unfilled_checkbox\"\n- \"filled_checkbox\"",
          "type": "string"
        },
        "nameDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for name together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`,\n`Grand total`, `Phone number`, etc."
        },
        "fieldValue": {
          "description": "Layout for the FormField value.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for value together with confidence.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "type": "object",
      "properties": {
        "content": {
          "format": "byte",
          "description": "Inline document content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.",
          "type": "string"
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards,\nentities in this list may cross shard boundaries.",
          "type": "array"
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "uri": {
          "description": "Currently supports Google Cloud Storage URI of the form\n   `gs://bucket_name/object_name`. Object versioning is not supported.\n   See [Google Cloud Storage Request\n   URIs](https://cloud.google.com/storage/docs/reference-uris) for more\n   info.",
          "type": "string"
        },
        "entityRelations": {
          "type": "array",
          "description": "Relationship among Document.entities.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          }
        },
        "translations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTranslation"
          },
          "description": "A list of translations on Document.text. For document shards,\ntranslations in this list may cross shard boundaries.",
          "type": "array"
        },
        "textStyles": {
          "description": "Styles for the Document.text.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          }
        },
        "pages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          },
          "type": "array",
          "description": "Visual page layout for the Document."
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published MIME type (also referred to as media type). For more\ninformation, see\nhttps://www.iana.org/assignments/media-types/media-types.xhtml."
        },
        "text": {
          "description": "UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger\ndocument. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1Document",
      "description": "Document represents the canonical document resource in Document Understanding\nAI.\nIt is an interchange format that provides insights into documents and allows\nfor collaboration between users and Document Understanding AI to iterate and\noptimize for quality."
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
      "description": "For a large document, sharding may be performed to produce several\ndocument shards. Each document shard contains this field to detail which\nshard it is.",
      "properties": {
        "shardCount": {
          "description": "Total number of shards.",
          "type": "string",
          "format": "int64"
        },
        "textOffset": {
          "type": "string",
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall\ndocument global text."
        },
        "shardIndex": {
          "type": "string",
          "format": "int64",
          "description": "The 0-based index of this shard."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
      "properties": {
        "height": {
          "description": "Page height.",
          "type": "number",
          "format": "float"
        },
        "width": {
          "format": "float",
          "type": "number",
          "description": "Page width."
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        }
      },
      "description": "Dimension for the page.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "description": "Font size with unit.",
      "properties": {
        "size": {
          "format": "float",
          "type": "number",
          "description": "Font size for the text."
        },
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.)."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize"
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X coordinate."
        },
        "y": {
          "description": "Y coordinate.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1Vertex",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2KeyValuePairHint": {
      "type": "object",
      "description": "Reserved for future use.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key text for the hint."
        },
        "valueTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Type of the value. This is case-insensitive, and could be one of:\nADDRESS, LOCATION, ORGANIZATION, PERSON, PHONE_NUMBER,\nID, NUMBER, EMAIL, PRICE, TERMS, DATE, NAME. Types not in this list will\nbe ignored."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2KeyValuePairHint"
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "description": "The desired input location and metadata.",
      "type": "object",
      "properties": {
        "contents": {
          "description": "Content in bytes, represented as a stream of bytes.\nNote: As with all `bytes` fields, proto buffer messages use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nThis field only works for synchronous ProcessDocument method.",
          "type": "string",
          "format": "byte"
        },
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a\nsingle file.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource"
        },
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf,\nimage/tiff, and image/gif.\nIn addition, application/json type is supported for requests with\nProcessDocumentRequest.automl_params field set. The JSON file needs to\nbe in Document format.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2InputConfig"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation",
      "description": "Relationship between Entities.",
      "properties": {
        "objectId": {
          "description": "Object entity id.",
          "type": "string"
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "type": "object",
      "description": "Response to a single document processing request.",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig",
          "description": "Information about the input file. This is the same as the corresponding\ninput config in the request."
        },
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig",
          "description": "The output location of the parsed responses. The responses are written to\nthis location as JSON-serialized `Document` objects."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "type": "object",
      "properties": {
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        }
      },
      "description": "Relationship between Entities.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "type": "object",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination"
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "type": "object",
      "properties": {
        "entities": {
          "description": "A list of entities detected on Document.text. For document shards,\nentities in this list may cross shard boundaries.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          }
        },
        "pages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          },
          "type": "array",
          "description": "Visual page layout for the Document."
        },
        "content": {
          "format": "byte",
          "description": "Inline document content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.",
          "type": "string"
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          },
          "type": "array",
          "description": "Styles for the Document.text."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "entityRelations": {
          "type": "array",
          "description": "Relationship among Document.entities.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          }
        },
        "uri": {
          "type": "string",
          "description": "Currently supports Google Cloud Storage URI of the form\n   `gs://bucket_name/object_name`. Object versioning is not supported.\n   See [Google Cloud Storage Request\n   URIs](https://cloud.google.com/storage/docs/reference-uris) for more\n   info."
        },
        "text": {
          "description": "UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "translations": {
          "type": "array",
          "description": "A list of translations on Document.text. For document shards,\ntranslations in this list may cross shard boundaries.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTranslation"
          }
        },
        "labels": {
          "description": "Labels for this document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          }
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger\ndocument. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo"
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published MIME type (also referred to as media type). For more\ninformation, see\nhttps://www.iana.org/assignments/media-types/media-types.xhtml."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2Document",
      "description": "Document represents the canonical document resource in Document Understanding\nAI.\nIt is an interchange format that provides insights into documents and allows\nfor collaboration between users and Document Understanding AI to iterate and\noptimize for quality."
    },
    "GoogleCloudDocumentaiV1beta2FormExtractionParams": {
      "properties": {
        "keyValuePairHints": {
          "description": "Reserved for future use.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2KeyValuePairHint"
          },
          "type": "array"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable form extraction."
        },
        "modelVersion": {
          "description": "Model version of the form extraction system. Default is\n\"builtin/stable\". Specify \"builtin/latest\" for the latest model.\nFor custom form models, specify: “custom/{model_name}\". Model name\nformat is \"bucket_name/path/to/modeldir\" corresponding to\n\"gs://bucket_name/path/to/modeldir\" where annotated examples are stored.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Parameters to control form extraction behavior.",
      "id": "GoogleCloudDocumentaiV1beta2FormExtractionParams"
    },
    "GoogleCloudDocumentaiV1beta2TableBoundHint": {
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Page number for multi-paged inputs this hint applies to. If not\nprovided, this hint will apply to all pages by default. This value is\n1-based."
        },
        "boundingBox": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "Bounding box hint for a table on this page. The coordinates must be\nnormalized to [0,1] and the bounding box must be an axis-aligned rectangle."
        }
      },
      "description": "A hint for a table bounding box on the page for table parsing.",
      "id": "GoogleCloudDocumentaiV1beta2TableBoundHint",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "type": "object",
      "description": "Visual element describing a layout unit on a page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
      "properties": {
        "confidence": {
          "format": "float",
          "description": "Confidence of the current Layout within context of the object this\nlayout is for. e.g. confidence can be for a single token, a table,\na visual element, etc. depending on context. Range [0, 1].",
          "type": "number"
        },
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right.\nTurn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down.\nTurn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left.\nTurn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "description": "Detected orientation for the Layout."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination"
        },
        "pagesPerShard": {
          "format": "int32",
          "description": "The max number of pages to include into each output Document shard JSON on\nGoogle Cloud Storage.\n\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 parsed pages will be\nproduced. If `pages_per_shard` = 20, then 5 Document shard JSON files each\ncontaining 20 parsed pages will be written under the prefix\nOutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where\nx and y are 1-indexed page numbers.\n\nExample GCS outputs with 157 pages and pages_per_shard = 50:\n\n\u003cprefix\u003epages-001-to-050.json\n\u003cprefix\u003epages-051-to-100.json\n\u003cprefix\u003epages-101-to-150.json\n\u003cprefix\u003epages-151-to-157.json",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig",
      "type": "object",
      "description": "The desired output location and metadata."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "properties": {
        "rowSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many rows this cell spans."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "colSpan": {
          "type": "integer",
          "description": "How many columns this cell spans.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell",
      "description": "A cell representation inside the table.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "type": "object",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Provenance of the entity.\nText anchor indexing into the Document.text."
        },
        "mentionText": {
          "type": "string",
          "description": "Text value in the document e.g. `1600 Amphitheatre Pkwy`."
        },
        "type": {
          "type": "string",
          "description": "Entity type from a schema e.g. `Address`."
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1]."
        },
        "mentionId": {
          "description": "Deprecated.  Use `id` field instead.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity",
      "description": "A phrase in the text that is a known entity type, such as a person, an\norganization, or location."
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "properties": {
        "responses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          },
          "type": "array",
          "description": "Responses for each individual document."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse",
      "description": "Response to an batch document processing request. This is returned in\nthe LRO Operation after the operation is complete.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "properties": {
        "responses": {
          "type": "array",
          "description": "Responses for each individual document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          }
        }
      },
      "description": "Response to an batch document processing request. This is returned in\nthe LRO Operation after the operation is complete.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse"
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "id": "GoogleLongrunningOperation",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2TableExtractionParams": {
      "description": "Parameters to control table extraction behavior.",
      "id": "GoogleCloudDocumentaiV1beta2TableExtractionParams",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable table extraction."
        },
        "tableBoundHints": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2TableBoundHint"
          },
          "description": "Optional. Table bounding box hints that can be provided to complex cases\nwhich our algorithm cannot locate the table(s) in.",
          "type": "array"
        },
        "modelVersion": {
          "description": "Model version of the table extraction system. Default is \"builtin/stable\".\nSpecify \"builtin/latest\" for the latest model.",
          "type": "string"
        },
        "headerHints": {
          "type": "array",
          "description": "Optional. Reserved for future use.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow",
      "description": "A row of table cells.",
      "type": "object",
      "properties": {
        "cells": {
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "type": "object",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "description": "The state of the current batch processing.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ]
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata",
      "description": "Contains metadata for the BatchProcessDocuments operation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "description": "A detected token.",
      "properties": {
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex",
      "properties": {
        "x": {
          "type": "number",
          "format": "float",
          "description": "X coordinate."
        },
        "y": {
          "format": "float",
          "description": "Y coordinate.",
          "type": "number"
        }
      },
      "type": "object",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1."
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "id": "GoogleCloudDocumentaiV1beta1InputConfig",
      "description": "The desired input location and metadata.",
      "type": "object",
      "properties": {
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf,\nimage/tiff, and image/gif.\nIn addition, application/json type is supported for requests with\nProcessDocumentRequest.automl_params field set. The JSON file needs to\nbe in Document format.",
          "type": "string"
        },
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a\nsingle file."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle",
      "description": "Annotation for common text style attributes. This adheres to CSS\nconventions as much as possible.",
      "properties": {
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "fontWeight": {
          "type": "string",
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter.\nhttps://www.w3schools.com/cssref/pr_font_weight.asp"
        },
        "textDecoration": {
          "description": "Text decoration. Follows CSS standard.\n\u003ctext-decoration-line\u003e \u003ctext-decoration-color\u003e \u003ctext-decoration-style\u003e\nhttps://www.w3schools.com/cssref/pr_text_text-decoration.asp",
          "type": "string"
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "textStyle": {
          "description": "Text style. Possible values are normal, italic, and oblique.\nhttps://www.w3schools.com/cssref/pr_font_font-style.asp",
          "type": "string"
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "description": "A text segment in the Document.text. The indices may be out of bounds\nwhich indicate that the text extends into another document shard for\nlarge sharded documents. See ShardInfo.text_offset",
      "properties": {
        "startIndex": {
          "type": "string",
          "format": "int64",
          "description": "TextSegment start UTF-8 char index in the Document.text."
        },
        "endIndex": {
          "format": "int64",
          "description": "TextSegment half open end UTF-8 char index in the\nDocument.text.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1GcsSource",
      "description": "The Google Cloud Storage location where the input file will be read from."
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination",
      "description": "The Google Cloud Storage location where the output file will be written to."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine",
      "type": "object",
      "description": "A collection of tokens that a human would perceive as a line.\nDoes not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Line."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "type": "object",
      "description": "Label attaches schema information and/or other metadata to segments within\na Document. Multiple Labels on a single field can denote either\ndifferent labels, different instances of the same label created at\ndifferent times, or some combination of both.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the label.\n\nWhen the label is generated from AutoML Text Classification model, this\nfield represents the name of the category."
        },
        "automlModel": {
          "description": "Label is generated AutoML model. This field stores the full resource\nname of the AutoML model.\n\nFormat:\n`projects/{project-id}/locations/{location-id}/models/{model-id}`",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence score between 0 and 1 for label assignment."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "description": "A page in a Document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage",
      "type": "object",
      "properties": {
        "tokens": {
          "description": "A list of visually detected tokens on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          }
        },
        "blocks": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          },
          "type": "array",
          "description": "A list of visually detected text blocks on the page.\nA block has a set of lines (collected into paragraphs) that have a common\nline-spacing and orientation."
        },
        "lines": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          },
          "description": "A list of visually detected text lines on the page.\nA collection of tokens that a human would perceive as a line.",
          "type": "array"
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page.\nA collection of lines that a human would perceive as a paragraph."
        },
        "dimension": {
          "description": "Physical dimension of the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the page."
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          },
          "description": "A list of visually detected tables on the page.",
          "type": "array"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "visualElements": {
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox,\nsignature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          }
        },
        "formFields": {
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          },
          "type": "array"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "1-based index for current Page in a parent Document.\nUseful when a page is taken out of a Document for individual\nprocessing."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage",
      "description": "Detected language for a structural component.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentTranslation": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentTranslation",
      "description": "A translation of the text segment.",
      "properties": {
        "translatedText": {
          "description": "Text translated into the target language.",
          "type": "string"
        },
        "textAnchor": {
          "description": "Provenance of the translation.\nText anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ]
        }
      },
      "description": "Detected break at the end of a Token."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Block."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "description": "A block has a set of lines (collected into paragraphs) that have a\ncommon line-spacing and orientation.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "properties": {
        "y": {
          "format": "int32",
          "description": "Y coordinate.",
          "type": "integer"
        },
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2Vertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image."
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest": {
      "properties": {
        "ocrParams": {
          "description": "Controls OCR behavior. If not specified, the system will decide reasonable\ndefaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2OcrParams"
        },
        "outputConfig": {
          "description": "Optional. The desired output location. This field is only needed in\nBatchProcessDocumentsRequest.",
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig"
        },
        "inputConfig": {
          "description": "Required. Information about the input file.",
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig"
        },
        "tableExtractionParams": {
          "description": "Controls table extraction behavior. If not specified, the system will\ndecide reasonable defaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2TableExtractionParams"
        },
        "automlParams": {
          "description": "Controls AutoML model prediction behavior. AutoMlParams cannot be used\ntogether with other Params.",
          "$ref": "GoogleCloudDocumentaiV1beta2AutoMlParams"
        },
        "parent": {
          "description": "Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no location is specified, a region will be chosen automatically.\nThis field is only populated when used in ProcessDocument method.",
          "type": "string"
        },
        "entityExtractionParams": {
          "description": "Controls entity extraction behavior. If not specified, the system will\ndecide reasonable defaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2EntityExtractionParams"
        },
        "documentType": {
          "description": "Specifies a known document type for deeper structure detection. Valid\nvalues are currently \"general\" and \"invoice\". If not provided, \"general\"\\\nis used as default. If any other value is given, the request is rejected.",
          "type": "string"
        },
        "formExtractionParams": {
          "description": "Controls form extraction behavior. If not specified, the system will\ndecide reasonable defaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2FormExtractionParams"
        }
      },
      "type": "object",
      "description": "Request to process one document.",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
      "description": "Detected break at the end of a Token."
    },
    "GoogleCloudDocumentaiV1beta2OcrParams": {
      "properties": {
        "languageHints": {
          "type": "array",
          "description": "List of languages to use for OCR. In most cases, an empty value\nyields the best results since it enables automatic language detection. For\nlanguages based on the Latin alphabet, setting `language_hints` is not\nneeded. In rare cases, when the language of the text in the image is known,\nsetting a hint will help get better results (although it will be a\nsignificant hindrance if the hint is wrong). Document processing returns an\nerror if one or more of the specified languages is not one of the\nsupported languages.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Parameters to control Optical Character Recognition (OCR) behavior.",
      "id": "GoogleCloudDocumentaiV1beta2OcrParams"
    },
    "GoogleCloudDocumentaiV1beta2EntityExtractionParams": {
      "type": "object",
      "properties": {
        "modelVersion": {
          "description": "Model version of the entity extraction. Default is\n\"builtin/stable\". Specify \"builtin/latest\" for the latest model.",
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable entity extraction."
        }
      },
      "description": "Parameters to control entity extraction behavior.",
      "id": "GoogleCloudDocumentaiV1beta2EntityExtractionParams"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the\npage.",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
    },
    "GoogleRpcStatus": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array"
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "properties": {
        "x": {
          "description": "X coordinate.",
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate."
        }
      },
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "properties": {
        "orientation": {
          "type": "string",
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right.\nTurn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down.\nTurn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left.\nTurn the head 90 degrees counterclockwise from upright to read."
          ]
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the current Layout within context of the object this\nlayout is for. e.g. confidence can be for a single token, a table,\na visual element, etc. depending on context. Range [0, 1]."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
      "description": "Visual element describing a layout unit on a page.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "bodyRows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "description": "Body rows of the table."
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Header rows of the table."
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable",
      "type": "object",
      "description": "A table representation similar to HTML table structure."
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "type": "object",
      "properties": {
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          },
          "description": "The text segments from the Document.text.",
          "type": "array"
        }
      },
      "description": "Text reference indexing into the Document.text.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "properties": {
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "width": {
          "description": "Page width.",
          "type": "number",
          "format": "float"
        },
        "height": {
          "type": "number",
          "description": "Page height.",
          "format": "float"
        }
      },
      "description": "Dimension for the page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "id": "GoogleCloudDocumentaiV1beta2GcsSource",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "properties": {
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "valueDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for value together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`,\n`Grand total`, `Phone number`, etc."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField",
      "description": "A form field detected on the page.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "properties": {
        "normalizedVertices": {
          "type": "array",
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          }
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "properties": {
        "lines": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          },
          "description": "A list of visually detected text lines on the page.\nA collection of tokens that a human would perceive as a line."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page.\nA block has a set of lines (collected into paragraphs) that have a common\nline-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          },
          "type": "array"
        },
        "formFields": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          },
          "description": "A list of visually detected form fields on the page."
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          },
          "description": "A list of visually detected tables on the page."
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          },
          "type": "array",
          "description": "A list of visually detected tokens on the page."
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "paragraphs": {
          "type": "array",
          "description": "A list of visually detected text paragraphs on the page.\nA collection of lines that a human would perceive as a paragraph.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          }
        },
        "visualElements": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          },
          "description": "A list of detected non-text visual elements e.g. checkbox,\nsignature etc. on the page.",
          "type": "array"
        },
        "pageNumber": {
          "type": "integer",
          "description": "1-based index for current Page in a parent Document.\nUseful when a page is taken out of a Document for individual\nprocessing.",
          "format": "int32"
        }
      },
      "description": "A page in a Document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage",
      "type": "object"
    },
    "GoogleTypeColor": {
      "description": "Represents a color in the RGBA color space. This representation is designed\nfor simplicity of conversion to/from color representations in various\nlanguages over compactness; for example, the fields of this representation\ncan be trivially provided to the constructor of \"java.awt.Color\" in Java; it\ncan also be trivially provided to UIColor's \"+colorWithRed:green:blue:alpha\"\nmethod in iOS; and, with just a little work, it can be easily formatted into\na CSS \"rgba()\" string in JavaScript, as well.\n\nNote: this proto does not carry information about the absolute color space\nthat should be used to interpret the RGB value (e.g. sRGB, Adobe RGB,\nDCI-P3, BT.2020, etc.). By default, applications SHOULD assume the sRGB color\nspace.\n\nNote: when color equality needs to be decided, implementations, unless\ndocumented otherwise, will treat two colors to be equal if all their red,\ngreen, blue and alpha values each differ by at most 1e-5.\n\nExample (Java):\n\n     import com.google.type.Color;\n\n     // ...\n     public static java.awt.Color fromProto(Color protocolor) {\n       float alpha = protocolor.hasAlpha()\n           ? protocolor.getAlpha().getValue()\n           : 1.0;\n\n       return new java.awt.Color(\n           protocolor.getRed(),\n           protocolor.getGreen(),\n           protocolor.getBlue(),\n           alpha);\n     }\n\n     public static Color toProto(java.awt.Color color) {\n       float red = (float) color.getRed();\n       float green = (float) color.getGreen();\n       float blue = (float) color.getBlue();\n       float denominator = 255.0;\n       Color.Builder resultBuilder =\n           Color\n               .newBuilder()\n               .setRed(red / denominator)\n               .setGreen(green / denominator)\n               .setBlue(blue / denominator);\n       int alpha = color.getAlpha();\n       if (alpha != 255) {\n         result.setAlpha(\n             FloatValue\n                 .newBuilder()\n                 .setValue(((float) alpha) / denominator)\n                 .build());\n       }\n       return resultBuilder.build();\n     }\n     // ...\n\nExample (iOS / Obj-C):\n\n     // ...\n     static UIColor* fromProto(Color* protocolor) {\n        float red = [protocolor red];\n        float green = [protocolor green];\n        float blue = [protocolor blue];\n        FloatValue* alpha_wrapper = [protocolor alpha];\n        float alpha = 1.0;\n        if (alpha_wrapper != nil) {\n          alpha = [alpha_wrapper value];\n        }\n        return [UIColor colorWithRed:red green:green blue:blue alpha:alpha];\n     }\n\n     static Color* toProto(UIColor* color) {\n         CGFloat red, green, blue, alpha;\n         if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) {\n           return nil;\n         }\n         Color* result = [[Color alloc] init];\n         [result setRed:red];\n         [result setGreen:green];\n         [result setBlue:blue];\n         if (alpha \u003c= 0.9999) {\n           [result setAlpha:floatWrapperWithValue(alpha)];\n         }\n         [result autorelease];\n         return result;\n    }\n    // ...\n\n Example (JavaScript):\n\n    // ...\n\n    var protoToCssColor = function(rgb_color) {\n       var redFrac = rgb_color.red || 0.0;\n       var greenFrac = rgb_color.green || 0.0;\n       var blueFrac = rgb_color.blue || 0.0;\n       var red = Math.floor(redFrac * 255);\n       var green = Math.floor(greenFrac * 255);\n       var blue = Math.floor(blueFrac * 255);\n\n       if (!('alpha' in rgb_color)) {\n          return rgbToCssColor_(red, green, blue);\n       }\n\n       var alphaFrac = rgb_color.alpha.value || 0.0;\n       var rgbParams = [red, green, blue].join(',');\n       return ['rgba(', rgbParams, ',', alphaFrac, ')'].join('');\n    };\n\n    var rgbToCssColor_ = function(red, green, blue) {\n      var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue);\n      var hexString = rgbNumber.toString(16);\n      var missingZeros = 6 - hexString.length;\n      var resultBuilder = ['#'];\n      for (var i = 0; i \u003c missingZeros; i++) {\n         resultBuilder.push('0');\n      }\n      resultBuilder.push(hexString);\n      return resultBuilder.join('');\n    };\n\n    // ...",
      "id": "GoogleTypeColor",
      "type": "object",
      "properties": {
        "blue": {
          "type": "number",
          "format": "float",
          "description": "The amount of blue in the color as a value in the interval [0, 1]."
        },
        "red": {
          "format": "float",
          "type": "number",
          "description": "The amount of red in the color as a value in the interval [0, 1]."
        },
        "alpha": {
          "type": "number",
          "format": "float",
          "description": "The fraction of this color that should be applied to the pixel. That is,\nthe final pixel color is defined by the equation:\n\n  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0)."
        },
        "green": {
          "type": "number",
          "format": "float",
          "description": "The amount of green in the color as a value in the interval [0, 1]."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices.",
          "type": "array"
        },
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          },
          "description": "The bounding polygon vertices."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the\npage.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Line."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "type": "object",
      "description": "A collection of tokens that a human would perceive as a line.\nDoes not cross column boundaries, can be horizontal, vertical, etc."
    },
    "GoogleCloudDocumentaiV1beta2DocumentTranslation": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTranslation",
      "description": "A translation of the text segment.",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Provenance of the translation.\nText anchor indexing into the Document.text."
        },
        "translatedText": {
          "type": "string",
          "description": "Text translated into the target language."
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "properties": {
        "mentionText": {
          "type": "string",
          "description": "Text value in the document e.g. `1600 Amphitheatre Pkwy`."
        },
        "textAnchor": {
          "description": "Provenance of the entity.\nText anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "type": {
          "description": "Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "mentionId": {
          "description": "Deprecated.  Use `id` field instead.",
          "type": "string"
        },
        "confidence": {
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1].",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity",
      "type": "object",
      "description": "A phrase in the text that is a known entity type, such as a person, an\norganization, or location."
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
          },
          "description": "Required. Individual requests for each document."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest",
      "description": "Request to batch process documents as an asynchronous operation. The output\nis written to Cloud Storage as JSON in the [Document] format."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "description": "A cell representation inside the table.",
      "properties": {
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "rowSpan": {
          "type": "integer",
          "description": "How many rows this cell spans.",
          "format": "int32"
        },
        "colSpan": {
          "description": "How many columns this cell spans.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds\nwhich indicate that the text extends into another document shard for\nlarge sharded documents. See ShardInfo.text_offset",
      "type": "object",
      "properties": {
        "endIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment half open end UTF-8 char index in the\nDocument.text."
        },
        "startIndex": {
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "type": "object",
      "description": "For a large document, sharding may be performed to produce several\ndocument shards. Each document shard contains this field to detail which\nshard it is.",
      "properties": {
        "shardIndex": {
          "format": "int64",
          "description": "The 0-based index of this shard.",
          "type": "string"
        },
        "shardCount": {
          "description": "Total number of shards.",
          "format": "int64",
          "type": "string"
        },
        "textOffset": {
          "type": "string",
          "description": "The index of the first character in Document.text in the overall\ndocument global text.",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig",
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination"
        },
        "pagesPerShard": {
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on\nGoogle Cloud Storage.\n\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 parsed pages will be\nproduced. If `pages_per_shard` = 20, then 5 Document shard JSON files each\ncontaining 20 parsed pages will be written under the prefix\nOutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where\nx and y are 1-indexed page numbers.\n\nExample GCS outputs with 157 pages and pages_per_shard = 50:\n\n\u003cprefix\u003epages-001-to-050.json\n\u003cprefix\u003epages-051-to-100.json\n\u003cprefix\u003epages-101-to-150.json\n\u003cprefix\u003epages-151-to-157.json",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "The desired output location and metadata."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Detected language for a structural component."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock",
      "description": "A block has a set of lines (collected into paragraphs) that have a\ncommon line-spacing and orientation.",
      "type": "object",
      "properties": {
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle",
      "type": "object",
      "description": "Annotation for common text style attributes. This adheres to CSS\nconventions as much as possible.",
      "properties": {
        "textDecoration": {
          "description": "Text decoration. Follows CSS standard.\n\u003ctext-decoration-line\u003e \u003ctext-decoration-color\u003e \u003ctext-decoration-style\u003e\nhttps://www.w3schools.com/cssref/pr_text_text-decoration.asp",
          "type": "string"
        },
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter.\nhttps://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize"
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textStyle": {
          "type": "string",
          "description": "Text style. Possible values are normal, italic, and oblique.\nhttps://www.w3schools.com/cssref/pr_font_font-style.asp"
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata",
      "type": "object",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "The state of the current batch processing.",
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ]
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "description": "Font size with unit.",
      "properties": {
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.)."
        },
        "size": {
          "description": "Font size for the text.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "description": "A row of table cells.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow",
      "properties": {
        "cells": {
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "type": "object",
      "properties": {
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Token."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken",
      "description": "A detected token."
    },
    "GoogleCloudDocumentaiV1beta2AutoMlParams": {
      "id": "GoogleCloudDocumentaiV1beta2AutoMlParams",
      "description": "Parameters to control AutoML model prediction behavior.",
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "description": "Resource name of the AutoML model.\n\nFormat: `projects/{project-id}/locations/{location-id}/models/{model-id}`."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Paragraph."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "description": "Text reference indexing into the Document.text.",
      "type": "object",
      "properties": {
        "textSegments": {
          "description": "The text segments from the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "type": "object",
      "description": "Response to a single document processing request.",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse",
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig",
          "description": "The output location of the parsed responses. The responses are written to\nthis location as JSON-serialized `Document` objects."
        },
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding\ninput config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "properties": {
        "headerRows": {
          "description": "Header rows of the table.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          }
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "bodyRows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "description": "Body rows of the table."
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "description": "A table representation similar to HTML table structure."
    }
  },
  "ownerName": "Google"
}
