/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.mybusinessverifications.v1.model;

/**
 * A subset of location info. See the [help center article]
 * (https://support.google.com/business/answer/3038177) for a detailed description of these fields,
 * or the [category endpoint](/my-business/reference/rest/v4/categories) for a list of valid
 * business categories.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the My Business Verifications API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Location extends com.google.api.client.json.GenericJson {

  /**
   * Required. A precise, accurate address to describe your business location. PO boxes or mailboxes
   * located at remote locations are not acceptable. At this time, you can specify a maximum of five
   * `address_lines` values in the address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PostalAddress address;

  /**
   * Required. Location name should reflect your business's real-world name, as used consistently on
   * your storefront, website, and stationery, and as known to customers. Any additional
   * information, when relevant, can be included in other fields of the resource (for example,
   * `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer
   * "Google" over "Google Inc. - Mountain View Corporate Headquarters"). Don't include marketing
   * taglines, store codes, special characters, hours or closed/open status, phone numbers, website
   * URLs, service/product information, location/address or directions, or containment information
   * (for example, "Chase ATM in Duane Reade").
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Id of the category that best describes the core business this location engages in.
   * e.g. gcid:bakery.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryCategoryId;

  /**
   * Optional. A phone number that connects to your individual business location as directly as
   * possible. Use a local phone number instead of a central, call center helpline number whenever
   * possible.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryPhone;

  /**
   * Optional. A URL for this business. If possible, use a URL that represents this individual
   * business location instead of a generic website/URL that represents all locations, or the brand.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String websiteUri;

  /**
   * Required. A precise, accurate address to describe your business location. PO boxes or mailboxes
   * located at remote locations are not acceptable. At this time, you can specify a maximum of five
   * `address_lines` values in the address.
   * @return value or {@code null} for none
   */
  public PostalAddress getAddress() {
    return address;
  }

  /**
   * Required. A precise, accurate address to describe your business location. PO boxes or mailboxes
   * located at remote locations are not acceptable. At this time, you can specify a maximum of five
   * `address_lines` values in the address.
   * @param address address or {@code null} for none
   */
  public Location setAddress(PostalAddress address) {
    this.address = address;
    return this;
  }

  /**
   * Required. Location name should reflect your business's real-world name, as used consistently on
   * your storefront, website, and stationery, and as known to customers. Any additional
   * information, when relevant, can be included in other fields of the resource (for example,
   * `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer
   * "Google" over "Google Inc. - Mountain View Corporate Headquarters"). Don't include marketing
   * taglines, store codes, special characters, hours or closed/open status, phone numbers, website
   * URLs, service/product information, location/address or directions, or containment information
   * (for example, "Chase ATM in Duane Reade").
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. Location name should reflect your business's real-world name, as used consistently on
   * your storefront, website, and stationery, and as known to customers. Any additional
   * information, when relevant, can be included in other fields of the resource (for example,
   * `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer
   * "Google" over "Google Inc. - Mountain View Corporate Headquarters"). Don't include marketing
   * taglines, store codes, special characters, hours or closed/open status, phone numbers, website
   * URLs, service/product information, location/address or directions, or containment information
   * (for example, "Chase ATM in Duane Reade").
   * @param name name or {@code null} for none
   */
  public Location setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Id of the category that best describes the core business this location engages in.
   * e.g. gcid:bakery.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryCategoryId() {
    return primaryCategoryId;
  }

  /**
   * Required. Id of the category that best describes the core business this location engages in.
   * e.g. gcid:bakery.
   * @param primaryCategoryId primaryCategoryId or {@code null} for none
   */
  public Location setPrimaryCategoryId(java.lang.String primaryCategoryId) {
    this.primaryCategoryId = primaryCategoryId;
    return this;
  }

  /**
   * Optional. A phone number that connects to your individual business location as directly as
   * possible. Use a local phone number instead of a central, call center helpline number whenever
   * possible.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryPhone() {
    return primaryPhone;
  }

  /**
   * Optional. A phone number that connects to your individual business location as directly as
   * possible. Use a local phone number instead of a central, call center helpline number whenever
   * possible.
   * @param primaryPhone primaryPhone or {@code null} for none
   */
  public Location setPrimaryPhone(java.lang.String primaryPhone) {
    this.primaryPhone = primaryPhone;
    return this;
  }

  /**
   * Optional. A URL for this business. If possible, use a URL that represents this individual
   * business location instead of a generic website/URL that represents all locations, or the brand.
   * @return value or {@code null} for none
   */
  public java.lang.String getWebsiteUri() {
    return websiteUri;
  }

  /**
   * Optional. A URL for this business. If possible, use a URL that represents this individual
   * business location instead of a generic website/URL that represents all locations, or the brand.
   * @param websiteUri websiteUri or {@code null} for none
   */
  public Location setWebsiteUri(java.lang.String websiteUri) {
    this.websiteUri = websiteUri;
    return this;
  }

  @Override
  public Location set(String fieldName, Object value) {
    return (Location) super.set(fieldName, value);
  }

  @Override
  public Location clone() {
    return (Location) super.clone();
  }

}
