/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The anchor class holds content relevant to a citation, for example, the text before or after the
 * citation that explains what the citation is about.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ScienceCitationAnchor extends com.google.api.client.json.GenericJson {

  /**
   * Fingerprint of the referral document. The fingerprint should resist to small variance in the
   * document content. DO NOT USE IT!
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("DEPRECATEDSrcFP") @com.google.api.client.json.JsonString
  private java.math.BigInteger dEPRECATEDSrcFP;

  /**
   * Number of times this anchor text appears, only consider the text itself
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer count;

  /**
   * font face bitmask: kBold, kItalic, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer face;

  /**
   * font size, in px
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer size;

  /**
   * Space-delimited anchor words. Text that needs segmentation (like CJK or Thai) is unsegmented.
   * Generated by ScienceParseUtils::AppendTokenSeqToString()
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * one of the "Type" value defined below.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer type;

  /**
   * weight of the anchor by looking where we get this anchor text. It can be PR, court level, year,
   * or the combination of differerent aspects. weights are 1 - 128 defined as "Weights"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer weight;

  /**
   * Fingerprint of the referral document. The fingerprint should resist to small variance in the
   * document content. DO NOT USE IT!
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getDEPRECATEDSrcFP() {
    return dEPRECATEDSrcFP;
  }

  /**
   * Fingerprint of the referral document. The fingerprint should resist to small variance in the
   * document content. DO NOT USE IT!
   * @param dEPRECATEDSrcFP dEPRECATEDSrcFP or {@code null} for none
   */
  public ScienceCitationAnchor setDEPRECATEDSrcFP(java.math.BigInteger dEPRECATEDSrcFP) {
    this.dEPRECATEDSrcFP = dEPRECATEDSrcFP;
    return this;
  }

  /**
   * Number of times this anchor text appears, only consider the text itself
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * Number of times this anchor text appears, only consider the text itself
   * @param count count or {@code null} for none
   */
  public ScienceCitationAnchor setCount(java.lang.Integer count) {
    this.count = count;
    return this;
  }

  /**
   * font face bitmask: kBold, kItalic, etc.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFace() {
    return face;
  }

  /**
   * font face bitmask: kBold, kItalic, etc.
   * @param face face or {@code null} for none
   */
  public ScienceCitationAnchor setFace(java.lang.Integer face) {
    this.face = face;
    return this;
  }

  /**
   * font size, in px
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSize() {
    return size;
  }

  /**
   * font size, in px
   * @param size size or {@code null} for none
   */
  public ScienceCitationAnchor setSize(java.lang.Integer size) {
    this.size = size;
    return this;
  }

  /**
   * Space-delimited anchor words. Text that needs segmentation (like CJK or Thai) is unsegmented.
   * Generated by ScienceParseUtils::AppendTokenSeqToString()
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * Space-delimited anchor words. Text that needs segmentation (like CJK or Thai) is unsegmented.
   * Generated by ScienceParseUtils::AppendTokenSeqToString()
   * @param text text or {@code null} for none
   */
  public ScienceCitationAnchor setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  /**
   * one of the "Type" value defined below.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getType() {
    return type;
  }

  /**
   * one of the "Type" value defined below.
   * @param type type or {@code null} for none
   */
  public ScienceCitationAnchor setType(java.lang.Integer type) {
    this.type = type;
    return this;
  }

  /**
   * weight of the anchor by looking where we get this anchor text. It can be PR, court level, year,
   * or the combination of differerent aspects. weights are 1 - 128 defined as "Weights"
   * @return value or {@code null} for none
   */
  public java.lang.Integer getWeight() {
    return weight;
  }

  /**
   * weight of the anchor by looking where we get this anchor text. It can be PR, court level, year,
   * or the combination of differerent aspects. weights are 1 - 128 defined as "Weights"
   * @param weight weight or {@code null} for none
   */
  public ScienceCitationAnchor setWeight(java.lang.Integer weight) {
    this.weight = weight;
    return this;
  }

  @Override
  public ScienceCitationAnchor set(String fieldName, Object value) {
    return (ScienceCitationAnchor) super.set(fieldName, value);
  }

  @Override
  public ScienceCitationAnchor clone() {
    return (ScienceCitationAnchor) super.clone();
  }

}
