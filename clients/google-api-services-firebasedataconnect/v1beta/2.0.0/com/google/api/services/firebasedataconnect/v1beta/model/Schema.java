/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebasedataconnect.v1beta.model;

/**
 * The application schema of a Firebase Data Connect service.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Data Connect API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Schema extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Stores small amounts of arbitrary data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Output only. [Output only] Create time stamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. The data sources linked in the schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Datasource> datasources;

  static {
    // hack to force ProGuard to consider Datasource used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Datasource.class);
  }

  /**
   * Optional. Mutable human-readable name. 63 character limit.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. This checksum is computed by the server based on the value of other fields, and
   * may be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding. [AIP-154](https://google.aip.dev/154)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. Labels as key value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. The relative resource name of the schema, in the format: ```
   * projects/{project}/locations/{location}/services/{service}/schemas/{schema} ``` Right now, the
   * only supported schema is "main".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. A field that if true, indicates that the system is working to compile and deploy
   * the schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean reconciling;

  /**
   * Required. The source files that comprise the application schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Source source;

  /**
   * Output only. System-assigned, unique identifier.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. [Output only] Update time stamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. Stores small amounts of arbitrary data.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Optional. Stores small amounts of arbitrary data.
   * @param annotations annotations or {@code null} for none
   */
  public Schema setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Output only. [Output only] Create time stamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. [Output only] Create time stamp.
   * @param createTime createTime or {@code null} for none
   */
  public Schema setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. The data sources linked in the schema.
   * @return value or {@code null} for none
   */
  public java.util.List<Datasource> getDatasources() {
    return datasources;
  }

  /**
   * Required. The data sources linked in the schema.
   * @param datasources datasources or {@code null} for none
   */
  public Schema setDatasources(java.util.List<Datasource> datasources) {
    this.datasources = datasources;
    return this;
  }

  /**
   * Optional. Mutable human-readable name. 63 character limit.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Optional. Mutable human-readable name. 63 character limit.
   * @param displayName displayName or {@code null} for none
   */
  public Schema setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. This checksum is computed by the server based on the value of other fields, and
   * may be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding. [AIP-154](https://google.aip.dev/154)
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. This checksum is computed by the server based on the value of other fields, and
   * may be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding. [AIP-154](https://google.aip.dev/154)
   * @param etag etag or {@code null} for none
   */
  public Schema setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. Labels as key value pairs.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Labels as key value pairs.
   * @param labels labels or {@code null} for none
   */
  public Schema setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. The relative resource name of the schema, in the format: ```
   * projects/{project}/locations/{location}/services/{service}/schemas/{schema} ``` Right now, the
   * only supported schema is "main".
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The relative resource name of the schema, in the format: ```
   * projects/{project}/locations/{location}/services/{service}/schemas/{schema} ``` Right now, the
   * only supported schema is "main".
   * @param name name or {@code null} for none
   */
  public Schema setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. A field that if true, indicates that the system is working to compile and deploy
   * the schema.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReconciling() {
    return reconciling;
  }

  /**
   * Output only. A field that if true, indicates that the system is working to compile and deploy
   * the schema.
   * @param reconciling reconciling or {@code null} for none
   */
  public Schema setReconciling(java.lang.Boolean reconciling) {
    this.reconciling = reconciling;
    return this;
  }

  /**
   * Required. The source files that comprise the application schema.
   * @return value or {@code null} for none
   */
  public Source getSource() {
    return source;
  }

  /**
   * Required. The source files that comprise the application schema.
   * @param source source or {@code null} for none
   */
  public Schema setSource(Source source) {
    this.source = source;
    return this;
  }

  /**
   * Output only. System-assigned, unique identifier.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. System-assigned, unique identifier.
   * @param uid uid or {@code null} for none
   */
  public Schema setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. [Output only] Update time stamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. [Output only] Update time stamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public Schema setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Schema set(String fieldName, Object value) {
    return (Schema) super.set(fieldName, value);
  }

  @Override
  public Schema clone() {
    return (Schema) super.clone();
  }

}
