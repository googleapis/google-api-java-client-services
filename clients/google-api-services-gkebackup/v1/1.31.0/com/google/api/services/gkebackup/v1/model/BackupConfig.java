/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkebackup.v1.model;

/**
 * BackupConfig defines the configuration of Backups created via this BackupPlan.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup for GKE API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupConfig extends com.google.api.client.json.GenericJson {

  /**
   * If True, include all namespaced resources
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allNamespaces;

  /**
   * This defines a customer managed encryption key that will be used to encrypt the Backup
   * artifacts for Backups created via this BackupPlan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EncryptionKey encryptionKey;

  /**
   * This flag specifies whether Kubernetes Secret resources should be included when they fall into
   * the scope of Backups. Default: False
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean includeSecrets;

  /**
   * This flag specifies whether volume data should be backed up when PVCs are included in the scope
   * of a Backup. Default: False
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean includeVolumeData;

  /**
   * If set, include just the resources referenced by the listed ProtectedApplications.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NamespacedNames selectedApplications;

  /**
   * If set, include just the resources in the listed namespaces
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Namespaces selectedNamespaces;

  /**
   * If True, include all namespaced resources
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllNamespaces() {
    return allNamespaces;
  }

  /**
   * If True, include all namespaced resources
   * @param allNamespaces allNamespaces or {@code null} for none
   */
  public BackupConfig setAllNamespaces(java.lang.Boolean allNamespaces) {
    this.allNamespaces = allNamespaces;
    return this;
  }

  /**
   * This defines a customer managed encryption key that will be used to encrypt the Backup
   * artifacts for Backups created via this BackupPlan.
   * @return value or {@code null} for none
   */
  public EncryptionKey getEncryptionKey() {
    return encryptionKey;
  }

  /**
   * This defines a customer managed encryption key that will be used to encrypt the Backup
   * artifacts for Backups created via this BackupPlan.
   * @param encryptionKey encryptionKey or {@code null} for none
   */
  public BackupConfig setEncryptionKey(EncryptionKey encryptionKey) {
    this.encryptionKey = encryptionKey;
    return this;
  }

  /**
   * This flag specifies whether Kubernetes Secret resources should be included when they fall into
   * the scope of Backups. Default: False
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIncludeSecrets() {
    return includeSecrets;
  }

  /**
   * This flag specifies whether Kubernetes Secret resources should be included when they fall into
   * the scope of Backups. Default: False
   * @param includeSecrets includeSecrets or {@code null} for none
   */
  public BackupConfig setIncludeSecrets(java.lang.Boolean includeSecrets) {
    this.includeSecrets = includeSecrets;
    return this;
  }

  /**
   * This flag specifies whether volume data should be backed up when PVCs are included in the scope
   * of a Backup. Default: False
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIncludeVolumeData() {
    return includeVolumeData;
  }

  /**
   * This flag specifies whether volume data should be backed up when PVCs are included in the scope
   * of a Backup. Default: False
   * @param includeVolumeData includeVolumeData or {@code null} for none
   */
  public BackupConfig setIncludeVolumeData(java.lang.Boolean includeVolumeData) {
    this.includeVolumeData = includeVolumeData;
    return this;
  }

  /**
   * If set, include just the resources referenced by the listed ProtectedApplications.
   * @return value or {@code null} for none
   */
  public NamespacedNames getSelectedApplications() {
    return selectedApplications;
  }

  /**
   * If set, include just the resources referenced by the listed ProtectedApplications.
   * @param selectedApplications selectedApplications or {@code null} for none
   */
  public BackupConfig setSelectedApplications(NamespacedNames selectedApplications) {
    this.selectedApplications = selectedApplications;
    return this;
  }

  /**
   * If set, include just the resources in the listed namespaces
   * @return value or {@code null} for none
   */
  public Namespaces getSelectedNamespaces() {
    return selectedNamespaces;
  }

  /**
   * If set, include just the resources in the listed namespaces
   * @param selectedNamespaces selectedNamespaces or {@code null} for none
   */
  public BackupConfig setSelectedNamespaces(Namespaces selectedNamespaces) {
    this.selectedNamespaces = selectedNamespaces;
    return this;
  }

  @Override
  public BackupConfig set(String fieldName, Object value) {
    return (BackupConfig) super.set(fieldName, value);
  }

  @Override
  public BackupConfig clone() {
    return (BackupConfig) super.clone();
  }

}
