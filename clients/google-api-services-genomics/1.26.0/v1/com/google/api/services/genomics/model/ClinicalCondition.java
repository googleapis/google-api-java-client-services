/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * Model definition for ClinicalCondition.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ClinicalCondition extends com.google.api.client.json.GenericJson {

  /**
   * The MedGen concept id associated with this gene. Search for these IDs at
   * http://www.ncbi.nlm.nih.gov/medgen/
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String conceptId;

  /**
   * The set of external IDs for this condition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ExternalId> externalIds;

  /**
   * A set of names for the condition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> names;

  /**
   * The OMIM id for this condition. Search for these IDs at http://omim.org/
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String omimId;

  /**
   * The MedGen concept id associated with this gene. Search for these IDs at
   * http://www.ncbi.nlm.nih.gov/medgen/
   * @return value or {@code null} for none
   */
  public java.lang.String getConceptId() {
    return conceptId;
  }

  /**
   * The MedGen concept id associated with this gene. Search for these IDs at
   * http://www.ncbi.nlm.nih.gov/medgen/
   * @param conceptId conceptId or {@code null} for none
   */
  public ClinicalCondition setConceptId(java.lang.String conceptId) {
    this.conceptId = conceptId;
    return this;
  }

  /**
   * The set of external IDs for this condition.
   * @return value or {@code null} for none
   */
  public java.util.List<ExternalId> getExternalIds() {
    return externalIds;
  }

  /**
   * The set of external IDs for this condition.
   * @param externalIds externalIds or {@code null} for none
   */
  public ClinicalCondition setExternalIds(java.util.List<ExternalId> externalIds) {
    this.externalIds = externalIds;
    return this;
  }

  /**
   * A set of names for the condition.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getNames() {
    return names;
  }

  /**
   * A set of names for the condition.
   * @param names names or {@code null} for none
   */
  public ClinicalCondition setNames(java.util.List<java.lang.String> names) {
    this.names = names;
    return this;
  }

  /**
   * The OMIM id for this condition. Search for these IDs at http://omim.org/
   * @return value or {@code null} for none
   */
  public java.lang.String getOmimId() {
    return omimId;
  }

  /**
   * The OMIM id for this condition. Search for these IDs at http://omim.org/
   * @param omimId omimId or {@code null} for none
   */
  public ClinicalCondition setOmimId(java.lang.String omimId) {
    this.omimId = omimId;
    return this;
  }

  @Override
  public ClinicalCondition set(String fieldName, Object value) {
    return (ClinicalCondition) super.set(fieldName, value);
  }

  @Override
  public ClinicalCondition clone() {
    return (ClinicalCondition) super.clone();
  }

}
