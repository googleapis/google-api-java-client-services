/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1.model;

/**
 * Model definition for
 * EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Ancestor iteration number for the task(it will only be non-empty if the task is under 'private
   * workflow')
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> ancestorIterationNumbers;

  /**
   * Ancestor task number for the task(it will only be non-empty if the task is under 'private
   * workflow')
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> ancestorTaskNumbers;

  /**
   * the event attempt number this snapshot belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer eventAttemptNum;

  /**
   * The direct integration which the event execution snapshots belongs to
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String integrationName;

  /**
   * the task attempt number this snapshot belongs to. Could be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer taskAttemptNum;

  /**
   * the task label associated with this snapshot. Could be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String taskLabel;

  /**
   * the task name associated with this snapshot. Could be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String taskName;

  /**
   * The task number associated with this snapshot. Could be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String taskNumber;

  /**
   * Ancestor iteration number for the task(it will only be non-empty if the task is under 'private
   * workflow')
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAncestorIterationNumbers() {
    return ancestorIterationNumbers;
  }

  /**
   * Ancestor iteration number for the task(it will only be non-empty if the task is under 'private
   * workflow')
   * @param ancestorIterationNumbers ancestorIterationNumbers or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata setAncestorIterationNumbers(java.util.List<java.lang.String> ancestorIterationNumbers) {
    this.ancestorIterationNumbers = ancestorIterationNumbers;
    return this;
  }

  /**
   * Ancestor task number for the task(it will only be non-empty if the task is under 'private
   * workflow')
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAncestorTaskNumbers() {
    return ancestorTaskNumbers;
  }

  /**
   * Ancestor task number for the task(it will only be non-empty if the task is under 'private
   * workflow')
   * @param ancestorTaskNumbers ancestorTaskNumbers or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata setAncestorTaskNumbers(java.util.List<java.lang.String> ancestorTaskNumbers) {
    this.ancestorTaskNumbers = ancestorTaskNumbers;
    return this;
  }

  /**
   * the event attempt number this snapshot belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEventAttemptNum() {
    return eventAttemptNum;
  }

  /**
   * the event attempt number this snapshot belongs to.
   * @param eventAttemptNum eventAttemptNum or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata setEventAttemptNum(java.lang.Integer eventAttemptNum) {
    this.eventAttemptNum = eventAttemptNum;
    return this;
  }

  /**
   * The direct integration which the event execution snapshots belongs to
   * @return value or {@code null} for none
   */
  public java.lang.String getIntegrationName() {
    return integrationName;
  }

  /**
   * The direct integration which the event execution snapshots belongs to
   * @param integrationName integrationName or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata setIntegrationName(java.lang.String integrationName) {
    this.integrationName = integrationName;
    return this;
  }

  /**
   * the task attempt number this snapshot belongs to. Could be empty.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTaskAttemptNum() {
    return taskAttemptNum;
  }

  /**
   * the task attempt number this snapshot belongs to. Could be empty.
   * @param taskAttemptNum taskAttemptNum or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata setTaskAttemptNum(java.lang.Integer taskAttemptNum) {
    this.taskAttemptNum = taskAttemptNum;
    return this;
  }

  /**
   * the task label associated with this snapshot. Could be empty.
   * @return value or {@code null} for none
   */
  public java.lang.String getTaskLabel() {
    return taskLabel;
  }

  /**
   * the task label associated with this snapshot. Could be empty.
   * @param taskLabel taskLabel or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata setTaskLabel(java.lang.String taskLabel) {
    this.taskLabel = taskLabel;
    return this;
  }

  /**
   * the task name associated with this snapshot. Could be empty.
   * @return value or {@code null} for none
   */
  public java.lang.String getTaskName() {
    return taskName;
  }

  /**
   * the task name associated with this snapshot. Could be empty.
   * @param taskName taskName or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata setTaskName(java.lang.String taskName) {
    this.taskName = taskName;
    return this;
  }

  /**
   * The task number associated with this snapshot. Could be empty.
   * @return value or {@code null} for none
   */
  public java.lang.String getTaskNumber() {
    return taskNumber;
  }

  /**
   * The task number associated with this snapshot. Could be empty.
   * @param taskNumber taskNumber or {@code null} for none
   */
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata setTaskNumber(java.lang.String taskNumber) {
    this.taskNumber = taskNumber;
    return this;
  }

  @Override
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata set(String fieldName, Object value) {
    return (EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata) super.set(fieldName, value);
  }

  @Override
  public EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata clone() {
    return (EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata) super.clone();
  }

}
