/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.bigqueryreservation.v1alpha2;

/**
 * Service definition for BigQueryReservation (v1alpha2).
 *
 * <p>
 * A service to modify your BigQuery flat-rate reservations.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/bigquery/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BigQueryReservationRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class BigQueryReservation extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the BigQuery Reservation API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://bigqueryreservation.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://bigqueryreservation.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public BigQueryReservation(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  BigQueryReservation(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BigQueryReservation bigqueryreservation = new BigQueryReservation(...);}
   *   {@code BigQueryReservation.Projects.List request = bigqueryreservation.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BigQueryReservation bigqueryreservation = new BigQueryReservation(...);}
     *   {@code BigQueryReservation.Locations.List request = bigqueryreservation.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Look up grants for a specified resource for a particular region. If the request is about a
       * project: 1) Grants created on the project will be returned if they exist. 2) Otherwise grants
       * created on the closest ancestor will be returned. 3) Grants for different JobTypes will all be
       * returned. Same logic applies if the request is about a folder. If the request is about an
       * organization, then grants created on the organization will be returned (organization doesn't have
       * ancestors). Comparing to ListReservationGrants, there are two behavior differences: 1) permission
       * on the grantee will be verified in this API. 2) Hierarchy lookup (project->folder->organization)
       * happens in this API.
       *
       * Create a request for the method "locations.searchReservationGrants".
       *
       * This request holds the parameters needed by the bigqueryreservation server.  After setting any
       * optional parameters, call the {@link SearchReservationGrants#execute()} method to invoke the
       * remote operation.
       *
       * @param parent The parent resource name (containing project and location), which owns the grants. e.g.:
       *        "projects/myproject/locations/us-central1".
       * @return the request
       */
      public SearchReservationGrants searchReservationGrants(java.lang.String parent) throws java.io.IOException {
        SearchReservationGrants result = new SearchReservationGrants(parent);
        initialize(result);
        return result;
      }

      public class SearchReservationGrants extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.SearchReservationGrantsResponse> {

        private static final String REST_PATH = "v1alpha2/{+parent}:SearchReservationGrants";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Look up grants for a specified resource for a particular region. If the request is about a
         * project: 1) Grants created on the project will be returned if they exist. 2) Otherwise grants
         * created on the closest ancestor will be returned. 3) Grants for different JobTypes will all be
         * returned. Same logic applies if the request is about a folder. If the request is about an
         * organization, then grants created on the organization will be returned (organization doesn't
         * have ancestors). Comparing to ListReservationGrants, there are two behavior differences: 1)
         * permission on the grantee will be verified in this API. 2) Hierarchy lookup
         * (project->folder->organization) happens in this API.
         *
         * Create a request for the method "locations.searchReservationGrants".
         *
         * This request holds the parameters needed by the the bigqueryreservation server.  After setting
         * any optional parameters, call the {@link SearchReservationGrants#execute()} method to invoke
         * the remote operation. <p> {@link SearchReservationGrants#initialize(com.google.api.client.googl
         * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name (containing project and location), which owns the grants. e.g.:
       *        "projects/myproject/locations/us-central1".
         * @since 1.13
         */
        protected SearchReservationGrants(java.lang.String parent) {
          super(BigQueryReservation.this, "GET", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.SearchReservationGrantsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public SearchReservationGrants set$Xgafv(java.lang.String $Xgafv) {
          return (SearchReservationGrants) super.set$Xgafv($Xgafv);
        }

        @Override
        public SearchReservationGrants setAccessToken(java.lang.String accessToken) {
          return (SearchReservationGrants) super.setAccessToken(accessToken);
        }

        @Override
        public SearchReservationGrants setAlt(java.lang.String alt) {
          return (SearchReservationGrants) super.setAlt(alt);
        }

        @Override
        public SearchReservationGrants setCallback(java.lang.String callback) {
          return (SearchReservationGrants) super.setCallback(callback);
        }

        @Override
        public SearchReservationGrants setFields(java.lang.String fields) {
          return (SearchReservationGrants) super.setFields(fields);
        }

        @Override
        public SearchReservationGrants setKey(java.lang.String key) {
          return (SearchReservationGrants) super.setKey(key);
        }

        @Override
        public SearchReservationGrants setOauthToken(java.lang.String oauthToken) {
          return (SearchReservationGrants) super.setOauthToken(oauthToken);
        }

        @Override
        public SearchReservationGrants setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SearchReservationGrants) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SearchReservationGrants setQuotaUser(java.lang.String quotaUser) {
          return (SearchReservationGrants) super.setQuotaUser(quotaUser);
        }

        @Override
        public SearchReservationGrants setUploadType(java.lang.String uploadType) {
          return (SearchReservationGrants) super.setUploadType(uploadType);
        }

        @Override
        public SearchReservationGrants setUploadProtocol(java.lang.String uploadProtocol) {
          return (SearchReservationGrants) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name (containing project and location), which owns the grants. e.g.:
         * "projects/myproject/locations/us-central1".
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name (containing project and location), which owns the grants. e.g.:
       "projects/myproject/locations/us-central1".
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name (containing project and location), which owns the grants. e.g.:
         * "projects/myproject/locations/us-central1".
         */
        public SearchReservationGrants setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The maximum number of items to return. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of items to return. */
        public SearchReservationGrants setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous List request, if any.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous List request, if any. */
        public SearchReservationGrants setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * Please specify resource name as grantee in the query. e.g., "grantee=projects/myproject"
         * "grantee=folders/123" "grantee=organizations/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** Please specify resource name as grantee in the query. e.g., "grantee=projects/myproject"
       "grantee=folders/123" "grantee=organizations/456"
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * Please specify resource name as grantee in the query. e.g., "grantee=projects/myproject"
         * "grantee=folders/123" "grantee=organizations/456"
         */
        public SearchReservationGrants setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public SearchReservationGrants set(String parameterName, Object value) {
          return (SearchReservationGrants) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigQueryReservation bigqueryreservation = new BigQueryReservation(...);}
       *   {@code BigQueryReservation.Operations.List request = bigqueryreservation.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @return the request
         */
        public Cancel cancel(java.lang.String name) throws java.io.IOException {
          Cancel result = new Cancel(name);
          initialize(result);
          return result;
        }

        public class Cancel extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.Empty> {

          private static final String REST_PATH = "v1alpha2/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link Cancel#execute()} method to invoke the remote
           * operation. <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @since 1.13
           */
          protected Cancel(java.lang.String name) {
            super(BigQueryReservation.this, "POST", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.Operation> {

          private static final String REST_PATH = "v1alpha2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BigQueryReservation.this, "GET", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ReservationGrants collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigQueryReservation bigqueryreservation = new BigQueryReservation(...);}
       *   {@code BigQueryReservation.ReservationGrants.List request = bigqueryreservation.reservationGrants().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ReservationGrants reservationGrants() {
        return new ReservationGrants();
      }

      /**
       * The "reservationGrants" collection of methods.
       */
      public class ReservationGrants {

        /**
         * Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have 'bigquery.admin' permissions on
         * the project using the reservation and the project that owns this reservation. Returns
         * `google.rpc.Code.INVALID_ARGUMENT` when location of the grant does not match location of the
         * reservation.
         *
         * Create a request for the method "reservationGrants.create".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name of the reservation grant E.g.: projects/myproject/location/eu.
         * @param content the {@link com.google.api.services.bigqueryreservation.v1alpha2.model.ReservationGrant}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.bigqueryreservation.v1alpha2.model.ReservationGrant content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.ReservationGrant> {

          private static final String REST_PATH = "v1alpha2/{+parent}/reservationGrants";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have 'bigquery.admin' permissions
           * on the project using the reservation and the project that owns this reservation. Returns
           * `google.rpc.Code.INVALID_ARGUMENT` when location of the grant does not match location of the
           * reservation.
           *
           * Create a request for the method "reservationGrants.create".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name of the reservation grant E.g.: projects/myproject/location/eu.
           * @param content the {@link com.google.api.services.bigqueryreservation.v1alpha2.model.ReservationGrant}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.bigqueryreservation.v1alpha2.model.ReservationGrant content) {
            super(BigQueryReservation.this, "POST", REST_PATH, content, com.google.api.services.bigqueryreservation.v1alpha2.model.ReservationGrant.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The parent resource name of the reservation grant E.g.: projects/myproject/location/eu.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name of the reservation grant E.g.: projects/myproject/location/eu.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The parent resource name of the reservation grant E.g.: projects/myproject/location/eu.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a reservation grant. No expansion will happen. E.g: organizationA contains project1 and
         * project2. Reservation res1 exists. CreateReservationGrant was invoked previously and following
         * grants were created explicitly: Then deletion of won't affect . After deletion of , queries from
         * project1 will still use res1, while queries from project2 will use on-demand mode.
         *
         * Create a request for the method "reservationGrants.delete".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Name of the resource, e.g.: projects/myproject/locations/eu/reservationGrants/123
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.Empty> {

          private static final String REST_PATH = "v1alpha2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/reservationGrants/[^/]+$");

          /**
           * Deletes a reservation grant. No expansion will happen. E.g: organizationA contains project1 and
           * project2. Reservation res1 exists. CreateReservationGrant was invoked previously and following
           * grants were created explicitly: Then deletion of won't affect . After deletion of , queries
           * from project1 will still use res1, while queries from project2 will use on-demand mode.
           *
           * Create a request for the method "reservationGrants.delete".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Name of the resource, e.g.: projects/myproject/locations/eu/reservationGrants/123
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BigQueryReservation.this, "DELETE", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservationGrants/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Name of the resource, e.g.: projects/myproject/locations/eu/reservationGrants/123 */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Name of the resource, e.g.: projects/myproject/locations/eu/reservationGrants/123
           */
          public java.lang.String getName() {
            return name;
          }

          /** Name of the resource, e.g.: projects/myproject/locations/eu/reservationGrants/123 */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservationGrants/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Lists reservation grants. Only explicitly created grants will be returned. E.g: organizationA
         * contains project1 and project2. Reservation res1 exists. CreateReservationGrant was invoked
         * previously and following grants were created explicitly: Then this API will just return the above
         * two grants for reservation res1, and no expansion/merge will happen.
         *
         * Create a request for the method "reservationGrants.list".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name e.g.: projects/myproject/location/eu.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.ListReservationGrantsResponse> {

          private static final String REST_PATH = "v1alpha2/{+parent}/reservationGrants";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists reservation grants. Only explicitly created grants will be returned. E.g: organizationA
           * contains project1 and project2. Reservation res1 exists. CreateReservationGrant was invoked
           * previously and following grants were created explicitly: Then this API will just return the
           * above two grants for reservation res1, and no expansion/merge will happen.
           *
           * Create a request for the method "reservationGrants.list".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name e.g.: projects/myproject/location/eu.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BigQueryReservation.this, "GET", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.ListReservationGrantsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The parent resource name e.g.: projects/myproject/location/eu. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name e.g.: projects/myproject/location/eu.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** The parent resource name e.g.: projects/myproject/location/eu. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Reservations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigQueryReservation bigqueryreservation = new BigQueryReservation(...);}
       *   {@code BigQueryReservation.Reservations.List request = bigqueryreservation.reservations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Reservations reservations() {
        return new Reservations();
      }

      /**
       * The "reservations" collection of methods.
       */
      public class Reservations {

        /**
         * Creates a new reservation resource. Multiple reservations are created if the ancestor
         * reservations do not exist.
         *
         * Create a request for the method "reservations.create".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Project, location, and (optionally) reservation name. E.g., projects/myproject/locations/us-
         *        central1/reservations/parent
         * @param content the {@link com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation> {

          private static final String REST_PATH = "v1alpha2/{+parent}/reservations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new reservation resource. Multiple reservations are created if the ancestor
           * reservations do not exist.
           *
           * Create a request for the method "reservations.create".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Project, location, and (optionally) reservation name. E.g., projects/myproject/locations/us-
         *        central1/reservations/parent
           * @param content the {@link com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation content) {
            super(BigQueryReservation.this, "POST", REST_PATH, content, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Project, location, and (optionally) reservation name. E.g.,
           * projects/myproject/locations/us-central1/reservations/parent
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Project, location, and (optionally) reservation name. E.g., projects/myproject/locations/us-
         central1/reservations/parent
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Project, location, and (optionally) reservation name. E.g.,
           * projects/myproject/locations/us-central1/reservations/parent
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The reservation ID relative to the parent, e.g., "dev". This field must only contain
           * alphanumeric characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String reservationId;

          /** The reservation ID relative to the parent, e.g., "dev". This field must only contain alphanumeric
         characters.
           */
          public java.lang.String getReservationId() {
            return reservationId;
          }

          /**
           * The reservation ID relative to the parent, e.g., "dev". This field must only contain
           * alphanumeric characters.
           */
          public Create setReservationId(java.lang.String reservationId) {
            this.reservationId = reservationId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new reservation resource. Multiple reservations are created if the ancestor
         * reservations do not exist.
         *
         * Create a request for the method "reservations.createReservation".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link CreateReservation#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Project, location, and (optionally) reservation name. E.g., projects/myproject/locations/us-
         *        central1/reservations/parent
         * @param content the {@link com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation}
         * @return the request
         */
        public CreateReservation createReservation(java.lang.String parent, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation content) throws java.io.IOException {
          CreateReservation result = new CreateReservation(parent, content);
          initialize(result);
          return result;
        }

        public class CreateReservation extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation> {

          private static final String REST_PATH = "v1alpha2/{+parent}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/reservations/.*$");

          /**
           * Creates a new reservation resource. Multiple reservations are created if the ancestor
           * reservations do not exist.
           *
           * Create a request for the method "reservations.createReservation".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link CreateReservation#execute()} method to invoke the
           * remote operation. <p> {@link CreateReservation#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Project, location, and (optionally) reservation name. E.g., projects/myproject/locations/us-
         *        central1/reservations/parent
           * @param content the {@link com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation}
           * @since 1.13
           */
          protected CreateReservation(java.lang.String parent, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation content) {
            super(BigQueryReservation.this, "POST", REST_PATH, content, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservations/.*$");
            }
          }

          @Override
          public CreateReservation set$Xgafv(java.lang.String $Xgafv) {
            return (CreateReservation) super.set$Xgafv($Xgafv);
          }

          @Override
          public CreateReservation setAccessToken(java.lang.String accessToken) {
            return (CreateReservation) super.setAccessToken(accessToken);
          }

          @Override
          public CreateReservation setAlt(java.lang.String alt) {
            return (CreateReservation) super.setAlt(alt);
          }

          @Override
          public CreateReservation setCallback(java.lang.String callback) {
            return (CreateReservation) super.setCallback(callback);
          }

          @Override
          public CreateReservation setFields(java.lang.String fields) {
            return (CreateReservation) super.setFields(fields);
          }

          @Override
          public CreateReservation setKey(java.lang.String key) {
            return (CreateReservation) super.setKey(key);
          }

          @Override
          public CreateReservation setOauthToken(java.lang.String oauthToken) {
            return (CreateReservation) super.setOauthToken(oauthToken);
          }

          @Override
          public CreateReservation setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CreateReservation) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CreateReservation setQuotaUser(java.lang.String quotaUser) {
            return (CreateReservation) super.setQuotaUser(quotaUser);
          }

          @Override
          public CreateReservation setUploadType(java.lang.String uploadType) {
            return (CreateReservation) super.setUploadType(uploadType);
          }

          @Override
          public CreateReservation setUploadProtocol(java.lang.String uploadProtocol) {
            return (CreateReservation) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Project, location, and (optionally) reservation name. E.g.,
           * projects/myproject/locations/us-central1/reservations/parent
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Project, location, and (optionally) reservation name. E.g., projects/myproject/locations/us-
         central1/reservations/parent
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Project, location, and (optionally) reservation name. E.g.,
           * projects/myproject/locations/us-central1/reservations/parent
           */
          public CreateReservation setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservations/.*$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The reservation ID relative to the parent, e.g., "dev". This field must only contain
           * alphanumeric characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String reservationId;

          /** The reservation ID relative to the parent, e.g., "dev". This field must only contain alphanumeric
         characters.
           */
          public java.lang.String getReservationId() {
            return reservationId;
          }

          /**
           * The reservation ID relative to the parent, e.g., "dev". This field must only contain
           * alphanumeric characters.
           */
          public CreateReservation setReservationId(java.lang.String reservationId) {
            this.reservationId = reservationId;
            return this;
          }

          @Override
          public CreateReservation set(String parameterName, Object value) {
            return (CreateReservation) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a reservation. Returns `google.rpc.Code.FAILED_PRECONDITION` in the following cases: 1.
         * When reservation has child reservations. This check can be bypassed by setting
         * DeleteReservationRequest.force flag to true. 2. When top-level reservation with slot pools is
         * being deleted.
         *
         * Create a request for the method "reservations.delete".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
         *        central1/reservations/my_reservation
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.Empty> {

          private static final String REST_PATH = "v1alpha2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/reservations/.*$");

          /**
           * Deletes a reservation. Returns `google.rpc.Code.FAILED_PRECONDITION` in the following cases: 1.
           * When reservation has child reservations. This check can be bypassed by setting
           * DeleteReservationRequest.force flag to true. 2. When top-level reservation with slot pools is
           * being deleted.
           *
           * Create a request for the method "reservations.delete".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
         *        central1/reservations/my_reservation
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BigQueryReservation.this, "DELETE", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservations/.*$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
           * central1/reservations/my_reservation
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
         central1/reservations/my_reservation
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
           * central1/reservations/my_reservation
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservations/.*$");
            }
            this.name = name;
            return this;
          }

          /**
           * If true, deletes all the child reservations of the given reservation. Otherwise,
           * attempting to delete a reservation that has child reservations will fail with error
           * code `google.rpc.Code.FAILED_PRECONDITION`.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** If true, deletes all the child reservations of the given reservation. Otherwise, attempting to
         delete a reservation that has child reservations will fail with error code
         `google.rpc.Code.FAILED_PRECONDITION`.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * If true, deletes all the child reservations of the given reservation. Otherwise,
           * attempting to delete a reservation that has child reservations will fail with error
           * code `google.rpc.Code.FAILED_PRECONDITION`.
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns information about the reservation.
         *
         * Create a request for the method "reservations.get".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
         *        central1/reservations/path/to/reserv
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation> {

          private static final String REST_PATH = "v1alpha2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/reservations/.*$");

          /**
           * Returns information about the reservation.
           *
           * Create a request for the method "reservations.get".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
         *        central1/reservations/path/to/reserv
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BigQueryReservation.this, "GET", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservations/.*$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
           * central1/reservations/path/to/reserv
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
         central1/reservations/path/to/reserv
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Resource name of the reservation to retrieve. E.g., projects/myproject/locations/us-
           * central1/reservations/path/to/reserv
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservations/.*$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all the reservations for the project in the specified location.
         *
         * Create a request for the method "reservations.list".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The parent resource name containing project and location, e.g.: "projects/myproject/locations/us-
         *        central1"
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.ListReservationsResponse> {

          private static final String REST_PATH = "v1alpha2/{+parent}/reservations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all the reservations for the project in the specified location.
           *
           * Create a request for the method "reservations.list".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The parent resource name containing project and location, e.g.: "projects/myproject/locations/us-
         *        central1"
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BigQueryReservation.this, "GET", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.ListReservationsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The parent resource name containing project and location, e.g.:
           * "projects/myproject/locations/us-central1"
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The parent resource name containing project and location, e.g.: "projects/myproject/locations/us-
         central1"
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The parent resource name containing project and location, e.g.:
           * "projects/myproject/locations/us-central1"
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Can be used to filter out reservations based on names, capacity, etc, e.g.:
           * filter="reservation.slot_capacity > 200" filter="reservation.name = \"*dev\"" Advanced
           * filtering syntax can be [here](https://cloud.google.com/logging/docs/view/advanced-
           * filters).
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Can be used to filter out reservations based on names, capacity, etc, e.g.:
         filter="reservation.slot_capacity > 200" filter="reservation.name = \"*dev\"" Advanced filtering
         syntax can be [here](https://cloud.google.com/logging/docs/view/advanced-filters).
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Can be used to filter out reservations based on names, capacity, etc, e.g.:
           * filter="reservation.slot_capacity > 200" filter="reservation.name = \"*dev\"" Advanced
           * filtering syntax can be [here](https://cloud.google.com/logging/docs/view/advanced-
           * filters).
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The maximum number of items to return. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of items to return. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing reservation resource. Applicable only for child reservations.
         *
         * Create a request for the method "reservations.patch".
         *
         * This request holds the parameters needed by the bigqueryreservation server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the reservation, e.g., "projects/locations/reservations/dev/team/product".
         *        Reservation names (e.g., "dev/team/product") exceeding a depth of six will fail with
         *        `google.rpc.Code.INVALID_ARGUMENT`.
         * @param content the {@link com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation> {

          private static final String REST_PATH = "v1alpha2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/reservations/[^/]+/.*$");

          /**
           * Updates an existing reservation resource. Applicable only for child reservations.
           *
           * Create a request for the method "reservations.patch".
           *
           * This request holds the parameters needed by the the bigqueryreservation server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the reservation, e.g., "projects/locations/reservations/dev/team/product".
         *        Reservation names (e.g., "dev/team/product") exceeding a depth of six will fail with
         *        `google.rpc.Code.INVALID_ARGUMENT`.
           * @param content the {@link com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation content) {
            super(BigQueryReservation.this, "PATCH", REST_PATH, content, com.google.api.services.bigqueryreservation.v1alpha2.model.Reservation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/.*$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the reservation, e.g.,
           * "projects/locations/reservations/dev/team/product". Reservation names (e.g.,
           * "dev/team/product") exceeding a depth of six will fail with
           * `google.rpc.Code.INVALID_ARGUMENT`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the reservation, e.g., "projects/locations/reservations/dev/team/product".
         Reservation names (e.g., "dev/team/product") exceeding a depth of six will fail with
         `google.rpc.Code.INVALID_ARGUMENT`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the reservation, e.g.,
           * "projects/locations/reservations/dev/team/product". Reservation names (e.g.,
           * "dev/team/product") exceeding a depth of six will fail with
           * `google.rpc.Code.INVALID_ARGUMENT`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/.*$");
            }
            this.name = name;
            return this;
          }

          /** Standard field mask for the set of fields to be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Standard field mask for the set of fields to be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Standard field mask for the set of fields to be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the SlotPools collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code BigQueryReservation bigqueryreservation = new BigQueryReservation(...);}
         *   {@code BigQueryReservation.SlotPools.List request = bigqueryreservation.slotPools().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public SlotPools slotPools() {
          return new SlotPools();
        }

        /**
         * The "slotPools" collection of methods.
         */
        public class SlotPools {

          /**
           * Deletes a slot pool. Attempting to delete slot pool before its commitment_end_time will fail with
           * the error code `google.rpc.Code.FAILED_PRECONDITION`.
           *
           * Create a request for the method "slotPools.delete".
           *
           * This request holds the parameters needed by the bigqueryreservation server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of the slot pool to delete. E.g., projects/myproject/locations/us-
           *        central1/reservations/my_reservation/slotPools/123
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.Empty> {

            private static final String REST_PATH = "v1alpha2/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/reservations/[^/]+/slotPools/[^/]+$");

            /**
             * Deletes a slot pool. Attempting to delete slot pool before its commitment_end_time will fail
             * with the error code `google.rpc.Code.FAILED_PRECONDITION`.
             *
             * Create a request for the method "slotPools.delete".
             *
             * This request holds the parameters needed by the the bigqueryreservation server.  After setting
             * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
             * operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of the slot pool to delete. E.g., projects/myproject/locations/us-
           *        central1/reservations/my_reservation/slotPools/123
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(BigQueryReservation.this, "DELETE", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/slotPools/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of the slot pool to delete. E.g., projects/myproject/locations/us-
             * central1/reservations/my_reservation/slotPools/123
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of the slot pool to delete. E.g., projects/myproject/locations/us-
           central1/reservations/my_reservation/slotPools/123
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of the slot pool to delete. E.g., projects/myproject/locations/us-
             * central1/reservations/my_reservation/slotPools/123
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/slotPools/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns information about the slot pool.
           *
           * Create a request for the method "slotPools.get".
           *
           * This request holds the parameters needed by the bigqueryreservation server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of the slot pool to retrieve. E.g., projects/myproject/locations/us-
           *        central1/reservations/my_reservation/slotPools/123
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.SlotPool> {

            private static final String REST_PATH = "v1alpha2/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/reservations/[^/]+/slotPools/[^/]+$");

            /**
             * Returns information about the slot pool.
             *
             * Create a request for the method "slotPools.get".
             *
             * This request holds the parameters needed by the the bigqueryreservation server.  After setting
             * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             * <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of the slot pool to retrieve. E.g., projects/myproject/locations/us-
           *        central1/reservations/my_reservation/slotPools/123
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(BigQueryReservation.this, "GET", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.SlotPool.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/slotPools/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of the slot pool to retrieve. E.g., projects/myproject/locations/us-
             * central1/reservations/my_reservation/slotPools/123
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of the slot pool to retrieve. E.g., projects/myproject/locations/us-
           central1/reservations/my_reservation/slotPools/123
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of the slot pool to retrieve. E.g., projects/myproject/locations/us-
             * central1/reservations/my_reservation/slotPools/123
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/slotPools/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all the slot pools for the reservation.
           *
           * Create a request for the method "slotPools.list".
           *
           * This request holds the parameters needed by the bigqueryreservation server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Resource name of the parent reservation. Only top-level reservations can have slot pools. E.g.,
           *        projects/myproject/locations/us-central1/reservations/my_reservation
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends BigQueryReservationRequest<com.google.api.services.bigqueryreservation.v1alpha2.model.ListSlotPoolsResponse> {

            private static final String REST_PATH = "v1alpha2/{+parent}/slotPools";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/reservations/[^/]+$");

            /**
             * Lists all the slot pools for the reservation.
             *
             * Create a request for the method "slotPools.list".
             *
             * This request holds the parameters needed by the the bigqueryreservation server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Resource name of the parent reservation. Only top-level reservations can have slot pools. E.g.,
           *        projects/myproject/locations/us-central1/reservations/my_reservation
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(BigQueryReservation.this, "GET", REST_PATH, null, com.google.api.services.bigqueryreservation.v1alpha2.model.ListSlotPoolsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of the parent reservation. Only top-level reservations can have slot
             * pools. E.g., projects/myproject/locations/us-central1/reservations/my_reservation
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Resource name of the parent reservation. Only top-level reservations can have slot pools. E.g.,
           projects/myproject/locations/us-central1/reservations/my_reservation
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Resource name of the parent reservation. Only top-level reservations can have slot
             * pools. E.g., projects/myproject/locations/us-central1/reservations/my_reservation
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The maximum number of items to return. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of items to return.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The maximum number of items to return. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from a previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from a previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from a previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link BigQueryReservation}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link BigQueryReservation}. */
    @Override
    public BigQueryReservation build() {
      return new BigQueryReservation(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BigQueryReservationRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBigQueryReservationRequestInitializer(
        BigQueryReservationRequestInitializer bigqueryreservationRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(bigqueryreservationRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
