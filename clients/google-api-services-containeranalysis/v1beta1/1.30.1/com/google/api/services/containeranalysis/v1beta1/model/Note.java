/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.containeranalysis.v1beta1.model;

/**
 * A type of analysis that can be done for a resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Container Analysis API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Note extends com.google.api.client.json.GenericJson {

  /**
   * A note describing an attestation role.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Authority attestationAuthority;

  /**
   * A note describing a base image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Basis baseImage;

  /**
   * A note describing build provenance for a verifiable build.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Build build;

  /**
   * Output only. The time this note was created. This field can be used as a filter in list
   * requests.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * A note describing something that can be deployed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Deployable deployable;

  /**
   * A note describing the initial analysis of a resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Discovery discovery;

  /**
   * Time of expiration for this note. Empty if note does not expire.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expirationTime;

  /**
   * Output only. The type of analysis. This field can be used as a filter in list requests.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * A detailed description of this note.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String longDescription;

  /**
   * Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * A note describing a package hosted by various package managers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("package")
  private ContainerAnalysisPackage package__;

  /**
   * Other notes related to this note.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> relatedNoteNames;

  /**
   * URLs associated with this note.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RelatedUrl> relatedUrl;

  /**
   * A one sentence description of this note.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String shortDescription;

  /**
   * Output only. The time this note was last updated. This field can be used as a filter in list
   * requests.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * A note describing a package vulnerability.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Vulnerability vulnerability;

  /**
   * A note describing an attestation role.
   * @return value or {@code null} for none
   */
  public Authority getAttestationAuthority() {
    return attestationAuthority;
  }

  /**
   * A note describing an attestation role.
   * @param attestationAuthority attestationAuthority or {@code null} for none
   */
  public Note setAttestationAuthority(Authority attestationAuthority) {
    this.attestationAuthority = attestationAuthority;
    return this;
  }

  /**
   * A note describing a base image.
   * @return value or {@code null} for none
   */
  public Basis getBaseImage() {
    return baseImage;
  }

  /**
   * A note describing a base image.
   * @param baseImage baseImage or {@code null} for none
   */
  public Note setBaseImage(Basis baseImage) {
    this.baseImage = baseImage;
    return this;
  }

  /**
   * A note describing build provenance for a verifiable build.
   * @return value or {@code null} for none
   */
  public Build getBuild() {
    return build;
  }

  /**
   * A note describing build provenance for a verifiable build.
   * @param build build or {@code null} for none
   */
  public Note setBuild(Build build) {
    this.build = build;
    return this;
  }

  /**
   * Output only. The time this note was created. This field can be used as a filter in list
   * requests.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time this note was created. This field can be used as a filter in list
   * requests.
   * @param createTime createTime or {@code null} for none
   */
  public Note setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * A note describing something that can be deployed.
   * @return value or {@code null} for none
   */
  public Deployable getDeployable() {
    return deployable;
  }

  /**
   * A note describing something that can be deployed.
   * @param deployable deployable or {@code null} for none
   */
  public Note setDeployable(Deployable deployable) {
    this.deployable = deployable;
    return this;
  }

  /**
   * A note describing the initial analysis of a resource.
   * @return value or {@code null} for none
   */
  public Discovery getDiscovery() {
    return discovery;
  }

  /**
   * A note describing the initial analysis of a resource.
   * @param discovery discovery or {@code null} for none
   */
  public Note setDiscovery(Discovery discovery) {
    this.discovery = discovery;
    return this;
  }

  /**
   * Time of expiration for this note. Empty if note does not expire.
   * @return value or {@code null} for none
   */
  public String getExpirationTime() {
    return expirationTime;
  }

  /**
   * Time of expiration for this note. Empty if note does not expire.
   * @param expirationTime expirationTime or {@code null} for none
   */
  public Note setExpirationTime(String expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

  /**
   * Output only. The type of analysis. This field can be used as a filter in list requests.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Output only. The type of analysis. This field can be used as a filter in list requests.
   * @param kind kind or {@code null} for none
   */
  public Note setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * A detailed description of this note.
   * @return value or {@code null} for none
   */
  public java.lang.String getLongDescription() {
    return longDescription;
  }

  /**
   * A detailed description of this note.
   * @param longDescription longDescription or {@code null} for none
   */
  public Note setLongDescription(java.lang.String longDescription) {
    this.longDescription = longDescription;
    return this;
  }

  /**
   * Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.
   * @param name name or {@code null} for none
   */
  public Note setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * A note describing a package hosted by various package managers.
   * @return value or {@code null} for none
   */
  public ContainerAnalysisPackage getPackage() {
    return package__;
  }

  /**
   * A note describing a package hosted by various package managers.
   * @param package__ package__ or {@code null} for none
   */
  public Note setPackage(ContainerAnalysisPackage package__) {
    this.package__ = package__;
    return this;
  }

  /**
   * Other notes related to this note.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRelatedNoteNames() {
    return relatedNoteNames;
  }

  /**
   * Other notes related to this note.
   * @param relatedNoteNames relatedNoteNames or {@code null} for none
   */
  public Note setRelatedNoteNames(java.util.List<java.lang.String> relatedNoteNames) {
    this.relatedNoteNames = relatedNoteNames;
    return this;
  }

  /**
   * URLs associated with this note.
   * @return value or {@code null} for none
   */
  public java.util.List<RelatedUrl> getRelatedUrl() {
    return relatedUrl;
  }

  /**
   * URLs associated with this note.
   * @param relatedUrl relatedUrl or {@code null} for none
   */
  public Note setRelatedUrl(java.util.List<RelatedUrl> relatedUrl) {
    this.relatedUrl = relatedUrl;
    return this;
  }

  /**
   * A one sentence description of this note.
   * @return value or {@code null} for none
   */
  public java.lang.String getShortDescription() {
    return shortDescription;
  }

  /**
   * A one sentence description of this note.
   * @param shortDescription shortDescription or {@code null} for none
   */
  public Note setShortDescription(java.lang.String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Output only. The time this note was last updated. This field can be used as a filter in list
   * requests.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time this note was last updated. This field can be used as a filter in list
   * requests.
   * @param updateTime updateTime or {@code null} for none
   */
  public Note setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * A note describing a package vulnerability.
   * @return value or {@code null} for none
   */
  public Vulnerability getVulnerability() {
    return vulnerability;
  }

  /**
   * A note describing a package vulnerability.
   * @param vulnerability vulnerability or {@code null} for none
   */
  public Note setVulnerability(Vulnerability vulnerability) {
    this.vulnerability = vulnerability;
    return this;
  }

  @Override
  public Note set(String fieldName, Object value) {
    return (Note) super.set(fieldName, value);
  }

  @Override
  public Note clone() {
    return (Note) super.clone();
  }

}
