/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataform.v1beta1.model;

/**
 * Represents a Dataform workflow configuration.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dataform API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WorkflowConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The timestamp of when the WorkflowConfig was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cronSchedule;

  /**
   * Output only. All the metadata information that is used internally to serve the resource. For
   * example: timestamps, flags, status fields, etc. The format of this field is a JSON string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String internalMetadata;

  /**
   * Optional. If left unset, a default InvocationConfig will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InvocationConfig invocationConfig;

  /**
   * Identifier. The workflow config's name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Records of the 10 most recent scheduled execution attempts, ordered in descending
   * order of `execution_time`. Updated whenever automatic creation of a workflow invocation is
   * triggered by cron_schedule.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ScheduledExecutionRecord> recentScheduledExecutionRecords;

  static {
    // hack to force ProGuard to consider ScheduledExecutionRecord used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ScheduledExecutionRecord.class);
  }

  /**
   * Required. The name of the release config whose release_compilation_result should be executed.
   * Must be in the format `projects/locations/repositories/releaseConfigs`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String releaseConfig;

  /**
   * Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time
   * zone name from the time zone database
   * (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the
   * default is UTC.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String timeZone;

  /**
   * Output only. The timestamp of when the WorkflowConfig was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The timestamp of when the WorkflowConfig was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp of when the WorkflowConfig was created.
   * @param createTime createTime or {@code null} for none
   */
  public WorkflowConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
   * @return value or {@code null} for none
   */
  public java.lang.String getCronSchedule() {
    return cronSchedule;
  }

  /**
   * Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
   * @param cronSchedule cronSchedule or {@code null} for none
   */
  public WorkflowConfig setCronSchedule(java.lang.String cronSchedule) {
    this.cronSchedule = cronSchedule;
    return this;
  }

  /**
   * Output only. All the metadata information that is used internally to serve the resource. For
   * example: timestamps, flags, status fields, etc. The format of this field is a JSON string.
   * @return value or {@code null} for none
   */
  public java.lang.String getInternalMetadata() {
    return internalMetadata;
  }

  /**
   * Output only. All the metadata information that is used internally to serve the resource. For
   * example: timestamps, flags, status fields, etc. The format of this field is a JSON string.
   * @param internalMetadata internalMetadata or {@code null} for none
   */
  public WorkflowConfig setInternalMetadata(java.lang.String internalMetadata) {
    this.internalMetadata = internalMetadata;
    return this;
  }

  /**
   * Optional. If left unset, a default InvocationConfig will be used.
   * @return value or {@code null} for none
   */
  public InvocationConfig getInvocationConfig() {
    return invocationConfig;
  }

  /**
   * Optional. If left unset, a default InvocationConfig will be used.
   * @param invocationConfig invocationConfig or {@code null} for none
   */
  public WorkflowConfig setInvocationConfig(InvocationConfig invocationConfig) {
    this.invocationConfig = invocationConfig;
    return this;
  }

  /**
   * Identifier. The workflow config's name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The workflow config's name.
   * @param name name or {@code null} for none
   */
  public WorkflowConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Records of the 10 most recent scheduled execution attempts, ordered in descending
   * order of `execution_time`. Updated whenever automatic creation of a workflow invocation is
   * triggered by cron_schedule.
   * @return value or {@code null} for none
   */
  public java.util.List<ScheduledExecutionRecord> getRecentScheduledExecutionRecords() {
    return recentScheduledExecutionRecords;
  }

  /**
   * Output only. Records of the 10 most recent scheduled execution attempts, ordered in descending
   * order of `execution_time`. Updated whenever automatic creation of a workflow invocation is
   * triggered by cron_schedule.
   * @param recentScheduledExecutionRecords recentScheduledExecutionRecords or {@code null} for none
   */
  public WorkflowConfig setRecentScheduledExecutionRecords(java.util.List<ScheduledExecutionRecord> recentScheduledExecutionRecords) {
    this.recentScheduledExecutionRecords = recentScheduledExecutionRecords;
    return this;
  }

  /**
   * Required. The name of the release config whose release_compilation_result should be executed.
   * Must be in the format `projects/locations/repositories/releaseConfigs`.
   * @return value or {@code null} for none
   */
  public java.lang.String getReleaseConfig() {
    return releaseConfig;
  }

  /**
   * Required. The name of the release config whose release_compilation_result should be executed.
   * Must be in the format `projects/locations/repositories/releaseConfigs`.
   * @param releaseConfig releaseConfig or {@code null} for none
   */
  public WorkflowConfig setReleaseConfig(java.lang.String releaseConfig) {
    this.releaseConfig = releaseConfig;
    return this;
  }

  /**
   * Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time
   * zone name from the time zone database
   * (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the
   * default is UTC.
   * @return value or {@code null} for none
   */
  public java.lang.String getTimeZone() {
    return timeZone;
  }

  /**
   * Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time
   * zone name from the time zone database
   * (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the
   * default is UTC.
   * @param timeZone timeZone or {@code null} for none
   */
  public WorkflowConfig setTimeZone(java.lang.String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  /**
   * Output only. The timestamp of when the WorkflowConfig was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp of when the WorkflowConfig was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public WorkflowConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public WorkflowConfig set(String fieldName, Object value) {
    return (WorkflowConfig) super.set(fieldName, value);
  }

  @Override
  public WorkflowConfig clone() {
    return (WorkflowConfig) super.clone();
  }

}
