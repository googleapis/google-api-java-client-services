/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1;

/**
 * Service definition for ChromeManagement (v1).
 *
 * <p>
 * The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/chrome/management/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ChromeManagementRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ChromeManagement extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Chrome Management API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://chromemanagement.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://chromemanagement.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ChromeManagement(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ChromeManagement(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Customers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
   *   {@code ChromeManagement.Customers.List request = chromemanagement.customers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Customers customers() {
    return new Customers();
  }

  /**
   * The "customers" collection of methods.
   */
  public class Customers {

    /**
     * An accessor for creating requests from the Apps collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
     *   {@code ChromeManagement.Apps.List request = chromemanagement.apps().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apps apps() {
      return new Apps();
    }

    /**
     * The "apps" collection of methods.
     */
    public class Apps {

      /**
       * Generate summary of app installation requests.
       *
       * Create a request for the method "apps.countChromeAppRequests".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountChromeAppRequests#execute()} method to invoke the
       * remote operation.
       *
       * @param customer Required. Customer id or "my_customer" to use the customer associated to the account making the
       *        request.
       * @return the request
       */
      public CountChromeAppRequests countChromeAppRequests(java.lang.String customer) throws java.io.IOException {
        CountChromeAppRequests result = new CountChromeAppRequests(customer);
        initialize(result);
        return result;
      }

      public class CountChromeAppRequests extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeAppRequestsResponse> {

        private static final String REST_PATH = "v1/{+customer}/apps:countChromeAppRequests";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Generate summary of app installation requests.
         *
         * Create a request for the method "apps.countChromeAppRequests".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountChromeAppRequests#execute()} method to invoke the
         * remote operation. <p> {@link CountChromeAppRequests#initialize(com.google.api.client.googleapis
         * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param customer Required. Customer id or "my_customer" to use the customer associated to the account making the
       *        request.
         * @since 1.13
         */
        protected CountChromeAppRequests(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeAppRequestsResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountChromeAppRequests set$Xgafv(java.lang.String $Xgafv) {
          return (CountChromeAppRequests) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountChromeAppRequests setAccessToken(java.lang.String accessToken) {
          return (CountChromeAppRequests) super.setAccessToken(accessToken);
        }

        @Override
        public CountChromeAppRequests setAlt(java.lang.String alt) {
          return (CountChromeAppRequests) super.setAlt(alt);
        }

        @Override
        public CountChromeAppRequests setCallback(java.lang.String callback) {
          return (CountChromeAppRequests) super.setCallback(callback);
        }

        @Override
        public CountChromeAppRequests setFields(java.lang.String fields) {
          return (CountChromeAppRequests) super.setFields(fields);
        }

        @Override
        public CountChromeAppRequests setKey(java.lang.String key) {
          return (CountChromeAppRequests) super.setKey(key);
        }

        @Override
        public CountChromeAppRequests setOauthToken(java.lang.String oauthToken) {
          return (CountChromeAppRequests) super.setOauthToken(oauthToken);
        }

        @Override
        public CountChromeAppRequests setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountChromeAppRequests) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountChromeAppRequests setQuotaUser(java.lang.String quotaUser) {
          return (CountChromeAppRequests) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountChromeAppRequests setUploadType(java.lang.String uploadType) {
          return (CountChromeAppRequests) super.setUploadType(uploadType);
        }

        @Override
        public CountChromeAppRequests setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountChromeAppRequests) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Customer id or "my_customer" to use the customer associated to the account
         * making the request.
         */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. Customer id or "my_customer" to use the customer associated to the account making the
       request.
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /**
         * Required. Customer id or "my_customer" to use the customer associated to the account
         * making the request.
         */
        public CountChromeAppRequests setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /** Field used to order results. Supported fields: * request_count * latest_request_time */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Field used to order results. Supported fields: * request_count * latest_request_time
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /** Field used to order results. Supported fields: * request_count * latest_request_time */
        public CountChromeAppRequests setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /** The ID of the organizational unit. */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** The ID of the organizational unit.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /** The ID of the organizational unit. */
        public CountChromeAppRequests setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        /**
         * Maximum number of results to return. Maximum and default are 50, anything above will be
         * coerced to 50.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of results to return. Maximum and default are 50, anything above will be coerced to
       50.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Maximum number of results to return. Maximum and default are 50, anything above will be
         * coerced to 50.
         */
        public CountChromeAppRequests setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Token to specify the page of the request to be returned. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Token to specify the page of the request to be returned.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Token to specify the page of the request to be returned. */
        public CountChromeAppRequests setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public CountChromeAppRequests set(String parameterName, Object value) {
          return (CountChromeAppRequests) super.set(parameterName, value);
        }
      }
      /**
       * Get a list of devices that have requested to install an extension.
       *
       * Create a request for the method "apps.fetchDevicesRequestingExtension".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link FetchDevicesRequestingExtension#execute()} method to invoke
       * the remote operation.
       *
       * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
       * @return the request
       */
      public FetchDevicesRequestingExtension fetchDevicesRequestingExtension(java.lang.String customer) throws java.io.IOException {
        FetchDevicesRequestingExtension result = new FetchDevicesRequestingExtension(customer);
        initialize(result);
        return result;
      }

      public class FetchDevicesRequestingExtension extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1FetchDevicesRequestingExtensionResponse> {

        private static final String REST_PATH = "v1/{+customer}/apps:fetchDevicesRequestingExtension";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Get a list of devices that have requested to install an extension.
         *
         * Create a request for the method "apps.fetchDevicesRequestingExtension".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link FetchDevicesRequestingExtension#execute()} method to
         * invoke the remote operation. <p> {@link FetchDevicesRequestingExtension#initialize(com.google.a
         * pi.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
         * instance immediately after invoking the constructor. </p>
         *
         * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
         * @since 1.13
         */
        protected FetchDevicesRequestingExtension(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1FetchDevicesRequestingExtensionResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public FetchDevicesRequestingExtension set$Xgafv(java.lang.String $Xgafv) {
          return (FetchDevicesRequestingExtension) super.set$Xgafv($Xgafv);
        }

        @Override
        public FetchDevicesRequestingExtension setAccessToken(java.lang.String accessToken) {
          return (FetchDevicesRequestingExtension) super.setAccessToken(accessToken);
        }

        @Override
        public FetchDevicesRequestingExtension setAlt(java.lang.String alt) {
          return (FetchDevicesRequestingExtension) super.setAlt(alt);
        }

        @Override
        public FetchDevicesRequestingExtension setCallback(java.lang.String callback) {
          return (FetchDevicesRequestingExtension) super.setCallback(callback);
        }

        @Override
        public FetchDevicesRequestingExtension setFields(java.lang.String fields) {
          return (FetchDevicesRequestingExtension) super.setFields(fields);
        }

        @Override
        public FetchDevicesRequestingExtension setKey(java.lang.String key) {
          return (FetchDevicesRequestingExtension) super.setKey(key);
        }

        @Override
        public FetchDevicesRequestingExtension setOauthToken(java.lang.String oauthToken) {
          return (FetchDevicesRequestingExtension) super.setOauthToken(oauthToken);
        }

        @Override
        public FetchDevicesRequestingExtension setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (FetchDevicesRequestingExtension) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public FetchDevicesRequestingExtension setQuotaUser(java.lang.String quotaUser) {
          return (FetchDevicesRequestingExtension) super.setQuotaUser(quotaUser);
        }

        @Override
        public FetchDevicesRequestingExtension setUploadType(java.lang.String uploadType) {
          return (FetchDevicesRequestingExtension) super.setUploadType(uploadType);
        }

        @Override
        public FetchDevicesRequestingExtension setUploadProtocol(java.lang.String uploadProtocol) {
          return (FetchDevicesRequestingExtension) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. The customer ID or "my_customer" prefixed with "customers/".
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        public FetchDevicesRequestingExtension setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /** Required. The extension for which we want to find requesting devices. */
        @com.google.api.client.util.Key
        private java.lang.String extensionId;

        /** Required. The extension for which we want to find requesting devices.
         */
        public java.lang.String getExtensionId() {
          return extensionId;
        }

        /** Required. The extension for which we want to find requesting devices. */
        public FetchDevicesRequestingExtension setExtensionId(java.lang.String extensionId) {
          this.extensionId = extensionId;
          return this;
        }

        /**
         * The ID of the organizational unit. Only consider devices that directly belong to this org
         * unit, i.e. sub-orgunits are not counted. If omitted, all data will be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** The ID of the organizational unit. Only consider devices that directly belong to this org unit,
       i.e. sub-orgunits are not counted. If omitted, all data will be returned.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /**
         * The ID of the organizational unit. Only consider devices that directly belong to this org
         * unit, i.e. sub-orgunits are not counted. If omitted, all data will be returned.
         */
        public FetchDevicesRequestingExtension setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        /**
         * Optional. Maximum number of results to return. Maximum and default are 50. Any page size
         * larger than 50 will be coerced to 50.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. Maximum number of results to return. Maximum and default are 50. Any page size larger
       than 50 will be coerced to 50.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. Maximum number of results to return. Maximum and default are 50. Any page size
         * larger than 50 will be coerced to 50.
         */
        public FetchDevicesRequestingExtension setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. Token to specify the page of the request to be returned. Token expires after 1
         * day.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. Token to specify the page of the request to be returned. Token expires after 1 day.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. Token to specify the page of the request to be returned. Token expires after 1
         * day.
         */
        public FetchDevicesRequestingExtension setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public FetchDevicesRequestingExtension set(String parameterName, Object value) {
          return (FetchDevicesRequestingExtension) super.set(parameterName, value);
        }
      }
      /**
       * Get a list of users that have requested to install an extension.
       *
       * Create a request for the method "apps.fetchUsersRequestingExtension".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link FetchUsersRequestingExtension#execute()} method to invoke
       * the remote operation.
       *
       * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
       * @return the request
       */
      public FetchUsersRequestingExtension fetchUsersRequestingExtension(java.lang.String customer) throws java.io.IOException {
        FetchUsersRequestingExtension result = new FetchUsersRequestingExtension(customer);
        initialize(result);
        return result;
      }

      public class FetchUsersRequestingExtension extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1FetchUsersRequestingExtensionResponse> {

        private static final String REST_PATH = "v1/{+customer}/apps:fetchUsersRequestingExtension";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Get a list of users that have requested to install an extension.
         *
         * Create a request for the method "apps.fetchUsersRequestingExtension".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link FetchUsersRequestingExtension#execute()} method to invoke
         * the remote operation. <p> {@link FetchUsersRequestingExtension#initialize(com.google.api.client
         * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
         * @since 1.13
         */
        protected FetchUsersRequestingExtension(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1FetchUsersRequestingExtensionResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public FetchUsersRequestingExtension set$Xgafv(java.lang.String $Xgafv) {
          return (FetchUsersRequestingExtension) super.set$Xgafv($Xgafv);
        }

        @Override
        public FetchUsersRequestingExtension setAccessToken(java.lang.String accessToken) {
          return (FetchUsersRequestingExtension) super.setAccessToken(accessToken);
        }

        @Override
        public FetchUsersRequestingExtension setAlt(java.lang.String alt) {
          return (FetchUsersRequestingExtension) super.setAlt(alt);
        }

        @Override
        public FetchUsersRequestingExtension setCallback(java.lang.String callback) {
          return (FetchUsersRequestingExtension) super.setCallback(callback);
        }

        @Override
        public FetchUsersRequestingExtension setFields(java.lang.String fields) {
          return (FetchUsersRequestingExtension) super.setFields(fields);
        }

        @Override
        public FetchUsersRequestingExtension setKey(java.lang.String key) {
          return (FetchUsersRequestingExtension) super.setKey(key);
        }

        @Override
        public FetchUsersRequestingExtension setOauthToken(java.lang.String oauthToken) {
          return (FetchUsersRequestingExtension) super.setOauthToken(oauthToken);
        }

        @Override
        public FetchUsersRequestingExtension setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (FetchUsersRequestingExtension) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public FetchUsersRequestingExtension setQuotaUser(java.lang.String quotaUser) {
          return (FetchUsersRequestingExtension) super.setQuotaUser(quotaUser);
        }

        @Override
        public FetchUsersRequestingExtension setUploadType(java.lang.String uploadType) {
          return (FetchUsersRequestingExtension) super.setUploadType(uploadType);
        }

        @Override
        public FetchUsersRequestingExtension setUploadProtocol(java.lang.String uploadProtocol) {
          return (FetchUsersRequestingExtension) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. The customer ID or "my_customer" prefixed with "customers/".
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        public FetchUsersRequestingExtension setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /** Required. The extension for which we want to find the requesting users. */
        @com.google.api.client.util.Key
        private java.lang.String extensionId;

        /** Required. The extension for which we want to find the requesting users.
         */
        public java.lang.String getExtensionId() {
          return extensionId;
        }

        /** Required. The extension for which we want to find the requesting users. */
        public FetchUsersRequestingExtension setExtensionId(java.lang.String extensionId) {
          this.extensionId = extensionId;
          return this;
        }

        /**
         * The ID of the organizational unit. Only consider devices that directly belong to this org
         * unit, i.e. sub-orgunits are not counted. If omitted, all data will be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** The ID of the organizational unit. Only consider devices that directly belong to this org unit,
       i.e. sub-orgunits are not counted. If omitted, all data will be returned.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /**
         * The ID of the organizational unit. Only consider devices that directly belong to this org
         * unit, i.e. sub-orgunits are not counted. If omitted, all data will be returned.
         */
        public FetchUsersRequestingExtension setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        /**
         * Optional. Maximum number of results to return. Maximum and default are 50. Any page size
         * larger than 50 will be coerced to 50.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. Maximum number of results to return. Maximum and default are 50. Any page size larger
       than 50 will be coerced to 50.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. Maximum number of results to return. Maximum and default are 50. Any page size
         * larger than 50 will be coerced to 50.
         */
        public FetchUsersRequestingExtension setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. Token to specify the page of the request to be returned. Token expires after 1
         * day.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. Token to specify the page of the request to be returned. Token expires after 1 day.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. Token to specify the page of the request to be returned. Token expires after 1
         * day.
         */
        public FetchUsersRequestingExtension setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public FetchUsersRequestingExtension set(String parameterName, Object value) {
          return (FetchUsersRequestingExtension) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Android collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
       *   {@code ChromeManagement.Android.List request = chromemanagement.android().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Android android() {
        return new Android();
      }

      /**
       * The "android" collection of methods.
       */
      public class Android {

        /**
         * Get a specific app for a customer by its resource name.
         *
         * Create a request for the method "android.get".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The app for which details are being queried. Examples:
         *        "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to
         *        Google Drive Chrome extension version 2.1.2,
         *        "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
         *        Android app's latest version.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1AppDetails> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+/apps/android/[^/]+$");

          /**
           * Get a specific app for a customer by its resource name.
           *
           * Create a request for the method "android.get".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The app for which details are being queried. Examples:
         *        "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to
         *        Google Drive Chrome extension version 2.1.2,
         *        "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
         *        Android app's latest version.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1AppDetails.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/apps/android/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The app for which details are being queried. Examples:
           * "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save
           * to Google Drive Chrome extension version 2.1.2,
           * "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
           * Android app's latest version.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The app for which details are being queried. Examples:
         "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to Google
         Drive Chrome extension version 2.1.2,
         "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive Android
         app's latest version.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The app for which details are being queried. Examples:
           * "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save
           * to Google Drive Chrome extension version 2.1.2,
           * "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
           * Android app's latest version.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/apps/android/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Chrome collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
       *   {@code ChromeManagement.Chrome.List request = chromemanagement.chrome().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Chrome chrome() {
        return new Chrome();
      }

      /**
       * The "chrome" collection of methods.
       */
      public class Chrome {

        /**
         * Get a specific app for a customer by its resource name.
         *
         * Create a request for the method "chrome.get".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The app for which details are being queried. Examples:
         *        "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to
         *        Google Drive Chrome extension version 2.1.2,
         *        "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
         *        Android app's latest version.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1AppDetails> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+/apps/chrome/[^/]+$");

          /**
           * Get a specific app for a customer by its resource name.
           *
           * Create a request for the method "chrome.get".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The app for which details are being queried. Examples:
         *        "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to
         *        Google Drive Chrome extension version 2.1.2,
         *        "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
         *        Android app's latest version.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1AppDetails.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/apps/chrome/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The app for which details are being queried. Examples:
           * "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save
           * to Google Drive Chrome extension version 2.1.2,
           * "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
           * Android app's latest version.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The app for which details are being queried. Examples:
         "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to Google
         Drive Chrome extension version 2.1.2,
         "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive Android
         app's latest version.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The app for which details are being queried. Examples:
           * "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save
           * to Google Drive Chrome extension version 2.1.2,
           * "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
           * Android app's latest version.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/apps/chrome/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Web collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
       *   {@code ChromeManagement.Web.List request = chromemanagement.web().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Web web() {
        return new Web();
      }

      /**
       * The "web" collection of methods.
       */
      public class Web {

        /**
         * Get a specific app for a customer by its resource name.
         *
         * Create a request for the method "web.get".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The app for which details are being queried. Examples:
         *        "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to
         *        Google Drive Chrome extension version 2.1.2,
         *        "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
         *        Android app's latest version.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1AppDetails> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+/apps/web/[^/]+$");

          /**
           * Get a specific app for a customer by its resource name.
           *
           * Create a request for the method "web.get".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The app for which details are being queried. Examples:
         *        "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to
         *        Google Drive Chrome extension version 2.1.2,
         *        "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
         *        Android app's latest version.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1AppDetails.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/apps/web/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The app for which details are being queried. Examples:
           * "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save
           * to Google Drive Chrome extension version 2.1.2,
           * "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
           * Android app's latest version.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The app for which details are being queried. Examples:
         "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save to Google
         Drive Chrome extension version 2.1.2,
         "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive Android
         app's latest version.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The app for which details are being queried. Examples:
           * "customers/my_customer/apps/chrome/gmbmikajjgmnabiglmofipeabaddhgne@2.1.2" for the Save
           * to Google Drive Chrome extension version 2.1.2,
           * "customers/my_customer/apps/android/com.google.android.apps.docs" for the Google Drive
           * Android app's latest version.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/apps/web/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Profiles collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
     *   {@code ChromeManagement.Profiles.List request = chromemanagement.profiles().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Profiles profiles() {
      return new Profiles();
    }

    /**
     * The "profiles" collection of methods.
     */
    public class Profiles {

      /**
       * Deletes the data collected from a Chrome browser profile.
       *
       * Create a request for the method "profiles.delete".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Format: customers/{customer_id}/profiles/{profile_permanent_id}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+/profiles/[^/]+$");

        /**
         * Deletes the data collected from a Chrome browser profile.
         *
         * Create a request for the method "profiles.delete".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: customers/{customer_id}/profiles/{profile_permanent_id}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(ChromeManagement.this, "DELETE", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^customers/[^/]+/profiles/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: customers/{customer_id}/profiles/{profile_permanent_id} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: customers/{customer_id}/profiles/{profile_permanent_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Format: customers/{customer_id}/profiles/{profile_permanent_id} */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^customers/[^/]+/profiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a Chrome browser profile with customer ID and profile permanent ID.
       *
       * Create a request for the method "profiles.get".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Format: customers/{customer_id}/profiles/{profile_permanent_id}
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementVersionsV1ChromeBrowserProfile> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+/profiles/[^/]+$");

        /**
         * Gets a Chrome browser profile with customer ID and profile permanent ID.
         *
         * Create a request for the method "profiles.get".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: customers/{customer_id}/profiles/{profile_permanent_id}
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementVersionsV1ChromeBrowserProfile.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^customers/[^/]+/profiles/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: customers/{customer_id}/profiles/{profile_permanent_id} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: customers/{customer_id}/profiles/{profile_permanent_id}
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Format: customers/{customer_id}/profiles/{profile_permanent_id} */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^customers/[^/]+/profiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists Chrome browser profiles of a customer based on the given search and sorting criteria.
       *
       * Create a request for the method "profiles.list".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: customers/{customer_id}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementVersionsV1ListChromeBrowserProfilesResponse> {

        private static final String REST_PATH = "v1/{+parent}/profiles";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Lists Chrome browser profiles of a customer based on the given search and sorting criteria.
         *
         * Create a request for the method "profiles.list".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: customers/{customer_id}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementVersionsV1ListChromeBrowserProfilesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: customers/{customer_id} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: customers/{customer_id}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: customers/{customer_id} */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The filter used to filter profiles. The following fields can be used in the
         * filter: - profile_id - display_name - user_email - last_activity_time -
         * last_policy_sync_time - last_status_report_time - first_enrollment_time -
         * os_platform_type - os_version - browser_version - browser_channel - policy_count -
         * extension_count - identity_provider - affiliation_state - ouId Any of the above fields
         * can be used to specify a filter, and filtering by multiple fields is supported with AND
         * operator. String type fields and enum type fields support '=' and '!=' operators. The
         * integer type and the timestamp type fields support '=', '!=', '<', '>', '<=' and '>='
         * operators. Timestamps expect an RFC-3339 formatted string (e.g.
         * 2012-04-21T11:30:00-04:00). Wildcard '*' can be used with a string type field filter. In
         * addition, string literal filtering is also supported, for example, 'ABC' as a filter maps
         * to a filter that checks if any of the filterable string type fields contains 'ABC'.
         * Organization unit number can be used as a filtering criteria here by specifying 'ouId =
         * ${your_org_unit_id}', please note that only single OU ID matching is supported.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. The filter used to filter profiles. The following fields can be used in the filter: -
       profile_id - display_name - user_email - last_activity_time - last_policy_sync_time -
       last_status_report_time - first_enrollment_time - os_platform_type - os_version - browser_version -
       browser_channel - policy_count - extension_count - identity_provider - affiliation_state - ouId Any
       of the above fields can be used to specify a filter, and filtering by multiple fields is supported
       with AND operator. String type fields and enum type fields support '=' and '!=' operators. The
       integer type and the timestamp type fields support '=', '!=', '<', '>', '<=' and '>=' operators.
       Timestamps expect an RFC-3339 formatted string (e.g. 2012-04-21T11:30:00-04:00). Wildcard '*' can
       be used with a string type field filter. In addition, string literal filtering is also supported,
       for example, 'ABC' as a filter maps to a filter that checks if any of the filterable string type
       fields contains 'ABC'. Organization unit number can be used as a filtering criteria here by
       specifying 'ouId = ${your_org_unit_id}', please note that only single OU ID matching is supported.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. The filter used to filter profiles. The following fields can be used in the
         * filter: - profile_id - display_name - user_email - last_activity_time -
         * last_policy_sync_time - last_status_report_time - first_enrollment_time -
         * os_platform_type - os_version - browser_version - browser_channel - policy_count -
         * extension_count - identity_provider - affiliation_state - ouId Any of the above fields
         * can be used to specify a filter, and filtering by multiple fields is supported with AND
         * operator. String type fields and enum type fields support '=' and '!=' operators. The
         * integer type and the timestamp type fields support '=', '!=', '<', '>', '<=' and '>='
         * operators. Timestamps expect an RFC-3339 formatted string (e.g.
         * 2012-04-21T11:30:00-04:00). Wildcard '*' can be used with a string type field filter. In
         * addition, string literal filtering is also supported, for example, 'ABC' as a filter maps
         * to a filter that checks if any of the filterable string type fields contains 'ABC'.
         * Organization unit number can be used as a filtering criteria here by specifying 'ouId =
         * ${your_org_unit_id}', please note that only single OU ID matching is supported.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional. The fields used to specify the ordering of the results. The supported fields
         * are: - profile_id - display_name - user_email - last_activity_time -
         * last_policy_sync_time - last_status_report_time - first_enrollment_time -
         * os_platform_type - os_version - browser_version - browser_channel - policy_count -
         * extension_count - identity_provider - affiliation_state By default, sorting is in
         * ascending order, to specify descending order for a field, a suffix " desc" should be
         * added to the field name. The default ordering is the descending order of
         * last_status_report_time.
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional. The fields used to specify the ordering of the results. The supported fields are: -
       profile_id - display_name - user_email - last_activity_time - last_policy_sync_time -
       last_status_report_time - first_enrollment_time - os_platform_type - os_version - browser_version -
       browser_channel - policy_count - extension_count - identity_provider - affiliation_state By
       default, sorting is in ascending order, to specify descending order for a field, a suffix " desc"
       should be added to the field name. The default ordering is the descending order of
       last_status_report_time.
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional. The fields used to specify the ordering of the results. The supported fields
         * are: - profile_id - display_name - user_email - last_activity_time -
         * last_policy_sync_time - last_status_report_time - first_enrollment_time -
         * os_platform_type - os_version - browser_version - browser_channel - policy_count -
         * extension_count - identity_provider - affiliation_state By default, sorting is in
         * ascending order, to specify descending order for a field, a suffix " desc" should be
         * added to the field name. The default ordering is the descending order of
         * last_status_report_time.
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Optional. The maximum number of profiles to return. The default page size is 100 if
         * page_size is unspecified, and the maximum page size allowed is 200.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of profiles to return. The default page size is 100 if page_size is
       unspecified, and the maximum page size allowed is 200.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of profiles to return. The default page size is 100 if
         * page_size is unspecified, and the maximum page size allowed is 200.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The page token used to retrieve a specific page of the listing request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The page token used to retrieve a specific page of the listing request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The page token used to retrieve a specific page of the listing request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Reports collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
     *   {@code ChromeManagement.Reports.List request = chromemanagement.reports().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Reports reports() {
      return new Reports();
    }

    /**
     * The "reports" collection of methods.
     */
    public class Reports {

      /**
       * Count of Chrome Browsers that have been recently enrolled, have new policy to be synced, or have
       * no recent activity.
       *
       * Create a request for the method "reports.countChromeBrowsersNeedingAttention".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountChromeBrowsersNeedingAttention#execute()} method to
       * invoke the remote operation.
       *
       * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
       * @return the request
       */
      public CountChromeBrowsersNeedingAttention countChromeBrowsersNeedingAttention(java.lang.String customer) throws java.io.IOException {
        CountChromeBrowsersNeedingAttention result = new CountChromeBrowsersNeedingAttention(customer);
        initialize(result);
        return result;
      }

      public class CountChromeBrowsersNeedingAttention extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:countChromeBrowsersNeedingAttention";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Count of Chrome Browsers that have been recently enrolled, have new policy to be synced, or
         * have no recent activity.
         *
         * Create a request for the method "reports.countChromeBrowsersNeedingAttention".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountChromeBrowsersNeedingAttention#execute()} method to
         * invoke the remote operation. <p> {@link CountChromeBrowsersNeedingAttention#initialize(com.goog
         * le.api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize
         * this instance immediately after invoking the constructor. </p>
         *
         * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
         * @since 1.13
         */
        protected CountChromeBrowsersNeedingAttention(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountChromeBrowsersNeedingAttention set$Xgafv(java.lang.String $Xgafv) {
          return (CountChromeBrowsersNeedingAttention) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setAccessToken(java.lang.String accessToken) {
          return (CountChromeBrowsersNeedingAttention) super.setAccessToken(accessToken);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setAlt(java.lang.String alt) {
          return (CountChromeBrowsersNeedingAttention) super.setAlt(alt);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setCallback(java.lang.String callback) {
          return (CountChromeBrowsersNeedingAttention) super.setCallback(callback);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setFields(java.lang.String fields) {
          return (CountChromeBrowsersNeedingAttention) super.setFields(fields);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setKey(java.lang.String key) {
          return (CountChromeBrowsersNeedingAttention) super.setKey(key);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setOauthToken(java.lang.String oauthToken) {
          return (CountChromeBrowsersNeedingAttention) super.setOauthToken(oauthToken);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountChromeBrowsersNeedingAttention) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setQuotaUser(java.lang.String quotaUser) {
          return (CountChromeBrowsersNeedingAttention) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setUploadType(java.lang.String uploadType) {
          return (CountChromeBrowsersNeedingAttention) super.setUploadType(uploadType);
        }

        @Override
        public CountChromeBrowsersNeedingAttention setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountChromeBrowsersNeedingAttention) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. The customer ID or "my_customer" prefixed with "customers/".
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        public CountChromeBrowsersNeedingAttention setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /** Optional. The ID of the organizational unit. If omitted, all data will be returned. */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** Optional. The ID of the organizational unit. If omitted, all data will be returned.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /** Optional. The ID of the organizational unit. If omitted, all data will be returned. */
        public CountChromeBrowsersNeedingAttention setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        @Override
        public CountChromeBrowsersNeedingAttention set(String parameterName, Object value) {
          return (CountChromeBrowsersNeedingAttention) super.set(parameterName, value);
        }
      }
      /**
       * Get a count of Chrome crash events.
       *
       * Create a request for the method "reports.countChromeCrashEvents".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountChromeCrashEvents#execute()} method to invoke the
       * remote operation.
       *
       * @param customer Customer ID.
       * @return the request
       */
      public CountChromeCrashEvents countChromeCrashEvents(java.lang.String customer) throws java.io.IOException {
        CountChromeCrashEvents result = new CountChromeCrashEvents(customer);
        initialize(result);
        return result;
      }

      public class CountChromeCrashEvents extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeCrashEventsResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:countChromeCrashEvents";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Get a count of Chrome crash events.
         *
         * Create a request for the method "reports.countChromeCrashEvents".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountChromeCrashEvents#execute()} method to invoke the
         * remote operation. <p> {@link CountChromeCrashEvents#initialize(com.google.api.client.googleapis
         * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param customer Customer ID.
         * @since 1.13
         */
        protected CountChromeCrashEvents(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeCrashEventsResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountChromeCrashEvents set$Xgafv(java.lang.String $Xgafv) {
          return (CountChromeCrashEvents) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountChromeCrashEvents setAccessToken(java.lang.String accessToken) {
          return (CountChromeCrashEvents) super.setAccessToken(accessToken);
        }

        @Override
        public CountChromeCrashEvents setAlt(java.lang.String alt) {
          return (CountChromeCrashEvents) super.setAlt(alt);
        }

        @Override
        public CountChromeCrashEvents setCallback(java.lang.String callback) {
          return (CountChromeCrashEvents) super.setCallback(callback);
        }

        @Override
        public CountChromeCrashEvents setFields(java.lang.String fields) {
          return (CountChromeCrashEvents) super.setFields(fields);
        }

        @Override
        public CountChromeCrashEvents setKey(java.lang.String key) {
          return (CountChromeCrashEvents) super.setKey(key);
        }

        @Override
        public CountChromeCrashEvents setOauthToken(java.lang.String oauthToken) {
          return (CountChromeCrashEvents) super.setOauthToken(oauthToken);
        }

        @Override
        public CountChromeCrashEvents setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountChromeCrashEvents) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountChromeCrashEvents setQuotaUser(java.lang.String quotaUser) {
          return (CountChromeCrashEvents) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountChromeCrashEvents setUploadType(java.lang.String uploadType) {
          return (CountChromeCrashEvents) super.setUploadType(uploadType);
        }

        @Override
        public CountChromeCrashEvents setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountChromeCrashEvents) super.setUploadProtocol(uploadProtocol);
        }

        /** Customer ID. */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Customer ID.
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /** Customer ID. */
        public CountChromeCrashEvents setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Supported filter
         * fields: * major_browser_version * minor_browser_version * browser_channel *
         * device_platform * past_number_days Example: `major_browser_version = 'M115' AND
         * past_number_days = '28'`.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Query string to filter results, AND-separated fields in EBNF syntax. Supported filter fields: *
       major_browser_version * minor_browser_version * browser_channel * device_platform *
       past_number_days Example: `major_browser_version = 'M115' AND past_number_days = '28'`.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Supported filter
         * fields: * major_browser_version * minor_browser_version * browser_channel *
         * device_platform * past_number_days Example: `major_browser_version = 'M115' AND
         * past_number_days = '28'`.
         */
        public CountChromeCrashEvents setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Field used to order results. Supported order by fields: * browser_version * count * date
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Field used to order results. Supported order by fields: * browser_version * count * date
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Field used to order results. Supported order by fields: * browser_version * count * date
         */
        public CountChromeCrashEvents setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * If specified, only count the number of crash events of the devices in this organizational
         * unit.
         */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** If specified, only count the number of crash events of the devices in this organizational unit.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /**
         * If specified, only count the number of crash events of the devices in this organizational
         * unit.
         */
        public CountChromeCrashEvents setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        @Override
        public CountChromeCrashEvents set(String parameterName, Object value) {
          return (CountChromeCrashEvents) super.set(parameterName, value);
        }
      }
      /**
       * Generate report of the number of devices expiring in each month of the selected time frame.
       * Devices are grouped by auto update expiration date and model. Further information can be found
       * [here](https://support.google.com/chrome/a/answer/10564947).
       *
       * Create a request for the method "reports.countChromeDevicesReachingAutoExpirationDate".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountChromeDevicesReachingAutoExpirationDate#execute()}
       * method to invoke the remote operation.
       *
       * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
       * @return the request
       */
      public CountChromeDevicesReachingAutoExpirationDate countChromeDevicesReachingAutoExpirationDate(java.lang.String customer) throws java.io.IOException {
        CountChromeDevicesReachingAutoExpirationDate result = new CountChromeDevicesReachingAutoExpirationDate(customer);
        initialize(result);
        return result;
      }

      public class CountChromeDevicesReachingAutoExpirationDate extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:countChromeDevicesReachingAutoExpirationDate";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Generate report of the number of devices expiring in each month of the selected time frame.
         * Devices are grouped by auto update expiration date and model. Further information can be found
         * [here](https://support.google.com/chrome/a/answer/10564947).
         *
         * Create a request for the method "reports.countChromeDevicesReachingAutoExpirationDate".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountChromeDevicesReachingAutoExpirationDate#execute()}
         * method to invoke the remote operation. <p> {@link CountChromeDevicesReachingAutoExpirationDate#
         * initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
         * @since 1.13
         */
        protected CountChromeDevicesReachingAutoExpirationDate(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate set$Xgafv(java.lang.String $Xgafv) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setAccessToken(java.lang.String accessToken) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setAccessToken(accessToken);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setAlt(java.lang.String alt) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setAlt(alt);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setCallback(java.lang.String callback) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setCallback(callback);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setFields(java.lang.String fields) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setFields(fields);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setKey(java.lang.String key) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setKey(key);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setOauthToken(java.lang.String oauthToken) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setOauthToken(oauthToken);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setQuotaUser(java.lang.String quotaUser) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setUploadType(java.lang.String uploadType) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setUploadType(uploadType);
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. The customer ID or "my_customer" prefixed with "customers/".
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        public CountChromeDevicesReachingAutoExpirationDate setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /**
         * Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included
         * returns all devices that have already expired and devices with auto expiration date equal
         * to or earlier than the maximum date.
         */
        @com.google.api.client.util.Key
        private java.lang.String maxAueDate;

        /** Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included returns all
       devices that have already expired and devices with auto expiration date equal to or earlier than
       the maximum date.
         */
        public java.lang.String getMaxAueDate() {
          return maxAueDate;
        }

        /**
         * Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included
         * returns all devices that have already expired and devices with auto expiration date equal
         * to or earlier than the maximum date.
         */
        public CountChromeDevicesReachingAutoExpirationDate setMaxAueDate(java.lang.String maxAueDate) {
          this.maxAueDate = maxAueDate;
          return this;
        }

        /**
         * Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included
         * returns all devices that have already expired and devices with auto expiration date equal
         * to or later than the minimum date.
         */
        @com.google.api.client.util.Key
        private java.lang.String minAueDate;

        /** Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included returns all
       devices that have already expired and devices with auto expiration date equal to or later than the
       minimum date.
         */
        public java.lang.String getMinAueDate() {
          return minAueDate;
        }

        /**
         * Optional. Maximum expiration date in format yyyy-mm-dd in UTC timezone. If included
         * returns all devices that have already expired and devices with auto expiration date equal
         * to or later than the minimum date.
         */
        public CountChromeDevicesReachingAutoExpirationDate setMinAueDate(java.lang.String minAueDate) {
          this.minAueDate = minAueDate;
          return this;
        }

        /**
         * Optional. The organizational unit ID, if omitted, will return data for all organizational
         * units.
         */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** Optional. The organizational unit ID, if omitted, will return data for all organizational units.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /**
         * Optional. The organizational unit ID, if omitted, will return data for all organizational
         * units.
         */
        public CountChromeDevicesReachingAutoExpirationDate setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        @Override
        public CountChromeDevicesReachingAutoExpirationDate set(String parameterName, Object value) {
          return (CountChromeDevicesReachingAutoExpirationDate) super.set(parameterName, value);
        }
      }
      /**
       * Counts of ChromeOS devices that have not synced policies or have lacked user activity in the past
       * 28 days, are out of date, or are not complaint. Further information can be found here
       * https://support.google.com/chrome/a/answer/10564947
       *
       * Create a request for the method "reports.countChromeDevicesThatNeedAttention".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountChromeDevicesThatNeedAttention#execute()} method to
       * invoke the remote operation.
       *
       * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
       * @return the request
       */
      public CountChromeDevicesThatNeedAttention countChromeDevicesThatNeedAttention(java.lang.String customer) throws java.io.IOException {
        CountChromeDevicesThatNeedAttention result = new CountChromeDevicesThatNeedAttention(customer);
        initialize(result);
        return result;
      }

      public class CountChromeDevicesThatNeedAttention extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:countChromeDevicesThatNeedAttention";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Counts of ChromeOS devices that have not synced policies or have lacked user activity in the
         * past 28 days, are out of date, or are not complaint. Further information can be found here
         * https://support.google.com/chrome/a/answer/10564947
         *
         * Create a request for the method "reports.countChromeDevicesThatNeedAttention".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountChromeDevicesThatNeedAttention#execute()} method to
         * invoke the remote operation. <p> {@link CountChromeDevicesThatNeedAttention#initialize(com.goog
         * le.api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize
         * this instance immediately after invoking the constructor. </p>
         *
         * @param customer Required. The customer ID or "my_customer" prefixed with "customers/".
         * @since 1.13
         */
        protected CountChromeDevicesThatNeedAttention(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountChromeDevicesThatNeedAttention set$Xgafv(java.lang.String $Xgafv) {
          return (CountChromeDevicesThatNeedAttention) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setAccessToken(java.lang.String accessToken) {
          return (CountChromeDevicesThatNeedAttention) super.setAccessToken(accessToken);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setAlt(java.lang.String alt) {
          return (CountChromeDevicesThatNeedAttention) super.setAlt(alt);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setCallback(java.lang.String callback) {
          return (CountChromeDevicesThatNeedAttention) super.setCallback(callback);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setFields(java.lang.String fields) {
          return (CountChromeDevicesThatNeedAttention) super.setFields(fields);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setKey(java.lang.String key) {
          return (CountChromeDevicesThatNeedAttention) super.setKey(key);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setOauthToken(java.lang.String oauthToken) {
          return (CountChromeDevicesThatNeedAttention) super.setOauthToken(oauthToken);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountChromeDevicesThatNeedAttention) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setQuotaUser(java.lang.String quotaUser) {
          return (CountChromeDevicesThatNeedAttention) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setUploadType(java.lang.String uploadType) {
          return (CountChromeDevicesThatNeedAttention) super.setUploadType(uploadType);
        }

        @Override
        public CountChromeDevicesThatNeedAttention setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountChromeDevicesThatNeedAttention) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. The customer ID or "my_customer" prefixed with "customers/".
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /** Required. The customer ID or "my_customer" prefixed with "customers/". */
        public CountChromeDevicesThatNeedAttention setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /** Optional. The ID of the organizational unit. If omitted, all data will be returned. */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** Optional. The ID of the organizational unit. If omitted, all data will be returned.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /** Optional. The ID of the organizational unit. If omitted, all data will be returned. */
        public CountChromeDevicesThatNeedAttention setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        /** Required. Mask of the fields that should be populated in the returned report. */
        @com.google.api.client.util.Key
        private String readMask;

        /** Required. Mask of the fields that should be populated in the returned report.
         */
        public String getReadMask() {
          return readMask;
        }

        /** Required. Mask of the fields that should be populated in the returned report. */
        public CountChromeDevicesThatNeedAttention setReadMask(String readMask) {
          this.readMask = readMask;
          return this;
        }

        @Override
        public CountChromeDevicesThatNeedAttention set(String parameterName, Object value) {
          return (CountChromeDevicesThatNeedAttention) super.set(parameterName, value);
        }
      }
      /**
       * Counts of devices with a specific hardware specification from the requested hardware type (for
       * example model name, processor type). Further information can be found here
       * https://support.google.com/chrome/a/answer/10564947
       *
       * Create a request for the method "reports.countChromeHardwareFleetDevices".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountChromeHardwareFleetDevices#execute()} method to invoke
       * the remote operation.
       *
       * @param customer Required. The customer ID or "my_customer".
       * @return the request
       */
      public CountChromeHardwareFleetDevices countChromeHardwareFleetDevices(java.lang.String customer) throws java.io.IOException {
        CountChromeHardwareFleetDevices result = new CountChromeHardwareFleetDevices(customer);
        initialize(result);
        return result;
      }

      public class CountChromeHardwareFleetDevices extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:countChromeHardwareFleetDevices";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Counts of devices with a specific hardware specification from the requested hardware type (for
         * example model name, processor type). Further information can be found here
         * https://support.google.com/chrome/a/answer/10564947
         *
         * Create a request for the method "reports.countChromeHardwareFleetDevices".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountChromeHardwareFleetDevices#execute()} method to
         * invoke the remote operation. <p> {@link CountChromeHardwareFleetDevices#initialize(com.google.a
         * pi.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
         * instance immediately after invoking the constructor. </p>
         *
         * @param customer Required. The customer ID or "my_customer".
         * @since 1.13
         */
        protected CountChromeHardwareFleetDevices(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountChromeHardwareFleetDevices set$Xgafv(java.lang.String $Xgafv) {
          return (CountChromeHardwareFleetDevices) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountChromeHardwareFleetDevices setAccessToken(java.lang.String accessToken) {
          return (CountChromeHardwareFleetDevices) super.setAccessToken(accessToken);
        }

        @Override
        public CountChromeHardwareFleetDevices setAlt(java.lang.String alt) {
          return (CountChromeHardwareFleetDevices) super.setAlt(alt);
        }

        @Override
        public CountChromeHardwareFleetDevices setCallback(java.lang.String callback) {
          return (CountChromeHardwareFleetDevices) super.setCallback(callback);
        }

        @Override
        public CountChromeHardwareFleetDevices setFields(java.lang.String fields) {
          return (CountChromeHardwareFleetDevices) super.setFields(fields);
        }

        @Override
        public CountChromeHardwareFleetDevices setKey(java.lang.String key) {
          return (CountChromeHardwareFleetDevices) super.setKey(key);
        }

        @Override
        public CountChromeHardwareFleetDevices setOauthToken(java.lang.String oauthToken) {
          return (CountChromeHardwareFleetDevices) super.setOauthToken(oauthToken);
        }

        @Override
        public CountChromeHardwareFleetDevices setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountChromeHardwareFleetDevices) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountChromeHardwareFleetDevices setQuotaUser(java.lang.String quotaUser) {
          return (CountChromeHardwareFleetDevices) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountChromeHardwareFleetDevices setUploadType(java.lang.String uploadType) {
          return (CountChromeHardwareFleetDevices) super.setUploadType(uploadType);
        }

        @Override
        public CountChromeHardwareFleetDevices setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountChromeHardwareFleetDevices) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The customer ID or "my_customer". */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. The customer ID or "my_customer".
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /** Required. The customer ID or "my_customer". */
        public CountChromeHardwareFleetDevices setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /** Optional. The ID of the organizational unit. If omitted, all data will be returned. */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** Optional. The ID of the organizational unit. If omitted, all data will be returned.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /** Optional. The ID of the organizational unit. If omitted, all data will be returned. */
        public CountChromeHardwareFleetDevices setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        /** Required. Mask of the fields that should be populated in the returned report. */
        @com.google.api.client.util.Key
        private String readMask;

        /** Required. Mask of the fields that should be populated in the returned report.
         */
        public String getReadMask() {
          return readMask;
        }

        /** Required. Mask of the fields that should be populated in the returned report. */
        public CountChromeHardwareFleetDevices setReadMask(String readMask) {
          this.readMask = readMask;
          return this;
        }

        @Override
        public CountChromeHardwareFleetDevices set(String parameterName, Object value) {
          return (CountChromeHardwareFleetDevices) super.set(parameterName, value);
        }
      }
      /**
       * Generate report of installed Chrome versions.
       *
       * Create a request for the method "reports.countChromeVersions".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountChromeVersions#execute()} method to invoke the remote
       * operation.
       *
       * @param customer Required. Customer id or "my_customer" to use the customer associated to the account making the
       *        request.
       * @return the request
       */
      public CountChromeVersions countChromeVersions(java.lang.String customer) throws java.io.IOException {
        CountChromeVersions result = new CountChromeVersions(customer);
        initialize(result);
        return result;
      }

      public class CountChromeVersions extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeVersionsResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:countChromeVersions";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Generate report of installed Chrome versions.
         *
         * Create a request for the method "reports.countChromeVersions".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountChromeVersions#execute()} method to invoke the remote
         * operation. <p> {@link CountChromeVersions#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param customer Required. Customer id or "my_customer" to use the customer associated to the account making the
       *        request.
         * @since 1.13
         */
        protected CountChromeVersions(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountChromeVersionsResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountChromeVersions set$Xgafv(java.lang.String $Xgafv) {
          return (CountChromeVersions) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountChromeVersions setAccessToken(java.lang.String accessToken) {
          return (CountChromeVersions) super.setAccessToken(accessToken);
        }

        @Override
        public CountChromeVersions setAlt(java.lang.String alt) {
          return (CountChromeVersions) super.setAlt(alt);
        }

        @Override
        public CountChromeVersions setCallback(java.lang.String callback) {
          return (CountChromeVersions) super.setCallback(callback);
        }

        @Override
        public CountChromeVersions setFields(java.lang.String fields) {
          return (CountChromeVersions) super.setFields(fields);
        }

        @Override
        public CountChromeVersions setKey(java.lang.String key) {
          return (CountChromeVersions) super.setKey(key);
        }

        @Override
        public CountChromeVersions setOauthToken(java.lang.String oauthToken) {
          return (CountChromeVersions) super.setOauthToken(oauthToken);
        }

        @Override
        public CountChromeVersions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountChromeVersions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountChromeVersions setQuotaUser(java.lang.String quotaUser) {
          return (CountChromeVersions) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountChromeVersions setUploadType(java.lang.String uploadType) {
          return (CountChromeVersions) super.setUploadType(uploadType);
        }

        @Override
        public CountChromeVersions setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountChromeVersions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Customer id or "my_customer" to use the customer associated to the account
         * making the request.
         */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. Customer id or "my_customer" to use the customer associated to the account making the
       request.
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /**
         * Required. Customer id or "my_customer" to use the customer associated to the account
         * making the request.
         */
        public CountChromeVersions setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Supported filter fields: * last_active_date
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not
       supported in this filter. Supported filter fields: * last_active_date
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Supported filter fields: * last_active_date
         */
        public CountChromeVersions setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The ID of the organizational unit. */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** The ID of the organizational unit.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /** The ID of the organizational unit. */
        public CountChromeVersions setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of results to return. Maximum and default are 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        public CountChromeVersions setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Token to specify the page of the request to be returned. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Token to specify the page of the request to be returned.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Token to specify the page of the request to be returned. */
        public CountChromeVersions setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public CountChromeVersions set(String parameterName, Object value) {
          return (CountChromeVersions) super.set(parameterName, value);
        }
      }
      /**
       * Generate report of app installations.
       *
       * Create a request for the method "reports.countInstalledApps".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountInstalledApps#execute()} method to invoke the remote
       * operation.
       *
       * @param customer Required. Customer id or "my_customer" to use the customer associated to the account making the
       *        request.
       * @return the request
       */
      public CountInstalledApps countInstalledApps(java.lang.String customer) throws java.io.IOException {
        CountInstalledApps result = new CountInstalledApps(customer);
        initialize(result);
        return result;
      }

      public class CountInstalledApps extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountInstalledAppsResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:countInstalledApps";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Generate report of app installations.
         *
         * Create a request for the method "reports.countInstalledApps".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountInstalledApps#execute()} method to invoke the remote
         * operation. <p> {@link CountInstalledApps#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param customer Required. Customer id or "my_customer" to use the customer associated to the account making the
       *        request.
         * @since 1.13
         */
        protected CountInstalledApps(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountInstalledAppsResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountInstalledApps set$Xgafv(java.lang.String $Xgafv) {
          return (CountInstalledApps) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountInstalledApps setAccessToken(java.lang.String accessToken) {
          return (CountInstalledApps) super.setAccessToken(accessToken);
        }

        @Override
        public CountInstalledApps setAlt(java.lang.String alt) {
          return (CountInstalledApps) super.setAlt(alt);
        }

        @Override
        public CountInstalledApps setCallback(java.lang.String callback) {
          return (CountInstalledApps) super.setCallback(callback);
        }

        @Override
        public CountInstalledApps setFields(java.lang.String fields) {
          return (CountInstalledApps) super.setFields(fields);
        }

        @Override
        public CountInstalledApps setKey(java.lang.String key) {
          return (CountInstalledApps) super.setKey(key);
        }

        @Override
        public CountInstalledApps setOauthToken(java.lang.String oauthToken) {
          return (CountInstalledApps) super.setOauthToken(oauthToken);
        }

        @Override
        public CountInstalledApps setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountInstalledApps) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountInstalledApps setQuotaUser(java.lang.String quotaUser) {
          return (CountInstalledApps) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountInstalledApps setUploadType(java.lang.String uploadType) {
          return (CountInstalledApps) super.setUploadType(uploadType);
        }

        @Override
        public CountInstalledApps setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountInstalledApps) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Customer id or "my_customer" to use the customer associated to the account
         * making the request.
         */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. Customer id or "my_customer" to use the customer associated to the account making the
       request.
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /**
         * Required. Customer id or "my_customer" to use the customer associated to the account
         * making the request.
         */
        public CountInstalledApps setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Supported filter fields: * app_name * app_type *
         * install_type * number_of_permissions * total_install_count * latest_profile_active_date *
         * permission_name * app_id * manifest_versions * risk_score
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not
       supported in this filter. Supported filter fields: * app_name * app_type * install_type *
       number_of_permissions * total_install_count * latest_profile_active_date * permission_name * app_id
       * manifest_versions * risk_score
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Supported filter fields: * app_name * app_type *
         * install_type * number_of_permissions * total_install_count * latest_profile_active_date *
         * permission_name * app_id * manifest_versions * risk_score
         */
        public CountInstalledApps setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Field used to order results. Supported order by fields: * app_name * app_type *
         * install_type * number_of_permissions * total_install_count * app_id * manifest_versions *
         * risk_score
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Field used to order results. Supported order by fields: * app_name * app_type * install_type *
       number_of_permissions * total_install_count * app_id * manifest_versions * risk_score
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Field used to order results. Supported order by fields: * app_name * app_type *
         * install_type * number_of_permissions * total_install_count * app_id * manifest_versions *
         * risk_score
         */
        public CountInstalledApps setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /** The ID of the organizational unit. */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** The ID of the organizational unit.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /** The ID of the organizational unit. */
        public CountInstalledApps setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of results to return. Maximum and default are 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        public CountInstalledApps setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Token to specify the page of the request to be returned. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Token to specify the page of the request to be returned.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Token to specify the page of the request to be returned. */
        public CountInstalledApps setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public CountInstalledApps set(String parameterName, Object value) {
          return (CountInstalledApps) super.set(parameterName, value);
        }
      }
      /**
       * Get a summary of printing done by each printer.
       *
       * Create a request for the method "reports.countPrintJobsByPrinter".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountPrintJobsByPrinter#execute()} method to invoke the
       * remote operation.
       *
       * @param customer Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the customer
       *        associated to the account making the request.
       * @return the request
       */
      public CountPrintJobsByPrinter countPrintJobsByPrinter(java.lang.String customer) throws java.io.IOException {
        CountPrintJobsByPrinter result = new CountPrintJobsByPrinter(customer);
        initialize(result);
        return result;
      }

      public class CountPrintJobsByPrinter extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountPrintJobsByPrinterResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:countPrintJobsByPrinter";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Get a summary of printing done by each printer.
         *
         * Create a request for the method "reports.countPrintJobsByPrinter".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountPrintJobsByPrinter#execute()} method to invoke the
         * remote operation. <p> {@link CountPrintJobsByPrinter#initialize(com.google.api.client.googleapi
         * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param customer Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the customer
       *        associated to the account making the request.
         * @since 1.13
         */
        protected CountPrintJobsByPrinter(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountPrintJobsByPrinterResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountPrintJobsByPrinter set$Xgafv(java.lang.String $Xgafv) {
          return (CountPrintJobsByPrinter) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountPrintJobsByPrinter setAccessToken(java.lang.String accessToken) {
          return (CountPrintJobsByPrinter) super.setAccessToken(accessToken);
        }

        @Override
        public CountPrintJobsByPrinter setAlt(java.lang.String alt) {
          return (CountPrintJobsByPrinter) super.setAlt(alt);
        }

        @Override
        public CountPrintJobsByPrinter setCallback(java.lang.String callback) {
          return (CountPrintJobsByPrinter) super.setCallback(callback);
        }

        @Override
        public CountPrintJobsByPrinter setFields(java.lang.String fields) {
          return (CountPrintJobsByPrinter) super.setFields(fields);
        }

        @Override
        public CountPrintJobsByPrinter setKey(java.lang.String key) {
          return (CountPrintJobsByPrinter) super.setKey(key);
        }

        @Override
        public CountPrintJobsByPrinter setOauthToken(java.lang.String oauthToken) {
          return (CountPrintJobsByPrinter) super.setOauthToken(oauthToken);
        }

        @Override
        public CountPrintJobsByPrinter setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountPrintJobsByPrinter) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountPrintJobsByPrinter setQuotaUser(java.lang.String quotaUser) {
          return (CountPrintJobsByPrinter) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountPrintJobsByPrinter setUploadType(java.lang.String uploadType) {
          return (CountPrintJobsByPrinter) super.setUploadType(uploadType);
        }

        @Override
        public CountPrintJobsByPrinter setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountPrintJobsByPrinter) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the
         * customer associated to the account making the request.
         */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the customer
       associated to the account making the request.
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /**
         * Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the
         * customer associated to the account making the request.
         */
        public CountPrintJobsByPrinter setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Note: Only >= and <= comparators are supported in this
         * filter. Supported filter fields: * complete_time
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not
       supported in this filter. Note: Only >= and <= comparators are supported in this filter. Supported
       filter fields: * complete_time
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Note: Only >= and <= comparators are supported in this
         * filter. Supported filter fields: * complete_time
         */
        public CountPrintJobsByPrinter setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Field used to order results. If omitted, results will be ordered in ascending order of
         * the 'printer' field. Supported order_by fields: * printer * job_count * device_count *
         * user_count
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Field used to order results. If omitted, results will be ordered in ascending order of the
       'printer' field. Supported order_by fields: * printer * job_count * device_count * user_count
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Field used to order results. If omitted, results will be ordered in ascending order of
         * the 'printer' field. Supported order_by fields: * printer * job_count * device_count *
         * user_count
         */
        public CountPrintJobsByPrinter setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of results to return. Maximum and default are 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        public CountPrintJobsByPrinter setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Token to specify the page of the response to be returned. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Token to specify the page of the response to be returned.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Token to specify the page of the response to be returned. */
        public CountPrintJobsByPrinter setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The ID of the organizational unit for printers. If specified, only data for printers from
         * the specified organizational unit will be returned. If omitted, data for printers from
         * all organizational units will be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.String printerOrgUnitId;

        /** The ID of the organizational unit for printers. If specified, only data for printers from the
       specified organizational unit will be returned. If omitted, data for printers from all
       organizational units will be returned.
         */
        public java.lang.String getPrinterOrgUnitId() {
          return printerOrgUnitId;
        }

        /**
         * The ID of the organizational unit for printers. If specified, only data for printers from
         * the specified organizational unit will be returned. If omitted, data for printers from
         * all organizational units will be returned.
         */
        public CountPrintJobsByPrinter setPrinterOrgUnitId(java.lang.String printerOrgUnitId) {
          this.printerOrgUnitId = printerOrgUnitId;
          return this;
        }

        @Override
        public CountPrintJobsByPrinter set(String parameterName, Object value) {
          return (CountPrintJobsByPrinter) super.set(parameterName, value);
        }
      }
      /**
       * Get a summary of printing done by each user.
       *
       * Create a request for the method "reports.countPrintJobsByUser".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link CountPrintJobsByUser#execute()} method to invoke the remote
       * operation.
       *
       * @param customer Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the customer
       *        associated to the account making the request.
       * @return the request
       */
      public CountPrintJobsByUser countPrintJobsByUser(java.lang.String customer) throws java.io.IOException {
        CountPrintJobsByUser result = new CountPrintJobsByUser(customer);
        initialize(result);
        return result;
      }

      public class CountPrintJobsByUser extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountPrintJobsByUserResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:countPrintJobsByUser";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Get a summary of printing done by each user.
         *
         * Create a request for the method "reports.countPrintJobsByUser".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link CountPrintJobsByUser#execute()} method to invoke the
         * remote operation. <p> {@link CountPrintJobsByUser#initialize(com.google.api.client.googleapis.s
         * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param customer Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the customer
       *        associated to the account making the request.
         * @since 1.13
         */
        protected CountPrintJobsByUser(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1CountPrintJobsByUserResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public CountPrintJobsByUser set$Xgafv(java.lang.String $Xgafv) {
          return (CountPrintJobsByUser) super.set$Xgafv($Xgafv);
        }

        @Override
        public CountPrintJobsByUser setAccessToken(java.lang.String accessToken) {
          return (CountPrintJobsByUser) super.setAccessToken(accessToken);
        }

        @Override
        public CountPrintJobsByUser setAlt(java.lang.String alt) {
          return (CountPrintJobsByUser) super.setAlt(alt);
        }

        @Override
        public CountPrintJobsByUser setCallback(java.lang.String callback) {
          return (CountPrintJobsByUser) super.setCallback(callback);
        }

        @Override
        public CountPrintJobsByUser setFields(java.lang.String fields) {
          return (CountPrintJobsByUser) super.setFields(fields);
        }

        @Override
        public CountPrintJobsByUser setKey(java.lang.String key) {
          return (CountPrintJobsByUser) super.setKey(key);
        }

        @Override
        public CountPrintJobsByUser setOauthToken(java.lang.String oauthToken) {
          return (CountPrintJobsByUser) super.setOauthToken(oauthToken);
        }

        @Override
        public CountPrintJobsByUser setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CountPrintJobsByUser) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CountPrintJobsByUser setQuotaUser(java.lang.String quotaUser) {
          return (CountPrintJobsByUser) super.setQuotaUser(quotaUser);
        }

        @Override
        public CountPrintJobsByUser setUploadType(java.lang.String uploadType) {
          return (CountPrintJobsByUser) super.setUploadType(uploadType);
        }

        @Override
        public CountPrintJobsByUser setUploadProtocol(java.lang.String uploadProtocol) {
          return (CountPrintJobsByUser) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the
         * customer associated to the account making the request.
         */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the customer
       associated to the account making the request.
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /**
         * Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the
         * customer associated to the account making the request.
         */
        public CountPrintJobsByUser setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Note: Only >= and <= comparators are supported in this
         * filter. Supported filter fields: * complete_time
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not
       supported in this filter. Note: Only >= and <= comparators are supported in this filter. Supported
       filter fields: * complete_time
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Note: Only >= and <= comparators are supported in this
         * filter. Supported filter fields: * complete_time
         */
        public CountPrintJobsByUser setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Field used to order results. If omitted, results will be ordered in ascending order of
         * the 'user_email' field. Supported order_by fields: * user_email * job_count *
         * printer_count * device_count
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Field used to order results. If omitted, results will be ordered in ascending order of the
       'user_email' field. Supported order_by fields: * user_email * job_count * printer_count *
       device_count
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Field used to order results. If omitted, results will be ordered in ascending order of
         * the 'user_email' field. Supported order_by fields: * user_email * job_count *
         * printer_count * device_count
         */
        public CountPrintJobsByUser setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of results to return. Maximum and default are 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        public CountPrintJobsByUser setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Token to specify the page of the response to be returned. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Token to specify the page of the response to be returned.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Token to specify the page of the response to be returned. */
        public CountPrintJobsByUser setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The ID of the organizational unit for printers. If specified, only print jobs initiated
         * with printers from the specified organizational unit will be counted. If omitted, all
         * print jobs will be counted.
         */
        @com.google.api.client.util.Key
        private java.lang.String printerOrgUnitId;

        /** The ID of the organizational unit for printers. If specified, only print jobs initiated with
       printers from the specified organizational unit will be counted. If omitted, all print jobs will be
       counted.
         */
        public java.lang.String getPrinterOrgUnitId() {
          return printerOrgUnitId;
        }

        /**
         * The ID of the organizational unit for printers. If specified, only print jobs initiated
         * with printers from the specified organizational unit will be counted. If omitted, all
         * print jobs will be counted.
         */
        public CountPrintJobsByUser setPrinterOrgUnitId(java.lang.String printerOrgUnitId) {
          this.printerOrgUnitId = printerOrgUnitId;
          return this;
        }

        @Override
        public CountPrintJobsByUser set(String parameterName, Object value) {
          return (CountPrintJobsByUser) super.set(parameterName, value);
        }
      }
      /**
       * Get a list of print jobs.
       *
       * Create a request for the method "reports.enumeratePrintJobs".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link EnumeratePrintJobs#execute()} method to invoke the remote
       * operation.
       *
       * @param customer Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the customer
       *        associated to the account making the request.
       * @return the request
       */
      public EnumeratePrintJobs enumeratePrintJobs(java.lang.String customer) throws java.io.IOException {
        EnumeratePrintJobs result = new EnumeratePrintJobs(customer);
        initialize(result);
        return result;
      }

      public class EnumeratePrintJobs extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1EnumeratePrintJobsResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:enumeratePrintJobs";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Get a list of print jobs.
         *
         * Create a request for the method "reports.enumeratePrintJobs".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link EnumeratePrintJobs#execute()} method to invoke the remote
         * operation. <p> {@link EnumeratePrintJobs#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param customer Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the customer
       *        associated to the account making the request.
         * @since 1.13
         */
        protected EnumeratePrintJobs(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1EnumeratePrintJobsResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public EnumeratePrintJobs set$Xgafv(java.lang.String $Xgafv) {
          return (EnumeratePrintJobs) super.set$Xgafv($Xgafv);
        }

        @Override
        public EnumeratePrintJobs setAccessToken(java.lang.String accessToken) {
          return (EnumeratePrintJobs) super.setAccessToken(accessToken);
        }

        @Override
        public EnumeratePrintJobs setAlt(java.lang.String alt) {
          return (EnumeratePrintJobs) super.setAlt(alt);
        }

        @Override
        public EnumeratePrintJobs setCallback(java.lang.String callback) {
          return (EnumeratePrintJobs) super.setCallback(callback);
        }

        @Override
        public EnumeratePrintJobs setFields(java.lang.String fields) {
          return (EnumeratePrintJobs) super.setFields(fields);
        }

        @Override
        public EnumeratePrintJobs setKey(java.lang.String key) {
          return (EnumeratePrintJobs) super.setKey(key);
        }

        @Override
        public EnumeratePrintJobs setOauthToken(java.lang.String oauthToken) {
          return (EnumeratePrintJobs) super.setOauthToken(oauthToken);
        }

        @Override
        public EnumeratePrintJobs setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (EnumeratePrintJobs) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public EnumeratePrintJobs setQuotaUser(java.lang.String quotaUser) {
          return (EnumeratePrintJobs) super.setQuotaUser(quotaUser);
        }

        @Override
        public EnumeratePrintJobs setUploadType(java.lang.String uploadType) {
          return (EnumeratePrintJobs) super.setUploadType(uploadType);
        }

        @Override
        public EnumeratePrintJobs setUploadProtocol(java.lang.String uploadProtocol) {
          return (EnumeratePrintJobs) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the
         * customer associated to the account making the request.
         */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the customer
       associated to the account making the request.
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /**
         * Required. Customer ID prefixed with "customers/" or "customers/my_customer" to use the
         * customer associated to the account making the request.
         */
        public EnumeratePrintJobs setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Note: Only >= and <= comparators are supported for
         * `complete_time`. Note: Only = comparator supported for `user_id` and `printer_id`.
         * Supported filter fields: * complete_time * printer_id * user_id
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not
       supported in this filter. Note: Only >= and <= comparators are supported for `complete_time`. Note:
       Only = comparator supported for `user_id` and `printer_id`. Supported filter fields: *
       complete_time * printer_id * user_id
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Note: Only >= and <= comparators are supported for
         * `complete_time`. Note: Only = comparator supported for `user_id` and `printer_id`.
         * Supported filter fields: * complete_time * printer_id * user_id
         */
        public EnumeratePrintJobs setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Field used to order results. If not specified, results will be ordered in descending
         * order of the `complete_time` field. Supported order by fields: * title * state *
         * create_time * complete_time * document_page_count * color_mode * duplex_mode * printer *
         * user_email
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Field used to order results. If not specified, results will be ordered in descending order of the
       `complete_time` field. Supported order by fields: * title * state * create_time * complete_time *
       document_page_count * color_mode * duplex_mode * printer * user_email
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Field used to order results. If not specified, results will be ordered in descending
         * order of the `complete_time` field. Supported order by fields: * title * state *
         * create_time * complete_time * document_page_count * color_mode * duplex_mode * printer *
         * user_email
         */
        public EnumeratePrintJobs setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * The number of print jobs in the page from 0 to 100 inclusive, if page_size is not
         * specified or zero, the size will be 50.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The number of print jobs in the page from 0 to 100 inclusive, if page_size is not specified or
       zero, the size will be 50.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The number of print jobs in the page from 0 to 100 inclusive, if page_size is not
         * specified or zero, the size will be 50.
         */
        public EnumeratePrintJobs setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from a previous `EnumeratePrintJobs` call. Provide this to retrieve
         * the subsequent page. If omitted, the first page of results will be returned. When
         * paginating, all other parameters provided to `EnumeratePrintJobs` must match the call
         * that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from a previous `EnumeratePrintJobs` call. Provide this to retrieve the
       subsequent page. If omitted, the first page of results will be returned. When paginating, all other
       parameters provided to `EnumeratePrintJobs` must match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from a previous `EnumeratePrintJobs` call. Provide this to retrieve
         * the subsequent page. If omitted, the first page of results will be returned. When
         * paginating, all other parameters provided to `EnumeratePrintJobs` must match the call
         * that provided the page token.
         */
        public EnumeratePrintJobs setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The ID of the organizational unit for printers. If specified, only print jobs submitted
         * to printers from the specified organizational unit will be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.String printerOrgUnitId;

        /** The ID of the organizational unit for printers. If specified, only print jobs submitted to printers
       from the specified organizational unit will be returned.
         */
        public java.lang.String getPrinterOrgUnitId() {
          return printerOrgUnitId;
        }

        /**
         * The ID of the organizational unit for printers. If specified, only print jobs submitted
         * to printers from the specified organizational unit will be returned.
         */
        public EnumeratePrintJobs setPrinterOrgUnitId(java.lang.String printerOrgUnitId) {
          this.printerOrgUnitId = printerOrgUnitId;
          return this;
        }

        @Override
        public EnumeratePrintJobs set(String parameterName, Object value) {
          return (EnumeratePrintJobs) super.set(parameterName, value);
        }
      }
      /**
       * Generate report of managed Chrome browser devices that have a specified app installed.
       *
       * Create a request for the method "reports.findInstalledAppDevices".
       *
       * This request holds the parameters needed by the chromemanagement server.  After setting any
       * optional parameters, call the {@link FindInstalledAppDevices#execute()} method to invoke the
       * remote operation.
       *
       * @param customer Required. Customer id or "my_customer" to use the customer associated to the account making the
       *        request.
       * @return the request
       */
      public FindInstalledAppDevices findInstalledAppDevices(java.lang.String customer) throws java.io.IOException {
        FindInstalledAppDevices result = new FindInstalledAppDevices(customer);
        initialize(result);
        return result;
      }

      public class FindInstalledAppDevices extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1FindInstalledAppDevicesResponse> {

        private static final String REST_PATH = "v1/{+customer}/reports:findInstalledAppDevices";

        private final java.util.regex.Pattern CUSTOMER_PATTERN =
            java.util.regex.Pattern.compile("^customers/[^/]+$");

        /**
         * Generate report of managed Chrome browser devices that have a specified app installed.
         *
         * Create a request for the method "reports.findInstalledAppDevices".
         *
         * This request holds the parameters needed by the the chromemanagement server.  After setting any
         * optional parameters, call the {@link FindInstalledAppDevices#execute()} method to invoke the
         * remote operation. <p> {@link FindInstalledAppDevices#initialize(com.google.api.client.googleapi
         * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param customer Required. Customer id or "my_customer" to use the customer associated to the account making the
       *        request.
         * @since 1.13
         */
        protected FindInstalledAppDevices(java.lang.String customer) {
          super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1FindInstalledAppDevicesResponse.class);
          this.customer = com.google.api.client.util.Preconditions.checkNotNull(customer, "Required parameter customer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public FindInstalledAppDevices set$Xgafv(java.lang.String $Xgafv) {
          return (FindInstalledAppDevices) super.set$Xgafv($Xgafv);
        }

        @Override
        public FindInstalledAppDevices setAccessToken(java.lang.String accessToken) {
          return (FindInstalledAppDevices) super.setAccessToken(accessToken);
        }

        @Override
        public FindInstalledAppDevices setAlt(java.lang.String alt) {
          return (FindInstalledAppDevices) super.setAlt(alt);
        }

        @Override
        public FindInstalledAppDevices setCallback(java.lang.String callback) {
          return (FindInstalledAppDevices) super.setCallback(callback);
        }

        @Override
        public FindInstalledAppDevices setFields(java.lang.String fields) {
          return (FindInstalledAppDevices) super.setFields(fields);
        }

        @Override
        public FindInstalledAppDevices setKey(java.lang.String key) {
          return (FindInstalledAppDevices) super.setKey(key);
        }

        @Override
        public FindInstalledAppDevices setOauthToken(java.lang.String oauthToken) {
          return (FindInstalledAppDevices) super.setOauthToken(oauthToken);
        }

        @Override
        public FindInstalledAppDevices setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (FindInstalledAppDevices) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public FindInstalledAppDevices setQuotaUser(java.lang.String quotaUser) {
          return (FindInstalledAppDevices) super.setQuotaUser(quotaUser);
        }

        @Override
        public FindInstalledAppDevices setUploadType(java.lang.String uploadType) {
          return (FindInstalledAppDevices) super.setUploadType(uploadType);
        }

        @Override
        public FindInstalledAppDevices setUploadProtocol(java.lang.String uploadProtocol) {
          return (FindInstalledAppDevices) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Customer id or "my_customer" to use the customer associated to the account
         * making the request.
         */
        @com.google.api.client.util.Key
        private java.lang.String customer;

        /** Required. Customer id or "my_customer" to use the customer associated to the account making the
       request.
         */
        public java.lang.String getCustomer() {
          return customer;
        }

        /**
         * Required. Customer id or "my_customer" to use the customer associated to the account
         * making the request.
         */
        public FindInstalledAppDevices setCustomer(java.lang.String customer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CUSTOMER_PATTERN.matcher(customer).matches(),
                "Parameter customer must conform to the pattern " +
                "^customers/[^/]+$");
          }
          this.customer = customer;
          return this;
        }

        /**
         * Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g.
         * ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g.
         * com.evernote).
         */
        @com.google.api.client.util.Key
        private java.lang.String appId;

        /** Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g.
       ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).
         */
        public java.lang.String getAppId() {
          return appId;
        }

        /**
         * Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g.
         * ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g.
         * com.evernote).
         */
        public FindInstalledAppDevices setAppId(java.lang.String appId) {
          this.appId = appId;
          return this;
        }

        /** Type of the app. */
        @com.google.api.client.util.Key
        private java.lang.String appType;

        /** Type of the app.
         */
        public java.lang.String getAppType() {
          return appType;
        }

        /** Type of the app. */
        public FindInstalledAppDevices setAppType(java.lang.String appType) {
          this.appType = appType;
          return this;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Supported filter fields: * last_active_date
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not
       supported in this filter. Supported filter fields: * last_active_date
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations
         * are not supported in this filter. Supported filter fields: * last_active_date
         */
        public FindInstalledAppDevices setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** Field used to order results. Supported order by fields: * machine * device_id */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Field used to order results. Supported order by fields: * machine * device_id
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /** Field used to order results. Supported order by fields: * machine * device_id */
        public FindInstalledAppDevices setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /** The ID of the organizational unit. */
        @com.google.api.client.util.Key
        private java.lang.String orgUnitId;

        /** The ID of the organizational unit.
         */
        public java.lang.String getOrgUnitId() {
          return orgUnitId;
        }

        /** The ID of the organizational unit. */
        public FindInstalledAppDevices setOrgUnitId(java.lang.String orgUnitId) {
          this.orgUnitId = orgUnitId;
          return this;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of results to return. Maximum and default are 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum number of results to return. Maximum and default are 100. */
        public FindInstalledAppDevices setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Token to specify the page of the request to be returned. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Token to specify the page of the request to be returned.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Token to specify the page of the request to be returned. */
        public FindInstalledAppDevices setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public FindInstalledAppDevices set(String parameterName, Object value) {
          return (FindInstalledAppDevices) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Telemetry collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
     *   {@code ChromeManagement.Telemetry.List request = chromemanagement.telemetry().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Telemetry telemetry() {
      return new Telemetry();
    }

    /**
     * The "telemetry" collection of methods.
     */
    public class Telemetry {

      /**
       * An accessor for creating requests from the Devices collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
       *   {@code ChromeManagement.Devices.List request = chromemanagement.devices().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Devices devices() {
        return new Devices();
      }

      /**
       * The "devices" collection of methods.
       */
      public class Devices {

        /**
         * Get telemetry device.
         *
         * Create a request for the method "devices.get".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the `TelemetryDevice` to return.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryDevice> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+/telemetry/devices/[^/]+$");

          /**
           * Get telemetry device.
           *
           * Create a request for the method "devices.get".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the `TelemetryDevice` to return.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryDevice.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/telemetry/devices/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the `TelemetryDevice` to return. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the `TelemetryDevice` to return.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the `TelemetryDevice` to return. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/telemetry/devices/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Read mask to specify which fields to return. Supported read_mask paths are: -
           * name - org_unit_id - device_id - serial_number - cpu_info - cpu_status_report -
           * memory_info - memory_status_report - network_info - network_diagnostics_report -
           * network_status_report - os_update_status - graphics_info - graphics_status_report -
           * battery_info - battery_status_report - storage_info - storage_status_report -
           * thunderbolt_info - audio_status_report - boot_performance_report -
           * heartbeat_status_report - network_bandwidth_report - peripherals_report -
           * kiosk_app_status_report - app_report - runtime_counters_report
           */
          @com.google.api.client.util.Key
          private String readMask;

          /** Required. Read mask to specify which fields to return. Supported read_mask paths are: - name -
         org_unit_id - device_id - serial_number - cpu_info - cpu_status_report - memory_info -
         memory_status_report - network_info - network_diagnostics_report - network_status_report -
         os_update_status - graphics_info - graphics_status_report - battery_info - battery_status_report -
         storage_info - storage_status_report - thunderbolt_info - audio_status_report -
         boot_performance_report - heartbeat_status_report - network_bandwidth_report - peripherals_report -
         kiosk_app_status_report - app_report - runtime_counters_report
           */
          public String getReadMask() {
            return readMask;
          }

          /**
           * Required. Read mask to specify which fields to return. Supported read_mask paths are: -
           * name - org_unit_id - device_id - serial_number - cpu_info - cpu_status_report -
           * memory_info - memory_status_report - network_info - network_diagnostics_report -
           * network_status_report - os_update_status - graphics_info - graphics_status_report -
           * battery_info - battery_status_report - storage_info - storage_status_report -
           * thunderbolt_info - audio_status_report - boot_performance_report -
           * heartbeat_status_report - network_bandwidth_report - peripherals_report -
           * kiosk_app_status_report - app_report - runtime_counters_report
           */
          public Get setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List all telemetry devices.
         *
         * Create a request for the method "devices.list".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Customer id or "my_customer" to use the customer associated to the account making the
         *        request.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1ListTelemetryDevicesResponse> {

          private static final String REST_PATH = "v1/{+parent}/telemetry/devices";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+$");

          /**
           * List all telemetry devices.
           *
           * Create a request for the method "devices.list".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Customer id or "my_customer" to use the customer associated to the account making the
         *        request.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1ListTelemetryDevicesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Customer id or "my_customer" to use the customer associated to the account
           * making the request.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Customer id or "my_customer" to use the customer associated to the account making the
         request.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Customer id or "my_customer" to use the customer associated to the account
           * making the request.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Only include resources that match the filter. Requests that don't specify a
           * "reports_timestamp" value will default to returning only recent reports. Specify
           * "reports_timestamp>=0" to get all report data. Supported filter fields: - org_unit_id -
           * serial_number - device_id - reports_timestamp The "reports_timestamp" filter accepts
           * either the Unix Epoch milliseconds format or the RFC3339 UTC "Zulu" format with
           * nanosecond resolution and up to nine fractional digits. Both formats should be
           * surrounded by simple double quotes. Examples: "2014-10-02T15:01:23Z",
           * "2014-10-02T15:01:23.045123456Z", "1679283943823".
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. Only include resources that match the filter. Requests that don't specify a
         "reports_timestamp" value will default to returning only recent reports. Specify
         "reports_timestamp>=0" to get all report data. Supported filter fields: - org_unit_id -
         serial_number - device_id - reports_timestamp The "reports_timestamp" filter accepts either the
         Unix Epoch milliseconds format or the RFC3339 UTC "Zulu" format with nanosecond resolution and up
         to nine fractional digits. Both formats should be surrounded by simple double quotes. Examples:
         "2014-10-02T15:01:23Z", "2014-10-02T15:01:23.045123456Z", "1679283943823".
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. Only include resources that match the filter. Requests that don't specify a
           * "reports_timestamp" value will default to returning only recent reports. Specify
           * "reports_timestamp>=0" to get all report data. Supported filter fields: - org_unit_id -
           * serial_number - device_id - reports_timestamp The "reports_timestamp" filter accepts
           * either the Unix Epoch milliseconds format or the RFC3339 UTC "Zulu" format with
           * nanosecond resolution and up to nine fractional digits. Both formats should be
           * surrounded by simple double quotes. Examples: "2014-10-02T15:01:23Z",
           * "2014-10-02T15:01:23.045123456Z", "1679283943823".
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Maximum number of results to return. Default value is 100. Maximum value is 1000. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of results to return. Default value is 100. Maximum value is 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Maximum number of results to return. Default value is 100. Maximum value is 1000. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Token to specify next page in the list. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Token to specify next page in the list.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Token to specify next page in the list. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * Required. Read mask to specify which fields to return. Supported read_mask paths are: -
           * name - org_unit_id - device_id - serial_number - cpu_info - cpu_status_report -
           * memory_info - memory_status_report - network_info - network_diagnostics_report -
           * network_status_report - os_update_status - graphics_info - graphics_status_report -
           * battery_info - battery_status_report - storage_info - storage_status_report -
           * thunderbolt_info - audio_status_report - boot_performance_report -
           * heartbeat_status_report - network_bandwidth_report - peripherals_report -
           * kiosk_app_status_report - app_report - runtime_counters_report
           */
          @com.google.api.client.util.Key
          private String readMask;

          /** Required. Read mask to specify which fields to return. Supported read_mask paths are: - name -
         org_unit_id - device_id - serial_number - cpu_info - cpu_status_report - memory_info -
         memory_status_report - network_info - network_diagnostics_report - network_status_report -
         os_update_status - graphics_info - graphics_status_report - battery_info - battery_status_report -
         storage_info - storage_status_report - thunderbolt_info - audio_status_report -
         boot_performance_report - heartbeat_status_report - network_bandwidth_report - peripherals_report -
         kiosk_app_status_report - app_report - runtime_counters_report
           */
          public String getReadMask() {
            return readMask;
          }

          /**
           * Required. Read mask to specify which fields to return. Supported read_mask paths are: -
           * name - org_unit_id - device_id - serial_number - cpu_info - cpu_status_report -
           * memory_info - memory_status_report - network_info - network_diagnostics_report -
           * network_status_report - os_update_status - graphics_info - graphics_status_report -
           * battery_info - battery_status_report - storage_info - storage_status_report -
           * thunderbolt_info - audio_status_report - boot_performance_report -
           * heartbeat_status_report - network_bandwidth_report - peripherals_report -
           * kiosk_app_status_report - app_report - runtime_counters_report
           */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Events collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
       *   {@code ChromeManagement.Events.List request = chromemanagement.events().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Events events() {
        return new Events();
      }

      /**
       * The "events" collection of methods.
       */
      public class Events {

        /**
         * List telemetry events.
         *
         * Create a request for the method "events.list".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Customer id or "my_customer" to use the customer associated to the account making the
         *        request.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1ListTelemetryEventsResponse> {

          private static final String REST_PATH = "v1/{+parent}/telemetry/events";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+$");

          /**
           * List telemetry events.
           *
           * Create a request for the method "events.list".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Customer id or "my_customer" to use the customer associated to the account making the
         *        request.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1ListTelemetryEventsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Customer id or "my_customer" to use the customer associated to the account
           * making the request.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Customer id or "my_customer" to use the customer associated to the account making the
         request.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Customer id or "my_customer" to use the customer associated to the account
           * making the request.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Only include resources that match the filter. Although this parameter is
           * currently optional, this parameter will be required- please specify at least 1 event
           * type. Supported filter fields: - device_id - user_id - device_org_unit_id -
           * user_org_unit_id - timestamp - event_type The "timestamp" filter accepts either the
           * Unix Epoch milliseconds format or the RFC3339 UTC "Zulu" format with nanosecond
           * resolution and up to nine fractional digits. Both formats should be surrounded by
           * simple double quotes. Examples: "2014-10-02T15:01:23Z",
           * "2014-10-02T15:01:23.045123456Z", "1679283943823".
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. Only include resources that match the filter. Although this parameter is currently
         optional, this parameter will be required- please specify at least 1 event type. Supported filter
         fields: - device_id - user_id - device_org_unit_id - user_org_unit_id - timestamp - event_type The
         "timestamp" filter accepts either the Unix Epoch milliseconds format or the RFC3339 UTC "Zulu"
         format with nanosecond resolution and up to nine fractional digits. Both formats should be
         surrounded by simple double quotes. Examples: "2014-10-02T15:01:23Z",
         "2014-10-02T15:01:23.045123456Z", "1679283943823".
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. Only include resources that match the filter. Although this parameter is
           * currently optional, this parameter will be required- please specify at least 1 event
           * type. Supported filter fields: - device_id - user_id - device_org_unit_id -
           * user_org_unit_id - timestamp - event_type The "timestamp" filter accepts either the
           * Unix Epoch milliseconds format or the RFC3339 UTC "Zulu" format with nanosecond
           * resolution and up to nine fractional digits. Both formats should be surrounded by
           * simple double quotes. Examples: "2014-10-02T15:01:23Z",
           * "2014-10-02T15:01:23.045123456Z", "1679283943823".
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Maximum number of results to return. Default value is 100. Maximum value is
           * 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. Maximum number of results to return. Default value is 100. Maximum value is 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. Maximum number of results to return. Default value is 100. Maximum value is
           * 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. Token to specify next page in the list. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Token to specify next page in the list.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. Token to specify next page in the list. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * Required. Read mask to specify which fields to return. Although currently required,
           * this field will become optional, while the filter parameter with an event type will be
           * come required. Supported read_mask paths are: - device - user -
           * audio_severe_underrun_event - usb_peripherals_event - https_latency_change_event -
           * network_state_change_event - wifi_signal_strength_event -
           * vpn_connection_state_change_event - app_install_event - app_uninstall_event -
           * app_launch_event - os_crash_event
           */
          @com.google.api.client.util.Key
          private String readMask;

          /** Required. Read mask to specify which fields to return. Although currently required, this field will
         become optional, while the filter parameter with an event type will be come required. Supported
         read_mask paths are: - device - user - audio_severe_underrun_event - usb_peripherals_event -
         https_latency_change_event - network_state_change_event - wifi_signal_strength_event -
         vpn_connection_state_change_event - app_install_event - app_uninstall_event - app_launch_event -
         os_crash_event
           */
          public String getReadMask() {
            return readMask;
          }

          /**
           * Required. Read mask to specify which fields to return. Although currently required,
           * this field will become optional, while the filter parameter with an event type will be
           * come required. Supported read_mask paths are: - device - user -
           * audio_severe_underrun_event - usb_peripherals_event - https_latency_change_event -
           * network_state_change_event - wifi_signal_strength_event -
           * vpn_connection_state_change_event - app_install_event - app_uninstall_event -
           * app_launch_event - os_crash_event
           */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the NotificationConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
       *   {@code ChromeManagement.NotificationConfigs.List request = chromemanagement.notificationConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public NotificationConfigs notificationConfigs() {
        return new NotificationConfigs();
      }

      /**
       * The "notificationConfigs" collection of methods.
       */
      public class NotificationConfigs {

        /**
         * Create a telemetry notification config.
         *
         * Create a request for the method "notificationConfigs.create".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource where this notification config will be created. Format:
         *        `customers/{customer}`
         * @param content the {@link com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryNotificationConfig}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryNotificationConfig content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryNotificationConfig> {

          private static final String REST_PATH = "v1/{+parent}/telemetry/notificationConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+$");

          /**
           * Create a telemetry notification config.
           *
           * Create a request for the method "notificationConfigs.create".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource where this notification config will be created. Format:
         *        `customers/{customer}`
           * @param content the {@link com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryNotificationConfig}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryNotificationConfig content) {
            super(ChromeManagement.this, "POST", REST_PATH, content, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryNotificationConfig.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource where this notification config will be created. Format:
           * `customers/{customer}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource where this notification config will be created. Format:
         `customers/{customer}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource where this notification config will be created. Format:
           * `customers/{customer}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a telemetry notification config.
         *
         * Create a request for the method "notificationConfigs.delete".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the notification config to delete. Format:
         *        `customers/{customer}/telemetry/notificationConfigs/{notification_config}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+/telemetry/notificationConfigs/[^/]+$");

          /**
           * Delete a telemetry notification config.
           *
           * Create a request for the method "notificationConfigs.delete".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the notification config to delete. Format:
         *        `customers/{customer}/telemetry/notificationConfigs/{notification_config}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(ChromeManagement.this, "DELETE", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/telemetry/notificationConfigs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the notification config to delete. Format:
           * `customers/{customer}/telemetry/notificationConfigs/{notification_config}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the notification config to delete. Format:
         `customers/{customer}/telemetry/notificationConfigs/{notification_config}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the notification config to delete. Format:
           * `customers/{customer}/telemetry/notificationConfigs/{notification_config}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/telemetry/notificationConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * List all telemetry notification configs.
         *
         * Create a request for the method "notificationConfigs.list".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent which owns the notification configs.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse> {

          private static final String REST_PATH = "v1/{+parent}/telemetry/notificationConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+$");

          /**
           * List all telemetry notification configs.
           *
           * Create a request for the method "notificationConfigs.list".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent which owns the notification configs.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent which owns the notification configs. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent which owns the notification configs.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent which owns the notification configs. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of notification configs to return. The service may return fewer than
           * this value. If unspecified, at most 100 notification configs will be returned. The
           * maximum value is 100; values above 100 will be coerced to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of notification configs to return. The service may return fewer than this value.
         If unspecified, at most 100 notification configs will be returned. The maximum value is 100; values
         above 100 will be coerced to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of notification configs to return. The service may return fewer than
           * this value. If unspecified, at most 100 notification configs will be returned. The
           * maximum value is 100; values above 100 will be coerced to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListTelemetryNotificationConfigs` call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListTelemetryNotificationConfigs` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListTelemetryNotificationConfigs` call. Provide this to
         retrieve the subsequent page. When paginating, all other parameters provided to
         `ListTelemetryNotificationConfigs` must match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListTelemetryNotificationConfigs` call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListTelemetryNotificationConfigs` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Users collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChromeManagement chromemanagement = new ChromeManagement(...);}
       *   {@code ChromeManagement.Users.List request = chromemanagement.users().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Users users() {
        return new Users();
      }

      /**
       * The "users" collection of methods.
       */
      public class Users {

        /**
         * Get telemetry user.
         *
         * Create a request for the method "users.get".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the `TelemetryUser` to return.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryUser> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+/telemetry/users/[^/]+$");

          /**
           * Get telemetry user.
           *
           * Create a request for the method "users.get".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the `TelemetryUser` to return.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1TelemetryUser.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/telemetry/users/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the `TelemetryUser` to return. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the `TelemetryUser` to return.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the `TelemetryUser` to return. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^customers/[^/]+/telemetry/users/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Read mask to specify which fields to return. Supported read_mask paths are: - name -
           * org_unit_id - user_id - user_email - user_device.device_id -
           * user_device.audio_status_report - user_device.device_activity_report -
           * user_device.network_bandwidth_report - user_device.peripherals_report -
           * user_device.app_report
           */
          @com.google.api.client.util.Key
          private String readMask;

          /** Read mask to specify which fields to return. Supported read_mask paths are: - name - org_unit_id -
         user_id - user_email - user_device.device_id - user_device.audio_status_report -
         user_device.device_activity_report - user_device.network_bandwidth_report -
         user_device.peripherals_report - user_device.app_report
           */
          public String getReadMask() {
            return readMask;
          }

          /**
           * Read mask to specify which fields to return. Supported read_mask paths are: - name -
           * org_unit_id - user_id - user_email - user_device.device_id -
           * user_device.audio_status_report - user_device.device_activity_report -
           * user_device.network_bandwidth_report - user_device.peripherals_report -
           * user_device.app_report
           */
          public Get setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List all telemetry users.
         *
         * Create a request for the method "users.list".
         *
         * This request holds the parameters needed by the chromemanagement server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Customer id or "my_customer" to use the customer associated to the account making the
         *        request.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ChromeManagementRequest<com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1ListTelemetryUsersResponse> {

          private static final String REST_PATH = "v1/{+parent}/telemetry/users";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^customers/[^/]+$");

          /**
           * List all telemetry users.
           *
           * Create a request for the method "users.list".
           *
           * This request holds the parameters needed by the the chromemanagement server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Customer id or "my_customer" to use the customer associated to the account making the
         *        request.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(ChromeManagement.this, "GET", REST_PATH, null, com.google.api.services.chromemanagement.v1.model.GoogleChromeManagementV1ListTelemetryUsersResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Customer id or "my_customer" to use the customer associated to the account
           * making the request.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Customer id or "my_customer" to use the customer associated to the account making the
         request.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Customer id or "my_customer" to use the customer associated to the account
           * making the request.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^customers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Only include resources that match the filter. Supported filter fields: - user_id -
           * user_org_unit_id
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Only include resources that match the filter. Supported filter fields: - user_id - user_org_unit_id
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Only include resources that match the filter. Supported filter fields: - user_id -
           * user_org_unit_id
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Maximum number of results to return. Default value is 100. Maximum value is 1000. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of results to return. Default value is 100. Maximum value is 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Maximum number of results to return. Default value is 100. Maximum value is 1000. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Token to specify next page in the list. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Token to specify next page in the list.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Token to specify next page in the list. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * Read mask to specify which fields to return. Supported read_mask paths are: - name -
           * org_unit_id - user_id - user_email - user_device.device_id -
           * user_device.audio_status_report - user_device.device_activity_report -
           * user_device.network_bandwidth_report - user_device.peripherals_report -
           * user_device.app_report
           */
          @com.google.api.client.util.Key
          private String readMask;

          /** Read mask to specify which fields to return. Supported read_mask paths are: - name - org_unit_id -
         user_id - user_email - user_device.device_id - user_device.audio_status_report -
         user_device.device_activity_report - user_device.network_bandwidth_report -
         user_device.peripherals_report - user_device.app_report
           */
          public String getReadMask() {
            return readMask;
          }

          /**
           * Read mask to specify which fields to return. Supported read_mask paths are: - name -
           * org_unit_id - user_id - user_email - user_device.device_id -
           * user_device.audio_status_report - user_device.device_activity_report -
           * user_device.network_bandwidth_report - user_device.peripherals_report -
           * user_device.app_report
           */
          public List setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link ChromeManagement}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ChromeManagement}. */
    @Override
    public ChromeManagement build() {
      return new ChromeManagement(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ChromeManagementRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setChromeManagementRequestInitializer(
        ChromeManagementRequestInitializer chromemanagementRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(chromemanagementRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
