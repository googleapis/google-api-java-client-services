/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.spanner.v1.model;

/**
 * Free instance specific metadata that is kept even after an instance has been upgraded for
 * tracking purposes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Spanner API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FreeInstanceMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Specifies the expiration behavior of a free instance. The default of ExpireBehavior is
   * `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before
   * expiration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String expireBehavior;

  /**
   * Output only. Timestamp after which the instance will either be upgraded or scheduled for
   * deletion after a grace period. ExpireBehavior is used to choose between upgrading or scheduling
   * the free instance for deletion. This timestamp is set during the creation of a free instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expireTime;

  /**
   * Output only. If present, the timestamp at which the free instance was upgraded to a provisioned
   * instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String upgradeTime;

  /**
   * Specifies the expiration behavior of a free instance. The default of ExpireBehavior is
   * `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before
   * expiration.
   * @return value or {@code null} for none
   */
  public java.lang.String getExpireBehavior() {
    return expireBehavior;
  }

  /**
   * Specifies the expiration behavior of a free instance. The default of ExpireBehavior is
   * `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before
   * expiration.
   * @param expireBehavior expireBehavior or {@code null} for none
   */
  public FreeInstanceMetadata setExpireBehavior(java.lang.String expireBehavior) {
    this.expireBehavior = expireBehavior;
    return this;
  }

  /**
   * Output only. Timestamp after which the instance will either be upgraded or scheduled for
   * deletion after a grace period. ExpireBehavior is used to choose between upgrading or scheduling
   * the free instance for deletion. This timestamp is set during the creation of a free instance.
   * @return value or {@code null} for none
   */
  public String getExpireTime() {
    return expireTime;
  }

  /**
   * Output only. Timestamp after which the instance will either be upgraded or scheduled for
   * deletion after a grace period. ExpireBehavior is used to choose between upgrading or scheduling
   * the free instance for deletion. This timestamp is set during the creation of a free instance.
   * @param expireTime expireTime or {@code null} for none
   */
  public FreeInstanceMetadata setExpireTime(String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * Output only. If present, the timestamp at which the free instance was upgraded to a provisioned
   * instance.
   * @return value or {@code null} for none
   */
  public String getUpgradeTime() {
    return upgradeTime;
  }

  /**
   * Output only. If present, the timestamp at which the free instance was upgraded to a provisioned
   * instance.
   * @param upgradeTime upgradeTime or {@code null} for none
   */
  public FreeInstanceMetadata setUpgradeTime(String upgradeTime) {
    this.upgradeTime = upgradeTime;
    return this;
  }

  @Override
  public FreeInstanceMetadata set(String fieldName, Object value) {
    return (FreeInstanceMetadata) super.set(fieldName, value);
  }

  @Override
  public FreeInstanceMetadata clone() {
    return (FreeInstanceMetadata) super.clone();
  }

}
