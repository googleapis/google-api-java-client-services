/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.retail.v2beta.model;

/**
 * A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An
 * action specifies what occurs on that trigger. Currently rules only work for controls with
 * SOLUTION_TYPE_SEARCH.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI Search for Retail API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRetailV2betaRule extends com.google.api.client.json.GenericJson {

  /**
   * A boost action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleBoostAction boostAction;

  /**
   * Required. The condition that triggers the rule. If the condition is empty, the rule will always
   * apply.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaCondition condition;

  /**
   * Prevents term from being associated with other terms.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleDoNotAssociateAction doNotAssociateAction;

  /**
   * Filters results.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleFilterAction filterAction;

  /**
   * Force returns an attribute as a facet in the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleForceReturnFacetAction forceReturnFacetAction;

  /**
   * Ignores specific terms from query during search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleIgnoreAction ignoreAction;

  /**
   * Treats specific term as a synonym with a group of terms. Group of terms will not be treated as
   * synonyms with the specific term.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleOnewaySynonymsAction onewaySynonymsAction;

  /**
   * Pins one or more specified products to a specific position in the results.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRulePinAction pinAction;

  /**
   * Redirects a shopper to a specific page.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleRedirectAction redirectAction;

  /**
   * Remove an attribute as a facet in the request (if present).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleRemoveFacetAction removeFacetAction;

  /**
   * Replaces specific terms in the query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleReplacementAction replacementAction;

  /**
   * Treats a set of terms as synonyms of one another.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2betaRuleTwowaySynonymsAction twowaySynonymsAction;

  /**
   * A boost action.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleBoostAction getBoostAction() {
    return boostAction;
  }

  /**
   * A boost action.
   * @param boostAction boostAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setBoostAction(GoogleCloudRetailV2betaRuleBoostAction boostAction) {
    this.boostAction = boostAction;
    return this;
  }

  /**
   * Required. The condition that triggers the rule. If the condition is empty, the rule will always
   * apply.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaCondition getCondition() {
    return condition;
  }

  /**
   * Required. The condition that triggers the rule. If the condition is empty, the rule will always
   * apply.
   * @param condition condition or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setCondition(GoogleCloudRetailV2betaCondition condition) {
    this.condition = condition;
    return this;
  }

  /**
   * Prevents term from being associated with other terms.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleDoNotAssociateAction getDoNotAssociateAction() {
    return doNotAssociateAction;
  }

  /**
   * Prevents term from being associated with other terms.
   * @param doNotAssociateAction doNotAssociateAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setDoNotAssociateAction(GoogleCloudRetailV2betaRuleDoNotAssociateAction doNotAssociateAction) {
    this.doNotAssociateAction = doNotAssociateAction;
    return this;
  }

  /**
   * Filters results.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleFilterAction getFilterAction() {
    return filterAction;
  }

  /**
   * Filters results.
   * @param filterAction filterAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setFilterAction(GoogleCloudRetailV2betaRuleFilterAction filterAction) {
    this.filterAction = filterAction;
    return this;
  }

  /**
   * Force returns an attribute as a facet in the request.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleForceReturnFacetAction getForceReturnFacetAction() {
    return forceReturnFacetAction;
  }

  /**
   * Force returns an attribute as a facet in the request.
   * @param forceReturnFacetAction forceReturnFacetAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setForceReturnFacetAction(GoogleCloudRetailV2betaRuleForceReturnFacetAction forceReturnFacetAction) {
    this.forceReturnFacetAction = forceReturnFacetAction;
    return this;
  }

  /**
   * Ignores specific terms from query during search.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleIgnoreAction getIgnoreAction() {
    return ignoreAction;
  }

  /**
   * Ignores specific terms from query during search.
   * @param ignoreAction ignoreAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setIgnoreAction(GoogleCloudRetailV2betaRuleIgnoreAction ignoreAction) {
    this.ignoreAction = ignoreAction;
    return this;
  }

  /**
   * Treats specific term as a synonym with a group of terms. Group of terms will not be treated as
   * synonyms with the specific term.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleOnewaySynonymsAction getOnewaySynonymsAction() {
    return onewaySynonymsAction;
  }

  /**
   * Treats specific term as a synonym with a group of terms. Group of terms will not be treated as
   * synonyms with the specific term.
   * @param onewaySynonymsAction onewaySynonymsAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setOnewaySynonymsAction(GoogleCloudRetailV2betaRuleOnewaySynonymsAction onewaySynonymsAction) {
    this.onewaySynonymsAction = onewaySynonymsAction;
    return this;
  }

  /**
   * Pins one or more specified products to a specific position in the results.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRulePinAction getPinAction() {
    return pinAction;
  }

  /**
   * Pins one or more specified products to a specific position in the results.
   * @param pinAction pinAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setPinAction(GoogleCloudRetailV2betaRulePinAction pinAction) {
    this.pinAction = pinAction;
    return this;
  }

  /**
   * Redirects a shopper to a specific page.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleRedirectAction getRedirectAction() {
    return redirectAction;
  }

  /**
   * Redirects a shopper to a specific page.
   * @param redirectAction redirectAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setRedirectAction(GoogleCloudRetailV2betaRuleRedirectAction redirectAction) {
    this.redirectAction = redirectAction;
    return this;
  }

  /**
   * Remove an attribute as a facet in the request (if present).
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleRemoveFacetAction getRemoveFacetAction() {
    return removeFacetAction;
  }

  /**
   * Remove an attribute as a facet in the request (if present).
   * @param removeFacetAction removeFacetAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setRemoveFacetAction(GoogleCloudRetailV2betaRuleRemoveFacetAction removeFacetAction) {
    this.removeFacetAction = removeFacetAction;
    return this;
  }

  /**
   * Replaces specific terms in the query.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleReplacementAction getReplacementAction() {
    return replacementAction;
  }

  /**
   * Replaces specific terms in the query.
   * @param replacementAction replacementAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setReplacementAction(GoogleCloudRetailV2betaRuleReplacementAction replacementAction) {
    this.replacementAction = replacementAction;
    return this;
  }

  /**
   * Treats a set of terms as synonyms of one another.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2betaRuleTwowaySynonymsAction getTwowaySynonymsAction() {
    return twowaySynonymsAction;
  }

  /**
   * Treats a set of terms as synonyms of one another.
   * @param twowaySynonymsAction twowaySynonymsAction or {@code null} for none
   */
  public GoogleCloudRetailV2betaRule setTwowaySynonymsAction(GoogleCloudRetailV2betaRuleTwowaySynonymsAction twowaySynonymsAction) {
    this.twowaySynonymsAction = twowaySynonymsAction;
    return this;
  }

  @Override
  public GoogleCloudRetailV2betaRule set(String fieldName, Object value) {
    return (GoogleCloudRetailV2betaRule) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRetailV2betaRule clone() {
    return (GoogleCloudRetailV2betaRule) super.clone();
  }

}
