/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudcontrolspartner.v1.model;

/**
 * Details about the EKM connection
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Controls Partner API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EkmConnection extends com.google.api.client.json.GenericJson {

  /**
   * The connection error that occurred if any
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ConnectionError connectionError;

  /**
   * Resource name of the EKM connection in the format:
   * projects/{project}/locations/{location}/ekmConnections/{ekm_connection}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String connectionName;

  /**
   * Output only. The connection state
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String connectionState;

  /**
   * The connection error that occurred if any
   * @return value or {@code null} for none
   */
  public ConnectionError getConnectionError() {
    return connectionError;
  }

  /**
   * The connection error that occurred if any
   * @param connectionError connectionError or {@code null} for none
   */
  public EkmConnection setConnectionError(ConnectionError connectionError) {
    this.connectionError = connectionError;
    return this;
  }

  /**
   * Resource name of the EKM connection in the format:
   * projects/{project}/locations/{location}/ekmConnections/{ekm_connection}
   * @return value or {@code null} for none
   */
  public java.lang.String getConnectionName() {
    return connectionName;
  }

  /**
   * Resource name of the EKM connection in the format:
   * projects/{project}/locations/{location}/ekmConnections/{ekm_connection}
   * @param connectionName connectionName or {@code null} for none
   */
  public EkmConnection setConnectionName(java.lang.String connectionName) {
    this.connectionName = connectionName;
    return this;
  }

  /**
   * Output only. The connection state
   * @return value or {@code null} for none
   */
  public java.lang.String getConnectionState() {
    return connectionState;
  }

  /**
   * Output only. The connection state
   * @param connectionState connectionState or {@code null} for none
   */
  public EkmConnection setConnectionState(java.lang.String connectionState) {
    this.connectionState = connectionState;
    return this;
  }

  @Override
  public EkmConnection set(String fieldName, Object value) {
    return (EkmConnection) super.set(fieldName, value);
  }

  @Override
  public EkmConnection clone() {
    return (EkmConnection) super.clone();
  }

}
