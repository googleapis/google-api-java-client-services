/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Proto holding values for user reported thumbnails. Next id: 12
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DrishtiVesperUserReportUserReportedThumbnail extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Float> denseFeatures;

  /**
   * Number of days in which volume is calculated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer duration;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DrishtiVesperUserReportHumanLabel humanLabel;

  /**
   * Daily aggregared impressions for the reported video.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer impressions;

  /**
   * Whether the thumbnail needs a human label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean needHumanLabel;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DrishtiVesperUserReportHumanLabel> rawHumanLabels;

  static {
    // hack to force ProGuard to consider DrishtiVesperUserReportHumanLabel used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(DrishtiVesperUserReportHumanLabel.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DrishtiVesperUserReportModelScore reportScore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reportType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DrishtiVesperUserReportModelScore score;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String useCase;

  /**
   * Number of reports.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer volume;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Float> getDenseFeatures() {
    return denseFeatures;
  }

  /**
   * @param denseFeatures denseFeatures or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setDenseFeatures(java.util.List<java.lang.Float> denseFeatures) {
    this.denseFeatures = denseFeatures;
    return this;
  }

  /**
   * Number of days in which volume is calculated.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDuration() {
    return duration;
  }

  /**
   * Number of days in which volume is calculated.
   * @param duration duration or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setDuration(java.lang.Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public DrishtiVesperUserReportHumanLabel getHumanLabel() {
    return humanLabel;
  }

  /**
   * @param humanLabel humanLabel or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setHumanLabel(DrishtiVesperUserReportHumanLabel humanLabel) {
    this.humanLabel = humanLabel;
    return this;
  }

  /**
   * Daily aggregared impressions for the reported video.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getImpressions() {
    return impressions;
  }

  /**
   * Daily aggregared impressions for the reported video.
   * @param impressions impressions or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setImpressions(java.lang.Integer impressions) {
    this.impressions = impressions;
    return this;
  }

  /**
   * Whether the thumbnail needs a human label.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNeedHumanLabel() {
    return needHumanLabel;
  }

  /**
   * Whether the thumbnail needs a human label.
   * @param needHumanLabel needHumanLabel or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setNeedHumanLabel(java.lang.Boolean needHumanLabel) {
    this.needHumanLabel = needHumanLabel;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<DrishtiVesperUserReportHumanLabel> getRawHumanLabels() {
    return rawHumanLabels;
  }

  /**
   * @param rawHumanLabels rawHumanLabels or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setRawHumanLabels(java.util.List<DrishtiVesperUserReportHumanLabel> rawHumanLabels) {
    this.rawHumanLabels = rawHumanLabels;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public DrishtiVesperUserReportModelScore getReportScore() {
    return reportScore;
  }

  /**
   * @param reportScore reportScore or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setReportScore(DrishtiVesperUserReportModelScore reportScore) {
    this.reportScore = reportScore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getReportType() {
    return reportType;
  }

  /**
   * @param reportType reportType or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setReportType(java.lang.String reportType) {
    this.reportType = reportType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public DrishtiVesperUserReportModelScore getScore() {
    return score;
  }

  /**
   * @param score score or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setScore(DrishtiVesperUserReportModelScore score) {
    this.score = score;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUseCase() {
    return useCase;
  }

  /**
   * @param useCase useCase or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setUseCase(java.lang.String useCase) {
    this.useCase = useCase;
    return this;
  }

  /**
   * Number of reports.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getVolume() {
    return volume;
  }

  /**
   * Number of reports.
   * @param volume volume or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail setVolume(java.lang.Integer volume) {
    this.volume = volume;
    return this;
  }

  @Override
  public DrishtiVesperUserReportUserReportedThumbnail set(String fieldName, Object value) {
    return (DrishtiVesperUserReportUserReportedThumbnail) super.set(fieldName, value);
  }

  @Override
  public DrishtiVesperUserReportUserReportedThumbnail clone() {
    return (DrishtiVesperUserReportUserReportedThumbnail) super.clone();
  }

}
