/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Image-level deep tags: essentially equivalent to the proto above but containing tags that are
 * computed at the image level. These image signals are maintained by the Visual Shopping team
 * (visual-shopping@). *** If you do use the signals, please add an entry in
 * go/ShoppingImageAttributeClients to be notified for model upgrade. *** We recommend our clients
 * against using the raw confidence value directly. Instead, the clients should use the library,
 * cs/ads/shopping/visual/deeptags/public/single_tag.h and
 * cs/ads/shopping/visual/deeptags/public/single_scored_tag.h to specify an operating point in terms
 * of precision or recall. See the following code example:
 * http://google3/shopping/visual/explore_looks/looks_offline_pipeline.cc?l=268=304165166 ***
 * `model_outputs` is a repeated field. Please check `version` to get the model you desire to use,
 * instead of indexing the model_outputs directly e.g. model_outputs(0). We will remove the old
 * versions in the future and this will lead to incorrect model. *** Models: As of Q2 2020, we have
 * two models running within Shopping: model one only has the overlay tag, which we are deprecating,
 * and model two has the tags specified in go/VisualShoppingImageAttributes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CommerceDatastoreImageDeepTags extends com.google.api.client.json.GenericJson {

  /**
   * The set of outputs for a series of model versions. The size of this field should not extend
   * beyond 4 at any time: two versions for slow-update track dependencies, and two versions for
   * fast-update track dependencies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CommerceDatastoreImageDeepTagsModelOutput> modelOutputs;

  /**
   * The set of outputs for a series of model versions. The size of this field should not extend
   * beyond 4 at any time: two versions for slow-update track dependencies, and two versions for
   * fast-update track dependencies.
   * @return value or {@code null} for none
   */
  public java.util.List<CommerceDatastoreImageDeepTagsModelOutput> getModelOutputs() {
    return modelOutputs;
  }

  /**
   * The set of outputs for a series of model versions. The size of this field should not extend
   * beyond 4 at any time: two versions for slow-update track dependencies, and two versions for
   * fast-update track dependencies.
   * @param modelOutputs modelOutputs or {@code null} for none
   */
  public CommerceDatastoreImageDeepTags setModelOutputs(java.util.List<CommerceDatastoreImageDeepTagsModelOutput> modelOutputs) {
    this.modelOutputs = modelOutputs;
    return this;
  }

  @Override
  public CommerceDatastoreImageDeepTags set(String fieldName, Object value) {
    return (CommerceDatastoreImageDeepTags) super.set(fieldName, value);
  }

  @Override
  public CommerceDatastoreImageDeepTags clone() {
    return (CommerceDatastoreImageDeepTags) super.clone();
  }

}
