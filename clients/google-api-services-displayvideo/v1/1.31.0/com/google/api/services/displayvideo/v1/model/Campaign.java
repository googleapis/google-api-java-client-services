/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.displayvideo.v1.model;

/**
 * A single campaign.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Display & Video 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Campaign extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The unique ID of the advertiser the campaign belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long advertiserId;

  /**
   * Required. The planned spend and duration of the campaign.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CampaignFlight campaignFlight;

  /**
   * Required. The goal of the campaign.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CampaignGoal campaignGoal;

  /**
   * Output only. The unique ID of the campaign. Assigned by the system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long campaignId;

  /**
   * Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240
   * bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Required. Controls whether or not the insertion orders under this campaign can spend their
   * budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`,
   * `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method,
   * `ENTITY_STATUS_ARCHIVED` is not allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entityStatus;

  /**
   * Required. The frequency cap setting of the campaign.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FrequencyCap frequencyCap;

  /**
   * Output only. The resource name of the campaign.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The timestamp when the campaign was last updated. Assigned by the system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The unique ID of the advertiser the campaign belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAdvertiserId() {
    return advertiserId;
  }

  /**
   * Output only. The unique ID of the advertiser the campaign belongs to.
   * @param advertiserId advertiserId or {@code null} for none
   */
  public Campaign setAdvertiserId(java.lang.Long advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Required. The planned spend and duration of the campaign.
   * @return value or {@code null} for none
   */
  public CampaignFlight getCampaignFlight() {
    return campaignFlight;
  }

  /**
   * Required. The planned spend and duration of the campaign.
   * @param campaignFlight campaignFlight or {@code null} for none
   */
  public Campaign setCampaignFlight(CampaignFlight campaignFlight) {
    this.campaignFlight = campaignFlight;
    return this;
  }

  /**
   * Required. The goal of the campaign.
   * @return value or {@code null} for none
   */
  public CampaignGoal getCampaignGoal() {
    return campaignGoal;
  }

  /**
   * Required. The goal of the campaign.
   * @param campaignGoal campaignGoal or {@code null} for none
   */
  public Campaign setCampaignGoal(CampaignGoal campaignGoal) {
    this.campaignGoal = campaignGoal;
    return this;
  }

  /**
   * Output only. The unique ID of the campaign. Assigned by the system.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCampaignId() {
    return campaignId;
  }

  /**
   * Output only. The unique ID of the campaign. Assigned by the system.
   * @param campaignId campaignId or {@code null} for none
   */
  public Campaign setCampaignId(java.lang.Long campaignId) {
    this.campaignId = campaignId;
    return this;
  }

  /**
   * Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240
   * bytes.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240
   * bytes.
   * @param displayName displayName or {@code null} for none
   */
  public Campaign setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. Controls whether or not the insertion orders under this campaign can spend their
   * budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`,
   * `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method,
   * `ENTITY_STATUS_ARCHIVED` is not allowed.
   * @return value or {@code null} for none
   */
  public java.lang.String getEntityStatus() {
    return entityStatus;
  }

  /**
   * Required. Controls whether or not the insertion orders under this campaign can spend their
   * budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`,
   * `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method,
   * `ENTITY_STATUS_ARCHIVED` is not allowed.
   * @param entityStatus entityStatus or {@code null} for none
   */
  public Campaign setEntityStatus(java.lang.String entityStatus) {
    this.entityStatus = entityStatus;
    return this;
  }

  /**
   * Required. The frequency cap setting of the campaign.
   * @return value or {@code null} for none
   */
  public FrequencyCap getFrequencyCap() {
    return frequencyCap;
  }

  /**
   * Required. The frequency cap setting of the campaign.
   * @param frequencyCap frequencyCap or {@code null} for none
   */
  public Campaign setFrequencyCap(FrequencyCap frequencyCap) {
    this.frequencyCap = frequencyCap;
    return this;
  }

  /**
   * Output only. The resource name of the campaign.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the campaign.
   * @param name name or {@code null} for none
   */
  public Campaign setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The timestamp when the campaign was last updated. Assigned by the system.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the campaign was last updated. Assigned by the system.
   * @param updateTime updateTime or {@code null} for none
   */
  public Campaign setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Campaign set(String fieldName, Object value) {
    return (Campaign) super.set(fieldName, value);
  }

  @Override
  public Campaign clone() {
    return (Campaign) super.clone();
  }

}
