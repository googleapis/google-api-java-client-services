/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.pubsub.model;

/**
 * Configuration for a Cloud Storage subscription.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Pub/Sub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CloudStorageConfig extends com.google.api.client.json.GenericJson {

  /**
   * If set, message data will be written to Cloud Storage in Avro format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AvroConfig avroConfig;

  /**
   * Required. User-provided name for the Cloud Storage bucket. The bucket must be created by the
   * user. The bucket name must be without any prefix like "gs://". See the [bucket naming
   * requirements] (https://cloud.google.com/storage/docs/buckets#naming).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bucket;

  /**
   * User-provided prefix for Cloud Storage filename. See the [object naming
   * requirements](https://cloud.google.com/storage/docs/objects#naming).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filenamePrefix;

  /**
   * User-provided suffix for Cloud Storage filename. See the [object naming
   * requirements](https://cloud.google.com/storage/docs/objects#naming).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filenameSuffix;

  /**
   * The maximum bytes that can be written to a Cloud Storage file before a new file is created. Min
   * 1 KB, max 10 GiB. The max_bytes limit may be exceeded in cases where messages are larger than
   * the limit.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long maxBytes;

  /**
   * The maximum duration that can elapse before a new Cloud Storage file is created. Min 1 minute,
   * max 10 minutes, default 5 minutes. May not exceed the subscription's acknowledgement deadline.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String maxDuration;

  /**
   * Output only. An output-only field that indicates whether or not the subscription can receive
   * messages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * If set, message data will be written to Cloud Storage in text format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TextConfig textConfig;

  /**
   * If set, message data will be written to Cloud Storage in Avro format.
   * @return value or {@code null} for none
   */
  public AvroConfig getAvroConfig() {
    return avroConfig;
  }

  /**
   * If set, message data will be written to Cloud Storage in Avro format.
   * @param avroConfig avroConfig or {@code null} for none
   */
  public CloudStorageConfig setAvroConfig(AvroConfig avroConfig) {
    this.avroConfig = avroConfig;
    return this;
  }

  /**
   * Required. User-provided name for the Cloud Storage bucket. The bucket must be created by the
   * user. The bucket name must be without any prefix like "gs://". See the [bucket naming
   * requirements] (https://cloud.google.com/storage/docs/buckets#naming).
   * @return value or {@code null} for none
   */
  public java.lang.String getBucket() {
    return bucket;
  }

  /**
   * Required. User-provided name for the Cloud Storage bucket. The bucket must be created by the
   * user. The bucket name must be without any prefix like "gs://". See the [bucket naming
   * requirements] (https://cloud.google.com/storage/docs/buckets#naming).
   * @param bucket bucket or {@code null} for none
   */
  public CloudStorageConfig setBucket(java.lang.String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * User-provided prefix for Cloud Storage filename. See the [object naming
   * requirements](https://cloud.google.com/storage/docs/objects#naming).
   * @return value or {@code null} for none
   */
  public java.lang.String getFilenamePrefix() {
    return filenamePrefix;
  }

  /**
   * User-provided prefix for Cloud Storage filename. See the [object naming
   * requirements](https://cloud.google.com/storage/docs/objects#naming).
   * @param filenamePrefix filenamePrefix or {@code null} for none
   */
  public CloudStorageConfig setFilenamePrefix(java.lang.String filenamePrefix) {
    this.filenamePrefix = filenamePrefix;
    return this;
  }

  /**
   * User-provided suffix for Cloud Storage filename. See the [object naming
   * requirements](https://cloud.google.com/storage/docs/objects#naming).
   * @return value or {@code null} for none
   */
  public java.lang.String getFilenameSuffix() {
    return filenameSuffix;
  }

  /**
   * User-provided suffix for Cloud Storage filename. See the [object naming
   * requirements](https://cloud.google.com/storage/docs/objects#naming).
   * @param filenameSuffix filenameSuffix or {@code null} for none
   */
  public CloudStorageConfig setFilenameSuffix(java.lang.String filenameSuffix) {
    this.filenameSuffix = filenameSuffix;
    return this;
  }

  /**
   * The maximum bytes that can be written to a Cloud Storage file before a new file is created. Min
   * 1 KB, max 10 GiB. The max_bytes limit may be exceeded in cases where messages are larger than
   * the limit.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMaxBytes() {
    return maxBytes;
  }

  /**
   * The maximum bytes that can be written to a Cloud Storage file before a new file is created. Min
   * 1 KB, max 10 GiB. The max_bytes limit may be exceeded in cases where messages are larger than
   * the limit.
   * @param maxBytes maxBytes or {@code null} for none
   */
  public CloudStorageConfig setMaxBytes(java.lang.Long maxBytes) {
    this.maxBytes = maxBytes;
    return this;
  }

  /**
   * The maximum duration that can elapse before a new Cloud Storage file is created. Min 1 minute,
   * max 10 minutes, default 5 minutes. May not exceed the subscription's acknowledgement deadline.
   * @return value or {@code null} for none
   */
  public String getMaxDuration() {
    return maxDuration;
  }

  /**
   * The maximum duration that can elapse before a new Cloud Storage file is created. Min 1 minute,
   * max 10 minutes, default 5 minutes. May not exceed the subscription's acknowledgement deadline.
   * @param maxDuration maxDuration or {@code null} for none
   */
  public CloudStorageConfig setMaxDuration(String maxDuration) {
    this.maxDuration = maxDuration;
    return this;
  }

  /**
   * Output only. An output-only field that indicates whether or not the subscription can receive
   * messages.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. An output-only field that indicates whether or not the subscription can receive
   * messages.
   * @param state state or {@code null} for none
   */
  public CloudStorageConfig setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * If set, message data will be written to Cloud Storage in text format.
   * @return value or {@code null} for none
   */
  public TextConfig getTextConfig() {
    return textConfig;
  }

  /**
   * If set, message data will be written to Cloud Storage in text format.
   * @param textConfig textConfig or {@code null} for none
   */
  public CloudStorageConfig setTextConfig(TextConfig textConfig) {
    this.textConfig = textConfig;
    return this;
  }

  @Override
  public CloudStorageConfig set(String fieldName, Object value) {
    return (CloudStorageConfig) super.set(fieldName, value);
  }

  @Override
  public CloudStorageConfig clone() {
    return (CloudStorageConfig) super.clone();
  }

}
