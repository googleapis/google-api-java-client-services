/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmmigration.v1.model;

/**
 * The target details of the machine image resource that will be created by the image import job.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VM Migration API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MachineImageTargetDetails extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Additional licenses to assign to the instance created by the machine image. Format:
   * https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/licenses/LICENSE_NAME Or
   * https://www.googleapis.com/compute/beta/projects/PROJECT_ID/global/licenses/LICENSE_NAME
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> additionalLicenses;

  /**
   * Optional. An optional description of the machine image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Immutable. The encryption to apply to the machine image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Encryption encryption;

  /**
   * Optional. The labels to apply to the instance created by the machine image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. The name of the machine image to be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String machineImageName;

  /**
   * Optional. Parameters overriding decisions based on the source machine image configurations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MachineImageParametersOverrides machineImageParametersOverrides;

  /**
   * Optional. The network interfaces to create with the instance created by the machine image.
   * Internal and external IP addresses are ignored for machine image import.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NetworkInterface> networkInterfaces;

  /**
   * Optional. Use to set the parameters relevant for the OS adaptation process.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageImportOsAdaptationParameters osAdaptationParameters;

  /**
   * Optional. The service account to assign to the instance created by the machine image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceAccount serviceAccount;

  /**
   * Optional. Shielded instance configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ShieldedInstanceConfig shieldedInstanceConfig;

  /**
   * Optional. Set to true to set the machine image storageLocations to the single region of the
   * import job. When false, the closest multi-region is selected.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean singleRegionStorage;

  /**
   * Optional. Use to skip OS adaptation process.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SkipOsAdaptation skipOsAdaptation;

  /**
   * Optional. The tags to apply to the instance created by the machine image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> tags;

  /**
   * Required. Reference to the TargetProject resource that represents the target project in which
   * the imported machine image will be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetProject;

  /**
   * Optional. Additional licenses to assign to the instance created by the machine image. Format:
   * https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/licenses/LICENSE_NAME Or
   * https://www.googleapis.com/compute/beta/projects/PROJECT_ID/global/licenses/LICENSE_NAME
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAdditionalLicenses() {
    return additionalLicenses;
  }

  /**
   * Optional. Additional licenses to assign to the instance created by the machine image. Format:
   * https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/licenses/LICENSE_NAME Or
   * https://www.googleapis.com/compute/beta/projects/PROJECT_ID/global/licenses/LICENSE_NAME
   * @param additionalLicenses additionalLicenses or {@code null} for none
   */
  public MachineImageTargetDetails setAdditionalLicenses(java.util.List<java.lang.String> additionalLicenses) {
    this.additionalLicenses = additionalLicenses;
    return this;
  }

  /**
   * Optional. An optional description of the machine image.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. An optional description of the machine image.
   * @param description description or {@code null} for none
   */
  public MachineImageTargetDetails setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Immutable. The encryption to apply to the machine image.
   * @return value or {@code null} for none
   */
  public Encryption getEncryption() {
    return encryption;
  }

  /**
   * Immutable. The encryption to apply to the machine image.
   * @param encryption encryption or {@code null} for none
   */
  public MachineImageTargetDetails setEncryption(Encryption encryption) {
    this.encryption = encryption;
    return this;
  }

  /**
   * Optional. The labels to apply to the instance created by the machine image.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. The labels to apply to the instance created by the machine image.
   * @param labels labels or {@code null} for none
   */
  public MachineImageTargetDetails setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. The name of the machine image to be created.
   * @return value or {@code null} for none
   */
  public java.lang.String getMachineImageName() {
    return machineImageName;
  }

  /**
   * Required. The name of the machine image to be created.
   * @param machineImageName machineImageName or {@code null} for none
   */
  public MachineImageTargetDetails setMachineImageName(java.lang.String machineImageName) {
    this.machineImageName = machineImageName;
    return this;
  }

  /**
   * Optional. Parameters overriding decisions based on the source machine image configurations.
   * @return value or {@code null} for none
   */
  public MachineImageParametersOverrides getMachineImageParametersOverrides() {
    return machineImageParametersOverrides;
  }

  /**
   * Optional. Parameters overriding decisions based on the source machine image configurations.
   * @param machineImageParametersOverrides machineImageParametersOverrides or {@code null} for none
   */
  public MachineImageTargetDetails setMachineImageParametersOverrides(MachineImageParametersOverrides machineImageParametersOverrides) {
    this.machineImageParametersOverrides = machineImageParametersOverrides;
    return this;
  }

  /**
   * Optional. The network interfaces to create with the instance created by the machine image.
   * Internal and external IP addresses are ignored for machine image import.
   * @return value or {@code null} for none
   */
  public java.util.List<NetworkInterface> getNetworkInterfaces() {
    return networkInterfaces;
  }

  /**
   * Optional. The network interfaces to create with the instance created by the machine image.
   * Internal and external IP addresses are ignored for machine image import.
   * @param networkInterfaces networkInterfaces or {@code null} for none
   */
  public MachineImageTargetDetails setNetworkInterfaces(java.util.List<NetworkInterface> networkInterfaces) {
    this.networkInterfaces = networkInterfaces;
    return this;
  }

  /**
   * Optional. Use to set the parameters relevant for the OS adaptation process.
   * @return value or {@code null} for none
   */
  public ImageImportOsAdaptationParameters getOsAdaptationParameters() {
    return osAdaptationParameters;
  }

  /**
   * Optional. Use to set the parameters relevant for the OS adaptation process.
   * @param osAdaptationParameters osAdaptationParameters or {@code null} for none
   */
  public MachineImageTargetDetails setOsAdaptationParameters(ImageImportOsAdaptationParameters osAdaptationParameters) {
    this.osAdaptationParameters = osAdaptationParameters;
    return this;
  }

  /**
   * Optional. The service account to assign to the instance created by the machine image.
   * @return value or {@code null} for none
   */
  public ServiceAccount getServiceAccount() {
    return serviceAccount;
  }

  /**
   * Optional. The service account to assign to the instance created by the machine image.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public MachineImageTargetDetails setServiceAccount(ServiceAccount serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Optional. Shielded instance configuration.
   * @return value or {@code null} for none
   */
  public ShieldedInstanceConfig getShieldedInstanceConfig() {
    return shieldedInstanceConfig;
  }

  /**
   * Optional. Shielded instance configuration.
   * @param shieldedInstanceConfig shieldedInstanceConfig or {@code null} for none
   */
  public MachineImageTargetDetails setShieldedInstanceConfig(ShieldedInstanceConfig shieldedInstanceConfig) {
    this.shieldedInstanceConfig = shieldedInstanceConfig;
    return this;
  }

  /**
   * Optional. Set to true to set the machine image storageLocations to the single region of the
   * import job. When false, the closest multi-region is selected.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSingleRegionStorage() {
    return singleRegionStorage;
  }

  /**
   * Optional. Set to true to set the machine image storageLocations to the single region of the
   * import job. When false, the closest multi-region is selected.
   * @param singleRegionStorage singleRegionStorage or {@code null} for none
   */
  public MachineImageTargetDetails setSingleRegionStorage(java.lang.Boolean singleRegionStorage) {
    this.singleRegionStorage = singleRegionStorage;
    return this;
  }

  /**
   * Optional. Use to skip OS adaptation process.
   * @return value or {@code null} for none
   */
  public SkipOsAdaptation getSkipOsAdaptation() {
    return skipOsAdaptation;
  }

  /**
   * Optional. Use to skip OS adaptation process.
   * @param skipOsAdaptation skipOsAdaptation or {@code null} for none
   */
  public MachineImageTargetDetails setSkipOsAdaptation(SkipOsAdaptation skipOsAdaptation) {
    this.skipOsAdaptation = skipOsAdaptation;
    return this;
  }

  /**
   * Optional. The tags to apply to the instance created by the machine image.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTags() {
    return tags;
  }

  /**
   * Optional. The tags to apply to the instance created by the machine image.
   * @param tags tags or {@code null} for none
   */
  public MachineImageTargetDetails setTags(java.util.List<java.lang.String> tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Required. Reference to the TargetProject resource that represents the target project in which
   * the imported machine image will be created.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetProject() {
    return targetProject;
  }

  /**
   * Required. Reference to the TargetProject resource that represents the target project in which
   * the imported machine image will be created.
   * @param targetProject targetProject or {@code null} for none
   */
  public MachineImageTargetDetails setTargetProject(java.lang.String targetProject) {
    this.targetProject = targetProject;
    return this;
  }

  @Override
  public MachineImageTargetDetails set(String fieldName, Object value) {
    return (MachineImageTargetDetails) super.set(fieldName, value);
  }

  @Override
  public MachineImageTargetDetails clone() {
    return (MachineImageTargetDetails) super.clone();
  }

}
