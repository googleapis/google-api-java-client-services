/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.verifiedaccess.v1.model;

/**
 * Result message for VerifiedAccess.VerifyChallengeResponse.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Verified Access API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VerifyChallengeResponseResult extends com.google.api.client.json.GenericJson {

  /**
   * Device enrollment id is returned in this field (for the machine response only).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceEnrollmentId;

  /**
   * Device permanent id is returned in this field (for the machine response only).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String devicePermanentId;

  /**
   * Certificate Signing Request (in the SPKAC format, base64 encoded) is returned in this field.
   * This field will be set only if device has included CSR in its challenge response. (the option
   * to include CSR is now available for both user and machine responses)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String signedPublicKeyAndChallenge;

  /**
   * For EMCert check, device permanent id is returned here. For EUCert check,
   * signed_public_key_and_challenge [base64 encoded] is returned if present, otherwise empty string
   * is returned. This field is deprecated, please use device_permanent_id or
   * signed_public_key_and_challenge fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String verificationOutput;

  /**
   * Device enrollment id is returned in this field (for the machine response only).
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceEnrollmentId() {
    return deviceEnrollmentId;
  }

  /**
   * Device enrollment id is returned in this field (for the machine response only).
   * @param deviceEnrollmentId deviceEnrollmentId or {@code null} for none
   */
  public VerifyChallengeResponseResult setDeviceEnrollmentId(java.lang.String deviceEnrollmentId) {
    this.deviceEnrollmentId = deviceEnrollmentId;
    return this;
  }

  /**
   * Device permanent id is returned in this field (for the machine response only).
   * @return value or {@code null} for none
   */
  public java.lang.String getDevicePermanentId() {
    return devicePermanentId;
  }

  /**
   * Device permanent id is returned in this field (for the machine response only).
   * @param devicePermanentId devicePermanentId or {@code null} for none
   */
  public VerifyChallengeResponseResult setDevicePermanentId(java.lang.String devicePermanentId) {
    this.devicePermanentId = devicePermanentId;
    return this;
  }

  /**
   * Certificate Signing Request (in the SPKAC format, base64 encoded) is returned in this field.
   * This field will be set only if device has included CSR in its challenge response. (the option
   * to include CSR is now available for both user and machine responses)
   * @return value or {@code null} for none
   */
  public java.lang.String getSignedPublicKeyAndChallenge() {
    return signedPublicKeyAndChallenge;
  }

  /**
   * Certificate Signing Request (in the SPKAC format, base64 encoded) is returned in this field.
   * This field will be set only if device has included CSR in its challenge response. (the option
   * to include CSR is now available for both user and machine responses)
   * @param signedPublicKeyAndChallenge signedPublicKeyAndChallenge or {@code null} for none
   */
  public VerifyChallengeResponseResult setSignedPublicKeyAndChallenge(java.lang.String signedPublicKeyAndChallenge) {
    this.signedPublicKeyAndChallenge = signedPublicKeyAndChallenge;
    return this;
  }

  /**
   * For EMCert check, device permanent id is returned here. For EUCert check,
   * signed_public_key_and_challenge [base64 encoded] is returned if present, otherwise empty string
   * is returned. This field is deprecated, please use device_permanent_id or
   * signed_public_key_and_challenge fields.
   * @return value or {@code null} for none
   */
  public java.lang.String getVerificationOutput() {
    return verificationOutput;
  }

  /**
   * For EMCert check, device permanent id is returned here. For EUCert check,
   * signed_public_key_and_challenge [base64 encoded] is returned if present, otherwise empty string
   * is returned. This field is deprecated, please use device_permanent_id or
   * signed_public_key_and_challenge fields.
   * @param verificationOutput verificationOutput or {@code null} for none
   */
  public VerifyChallengeResponseResult setVerificationOutput(java.lang.String verificationOutput) {
    this.verificationOutput = verificationOutput;
    return this;
  }

  @Override
  public VerifyChallengeResponseResult set(String fieldName, Object value) {
    return (VerifyChallengeResponseResult) super.set(fieldName, value);
  }

  @Override
  public VerifyChallengeResponseResult clone() {
    return (VerifyChallengeResponseResult) super.clone();
  }

}
