/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.recommendationengine.v1beta1.model;

/**
 * A transaction represents the entire purchase transaction.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Recommendations AI. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRecommendationengineV1beta1PurchaseTransaction extends com.google.api.client.json.GenericJson {

  /**
   * Optional. All the costs associated with the product. These can be manufacturing costs, shipping
   * expenses not borne by the end user, or any other costs. Total product cost such that profit =
   * revenue - (sum(taxes) + sum(costs)) If product_cost is not set, then profit = revenue - tax -
   * shipping - sum(CatalogItem.costs). If CatalogItem.cost is not specified for one of the items,
   * CatalogItem.cost based profit *cannot* be calculated for this Transaction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Float> costs;

  /**
   * Required. Currency code. Use three-character ISO-4217 code. This field is not required if the
   * event type is `refund`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String currencyCode;

  /**
   * Optional. The transaction ID with a length limit of 128 bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Required. Total revenue or grand total associated with the transaction. This value include
   * shipping, tax, or other adjustments to total revenue that you want to include as part of your
   * revenue calculations. This field is not required if the event type is `refund`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float revenue;

  /**
   * Optional. All the taxes associated with the transaction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Float> taxes;

  /**
   * Optional. All the costs associated with the product. These can be manufacturing costs, shipping
   * expenses not borne by the end user, or any other costs. Total product cost such that profit =
   * revenue - (sum(taxes) + sum(costs)) If product_cost is not set, then profit = revenue - tax -
   * shipping - sum(CatalogItem.costs). If CatalogItem.cost is not specified for one of the items,
   * CatalogItem.cost based profit *cannot* be calculated for this Transaction.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Float> getCosts() {
    return costs;
  }

  /**
   * Optional. All the costs associated with the product. These can be manufacturing costs, shipping
   * expenses not borne by the end user, or any other costs. Total product cost such that profit =
   * revenue - (sum(taxes) + sum(costs)) If product_cost is not set, then profit = revenue - tax -
   * shipping - sum(CatalogItem.costs). If CatalogItem.cost is not specified for one of the items,
   * CatalogItem.cost based profit *cannot* be calculated for this Transaction.
   * @param costs costs or {@code null} for none
   */
  public GoogleCloudRecommendationengineV1beta1PurchaseTransaction setCosts(java.util.Map<String, java.lang.Float> costs) {
    this.costs = costs;
    return this;
  }

  /**
   * Required. Currency code. Use three-character ISO-4217 code. This field is not required if the
   * event type is `refund`.
   * @return value or {@code null} for none
   */
  public java.lang.String getCurrencyCode() {
    return currencyCode;
  }

  /**
   * Required. Currency code. Use three-character ISO-4217 code. This field is not required if the
   * event type is `refund`.
   * @param currencyCode currencyCode or {@code null} for none
   */
  public GoogleCloudRecommendationengineV1beta1PurchaseTransaction setCurrencyCode(java.lang.String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Optional. The transaction ID with a length limit of 128 bytes.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Optional. The transaction ID with a length limit of 128 bytes.
   * @param id id or {@code null} for none
   */
  public GoogleCloudRecommendationengineV1beta1PurchaseTransaction setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Required. Total revenue or grand total associated with the transaction. This value include
   * shipping, tax, or other adjustments to total revenue that you want to include as part of your
   * revenue calculations. This field is not required if the event type is `refund`.
   * @return value or {@code null} for none
   */
  public java.lang.Float getRevenue() {
    return revenue;
  }

  /**
   * Required. Total revenue or grand total associated with the transaction. This value include
   * shipping, tax, or other adjustments to total revenue that you want to include as part of your
   * revenue calculations. This field is not required if the event type is `refund`.
   * @param revenue revenue or {@code null} for none
   */
  public GoogleCloudRecommendationengineV1beta1PurchaseTransaction setRevenue(java.lang.Float revenue) {
    this.revenue = revenue;
    return this;
  }

  /**
   * Optional. All the taxes associated with the transaction.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Float> getTaxes() {
    return taxes;
  }

  /**
   * Optional. All the taxes associated with the transaction.
   * @param taxes taxes or {@code null} for none
   */
  public GoogleCloudRecommendationengineV1beta1PurchaseTransaction setTaxes(java.util.Map<String, java.lang.Float> taxes) {
    this.taxes = taxes;
    return this;
  }

  @Override
  public GoogleCloudRecommendationengineV1beta1PurchaseTransaction set(String fieldName, Object value) {
    return (GoogleCloudRecommendationengineV1beta1PurchaseTransaction) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRecommendationengineV1beta1PurchaseTransaction clone() {
    return (GoogleCloudRecommendationengineV1beta1PurchaseTransaction) super.clone();
  }

}
