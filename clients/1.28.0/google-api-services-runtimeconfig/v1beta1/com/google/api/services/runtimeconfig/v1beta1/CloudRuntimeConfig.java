/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.runtimeconfig.v1beta1;

/**
 * Service definition for CloudRuntimeConfig (v1beta1).
 *
 * <p>
 * The Runtime Configurator allows you to dynamically configure and expose variables through Google Cloud Platform. In addition, you can also set Watchers and Waiters that will watch for changes to your data and return based on certain conditions.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/deployment-manager/runtime-configurator/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudRuntimeConfigRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudRuntimeConfig extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.28.0 of the Cloud Runtime Configuration API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://runtimeconfig.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudRuntimeConfig(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudRuntimeConfig(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudRuntimeConfig runtimeconfig = new CloudRuntimeConfig(...);}
   *   {@code CloudRuntimeConfig.Projects.List request = runtimeconfig.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Configs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudRuntimeConfig runtimeconfig = new CloudRuntimeConfig(...);}
     *   {@code CloudRuntimeConfig.Configs.List request = runtimeconfig.configs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Configs configs() {
      return new Configs();
    }

    /**
     * The "configs" collection of methods.
     */
    public class Configs {

      /**
       * Creates a new RuntimeConfig resource. The configuration name must be unique within project.
       *
       * Create a request for the method "configs.create".
       *
       * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The [project
      ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848)
      for this
       *        request, in the format `projects/[PROJECT_ID]`.
       * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig> {

        private static final String REST_PATH = "v1beta1/{+parent}/configs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a new RuntimeConfig resource. The configuration name must be unique within project.
         *
         * Create a request for the method "configs.create".
         *
         * This request holds the parameters needed by the the runtimeconfig server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The [project
      ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848)
      for this
       *        request, in the format `projects/[PROJECT_ID]`.
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig content) {
          super(CloudRuntimeConfig.this, "POST", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The [project ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848) for
         * this request, in the format `projects/[PROJECT_ID]`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The [project ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848) for this
       request, in the format `projects/[PROJECT_ID]`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The [project ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848) for
         * this request, in the format `projects/[PROJECT_ID]`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * An optional but recommended unique `request_id`. If the server receives two `create()`
         * requests  with the same `request_id`, then the second request will be ignored and the
         * first resource created and stored in the backend is returned. Empty `request_id` fields
         * are ignored.
         *
         * It is responsibility of the client to ensure uniqueness of the `request_id` strings.
         *
         * `request_id` strings are limited to 64 characters.
         */
        @com.google.api.client.util.Key
        private java.lang.String requestId;

        /** An optional but recommended unique `request_id`. If the server receives two `create()` requests
       with the same `request_id`, then the second request will be ignored and the first resource created
       and stored in the backend is returned. Empty `request_id` fields are ignored.

       It is responsibility of the client to ensure uniqueness of the `request_id` strings.

       `request_id` strings are limited to 64 characters.
         */
        public java.lang.String getRequestId() {
          return requestId;
        }

        /**
         * An optional but recommended unique `request_id`. If the server receives two `create()`
         * requests  with the same `request_id`, then the second request will be ignored and the
         * first resource created and stored in the backend is returned. Empty `request_id` fields
         * are ignored.
         *
         * It is responsibility of the client to ensure uniqueness of the `request_id` strings.
         *
         * `request_id` strings are limited to 64 characters.
         */
        public Create setRequestId(java.lang.String requestId) {
          this.requestId = requestId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a RuntimeConfig resource.
       *
       * Create a request for the method "configs.delete".
       *
       * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The RuntimeConfig resource to delete, in the format:
      `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Empty> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

        /**
         * Deletes a RuntimeConfig resource.
         *
         * Create a request for the method "configs.delete".
         *
         * This request holds the parameters needed by the the runtimeconfig server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The RuntimeConfig resource to delete, in the format:
      `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(CloudRuntimeConfig.this, "DELETE", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The RuntimeConfig resource to delete, in the format:
         *
         * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The RuntimeConfig resource to delete, in the format:

       `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The RuntimeConfig resource to delete, in the format:
         *
         * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about a RuntimeConfig resource.
       *
       * Create a request for the method "configs.get".
       *
       * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the RuntimeConfig resource to retrieve, in the format:
       *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

        /**
         * Gets information about a RuntimeConfig resource.
         *
         * Create a request for the method "configs.get".
         *
         * This request holds the parameters needed by the the runtimeconfig server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the RuntimeConfig resource to retrieve, in the format:
       *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudRuntimeConfig.this, "GET", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the RuntimeConfig resource to retrieve, in the format:
         *
         * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the RuntimeConfig resource to retrieve, in the format:

       `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the RuntimeConfig resource to retrieve, in the format:
         *
         * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
       * does not have a policy set.
       *
       * Create a request for the method "configs.getIamPolicy".
       *
       * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
       * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
       * @return the request
       */
      public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
        GetIamPolicy result = new GetIamPolicy(resource);
        initialize(result);
        return result;
      }

      public class GetIamPolicy extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Policy> {

        private static final String REST_PATH = "v1beta1/{+resource}:getIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists
         * and does not have a policy set.
         *
         * Create a request for the method "configs.getIamPolicy".
         *
         * This request holds the parameters needed by the the runtimeconfig server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation. <p> {@link
         * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
         * @since 1.13
         */
        protected GetIamPolicy(java.lang.String resource) {
          super(CloudRuntimeConfig.this, "GET", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (GetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetIamPolicy setAlt(java.lang.String alt) {
          return (GetIamPolicy) super.setAlt(alt);
        }

        @Override
        public GetIamPolicy setCallback(java.lang.String callback) {
          return (GetIamPolicy) super.setCallback(callback);
        }

        @Override
        public GetIamPolicy setFields(java.lang.String fields) {
          return (GetIamPolicy) super.setFields(fields);
        }

        @Override
        public GetIamPolicy setKey(java.lang.String key) {
          return (GetIamPolicy) super.setKey(key);
        }

        @Override
        public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (GetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetIamPolicy setUploadType(java.lang.String uploadType) {
          return (GetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public GetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public GetIamPolicy set(String parameterName, Object value) {
          return (GetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Lists all the RuntimeConfig resources within project.
       *
       * Create a request for the method "configs.list".
       *
       * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The [project
      ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848)
      for this
       *        request, in the format `projects/[PROJECT_ID]`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.ListConfigsResponse> {

        private static final String REST_PATH = "v1beta1/{+parent}/configs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists all the RuntimeConfig resources within project.
         *
         * Create a request for the method "configs.list".
         *
         * This request holds the parameters needed by the the runtimeconfig server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The [project
      ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848)
      for this
       *        request, in the format `projects/[PROJECT_ID]`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(CloudRuntimeConfig.this, "GET", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.ListConfigsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The [project ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848) for
         * this request, in the format `projects/[PROJECT_ID]`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The [project ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848) for this
       request, in the format `projects/[PROJECT_ID]`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The [project ID](https://support.google.com/cloud/answer/6158840?hl=en_topic=6158848) for
         * this request, in the format `projects/[PROJECT_ID]`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Specifies the number of results to return per page. If there are fewer elements than the
         * specified number, returns all elements.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Specifies the number of results to return per page. If there are fewer elements than the specified
       number, returns all elements.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Specifies the number of results to return per page. If there are fewer elements than the
         * specified number, returns all elements.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a
         * previous list request to get the next page of results.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a previous list
       request to get the next page of results.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a
         * previous list request to get the next page of results.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Sets the access control policy on the specified resource. Replaces any existing policy.
       *
       * Create a request for the method "configs.setIamPolicy".
       *
       * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
       * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
       * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.SetIamPolicyRequest}
       * @return the request
       */
      public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.SetIamPolicyRequest content) throws java.io.IOException {
        SetIamPolicy result = new SetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class SetIamPolicy extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Policy> {

        private static final String REST_PATH = "v1beta1/{+resource}:setIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.
         *
         * Create a request for the method "configs.setIamPolicy".
         *
         * This request holds the parameters needed by the the runtimeconfig server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation. <p> {@link
         * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.SetIamPolicyRequest}
         * @since 1.13
         */
        protected SetIamPolicy(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.SetIamPolicyRequest content) {
          super(CloudRuntimeConfig.this, "POST", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
        }

        @Override
        public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (SetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (SetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public SetIamPolicy setAlt(java.lang.String alt) {
          return (SetIamPolicy) super.setAlt(alt);
        }

        @Override
        public SetIamPolicy setCallback(java.lang.String callback) {
          return (SetIamPolicy) super.setCallback(callback);
        }

        @Override
        public SetIamPolicy setFields(java.lang.String fields) {
          return (SetIamPolicy) super.setFields(fields);
        }

        @Override
        public SetIamPolicy setKey(java.lang.String key) {
          return (SetIamPolicy) super.setKey(key);
        }

        @Override
        public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (SetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (SetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetIamPolicy setUploadType(java.lang.String uploadType) {
          return (SetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        public SetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SetIamPolicy set(String parameterName, Object value) {
          return (SetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Returns permissions that a caller has on the specified resource. If the resource does not exist,
       * this will return an empty set of permissions, not a NOT_FOUND error.
       *
       * Note: This operation is designed to be used for building permission-aware UIs and command-line
       * tools, not for authorization checking. This operation may "fail open" without warning.
       *
       * Create a request for the method "configs.testIamPermissions".
       *
       * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
       * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
       * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest}
       * @return the request
       */
      public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
        TestIamPermissions result = new TestIamPermissions(resource, content);
        initialize(result);
        return result;
      }

      public class TestIamPermissions extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not
         * exist, this will return an empty set of permissions, not a NOT_FOUND error.
         *
         * Note: This operation is designed to be used for building permission-aware UIs and command-line
         * tools, not for authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "configs.testIamPermissions".
         *
         * This request holds the parameters needed by the the runtimeconfig server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest}
         * @since 1.13
         */
        protected TestIamPermissions(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest content) {
          super(CloudRuntimeConfig.this, "POST", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
        }

        @Override
        public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
          return (TestIamPermissions) super.set$Xgafv($Xgafv);
        }

        @Override
        public TestIamPermissions setAccessToken(java.lang.String accessToken) {
          return (TestIamPermissions) super.setAccessToken(accessToken);
        }

        @Override
        public TestIamPermissions setAlt(java.lang.String alt) {
          return (TestIamPermissions) super.setAlt(alt);
        }

        @Override
        public TestIamPermissions setCallback(java.lang.String callback) {
          return (TestIamPermissions) super.setCallback(callback);
        }

        @Override
        public TestIamPermissions setFields(java.lang.String fields) {
          return (TestIamPermissions) super.setFields(fields);
        }

        @Override
        public TestIamPermissions setKey(java.lang.String key) {
          return (TestIamPermissions) super.setKey(key);
        }

        @Override
        public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
          return (TestIamPermissions) super.setOauthToken(oauthToken);
        }

        @Override
        public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
          return (TestIamPermissions) super.setQuotaUser(quotaUser);
        }

        @Override
        public TestIamPermissions setUploadType(java.lang.String uploadType) {
          return (TestIamPermissions) super.setUploadType(uploadType);
        }

        @Override
        public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
          return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy detail is being requested. See the operation
       documentation for the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public TestIamPermissions setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public TestIamPermissions set(String parameterName, Object value) {
          return (TestIamPermissions) super.set(parameterName, value);
        }
      }
      /**
       * Updates a RuntimeConfig resource. The configuration must exist beforehand.
       *
       * Create a request for the method "configs.update".
       *
       * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name The name of the RuntimeConfig resource to update, in the format:
       *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
       * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

        /**
         * Updates a RuntimeConfig resource. The configuration must exist beforehand.
         *
         * Create a request for the method "configs.update".
         *
         * This request holds the parameters needed by the the runtimeconfig server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         * <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the RuntimeConfig resource to update, in the format:
       *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig content) {
          super(CloudRuntimeConfig.this, "PUT", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.RuntimeConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the RuntimeConfig resource to update, in the format:
         *
         * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the RuntimeConfig resource to update, in the format:

       `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the RuntimeConfig resource to update, in the format:
         *
         * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/configs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudRuntimeConfig runtimeconfig = new CloudRuntimeConfig(...);}
       *   {@code CloudRuntimeConfig.Operations.List request = runtimeconfig.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Gets the latest state of a long-running operation.  Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/operations/.+$");

          /**
           * Gets the latest state of a long-running operation.  Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudRuntimeConfig.this, "GET", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/operations/.+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/operations/.+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.
         *
         * Note: This operation is designed to be used for building permission-aware UIs and command-line
         * tools, not for authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "operations.testIamPermissions".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested.
        See the operation
         *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/operations/.+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.
           *
           * Note: This operation is designed to be used for building permission-aware UIs and command-line
           * tools, not for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "operations.testIamPermissions".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested.
        See the operation
         *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest content) {
            super(CloudRuntimeConfig.this, "POST", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/operations/.+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See the operation
         documentation for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/operations/.+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Variables collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudRuntimeConfig runtimeconfig = new CloudRuntimeConfig(...);}
       *   {@code CloudRuntimeConfig.Variables.List request = runtimeconfig.variables().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Variables variables() {
        return new Variables();
      }

      /**
       * The "variables" collection of methods.
       */
      public class Variables {

        /**
         * Creates a variable within the given configuration. You cannot create a variable with a name that
         * is a prefix of an existing variable name, or a name that has an existing variable name as a
         * prefix.
         *
         * To learn more about creating a variable, read the [Setting and Getting Data](/deployment-manager
         * /runtime-configurator/set-and-get-variables) documentation.
         *
         * Create a request for the method "variables.create".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The path to the RutimeConfig resource that this variable should belong to.
        The configuration must
         *        exist beforehand; the path must be in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.Variable}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.runtimeconfig.v1beta1.model.Variable content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Variable> {

          private static final String REST_PATH = "v1beta1/{+parent}/variables";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

          /**
           * Creates a variable within the given configuration. You cannot create a variable with a name
           * that is a prefix of an existing variable name, or a name that has an existing variable name as
           * a prefix.
           *
           * To learn more about creating a variable, read the [Setting and Getting Data](/deployment-
           * manager/runtime-configurator/set-and-get-variables) documentation.
           *
           * Create a request for the method "variables.create".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The path to the RutimeConfig resource that this variable should belong to.
        The configuration must
         *        exist beforehand; the path must be in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.Variable}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.runtimeconfig.v1beta1.model.Variable content) {
            super(CloudRuntimeConfig.this, "POST", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.Variable.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The path to the RutimeConfig resource that this variable should belong to. The
           * configuration must exist beforehand; the path must be in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The path to the RutimeConfig resource that this variable should belong to. The configuration must
         exist beforehand; the path must be in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The path to the RutimeConfig resource that this variable should belong to. The
           * configuration must exist beforehand; the path must be in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An optional but recommended unique `request_id`. If the server receives two `create()`
           * requests  with the same `request_id`, then the second request will be ignored and the
           * first resource created and stored in the backend is returned. Empty `request_id` fields
           * are ignored.
           *
           * It is responsibility of the client to ensure uniqueness of the `request_id` strings.
           *
           * `request_id` strings are limited to 64 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional but recommended unique `request_id`. If the server receives two `create()` requests
         with the same `request_id`, then the second request will be ignored and the first resource created
         and stored in the backend is returned. Empty `request_id` fields are ignored.

         It is responsibility of the client to ensure uniqueness of the `request_id` strings.

         `request_id` strings are limited to 64 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional but recommended unique `request_id`. If the server receives two `create()`
           * requests  with the same `request_id`, then the second request will be ignored and the
           * first resource created and stored in the backend is returned. Empty `request_id` fields
           * are ignored.
           *
           * It is responsibility of the client to ensure uniqueness of the `request_id` strings.
           *
           * `request_id` strings are limited to 64 characters.
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a variable or multiple variables.
         *
         * If you specify a variable name, then that variable is deleted. If you specify a prefix and
         * `recursive` is true, then all variables with that prefix are deleted. You must set a `recursive`
         * to true if you delete variables by prefix.
         *
         * Create a request for the method "variables.delete".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the variable to delete, in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/variables/.+$");

          /**
           * Deletes a variable or multiple variables.
           *
           * If you specify a variable name, then that variable is deleted. If you specify a prefix and
           * `recursive` is true, then all variables with that prefix are deleted. You must set a
           * `recursive` to true if you delete variables by prefix.
           *
           * Create a request for the method "variables.delete".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the variable to delete, in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudRuntimeConfig.this, "DELETE", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the variable to delete, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the variable to delete, in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the variable to delete, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Set to `true` to recursively delete multiple variables with the same prefix.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean recursive;

          /** Set to `true` to recursively delete multiple variables with the same prefix.
           */
          public java.lang.Boolean getRecursive() {
            return recursive;
          }

          /**
           * Set to `true` to recursively delete multiple variables with the same prefix.
           */
          public Delete setRecursive(java.lang.Boolean recursive) {
            this.recursive = recursive;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets information about a single variable.
         *
         * Create a request for the method "variables.get".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the variable to return, in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIBLE_NAME]`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Variable> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/variables/.+$");

          /**
           * Gets information about a single variable.
           *
           * Create a request for the method "variables.get".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the variable to return, in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIBLE_NAME]`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudRuntimeConfig.this, "GET", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.Variable.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the variable to return, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIBLE_NAME]`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the variable to return, in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIBLE_NAME]`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the variable to return, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIBLE_NAME]`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists variables within given a configuration, matching any provided filters. This only lists
         * variable names, not the values, unless `return_values` is true, in which case only variables that
         * user has IAM permission to GetVariable will be returned.
         *
         * Create a request for the method "variables.list".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The path to the RuntimeConfig resource for which you want to list
        variables. The configuration must
         *        exist beforehand; the path must be in the
        format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.ListVariablesResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/variables";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

          /**
           * Lists variables within given a configuration, matching any provided filters. This only lists
           * variable names, not the values, unless `return_values` is true, in which case only variables
           * that user has IAM permission to GetVariable will be returned.
           *
           * Create a request for the method "variables.list".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The path to the RuntimeConfig resource for which you want to list
        variables. The configuration must
         *        exist beforehand; the path must be in the
        format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudRuntimeConfig.this, "GET", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.ListVariablesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The path to the RuntimeConfig resource for which you want to list variables. The
           * configuration must exist beforehand; the path must be in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The path to the RuntimeConfig resource for which you want to list variables. The configuration must
         exist beforehand; the path must be in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The path to the RuntimeConfig resource for which you want to list variables. The
           * configuration must exist beforehand; the path must be in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Filters variables by matching the specified filter. For example:
           *
           * `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filters variables by matching the specified filter. For example:

         `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Filters variables by matching the specified filter. For example:
           *
           * `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Specifies the number of results to return per page. If there are fewer elements than
           * the specified number, returns all elements.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Specifies the number of results to return per page. If there are fewer elements than the specified
         number, returns all elements.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Specifies the number of results to return per page. If there are fewer elements than
           * the specified number, returns all elements.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a
           * previous list request to get the next page of results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a previous list
         request to get the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a
           * previous list request to get the next page of results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * The flag indicates whether the user wants to return values of variables. If true, then
           * only those variables that user has IAM GetVariable permission will be returned along
           * with their values.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean returnValues;

          /** The flag indicates whether the user wants to return values of variables. If true, then only those
         variables that user has IAM GetVariable permission will be returned along with their values.
           */
          public java.lang.Boolean getReturnValues() {
            return returnValues;
          }

          /**
           * The flag indicates whether the user wants to return values of variables. If true, then
           * only those variables that user has IAM GetVariable permission will be returned along
           * with their values.
           */
          public List setReturnValues(java.lang.Boolean returnValues) {
            this.returnValues = returnValues;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.
         *
         * Note: This operation is designed to be used for building permission-aware UIs and command-line
         * tools, not for authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "variables.testIamPermissions".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested.
        See the operation
         *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/variables/.+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.
           *
           * Note: This operation is designed to be used for building permission-aware UIs and command-line
           * tools, not for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "variables.testIamPermissions".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested.
        See the operation
         *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest content) {
            super(CloudRuntimeConfig.this, "POST", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See the operation
         documentation for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing variable with a new value.
         *
         * Create a request for the method "variables.update".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name The name of the variable to update, in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.Variable}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.runtimeconfig.v1beta1.model.Variable content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Variable> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/variables/.+$");

          /**
           * Updates an existing variable with a new value.
           *
           * Create a request for the method "variables.update".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the variable to update, in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
           * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.Variable}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.runtimeconfig.v1beta1.model.Variable content) {
            super(CloudRuntimeConfig.this, "PUT", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.Variable.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the variable to update, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the variable to update, in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the variable to update, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }
        /**
         * Watches a specific variable and waits for a change in the variable's value. When there is a
         * change, this method returns the new value or times out.
         *
         * If a variable is deleted while being watched, the `variableState` state is set to `DELETED` and
         * the method returns the last known variable `value`.
         *
         * If you set the deadline for watching to a larger value than internal timeout (60 seconds), the
         * current variable value is returned and the `variableState` will be `VARIABLE_STATE_UNSPECIFIED`.
         *
         * To learn more about creating a watcher, read the [Watching a Variable for Changes](/deployment-
         * manager/runtime-configurator/watching-a-variable) documentation.
         *
         * Create a request for the method "variables.watch".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link Watch#execute()} method to invoke the remote operation.
         *
         * @param name The name of the variable to watch, in the format:
        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.WatchVariableRequest}
         * @return the request
         */
        public Watch watch(java.lang.String name, com.google.api.services.runtimeconfig.v1beta1.model.WatchVariableRequest content) throws java.io.IOException {
          Watch result = new Watch(name, content);
          initialize(result);
          return result;
        }

        public class Watch extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Variable> {

          private static final String REST_PATH = "v1beta1/{+name}:watch";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/variables/.+$");

          /**
           * Watches a specific variable and waits for a change in the variable's value. When there is a
           * change, this method returns the new value or times out.
           *
           * If a variable is deleted while being watched, the `variableState` state is set to `DELETED` and
           * the method returns the last known variable `value`.
           *
           * If you set the deadline for watching to a larger value than internal timeout (60 seconds), the
           * current variable value is returned and the `variableState` will be
           * `VARIABLE_STATE_UNSPECIFIED`.
           *
           * To learn more about creating a watcher, read the [Watching a Variable for Changes](/deployment-
           * manager/runtime-configurator/watching-a-variable) documentation.
           *
           * Create a request for the method "variables.watch".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link Watch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Watch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the variable to watch, in the format:
        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.WatchVariableRequest}
           * @since 1.13
           */
          protected Watch(java.lang.String name, com.google.api.services.runtimeconfig.v1beta1.model.WatchVariableRequest content) {
            super(CloudRuntimeConfig.this, "POST", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.Variable.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
          }

          @Override
          public Watch set$Xgafv(java.lang.String $Xgafv) {
            return (Watch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Watch setAccessToken(java.lang.String accessToken) {
            return (Watch) super.setAccessToken(accessToken);
          }

          @Override
          public Watch setAlt(java.lang.String alt) {
            return (Watch) super.setAlt(alt);
          }

          @Override
          public Watch setCallback(java.lang.String callback) {
            return (Watch) super.setCallback(callback);
          }

          @Override
          public Watch setFields(java.lang.String fields) {
            return (Watch) super.setFields(fields);
          }

          @Override
          public Watch setKey(java.lang.String key) {
            return (Watch) super.setKey(key);
          }

          @Override
          public Watch setOauthToken(java.lang.String oauthToken) {
            return (Watch) super.setOauthToken(oauthToken);
          }

          @Override
          public Watch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Watch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Watch setQuotaUser(java.lang.String quotaUser) {
            return (Watch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Watch setUploadType(java.lang.String uploadType) {
            return (Watch) super.setUploadType(uploadType);
          }

          @Override
          public Watch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Watch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of the variable to watch, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the variable to watch, in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The name of the variable to watch, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          public Watch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/variables/.+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Watch set(String parameterName, Object value) {
            return (Watch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Waiters collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudRuntimeConfig runtimeconfig = new CloudRuntimeConfig(...);}
       *   {@code CloudRuntimeConfig.Waiters.List request = runtimeconfig.waiters().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Waiters waiters() {
        return new Waiters();
      }

      /**
       * The "waiters" collection of methods.
       */
      public class Waiters {

        /**
         * Creates a Waiter resource. This operation returns a long-running Operation resource which can be
         * polled for completion. However, a waiter with the given name will exist (and can be retrieved)
         * prior to the operation completing. If the operation fails, the failed Waiter resource will still
         * exist and must be deleted prior to subsequent creation attempts.
         *
         * Create a request for the method "waiters.create".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The path to the configuration that will own the waiter.
        The configuration must exist beforehand; the
         *        path must be in the format:
        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`.
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.Waiter}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.runtimeconfig.v1beta1.model.Waiter content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Operation> {

          private static final String REST_PATH = "v1beta1/{+parent}/waiters";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

          /**
           * Creates a Waiter resource. This operation returns a long-running Operation resource which can
           * be polled for completion. However, a waiter with the given name will exist (and can be
           * retrieved) prior to the operation completing. If the operation fails, the failed Waiter
           * resource will still exist and must be deleted prior to subsequent creation attempts.
           *
           * Create a request for the method "waiters.create".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The path to the configuration that will own the waiter.
        The configuration must exist beforehand; the
         *        path must be in the format:
        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`.
           * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.Waiter}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.runtimeconfig.v1beta1.model.Waiter content) {
            super(CloudRuntimeConfig.this, "POST", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The path to the configuration that will own the waiter. The configuration must exist
           * beforehand; the path must be in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The path to the configuration that will own the waiter. The configuration must exist beforehand;
         the path must be in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The path to the configuration that will own the waiter. The configuration must exist
           * beforehand; the path must be in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An optional but recommended unique `request_id`. If the server receives two `create()`
           * requests  with the same `request_id`, then the second request will be ignored and the
           * first resource created and stored in the backend is returned. Empty `request_id` fields
           * are ignored.
           *
           * It is responsibility of the client to ensure uniqueness of the `request_id` strings.
           *
           * `request_id` strings are limited to 64 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional but recommended unique `request_id`. If the server receives two `create()` requests
         with the same `request_id`, then the second request will be ignored and the first resource created
         and stored in the backend is returned. Empty `request_id` fields are ignored.

         It is responsibility of the client to ensure uniqueness of the `request_id` strings.

         `request_id` strings are limited to 64 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional but recommended unique `request_id`. If the server receives two `create()`
           * requests  with the same `request_id`, then the second request will be ignored and the
           * first resource created and stored in the backend is returned. Empty `request_id` fields
           * are ignored.
           *
           * It is responsibility of the client to ensure uniqueness of the `request_id` strings.
           *
           * `request_id` strings are limited to 64 characters.
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the waiter with the specified name.
         *
         * Create a request for the method "waiters.delete".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The Waiter resource to delete, in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/waiters/[^/]+$");

          /**
           * Deletes the waiter with the specified name.
           *
           * Create a request for the method "waiters.delete".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The Waiter resource to delete, in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudRuntimeConfig.this, "DELETE", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/waiters/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The Waiter resource to delete, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The Waiter resource to delete, in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The Waiter resource to delete, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/waiters/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets information about a single waiter.
         *
         * Create a request for the method "waiters.get".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The fully-qualified name of the Waiter resource object to retrieve, in the
        format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.Waiter> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/waiters/[^/]+$");

          /**
           * Gets information about a single waiter.
           *
           * Create a request for the method "waiters.get".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The fully-qualified name of the Waiter resource object to retrieve, in the
        format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudRuntimeConfig.this, "GET", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.Waiter.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/waiters/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The fully-qualified name of the Waiter resource object to retrieve, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The fully-qualified name of the Waiter resource object to retrieve, in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The fully-qualified name of the Waiter resource object to retrieve, in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/waiters/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List waiters within the given configuration.
         *
         * Create a request for the method "waiters.list".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The path to the configuration for which you want to get a list of waiters.
        The configuration must
         *        exist beforehand; the path must be in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.ListWaitersResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/waiters";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+$");

          /**
           * List waiters within the given configuration.
           *
           * Create a request for the method "waiters.list".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The path to the configuration for which you want to get a list of waiters.
        The configuration must
         *        exist beforehand; the path must be in the format:
         *        `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudRuntimeConfig.this, "GET", REST_PATH, null, com.google.api.services.runtimeconfig.v1beta1.model.ListWaitersResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The path to the configuration for which you want to get a list of waiters. The
           * configuration must exist beforehand; the path must be in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The path to the configuration for which you want to get a list of waiters. The configuration must
         exist beforehand; the path must be in the format:

         `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The path to the configuration for which you want to get a list of waiters. The
           * configuration must exist beforehand; the path must be in the format:
           *
           * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Specifies the number of results to return per page. If there are fewer elements than
           * the specified number, returns all elements.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Specifies the number of results to return per page. If there are fewer elements than the specified
         number, returns all elements.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Specifies the number of results to return per page. If there are fewer elements than
           * the specified number, returns all elements.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a
           * previous list request to get the next page of results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a previous list
         request to get the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a
           * previous list request to get the next page of results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.
         *
         * Note: This operation is designed to be used for building permission-aware UIs and command-line
         * tools, not for authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "waiters.testIamPermissions".
         *
         * This request holds the parameters needed by the runtimeconfig server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested.
        See the operation
         *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends CloudRuntimeConfigRequest<com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/configs/[^/]+/waiters/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.
           *
           * Note: This operation is designed to be used for building permission-aware UIs and command-line
           * tools, not for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "waiters.testIamPermissions".
           *
           * This request holds the parameters needed by the the runtimeconfig server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested.
        See the operation
         *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsRequest content) {
            super(CloudRuntimeConfig.this, "POST", REST_PATH, content, com.google.api.services.runtimeconfig.v1beta1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/waiters/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See the operation
         documentation for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/configs/[^/]+/waiters/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link CloudRuntimeConfig}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudRuntimeConfig}. */
    @Override
    public CloudRuntimeConfig build() {
      return new CloudRuntimeConfig(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudRuntimeConfigRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudRuntimeConfigRequestInitializer(
        CloudRuntimeConfigRequestInitializer cloudruntimeconfigRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudruntimeconfigRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
