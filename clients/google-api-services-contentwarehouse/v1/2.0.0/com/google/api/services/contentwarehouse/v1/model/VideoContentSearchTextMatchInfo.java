/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for VideoContentSearchTextMatchInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoContentSearchTextMatchInfo extends com.google.api.client.json.GenericJson {

  /**
   * The time gap of the matched_time_ms from the predicted timestamp of when this anchor should
   * appear in the video.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long durationToPredictedTimeMs;

  /**
   * The float similarty score from the anchor label to matched_asr_text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float matchScore;

  /**
   * The start token offset from the beginning of ASR where matched_asr_text starts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer matchedAsrStartPos;

  /**
   * The ASR text that was a candidate match for the list anchor.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matchedAsrText;

  /**
   * The timestamp of the matched ASR in the video in milliseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long matchedAsrTimeMs;

  /**
   * The ratio of the matched_asr_time_ms over the total duration of the video.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float matchedAsrTimeRatio;

  /**
   * The number of tokens in matched_asr_text
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer matchedAsrTokenCount;

  /**
   * The ratio of the video description item index this match corresponds to over the total number
   * of list description items for the video.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float matchedDescriptionItemIndexRatio;

  /**
   * The video description text matched with the ASR that's used as the anchor label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matchedDescriptionText;

  /**
   * The number of tokens in matched_description_text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer matchedDescriptionTokenCount;

  /**
   * The time gap of the matched_time_ms from the predicted timestamp of when this anchor should
   * appear in the video.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDurationToPredictedTimeMs() {
    return durationToPredictedTimeMs;
  }

  /**
   * The time gap of the matched_time_ms from the predicted timestamp of when this anchor should
   * appear in the video.
   * @param durationToPredictedTimeMs durationToPredictedTimeMs or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setDurationToPredictedTimeMs(java.lang.Long durationToPredictedTimeMs) {
    this.durationToPredictedTimeMs = durationToPredictedTimeMs;
    return this;
  }

  /**
   * The float similarty score from the anchor label to matched_asr_text.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMatchScore() {
    return matchScore;
  }

  /**
   * The float similarty score from the anchor label to matched_asr_text.
   * @param matchScore matchScore or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setMatchScore(java.lang.Float matchScore) {
    this.matchScore = matchScore;
    return this;
  }

  /**
   * The start token offset from the beginning of ASR where matched_asr_text starts.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMatchedAsrStartPos() {
    return matchedAsrStartPos;
  }

  /**
   * The start token offset from the beginning of ASR where matched_asr_text starts.
   * @param matchedAsrStartPos matchedAsrStartPos or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setMatchedAsrStartPos(java.lang.Integer matchedAsrStartPos) {
    this.matchedAsrStartPos = matchedAsrStartPos;
    return this;
  }

  /**
   * The ASR text that was a candidate match for the list anchor.
   * @return value or {@code null} for none
   */
  public java.lang.String getMatchedAsrText() {
    return matchedAsrText;
  }

  /**
   * The ASR text that was a candidate match for the list anchor.
   * @param matchedAsrText matchedAsrText or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setMatchedAsrText(java.lang.String matchedAsrText) {
    this.matchedAsrText = matchedAsrText;
    return this;
  }

  /**
   * The timestamp of the matched ASR in the video in milliseconds.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMatchedAsrTimeMs() {
    return matchedAsrTimeMs;
  }

  /**
   * The timestamp of the matched ASR in the video in milliseconds.
   * @param matchedAsrTimeMs matchedAsrTimeMs or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setMatchedAsrTimeMs(java.lang.Long matchedAsrTimeMs) {
    this.matchedAsrTimeMs = matchedAsrTimeMs;
    return this;
  }

  /**
   * The ratio of the matched_asr_time_ms over the total duration of the video.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMatchedAsrTimeRatio() {
    return matchedAsrTimeRatio;
  }

  /**
   * The ratio of the matched_asr_time_ms over the total duration of the video.
   * @param matchedAsrTimeRatio matchedAsrTimeRatio or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setMatchedAsrTimeRatio(java.lang.Float matchedAsrTimeRatio) {
    this.matchedAsrTimeRatio = matchedAsrTimeRatio;
    return this;
  }

  /**
   * The number of tokens in matched_asr_text
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMatchedAsrTokenCount() {
    return matchedAsrTokenCount;
  }

  /**
   * The number of tokens in matched_asr_text
   * @param matchedAsrTokenCount matchedAsrTokenCount or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setMatchedAsrTokenCount(java.lang.Integer matchedAsrTokenCount) {
    this.matchedAsrTokenCount = matchedAsrTokenCount;
    return this;
  }

  /**
   * The ratio of the video description item index this match corresponds to over the total number
   * of list description items for the video.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMatchedDescriptionItemIndexRatio() {
    return matchedDescriptionItemIndexRatio;
  }

  /**
   * The ratio of the video description item index this match corresponds to over the total number
   * of list description items for the video.
   * @param matchedDescriptionItemIndexRatio matchedDescriptionItemIndexRatio or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setMatchedDescriptionItemIndexRatio(java.lang.Float matchedDescriptionItemIndexRatio) {
    this.matchedDescriptionItemIndexRatio = matchedDescriptionItemIndexRatio;
    return this;
  }

  /**
   * The video description text matched with the ASR that's used as the anchor label.
   * @return value or {@code null} for none
   */
  public java.lang.String getMatchedDescriptionText() {
    return matchedDescriptionText;
  }

  /**
   * The video description text matched with the ASR that's used as the anchor label.
   * @param matchedDescriptionText matchedDescriptionText or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setMatchedDescriptionText(java.lang.String matchedDescriptionText) {
    this.matchedDescriptionText = matchedDescriptionText;
    return this;
  }

  /**
   * The number of tokens in matched_description_text.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMatchedDescriptionTokenCount() {
    return matchedDescriptionTokenCount;
  }

  /**
   * The number of tokens in matched_description_text.
   * @param matchedDescriptionTokenCount matchedDescriptionTokenCount or {@code null} for none
   */
  public VideoContentSearchTextMatchInfo setMatchedDescriptionTokenCount(java.lang.Integer matchedDescriptionTokenCount) {
    this.matchedDescriptionTokenCount = matchedDescriptionTokenCount;
    return this;
  }

  @Override
  public VideoContentSearchTextMatchInfo set(String fieldName, Object value) {
    return (VideoContentSearchTextMatchInfo) super.set(fieldName, value);
  }

  @Override
  public VideoContentSearchTextMatchInfo clone() {
    return (VideoContentSearchTextMatchInfo) super.clone();
  }

}
