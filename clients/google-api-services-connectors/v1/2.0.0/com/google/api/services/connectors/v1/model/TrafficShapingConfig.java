/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v1.model;

/**
 * * TrafficShapingConfig defines the configuration for shaping API traffic by specifying a quota
 * limit and the duration over which this limit is enforced. This configuration helps to control and
 * manage the rate at which API calls are made on the client side, preventing service overload on
 * the backend. For example: - if the quota limit is 100 calls per 10 seconds, then the message
 * would be: { quota_limit: 100 duration: { seconds: 10 } } - if the quota limit is 100 calls per 5
 * minutes, then the message would be: { quota_limit: 100 duration: { seconds: 300 } } - if the
 * quota limit is 10000 calls per day, then the message would be: { quota_limit: 10000 duration: {
 * seconds: 86400 } and so on.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Connectors API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TrafficShapingConfig extends com.google.api.client.json.GenericJson {

  /**
   * Required. * The duration over which the API call quota limits are calculated. This duration is
   * used to define the time window for evaluating if the number of API calls made by a user is
   * within the allowed quota limits. For example: - To define a quota sampled over 16 seconds, set
   * `seconds` to 16 - To define a quota sampled over 5 minutes, set `seconds` to 300 (5 * 60) - To
   * define a quota sampled over 1 day, set `seconds` to 86400 (24 * 60 * 60) and so on. It is
   * important to note that this duration is not the time the quota is valid for, but rather the
   * time window over which the quota is evaluated. For example, if the quota is 100 calls per 10
   * seconds, then this duration field would be set to 10 seconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String duration;

  /**
   * Required. Maximum number of api calls allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long quotaLimit;

  /**
   * Required. * The duration over which the API call quota limits are calculated. This duration is
   * used to define the time window for evaluating if the number of API calls made by a user is
   * within the allowed quota limits. For example: - To define a quota sampled over 16 seconds, set
   * `seconds` to 16 - To define a quota sampled over 5 minutes, set `seconds` to 300 (5 * 60) - To
   * define a quota sampled over 1 day, set `seconds` to 86400 (24 * 60 * 60) and so on. It is
   * important to note that this duration is not the time the quota is valid for, but rather the
   * time window over which the quota is evaluated. For example, if the quota is 100 calls per 10
   * seconds, then this duration field would be set to 10 seconds.
   * @return value or {@code null} for none
   */
  public String getDuration() {
    return duration;
  }

  /**
   * Required. * The duration over which the API call quota limits are calculated. This duration is
   * used to define the time window for evaluating if the number of API calls made by a user is
   * within the allowed quota limits. For example: - To define a quota sampled over 16 seconds, set
   * `seconds` to 16 - To define a quota sampled over 5 minutes, set `seconds` to 300 (5 * 60) - To
   * define a quota sampled over 1 day, set `seconds` to 86400 (24 * 60 * 60) and so on. It is
   * important to note that this duration is not the time the quota is valid for, but rather the
   * time window over which the quota is evaluated. For example, if the quota is 100 calls per 10
   * seconds, then this duration field would be set to 10 seconds.
   * @param duration duration or {@code null} for none
   */
  public TrafficShapingConfig setDuration(String duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Required. Maximum number of api calls allowed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getQuotaLimit() {
    return quotaLimit;
  }

  /**
   * Required. Maximum number of api calls allowed.
   * @param quotaLimit quotaLimit or {@code null} for none
   */
  public TrafficShapingConfig setQuotaLimit(java.lang.Long quotaLimit) {
    this.quotaLimit = quotaLimit;
    return this;
  }

  @Override
  public TrafficShapingConfig set(String fieldName, Object value) {
    return (TrafficShapingConfig) super.set(fieldName, value);
  }

  @Override
  public TrafficShapingConfig clone() {
    return (TrafficShapingConfig) super.clone();
  }

}
