/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.identitytoolkit.v2.model;

/**
 * App Verification info for a StartMfa request.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Identity Toolkit API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo extends com.google.api.client.json.GenericJson {

  /**
   * Android only. Used by Google Play Services to identify the app for auto-retrieval.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitV2AutoRetrievalInfo autoRetrievalInfo;

  /**
   * iOS only. Receipt of successful app token validation with APNS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String iosReceipt;

  /**
   * iOS only. Secret delivered to iOS app via APNS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String iosSecret;

  /**
   * Required for enrollment. Phone number to be enrolled as MFA.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String phoneNumber;

  /**
   * Android only. Used to assert application identity in place of a recaptcha token (or safety net
   * token). A Play Integrity Token can be generated via the [PlayIntegrity API]
   * (https://developer.android.com/google/play/integrity) with applying SHA256 to the
   * `phone_number` field as the nonce.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String playIntegrityToken;

  /**
   * Web only. Recaptcha solution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String recaptchaToken;

  /**
   * Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet
   * Token can be generated via the [SafetyNet Android Attestation
   * API](https://developer.android.com/training/safetynet/attestation.html), with the Base64
   * encoding of the `phone_number` field as the nonce.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String safetyNetToken;

  /**
   * Android only. Used by Google Play Services to identify the app for auto-retrieval.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV2AutoRetrievalInfo getAutoRetrievalInfo() {
    return autoRetrievalInfo;
  }

  /**
   * Android only. Used by Google Play Services to identify the app for auto-retrieval.
   * @param autoRetrievalInfo autoRetrievalInfo or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo setAutoRetrievalInfo(GoogleCloudIdentitytoolkitV2AutoRetrievalInfo autoRetrievalInfo) {
    this.autoRetrievalInfo = autoRetrievalInfo;
    return this;
  }

  /**
   * iOS only. Receipt of successful app token validation with APNS.
   * @return value or {@code null} for none
   */
  public java.lang.String getIosReceipt() {
    return iosReceipt;
  }

  /**
   * iOS only. Receipt of successful app token validation with APNS.
   * @param iosReceipt iosReceipt or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo setIosReceipt(java.lang.String iosReceipt) {
    this.iosReceipt = iosReceipt;
    return this;
  }

  /**
   * iOS only. Secret delivered to iOS app via APNS.
   * @return value or {@code null} for none
   */
  public java.lang.String getIosSecret() {
    return iosSecret;
  }

  /**
   * iOS only. Secret delivered to iOS app via APNS.
   * @param iosSecret iosSecret or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo setIosSecret(java.lang.String iosSecret) {
    this.iosSecret = iosSecret;
    return this;
  }

  /**
   * Required for enrollment. Phone number to be enrolled as MFA.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhoneNumber() {
    return phoneNumber;
  }

  /**
   * Required for enrollment. Phone number to be enrolled as MFA.
   * @param phoneNumber phoneNumber or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo setPhoneNumber(java.lang.String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Android only. Used to assert application identity in place of a recaptcha token (or safety net
   * token). A Play Integrity Token can be generated via the [PlayIntegrity API]
   * (https://developer.android.com/google/play/integrity) with applying SHA256 to the
   * `phone_number` field as the nonce.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlayIntegrityToken() {
    return playIntegrityToken;
  }

  /**
   * Android only. Used to assert application identity in place of a recaptcha token (or safety net
   * token). A Play Integrity Token can be generated via the [PlayIntegrity API]
   * (https://developer.android.com/google/play/integrity) with applying SHA256 to the
   * `phone_number` field as the nonce.
   * @param playIntegrityToken playIntegrityToken or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo setPlayIntegrityToken(java.lang.String playIntegrityToken) {
    this.playIntegrityToken = playIntegrityToken;
    return this;
  }

  /**
   * Web only. Recaptcha solution.
   * @return value or {@code null} for none
   */
  public java.lang.String getRecaptchaToken() {
    return recaptchaToken;
  }

  /**
   * Web only. Recaptcha solution.
   * @param recaptchaToken recaptchaToken or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo setRecaptchaToken(java.lang.String recaptchaToken) {
    this.recaptchaToken = recaptchaToken;
    return this;
  }

  /**
   * Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet
   * Token can be generated via the [SafetyNet Android Attestation
   * API](https://developer.android.com/training/safetynet/attestation.html), with the Base64
   * encoding of the `phone_number` field as the nonce.
   * @return value or {@code null} for none
   */
  public java.lang.String getSafetyNetToken() {
    return safetyNetToken;
  }

  /**
   * Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet
   * Token can be generated via the [SafetyNet Android Attestation
   * API](https://developer.android.com/training/safetynet/attestation.html), with the Base64
   * encoding of the `phone_number` field as the nonce.
   * @param safetyNetToken safetyNetToken or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo setSafetyNetToken(java.lang.String safetyNetToken) {
    this.safetyNetToken = safetyNetToken;
    return this;
  }

  @Override
  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo set(String fieldName, Object value) {
    return (GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo clone() {
    return (GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo) super.clone();
  }

}
