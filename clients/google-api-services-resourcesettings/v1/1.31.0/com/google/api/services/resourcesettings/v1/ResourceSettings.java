/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.resourcesettings.v1;

/**
 * Service definition for ResourceSettings (v1).
 *
 * <p>
 * The Resource Settings API allows users to control and modify the behavior of their GCP resources (e.g., VM, firewall, Project, etc.) across the Cloud Resource Hierarchy.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/resource-manager/docs/resource-settings/overview" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ResourceSettingsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ResourceSettings extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.5 of the Resource Settings API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://resourcesettings.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://resourcesettings.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ResourceSettings(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ResourceSettings(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Folders collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ResourceSettings resourcesettings = new ResourceSettings(...);}
   *   {@code ResourceSettings.Folders.List request = resourcesettings.folders().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Folders folders() {
    return new Folders();
  }

  /**
   * The "folders" collection of methods.
   */
  public class Folders {

    /**
     * An accessor for creating requests from the Settings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ResourceSettings resourcesettings = new ResourceSettings(...);}
     *   {@code ResourceSettings.Settings.List request = resourcesettings.settings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Settings settings() {
      return new Settings();
    }

    /**
     * The "settings" collection of methods.
     */
    public class Settings {

      /**
       * Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
       * the setting does not exist.
       *
       * Create a request for the method "settings.get".
       *
       * This request holds the parameters needed by the resourcesettings server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the setting to get. See Setting for naming requirements.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ResourceSettingsRequest<com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+/settings/[^/]+$");

        /**
         * Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
         * the setting does not exist.
         *
         * Create a request for the method "settings.get".
         *
         * This request holds the parameters needed by the the resourcesettings server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the setting to get. See Setting for naming requirements.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(ResourceSettings.this, "GET", REST_PATH, null, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/settings/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the setting to get. See Setting for naming requirements. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the setting to get. See Setting for naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the setting to get. See Setting for naming requirements. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/settings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The SettingView for this request. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** The SettingView for this request.
         */
        public java.lang.String getView() {
          return view;
        }

        /** The SettingView for this request. */
        public Get setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all the settings that are available on the Cloud resource `parent`.
       *
       * Create a request for the method "settings.list".
       *
       * This request holds the parameters needed by the resourcesettings server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project, folder, or organization that is the parent resource for this setting. Must be
       *        in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` *
       *        `folders/{folder_id}` * `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ResourceSettingsRequest<com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1ListSettingsResponse> {

        private static final String REST_PATH = "v1/{+parent}/settings";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Lists all the settings that are available on the Cloud resource `parent`.
         *
         * Create a request for the method "settings.list".
         *
         * This request holds the parameters needed by the the resourcesettings server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project, folder, or organization that is the parent resource for this setting. Must be
       *        in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` *
       *        `folders/{folder_id}` * `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(ResourceSettings.this, "GET", REST_PATH, null, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1ListSettingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project, folder, or organization that is the parent resource for this
         * setting. Must be in one of the following forms: * `projects/{project_number}` *
         * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project, folder, or organization that is the parent resource for this setting. Must
       be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` *
       `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project, folder, or organization that is the parent resource for this
         * setting. Must be in one of the following forms: * `projects/{project_number}` *
         * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Unused. The size of the page to be returned. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Unused. The size of the page to be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Unused. The size of the page to be returned. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Unused. A page token used to retrieve the next page. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Unused. A page token used to retrieve the next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Unused. A page token used to retrieve the next page. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** The SettingView for this request. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** The SettingView for this request.
         */
        public java.lang.String getView() {
          return view;
        }

        /** The SettingView for this request. */
        public List setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
       * the setting does not exist. Returns a `google.rpc.Status` with
       * `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a
       * `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
       * match the persisted etag of the setting value. On success, the response will contain only `name`,
       * `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this
       * API. Note: the supplied setting will perform a full overwrite of the `local_value` field.
       *
       * Create a request for the method "settings.patch".
       *
       * This request holds the parameters needed by the resourcesettings server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the setting. Must be in one of the following forms: *
       *        `projects/{project_number}/settings/{setting_name}` *
       *        `folders/{folder_id}/settings/{setting_name}` *
       *        `organizations/{organization_id}/settings/{setting_name}` For example,
       *        "/projects/123/settings/gcp-enableMyFeature"
       * @param content the {@link com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ResourceSettingsRequest<com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+/settings/[^/]+$");

        /**
         * Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
         * the setting does not exist. Returns a `google.rpc.Status` with
         * `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a
         * `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
         * match the persisted etag of the setting value. On success, the response will contain only
         * `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated
         * through this API. Note: the supplied setting will perform a full overwrite of the `local_value`
         * field.
         *
         * Create a request for the method "settings.patch".
         *
         * This request holds the parameters needed by the the resourcesettings server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the setting. Must be in one of the following forms: *
       *        `projects/{project_number}/settings/{setting_name}` *
       *        `folders/{folder_id}/settings/{setting_name}` *
       *        `organizations/{organization_id}/settings/{setting_name}` For example,
       *        "/projects/123/settings/gcp-enableMyFeature"
         * @param content the {@link com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting content) {
          super(ResourceSettings.this, "PATCH", REST_PATH, content, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/settings/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the setting. Must be in one of the following forms: *
         * `projects/{project_number}/settings/{setting_name}` *
         * `folders/{folder_id}/settings/{setting_name}` *
         * `organizations/{organization_id}/settings/{setting_name}` For example,
         * "/projects/123/settings/gcp-enableMyFeature"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the setting. Must be in one of the following forms: *
       `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}`
       * `organizations/{organization_id}/settings/{setting_name}` For example, "/projects/123/settings
       /gcp-enableMyFeature"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the setting. Must be in one of the following forms: *
         * `projects/{project_number}/settings/{setting_name}` *
         * `folders/{folder_id}/settings/{setting_name}` *
         * `organizations/{organization_id}/settings/{setting_name}` For example,
         * "/projects/123/settings/gcp-enableMyFeature"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^folders/[^/]+/settings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ResourceSettings resourcesettings = new ResourceSettings(...);}
   *   {@code ResourceSettings.Organizations.List request = resourcesettings.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * An accessor for creating requests from the Settings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ResourceSettings resourcesettings = new ResourceSettings(...);}
     *   {@code ResourceSettings.Settings.List request = resourcesettings.settings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Settings settings() {
      return new Settings();
    }

    /**
     * The "settings" collection of methods.
     */
    public class Settings {

      /**
       * Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
       * the setting does not exist.
       *
       * Create a request for the method "settings.get".
       *
       * This request holds the parameters needed by the resourcesettings server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the setting to get. See Setting for naming requirements.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ResourceSettingsRequest<com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/settings/[^/]+$");

        /**
         * Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
         * the setting does not exist.
         *
         * Create a request for the method "settings.get".
         *
         * This request holds the parameters needed by the the resourcesettings server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the setting to get. See Setting for naming requirements.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(ResourceSettings.this, "GET", REST_PATH, null, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/settings/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the setting to get. See Setting for naming requirements. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the setting to get. See Setting for naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the setting to get. See Setting for naming requirements. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/settings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The SettingView for this request. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** The SettingView for this request.
         */
        public java.lang.String getView() {
          return view;
        }

        /** The SettingView for this request. */
        public Get setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all the settings that are available on the Cloud resource `parent`.
       *
       * Create a request for the method "settings.list".
       *
       * This request holds the parameters needed by the resourcesettings server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project, folder, or organization that is the parent resource for this setting. Must be
       *        in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` *
       *        `folders/{folder_id}` * `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ResourceSettingsRequest<com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1ListSettingsResponse> {

        private static final String REST_PATH = "v1/{+parent}/settings";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all the settings that are available on the Cloud resource `parent`.
         *
         * Create a request for the method "settings.list".
         *
         * This request holds the parameters needed by the the resourcesettings server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project, folder, or organization that is the parent resource for this setting. Must be
       *        in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` *
       *        `folders/{folder_id}` * `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(ResourceSettings.this, "GET", REST_PATH, null, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1ListSettingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project, folder, or organization that is the parent resource for this
         * setting. Must be in one of the following forms: * `projects/{project_number}` *
         * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project, folder, or organization that is the parent resource for this setting. Must
       be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` *
       `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project, folder, or organization that is the parent resource for this
         * setting. Must be in one of the following forms: * `projects/{project_number}` *
         * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Unused. The size of the page to be returned. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Unused. The size of the page to be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Unused. The size of the page to be returned. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Unused. A page token used to retrieve the next page. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Unused. A page token used to retrieve the next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Unused. A page token used to retrieve the next page. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** The SettingView for this request. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** The SettingView for this request.
         */
        public java.lang.String getView() {
          return view;
        }

        /** The SettingView for this request. */
        public List setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
       * the setting does not exist. Returns a `google.rpc.Status` with
       * `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a
       * `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
       * match the persisted etag of the setting value. On success, the response will contain only `name`,
       * `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this
       * API. Note: the supplied setting will perform a full overwrite of the `local_value` field.
       *
       * Create a request for the method "settings.patch".
       *
       * This request holds the parameters needed by the resourcesettings server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the setting. Must be in one of the following forms: *
       *        `projects/{project_number}/settings/{setting_name}` *
       *        `folders/{folder_id}/settings/{setting_name}` *
       *        `organizations/{organization_id}/settings/{setting_name}` For example,
       *        "/projects/123/settings/gcp-enableMyFeature"
       * @param content the {@link com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ResourceSettingsRequest<com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/settings/[^/]+$");

        /**
         * Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
         * the setting does not exist. Returns a `google.rpc.Status` with
         * `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a
         * `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
         * match the persisted etag of the setting value. On success, the response will contain only
         * `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated
         * through this API. Note: the supplied setting will perform a full overwrite of the `local_value`
         * field.
         *
         * Create a request for the method "settings.patch".
         *
         * This request holds the parameters needed by the the resourcesettings server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the setting. Must be in one of the following forms: *
       *        `projects/{project_number}/settings/{setting_name}` *
       *        `folders/{folder_id}/settings/{setting_name}` *
       *        `organizations/{organization_id}/settings/{setting_name}` For example,
       *        "/projects/123/settings/gcp-enableMyFeature"
         * @param content the {@link com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting content) {
          super(ResourceSettings.this, "PATCH", REST_PATH, content, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/settings/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the setting. Must be in one of the following forms: *
         * `projects/{project_number}/settings/{setting_name}` *
         * `folders/{folder_id}/settings/{setting_name}` *
         * `organizations/{organization_id}/settings/{setting_name}` For example,
         * "/projects/123/settings/gcp-enableMyFeature"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the setting. Must be in one of the following forms: *
       `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}`
       * `organizations/{organization_id}/settings/{setting_name}` For example, "/projects/123/settings
       /gcp-enableMyFeature"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the setting. Must be in one of the following forms: *
         * `projects/{project_number}/settings/{setting_name}` *
         * `folders/{folder_id}/settings/{setting_name}` *
         * `organizations/{organization_id}/settings/{setting_name}` For example,
         * "/projects/123/settings/gcp-enableMyFeature"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/settings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ResourceSettings resourcesettings = new ResourceSettings(...);}
   *   {@code ResourceSettings.Projects.List request = resourcesettings.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Settings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ResourceSettings resourcesettings = new ResourceSettings(...);}
     *   {@code ResourceSettings.Settings.List request = resourcesettings.settings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Settings settings() {
      return new Settings();
    }

    /**
     * The "settings" collection of methods.
     */
    public class Settings {

      /**
       * Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
       * the setting does not exist.
       *
       * Create a request for the method "settings.get".
       *
       * This request holds the parameters needed by the resourcesettings server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the setting to get. See Setting for naming requirements.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ResourceSettingsRequest<com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/settings/[^/]+$");

        /**
         * Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
         * the setting does not exist.
         *
         * Create a request for the method "settings.get".
         *
         * This request holds the parameters needed by the the resourcesettings server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the setting to get. See Setting for naming requirements.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(ResourceSettings.this, "GET", REST_PATH, null, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/settings/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the setting to get. See Setting for naming requirements. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the setting to get. See Setting for naming requirements.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the setting to get. See Setting for naming requirements. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/settings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The SettingView for this request. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** The SettingView for this request.
         */
        public java.lang.String getView() {
          return view;
        }

        /** The SettingView for this request. */
        public Get setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all the settings that are available on the Cloud resource `parent`.
       *
       * Create a request for the method "settings.list".
       *
       * This request holds the parameters needed by the resourcesettings server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project, folder, or organization that is the parent resource for this setting. Must be
       *        in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` *
       *        `folders/{folder_id}` * `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ResourceSettingsRequest<com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1ListSettingsResponse> {

        private static final String REST_PATH = "v1/{+parent}/settings";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists all the settings that are available on the Cloud resource `parent`.
         *
         * Create a request for the method "settings.list".
         *
         * This request holds the parameters needed by the the resourcesettings server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project, folder, or organization that is the parent resource for this setting. Must be
       *        in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` *
       *        `folders/{folder_id}` * `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(ResourceSettings.this, "GET", REST_PATH, null, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1ListSettingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project, folder, or organization that is the parent resource for this
         * setting. Must be in one of the following forms: * `projects/{project_number}` *
         * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project, folder, or organization that is the parent resource for this setting. Must
       be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` *
       `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project, folder, or organization that is the parent resource for this
         * setting. Must be in one of the following forms: * `projects/{project_number}` *
         * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Unused. The size of the page to be returned. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Unused. The size of the page to be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Unused. The size of the page to be returned. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Unused. A page token used to retrieve the next page. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Unused. A page token used to retrieve the next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Unused. A page token used to retrieve the next page. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** The SettingView for this request. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** The SettingView for this request.
         */
        public java.lang.String getView() {
          return view;
        }

        /** The SettingView for this request. */
        public List setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
       * the setting does not exist. Returns a `google.rpc.Status` with
       * `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a
       * `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
       * match the persisted etag of the setting value. On success, the response will contain only `name`,
       * `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this
       * API. Note: the supplied setting will perform a full overwrite of the `local_value` field.
       *
       * Create a request for the method "settings.patch".
       *
       * This request holds the parameters needed by the resourcesettings server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the setting. Must be in one of the following forms: *
       *        `projects/{project_number}/settings/{setting_name}` *
       *        `folders/{folder_id}/settings/{setting_name}` *
       *        `organizations/{organization_id}/settings/{setting_name}` For example,
       *        "/projects/123/settings/gcp-enableMyFeature"
       * @param content the {@link com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ResourceSettingsRequest<com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/settings/[^/]+$");

        /**
         * Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if
         * the setting does not exist. Returns a `google.rpc.Status` with
         * `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a
         * `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
         * match the persisted etag of the setting value. On success, the response will contain only
         * `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated
         * through this API. Note: the supplied setting will perform a full overwrite of the `local_value`
         * field.
         *
         * Create a request for the method "settings.patch".
         *
         * This request holds the parameters needed by the the resourcesettings server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the setting. Must be in one of the following forms: *
       *        `projects/{project_number}/settings/{setting_name}` *
       *        `folders/{folder_id}/settings/{setting_name}` *
       *        `organizations/{organization_id}/settings/{setting_name}` For example,
       *        "/projects/123/settings/gcp-enableMyFeature"
         * @param content the {@link com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting content) {
          super(ResourceSettings.this, "PATCH", REST_PATH, content, com.google.api.services.resourcesettings.v1.model.GoogleCloudResourcesettingsV1Setting.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/settings/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the setting. Must be in one of the following forms: *
         * `projects/{project_number}/settings/{setting_name}` *
         * `folders/{folder_id}/settings/{setting_name}` *
         * `organizations/{organization_id}/settings/{setting_name}` For example,
         * "/projects/123/settings/gcp-enableMyFeature"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the setting. Must be in one of the following forms: *
       `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}`
       * `organizations/{organization_id}/settings/{setting_name}` For example, "/projects/123/settings
       /gcp-enableMyFeature"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the setting. Must be in one of the following forms: *
         * `projects/{project_number}/settings/{setting_name}` *
         * `folders/{folder_id}/settings/{setting_name}` *
         * `organizations/{organization_id}/settings/{setting_name}` For example,
         * "/projects/123/settings/gcp-enableMyFeature"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/settings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link ResourceSettings}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ResourceSettings}. */
    @Override
    public ResourceSettings build() {
      return new ResourceSettings(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ResourceSettingsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setResourceSettingsRequestInitializer(
        ResourceSettingsRequestInitializer resourcesettingsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(resourcesettingsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
