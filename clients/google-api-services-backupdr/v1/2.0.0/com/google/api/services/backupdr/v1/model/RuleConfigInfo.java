/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.backupdr.v1.model;

/**
 * Message for rules config info.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup and DR Service API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RuleConfigInfo extends com.google.api.client.json.GenericJson {

  /**
   * Output only. TODO b/341576760: Remove deprecated BV and Datasource field form BP and BPA once
   * UI removed all dependencies on them Output Only. Resource name of data source which will be
   * used as storage location for backups taken by specified rule. Format :
   * projects/{project}/locations/{location}/backupVaults/{backupvault}/dataSources/{datasource}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataSource;

  /**
   * Output only. Output Only. google.rpc.Status object to store the last backup error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Status lastBackupError;

  /**
   * Output only. The last backup state for rule.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lastBackupState;

  /**
   * Output only. The point in time when the last successful backup was captured from the source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastSuccessfulBackupConsistencyTime;

  /**
   * Output only. Output Only. Backup Rule id fetched from backup plan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ruleId;

  /**
   * Output only. TODO b/341576760: Remove deprecated BV and Datasource field form BP and BPA once
   * UI removed all dependencies on them Output Only. Resource name of data source which will be
   * used as storage location for backups taken by specified rule. Format :
   * projects/{project}/locations/{location}/backupVaults/{backupvault}/dataSources/{datasource}
   * @return value or {@code null} for none
   */
  public java.lang.String getDataSource() {
    return dataSource;
  }

  /**
   * Output only. TODO b/341576760: Remove deprecated BV and Datasource field form BP and BPA once
   * UI removed all dependencies on them Output Only. Resource name of data source which will be
   * used as storage location for backups taken by specified rule. Format :
   * projects/{project}/locations/{location}/backupVaults/{backupvault}/dataSources/{datasource}
   * @param dataSource dataSource or {@code null} for none
   */
  public RuleConfigInfo setDataSource(java.lang.String dataSource) {
    this.dataSource = dataSource;
    return this;
  }

  /**
   * Output only. Output Only. google.rpc.Status object to store the last backup error.
   * @return value or {@code null} for none
   */
  public Status getLastBackupError() {
    return lastBackupError;
  }

  /**
   * Output only. Output Only. google.rpc.Status object to store the last backup error.
   * @param lastBackupError lastBackupError or {@code null} for none
   */
  public RuleConfigInfo setLastBackupError(Status lastBackupError) {
    this.lastBackupError = lastBackupError;
    return this;
  }

  /**
   * Output only. The last backup state for rule.
   * @return value or {@code null} for none
   */
  public java.lang.String getLastBackupState() {
    return lastBackupState;
  }

  /**
   * Output only. The last backup state for rule.
   * @param lastBackupState lastBackupState or {@code null} for none
   */
  public RuleConfigInfo setLastBackupState(java.lang.String lastBackupState) {
    this.lastBackupState = lastBackupState;
    return this;
  }

  /**
   * Output only. The point in time when the last successful backup was captured from the source.
   * @return value or {@code null} for none
   */
  public String getLastSuccessfulBackupConsistencyTime() {
    return lastSuccessfulBackupConsistencyTime;
  }

  /**
   * Output only. The point in time when the last successful backup was captured from the source.
   * @param lastSuccessfulBackupConsistencyTime lastSuccessfulBackupConsistencyTime or {@code null} for none
   */
  public RuleConfigInfo setLastSuccessfulBackupConsistencyTime(String lastSuccessfulBackupConsistencyTime) {
    this.lastSuccessfulBackupConsistencyTime = lastSuccessfulBackupConsistencyTime;
    return this;
  }

  /**
   * Output only. Output Only. Backup Rule id fetched from backup plan.
   * @return value or {@code null} for none
   */
  public java.lang.String getRuleId() {
    return ruleId;
  }

  /**
   * Output only. Output Only. Backup Rule id fetched from backup plan.
   * @param ruleId ruleId or {@code null} for none
   */
  public RuleConfigInfo setRuleId(java.lang.String ruleId) {
    this.ruleId = ruleId;
    return this;
  }

  @Override
  public RuleConfigInfo set(String fieldName, Object value) {
    return (RuleConfigInfo) super.set(fieldName, value);
  }

  @Override
  public RuleConfigInfo clone() {
    return (RuleConfigInfo) super.clone();
  }

}
