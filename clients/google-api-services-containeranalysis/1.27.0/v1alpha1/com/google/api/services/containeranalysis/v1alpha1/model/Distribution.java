/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.containeranalysis.v1alpha1.model;

/**
 * This represents a particular channel of distribution for a given package. e.g. Debian's jessie-
 * backports dpkg mirror
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Container Analysis API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Distribution extends com.google.api.client.json.GenericJson {

  /**
   * The CPU architecture for which packages in this distribution channel were built
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String architecture;

  /**
   * The cpe_uri in [cpe format](https://cpe.mitre.org/specification/) denoting the package manager
   * version distributing a package.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cpeUri;

  /**
   * The distribution channel-specific description of this package.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The latest available version of this package in this distribution channel.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Version latestVersion;

  /**
   * A freeform string denoting the maintainer of this package.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String maintainer;

  /**
   * The distribution channel-specific homepage for this package.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * The CPU architecture for which packages in this distribution channel were built
   * @return value or {@code null} for none
   */
  public java.lang.String getArchitecture() {
    return architecture;
  }

  /**
   * The CPU architecture for which packages in this distribution channel were built
   * @param architecture architecture or {@code null} for none
   */
  public Distribution setArchitecture(java.lang.String architecture) {
    this.architecture = architecture;
    return this;
  }

  /**
   * The cpe_uri in [cpe format](https://cpe.mitre.org/specification/) denoting the package manager
   * version distributing a package.
   * @return value or {@code null} for none
   */
  public java.lang.String getCpeUri() {
    return cpeUri;
  }

  /**
   * The cpe_uri in [cpe format](https://cpe.mitre.org/specification/) denoting the package manager
   * version distributing a package.
   * @param cpeUri cpeUri or {@code null} for none
   */
  public Distribution setCpeUri(java.lang.String cpeUri) {
    this.cpeUri = cpeUri;
    return this;
  }

  /**
   * The distribution channel-specific description of this package.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * The distribution channel-specific description of this package.
   * @param description description or {@code null} for none
   */
  public Distribution setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * The latest available version of this package in this distribution channel.
   * @return value or {@code null} for none
   */
  public Version getLatestVersion() {
    return latestVersion;
  }

  /**
   * The latest available version of this package in this distribution channel.
   * @param latestVersion latestVersion or {@code null} for none
   */
  public Distribution setLatestVersion(Version latestVersion) {
    this.latestVersion = latestVersion;
    return this;
  }

  /**
   * A freeform string denoting the maintainer of this package.
   * @return value or {@code null} for none
   */
  public java.lang.String getMaintainer() {
    return maintainer;
  }

  /**
   * A freeform string denoting the maintainer of this package.
   * @param maintainer maintainer or {@code null} for none
   */
  public Distribution setMaintainer(java.lang.String maintainer) {
    this.maintainer = maintainer;
    return this;
  }

  /**
   * The distribution channel-specific homepage for this package.
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * The distribution channel-specific homepage for this package.
   * @param url url or {@code null} for none
   */
  public Distribution setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  @Override
  public Distribution set(String fieldName, Object value) {
    return (Distribution) super.set(fieldName, value);
  }

  @Override
  public Distribution clone() {
    return (Distribution) super.clone();
  }

}
