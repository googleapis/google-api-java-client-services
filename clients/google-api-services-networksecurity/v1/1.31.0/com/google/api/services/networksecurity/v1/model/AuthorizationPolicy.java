/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networksecurity.v1.model;

/**
 * AuthorizationPolicy is a resource that specifies how a server should authorize incoming
 * connections. This resource in itself does not change the configuration unless it's attached to a
 * target https proxy or endpoint config selector resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Security API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AuthorizationPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Required. The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String action;

  /**
   * Output only. The timestamp when the resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Free-text description of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. Set of label tags associated with the AuthorizationPolicy resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. Name of the AuthorizationPolicy resource. It matches pattern
   * `projects/{project}/locations/{location}/authorizationPolicies/`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. List of rules to match. Note that at least one of the rules must match in order for
   * the action specified in the 'action' field to be taken. A rule is a match if there is a
   * matching source and destination. If left blank, the action specified in the `action` field will
   * be applied on every request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Rule> rules;

  /**
   * Output only. The timestamp when the resource was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
   * @return value or {@code null} for none
   */
  public java.lang.String getAction() {
    return action;
  }

  /**
   * Required. The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
   * @param action action or {@code null} for none
   */
  public AuthorizationPolicy setAction(java.lang.String action) {
    this.action = action;
    return this;
  }

  /**
   * Output only. The timestamp when the resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public AuthorizationPolicy setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Free-text description of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Free-text description of the resource.
   * @param description description or {@code null} for none
   */
  public AuthorizationPolicy setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Set of label tags associated with the AuthorizationPolicy resource.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Set of label tags associated with the AuthorizationPolicy resource.
   * @param labels labels or {@code null} for none
   */
  public AuthorizationPolicy setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. Name of the AuthorizationPolicy resource. It matches pattern
   * `projects/{project}/locations/{location}/authorizationPolicies/`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. Name of the AuthorizationPolicy resource. It matches pattern
   * `projects/{project}/locations/{location}/authorizationPolicies/`.
   * @param name name or {@code null} for none
   */
  public AuthorizationPolicy setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. List of rules to match. Note that at least one of the rules must match in order for
   * the action specified in the 'action' field to be taken. A rule is a match if there is a
   * matching source and destination. If left blank, the action specified in the `action` field will
   * be applied on every request.
   * @return value or {@code null} for none
   */
  public java.util.List<Rule> getRules() {
    return rules;
  }

  /**
   * Optional. List of rules to match. Note that at least one of the rules must match in order for
   * the action specified in the 'action' field to be taken. A rule is a match if there is a
   * matching source and destination. If left blank, the action specified in the `action` field will
   * be applied on every request.
   * @param rules rules or {@code null} for none
   */
  public AuthorizationPolicy setRules(java.util.List<Rule> rules) {
    this.rules = rules;
    return this;
  }

  /**
   * Output only. The timestamp when the resource was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the resource was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public AuthorizationPolicy setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public AuthorizationPolicy set(String fieldName, Object value) {
    return (AuthorizationPolicy) super.set(fieldName, value);
  }

  @Override
  public AuthorizationPolicy clone() {
    return (AuthorizationPolicy) super.clone();
  }

}
