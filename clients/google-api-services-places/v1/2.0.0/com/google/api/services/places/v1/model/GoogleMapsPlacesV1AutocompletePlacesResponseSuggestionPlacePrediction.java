/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Prediction results for a Place Autocomplete prediction.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction extends com.google.api.client.json.GenericJson {

  /**
   * The length of the geodesic in meters from `origin` if `origin` is specified. Certain
   * predictions such as routes may not populate this field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer distanceMeters;

  /**
   * The resource name of the suggested Place. This name can be used in other APIs that accept Place
   * names.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String place;

  /**
   * The unique identifier of the suggested Place. This identifier can be used in other APIs that
   * accept Place IDs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String placeId;

  /**
   * A breakdown of the Place prediction into main text containing the name of the Place and
   * secondary text containing additional disambiguating features (such as a city or region).
   * `structured_format` is recommended for developers who wish to show two separate, but related,
   * UI elements. Developers who wish to show a single UI element may want to use `text` instead.
   * They are two different ways to represent a Place prediction. Users should not try to parse
   * `structured_format` into `text` or vice versa.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat structuredFormat;

  /**
   * Contains the human-readable name for the returned result. For establishment results, this is
   * usually the business name and address. `text` is recommended for developers who wish to show a
   * single UI element. Developers who wish to show two separate, but related, UI elements may want
   * to use `structured_format` instead. They are two different ways to represent a Place
   * prediction. Users should not try to parse `structured_format` into `text` or vice versa. This
   * text may be different from the `display_name` returned by GetPlace. May be in mixed languages
   * if the request `input` and `language_code` are in different languages or if the Place does not
   * have a translation from the local language to `language_code`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText text;

  /**
   * List of types that apply to this Place from Table A or Table B in
   * https://developers.google.com/maps/documentation/places/web-service/place-types. A type is a
   * categorization of a Place. Places with shared types will share similar characteristics.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> types;

  /**
   * The length of the geodesic in meters from `origin` if `origin` is specified. Certain
   * predictions such as routes may not populate this field.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDistanceMeters() {
    return distanceMeters;
  }

  /**
   * The length of the geodesic in meters from `origin` if `origin` is specified. Certain
   * predictions such as routes may not populate this field.
   * @param distanceMeters distanceMeters or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction setDistanceMeters(java.lang.Integer distanceMeters) {
    this.distanceMeters = distanceMeters;
    return this;
  }

  /**
   * The resource name of the suggested Place. This name can be used in other APIs that accept Place
   * names.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlace() {
    return place;
  }

  /**
   * The resource name of the suggested Place. This name can be used in other APIs that accept Place
   * names.
   * @param place place or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction setPlace(java.lang.String place) {
    this.place = place;
    return this;
  }

  /**
   * The unique identifier of the suggested Place. This identifier can be used in other APIs that
   * accept Place IDs.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlaceId() {
    return placeId;
  }

  /**
   * The unique identifier of the suggested Place. This identifier can be used in other APIs that
   * accept Place IDs.
   * @param placeId placeId or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction setPlaceId(java.lang.String placeId) {
    this.placeId = placeId;
    return this;
  }

  /**
   * A breakdown of the Place prediction into main text containing the name of the Place and
   * secondary text containing additional disambiguating features (such as a city or region).
   * `structured_format` is recommended for developers who wish to show two separate, but related,
   * UI elements. Developers who wish to show a single UI element may want to use `text` instead.
   * They are two different ways to represent a Place prediction. Users should not try to parse
   * `structured_format` into `text` or vice versa.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat getStructuredFormat() {
    return structuredFormat;
  }

  /**
   * A breakdown of the Place prediction into main text containing the name of the Place and
   * secondary text containing additional disambiguating features (such as a city or region).
   * `structured_format` is recommended for developers who wish to show two separate, but related,
   * UI elements. Developers who wish to show a single UI element may want to use `text` instead.
   * They are two different ways to represent a Place prediction. Users should not try to parse
   * `structured_format` into `text` or vice versa.
   * @param structuredFormat structuredFormat or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction setStructuredFormat(GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat structuredFormat) {
    this.structuredFormat = structuredFormat;
    return this;
  }

  /**
   * Contains the human-readable name for the returned result. For establishment results, this is
   * usually the business name and address. `text` is recommended for developers who wish to show a
   * single UI element. Developers who wish to show two separate, but related, UI elements may want
   * to use `structured_format` instead. They are two different ways to represent a Place
   * prediction. Users should not try to parse `structured_format` into `text` or vice versa. This
   * text may be different from the `display_name` returned by GetPlace. May be in mixed languages
   * if the request `input` and `language_code` are in different languages or if the Place does not
   * have a translation from the local language to `language_code`.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText getText() {
    return text;
  }

  /**
   * Contains the human-readable name for the returned result. For establishment results, this is
   * usually the business name and address. `text` is recommended for developers who wish to show a
   * single UI element. Developers who wish to show two separate, but related, UI elements may want
   * to use `structured_format` instead. They are two different ways to represent a Place
   * prediction. Users should not try to parse `structured_format` into `text` or vice versa. This
   * text may be different from the `display_name` returned by GetPlace. May be in mixed languages
   * if the request `input` and `language_code` are in different languages or if the Place does not
   * have a translation from the local language to `language_code`.
   * @param text text or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction setText(GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText text) {
    this.text = text;
    return this;
  }

  /**
   * List of types that apply to this Place from Table A or Table B in
   * https://developers.google.com/maps/documentation/places/web-service/place-types. A type is a
   * categorization of a Place. Places with shared types will share similar characteristics.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTypes() {
    return types;
  }

  /**
   * List of types that apply to this Place from Table A or Table B in
   * https://developers.google.com/maps/documentation/places/web-service/place-types. A type is a
   * categorization of a Place. Places with shared types will share similar characteristics.
   * @param types types or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction setTypes(java.util.List<java.lang.String> types) {
    this.types = types;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction clone() {
    return (GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionPlacePrediction) super.clone();
  }

}
