/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Depending on which Data Acquisition API the client uses, the fetched content can be delivered to
 * the client in the RPC, via Goops, or copied to the client's storage system (possibly after
 * transformation). In the latter case, DeliveryReport will contain info about the delivery status,
 * such as whether we have permission error, whether the destination storage is out of quota, etc).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TrawlerFetchReplyDataDeliveryReport extends com.google.api.client.json.GenericJson {

  /**
   * The events store the detail of messages (usually error).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TrawlerEvent> events;

  static {
    // hack to force ProGuard to consider TrawlerEvent used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(TrawlerEvent.class);
  }

  /**
   * The complete path (include the file name) of the file downloaded. For requests that require
   * delivery, this path will be the user specified location. For requests that use Multiverse
   * default storage, this path will be the managed by Multiverse.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filePath;

  /**
   * Status of the transfer action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * The events store the detail of messages (usually error).
   * @return value or {@code null} for none
   */
  public java.util.List<TrawlerEvent> getEvents() {
    return events;
  }

  /**
   * The events store the detail of messages (usually error).
   * @param events events or {@code null} for none
   */
  public TrawlerFetchReplyDataDeliveryReport setEvents(java.util.List<TrawlerEvent> events) {
    this.events = events;
    return this;
  }

  /**
   * The complete path (include the file name) of the file downloaded. For requests that require
   * delivery, this path will be the user specified location. For requests that use Multiverse
   * default storage, this path will be the managed by Multiverse.
   * @return value or {@code null} for none
   */
  public java.lang.String getFilePath() {
    return filePath;
  }

  /**
   * The complete path (include the file name) of the file downloaded. For requests that require
   * delivery, this path will be the user specified location. For requests that use Multiverse
   * default storage, this path will be the managed by Multiverse.
   * @param filePath filePath or {@code null} for none
   */
  public TrawlerFetchReplyDataDeliveryReport setFilePath(java.lang.String filePath) {
    this.filePath = filePath;
    return this;
  }

  /**
   * Status of the transfer action.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Status of the transfer action.
   * @param status status or {@code null} for none
   */
  public TrawlerFetchReplyDataDeliveryReport setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  @Override
  public TrawlerFetchReplyDataDeliveryReport set(String fieldName, Object value) {
    return (TrawlerFetchReplyDataDeliveryReport) super.set(fieldName, value);
  }

  @Override
  public TrawlerFetchReplyDataDeliveryReport clone() {
    return (TrawlerFetchReplyDataDeliveryReport) super.clone();
  }

}
