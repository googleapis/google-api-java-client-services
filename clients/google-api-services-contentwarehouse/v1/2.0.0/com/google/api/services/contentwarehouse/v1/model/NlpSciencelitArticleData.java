/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A copy of the text of an article along with references to internal figures and external
 * citations, datasets, etc. Next available ID: 19
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSciencelitArticleData extends com.google.api.client.json.GenericJson {

  /**
   * All the text in this article, separated into Sections and Paragraphs. See
   * nlp_sciencelit.ScaleSetExtensions for the extensions to ScaleSet used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlxDataSchemaScaleSet analyzedText;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSciencelitArticleId> articleId;

  /**
   * All references from this article (Bibliography).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSciencelitCitationData> citation;

  /**
   * The result of selecting the earliest date from various metadata (PMC, PubMed Metadata, scholar
   * citations).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String earliestPubDate;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSciencelitArticleMetadata metadata;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long nonAbstractWordCount;

  /**
   * Path of the source document from which this was parsed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parsedFrom;

  /**
   * All dates from the PMC article metadata Year/Mon/Day.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSciencelitPubDate> pubDate;

  /**
   * All figure captions within this article.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSciencelitReferencedBlock> referencedBlock;

  /**
   * Citation for this article.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ScienceCitation scholarCitation;

  /**
   * DocJoins with full text article.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CompositeDoc> scholarDocument;

  static {
    // hack to force ProGuard to consider CompositeDoc used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(CompositeDoc.class);
  }

  /**
   * May also add the Scholar index signal information:
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ScienceIndexSignal scholarSignal;

  /**
   * Source of this article data (e.g., PubMed, scholar index, other source.).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String source;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Number of words in the entire article and everywhere outside of abstract sections.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long wordCount;

  /**
   * All the text in this article, separated into Sections and Paragraphs. See
   * nlp_sciencelit.ScaleSetExtensions for the extensions to ScaleSet used.
   * @return value or {@code null} for none
   */
  public NlxDataSchemaScaleSet getAnalyzedText() {
    return analyzedText;
  }

  /**
   * All the text in this article, separated into Sections and Paragraphs. See
   * nlp_sciencelit.ScaleSetExtensions for the extensions to ScaleSet used.
   * @param analyzedText analyzedText or {@code null} for none
   */
  public NlpSciencelitArticleData setAnalyzedText(NlxDataSchemaScaleSet analyzedText) {
    this.analyzedText = analyzedText;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSciencelitArticleId> getArticleId() {
    return articleId;
  }

  /**
   * @param articleId articleId or {@code null} for none
   */
  public NlpSciencelitArticleData setArticleId(java.util.List<NlpSciencelitArticleId> articleId) {
    this.articleId = articleId;
    return this;
  }

  /**
   * All references from this article (Bibliography).
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSciencelitCitationData> getCitation() {
    return citation;
  }

  /**
   * All references from this article (Bibliography).
   * @param citation citation or {@code null} for none
   */
  public NlpSciencelitArticleData setCitation(java.util.List<NlpSciencelitCitationData> citation) {
    this.citation = citation;
    return this;
  }

  /**
   * The result of selecting the earliest date from various metadata (PMC, PubMed Metadata, scholar
   * citations).
   * @return value or {@code null} for none
   */
  public java.lang.String getEarliestPubDate() {
    return earliestPubDate;
  }

  /**
   * The result of selecting the earliest date from various metadata (PMC, PubMed Metadata, scholar
   * citations).
   * @param earliestPubDate earliestPubDate or {@code null} for none
   */
  public NlpSciencelitArticleData setEarliestPubDate(java.lang.String earliestPubDate) {
    this.earliestPubDate = earliestPubDate;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public NlpSciencelitArticleMetadata getMetadata() {
    return metadata;
  }

  /**
   * @param metadata metadata or {@code null} for none
   */
  public NlpSciencelitArticleData setMetadata(NlpSciencelitArticleMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getNonAbstractWordCount() {
    return nonAbstractWordCount;
  }

  /**
   * @param nonAbstractWordCount nonAbstractWordCount or {@code null} for none
   */
  public NlpSciencelitArticleData setNonAbstractWordCount(java.lang.Long nonAbstractWordCount) {
    this.nonAbstractWordCount = nonAbstractWordCount;
    return this;
  }

  /**
   * Path of the source document from which this was parsed.
   * @return value or {@code null} for none
   */
  public java.lang.String getParsedFrom() {
    return parsedFrom;
  }

  /**
   * Path of the source document from which this was parsed.
   * @param parsedFrom parsedFrom or {@code null} for none
   */
  public NlpSciencelitArticleData setParsedFrom(java.lang.String parsedFrom) {
    this.parsedFrom = parsedFrom;
    return this;
  }

  /**
   * All dates from the PMC article metadata Year/Mon/Day.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSciencelitPubDate> getPubDate() {
    return pubDate;
  }

  /**
   * All dates from the PMC article metadata Year/Mon/Day.
   * @param pubDate pubDate or {@code null} for none
   */
  public NlpSciencelitArticleData setPubDate(java.util.List<NlpSciencelitPubDate> pubDate) {
    this.pubDate = pubDate;
    return this;
  }

  /**
   * All figure captions within this article.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSciencelitReferencedBlock> getReferencedBlock() {
    return referencedBlock;
  }

  /**
   * All figure captions within this article.
   * @param referencedBlock referencedBlock or {@code null} for none
   */
  public NlpSciencelitArticleData setReferencedBlock(java.util.List<NlpSciencelitReferencedBlock> referencedBlock) {
    this.referencedBlock = referencedBlock;
    return this;
  }

  /**
   * Citation for this article.
   * @return value or {@code null} for none
   */
  public ScienceCitation getScholarCitation() {
    return scholarCitation;
  }

  /**
   * Citation for this article.
   * @param scholarCitation scholarCitation or {@code null} for none
   */
  public NlpSciencelitArticleData setScholarCitation(ScienceCitation scholarCitation) {
    this.scholarCitation = scholarCitation;
    return this;
  }

  /**
   * DocJoins with full text article.
   * @return value or {@code null} for none
   */
  public java.util.List<CompositeDoc> getScholarDocument() {
    return scholarDocument;
  }

  /**
   * DocJoins with full text article.
   * @param scholarDocument scholarDocument or {@code null} for none
   */
  public NlpSciencelitArticleData setScholarDocument(java.util.List<CompositeDoc> scholarDocument) {
    this.scholarDocument = scholarDocument;
    return this;
  }

  /**
   * May also add the Scholar index signal information:
   * @return value or {@code null} for none
   */
  public ScienceIndexSignal getScholarSignal() {
    return scholarSignal;
  }

  /**
   * May also add the Scholar index signal information:
   * @param scholarSignal scholarSignal or {@code null} for none
   */
  public NlpSciencelitArticleData setScholarSignal(ScienceIndexSignal scholarSignal) {
    this.scholarSignal = scholarSignal;
    return this;
  }

  /**
   * Source of this article data (e.g., PubMed, scholar index, other source.).
   * @return value or {@code null} for none
   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * Source of this article data (e.g., PubMed, scholar index, other source.).
   * @param source source or {@code null} for none
   */
  public NlpSciencelitArticleData setSource(java.lang.String source) {
    this.source = source;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * @param title title or {@code null} for none
   */
  public NlpSciencelitArticleData setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Number of words in the entire article and everywhere outside of abstract sections.
   * @return value or {@code null} for none
   */
  public java.lang.Long getWordCount() {
    return wordCount;
  }

  /**
   * Number of words in the entire article and everywhere outside of abstract sections.
   * @param wordCount wordCount or {@code null} for none
   */
  public NlpSciencelitArticleData setWordCount(java.lang.Long wordCount) {
    this.wordCount = wordCount;
    return this;
  }

  @Override
  public NlpSciencelitArticleData set(String fieldName, Object value) {
    return (NlpSciencelitArticleData) super.set(fieldName, value);
  }

  @Override
  public NlpSciencelitArticleData clone() {
    return (NlpSciencelitArticleData) super.clone();
  }

}
