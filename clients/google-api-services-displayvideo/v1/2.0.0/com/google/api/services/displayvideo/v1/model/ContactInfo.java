/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.displayvideo.v1.model;

/**
 * Contact information defining a Customer Match audience member.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Display & Video 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ContactInfo extends com.google.api.client.json.GenericJson {

  /**
   * Country code of the member. Must also be set with the following fields: * hashed_first_name *
   * hashed_last_name * zip_codes
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String countryCode;

  /**
   * A list of SHA256 hashed email of the member. Before hashing, remove all whitespace and make
   * sure the string is all lowercase.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> hashedEmails;

  /**
   * SHA256 hashed first name of the member. Before hashing, remove all whitespace and make sure the
   * string is all lowercase. Must also be set with the following fields: * country_code *
   * hashed_last_name * zip_codes
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hashedFirstName;

  /**
   * SHA256 hashed last name of the member. Before hashing, remove all whitespace and make sure the
   * string is all lowercase. Must also be set with the following fields: * country_code *
   * hashed_first_name * zip_codes
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hashedLastName;

  /**
   * A list of SHA256 hashed phone numbers of the member. Before hashing, all phone numbers must be
   * formatted using the [E.164 format](//en.wikipedia.org/wiki/E.164) and include the country
   * calling code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> hashedPhoneNumbers;

  /**
   * A list of zip codes of the member. Must also be set with the following fields: * country_code *
   * hashed_first_name * hashed_last_name
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> zipCodes;

  /**
   * Country code of the member. Must also be set with the following fields: * hashed_first_name *
   * hashed_last_name * zip_codes
   * @return value or {@code null} for none
   */
  public java.lang.String getCountryCode() {
    return countryCode;
  }

  /**
   * Country code of the member. Must also be set with the following fields: * hashed_first_name *
   * hashed_last_name * zip_codes
   * @param countryCode countryCode or {@code null} for none
   */
  public ContactInfo setCountryCode(java.lang.String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * A list of SHA256 hashed email of the member. Before hashing, remove all whitespace and make
   * sure the string is all lowercase.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getHashedEmails() {
    return hashedEmails;
  }

  /**
   * A list of SHA256 hashed email of the member. Before hashing, remove all whitespace and make
   * sure the string is all lowercase.
   * @param hashedEmails hashedEmails or {@code null} for none
   */
  public ContactInfo setHashedEmails(java.util.List<java.lang.String> hashedEmails) {
    this.hashedEmails = hashedEmails;
    return this;
  }

  /**
   * SHA256 hashed first name of the member. Before hashing, remove all whitespace and make sure the
   * string is all lowercase. Must also be set with the following fields: * country_code *
   * hashed_last_name * zip_codes
   * @return value or {@code null} for none
   */
  public java.lang.String getHashedFirstName() {
    return hashedFirstName;
  }

  /**
   * SHA256 hashed first name of the member. Before hashing, remove all whitespace and make sure the
   * string is all lowercase. Must also be set with the following fields: * country_code *
   * hashed_last_name * zip_codes
   * @param hashedFirstName hashedFirstName or {@code null} for none
   */
  public ContactInfo setHashedFirstName(java.lang.String hashedFirstName) {
    this.hashedFirstName = hashedFirstName;
    return this;
  }

  /**
   * SHA256 hashed last name of the member. Before hashing, remove all whitespace and make sure the
   * string is all lowercase. Must also be set with the following fields: * country_code *
   * hashed_first_name * zip_codes
   * @return value or {@code null} for none
   */
  public java.lang.String getHashedLastName() {
    return hashedLastName;
  }

  /**
   * SHA256 hashed last name of the member. Before hashing, remove all whitespace and make sure the
   * string is all lowercase. Must also be set with the following fields: * country_code *
   * hashed_first_name * zip_codes
   * @param hashedLastName hashedLastName or {@code null} for none
   */
  public ContactInfo setHashedLastName(java.lang.String hashedLastName) {
    this.hashedLastName = hashedLastName;
    return this;
  }

  /**
   * A list of SHA256 hashed phone numbers of the member. Before hashing, all phone numbers must be
   * formatted using the [E.164 format](//en.wikipedia.org/wiki/E.164) and include the country
   * calling code.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getHashedPhoneNumbers() {
    return hashedPhoneNumbers;
  }

  /**
   * A list of SHA256 hashed phone numbers of the member. Before hashing, all phone numbers must be
   * formatted using the [E.164 format](//en.wikipedia.org/wiki/E.164) and include the country
   * calling code.
   * @param hashedPhoneNumbers hashedPhoneNumbers or {@code null} for none
   */
  public ContactInfo setHashedPhoneNumbers(java.util.List<java.lang.String> hashedPhoneNumbers) {
    this.hashedPhoneNumbers = hashedPhoneNumbers;
    return this;
  }

  /**
   * A list of zip codes of the member. Must also be set with the following fields: * country_code *
   * hashed_first_name * hashed_last_name
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getZipCodes() {
    return zipCodes;
  }

  /**
   * A list of zip codes of the member. Must also be set with the following fields: * country_code *
   * hashed_first_name * hashed_last_name
   * @param zipCodes zipCodes or {@code null} for none
   */
  public ContactInfo setZipCodes(java.util.List<java.lang.String> zipCodes) {
    this.zipCodes = zipCodes;
    return this;
  }

  @Override
  public ContactInfo set(String fieldName, Object value) {
    return (ContactInfo) super.set(fieldName, value);
  }

  @Override
  public ContactInfo clone() {
    return (ContactInfo) super.clone();
  }

}
