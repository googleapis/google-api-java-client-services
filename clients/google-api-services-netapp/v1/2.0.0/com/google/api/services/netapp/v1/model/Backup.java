/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.netapp.v1.model;

/**
 * A NetApp Backup.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the NetApp API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Backup extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Type of backup, manually created or created by a backup policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupType;

  /**
   * Output only. Total size of all backups in a chain in bytes = baseline backup size +
   * sum(incremental backup size)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long chainStorageBytes;

  /**
   * Output only. The time when the backup was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * A description of the backup with 2048 characters or less. Requests with longer descriptions
   * will be rejected.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Resource labels to represent user provided metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. The resource name of the backup. Format: `projects/{project_id}/locations/{location
   * }/backupVaults/{backup_vault_id}/backups/{backup_id}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Reserved for future use
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzi;

  /**
   * Output only. Reserved for future use
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzs;

  /**
   * If specified, backup will be created from the given snapshot. If not specified, there will be a
   * new snapshot taken to initiate the backup creation. Format:
   * `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceSnapshot;

  /**
   * Volume full name of this backup belongs to. Format:
   * `projects/{projects_id}/locations/{location}/volumes/{volume_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceVolume;

  /**
   * Output only. The backup state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Size of the file system when the backup was created. When creating a new volume
   * from the backup, the volume capacity will have to be at least as big.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long volumeUsageBytes;

  /**
   * Output only. Type of backup, manually created or created by a backup policy.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupType() {
    return backupType;
  }

  /**
   * Output only. Type of backup, manually created or created by a backup policy.
   * @param backupType backupType or {@code null} for none
   */
  public Backup setBackupType(java.lang.String backupType) {
    this.backupType = backupType;
    return this;
  }

  /**
   * Output only. Total size of all backups in a chain in bytes = baseline backup size +
   * sum(incremental backup size)
   * @return value or {@code null} for none
   */
  public java.lang.Long getChainStorageBytes() {
    return chainStorageBytes;
  }

  /**
   * Output only. Total size of all backups in a chain in bytes = baseline backup size +
   * sum(incremental backup size)
   * @param chainStorageBytes chainStorageBytes or {@code null} for none
   */
  public Backup setChainStorageBytes(java.lang.Long chainStorageBytes) {
    this.chainStorageBytes = chainStorageBytes;
    return this;
  }

  /**
   * Output only. The time when the backup was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the backup was created.
   * @param createTime createTime or {@code null} for none
   */
  public Backup setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * A description of the backup with 2048 characters or less. Requests with longer descriptions
   * will be rejected.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A description of the backup with 2048 characters or less. Requests with longer descriptions
   * will be rejected.
   * @param description description or {@code null} for none
   */
  public Backup setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Resource labels to represent user provided metadata.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Resource labels to represent user provided metadata.
   * @param labels labels or {@code null} for none
   */
  public Backup setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. The resource name of the backup. Format: `projects/{project_id}/locations/{location
   * }/backupVaults/{backup_vault_id}/backups/{backup_id}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the backup. Format: `projects/{project_id}/locations/{location
   * }/backupVaults/{backup_vault_id}/backups/{backup_id}`.
   * @param name name or {@code null} for none
   */
  public Backup setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Reserved for future use
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzi() {
    return satisfiesPzi;
  }

  /**
   * Output only. Reserved for future use
   * @param satisfiesPzi satisfiesPzi or {@code null} for none
   */
  public Backup setSatisfiesPzi(java.lang.Boolean satisfiesPzi) {
    this.satisfiesPzi = satisfiesPzi;
    return this;
  }

  /**
   * Output only. Reserved for future use
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }

  /**
   * Output only. Reserved for future use
   * @param satisfiesPzs satisfiesPzs or {@code null} for none
   */
  public Backup setSatisfiesPzs(java.lang.Boolean satisfiesPzs) {
    this.satisfiesPzs = satisfiesPzs;
    return this;
  }

  /**
   * If specified, backup will be created from the given snapshot. If not specified, there will be a
   * new snapshot taken to initiate the backup creation. Format:
   * `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceSnapshot() {
    return sourceSnapshot;
  }

  /**
   * If specified, backup will be created from the given snapshot. If not specified, there will be a
   * new snapshot taken to initiate the backup creation. Format:
   * `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`
   * @param sourceSnapshot sourceSnapshot or {@code null} for none
   */
  public Backup setSourceSnapshot(java.lang.String sourceSnapshot) {
    this.sourceSnapshot = sourceSnapshot;
    return this;
  }

  /**
   * Volume full name of this backup belongs to. Format:
   * `projects/{projects_id}/locations/{location}/volumes/{volume_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceVolume() {
    return sourceVolume;
  }

  /**
   * Volume full name of this backup belongs to. Format:
   * `projects/{projects_id}/locations/{location}/volumes/{volume_id}`
   * @param sourceVolume sourceVolume or {@code null} for none
   */
  public Backup setSourceVolume(java.lang.String sourceVolume) {
    this.sourceVolume = sourceVolume;
    return this;
  }

  /**
   * Output only. The backup state.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The backup state.
   * @param state state or {@code null} for none
   */
  public Backup setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Size of the file system when the backup was created. When creating a new volume
   * from the backup, the volume capacity will have to be at least as big.
   * @return value or {@code null} for none
   */
  public java.lang.Long getVolumeUsageBytes() {
    return volumeUsageBytes;
  }

  /**
   * Output only. Size of the file system when the backup was created. When creating a new volume
   * from the backup, the volume capacity will have to be at least as big.
   * @param volumeUsageBytes volumeUsageBytes or {@code null} for none
   */
  public Backup setVolumeUsageBytes(java.lang.Long volumeUsageBytes) {
    this.volumeUsageBytes = volumeUsageBytes;
    return this;
  }

  @Override
  public Backup set(String fieldName, Object value) {
    return (Backup) super.set(fieldName, value);
  }

  @Override
  public Backup clone() {
    return (Backup) super.clone();
  }

}
