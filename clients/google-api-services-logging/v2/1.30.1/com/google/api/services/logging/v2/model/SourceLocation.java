/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.logging.v2.model;

/**
 * Specifies a location in a source code file.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Stackdriver Logging API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SourceLocation extends com.google.api.client.json.GenericJson {

  /**
   * Source file name. Depending on the runtime environment, this might be a simple name or a fully-
   * qualified name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String file;

  /**
   * Human-readable name of the function or method being invoked, with optional context such as the
   * class or package name. This information is used in contexts such as the logs viewer, where a
   * file and line number are less meaningful. The format can vary by language. For example:
   * qual.if.ied.Class.method (Java), dir/package.func (Go), function (Python).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String functionName;

  /**
   * Line within the source file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long line;

  /**
   * Source file name. Depending on the runtime environment, this might be a simple name or a fully-
   * qualified name.
   * @return value or {@code null} for none
   */
  public java.lang.String getFile() {
    return file;
  }

  /**
   * Source file name. Depending on the runtime environment, this might be a simple name or a fully-
   * qualified name.
   * @param file file or {@code null} for none
   */
  public SourceLocation setFile(java.lang.String file) {
    this.file = file;
    return this;
  }

  /**
   * Human-readable name of the function or method being invoked, with optional context such as the
   * class or package name. This information is used in contexts such as the logs viewer, where a
   * file and line number are less meaningful. The format can vary by language. For example:
   * qual.if.ied.Class.method (Java), dir/package.func (Go), function (Python).
   * @return value or {@code null} for none
   */
  public java.lang.String getFunctionName() {
    return functionName;
  }

  /**
   * Human-readable name of the function or method being invoked, with optional context such as the
   * class or package name. This information is used in contexts such as the logs viewer, where a
   * file and line number are less meaningful. The format can vary by language. For example:
   * qual.if.ied.Class.method (Java), dir/package.func (Go), function (Python).
   * @param functionName functionName or {@code null} for none
   */
  public SourceLocation setFunctionName(java.lang.String functionName) {
    this.functionName = functionName;
    return this;
  }

  /**
   * Line within the source file.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLine() {
    return line;
  }

  /**
   * Line within the source file.
   * @param line line or {@code null} for none
   */
  public SourceLocation setLine(java.lang.Long line) {
    this.line = line;
    return this;
  }

  @Override
  public SourceLocation set(String fieldName, Object value) {
    return (SourceLocation) super.set(fieldName, value);
  }

  @Override
  public SourceLocation clone() {
    return (SourceLocation) super.clone();
  }

}
