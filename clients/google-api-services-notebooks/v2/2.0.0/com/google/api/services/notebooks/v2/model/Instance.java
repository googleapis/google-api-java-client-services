/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.notebooks.v2.model;

/**
 * The definition of a notebook instance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Notebooks API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Instance extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Instance creation time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Email address of entity that sent original CreateInstance request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String creator;

  /**
   * Optional. If true, the notebook instance will not register with the proxy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disableProxyAccess;

  /**
   * Optional. Flag that specifies that a notebook can be accessed with third party identity
   * provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableThirdPartyIdentity;

  /**
   * Optional. Compute Engine setup for the notebook. Uses notebook-defined fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GceSetup gceSetup;

  /**
   * Output only. Additional information about instance health. Example: healthInfo": {
   * "docker_proxy_agent_status": "1", "docker_status": "1", "jupyterlab_api_status": "-1",
   * "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409" }
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> healthInfo;

  /**
   * Output only. Instance health_state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String healthState;

  /**
   * Output only. Unique ID of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Optional. Input only. The owner of this instance after creation. Format: `alias@example.com`
   * Currently supports one owner only. If not specified, all of the service account users of your
   * VM instance's service account can use the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> instanceOwners;

  /**
   * Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance
   * method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The name of this notebook instance. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The proxy endpoint that is used to access the Jupyter notebook.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String proxyUri;

  /**
   * Output only. Reserved for future use for Zone Isolation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzi;

  /**
   * Output only. Reserved for future use for Zone Separation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzs;

  /**
   * Output only. The state of this instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The workforce pools proxy endpoint that is used to access the Jupyter notebook.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String thirdPartyProxyUrl;

  /**
   * Output only. Instance update time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The upgrade history of this instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<UpgradeHistoryEntry> upgradeHistory;

  /**
   * Output only. Instance creation time.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Instance creation time.
   * @param createTime createTime or {@code null} for none
   */
  public Instance setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Email address of entity that sent original CreateInstance request.
   * @return value or {@code null} for none
   */
  public java.lang.String getCreator() {
    return creator;
  }

  /**
   * Output only. Email address of entity that sent original CreateInstance request.
   * @param creator creator or {@code null} for none
   */
  public Instance setCreator(java.lang.String creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Optional. If true, the notebook instance will not register with the proxy.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisableProxyAccess() {
    return disableProxyAccess;
  }

  /**
   * Optional. If true, the notebook instance will not register with the proxy.
   * @param disableProxyAccess disableProxyAccess or {@code null} for none
   */
  public Instance setDisableProxyAccess(java.lang.Boolean disableProxyAccess) {
    this.disableProxyAccess = disableProxyAccess;
    return this;
  }

  /**
   * Optional. Flag that specifies that a notebook can be accessed with third party identity
   * provider.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableThirdPartyIdentity() {
    return enableThirdPartyIdentity;
  }

  /**
   * Optional. Flag that specifies that a notebook can be accessed with third party identity
   * provider.
   * @param enableThirdPartyIdentity enableThirdPartyIdentity or {@code null} for none
   */
  public Instance setEnableThirdPartyIdentity(java.lang.Boolean enableThirdPartyIdentity) {
    this.enableThirdPartyIdentity = enableThirdPartyIdentity;
    return this;
  }

  /**
   * Optional. Compute Engine setup for the notebook. Uses notebook-defined fields.
   * @return value or {@code null} for none
   */
  public GceSetup getGceSetup() {
    return gceSetup;
  }

  /**
   * Optional. Compute Engine setup for the notebook. Uses notebook-defined fields.
   * @param gceSetup gceSetup or {@code null} for none
   */
  public Instance setGceSetup(GceSetup gceSetup) {
    this.gceSetup = gceSetup;
    return this;
  }

  /**
   * Output only. Additional information about instance health. Example: healthInfo": {
   * "docker_proxy_agent_status": "1", "docker_status": "1", "jupyterlab_api_status": "-1",
   * "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409" }
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getHealthInfo() {
    return healthInfo;
  }

  /**
   * Output only. Additional information about instance health. Example: healthInfo": {
   * "docker_proxy_agent_status": "1", "docker_status": "1", "jupyterlab_api_status": "-1",
   * "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409" }
   * @param healthInfo healthInfo or {@code null} for none
   */
  public Instance setHealthInfo(java.util.Map<String, java.lang.String> healthInfo) {
    this.healthInfo = healthInfo;
    return this;
  }

  /**
   * Output only. Instance health_state.
   * @return value or {@code null} for none
   */
  public java.lang.String getHealthState() {
    return healthState;
  }

  /**
   * Output only. Instance health_state.
   * @param healthState healthState or {@code null} for none
   */
  public Instance setHealthState(java.lang.String healthState) {
    this.healthState = healthState;
    return this;
  }

  /**
   * Output only. Unique ID of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Output only. Unique ID of the resource.
   * @param id id or {@code null} for none
   */
  public Instance setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Optional. Input only. The owner of this instance after creation. Format: `alias@example.com`
   * Currently supports one owner only. If not specified, all of the service account users of your
   * VM instance's service account can use the instance.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getInstanceOwners() {
    return instanceOwners;
  }

  /**
   * Optional. Input only. The owner of this instance after creation. Format: `alias@example.com`
   * Currently supports one owner only. If not specified, all of the service account users of your
   * VM instance's service account can use the instance.
   * @param instanceOwners instanceOwners or {@code null} for none
   */
  public Instance setInstanceOwners(java.util.List<java.lang.String> instanceOwners) {
    this.instanceOwners = instanceOwners;
    return this;
  }

  /**
   * Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance
   * method.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance
   * method.
   * @param labels labels or {@code null} for none
   */
  public Instance setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The name of this notebook instance. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The name of this notebook instance. Format:
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   * @param name name or {@code null} for none
   */
  public Instance setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The proxy endpoint that is used to access the Jupyter notebook.
   * @return value or {@code null} for none
   */
  public java.lang.String getProxyUri() {
    return proxyUri;
  }

  /**
   * Output only. The proxy endpoint that is used to access the Jupyter notebook.
   * @param proxyUri proxyUri or {@code null} for none
   */
  public Instance setProxyUri(java.lang.String proxyUri) {
    this.proxyUri = proxyUri;
    return this;
  }

  /**
   * Output only. Reserved for future use for Zone Isolation.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzi() {
    return satisfiesPzi;
  }

  /**
   * Output only. Reserved for future use for Zone Isolation.
   * @param satisfiesPzi satisfiesPzi or {@code null} for none
   */
  public Instance setSatisfiesPzi(java.lang.Boolean satisfiesPzi) {
    this.satisfiesPzi = satisfiesPzi;
    return this;
  }

  /**
   * Output only. Reserved for future use for Zone Separation.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }

  /**
   * Output only. Reserved for future use for Zone Separation.
   * @param satisfiesPzs satisfiesPzs or {@code null} for none
   */
  public Instance setSatisfiesPzs(java.lang.Boolean satisfiesPzs) {
    this.satisfiesPzs = satisfiesPzs;
    return this;
  }

  /**
   * Output only. The state of this instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The state of this instance.
   * @param state state or {@code null} for none
   */
  public Instance setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The workforce pools proxy endpoint that is used to access the Jupyter notebook.
   * @return value or {@code null} for none
   */
  public java.lang.String getThirdPartyProxyUrl() {
    return thirdPartyProxyUrl;
  }

  /**
   * Output only. The workforce pools proxy endpoint that is used to access the Jupyter notebook.
   * @param thirdPartyProxyUrl thirdPartyProxyUrl or {@code null} for none
   */
  public Instance setThirdPartyProxyUrl(java.lang.String thirdPartyProxyUrl) {
    this.thirdPartyProxyUrl = thirdPartyProxyUrl;
    return this;
  }

  /**
   * Output only. Instance update time.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Instance update time.
   * @param updateTime updateTime or {@code null} for none
   */
  public Instance setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. The upgrade history of this instance.
   * @return value or {@code null} for none
   */
  public java.util.List<UpgradeHistoryEntry> getUpgradeHistory() {
    return upgradeHistory;
  }

  /**
   * Output only. The upgrade history of this instance.
   * @param upgradeHistory upgradeHistory or {@code null} for none
   */
  public Instance setUpgradeHistory(java.util.List<UpgradeHistoryEntry> upgradeHistory) {
    this.upgradeHistory = upgradeHistory;
    return this;
  }

  @Override
  public Instance set(String fieldName, Object value) {
    return (Instance) super.set(fieldName, value);
  }

  @Override
  public Instance clone() {
    return (Instance) super.clone();
  }

}
