/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.healthcare.v1beta1.model;

/**
 * Specifies how to handle the de-identification of a FHIR store.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Healthcare API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FhirFieldConfig extends com.google.api.client.json.GenericJson {

  /**
   * Specifies FHIR paths to match and how to transform them. Any field that is not matched by a
   * `FieldMetadata` is passed through to the output dataset unmodified. All extensions will be
   * processed according to `keep_extensions`. If a field can be matched by more than one
   * `FieldMetadata`, the first `FieldMetadata.Action` is applied. Overrides `options` and
   * `profile`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata> fieldMetadataList;

  /**
   * Specifies additional options, overriding the base `profile`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudHealthcareV1beta1DeidentifyOptions options;

  /**
   * Base profile type for handling FHIR fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String profileType;

  /**
   * Specifies FHIR paths to match and how to transform them. Any field that is not matched by a
   * `FieldMetadata` is passed through to the output dataset unmodified. All extensions will be
   * processed according to `keep_extensions`. If a field can be matched by more than one
   * `FieldMetadata`, the first `FieldMetadata.Action` is applied. Overrides `options` and
   * `profile`.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata> getFieldMetadataList() {
    return fieldMetadataList;
  }

  /**
   * Specifies FHIR paths to match and how to transform them. Any field that is not matched by a
   * `FieldMetadata` is passed through to the output dataset unmodified. All extensions will be
   * processed according to `keep_extensions`. If a field can be matched by more than one
   * `FieldMetadata`, the first `FieldMetadata.Action` is applied. Overrides `options` and
   * `profile`.
   * @param fieldMetadataList fieldMetadataList or {@code null} for none
   */
  public FhirFieldConfig setFieldMetadataList(java.util.List<GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata> fieldMetadataList) {
    this.fieldMetadataList = fieldMetadataList;
    return this;
  }

  /**
   * Specifies additional options, overriding the base `profile`.
   * @return value or {@code null} for none
   */
  public GoogleCloudHealthcareV1beta1DeidentifyOptions getOptions() {
    return options;
  }

  /**
   * Specifies additional options, overriding the base `profile`.
   * @param options options or {@code null} for none
   */
  public FhirFieldConfig setOptions(GoogleCloudHealthcareV1beta1DeidentifyOptions options) {
    this.options = options;
    return this;
  }

  /**
   * Base profile type for handling FHIR fields.
   * @return value or {@code null} for none
   */
  public java.lang.String getProfileType() {
    return profileType;
  }

  /**
   * Base profile type for handling FHIR fields.
   * @param profileType profileType or {@code null} for none
   */
  public FhirFieldConfig setProfileType(java.lang.String profileType) {
    this.profileType = profileType;
    return this;
  }

  @Override
  public FhirFieldConfig set(String fieldName, Object value) {
    return (FhirFieldConfig) super.set(fieldName, value);
  }

  @Override
  public FhirFieldConfig clone() {
    return (FhirFieldConfig) super.clone();
  }

}
