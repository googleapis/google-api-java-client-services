{
  "canonicalName": "Vision",
  "rootUrl": "https://vision.googleapis.com/",
  "description": "Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.",
  "servicePath": "",
  "parameters": {
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "basePath": "",
  "documentationLink": "https://cloud.google.com/vision/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-vision": {
          "description": "Apply machine learning models to understand and label images"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "protocol": "rest",
  "revision": "20200710",
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "version": "v1p1beta1",
  "version_module": true,
  "name": "vision",
  "id": "vision:v1p1beta1",
  "batchPath": "batch",
  "schemas": {
    "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse": {
      "description": "Response to an async batch file annotation request.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse"
    },
    "GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse": {
      "type": "object",
      "description": "Response to an async batch file annotation request.",
      "id": "GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse"
          },
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1BoundingPoly": {
      "type": "object",
      "description": "A bounding polygon for the detected image annotation.",
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices.",
          "type": "array"
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Vertex"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1BoundingPoly"
    },
    "GoogleCloudVisionV1p4beta1TextAnnotation": {
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1TextAnnotation",
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "properties": {
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        },
        "pages": {
          "type": "array",
          "description": "List of pages detected by OCR.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Page"
          }
        }
      }
    },
    "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse": {
      "description": "Response to an async batch image annotation request.",
      "id": "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse",
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "The output location and metadata from AsyncBatchAnnotateImagesRequest.",
          "$ref": "GoogleCloudVisionV1p4beta1OutputConfig"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1SafeSearchAnnotation": {
      "type": "object",
      "id": "GoogleCloudVisionV1p3beta1SafeSearchAnnotation",
      "properties": {
        "spoof": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive."
        },
        "medical": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string"
        },
        "adult": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities."
        },
        "violence": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this image contains violent content.",
          "type": "string"
        },
        "racy": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string",
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas."
        }
      },
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence)."
    },
    "Color": {
      "type": "object",
      "id": "Color",
      "properties": {
        "blue": {
          "format": "float",
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "type": "number"
        },
        "red": {
          "format": "float",
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "type": "number"
        },
        "green": {
          "format": "float",
          "type": "number",
          "description": "The amount of green in the color as a value in the interval [0, 1]."
        },
        "alpha": {
          "type": "number",
          "description": "The fraction of this color that should be applied to the pixel. That is,\nthe final pixel color is defined by the equation:\n\n  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).",
          "format": "float"
        }
      },
      "description": "Represents a color in the RGBA color space. This representation is designed\nfor simplicity of conversion to/from color representations in various\nlanguages over compactness; for example, the fields of this representation\ncan be trivially provided to the constructor of \"java.awt.Color\" in Java; it\ncan also be trivially provided to UIColor's \"+colorWithRed:green:blue:alpha\"\nmethod in iOS; and, with just a little work, it can be easily formatted into\na CSS \"rgba()\" string in JavaScript, as well.\n\nNote: this proto does not carry information about the absolute color space\nthat should be used to interpret the RGB value (e.g. sRGB, Adobe RGB,\nDCI-P3, BT.2020, etc.). By default, applications SHOULD assume the sRGB color\nspace.\n\nNote: when color equality needs to be decided, implementations, unless\ndocumented otherwise, will treat two colors to be equal if all their red,\ngreen, blue and alpha values each differ by at most 1e-5.\n\nExample (Java):\n\n     import com.google.type.Color;\n\n     // ...\n     public static java.awt.Color fromProto(Color protocolor) {\n       float alpha = protocolor.hasAlpha()\n           ? protocolor.getAlpha().getValue()\n           : 1.0;\n\n       return new java.awt.Color(\n           protocolor.getRed(),\n           protocolor.getGreen(),\n           protocolor.getBlue(),\n           alpha);\n     }\n\n     public static Color toProto(java.awt.Color color) {\n       float red = (float) color.getRed();\n       float green = (float) color.getGreen();\n       float blue = (float) color.getBlue();\n       float denominator = 255.0;\n       Color.Builder resultBuilder =\n           Color\n               .newBuilder()\n               .setRed(red / denominator)\n               .setGreen(green / denominator)\n               .setBlue(blue / denominator);\n       int alpha = color.getAlpha();\n       if (alpha != 255) {\n         result.setAlpha(\n             FloatValue\n                 .newBuilder()\n                 .setValue(((float) alpha) / denominator)\n                 .build());\n       }\n       return resultBuilder.build();\n     }\n     // ...\n\nExample (iOS / Obj-C):\n\n     // ...\n     static UIColor* fromProto(Color* protocolor) {\n        float red = [protocolor red];\n        float green = [protocolor green];\n        float blue = [protocolor blue];\n        FloatValue* alpha_wrapper = [protocolor alpha];\n        float alpha = 1.0;\n        if (alpha_wrapper != nil) {\n          alpha = [alpha_wrapper value];\n        }\n        return [UIColor colorWithRed:red green:green blue:blue alpha:alpha];\n     }\n\n     static Color* toProto(UIColor* color) {\n         CGFloat red, green, blue, alpha;\n         if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) {\n           return nil;\n         }\n         Color* result = [[Color alloc] init];\n         [result setRed:red];\n         [result setGreen:green];\n         [result setBlue:blue];\n         if (alpha \u003c= 0.9999) {\n           [result setAlpha:floatWrapperWithValue(alpha)];\n         }\n         [result autorelease];\n         return result;\n    }\n    // ...\n\n Example (JavaScript):\n\n    // ...\n\n    var protoToCssColor = function(rgb_color) {\n       var redFrac = rgb_color.red || 0.0;\n       var greenFrac = rgb_color.green || 0.0;\n       var blueFrac = rgb_color.blue || 0.0;\n       var red = Math.floor(redFrac * 255);\n       var green = Math.floor(greenFrac * 255);\n       var blue = Math.floor(blueFrac * 255);\n\n       if (!('alpha' in rgb_color)) {\n          return rgbToCssColor_(red, green, blue);\n       }\n\n       var alphaFrac = rgb_color.alpha.value || 0.0;\n       var rgbParams = [red, green, blue].join(',');\n       return ['rgba(', rgbParams, ',', alphaFrac, ')'].join('');\n    };\n\n    var rgbToCssColor_ = function(red, green, blue) {\n      var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue);\n      var hexString = rgbNumber.toString(16);\n      var missingZeros = 6 - hexString.length;\n      var resultBuilder = ['#'];\n      for (var i = 0; i \u003c missingZeros; i++) {\n         resultBuilder.push('0');\n      }\n      resultBuilder.push(hexString);\n      return resultBuilder.join('');\n    };\n\n    // ..."
    },
    "GoogleCloudVisionV1p1beta1GcsSource": {
      "id": "GoogleCloudVisionV1p1beta1GcsSource",
      "type": "object",
      "description": "The Google Cloud Storage location where the input will be read from.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1Block": {
      "type": "object",
      "description": "Logical element on the page.",
      "properties": {
        "blockType": {
          "type": "string",
          "description": "Detected block type (text, image etc) for this block.",
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ],
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ]
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "format": "float",
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "type": "number"
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the block."
        },
        "paragraphs": {
          "type": "array",
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Paragraph"
          }
        }
      },
      "id": "GoogleCloudVisionV1p4beta1Block"
    },
    "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage": {
      "id": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage",
      "description": "Detected language for a structural component.",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "description": "Confidence of detected language. Range [0, 1].",
          "type": "number"
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1AnnotateFileResponse": {
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "id": "GoogleCloudVisionV1p2beta1AnnotateFileResponse",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set.",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1AnnotateImageResponse"
          }
        },
        "error": {
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case.",
          "$ref": "Status"
        },
        "inputConfig": {
          "$ref": "GoogleCloudVisionV1p2beta1InputConfig",
          "description": "Information about the file for which this response is generated."
        },
        "totalPages": {
          "description": "This field gives the total number of pages in the file.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Word": {
      "description": "A word representation.",
      "id": "Word",
      "properties": {
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "symbols": {
          "items": {
            "$ref": "Symbol"
          },
          "type": "array",
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order."
        },
        "property": {
          "description": "Additional information detected for the word.",
          "$ref": "TextProperty"
        },
        "boundingBox": {
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "BoundingPoly"
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1AnnotateImageResponse": {
      "id": "GoogleCloudVisionV1p2beta1AnnotateImageResponse",
      "type": "object",
      "description": "Response to an image annotation request.",
      "properties": {
        "landmarkAnnotations": {
          "description": "If present, landmark detection has completed successfully.",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          },
          "type": "array"
        },
        "faceAnnotations": {
          "description": "If present, face detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1FaceAnnotation"
          }
        },
        "context": {
          "description": "If present, contextual information is needed to understand where this image\ncomes from.",
          "$ref": "GoogleCloudVisionV1p2beta1ImageAnnotationContext"
        },
        "safeSearchAnnotation": {
          "description": "If present, safe-search annotation has completed successfully.",
          "$ref": "GoogleCloudVisionV1p2beta1SafeSearchAnnotation"
        },
        "imagePropertiesAnnotation": {
          "description": "If present, image properties were extracted successfully.",
          "$ref": "GoogleCloudVisionV1p2beta1ImageProperties"
        },
        "fullTextAnnotation": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        },
        "webDetection": {
          "description": "If present, web detection has completed successfully.",
          "$ref": "GoogleCloudVisionV1p2beta1WebDetection"
        },
        "localizedObjectAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation"
          },
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score.",
          "type": "array"
        },
        "error": {
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set.",
          "$ref": "Status"
        },
        "textAnnotations": {
          "type": "array",
          "description": "If present, text (OCR) detection has completed successfully.",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          }
        },
        "productSearchResults": {
          "description": "If present, product search has completed successfully.",
          "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResults"
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          }
        },
        "cropHintsAnnotation": {
          "description": "If present, crop hints have completed successfully.",
          "$ref": "GoogleCloudVisionV1p2beta1CropHintsAnnotation"
        },
        "labelAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          },
          "description": "If present, label detection has completed successfully.",
          "type": "array"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1FaceAnnotation": {
      "properties": {
        "blurredLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Blurred likelihood."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated."
        },
        "angerLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Anger likelihood.",
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "sorrowLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "landmarks": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark"
          },
          "description": "Detected face landmarks."
        },
        "surpriseLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Surprise likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "landmarkingConfidence": {
          "type": "number",
          "format": "float",
          "description": "Face landmarking confidence. Range [0, 1]."
        },
        "joyLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Joy likelihood."
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "type": "number",
          "format": "float"
        },
        "headwearLikelihood": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Headwear likelihood."
        },
        "fdBoundingPoly": {
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix.",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "tiltAngle": {
          "type": "number",
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float"
        },
        "rollAngle": {
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "underExposedLikelihood": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Under-exposed likelihood."
        }
      },
      "type": "object",
      "description": "A face annotation object contains the results of face detection.",
      "id": "GoogleCloudVisionV1p2beta1FaceAnnotation"
    },
    "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest": {
      "description": "Multiple image annotation requests are batched into a single service call.",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`."
        },
        "requests": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AnnotateImageRequest"
          },
          "description": "Required. Individual image annotation requests for this batch."
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest"
    },
    "ImportProductSetsResponse": {
      "description": "Response message for the `ImportProductSets` method.\n\nThis message is returned by the\ngoogle.longrunning.Operations.GetOperation method in the returned\ngoogle.longrunning.Operation.response field.",
      "type": "object",
      "properties": {
        "referenceImages": {
          "description": "The list of reference_images that are imported successfully.",
          "items": {
            "$ref": "ReferenceImage"
          },
          "type": "array"
        },
        "statuses": {
          "description": "The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        }
      },
      "id": "ImportProductSetsResponse"
    },
    "GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation": {
      "description": "Prediction for what the object in the bounding box is.",
      "properties": {
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation"
    },
    "GoogleCloudVisionV1p1beta1Word": {
      "properties": {
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float"
        },
        "boundingBox": {
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "property": {
          "description": "Additional information detected for the word.",
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"
        },
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Symbol"
          }
        }
      },
      "type": "object",
      "description": "A word representation.",
      "id": "GoogleCloudVisionV1p1beta1Word"
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebEntity": {
      "type": "object",
      "description": "Entity deduced from similar images on the Internet.",
      "properties": {
        "score": {
          "type": "number",
          "format": "float",
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries."
        },
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebEntity"
    },
    "LatLng": {
      "properties": {
        "latitude": {
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "type": "number",
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "format": "double"
        }
      },
      "description": "An object representing a latitude/longitude pair. This is expressed as a pair\nof doubles representing degrees latitude and degrees longitude. Unless\nspecified otherwise, this must conform to the\n\u003ca href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\"\u003eWGS84\nstandard\u003c/a\u003e. Values must be within normalized ranges.",
      "type": "object",
      "id": "LatLng"
    },
    "GoogleCloudVisionV1p1beta1Vertex": {
      "id": "GoogleCloudVisionV1p1beta1Vertex",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty": {
      "description": "Additional information detected on the structural component.",
      "id": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty",
      "type": "object",
      "properties": {
        "detectedBreak": {
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1EntityAnnotation": {
      "id": "GoogleCloudVisionV1p4beta1EntityAnnotation",
      "type": "object",
      "properties": {
        "properties": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Property"
          },
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "Entity textual description, expressed in its `locale` language."
        },
        "score": {
          "type": "number",
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float"
        },
        "confidence": {
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features."
        },
        "topicality": {
          "type": "number",
          "format": "float",
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1]."
        },
        "mid": {
          "type": "string",
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/)."
        },
        "locale": {
          "description": "The language code for the locale in which the entity textual\n`description` is expressed.",
          "type": "string"
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1LocationInfo"
          }
        }
      },
      "description": "Set of detected entity features."
    },
    "ProductSearchResults": {
      "id": "ProductSearchResults",
      "description": "Results for a product search request.",
      "type": "object",
      "properties": {
        "productGroupedResults": {
          "items": {
            "$ref": "GroupedResult"
          },
          "type": "array",
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results."
        },
        "results": {
          "items": {
            "$ref": "Result"
          },
          "description": "List of results, one for each product match.",
          "type": "array"
        },
        "indexTime": {
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Symbol": {
      "type": "object",
      "id": "Symbol",
      "description": "A single symbol representation.",
      "properties": {
        "property": {
          "$ref": "TextProperty",
          "description": "Additional information detected for the symbol."
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of the OCR results for the symbol. Range [0, 1]."
        },
        "text": {
          "type": "string",
          "description": "The actual UTF-8 representation of the symbol."
        },
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1InputConfig": {
      "properties": {
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from.",
          "$ref": "GoogleCloudVisionV1p3beta1GcsSource"
        },
        "content": {
          "format": "byte",
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests.",
          "type": "string"
        },
        "mimeType": {
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1InputConfig",
      "type": "object",
      "description": "The desired input location and metadata."
    },
    "DetectedBreak": {
      "description": "Detected start or end of a structural component.",
      "type": "object",
      "properties": {
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        },
        "type": {
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "description": "Detected break type.",
          "type": "string",
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ]
        }
      },
      "id": "DetectedBreak"
    },
    "GoogleCloudVisionV1p2beta1GcsSource": {
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1GcsSource",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported.",
          "type": "string"
        }
      },
      "description": "The Google Cloud Storage location where the input will be read from."
    },
    "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty": {
      "properties": {
        "detectedBreak": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
      "type": "object",
      "description": "Additional information detected on the structural component."
    },
    "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak": {
      "properties": {
        "isPrefix": {
          "type": "boolean",
          "description": "True if break prepends the element."
        },
        "type": {
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "type": "string",
          "description": "Detected break type."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak",
      "description": "Detected start or end of a structural component.",
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1BoundingPoly": {
      "id": "GoogleCloudVisionV1p4beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1NormalizedVertex"
          },
          "type": "array",
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Vertex"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1ProductSearchResultsResult": {
      "properties": {
        "image": {
          "type": "string",
          "description": "The resource name of the image from the product that is the closest match\nto the query."
        },
        "score": {
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence).",
          "format": "float",
          "type": "number"
        },
        "product": {
          "description": "The Product.",
          "$ref": "GoogleCloudVisionV1p4beta1Product"
        }
      },
      "type": "object",
      "description": "Information about a product.",
      "id": "GoogleCloudVisionV1p4beta1ProductSearchResultsResult"
    },
    "InputConfig": {
      "id": "InputConfig",
      "type": "object",
      "description": "The desired input location and metadata.",
      "properties": {
        "content": {
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests.",
          "format": "byte",
          "type": "string"
        },
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from.",
          "$ref": "GcsSource"
        },
        "mimeType": {
          "type": "string",
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1AnnotateFileResponse": {
      "properties": {
        "responses": {
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1AnnotateImageResponse"
          },
          "type": "array"
        },
        "totalPages": {
          "format": "int32",
          "description": "This field gives the total number of pages in the file.",
          "type": "integer"
        },
        "inputConfig": {
          "description": "Information about the file for which this response is generated.",
          "$ref": "GoogleCloudVisionV1p4beta1InputConfig"
        },
        "error": {
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case.",
          "$ref": "Status"
        }
      },
      "type": "object",
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "id": "GoogleCloudVisionV1p4beta1AnnotateFileResponse"
    },
    "WebEntity": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string",
          "description": "Opaque entity ID."
        },
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "score": {
          "format": "float",
          "type": "number",
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries."
        }
      },
      "description": "Entity deduced from similar images on the Internet.",
      "id": "WebEntity"
    },
    "GoogleCloudVisionV1p1beta1ProductKeyValue": {
      "description": "A product label represented as a key-value pair.",
      "properties": {
        "value": {
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes.",
          "type": "string"
        },
        "key": {
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1ProductKeyValue"
    },
    "GoogleCloudVisionV1p4beta1FaceAnnotation": {
      "id": "GoogleCloudVisionV1p4beta1FaceAnnotation",
      "description": "A face annotation object contains the results of face detection.",
      "type": "object",
      "properties": {
        "sorrowLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Sorrow likelihood.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string"
        },
        "rollAngle": {
          "format": "float",
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "type": "number"
        },
        "headwearLikelihood": {
          "type": "string",
          "description": "Headwear likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "boundingPoly": {
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated.",
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly"
        },
        "joyLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string",
          "description": "Joy likelihood."
        },
        "blurredLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Blurred likelihood."
        },
        "panAngle": {
          "format": "float",
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "type": "number"
        },
        "underExposedLikelihood": {
          "description": "Under-exposed likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string"
        },
        "fdBoundingPoly": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix."
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "recognitionResult": {
          "description": "Additional recognition information. Only computed if\nimage_context.face_recognition_params is provided, **and** a match is found\nto a Celebrity in the input CelebritySet. This field is\nsorted in order of decreasing confidence values.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1FaceRecognitionResult"
          },
          "type": "array"
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "landmarks": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1FaceAnnotationLandmark"
          },
          "description": "Detected face landmarks.",
          "type": "array"
        },
        "surpriseLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Surprise likelihood.",
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "tiltAngle": {
          "format": "float",
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "type": "number"
        },
        "angerLikelihood": {
          "type": "string",
          "description": "Anger likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        }
      }
    },
    "GoogleCloudVisionV1p2beta1ProductSearchResults": {
      "type": "object",
      "description": "Results for a product search request.",
      "id": "GoogleCloudVisionV1p2beta1ProductSearchResults",
      "properties": {
        "indexTime": {
          "format": "google-datetime",
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "type": "string"
        },
        "productGroupedResults": {
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult"
          }
        },
        "results": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResultsResult"
          },
          "type": "array",
          "description": "List of results, one for each product match."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebPage": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The result web page URL."
        },
        "fullMatchingImages": {
          "type": "array",
          "description": "Fully matching images on the page.\nCan include resized copies of the query image.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          }
        },
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "type": "number",
          "format": "float"
        },
        "partialMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          },
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops."
        },
        "pageTitle": {
          "type": "string",
          "description": "Title for the web page, may contain HTML markups."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebPage",
      "description": "Metadata for web pages."
    },
    "GoogleCloudVisionV1p4beta1ImageAnnotationContext": {
      "properties": {
        "pageNumber": {
          "format": "int32",
          "type": "integer",
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image."
        },
        "uri": {
          "description": "The URI of the file used to produce the image.",
          "type": "string"
        }
      },
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "id": "GoogleCloudVisionV1p4beta1ImageAnnotationContext",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected language. Range [0, 1]."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1Symbol": {
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the symbol."
        },
        "text": {
          "type": "string",
          "description": "The actual UTF-8 representation of the symbol."
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of the OCR results for the symbol. Range [0, 1]."
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        }
      },
      "description": "A single symbol representation.",
      "id": "GoogleCloudVisionV1p3beta1Symbol",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1Property": {
      "type": "object",
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "properties": {
        "name": {
          "description": "Name of the property.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "Value of the property."
        },
        "uint64Value": {
          "description": "Value of numeric properties.",
          "type": "string",
          "format": "uint64"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Property"
    },
    "GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak": {
      "properties": {
        "isPrefix": {
          "type": "boolean",
          "description": "True if break prepends the element."
        },
        "type": {
          "description": "Detected break type.",
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ]
        }
      },
      "id": "GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak",
      "type": "object",
      "description": "Detected start or end of a structural component."
    },
    "GoogleCloudVisionV1p4beta1CropHintsAnnotation": {
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1CropHintsAnnotation",
      "properties": {
        "cropHints": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1CropHint"
          },
          "description": "Crop hint results.",
          "type": "array"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1ProductSearchParams": {
      "properties": {
        "productSet": {
          "type": "string",
          "description": "The resource name of a ProductSet to be searched for similar images.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`."
        },
        "boundingPoly": {
          "description": "The bounding polygon around the area of interest in the image.\nIf it is not specified, system discretion will be applied.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "productCategories": {
          "description": "The list of product categories to search in. Currently, we only consider\nthe first category, and either \"homegoods-v2\", \"apparel-v2\", \"toys-v2\",\n\"packagedgoods-v1\", or \"general-v1\" should be specified. The legacy\ncategories \"homegoods\", \"apparel\", and \"toys\" are still supported but will\nbe deprecated. For new products, please use \"homegoods-v2\", \"apparel-v2\",\nor \"toys-v2\" for better product search accuracy. It is recommended to\nmigrate existing products to these categories as well.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "description": "The filtering expression. This can be used to restrict search results based\non Product labels. We currently support an AND of OR of key-value\nexpressions, where each expression within an OR must have the same key. An\n'=' should be used to connect the key and value.\n\nFor example, \"(color = red OR color = blue) AND brand = Google\" is\nacceptable, but \"(color = red OR brand = Google)\" is not acceptable.\n\"color: red\" is not acceptable because it uses a ':' instead of an '='.",
          "type": "string"
        }
      },
      "description": "Parameters for a product search request.",
      "id": "GoogleCloudVisionV1p1beta1ProductSearchParams",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1InputConfig": {
      "description": "The desired input location and metadata.",
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported."
        },
        "gcsSource": {
          "$ref": "GoogleCloudVisionV1p1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "content": {
          "type": "string",
          "format": "byte",
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests."
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1InputConfig"
    },
    "GoogleCloudVisionV1p1beta1Position": {
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "type": "number",
          "format": "float"
        },
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        },
        "z": {
          "format": "float",
          "type": "number",
          "description": "Z coordinate (or depth)."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Position",
      "type": "object",
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image."
    },
    "GoogleCloudVisionV1p1beta1TextAnnotation": {
      "id": "GoogleCloudVisionV1p1beta1TextAnnotation",
      "type": "object",
      "properties": {
        "pages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Page"
          },
          "type": "array",
          "description": "List of pages detected by OCR."
        },
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        }
      },
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail."
    },
    "GoogleCloudVisionV1p3beta1CropHint": {
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of this being a salient region.  Range [0, 1]."
        },
        "boundingPoly": {
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale.",
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
        },
        "importanceFraction": {
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Single crop hint that is used to generate a new crop when serving an image.",
      "id": "GoogleCloudVisionV1p3beta1CropHint"
    },
    "GoogleCloudVisionV1p3beta1ImageAnnotationContext": {
      "properties": {
        "pageNumber": {
          "type": "integer",
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32"
        },
        "uri": {
          "type": "string",
          "description": "The URI of the file used to produce the image."
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p3beta1ImageAnnotationContext",
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image."
    },
    "GoogleCloudVisionV1p3beta1ImportProductSetsResponse": {
      "properties": {
        "statuses": {
          "description": "The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        },
        "referenceImages": {
          "description": "The list of reference_images that are imported successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ReferenceImage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ImportProductSetsResponse",
      "type": "object",
      "description": "Response message for the `ImportProductSets` method.\n\nThis message is returned by the\ngoogle.longrunning.Operations.GetOperation method in the returned\ngoogle.longrunning.Operation.response field."
    },
    "GoogleCloudVisionV1p3beta1Vertex": {
      "type": "object",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudVisionV1p3beta1Vertex",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "x": {
          "description": "X coordinate.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage": {
      "id": "GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float"
        }
      },
      "description": "Detected language for a structural component.",
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1ColorInfo": {
      "properties": {
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        },
        "score": {
          "format": "float",
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "type": "number"
        },
        "pixelFraction": {
          "type": "number",
          "format": "float",
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1]."
        }
      },
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "id": "GoogleCloudVisionV1p4beta1ColorInfo",
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse": {
      "properties": {
        "outputConfig": {
          "description": "The output location and metadata from AsyncAnnotateFileRequest.",
          "$ref": "GoogleCloudVisionV1p4beta1OutputConfig"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse",
      "type": "object",
      "description": "The response for a single offline file annotation request."
    },
    "GoogleCloudVisionV1p3beta1DominantColorsAnnotation": {
      "description": "Set of dominant colors and their corresponding scores.",
      "type": "object",
      "properties": {
        "colors": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ColorInfo"
          },
          "type": "array",
          "description": "RGB color values with their score and pixel fraction."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1DominantColorsAnnotation"
    },
    "GoogleCloudVisionV1p3beta1WebDetection": {
      "properties": {
        "bestGuessLabels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebLabel"
          },
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web."
        },
        "fullMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          },
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image."
        },
        "visuallySimilarImages": {
          "type": "array",
          "description": "The visually similar image results.",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          }
        },
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebPage"
          }
        },
        "webEntities": {
          "type": "array",
          "description": "Deduced entities from similar images on the Internet.",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebEntity"
          }
        },
        "partialMatchingImages": {
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p3beta1WebDetection",
      "type": "object",
      "description": "Relevant information for the image from the Internet."
    },
    "OutputConfig": {
      "properties": {
        "batchSize": {
          "format": "int32",
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "type": "integer"
        },
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output(s) to.",
          "$ref": "GcsDestination"
        }
      },
      "id": "OutputConfig",
      "type": "object",
      "description": "The desired output location and metadata."
    },
    "BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "NormalizedVertex"
          }
        },
        "vertices": {
          "type": "array",
          "description": "The bounding polygon vertices.",
          "items": {
            "$ref": "Vertex"
          }
        }
      },
      "id": "BoundingPoly"
    },
    "FaceAnnotation": {
      "type": "object",
      "id": "FaceAnnotation",
      "properties": {
        "boundingPoly": {
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated.",
          "$ref": "BoundingPoly"
        },
        "landmarks": {
          "type": "array",
          "description": "Detected face landmarks.",
          "items": {
            "$ref": "Landmark"
          }
        },
        "blurredLikelihood": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Blurred likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "angerLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Anger likelihood.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "fdBoundingPoly": {
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix.",
          "$ref": "BoundingPoly"
        },
        "joyLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string",
          "description": "Joy likelihood."
        },
        "detectionConfidence": {
          "format": "float",
          "description": "Detection confidence. Range [0, 1].",
          "type": "number"
        },
        "rollAngle": {
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "type": "number",
          "format": "float"
        },
        "panAngle": {
          "type": "number",
          "format": "float",
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180]."
        },
        "tiltAngle": {
          "type": "number",
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float"
        },
        "underExposedLikelihood": {
          "type": "string",
          "description": "Under-exposed likelihood.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "headwearLikelihood": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Headwear likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "sorrowLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "surpriseLikelihood": {
          "description": "Surprise likelihood.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string"
        },
        "landmarkingConfidence": {
          "type": "number",
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float"
        }
      },
      "description": "A face annotation object contains the results of face detection."
    },
    "GoogleCloudVisionV1p2beta1Vertex": {
      "type": "object",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudVisionV1p2beta1Vertex",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X coordinate."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y coordinate."
        }
      }
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebLabel": {
      "description": "Label to provide extra metadata for the web detection.",
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebLabel",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for extra metadata."
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      }
    },
    "Vertex": {
      "id": "Vertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "integer",
          "description": "X coordinate.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebImage": {
      "description": "Metadata for online images.",
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebImage",
      "properties": {
        "score": {
          "format": "float",
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the image."
        },
        "url": {
          "description": "The result image URL.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p4beta1LocationInfo": {
      "description": "Detected entity location information.",
      "properties": {
        "latLng": {
          "description": "lat/long location coordinates.",
          "$ref": "LatLng"
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1LocationInfo"
    },
    "GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage": {
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage",
      "properties": {
        "confidence": {
          "format": "float",
          "description": "Confidence of detected language. Range [0, 1].",
          "type": "number"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      },
      "description": "Detected language for a structural component."
    },
    "DetectedLanguage": {
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float"
        }
      },
      "description": "Detected language for a structural component.",
      "id": "DetectedLanguage",
      "type": "object"
    },
    "Position": {
      "type": "object",
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "id": "Position",
      "properties": {
        "y": {
          "type": "number",
          "description": "Y coordinate.",
          "format": "float"
        },
        "x": {
          "format": "float",
          "description": "X coordinate.",
          "type": "number"
        },
        "z": {
          "description": "Z coordinate (or depth).",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudVisionV1p4beta1ProductSearchResults": {
      "properties": {
        "productGroupedResults": {
          "type": "array",
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult"
          }
        },
        "results": {
          "description": "List of results, one for each product match.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResultsResult"
          },
          "type": "array"
        },
        "indexTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ProductSearchResults",
      "description": "Results for a product search request.",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1Property": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the property."
        },
        "name": {
          "type": "string",
          "description": "Name of the property."
        },
        "uint64Value": {
          "type": "string",
          "format": "uint64",
          "description": "Value of numeric properties."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Property",
      "type": "object",
      "description": "A `Property` consists of a user-supplied name/value pair."
    },
    "GoogleCloudVisionV1p1beta1EntityAnnotation": {
      "properties": {
        "properties": {
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Property"
          },
          "type": "array"
        },
        "topicality": {
          "format": "float",
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "type": "number"
        },
        "confidence": {
          "type": "number",
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float"
        },
        "locale": {
          "type": "string",
          "description": "The language code for the locale in which the entity textual\n`description` is expressed."
        },
        "score": {
          "format": "float",
          "description": "Overall score of the result. Range [0, 1].",
          "type": "number"
        },
        "description": {
          "description": "Entity textual description, expressed in its `locale` language.",
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1LocationInfo"
          },
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks."
        },
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "boundingPoly": {
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        }
      },
      "description": "Set of detected entity features.",
      "id": "GoogleCloudVisionV1p1beta1EntityAnnotation",
      "type": "object"
    },
    "TextAnnotation": {
      "properties": {
        "text": {
          "type": "string",
          "description": "UTF-8 text detected on the pages."
        },
        "pages": {
          "type": "array",
          "description": "List of pages detected by OCR.",
          "items": {
            "$ref": "Page"
          }
        }
      },
      "id": "TextAnnotation",
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1ReferenceImage": {
      "description": "A `ReferenceImage` represents a product image and its associated metadata,\nsuch as bounding boxes.",
      "type": "object",
      "id": "GoogleCloudVisionV1p3beta1ReferenceImage",
      "properties": {
        "boundingPolys": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
          },
          "type": "array",
          "description": "Optional. Bounding polygons around the areas of interest in the reference image.\nIf this field is empty, the system will try to detect regions of\ninterest. At most 10 bounding polygons will be used.\n\nThe provided shape is converted into a non-rotated rectangle. Once\nconverted, the small edge of the rectangle must be greater than or equal\nto 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5\nis not)."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the reference image.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.\n\nThis field is ignored when creating a reference image."
        },
        "uri": {
          "description": "Required. The Google Cloud Storage URI of the reference image.\n\nThe URI must start with `gs://`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1DominantColorsAnnotation": {
      "properties": {
        "colors": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ColorInfo"
          },
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array"
        }
      },
      "description": "Set of dominant colors and their corresponding scores.",
      "id": "GoogleCloudVisionV1p2beta1DominantColorsAnnotation",
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation": {
      "id": "GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation",
      "properties": {
        "boundingPoly": {
          "description": "Image region to which this object belongs. This must be populated.",
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly"
        },
        "score": {
          "type": "number",
          "description": "Score of the result. Range [0, 1].",
          "format": "float"
        },
        "name": {
          "type": "string",
          "description": "Object name, expressed in its `language_code` language."
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Set of detected objects with bounding boxes."
    },
    "GoogleCloudVisionV1p3beta1FaceAnnotation": {
      "description": "A face annotation object contains the results of face detection.",
      "type": "object",
      "properties": {
        "panAngle": {
          "type": "number",
          "format": "float",
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180]."
        },
        "underExposedLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Under-exposed likelihood.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string"
        },
        "fdBoundingPoly": {
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix.",
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
        },
        "sorrowLikelihood": {
          "type": "string",
          "description": "Sorrow likelihood.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "angerLikelihood": {
          "description": "Anger likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "tiltAngle": {
          "format": "float",
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "type": "number"
        },
        "surpriseLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Surprise likelihood.",
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "headwearLikelihood": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Headwear likelihood."
        },
        "joyLikelihood": {
          "description": "Joy likelihood.",
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "blurredLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Blurred likelihood.",
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated."
        },
        "rollAngle": {
          "type": "number",
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float"
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "landmarks": {
          "description": "Detected face landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1FaceAnnotationLandmark"
          }
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1FaceAnnotation"
    },
    "ReferenceImage": {
      "type": "object",
      "description": "A `ReferenceImage` represents a product image and its associated metadata,\nsuch as bounding boxes.",
      "properties": {
        "boundingPolys": {
          "description": "Optional. Bounding polygons around the areas of interest in the reference image.\nIf this field is empty, the system will try to detect regions of\ninterest. At most 10 bounding polygons will be used.\n\nThe provided shape is converted into a non-rotated rectangle. Once\nconverted, the small edge of the rectangle must be greater than or equal\nto 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5\nis not).",
          "type": "array",
          "items": {
            "$ref": "BoundingPoly"
          }
        },
        "name": {
          "type": "string",
          "description": "The resource name of the reference image.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.\n\nThis field is ignored when creating a reference image."
        },
        "uri": {
          "description": "Required. The Google Cloud Storage URI of the reference image.\n\nThe URI must start with `gs://`.",
          "type": "string"
        }
      },
      "id": "ReferenceImage"
    },
    "CropHint": {
      "description": "Single crop hint that is used to generate a new crop when serving an image.",
      "id": "CropHint",
      "properties": {
        "importanceFraction": {
          "format": "float",
          "type": "number",
          "description": "Fraction of importance of this salient region with respect to the original\nimage."
        },
        "confidence": {
          "format": "float",
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "type": "number"
        },
        "boundingPoly": {
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale.",
          "$ref": "BoundingPoly"
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1AnnotateFileResponse": {
      "id": "GoogleCloudVisionV1p3beta1AnnotateFileResponse",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudVisionV1p3beta1InputConfig",
          "description": "Information about the file for which this response is generated."
        },
        "totalPages": {
          "format": "int32",
          "type": "integer",
          "description": "This field gives the total number of pages in the file."
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case."
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1AnnotateImageResponse"
          },
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set."
        }
      },
      "type": "object",
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses."
    },
    "GoogleCloudVisionV1p1beta1AnnotateFileResponse": {
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudVisionV1p1beta1InputConfig",
          "description": "Information about the file for which this response is generated."
        },
        "totalPages": {
          "description": "This field gives the total number of pages in the file.",
          "format": "int32",
          "type": "integer"
        },
        "responses": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AnnotateImageResponse"
          },
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set.",
          "type": "array"
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case."
        }
      },
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "id": "GoogleCloudVisionV1p1beta1AnnotateFileResponse"
    },
    "GoogleCloudVisionV1p4beta1WebDetectionWebPage": {
      "properties": {
        "url": {
          "type": "string",
          "description": "The result web page URL."
        },
        "partialMatchingImages": {
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          },
          "type": "array"
        },
        "fullMatchingImages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          },
          "description": "Fully matching images on the page.\nCan include resized copies of the query image.",
          "type": "array"
        },
        "pageTitle": {
          "type": "string",
          "description": "Title for the web page, may contain HTML markups."
        },
        "score": {
          "format": "float",
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the web page."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1WebDetectionWebPage",
      "description": "Metadata for web pages.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1Feature": {
      "id": "GoogleCloudVisionV1p1beta1Feature",
      "type": "object",
      "description": "The type of Google Cloud Vision API detection to perform, and the maximum\nnumber of results to return for that type. Multiple `Feature` objects can\nbe specified in the `features` list.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FACE_DETECTION",
            "LANDMARK_DETECTION",
            "LOGO_DETECTION",
            "LABEL_DETECTION",
            "TEXT_DETECTION",
            "DOCUMENT_TEXT_DETECTION",
            "SAFE_SEARCH_DETECTION",
            "IMAGE_PROPERTIES",
            "CROP_HINTS",
            "WEB_DETECTION",
            "PRODUCT_SEARCH",
            "OBJECT_LOCALIZATION"
          ],
          "description": "The feature type.",
          "enumDescriptions": [
            "Unspecified feature type.",
            "Run face detection.",
            "Run landmark detection.",
            "Run logo detection.",
            "Run label detection.",
            "Run text detection / optical character recognition (OCR). Text detection\nis optimized for areas of text within a larger image; if the image is\na document, use `DOCUMENT_TEXT_DETECTION` instead.",
            "Run dense text document OCR. Takes precedence when both\n`DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` are present.",
            "Run Safe Search to detect potentially unsafe\nor undesirable content.",
            "Compute a set of image properties, such as the\nimage's dominant colors.",
            "Run crop hints.",
            "Run web detection.",
            "Run Product Search.",
            "Run localizer for object detection."
          ]
        },
        "model": {
          "type": "string",
          "description": "Model to use for the feature.\nSupported values: \"builtin/stable\" (the default if unset) and\n\"builtin/latest\"."
        },
        "maxResults": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of results of this type. Does not apply to\n`TEXT_DETECTION`, `DOCUMENT_TEXT_DETECTION`, or `CROP_HINTS`."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1CropHint": {
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1CropHint",
      "description": "Single crop hint that is used to generate a new crop when serving an image.",
      "properties": {
        "importanceFraction": {
          "format": "float",
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "type": "number"
        },
        "boundingPoly": {
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse": {
      "type": "object",
      "description": "A list of file annotation responses.",
      "id": "GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, each response corresponding to each\nAnnotateFileRequest in BatchAnnotateFilesRequest.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1AnnotateFileResponse"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1ImageProperties": {
      "id": "GoogleCloudVisionV1p1beta1ImageProperties",
      "type": "object",
      "properties": {
        "dominantColors": {
          "$ref": "GoogleCloudVisionV1p1beta1DominantColorsAnnotation",
          "description": "If present, dominant colors completed successfully."
        }
      },
      "description": "Stores image properties, such as dominant colors."
    },
    "GcsDestination": {
      "type": "object",
      "description": "The Google Cloud Storage location where the output will be written to.",
      "id": "GcsDestination",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files."
        }
      }
    },
    "BatchAnnotateFilesResponse": {
      "properties": {
        "responses": {
          "type": "array",
          "description": "The list of file annotation responses, each response corresponding to each\nAnnotateFileRequest in BatchAnnotateFilesRequest.",
          "items": {
            "$ref": "AnnotateFileResponse"
          }
        }
      },
      "description": "A list of file annotation responses.",
      "type": "object",
      "id": "BatchAnnotateFilesResponse"
    },
    "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse": {
      "id": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse",
      "description": "Response to a batch image annotation request.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "Individual responses to image annotation requests within the batch.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AnnotateImageResponse"
          }
        }
      }
    },
    "GoogleCloudVisionV1p1beta1Symbol": {
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1Symbol",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float"
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "property": {
          "description": "Additional information detected for the symbol.",
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"
        },
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        }
      },
      "description": "A single symbol representation."
    },
    "GoogleCloudVisionV1p1beta1DominantColorsAnnotation": {
      "id": "GoogleCloudVisionV1p1beta1DominantColorsAnnotation",
      "type": "object",
      "properties": {
        "colors": {
          "type": "array",
          "description": "RGB color values with their score and pixel fraction.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ColorInfo"
          }
        }
      },
      "description": "Set of dominant colors and their corresponding scores."
    },
    "GoogleCloudVisionV1p4beta1Vertex": {
      "id": "GoogleCloudVisionV1p4beta1Vertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "format": "int32",
          "type": "integer",
          "description": "Y coordinate."
        },
        "x": {
          "format": "int32",
          "type": "integer",
          "description": "X coordinate."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1WebDetectionWebLabel": {
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      },
      "description": "Label to provide extra metadata for the web detection.",
      "id": "GoogleCloudVisionV1p3beta1WebDetectionWebLabel",
      "type": "object"
    },
    "TextProperty": {
      "id": "TextProperty",
      "description": "Additional information detected on the structural component.",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "DetectedLanguage"
          },
          "type": "array"
        },
        "detectedBreak": {
          "$ref": "DetectedBreak",
          "description": "Detected start or end of a text segment."
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation": {
      "description": "Prediction for what the object in the bounding box is.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "score": {
          "type": "number",
          "description": "Score of the result. Range [0, 1].",
          "format": "float"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation"
    },
    "GoogleCloudVisionV1p1beta1Block": {
      "type": "object",
      "properties": {
        "blockType": {
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ],
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ]
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Paragraph"
          },
          "description": "List of paragraphs in this block (if this blocks is of type text)."
        },
        "confidence": {
          "format": "float",
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "type": "number"
        },
        "property": {
          "description": "Additional information detected for the block.",
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"
        },
        "boundingBox": {
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Block",
      "description": "Logical element on the page."
    },
    "GoogleCloudVisionV1p4beta1AnnotateImageResponse": {
      "properties": {
        "productSearchResults": {
          "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResults",
          "description": "If present, product search has completed successfully."
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1EntityAnnotation"
          },
          "type": "array"
        },
        "fullTextAnnotation": {
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext.",
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotation"
        },
        "landmarkAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1EntityAnnotation"
          },
          "description": "If present, landmark detection has completed successfully."
        },
        "safeSearchAnnotation": {
          "description": "If present, safe-search annotation has completed successfully.",
          "$ref": "GoogleCloudVisionV1p4beta1SafeSearchAnnotation"
        },
        "context": {
          "$ref": "GoogleCloudVisionV1p4beta1ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        },
        "imagePropertiesAnnotation": {
          "$ref": "GoogleCloudVisionV1p4beta1ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "webDetection": {
          "$ref": "GoogleCloudVisionV1p4beta1WebDetection",
          "description": "If present, web detection has completed successfully."
        },
        "cropHintsAnnotation": {
          "$ref": "GoogleCloudVisionV1p4beta1CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        },
        "faceAnnotations": {
          "type": "array",
          "description": "If present, face detection has completed successfully.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1FaceAnnotation"
          }
        },
        "textAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1EntityAnnotation"
          },
          "type": "array",
          "description": "If present, text (OCR) detection has completed successfully."
        },
        "labelAnnotations": {
          "description": "If present, label detection has completed successfully.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1EntityAnnotation"
          },
          "type": "array"
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "localizedObjectAnnotations": {
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation"
          }
        }
      },
      "type": "object",
      "description": "Response to an image annotation request.",
      "id": "GoogleCloudVisionV1p4beta1AnnotateImageResponse"
    },
    "GoogleCloudVisionV1p3beta1ProductKeyValue": {
      "id": "GoogleCloudVisionV1p3beta1ProductKeyValue",
      "type": "object",
      "properties": {
        "key": {
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes."
        }
      },
      "description": "A product label represented as a key-value pair."
    },
    "GoogleCloudVisionV1p4beta1Property": {
      "id": "GoogleCloudVisionV1p4beta1Property",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the property."
        },
        "uint64Value": {
          "format": "uint64",
          "description": "Value of numeric properties.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "Value of the property."
        }
      },
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "type": "object"
    },
    "WebImage": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The result image URL."
        },
        "score": {
          "format": "float",
          "description": "(Deprecated) Overall relevancy score for the image.",
          "type": "number"
        }
      },
      "description": "Metadata for online images.",
      "id": "WebImage"
    },
    "GoogleCloudVisionV1p3beta1Position": {
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "z": {
          "type": "number",
          "format": "float",
          "description": "Z coordinate (or depth)."
        },
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "format": "float",
          "description": "X coordinate.",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Position"
    },
    "GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse": {
      "id": "GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse"
          },
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest."
        }
      },
      "description": "Response to an async batch file annotation request."
    },
    "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse": {
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, each response corresponding to each\nAnnotateFileRequest in BatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AnnotateFileResponse"
          }
        }
      },
      "description": "A list of file annotation responses.",
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse"
    },
    "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark": {
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark",
      "properties": {
        "position": {
          "description": "Face landmark position.",
          "$ref": "GoogleCloudVisionV1p2beta1Position"
        },
        "type": {
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "description": "Face landmark type.",
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "type": "string"
        }
      },
      "description": "A face-specific landmark (for example, a face feature)."
    },
    "GoogleCloudVisionV1p1beta1ColorInfo": {
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1ColorInfo",
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "properties": {
        "score": {
          "format": "float",
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "type": "number"
        },
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        },
        "pixelFraction": {
          "type": "number",
          "format": "float",
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1]."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1ProductSearchResults": {
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1ProductSearchResults",
      "properties": {
        "indexTime": {
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "format": "google-datetime",
          "type": "string"
        },
        "productGroupedResults": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult"
          },
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results."
        },
        "results": {
          "type": "array",
          "description": "List of results, one for each product match.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResultsResult"
          }
        }
      },
      "description": "Results for a product search request."
    },
    "ColorInfo": {
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "properties": {
        "color": {
          "description": "RGB components of the color.",
          "$ref": "Color"
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Image-specific score for this color. Value in range [0, 1]."
        },
        "pixelFraction": {
          "type": "number",
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float"
        }
      },
      "id": "ColorInfo",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest": {
      "description": "Request for async image annotation for a list of images.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudVisionV1p1beta1OutputConfig",
          "description": "Required. The desired output location and metadata (e.g. format)."
        },
        "requests": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AnnotateImageRequest"
          },
          "description": "Required. Individual image annotation requests for this batch."
        },
        "parent": {
          "type": "string",
          "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest"
    },
    "GoogleCloudVisionV1p1beta1Paragraph": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the paragraph."
        },
        "words": {
          "description": "List of all words in this paragraph.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Word"
          },
          "type": "array"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float"
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Paragraph",
      "description": "Structural unit of text representing a number of words in certain order."
    },
    "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse": {
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudVisionV1p2beta1OutputConfig",
          "description": "The output location and metadata from AsyncAnnotateFileRequest."
        }
      },
      "description": "The response for a single offline file annotation request.",
      "id": "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1GcsDestination": {
      "id": "GoogleCloudVisionV1p1beta1GcsDestination",
      "type": "object",
      "description": "The Google Cloud Storage location where the output will be written to.",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "id": "Operation",
      "type": "object",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1WebDetectionParams": {
      "id": "GoogleCloudVisionV1p1beta1WebDetectionParams",
      "properties": {
        "includeGeoResults": {
          "description": "Whether to include results derived from the geo information in the image.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Parameters for web detection request."
    },
    "GoogleCloudVisionV1p4beta1WebDetectionWebEntity": {
      "description": "Entity deduced from similar images on the Internet.",
      "properties": {
        "score": {
          "format": "float",
          "type": "number",
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries."
        },
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "entityId": {
          "type": "string",
          "description": "Opaque entity ID."
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1WebDetectionWebEntity"
    },
    "GoogleCloudVisionV1p4beta1Word": {
      "description": "A word representation.",
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1Word",
      "properties": {
        "symbols": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Symbol"
          },
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of the OCR results for the word. Range [0, 1]."
        },
        "boundingBox": {
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly"
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the word."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1DominantColorsAnnotation": {
      "properties": {
        "colors": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ColorInfo"
          },
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1DominantColorsAnnotation",
      "type": "object",
      "description": "Set of dominant colors and their corresponding scores."
    },
    "GoogleCloudVisionV1p4beta1GcsDestination": {
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      },
      "description": "The Google Cloud Storage location where the output will be written to.",
      "id": "GoogleCloudVisionV1p4beta1GcsDestination",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebEntity": {
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebEntity",
      "properties": {
        "score": {
          "format": "float",
          "type": "number",
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries."
        },
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Canonical description of the entity, in English."
        }
      },
      "description": "Entity deduced from similar images on the Internet.",
      "type": "object"
    },
    "AsyncBatchAnnotateImagesResponse": {
      "description": "Response to an async batch image annotation request.",
      "properties": {
        "outputConfig": {
          "$ref": "OutputConfig",
          "description": "The output location and metadata from AsyncBatchAnnotateImagesRequest."
        }
      },
      "type": "object",
      "id": "AsyncBatchAnnotateImagesResponse"
    },
    "GoogleCloudVisionV1p2beta1CropHintsAnnotation": {
      "type": "object",
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "properties": {
        "cropHints": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1CropHint"
          },
          "type": "array",
          "description": "Crop hint results."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1CropHintsAnnotation"
    },
    "GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation": {
      "description": "Set of detected objects with bounding boxes.",
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation",
      "properties": {
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        },
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "boundingPoly": {
          "description": "Image region to which this object belongs. This must be populated.",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1NormalizedVertex",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult": {
      "description": "Information about the products similar to a single product in a query\nimage.",
      "properties": {
        "results": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResultsResult"
          },
          "type": "array",
          "description": "List of results, one for each product match."
        },
        "boundingPoly": {
          "description": "The bounding polygon around the product detected in the query image.",
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
        },
        "objectAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation"
          },
          "description": "List of generic predictions for the object in the bounding box.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult"
    },
    "Block": {
      "properties": {
        "paragraphs": {
          "items": {
            "$ref": "Paragraph"
          },
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of the OCR results on the block. Range [0, 1]."
        },
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "property": {
          "description": "Additional information detected for the block.",
          "$ref": "TextProperty"
        },
        "blockType": {
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ],
          "description": "Detected block type (text, image etc) for this block.",
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ]
        }
      },
      "id": "Block",
      "description": "Logical element on the page.",
      "type": "object"
    },
    "GroupedResult": {
      "description": "Information about the products similar to a single product in a query\nimage.",
      "id": "GroupedResult",
      "type": "object",
      "properties": {
        "objectAnnotations": {
          "type": "array",
          "items": {
            "$ref": "ObjectAnnotation"
          },
          "description": "List of generic predictions for the object in the bounding box."
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "Result"
          }
        },
        "boundingPoly": {
          "$ref": "BoundingPoly",
          "description": "The bounding polygon around the product detected in the query image."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1NormalizedVertex": {
      "type": "object",
      "properties": {
        "x": {
          "format": "float",
          "description": "X coordinate.",
          "type": "number"
        },
        "y": {
          "description": "Y coordinate.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "id": "GoogleCloudVisionV1p4beta1NormalizedVertex"
    },
    "GoogleCloudVisionV1p1beta1AnnotateImageResponse": {
      "id": "GoogleCloudVisionV1p1beta1AnnotateImageResponse",
      "type": "object",
      "description": "Response to an image annotation request.",
      "properties": {
        "webDetection": {
          "description": "If present, web detection has completed successfully.",
          "$ref": "GoogleCloudVisionV1p1beta1WebDetection"
        },
        "labelAnnotations": {
          "type": "array",
          "description": "If present, label detection has completed successfully.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          }
        },
        "localizedObjectAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation"
          },
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score."
        },
        "textAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          },
          "type": "array",
          "description": "If present, text (OCR) detection has completed successfully."
        },
        "fullTextAnnotation": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        },
        "context": {
          "description": "If present, contextual information is needed to understand where this image\ncomes from.",
          "$ref": "GoogleCloudVisionV1p1beta1ImageAnnotationContext"
        },
        "productSearchResults": {
          "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResults",
          "description": "If present, product search has completed successfully."
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "landmarkAnnotations": {
          "description": "If present, landmark detection has completed successfully.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          },
          "type": "array"
        },
        "imagePropertiesAnnotation": {
          "description": "If present, image properties were extracted successfully.",
          "$ref": "GoogleCloudVisionV1p1beta1ImageProperties"
        },
        "faceAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1FaceAnnotation"
          },
          "description": "If present, face detection has completed successfully.",
          "type": "array"
        },
        "safeSearchAnnotation": {
          "$ref": "GoogleCloudVisionV1p1beta1SafeSearchAnnotation",
          "description": "If present, safe-search annotation has completed successfully."
        },
        "cropHintsAnnotation": {
          "description": "If present, crop hints have completed successfully.",
          "$ref": "GoogleCloudVisionV1p1beta1CropHintsAnnotation"
        },
        "logoAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          },
          "type": "array",
          "description": "If present, logo detection has completed successfully."
        }
      }
    },
    "GoogleCloudVisionV1p2beta1EntityAnnotation": {
      "description": "Set of detected entity features.",
      "type": "object",
      "properties": {
        "topicality": {
          "format": "float",
          "type": "number",
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1]."
        },
        "properties": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Property"
          },
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "type": "array"
        },
        "confidence": {
          "type": "number",
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float"
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Overall score of the result. Range [0, 1]."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features."
        },
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Entity textual description, expressed in its `locale` language."
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1LocationInfo"
          }
        },
        "locale": {
          "description": "The language code for the locale in which the entity textual\n`description` is expressed.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1EntityAnnotation"
    },
    "GcsSource": {
      "id": "GcsSource",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported."
        }
      },
      "description": "The Google Cloud Storage location where the input will be read from.",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1Block": {
      "description": "Logical element on the page.",
      "properties": {
        "boundingBox": {
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the block."
        },
        "paragraphs": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Paragraph"
          },
          "type": "array",
          "description": "List of paragraphs in this block (if this blocks is of type text)."
        },
        "blockType": {
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ],
          "description": "Detected block type (text, image etc) for this block.",
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ]
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Block",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1Page": {
      "properties": {
        "property": {
          "description": "Additional information detected on the page.",
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels."
        },
        "height": {
          "type": "integer",
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32"
        },
        "blocks": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Block"
          },
          "description": "List of blocks of text, images etc on this page.",
          "type": "array"
        },
        "confidence": {
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Page",
      "description": "Detected page from OCR.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1Product": {
      "description": "A Product contains ReferenceImages.",
      "id": "GoogleCloudVisionV1p1beta1Product",
      "properties": {
        "name": {
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product.",
          "type": "string"
        },
        "productLabels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductKeyValue"
          },
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet."
        },
        "productCategory": {
          "description": "Immutable. The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long."
        },
        "description": {
          "type": "string",
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1WebDetection": {
      "properties": {
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebPage"
          }
        },
        "partialMatchingImages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          },
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array"
        },
        "webEntities": {
          "type": "array",
          "description": "Deduced entities from similar images on the Internet.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebEntity"
          }
        },
        "visuallySimilarImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          },
          "description": "The visually similar image results."
        },
        "bestGuessLabels": {
          "type": "array",
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebLabel"
          }
        },
        "fullMatchingImages": {
          "type": "array",
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1WebDetection",
      "description": "Relevant information for the image from the Internet."
    },
    "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse": {
      "id": "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse",
      "description": "Response to an async batch file annotation request.",
      "type": "object",
      "properties": {
        "responses": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse"
          },
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest.",
          "type": "array"
        }
      }
    },
    "GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation": {
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "mid": {
          "type": "string",
          "description": "Object ID that should align with EntityAnnotation mid."
        },
        "score": {
          "format": "float",
          "description": "Score of the result. Range [0, 1].",
          "type": "number"
        },
        "name": {
          "type": "string",
          "description": "Object name, expressed in its `language_code` language."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation",
      "description": "Prediction for what the object in the bounding box is."
    },
    "GoogleCloudVisionV1p4beta1BatchOperationMetadata": {
      "id": "GoogleCloudVisionV1p4beta1BatchOperationMetadata",
      "properties": {
        "submitTime": {
          "description": "The time when the batch request was submitted to the server.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROCESSING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Invalid.",
            "Request is actively being processed.",
            "The request is done and at least one item has been successfully\nprocessed.",
            "The request is done and no item has been successfully processed.",
            "The request is done after the longrunning.Operations.CancelOperation has\nbeen called by the user.  Any records that were processed before the\ncancel command are output as specified in the request."
          ],
          "description": "The current state of the batch operation."
        },
        "endTime": {
          "description": "The time when the batch request is finished and\ngoogle.longrunning.Operation.done is set to true.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Metadata for the batch operations such as the current state.\n\nThis is included in the `metadata` field of the `Operation` returned by the\n`GetOperation` call of the `google::longrunning::Operations` service.",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1OperationMetadata": {
      "id": "GoogleCloudVisionV1p2beta1OperationMetadata",
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "description": "Current state of the batch operation.",
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time when the batch request was received."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1WebDetectionWebImage": {
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1WebDetectionWebImage",
      "description": "Metadata for online images.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The result image URL."
        },
        "score": {
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1FaceAnnotation": {
      "type": "object",
      "properties": {
        "fdBoundingPoly": {
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "joyLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string",
          "description": "Joy likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "blurredLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Blurred likelihood."
        },
        "boundingPoly": {
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "panAngle": {
          "format": "float",
          "type": "number",
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180]."
        },
        "sorrowLikelihood": {
          "type": "string",
          "description": "Sorrow likelihood.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "headwearLikelihood": {
          "type": "string",
          "description": "Headwear likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "tiltAngle": {
          "format": "float",
          "type": "number",
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180]."
        },
        "angerLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Anger likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string"
        },
        "underExposedLikelihood": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Under-exposed likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "rollAngle": {
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "type": "number",
          "format": "float"
        },
        "landmarks": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark"
          },
          "type": "array",
          "description": "Detected face landmarks."
        },
        "surpriseLikelihood": {
          "type": "string",
          "description": "Surprise likelihood.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        }
      },
      "description": "A face annotation object contains the results of face detection.",
      "id": "GoogleCloudVisionV1p1beta1FaceAnnotation"
    },
    "GoogleCloudVisionV1p2beta1Page": {
      "properties": {
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results on the page. Range [0, 1]."
        },
        "property": {
          "description": "Additional information detected on the page.",
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"
        },
        "blocks": {
          "type": "array",
          "description": "List of blocks of text, images etc on this page.",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Block"
          }
        },
        "width": {
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Page",
      "description": "Detected page from OCR.",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1NormalizedVertex": {
      "properties": {
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate."
        },
        "x": {
          "format": "float",
          "description": "X coordinate.",
          "type": "number"
        }
      },
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "id": "GoogleCloudVisionV1p2beta1NormalizedVertex",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation": {
      "id": "GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation",
      "description": "Set of detected objects with bounding boxes.",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "Image region to which this object belongs. This must be populated."
        },
        "name": {
          "type": "string",
          "description": "Object name, expressed in its `language_code` language."
        },
        "score": {
          "format": "float",
          "type": "number",
          "description": "Score of the result. Range [0, 1]."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1OutputConfig": {
      "description": "The desired output location and metadata.",
      "id": "GoogleCloudVisionV1p1beta1OutputConfig",
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output(s) to.",
          "$ref": "GoogleCloudVisionV1p1beta1GcsDestination"
        },
        "batchSize": {
          "format": "int32",
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1ProductSearchResultsResult": {
      "type": "object",
      "description": "Information about a product.",
      "properties": {
        "product": {
          "$ref": "GoogleCloudVisionV1p1beta1Product",
          "description": "The Product."
        },
        "image": {
          "description": "The resource name of the image from the product that is the closest match\nto the query.",
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence)."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ProductSearchResultsResult"
    },
    "GoogleCloudVisionV1p3beta1BatchOperationMetadata": {
      "id": "GoogleCloudVisionV1p3beta1BatchOperationMetadata",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROCESSING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string",
          "description": "The current state of the batch operation.",
          "enumDescriptions": [
            "Invalid.",
            "Request is actively being processed.",
            "The request is done and at least one item has been successfully\nprocessed.",
            "The request is done and no item has been successfully processed.",
            "The request is done after the longrunning.Operations.CancelOperation has\nbeen called by the user.  Any records that were processed before the\ncancel command are output as specified in the request."
          ]
        },
        "endTime": {
          "description": "The time when the batch request is finished and\ngoogle.longrunning.Operation.done is set to true.",
          "type": "string",
          "format": "google-datetime"
        },
        "submitTime": {
          "description": "The time when the batch request was submitted to the server.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Metadata for the batch operations such as the current state.\n\nThis is included in the `metadata` field of the `Operation` returned by the\n`GetOperation` call of the `google::longrunning::Operations` service."
    },
    "GoogleCloudVisionV1p4beta1SafeSearchAnnotation": {
      "type": "object",
      "properties": {
        "spoof": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive."
        },
        "violence": {
          "description": "Likelihood that this image contains violent content.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string"
        },
        "medical": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "racy": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string"
        },
        "adult": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "type": "string"
        }
      },
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).",
      "id": "GoogleCloudVisionV1p4beta1SafeSearchAnnotation"
    },
    "GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse": {
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudVisionV1p1beta1OutputConfig",
          "description": "The output location and metadata from AsyncAnnotateFileRequest."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse",
      "description": "The response for a single offline file annotation request.",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1GcsDestination": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1GcsDestination",
      "description": "The Google Cloud Storage location where the output will be written to.",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1EntityAnnotation": {
      "id": "GoogleCloudVisionV1p3beta1EntityAnnotation",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "format": "float",
          "description": "Overall score of the result. Range [0, 1]."
        },
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float"
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1LocationInfo"
          }
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Property"
          },
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity."
        },
        "topicality": {
          "type": "number",
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features."
        },
        "locale": {
          "description": "The language code for the locale in which the entity textual\n`description` is expressed.",
          "type": "string"
        },
        "description": {
          "description": "Entity textual description, expressed in its `locale` language.",
          "type": "string"
        }
      },
      "description": "Set of detected entity features."
    },
    "GoogleCloudVisionV1p2beta1GcsDestination": {
      "type": "object",
      "description": "The Google Cloud Storage location where the output will be written to.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1GcsDestination"
    },
    "ObjectAnnotation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Object name, expressed in its `language_code` language."
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Score of the result. Range [0, 1]."
        },
        "mid": {
          "type": "string",
          "description": "Object ID that should align with EntityAnnotation mid."
        }
      },
      "id": "ObjectAnnotation",
      "description": "Prediction for what the object in the bounding box is."
    },
    "GoogleCloudVisionV1p2beta1ImageProperties": {
      "properties": {
        "dominantColors": {
          "description": "If present, dominant colors completed successfully.",
          "$ref": "GoogleCloudVisionV1p2beta1DominantColorsAnnotation"
        }
      },
      "description": "Stores image properties, such as dominant colors.",
      "id": "GoogleCloudVisionV1p2beta1ImageProperties",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebPage": {
      "properties": {
        "url": {
          "description": "The result web page URL.",
          "type": "string"
        },
        "partialMatchingImages": {
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          }
        },
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float",
          "type": "number"
        },
        "fullMatchingImages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          },
          "description": "Fully matching images on the page.\nCan include resized copies of the query image.",
          "type": "array"
        },
        "pageTitle": {
          "type": "string",
          "description": "Title for the web page, may contain HTML markups."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebPage",
      "type": "object",
      "description": "Metadata for web pages."
    },
    "BatchOperationMetadata": {
      "id": "BatchOperationMetadata",
      "type": "object",
      "description": "Metadata for the batch operations such as the current state.\n\nThis is included in the `metadata` field of the `Operation` returned by the\n`GetOperation` call of the `google::longrunning::Operations` service.",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROCESSING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is actively being processed.",
            "The request is done and at least one item has been successfully\nprocessed.",
            "The request is done and no item has been successfully processed.",
            "The request is done after the longrunning.Operations.CancelOperation has\nbeen called by the user.  Any records that were processed before the\ncancel command are output as specified in the request."
          ],
          "description": "The current state of the batch operation."
        },
        "submitTime": {
          "description": "The time when the batch request was submitted to the server.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time when the batch request is finished and\ngoogle.longrunning.Operation.done is set to true."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "id": "GoogleCloudVisionV1p3beta1NormalizedVertex",
      "properties": {
        "x": {
          "type": "number",
          "description": "X coordinate.",
          "format": "float"
        },
        "y": {
          "format": "float",
          "type": "number",
          "description": "Y coordinate."
        }
      }
    },
    "GoogleCloudVisionV1p2beta1TextAnnotation": {
      "properties": {
        "pages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Page"
          },
          "description": "List of pages detected by OCR."
        },
        "text": {
          "type": "string",
          "description": "UTF-8 text detected on the pages."
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1TextAnnotation",
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail."
    },
    "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest": {
      "id": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest",
      "type": "object",
      "properties": {
        "requests": {
          "description": "Required. Individual async file annotation requests for this batch.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AsyncAnnotateFileRequest"
          },
          "type": "array"
        },
        "parent": {
          "type": "string",
          "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`."
        }
      },
      "description": "Multiple async file annotation requests are batched into a single service\ncall."
    },
    "GoogleCloudVisionV1p4beta1FaceAnnotationLandmark": {
      "type": "object",
      "description": "A face-specific landmark (for example, a face feature).",
      "properties": {
        "type": {
          "type": "string",
          "description": "Face landmark type.",
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ]
        },
        "position": {
          "description": "Face landmark position.",
          "$ref": "GoogleCloudVisionV1p4beta1Position"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1FaceAnnotationLandmark"
    },
    "GoogleCloudVisionV1p2beta1ProductKeyValue": {
      "id": "GoogleCloudVisionV1p2beta1ProductKeyValue",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes."
        },
        "value": {
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes.",
          "type": "string"
        }
      },
      "description": "A product label represented as a key-value pair."
    },
    "Page": {
      "type": "object",
      "description": "Detected page from OCR.",
      "properties": {
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "items": {
            "$ref": "Block"
          },
          "type": "array"
        },
        "confidence": {
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels."
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels."
        },
        "property": {
          "$ref": "TextProperty",
          "description": "Additional information detected on the page."
        }
      },
      "id": "Page"
    },
    "OperationMetadata": {
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "type": "string",
          "description": "Current state of the batch operation.",
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ]
        },
        "updateTime": {
          "type": "string",
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "The time when the batch request was received.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "OperationMetadata",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1WebDetectionWebEntity": {
      "type": "object",
      "description": "Entity deduced from similar images on the Internet.",
      "properties": {
        "score": {
          "format": "float",
          "type": "number",
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries."
        },
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Canonical description of the entity, in English."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1WebDetectionWebEntity"
    },
    "GoogleCloudVisionV1p1beta1CropHintsAnnotation": {
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1CropHintsAnnotation",
      "properties": {
        "cropHints": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1CropHint"
          },
          "type": "array",
          "description": "Crop hint results."
        }
      },
      "description": "Set of crop hints that are used to generate new crops when serving images."
    },
    "GoogleCloudVisionV1p3beta1WebDetectionWebPage": {
      "type": "object",
      "properties": {
        "fullMatchingImages": {
          "description": "Fully matching images on the page.\nCan include resized copies of the query image.",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          },
          "type": "array"
        },
        "pageTitle": {
          "type": "string",
          "description": "Title for the web page, may contain HTML markups."
        },
        "score": {
          "format": "float",
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the web page."
        },
        "url": {
          "type": "string",
          "description": "The result web page URL."
        },
        "partialMatchingImages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          },
          "type": "array",
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1WebDetectionWebPage",
      "description": "Metadata for web pages."
    },
    "GoogleCloudVisionV1p3beta1FaceAnnotationLandmark": {
      "properties": {
        "position": {
          "$ref": "GoogleCloudVisionV1p3beta1Position",
          "description": "Face landmark position."
        },
        "type": {
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "type": "string",
          "description": "Face landmark type.",
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ]
        }
      },
      "id": "GoogleCloudVisionV1p3beta1FaceAnnotationLandmark",
      "type": "object",
      "description": "A face-specific landmark (for example, a face feature)."
    },
    "DominantColorsAnnotation": {
      "properties": {
        "colors": {
          "description": "RGB color values with their score and pixel fraction.",
          "items": {
            "$ref": "ColorInfo"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "DominantColorsAnnotation",
      "description": "Set of dominant colors and their corresponding scores."
    },
    "GoogleCloudVisionV1p2beta1Block": {
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1Block",
      "properties": {
        "blockType": {
          "description": "Detected block type (text, image etc) for this block.",
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ]
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float"
        },
        "boundingBox": {
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "property": {
          "description": "Additional information detected for the block.",
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Paragraph"
          },
          "type": "array"
        }
      },
      "description": "Logical element on the page."
    },
    "GoogleCloudVisionV1p1beta1OperationMetadata": {
      "type": "object",
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "The time when the batch request was received.",
          "type": "string"
        },
        "state": {
          "description": "Current state of the batch operation.",
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ]
        },
        "updateTime": {
          "type": "string",
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1OperationMetadata"
    },
    "GoogleCloudVisionV1p1beta1SafeSearchAnnotation": {
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).",
      "properties": {
        "adult": {
          "type": "string",
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "racy": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas."
        },
        "spoof": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string"
        },
        "violence": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Likelihood that this image contains violent content."
        },
        "medical": {
          "description": "Likelihood that this is a medical image.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1SafeSearchAnnotation",
      "type": "object"
    },
    "WebDetection": {
      "description": "Relevant information for the image from the Internet.",
      "id": "WebDetection",
      "properties": {
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "WebPage"
          }
        },
        "visuallySimilarImages": {
          "type": "array",
          "items": {
            "$ref": "WebImage"
          },
          "description": "The visually similar image results."
        },
        "bestGuessLabels": {
          "type": "array",
          "items": {
            "$ref": "WebLabel"
          },
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web."
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "items": {
            "$ref": "WebEntity"
          },
          "type": "array"
        },
        "fullMatchingImages": {
          "items": {
            "$ref": "WebImage"
          },
          "type": "array",
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image."
        },
        "partialMatchingImages": {
          "type": "array",
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "items": {
            "$ref": "WebImage"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1SafeSearchAnnotation": {
      "type": "object",
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).",
      "properties": {
        "racy": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas."
        },
        "violence": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Likelihood that this image contains violent content.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string"
        },
        "spoof": {
          "type": "string",
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "adult": {
          "type": "string",
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "medical": {
          "type": "string",
          "description": "Likelihood that this is a medical image.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        }
      },
      "id": "GoogleCloudVisionV1p2beta1SafeSearchAnnotation"
    },
    "GoogleCloudVisionV1p4beta1WebDetection": {
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1WebDetection",
      "description": "Relevant information for the image from the Internet.",
      "properties": {
        "bestGuessLabels": {
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebLabel"
          }
        },
        "partialMatchingImages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          },
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array"
        },
        "fullMatchingImages": {
          "type": "array",
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          }
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebPage"
          },
          "type": "array"
        },
        "visuallySimilarImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          },
          "description": "The visually similar image results."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1ImportProductSetsResponse": {
      "properties": {
        "referenceImages": {
          "description": "The list of reference_images that are imported successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ReferenceImage"
          }
        },
        "statuses": {
          "items": {
            "$ref": "Status"
          },
          "description": "The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0.",
          "type": "array"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ImportProductSetsResponse",
      "type": "object",
      "description": "Response message for the `ImportProductSets` method.\n\nThis message is returned by the\ngoogle.longrunning.Operations.GetOperation method in the returned\ngoogle.longrunning.Operation.response field."
    },
    "ImageAnnotationContext": {
      "id": "ImageAnnotationContext",
      "properties": {
        "uri": {
          "description": "The URI of the file used to produce the image.",
          "type": "string"
        },
        "pageNumber": {
          "format": "int32",
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "type": "integer"
        }
      },
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1Position": {
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "properties": {
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate."
        },
        "z": {
          "description": "Z coordinate (or depth).",
          "format": "float",
          "type": "number"
        },
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Position",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1BoundingPoly": {
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1NormalizedVertex"
          }
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Vertex"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1BoundingPoly",
      "type": "object",
      "description": "A bounding polygon for the detected image annotation."
    },
    "Landmark": {
      "id": "Landmark",
      "type": "object",
      "description": "A face-specific landmark (for example, a face feature).",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type."
        },
        "position": {
          "$ref": "Position",
          "description": "Face landmark position."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1Paragraph": {
      "properties": {
        "words": {
          "description": "List of all words in this paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Word"
          }
        },
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1]."
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the paragraph."
        }
      },
      "type": "object",
      "description": "Structural unit of text representing a number of words in certain order.",
      "id": "GoogleCloudVisionV1p4beta1Paragraph"
    },
    "GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult": {
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding polygon around the product detected in the query image."
        },
        "results": {
          "type": "array",
          "description": "List of results, one for each product match.",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResultsResult"
          }
        },
        "objectAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation"
          },
          "description": "List of generic predictions for the object in the bounding box."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult",
      "description": "Information about the products similar to a single product in a query\nimage."
    },
    "GoogleCloudVisionV1p1beta1AnnotateImageRequest": {
      "description": "Request for performing Google Cloud Vision API tasks over a user-provided\nimage, with user-requested features, and with context information.",
      "properties": {
        "features": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Feature"
          },
          "description": "Requested features.",
          "type": "array"
        },
        "image": {
          "description": "The image to be processed.",
          "$ref": "GoogleCloudVisionV1p1beta1Image"
        },
        "imageContext": {
          "$ref": "GoogleCloudVisionV1p1beta1ImageContext",
          "description": "Additional context that may accompany the image."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AnnotateImageRequest",
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1Product": {
      "id": "GoogleCloudVisionV1p4beta1Product",
      "description": "A Product contains ReferenceImages.",
      "properties": {
        "description": {
          "type": "string",
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
        },
        "name": {
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product.",
          "type": "string"
        },
        "displayName": {
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long.",
          "type": "string"
        },
        "productCategory": {
          "description": "Immutable. The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products.",
          "type": "string"
        },
        "productLabels": {
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductKeyValue"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1CropHintsAnnotation": {
      "id": "GoogleCloudVisionV1p3beta1CropHintsAnnotation",
      "type": "object",
      "properties": {
        "cropHints": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1CropHint"
          },
          "description": "Crop hint results.",
          "type": "array"
        }
      },
      "description": "Set of crop hints that are used to generate new crops when serving images."
    },
    "GoogleCloudVisionV1p4beta1ProductKeyValue": {
      "description": "A product label represented as a key-value pair.",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes."
        },
        "value": {
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ProductKeyValue"
    },
    "GoogleCloudVisionV1p2beta1ImageAnnotationContext": {
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1ImageAnnotationContext",
      "properties": {
        "pageNumber": {
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "type": "integer",
          "format": "int32"
        },
        "uri": {
          "type": "string",
          "description": "The URI of the file used to produce the image."
        }
      },
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image."
    },
    "GoogleCloudVisionV1p4beta1OperationMetadata": {
      "properties": {
        "state": {
          "type": "string",
          "description": "Current state of the batch operation.",
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ]
        },
        "updateTime": {
          "type": "string",
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time when the batch request was received.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "id": "GoogleCloudVisionV1p4beta1OperationMetadata"
    },
    "GoogleCloudVisionV1p4beta1ImageProperties": {
      "type": "object",
      "description": "Stores image properties, such as dominant colors.",
      "properties": {
        "dominantColors": {
          "$ref": "GoogleCloudVisionV1p4beta1DominantColorsAnnotation",
          "description": "If present, dominant colors completed successfully."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ImageProperties"
    },
    "LocalizedObjectAnnotation": {
      "id": "LocalizedObjectAnnotation",
      "description": "Set of detected objects with bounding boxes.",
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "BoundingPoly",
          "description": "Image region to which this object belongs. This must be populated."
        },
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "score": {
          "format": "float",
          "description": "Score of the result. Range [0, 1].",
          "type": "number"
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        }
      }
    },
    "EntityAnnotation": {
      "type": "object",
      "description": "Set of detected entity features.",
      "id": "EntityAnnotation",
      "properties": {
        "locale": {
          "type": "string",
          "description": "The language code for the locale in which the entity textual\n`description` is expressed."
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "LocationInfo"
          }
        },
        "score": {
          "format": "float",
          "type": "number",
          "description": "Overall score of the result. Range [0, 1]."
        },
        "mid": {
          "type": "string",
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/)."
        },
        "boundingPoly": {
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features.",
          "$ref": "BoundingPoly"
        },
        "confidence": {
          "format": "float",
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "type": "number"
        },
        "description": {
          "description": "Entity textual description, expressed in its `locale` language.",
          "type": "string"
        },
        "properties": {
          "items": {
            "$ref": "Property"
          },
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "type": "array"
        },
        "topicality": {
          "type": "number",
          "format": "float",
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1]."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "id": "GoogleCloudVisionV1p3beta1BoundingPoly",
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1NormalizedVertex"
          },
          "type": "array",
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Vertex"
          },
          "description": "The bounding polygon vertices."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1ProductSearchResults": {
      "properties": {
        "results": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResultsResult"
          },
          "description": "List of results, one for each product match.",
          "type": "array"
        },
        "productGroupedResults": {
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult"
          }
        },
        "indexTime": {
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ProductSearchResults",
      "description": "Results for a product search request.",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1WebDetection": {
      "description": "Relevant information for the image from the Internet.",
      "type": "object",
      "properties": {
        "bestGuessLabels": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebLabel"
          },
          "type": "array",
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web."
        },
        "fullMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          },
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image."
        },
        "webEntities": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebEntity"
          },
          "type": "array",
          "description": "Deduced entities from similar images on the Internet."
        },
        "visuallySimilarImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          },
          "description": "The visually similar image results."
        },
        "partialMatchingImages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          },
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array"
        },
        "pagesWithMatchingImages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebPage"
          },
          "type": "array",
          "description": "Web pages containing the matching images from the Internet."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetection"
    },
    "GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult": {
      "id": "GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult",
      "type": "object",
      "description": "Information about the products similar to a single product in a query\nimage.",
      "properties": {
        "boundingPoly": {
          "description": "The bounding polygon around the product detected in the query image.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResultsResult"
          }
        },
        "objectAnnotations": {
          "description": "List of generic predictions for the object in the bounding box.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation"
          }
        }
      }
    },
    "GoogleCloudVisionV1p3beta1GcsSource": {
      "id": "GoogleCloudVisionV1p3beta1GcsSource",
      "type": "object",
      "description": "The Google Cloud Storage location where the input will be read from.",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported.",
          "type": "string"
        }
      }
    },
    "KeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes."
        },
        "value": {
          "type": "string",
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes."
        }
      },
      "description": "A product label represented as a key-value pair.",
      "id": "KeyValue"
    },
    "GoogleCloudVisionV1p2beta1Product": {
      "id": "GoogleCloudVisionV1p2beta1Product",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long."
        },
        "productCategory": {
          "type": "string",
          "description": "Immutable. The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products."
        },
        "description": {
          "type": "string",
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
        },
        "productLabels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductKeyValue"
          },
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product."
        }
      },
      "type": "object",
      "description": "A Product contains ReferenceImages."
    },
    "WebPage": {
      "id": "WebPage",
      "type": "object",
      "properties": {
        "partialMatchingImages": {
          "type": "array",
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops.",
          "items": {
            "$ref": "WebImage"
          }
        },
        "pageTitle": {
          "type": "string",
          "description": "Title for the web page, may contain HTML markups."
        },
        "url": {
          "description": "The result web page URL.",
          "type": "string"
        },
        "fullMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "WebImage"
          },
          "description": "Fully matching images on the page.\nCan include resized copies of the query image."
        },
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Metadata for web pages."
    },
    "GoogleCloudVisionV1p4beta1InputConfig": {
      "properties": {
        "content": {
          "format": "byte",
          "type": "string",
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests."
        },
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from.",
          "$ref": "GoogleCloudVisionV1p4beta1GcsSource"
        },
        "mimeType": {
          "type": "string",
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported."
        }
      },
      "description": "The desired input location and metadata.",
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1InputConfig"
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebLabel": {
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebLabel",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        }
      },
      "description": "Label to provide extra metadata for the web detection.",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1Word": {
      "id": "GoogleCloudVisionV1p2beta1Word",
      "properties": {
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "property": {
          "description": "Additional information detected for the word.",
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"
        },
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "symbols": {
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Symbol"
          },
          "type": "array",
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order."
        }
      },
      "description": "A word representation.",
      "type": "object"
    },
    "GoogleCloudVisionV1p3beta1OperationMetadata": {
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ],
          "description": "Current state of the batch operation."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The time when the operation result was last updated.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "The time when the batch request was received.",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1OperationMetadata",
      "type": "object",
      "description": "Contains metadata for the BatchAnnotateImages operation."
    },
    "GoogleCloudVisionV1p1beta1AnnotateFileRequest": {
      "id": "GoogleCloudVisionV1p1beta1AnnotateFileRequest",
      "properties": {
        "imageContext": {
          "description": "Additional context that may accompany the image(s) in the file.",
          "$ref": "GoogleCloudVisionV1p1beta1ImageContext"
        },
        "pages": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "description": "Pages of the file to perform image annotation.\n\nPages starts from 1, we assume the first page of the file is page 1.\nAt most 5 pages are supported per request. Pages can be negative.\n\nPage 1 means the first page.\nPage 2 means the second page.\nPage -1 means the last page.\nPage -2 means the second to the last page.\n\nIf the file is GIF instead of PDF or TIFF, page refers to GIF frames.\n\nIf this field is empty, by default the service performs image annotation\nfor the first 5 pages of the file."
        },
        "inputConfig": {
          "$ref": "GoogleCloudVisionV1p1beta1InputConfig",
          "description": "Required. Information about the input file."
        },
        "features": {
          "description": "Required. Requested features.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Feature"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A request to annotate one single file, e.g. a PDF, TIFF or GIF file."
    },
    "GoogleCloudVisionV1p3beta1WebDetectionWebImage": {
      "description": "Metadata for online images.",
      "properties": {
        "score": {
          "type": "number",
          "format": "float",
          "description": "(Deprecated) Overall relevancy score for the image."
        },
        "url": {
          "description": "The result image URL.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
    },
    "AsyncAnnotateFileResponse": {
      "description": "The response for a single offline file annotation request.",
      "type": "object",
      "id": "AsyncAnnotateFileResponse",
      "properties": {
        "outputConfig": {
          "description": "The output location and metadata from AsyncAnnotateFileRequest.",
          "$ref": "OutputConfig"
        }
      }
    },
    "Paragraph": {
      "type": "object",
      "properties": {
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "property": {
          "description": "Additional information detected for the paragraph.",
          "$ref": "TextProperty"
        },
        "words": {
          "items": {
            "$ref": "Word"
          },
          "type": "array",
          "description": "List of all words in this paragraph."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "Paragraph",
      "description": "Structural unit of text representing a number of words in certain order."
    },
    "GoogleCloudVisionV1p1beta1Property": {
      "properties": {
        "uint64Value": {
          "format": "uint64",
          "type": "string",
          "description": "Value of numeric properties."
        },
        "value": {
          "type": "string",
          "description": "Value of the property."
        },
        "name": {
          "type": "string",
          "description": "Name of the property."
        }
      },
      "type": "object",
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "id": "GoogleCloudVisionV1p1beta1Property"
    },
    "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty": {
      "id": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "detectedBreak": {
          "description": "Detected start or end of a text segment.",
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak"
        }
      },
      "description": "Additional information detected on the structural component."
    },
    "GoogleCloudVisionV1p4beta1FaceRecognitionResult": {
      "properties": {
        "confidence": {
          "format": "float",
          "description": "Recognition confidence. Range [0, 1].",
          "type": "number"
        },
        "celebrity": {
          "description": "The Celebrity that this face was matched to.",
          "$ref": "GoogleCloudVisionV1p4beta1Celebrity"
        }
      },
      "description": "Information about a face's identity.",
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1FaceRecognitionResult"
    },
    "GoogleCloudVisionV1p4beta1CropHint": {
      "id": "GoogleCloudVisionV1p4beta1CropHint",
      "type": "object",
      "properties": {
        "importanceFraction": {
          "type": "number",
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float"
        },
        "boundingPoly": {
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale.",
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of this being a salient region.  Range [0, 1]."
        }
      },
      "description": "Single crop hint that is used to generate a new crop when serving an image."
    },
    "GoogleCloudVisionV1p4beta1Page": {
      "id": "GoogleCloudVisionV1p4beta1Page",
      "description": "Detected page from OCR.",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty",
          "description": "Additional information detected on the page."
        },
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Block"
          }
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels."
        },
        "height": {
          "type": "integer",
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32"
        },
        "confidence": {
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1ImageAnnotationContext": {
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1ImageAnnotationContext",
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "properties": {
        "uri": {
          "description": "The URI of the file used to produce the image.",
          "type": "string"
        },
        "pageNumber": {
          "type": "integer",
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32"
        }
      }
    },
    "AsyncBatchAnnotateFilesResponse": {
      "type": "object",
      "description": "Response to an async batch file annotation request.",
      "id": "AsyncBatchAnnotateFilesResponse",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "AsyncAnnotateFileResponse"
          }
        }
      }
    },
    "GoogleCloudVisionV1p4beta1Position": {
      "properties": {
        "y": {
          "format": "float",
          "type": "number",
          "description": "Y coordinate."
        },
        "z": {
          "format": "float",
          "description": "Z coordinate (or depth).",
          "type": "number"
        },
        "x": {
          "type": "number",
          "description": "X coordinate.",
          "format": "float"
        }
      },
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "id": "GoogleCloudVisionV1p4beta1Position",
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1GcsSource": {
      "id": "GoogleCloudVisionV1p4beta1GcsSource",
      "description": "The Google Cloud Storage location where the input will be read from.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1LocationInfo": {
      "id": "GoogleCloudVisionV1p3beta1LocationInfo",
      "properties": {
        "latLng": {
          "description": "lat/long location coordinates.",
          "$ref": "LatLng"
        }
      },
      "type": "object",
      "description": "Detected entity location information."
    },
    "GoogleCloudVisionV1p1beta1LatLongRect": {
      "type": "object",
      "properties": {
        "minLatLng": {
          "$ref": "LatLng",
          "description": "Min lat/long pair."
        },
        "maxLatLng": {
          "$ref": "LatLng",
          "description": "Max lat/long pair."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1LatLongRect",
      "description": "Rectangle determined by min and max `LatLng` pairs."
    },
    "GoogleCloudVisionV1p4beta1WebDetectionWebLabel": {
      "id": "GoogleCloudVisionV1p4beta1WebDetectionWebLabel",
      "description": "Label to provide extra metadata for the web detection.",
      "type": "object",
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1ColorInfo": {
      "properties": {
        "pixelFraction": {
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "score": {
          "format": "float",
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "type": "number"
        },
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ColorInfo",
      "type": "object",
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image."
    },
    "NormalizedVertex": {
      "properties": {
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate."
        },
        "x": {
          "type": "number",
          "format": "float",
          "description": "X coordinate."
        }
      },
      "type": "object",
      "id": "NormalizedVertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1."
    },
    "GoogleCloudVisionV1p1beta1LocationInfo": {
      "description": "Detected entity location information.",
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1LocationInfo",
      "properties": {
        "latLng": {
          "description": "lat/long location coordinates.",
          "$ref": "LatLng"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1ColorInfo": {
      "properties": {
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        },
        "score": {
          "type": "number",
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float"
        },
        "pixelFraction": {
          "type": "number",
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float"
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1ColorInfo",
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image."
    },
    "GoogleCloudVisionV1p2beta1ProductSearchResultsResult": {
      "description": "Information about a product.",
      "id": "GoogleCloudVisionV1p2beta1ProductSearchResultsResult",
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "The resource name of the image from the product that is the closest match\nto the query."
        },
        "product": {
          "description": "The Product.",
          "$ref": "GoogleCloudVisionV1p2beta1Product"
        },
        "score": {
          "format": "float",
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence).",
          "type": "number"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation": {
      "id": "GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation",
      "type": "object",
      "properties": {
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Object name, expressed in its `language_code` language."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Score of the result. Range [0, 1]."
        }
      },
      "description": "Prediction for what the object in the bounding box is."
    },
    "GoogleCloudVisionV1p1beta1ImageContext": {
      "type": "object",
      "description": "Image context and/or feature-specific parameters.",
      "properties": {
        "webDetectionParams": {
          "$ref": "GoogleCloudVisionV1p1beta1WebDetectionParams",
          "description": "Parameters for web detection."
        },
        "latLongRect": {
          "$ref": "GoogleCloudVisionV1p1beta1LatLongRect",
          "description": "Not used."
        },
        "cropHintsParams": {
          "$ref": "GoogleCloudVisionV1p1beta1CropHintsParams",
          "description": "Parameters for crop hints annotation request."
        },
        "languageHints": {
          "description": "List of languages to use for TEXT_DETECTION. In most cases, an empty value\nyields the best results since it enables automatic language detection. For\nlanguages based on the Latin alphabet, setting `language_hints` is not\nneeded. In rare cases, when the language of the text in the image is known,\nsetting a hint will help get better results (although it will be a\nsignificant hindrance if the hint is wrong). Text detection returns an\nerror if one or more of the specified languages is not one of the\n[supported languages](https://cloud.google.com/vision/docs/languages).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "productSearchParams": {
          "description": "Parameters for product search.",
          "$ref": "GoogleCloudVisionV1p1beta1ProductSearchParams"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ImageContext"
    },
    "Result": {
      "description": "Information about a product.",
      "type": "object",
      "id": "Result",
      "properties": {
        "image": {
          "type": "string",
          "description": "The resource name of the image from the product that is the closest match\nto the query."
        },
        "product": {
          "description": "The Product.",
          "$ref": "Product"
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence)."
        }
      }
    },
    "Status": {
      "id": "Status",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak": {
      "id": "GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak",
      "description": "Detected start or end of a structural component.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "description": "Detected break type.",
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ]
        },
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak": {
      "properties": {
        "type": {
          "description": "Detected break type.",
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "type": "string"
        },
        "isPrefix": {
          "type": "boolean",
          "description": "True if break prepends the element."
        }
      },
      "description": "Detected start or end of a structural component.",
      "id": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation": {
      "id": "GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "Image region to which this object belongs. This must be populated."
        },
        "mid": {
          "type": "string",
          "description": "Object ID that should align with EntityAnnotation mid."
        },
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "name": {
          "type": "string",
          "description": "Object name, expressed in its `language_code` language."
        }
      },
      "description": "Set of detected objects with bounding boxes.",
      "type": "object"
    },
    "GoogleCloudVisionV1p2beta1LocationInfo": {
      "type": "object",
      "properties": {
        "latLng": {
          "description": "lat/long location coordinates.",
          "$ref": "LatLng"
        }
      },
      "description": "Detected entity location information.",
      "id": "GoogleCloudVisionV1p2beta1LocationInfo"
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebImage": {
      "properties": {
        "score": {
          "format": "float",
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the image."
        },
        "url": {
          "type": "string",
          "description": "The result image URL."
        }
      },
      "description": "Metadata for online images.",
      "type": "object",
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
    },
    "GoogleCloudVisionV1p3beta1Product": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
        },
        "name": {
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product.",
          "type": "string"
        },
        "productLabels": {
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductKeyValue"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long."
        },
        "productCategory": {
          "description": "Immutable. The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products.",
          "type": "string"
        }
      },
      "description": "A Product contains ReferenceImages.",
      "id": "GoogleCloudVisionV1p3beta1Product"
    },
    "GoogleCloudVisionV1p3beta1Word": {
      "description": "A word representation.",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results for the word. Range [0, 1]."
        },
        "property": {
          "description": "Additional information detected for the word.",
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty"
        },
        "boundingBox": {
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
        },
        "symbols": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Symbol"
          },
          "type": "array",
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Word",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1Page": {
      "id": "GoogleCloudVisionV1p1beta1Page",
      "type": "object",
      "properties": {
        "blocks": {
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Block"
          },
          "type": "array",
          "description": "List of blocks of text, images etc on this page."
        },
        "width": {
          "type": "integer",
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results on the page. Range [0, 1]."
        },
        "height": {
          "type": "integer",
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32"
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
          "description": "Additional information detected on the page."
        }
      },
      "description": "Detected page from OCR."
    },
    "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty": {
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "detectedBreak": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty"
    },
    "GoogleCloudVisionV1p3beta1OutputConfig": {
      "type": "object",
      "description": "The desired output location and metadata.",
      "properties": {
        "batchSize": {
          "format": "int32",
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "type": "integer"
        },
        "gcsDestination": {
          "$ref": "GoogleCloudVisionV1p3beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1OutputConfig"
    },
    "Property": {
      "properties": {
        "uint64Value": {
          "format": "uint64",
          "description": "Value of numeric properties.",
          "type": "string"
        },
        "name": {
          "description": "Name of the property.",
          "type": "string"
        },
        "value": {
          "description": "Value of the property.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Property",
      "description": "A `Property` consists of a user-supplied name/value pair."
    },
    "GoogleCloudVisionV1p2beta1OutputConfig": {
      "description": "The desired output location and metadata.",
      "properties": {
        "batchSize": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations."
        },
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output(s) to.",
          "$ref": "GoogleCloudVisionV1p2beta1GcsDestination"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1OutputConfig",
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1Celebrity": {
      "id": "GoogleCloudVisionV1p4beta1Celebrity",
      "type": "object",
      "description": "A Celebrity is a group of Faces with an identity.",
      "properties": {
        "name": {
          "description": "The resource name of the preloaded Celebrity. Has the format\n`builtin/{mid}`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The Celebrity's display name."
        },
        "description": {
          "type": "string",
          "description": "The Celebrity's description."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1ProductSearchResultsResult": {
      "properties": {
        "score": {
          "type": "number",
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence).",
          "format": "float"
        },
        "product": {
          "$ref": "GoogleCloudVisionV1p3beta1Product",
          "description": "The Product."
        },
        "image": {
          "description": "The resource name of the image from the product that is the closest match\nto the query.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information about a product.",
      "id": "GoogleCloudVisionV1p3beta1ProductSearchResultsResult"
    },
    "GoogleCloudVisionV1p1beta1CropHintsParams": {
      "properties": {
        "aspectRatios": {
          "type": "array",
          "description": "Aspect ratios in floats, representing the ratio of the width to the height\nof the image. For example, if the desired aspect ratio is 4/3, the\ncorresponding float value should be 1.33333.  If not specified, the\nbest possible crop is returned. The number of provided aspect ratios is\nlimited to a maximum of 16; any aspect ratios provided after the 16th are\nignored.",
          "items": {
            "format": "float",
            "type": "number"
          }
        }
      },
      "type": "object",
      "description": "Parameters for crop hints annotation request.",
      "id": "GoogleCloudVisionV1p1beta1CropHintsParams"
    },
    "ImageProperties": {
      "description": "Stores image properties, such as dominant colors.",
      "id": "ImageProperties",
      "properties": {
        "dominantColors": {
          "description": "If present, dominant colors completed successfully.",
          "$ref": "DominantColorsAnnotation"
        }
      },
      "type": "object"
    },
    "AnnotateFileResponse": {
      "properties": {
        "error": {
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case.",
          "$ref": "Status"
        },
        "totalPages": {
          "description": "This field gives the total number of pages in the file.",
          "format": "int32",
          "type": "integer"
        },
        "responses": {
          "type": "array",
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set.",
          "items": {
            "$ref": "AnnotateImageResponse"
          }
        },
        "inputConfig": {
          "$ref": "InputConfig",
          "description": "Information about the file for which this response is generated."
        }
      },
      "id": "AnnotateFileResponse",
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1OutputConfig": {
      "properties": {
        "batchSize": {
          "type": "integer",
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32"
        },
        "gcsDestination": {
          "$ref": "GoogleCloudVisionV1p4beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        }
      },
      "description": "The desired output location and metadata.",
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1OutputConfig"
    },
    "GoogleCloudVisionV1p1beta1ImageSource": {
      "id": "GoogleCloudVisionV1p1beta1ImageSource",
      "description": "External image source (Google Cloud Storage or web URL image location).",
      "type": "object",
      "properties": {
        "gcsImageUri": {
          "type": "string",
          "description": "**Use `image_uri` instead.**\n\nThe Google Cloud Storage  URI of the form\n`gs://bucket_name/object_name`. Object versioning is not supported. See\n[Google Cloud Storage Request\nURIs](https://cloud.google.com/storage/docs/reference-uris) for more info."
        },
        "imageUri": {
          "description": "The URI of the source image. Can be either:\n\n1. A Google Cloud Storage URI of the form\n   `gs://bucket_name/object_name`. Object versioning is not supported. See\n   [Google Cloud Storage Request\n   URIs](https://cloud.google.com/storage/docs/reference-uris) for more\n   info.\n\n2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from\n   HTTP/HTTPS URLs, Google cannot guarantee that the request will be\n   completed. Your request may fail if the specified host denies the\n   request (e.g. due to request throttling or DOS prevention), or if Google\n   throttles requests to the site for abuse prevention. You should not\n   depend on externally-hosted images for production applications.\n\nWhen both `gcs_image_uri` and `image_uri` are specified, `image_uri` takes\nprecedence.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1TextAnnotation": {
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "id": "GoogleCloudVisionV1p3beta1TextAnnotation",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "UTF-8 text detected on the pages."
        },
        "pages": {
          "description": "List of pages detected by OCR.",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Page"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1CropHint": {
      "type": "object",
      "properties": {
        "importanceFraction": {
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "type": "number",
          "format": "float"
        },
        "boundingPoly": {
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale.",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of this being a salient region.  Range [0, 1]."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1CropHint",
      "description": "Single crop hint that is used to generate a new crop when serving an image."
    },
    "LocationInfo": {
      "type": "object",
      "id": "LocationInfo",
      "description": "Detected entity location information.",
      "properties": {
        "latLng": {
          "$ref": "LatLng",
          "description": "lat/long location coordinates."
        }
      }
    },
    "Product": {
      "description": "A Product contains ReferenceImages.",
      "properties": {
        "productLabels": {
          "items": {
            "$ref": "KeyValue"
          },
          "type": "array",
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet."
        },
        "productCategory": {
          "type": "string",
          "description": "Immutable. The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products."
        },
        "name": {
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product.",
          "type": "string"
        },
        "description": {
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long.",
          "type": "string"
        },
        "displayName": {
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Product"
    },
    "GoogleCloudVisionV1p2beta1InputConfig": {
      "id": "GoogleCloudVisionV1p2beta1InputConfig",
      "properties": {
        "content": {
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests.",
          "type": "string",
          "format": "byte"
        },
        "gcsSource": {
          "$ref": "GoogleCloudVisionV1p2beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mimeType": {
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The desired input location and metadata."
    },
    "GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse": {
      "id": "GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse",
      "description": "The response for a single offline file annotation request.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "The output location and metadata from AsyncAnnotateFileRequest.",
          "$ref": "GoogleCloudVisionV1p3beta1OutputConfig"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1ImageProperties": {
      "id": "GoogleCloudVisionV1p3beta1ImageProperties",
      "properties": {
        "dominantColors": {
          "description": "If present, dominant colors completed successfully.",
          "$ref": "GoogleCloudVisionV1p3beta1DominantColorsAnnotation"
        }
      },
      "description": "Stores image properties, such as dominant colors.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1AsyncAnnotateFileRequest": {
      "properties": {
        "imageContext": {
          "description": "Additional context that may accompany the image(s) in the file.",
          "$ref": "GoogleCloudVisionV1p1beta1ImageContext"
        },
        "inputConfig": {
          "$ref": "GoogleCloudVisionV1p1beta1InputConfig",
          "description": "Required. Information about the input file."
        },
        "features": {
          "description": "Required. Requested features.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Feature"
          },
          "type": "array"
        },
        "outputConfig": {
          "description": "Required. The desired output location and metadata (e.g. format).",
          "$ref": "GoogleCloudVisionV1p1beta1OutputConfig"
        }
      },
      "description": "An offline file annotation request.",
      "id": "GoogleCloudVisionV1p1beta1AsyncAnnotateFileRequest",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1Image": {
      "properties": {
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Image content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateImages requests. It does\nnot work for AsyncBatchAnnotateImages requests."
        },
        "source": {
          "$ref": "GoogleCloudVisionV1p1beta1ImageSource",
          "description": "Google Cloud Storage image location, or publicly-accessible image\nURL. If both `content` and `source` are provided for an image, `content`\ntakes precedence and is used to perform the image annotation request."
        }
      },
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1Image",
      "description": "Client image to perform Google Cloud Vision API tasks over."
    },
    "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark": {
      "type": "object",
      "id": "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark",
      "properties": {
        "position": {
          "description": "Face landmark position.",
          "$ref": "GoogleCloudVisionV1p1beta1Position"
        },
        "type": {
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "description": "Face landmark type."
        }
      },
      "description": "A face-specific landmark (for example, a face feature)."
    },
    "GoogleCloudVisionV1p2beta1Symbol": {
      "description": "A single symbol representation.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The actual UTF-8 representation of the symbol."
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the symbol."
        },
        "boundingBox": {
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Symbol",
      "type": "object"
    },
    "AnnotateImageResponse": {
      "type": "object",
      "description": "Response to an image annotation request.",
      "id": "AnnotateImageResponse",
      "properties": {
        "landmarkAnnotations": {
          "items": {
            "$ref": "EntityAnnotation"
          },
          "type": "array",
          "description": "If present, landmark detection has completed successfully."
        },
        "faceAnnotations": {
          "items": {
            "$ref": "FaceAnnotation"
          },
          "type": "array",
          "description": "If present, face detection has completed successfully."
        },
        "cropHintsAnnotation": {
          "$ref": "CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        },
        "imagePropertiesAnnotation": {
          "$ref": "ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "textAnnotations": {
          "items": {
            "$ref": "EntityAnnotation"
          },
          "type": "array",
          "description": "If present, text (OCR) detection has completed successfully."
        },
        "localizedObjectAnnotations": {
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score.",
          "type": "array",
          "items": {
            "$ref": "LocalizedObjectAnnotation"
          }
        },
        "fullTextAnnotation": {
          "$ref": "TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        },
        "context": {
          "$ref": "ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        },
        "logoAnnotations": {
          "items": {
            "$ref": "EntityAnnotation"
          },
          "description": "If present, logo detection has completed successfully.",
          "type": "array"
        },
        "webDetection": {
          "description": "If present, web detection has completed successfully.",
          "$ref": "WebDetection"
        },
        "labelAnnotations": {
          "type": "array",
          "items": {
            "$ref": "EntityAnnotation"
          },
          "description": "If present, label detection has completed successfully."
        },
        "productSearchResults": {
          "description": "If present, product search has completed successfully.",
          "$ref": "ProductSearchResults"
        },
        "safeSearchAnnotation": {
          "description": "If present, safe-search annotation has completed successfully.",
          "$ref": "SafeSearchAnnotation"
        },
        "error": {
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set.",
          "$ref": "Status"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1Paragraph": {
      "description": "Structural unit of text representing a number of words in certain order.",
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1]."
        },
        "words": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Word"
          },
          "description": "List of all words in this paragraph."
        },
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the paragraph."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Paragraph",
      "type": "object"
    },
    "GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult": {
      "properties": {
        "objectAnnotations": {
          "description": "List of generic predictions for the object in the bounding box.",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation"
          },
          "type": "array"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The bounding polygon around the product detected in the query image."
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResultsResult"
          }
        }
      },
      "description": "Information about the products similar to a single product in a query\nimage.",
      "type": "object",
      "id": "GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult"
    },
    "GoogleCloudVisionV1p4beta1Symbol": {
      "id": "GoogleCloudVisionV1p4beta1Symbol",
      "description": "A single symbol representation.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The actual UTF-8 representation of the symbol."
        },
        "property": {
          "description": "Additional information detected for the symbol.",
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty"
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      }
    },
    "SafeSearchAnnotation": {
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).",
      "id": "SafeSearchAnnotation",
      "properties": {
        "spoof": {
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "racy": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas.",
          "type": "string"
        },
        "medical": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image.",
          "type": "string"
        },
        "violence": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "description": "Likelihood that this image contains violent content.",
          "type": "string",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "adult": {
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        }
      },
      "type": "object"
    },
    "CropHintsAnnotation": {
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "id": "CropHintsAnnotation",
      "type": "object",
      "properties": {
        "cropHints": {
          "type": "array",
          "items": {
            "$ref": "CropHint"
          },
          "description": "Crop hint results."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1AnnotateImageResponse": {
      "description": "Response to an image annotation request.",
      "type": "object",
      "properties": {
        "landmarkAnnotations": {
          "description": "If present, landmark detection has completed successfully.",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1EntityAnnotation"
          },
          "type": "array"
        },
        "error": {
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set.",
          "$ref": "Status"
        },
        "fullTextAnnotation": {
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext.",
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotation"
        },
        "context": {
          "$ref": "GoogleCloudVisionV1p3beta1ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        },
        "safeSearchAnnotation": {
          "description": "If present, safe-search annotation has completed successfully.",
          "$ref": "GoogleCloudVisionV1p3beta1SafeSearchAnnotation"
        },
        "webDetection": {
          "description": "If present, web detection has completed successfully.",
          "$ref": "GoogleCloudVisionV1p3beta1WebDetection"
        },
        "imagePropertiesAnnotation": {
          "$ref": "GoogleCloudVisionV1p3beta1ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "labelAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1EntityAnnotation"
          },
          "type": "array",
          "description": "If present, label detection has completed successfully."
        },
        "productSearchResults": {
          "description": "If present, product search has completed successfully.",
          "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResults"
        },
        "cropHintsAnnotation": {
          "$ref": "GoogleCloudVisionV1p3beta1CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        },
        "localizedObjectAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation"
          },
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score."
        },
        "faceAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1FaceAnnotation"
          },
          "type": "array",
          "description": "If present, face detection has completed successfully."
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1EntityAnnotation"
          },
          "type": "array"
        },
        "textAnnotations": {
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1EntityAnnotation"
          },
          "type": "array",
          "description": "If present, text (OCR) detection has completed successfully."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1AnnotateImageResponse"
    },
    "GoogleCloudVisionV1p3beta1Paragraph": {
      "type": "object",
      "id": "GoogleCloudVisionV1p3beta1Paragraph",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1]."
        },
        "words": {
          "type": "array",
          "description": "List of all words in this paragraph.",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Word"
          }
        },
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
        },
        "property": {
          "description": "Additional information detected for the paragraph.",
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty"
        }
      },
      "description": "Structural unit of text representing a number of words in certain order."
    },
    "WebLabel": {
      "id": "WebLabel",
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Label to provide extra metadata for the web detection."
    },
    "GoogleCloudVisionV1p4beta1ReferenceImage": {
      "id": "GoogleCloudVisionV1p4beta1ReferenceImage",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The Google Cloud Storage URI of the reference image.\n\nThe URI must start with `gs://`."
        },
        "name": {
          "description": "The resource name of the reference image.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.\n\nThis field is ignored when creating a reference image.",
          "type": "string"
        },
        "boundingPolys": {
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly"
          },
          "description": "Optional. Bounding polygons around the areas of interest in the reference image.\nIf this field is empty, the system will try to detect regions of\ninterest. At most 10 bounding polygons will be used.\n\nThe provided shape is converted into a non-rotated rectangle. Once\nconverted, the small edge of the rectangle must be greater than or equal\nto 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5\nis not).",
          "type": "array"
        }
      },
      "description": "A `ReferenceImage` represents a product image and its associated metadata,\nsuch as bounding boxes.",
      "type": "object"
    },
    "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "description": "Required. The list of file annotation requests. Right now we support only one\nAnnotateFileRequest in BatchAnnotateFilesRequest.",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AnnotateFileRequest"
          }
        },
        "parent": {
          "type": "string",
          "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest",
      "description": "A list of requests to annotate files using the BatchAnnotateFiles API."
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "kind": "discovery#restDescription",
  "baseUrl": "https://vision.googleapis.com/",
  "resources": {
    "files": {
      "methods": {
        "asyncBatchAnnotate": {
          "flatPath": "v1p1beta1/files:asyncBatchAnnotate",
          "request": {
            "$ref": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest"
          },
          "path": "v1p1beta1/files:asyncBatchAnnotate",
          "description": "Run asynchronous image detection and annotation for a list of generic\nfiles, such as PDF files, which may contain multiple pages and multiple\nimages per page. Progress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).",
          "httpMethod": "POST",
          "response": {
            "$ref": "Operation"
          },
          "id": "vision.files.asyncBatchAnnotate",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "parameterOrder": []
        },
        "annotate": {
          "flatPath": "v1p1beta1/files:annotate",
          "response": {
            "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse"
          },
          "request": {
            "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest"
          },
          "id": "vision.files.annotate",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "description": "Service that performs image detection and annotation for a batch of files.\nNow only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported.\n\nThis service will extract at most 5 (customers can specify which 5 in\nAnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each\nfile provided and perform detection and annotation for each image\nextracted.",
          "parameters": {},
          "path": "v1p1beta1/files:annotate",
          "parameterOrder": [],
          "httpMethod": "POST"
        }
      }
    },
    "projects": {
      "resources": {
        "images": {
          "methods": {
            "asyncBatchAnnotate": {
              "response": {
                "$ref": "Operation"
              },
              "request": {
                "$ref": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest"
              },
              "description": "Run asynchronous image detection and annotation for a list of images.\n\nProgress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results).\n\nThis service will write image annotation outputs to json files in customer\nGCS bucket, each json file containing BatchAnnotateImagesResponse proto.",
              "path": "v1p1beta1/{+parent}/images:asyncBatchAnnotate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "flatPath": "v1p1beta1/projects/{projectsId}/images:asyncBatchAnnotate",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "id": "vision.projects.images.asyncBatchAnnotate"
            },
            "annotate": {
              "description": "Run image detection and annotation for a batch of images.",
              "request": {
                "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest"
              },
              "response": {
                "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse"
              },
              "path": "v1p1beta1/{+parent}/images:annotate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "id": "vision.projects.images.annotate",
              "flatPath": "v1p1beta1/projects/{projectsId}/images:annotate",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        },
        "files": {
          "methods": {
            "annotate": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "path": "v1p1beta1/{+parent}/files:annotate",
              "flatPath": "v1p1beta1/projects/{projectsId}/files:annotate",
              "description": "Service that performs image detection and annotation for a batch of files.\nNow only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported.\n\nThis service will extract at most 5 (customers can specify which 5 in\nAnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each\nfile provided and perform detection and annotation for each image\nextracted.",
              "response": {
                "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse"
              },
              "httpMethod": "POST",
              "id": "vision.projects.files.annotate",
              "parameters": {
                "parent": {
                  "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest"
              }
            },
            "asyncBatchAnnotate": {
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`."
                }
              },
              "flatPath": "v1p1beta1/projects/{projectsId}/files:asyncBatchAnnotate",
              "description": "Run asynchronous image detection and annotation for a list of generic\nfiles, such as PDF files, which may contain multiple pages and multiple\nimages per page. Progress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).",
              "path": "v1p1beta1/{+parent}/files:asyncBatchAnnotate",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "response": {
                "$ref": "Operation"
              },
              "id": "vision.projects.files.asyncBatchAnnotate",
              "request": {
                "$ref": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest"
              },
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "locations": {
          "resources": {
            "images": {
              "methods": {
                "annotate": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse"
                  },
                  "path": "v1p1beta1/{+parent}/images:annotate",
                  "request": {
                    "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest"
                  },
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/images:annotate",
                  "id": "vision.projects.locations.images.annotate",
                  "parameters": {
                    "parent": {
                      "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Run image detection and annotation for a batch of images."
                },
                "asyncBatchAnnotate": {
                  "description": "Run asynchronous image detection and annotation for a list of images.\n\nProgress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results).\n\nThis service will write image annotation outputs to json files in customer\nGCS bucket, each json file containing BatchAnnotateImagesResponse proto.",
                  "path": "v1p1beta1/{+parent}/images:asyncBatchAnnotate",
                  "request": {
                    "$ref": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest"
                  },
                  "id": "vision.projects.locations.images.asyncBatchAnnotate",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/images:asyncBatchAnnotate"
                }
              }
            },
            "files": {
              "methods": {
                "annotate": {
                  "response": {
                    "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse"
                  },
                  "path": "v1p1beta1/{+parent}/files:annotate",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "vision.projects.locations.files.annotate",
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/files:annotate",
                  "description": "Service that performs image detection and annotation for a batch of files.\nNow only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported.\n\nThis service will extract at most 5 (customers can specify which 5 in\nAnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each\nfile provided and perform detection and annotation for each image\nextracted.",
                  "httpMethod": "POST"
                },
                "asyncBatchAnnotate": {
                  "path": "v1p1beta1/{+parent}/files:asyncBatchAnnotate",
                  "request": {
                    "$ref": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Run asynchronous image detection and annotation for a list of generic\nfiles, such as PDF files, which may contain multiple pages and multiple\nimages per page. Progress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).",
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/files:asyncBatchAnnotate",
                  "id": "vision.projects.locations.files.asyncBatchAnnotate",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "images": {
      "methods": {
        "asyncBatchAnnotate": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "parameterOrder": [],
          "id": "vision.images.asyncBatchAnnotate",
          "httpMethod": "POST",
          "request": {
            "$ref": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "path": "v1p1beta1/images:asyncBatchAnnotate",
          "parameters": {},
          "description": "Run asynchronous image detection and annotation for a list of images.\n\nProgress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results).\n\nThis service will write image annotation outputs to json files in customer\nGCS bucket, each json file containing BatchAnnotateImagesResponse proto.",
          "flatPath": "v1p1beta1/images:asyncBatchAnnotate"
        },
        "annotate": {
          "request": {
            "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest"
          },
          "httpMethod": "POST",
          "flatPath": "v1p1beta1/images:annotate",
          "description": "Run image detection and annotation for a batch of images.",
          "id": "vision.images.annotate",
          "response": {
            "$ref": "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse"
          },
          "parameters": {},
          "path": "v1p1beta1/images:annotate",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "parameterOrder": []
        }
      }
    }
  },
  "mtlsRootUrl": "https://vision.mtls.googleapis.com/",
  "title": "Cloud Vision API"
}
