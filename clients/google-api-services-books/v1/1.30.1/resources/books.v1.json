{
  "rootUrl": "https://books.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "books",
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "batchPath": "batch",
  "title": "Books API",
  "ownerName": "Google",
  "resources": {
    "series": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "Series"
          },
          "parameters": {
            "series_id": {
              "repeated": true,
              "location": "query",
              "description": "String that identifies the series",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/series/get",
          "path": "books/v1/series/get",
          "id": "books.series.get",
          "description": "Returns Series metadata for the given series ids."
        }
      },
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "flatPath": "books/v1/series/membership/get",
              "id": "books.series.membership.get",
              "path": "books/v1/series/membership/get",
              "description": "Returns Series membership data given the series id.",
              "response": {
                "$ref": "Seriesmembership"
              },
              "parameterOrder": [],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "page_size": {
                  "format": "uint32",
                  "description": "Number of maximum results per page to be included in the response.",
                  "type": "integer",
                  "location": "query"
                },
                "series_id": {
                  "location": "query",
                  "description": "String that identifies the series",
                  "type": "string"
                },
                "page_token": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "description": "Returns a list of offline dictionary metadata available",
          "response": {
            "$ref": "Metadata"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to request the data."
            }
          },
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "id": "books.dictionary.listOfflineMetadata",
          "path": "books/v1/dictionary/listOfflineMetadata"
        }
      }
    },
    "mylibrary": {
      "resources": {
        "annotations": {
          "methods": {
            "delete": {
              "description": "Deletes an annotation.",
              "parameterOrder": [
                "annotationId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "annotationId": {
                  "description": "The ID for the annotation to delete.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "id": "books.mylibrary.annotations.delete",
              "path": "books/v1/mylibrary/annotations/{annotationId}"
            },
            "insert": {
              "description": "Inserts a new annotation.",
              "request": {
                "$ref": "Annotation"
              },
              "httpMethod": "POST",
              "parameterOrder": [],
              "response": {
                "$ref": "Annotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "showOnlySummaryInResponse": {
                  "description": "Requests that only the summary of the specified layer be provided in the\nresponse.",
                  "type": "boolean",
                  "location": "query"
                },
                "annotationId": {
                  "type": "string",
                  "location": "query",
                  "description": "The ID for the annotation to insert."
                },
                "country": {
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "path": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.insert"
            },
            "summary": {
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "parameterOrder": [],
              "httpMethod": "POST",
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "description": "Volume id to get the summary for.",
                  "type": "string"
                },
                "layerIds": {
                  "description": "Array of layer IDs to get the summary for.",
                  "type": "string",
                  "repeated": true,
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "id": "books.mylibrary.annotations.summary",
              "path": "books/v1/mylibrary/annotations/summary",
              "description": "Gets the summary of specified layers."
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "showDeleted": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false."
                },
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive)."
                },
                "layerId": {
                  "location": "query",
                  "description": "The layer ID to limit annotation by.",
                  "type": "string"
                },
                "contentVersion": {
                  "location": "query",
                  "description": "The content version for the requested volume.",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "layerIds": {
                  "description": "The layer ID(s) to limit annotation by.",
                  "type": "string",
                  "repeated": true,
                  "location": "query"
                },
                "maxResults": {
                  "location": "query",
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "type": "integer"
                },
                "volumeId": {
                  "location": "query",
                  "description": "The volume to restrict annotations to.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.list",
              "path": "books/v1/mylibrary/annotations",
              "description": "Retrieves a list of annotations, possibly filtered.",
              "response": {
                "$ref": "Annotations"
              },
              "parameterOrder": [],
              "httpMethod": "GET"
            },
            "update": {
              "request": {
                "$ref": "Annotation"
              },
              "description": "Updates an existing annotation.",
              "response": {
                "$ref": "Annotation"
              },
              "parameterOrder": [
                "annotationId"
              ],
              "httpMethod": "PUT",
              "parameters": {
                "annotationId": {
                  "location": "path",
                  "description": "The ID for the annotation to update.",
                  "type": "string",
                  "required": true
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "id": "books.mylibrary.annotations.update",
              "path": "books/v1/mylibrary/annotations/{annotationId}"
            }
          }
        },
        "readingpositions": {
          "methods": {
            "get": {
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "id": "books.mylibrary.readingpositions.get",
              "description": "Retrieves my reading position information for a volume.",
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId"
              ],
              "response": {
                "$ref": "ReadingPosition"
              },
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeId": {
                  "location": "path",
                  "description": "ID of volume for which to retrieve a reading position.",
                  "type": "string",
                  "required": true
                },
                "contentVersion": {
                  "description": "Volume content version for which this reading position is requested.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "setPosition": {
              "httpMethod": "POST",
              "parameterOrder": [
                "volumeId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeId": {
                  "description": "ID of volume for which to update the reading position.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "position": {
                  "description": "Position string for the new volume reading position.",
                  "type": "string",
                  "location": "query"
                },
                "action": {
                  "location": "query",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "description": "Action that caused this reading position to be set.",
                  "type": "string"
                },
                "timestamp": {
                  "location": "query",
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "type": "string"
                },
                "contentVersion": {
                  "location": "query",
                  "description": "Volume content version for which this reading position applies.",
                  "type": "string"
                },
                "deviceCookie": {
                  "type": "string",
                  "location": "query",
                  "description": "Random persistent device cookie optional on set position."
                }
              },
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "id": "books.mylibrary.readingpositions.setPosition",
              "description": "Sets my reading position information for a volume."
            }
          }
        },
        "bookshelves": {
          "methods": {
            "list": {
              "parameterOrder": [],
              "httpMethod": "GET",
              "response": {
                "$ref": "Bookshelves"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves",
              "id": "books.mylibrary.bookshelves.list",
              "path": "books/v1/mylibrary/bookshelves",
              "description": "Retrieves a list of bookshelves belonging to the authenticated user."
            },
            "clearVolumes": {
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "shelf"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "description": "Clears all volumes from a bookshelf."
            },
            "addVolume": {
              "description": "Adds a volume to a bookshelf.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "shelf"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "reason": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "description": "The reason for which the book is added to the library."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf to which to add a volume.",
                  "type": "string",
                  "required": true
                },
                "volumeId": {
                  "location": "query",
                  "description": "ID of volume to add.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "id": "books.mylibrary.bookshelves.addVolume",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume"
            },
            "get": {
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated\nuser.",
              "httpMethod": "GET",
              "response": {
                "$ref": "Bookshelf"
              },
              "parameterOrder": [
                "shelf"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "shelf": {
                  "description": "ID of bookshelf to retrieve.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "id": "books.mylibrary.bookshelves.get"
            },
            "moveVolume": {
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "shelf"
              ],
              "httpMethod": "POST",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "shelf": {
                  "description": "ID of bookshelf with the volume.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "volumeId": {
                  "location": "query",
                  "description": "ID of volume to move.",
                  "type": "string"
                },
                "volumePosition": {
                  "format": "int32",
                  "description": "Position on shelf to move the item (0 puts the item before the current\nfirst item, 1 puts it between the first and the second and so on.)",
                  "type": "integer",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "id": "books.mylibrary.bookshelves.moveVolume",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "description": "Moves a volume within a bookshelf."
            },
            "removeVolume": {
              "httpMethod": "POST",
              "parameterOrder": [
                "shelf"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "shelf": {
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "volumeId": {
                  "description": "ID of volume to remove.",
                  "type": "string",
                  "location": "query"
                },
                "reason": {
                  "location": "query",
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "description": "The reason for which the book is removed from the library.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "id": "books.mylibrary.bookshelves.removeVolume",
              "description": "Removes a volume from a bookshelf."
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "Volumes"
                  },
                  "parameterOrder": [
                    "shelf"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "q": {
                      "location": "query",
                      "description": "Full-text search query string in this bookshelf.",
                      "type": "string"
                    },
                    "source": {
                      "type": "string",
                      "location": "query",
                      "description": "String to identify the originator of this request."
                    },
                    "shelf": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The bookshelf ID or name retrieve volumes for."
                    },
                    "maxResults": {
                      "location": "query",
                      "format": "uint32",
                      "description": "Maximum number of results to return",
                      "type": "integer"
                    },
                    "country": {
                      "type": "string",
                      "location": "query",
                      "description": "ISO-3166-1 code to override the IP-based location."
                    },
                    "showPreorders": {
                      "description": "Set to true to show pre-ordered books. Defaults to false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "projection": {
                      "location": "query",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "description": "Restrict information returned to a set of selected fields.",
                      "type": "string"
                    },
                    "startIndex": {
                      "location": "query",
                      "format": "uint32",
                      "description": "Index of the first element to return (starts at 0)",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "description": "Gets volume information for volumes on a bookshelf."
                }
              }
            }
          }
        }
      }
    },
    "myconfig": {
      "methods": {
        "releaseDownloadAccess": {
          "httpMethod": "POST",
          "response": {
            "$ref": "DownloadAccesses"
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "cpksver": {
              "location": "query",
              "description": "The device/version ID from which to release the restriction.",
              "type": "string"
            },
            "volumeIds": {
              "location": "query",
              "description": "The volume(s) to release restrictions for.",
              "type": "string",
              "repeated": true
            }
          },
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "id": "books.myconfig.releaseDownloadAccess",
          "description": "Release downloaded content access restriction."
        },
        "requestAccess": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "RequestAccessData"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "licenseTypes": {
              "description": "The type of access license to request. If not specified, the default is\nBOTH.",
              "type": "string",
              "location": "query",
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ]
            },
            "nonce": {
              "location": "query",
              "description": "The client nonce value.",
              "type": "string"
            },
            "cpksver": {
              "location": "query",
              "description": "The device/version ID from which to request the restrictions.",
              "type": "string"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The volume to request concurrent/download restrictions for."
            }
          },
          "flatPath": "books/v1/myconfig/requestAccess",
          "path": "books/v1/myconfig/requestAccess",
          "id": "books.myconfig.requestAccess",
          "description": "Request concurrent and download access restrictions."
        },
        "syncVolumeLicenses": {
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "id": "books.myconfig.syncVolumeLicenses",
          "description": "Request downloaded content access for specified volumes on the My eBooks\nshelf.",
          "httpMethod": "POST",
          "response": {
            "$ref": "Volumes"
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "volumeIds": {
              "description": "The volume(s) to request download restrictions for.",
              "type": "string",
              "repeated": true,
              "location": "query"
            },
            "nonce": {
              "location": "query",
              "description": "The client nonce value.",
              "type": "string"
            },
            "includeNonComicsSeries": {
              "location": "query",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean"
            },
            "showPreorders": {
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to release the restriction."
            },
            "features": {
              "description": "List of features supported by the client, i.e., 'RENTALS'",
              "type": "string",
              "repeated": true,
              "location": "query",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ]
            },
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          }
        },
        "getUserSettings": {
          "httpMethod": "GET",
          "response": {
            "$ref": "Usersettings"
          },
          "parameterOrder": [],
          "parameters": {
            "country": {
              "location": "query",
              "description": "Unused. Added only to workaround TEX mandatory request template requirement",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/getUserSettings",
          "path": "books/v1/myconfig/getUserSettings",
          "id": "books.myconfig.getUserSettings",
          "description": "Gets the current settings for the user."
        },
        "updateUserSettings": {
          "description": "Sets the settings for the user. If a sub-object is specified, it will\noverwrite the existing sub-object stored in the server. Unspecified\nsub-objects will retain the existing value.",
          "request": {
            "$ref": "Usersettings"
          },
          "response": {
            "$ref": "Usersettings"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {},
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "id": "books.myconfig.updateUserSettings",
          "path": "books/v1/myconfig/updateUserSettings"
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "Notification"
          },
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating notification title and body.",
              "type": "string"
            },
            "notification_id": {
              "location": "query",
              "description": "String to identify the notification.",
              "type": "string"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/notification/get",
          "path": "books/v1/notification/get",
          "id": "books.notification.get",
          "description": "Returns notification details for a given notification id."
        }
      }
    },
    "promooffer": {
      "methods": {
        "accept": {
          "id": "books.promooffer.accept",
          "path": "books/v1/promooffer/accept",
          "description": "Accepts the promo offer.",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {
            "manufacturer": {
              "location": "query",
              "description": "device manufacturer",
              "type": "string"
            },
            "serial": {
              "location": "query",
              "description": "device serial",
              "type": "string"
            },
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            },
            "volumeId": {
              "location": "query",
              "description": "Volume id to exercise the offer",
              "type": "string"
            },
            "device": {
              "location": "query",
              "description": "device device",
              "type": "string"
            },
            "androidId": {
              "description": "device android_id",
              "type": "string",
              "location": "query"
            },
            "offerId": {
              "location": "query",
              "type": "string"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/promooffer/accept"
        },
        "get": {
          "path": "books/v1/promooffer/get",
          "id": "books.promooffer.get",
          "description": "Returns a list of promo offers available to the user",
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "Offers"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            },
            "model": {
              "location": "query",
              "description": "device model",
              "type": "string"
            },
            "serial": {
              "location": "query",
              "description": "device serial",
              "type": "string"
            },
            "manufacturer": {
              "location": "query",
              "description": "device manufacturer",
              "type": "string"
            },
            "product": {
              "type": "string",
              "location": "query",
              "description": "device product"
            }
          },
          "flatPath": "books/v1/promooffer/get"
        },
        "dismiss": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "manufacturer": {
              "location": "query",
              "description": "device manufacturer",
              "type": "string"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            },
            "device": {
              "location": "query",
              "description": "device device",
              "type": "string"
            },
            "androidId": {
              "type": "string",
              "location": "query",
              "description": "device android_id"
            },
            "offerId": {
              "description": "Offer to dimiss",
              "type": "string",
              "location": "query"
            },
            "model": {
              "location": "query",
              "description": "device model",
              "type": "string"
            }
          },
          "flatPath": "books/v1/promooffer/dismiss",
          "id": "books.promooffer.dismiss",
          "path": "books/v1/promooffer/dismiss",
          "description": "Marks the promo offer as dismissed."
        }
      }
    },
    "volumes": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "response": {
            "$ref": "Volumes"
          },
          "parameterOrder": [],
          "parameters": {
            "orderBy": {
              "location": "query",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "description": "Sort search results.",
              "type": "string"
            },
            "projection": {
              "description": "Restrict information returned to a set of selected fields.",
              "type": "string",
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ]
            },
            "printType": {
              "description": "Restrict to books or magazines.",
              "type": "string",
              "location": "query",
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ]
            },
            "filter": {
              "description": "Filter search results.",
              "type": "string",
              "location": "query",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ]
            },
            "startIndex": {
              "location": "query",
              "format": "uint32",
              "description": "Index of the first result to return (starts at 0)",
              "type": "integer"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "langRestrict": {
              "location": "query",
              "description": "Restrict results to books with this language code.",
              "type": "string"
            },
            "showPreorders": {
              "location": "query",
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "type": "boolean"
            },
            "download": {
              "location": "query",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "description": "Restrict to volumes by download availability.",
              "type": "string"
            },
            "libraryRestrict": {
              "location": "query",
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ],
              "description": "Restrict search to this user's library.",
              "type": "string"
            },
            "partner": {
              "description": "Restrict and brand results for partner ID.",
              "type": "string",
              "location": "query"
            },
            "q": {
              "location": "query",
              "description": "Full-text search query string.",
              "type": "string"
            },
            "maxResults": {
              "format": "uint32",
              "description": "Maximum number of results to return.",
              "type": "integer",
              "location": "query"
            },
            "maxAllowedMaturityRating": {
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/volumes",
          "path": "books/v1/volumes",
          "id": "books.volumes.list",
          "description": "Performs a book search."
        },
        "get": {
          "response": {
            "$ref": "Volume"
          },
          "parameterOrder": [
            "volumeId"
          ],
          "httpMethod": "GET",
          "parameters": {
            "source": {
              "location": "query",
              "description": "string  to identify the originator of this request.",
              "type": "string"
            },
            "user_library_consistent_read": {
              "location": "query",
              "type": "boolean"
            },
            "volumeId": {
              "location": "path",
              "description": "ID of volume to retrieve.",
              "type": "string",
              "required": true
            },
            "includeNonComicsSeries": {
              "location": "query",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean"
            },
            "country": {
              "location": "query",
              "description": "ISO-3166-1 code to override the IP-based location.",
              "type": "string"
            },
            "projection": {
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "description": "Restrict information returned to a set of selected fields.",
              "type": "string"
            },
            "partner": {
              "description": "Brand results for partner ID.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/volumes/{volumeId}",
          "id": "books.volumes.get",
          "path": "books/v1/volumes/{volumeId}",
          "description": "Gets volume information for a single volume."
        }
      },
      "resources": {
        "associated": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "location": "path",
                  "description": "ID of the source volume.",
                  "type": "string",
                  "required": true
                },
                "maxAllowedMaturityRating": {
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ]
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "association": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ],
                  "description": "Association type."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "path": "books/v1/volumes/{volumeId}/associated",
              "id": "books.volumes.associated.list",
              "description": "Return a list of associated books."
            }
          }
        },
        "recommended": {
          "methods": {
            "list": {
              "id": "books.volumes.recommended.list",
              "path": "books/v1/volumes/recommended",
              "description": "Return a list of recommended books for the current user.",
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "maxAllowedMaturityRating": {
                  "location": "query",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
                  "type": "string"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/volumes/recommended"
            },
            "rate": {
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "description": "ID of the source volume.",
                  "type": "string"
                },
                "rating": {
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "description": "Rating to be given to the volume.",
                  "type": "string",
                  "location": "query"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/recommended/rate",
              "id": "books.volumes.recommended.rate",
              "path": "books/v1/volumes/recommended/rate",
              "description": "Rate a recommended book for the current user.",
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "parameterOrder": [],
              "httpMethod": "POST"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/useruploaded",
              "id": "books.volumes.useruploaded.list",
              "description": "Return a list of books uploaded by the current user.",
              "httpMethod": "GET",
              "parameterOrder": [],
              "response": {
                "$ref": "Volumes"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "maxResults": {
                  "format": "uint32",
                  "description": "Maximum number of results to return.",
                  "type": "integer",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "description": "The ids of the volumes to be returned. If not specified all that match the\nprocessingState are returned.",
                  "type": "string",
                  "repeated": true,
                  "location": "query"
                },
                "processingState": {
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "type": "string",
                  "repeated": true,
                  "location": "query",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ]
                },
                "startIndex": {
                  "location": "query",
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/volumes/useruploaded"
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "maxResults": {
                  "location": "query",
                  "format": "uint32",
                  "description": "Maximum number of results to return.",
                  "type": "integer"
                },
                "acquireMethod": {
                  "repeated": true,
                  "location": "query",
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "description": "How the book was acquired",
                  "type": "string"
                },
                "processingState": {
                  "repeated": true,
                  "location": "query",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned.\nApplicable only if the UPLOADED is specified in the acquireMethod.",
                  "type": "string"
                },
                "country": {
                  "location": "query",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "type": "string"
                },
                "startIndex": {
                  "location": "query",
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for\ngenerating recommendations.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/volumes/mybooks",
              "id": "books.volumes.mybooks.list",
              "path": "books/v1/volumes/mybooks",
              "description": "Return a list of books in My Library."
            }
          }
        }
      }
    },
    "layers": {
      "methods": {
        "list": {
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "id": "books.layers.list",
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "description": "List the layer summaries for a volume.",
          "parameterOrder": [
            "volumeId"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "Layersummaries"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "contentVersion": {
              "location": "query",
              "description": "The content version for the requested volume.",
              "type": "string"
            },
            "pageToken": {
              "description": "The value of the nextToken from the previous page.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "format": "uint32",
              "description": "Maximum number of results to return",
              "type": "integer"
            },
            "volumeId": {
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string",
              "required": true
            }
          }
        },
        "get": {
          "response": {
            "$ref": "Layersummary"
          },
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "summaryId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID for the layer to get the summary for."
            },
            "volumeId": {
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string",
              "required": true
            },
            "contentVersion": {
              "description": "The content version for the requested volume.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "id": "books.layers.get",
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "description": "Gets the layer summary for a volume."
        }
      },
      "resources": {
        "annotationData": {
          "methods": {
            "list": {
              "parameters": {
                "w": {
                  "location": "query",
                  "format": "int32",
                  "description": "The requested pixel width for any images. If width is provided height must\nalso be provided.",
                  "type": "integer"
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The content version for the requested volume."
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "annotationDataId": {
                  "repeated": true,
                  "location": "query",
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this\nis set.",
                  "type": "string"
                },
                "maxResults": {
                  "location": "query",
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "type": "integer"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "layerId": {
                  "location": "path",
                  "description": "The ID for the layer to get the annotation data.",
                  "type": "string",
                  "required": true
                },
                "updatedMax": {
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The value of the nextToken from the previous page."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "location": "path",
                  "description": "The volume to retrieve annotation data for.",
                  "type": "string",
                  "required": true
                },
                "h": {
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must\nalso be provided.",
                  "type": "integer",
                  "location": "query"
                },
                "scale": {
                  "location": "query",
                  "format": "int32",
                  "description": "The requested scale for the image.",
                  "type": "integer"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "id": "books.layers.annotationData.list",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "description": "Gets the annotation data for a volume and layer.",
              "response": {
                "$ref": "Annotationsdata"
              },
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "httpMethod": "GET"
            },
            "get": {
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "id": "books.layers.annotationData.get",
              "description": "Gets the annotation data.",
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId"
              ],
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "annotationDataId": {
                  "description": "The ID of the annotation data to retrieve.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The volume to retrieve annotations for."
                },
                "h": {
                  "location": "query",
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must\nalso be provided.",
                  "type": "integer"
                },
                "scale": {
                  "location": "query",
                  "format": "int32",
                  "description": "The requested scale for the image.",
                  "type": "integer"
                },
                "w": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The requested pixel width for any images. If width is provided height must\nalso be provided."
                },
                "layerId": {
                  "description": "The ID for the layer to get the annotations.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "allowWebDefinitions": {
                  "description": "For the dictionary layer. Whether or not to allow web definitions.",
                  "type": "boolean",
                  "location": "query"
                },
                "contentVersion": {
                  "location": "query",
                  "description": "The content version for the volume you are trying to retrieve.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}"
            }
          }
        },
        "volumeAnnotations": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumeannotations"
              },
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "type": "string",
                  "location": "query"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'."
                },
                "maxResults": {
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "location": "query"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false.",
                  "type": "boolean"
                },
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive)."
                },
                "layerId": {
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "type": "string",
                  "required": true
                },
                "volumeAnnotationsVersion": {
                  "location": "query",
                  "description": "The version of the volume annotations that you are requesting.",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "startPosition": {
                  "location": "query",
                  "description": "The start position to start retrieving data from.",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "location": "path",
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "required": true
                },
                "endPosition": {
                  "location": "query",
                  "description": "The end position to end retrieving data from.",
                  "type": "string"
                },
                "endOffset": {
                  "description": "The end offset to end retrieving data from.",
                  "type": "string",
                  "location": "query"
                },
                "startOffset": {
                  "description": "The start offset to start retrieving data from.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "id": "books.layers.volumeAnnotations.list",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "description": "Gets the volume annotations for a volume and layer."
            },
            "get": {
              "description": "Gets the volume annotation.",
              "httpMethod": "GET",
              "response": {
                "$ref": "Volumeannotation"
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "parameters": {
                "annotationId": {
                  "location": "path",
                  "description": "The ID of the volume annotation to retrieve.",
                  "type": "string",
                  "required": true
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "layerId": {
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "type": "string",
                  "required": true
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "id": "books.layers.volumeAnnotations.get"
            }
          }
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "path": "books/v1/personalizedstream/get",
          "id": "books.personalizedstream.get",
          "description": "Returns a stream of personalized book clusters",
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "Discoveryclusters"
          },
          "parameters": {
            "maxAllowedMaturityRating": {
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
              "type": "string"
            },
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/personalizedstream/get"
        }
      }
    },
    "cloudloading": {
      "methods": {
        "deleteBook": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "volumeId": {
              "location": "query",
              "description": "The id of the book to be removed.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/cloudloading/deleteBook",
          "path": "books/v1/cloudloading/deleteBook",
          "id": "books.cloudloading.deleteBook",
          "description": "Remove the book and its contents"
        },
        "addBook": {
          "description": "Add a user-upload volume and triggers processing.",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "type": "string",
              "location": "query"
            },
            "upload_client_token": {
              "description": "Scotty upload token.",
              "type": "string",
              "location": "query"
            },
            "mime_type": {
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "type": "string",
              "location": "query"
            },
            "drive_document_id": {
              "description": "A drive document id. The upload_client_token must not be set.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/cloudloading/addBook",
          "id": "books.cloudloading.addBook",
          "path": "books/v1/cloudloading/addBook"
        },
        "updateBook": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/cloudloading/updateBook",
          "path": "books/v1/cloudloading/updateBook",
          "id": "books.cloudloading.updateBook",
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "description": "Updates a user-upload volume."
        }
      }
    },
    "bookshelves": {
      "methods": {
        "list": {
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "id": "books.bookshelves.list",
          "path": "books/v1/users/{userId}/bookshelves",
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "response": {
            "$ref": "Bookshelves"
          },
          "parameterOrder": [
            "userId"
          ],
          "httpMethod": "GET",
          "parameters": {
            "userId": {
              "description": "ID of user for whom to retrieve bookshelves.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "response": {
            "$ref": "Bookshelf"
          },
          "parameters": {
            "userId": {
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves.",
              "type": "string",
              "required": true
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "shelf": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "ID of bookshelf to retrieve."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "id": "books.bookshelves.get",
          "description": "Retrieves metadata for a specific bookshelf for the specified user."
        }
      },
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "httpMethod": "GET",
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "startIndex": {
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "description": "Index of the first element to return (starts at 0)"
                },
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf to retrieve volumes.",
                  "type": "string",
                  "required": true
                },
                "maxResults": {
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "userId": {
                  "location": "path",
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "type": "string",
                  "required": true
                },
                "showPreorders": {
                  "location": "query",
                  "description": "Set to true to show pre-ordered books. Defaults to false.",
                  "type": "boolean"
                }
              },
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "id": "books.bookshelves.volumes.list"
            }
          }
        }
      }
    },
    "familysharing": {
      "methods": {
        "unshare": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "volumeId": {
              "location": "query",
              "description": "The volume to unshare.",
              "type": "string"
            },
            "docId": {
              "type": "string",
              "location": "query",
              "description": "The docid to unshare."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/familysharing/unshare",
          "id": "books.familysharing.unshare",
          "path": "books/v1/familysharing/unshare",
          "description": "Initiates revoking content that has already been shared with the user's\nfamily. Empty response indicates success."
        },
        "share": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The volume to share."
            },
            "docId": {
              "type": "string",
              "location": "query",
              "description": "The docid to share."
            }
          },
          "flatPath": "books/v1/familysharing/share",
          "path": "books/v1/familysharing/share",
          "id": "books.familysharing.share",
          "description": "Initiates sharing of the content with the user's family. Empty response\nindicates success."
        },
        "getFamilyInfo": {
          "response": {
            "$ref": "FamilyInfo"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "id": "books.familysharing.getFamilyInfo",
          "path": "books/v1/familysharing/getFamilyInfo",
          "description": "Gets information regarding the family that the user is part of."
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategories": {
          "description": "List categories for onboarding experience.",
          "response": {
            "$ref": "Category"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string"
            }
          },
          "flatPath": "books/v1/onboarding/listCategories",
          "id": "books.onboarding.listCategories",
          "path": "books/v1/onboarding/listCategories"
        },
        "listCategoryVolumes": {
          "path": "books/v1/onboarding/listCategoryVolumes",
          "id": "books.onboarding.listCategoryVolumes",
          "description": "List available volumes under categories for onboarding experience.",
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "Volume2"
          },
          "parameters": {
            "maxAllowedMaturityRating": {
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "description": "The maximum allowed maturity rating of returned volumes. Books with a\nhigher maturity rating are filtered out.",
              "type": "string"
            },
            "categoryId": {
              "repeated": true,
              "location": "query",
              "description": "List of category ids requested.",
              "type": "string"
            },
            "pageToken": {
              "description": "The value of the nextToken from the previous page.",
              "type": "string",
              "location": "query"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string"
            },
            "pageSize": {
              "format": "uint32",
              "description": "Number of maximum results per page to be included in the response.",
              "type": "integer",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/onboarding/listCategoryVolumes"
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    }
  },
  "version": "v1",
  "baseUrl": "https://books.googleapis.com/",
  "servicePath": "",
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "kind": "discovery#restDescription",
  "basePath": "",
  "revision": "20200506",
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "id": "books:v1",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "Seriesmembership": {
      "properties": {
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "member": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "id": "Seriesmembership",
      "type": "object"
    },
    "DownloadAccesses": {
      "type": "object",
      "properties": {
        "downloadAccessList": {
          "description": "A list of download access responses.",
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "DownloadAccesses"
    },
    "Volume2": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "id": "Volume2"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "Volumeseriesinfo": {
      "properties": {
        "bookDisplayNumber": {
          "description": "The display number string. This should be used only for display purposes\nand the actual sequence should be inferred from the below orderNumber.",
          "type": "string"
        },
        "volumeSeries": {
          "items": {
            "properties": {
              "issue": {
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "items": {
                  "type": "object",
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                },
                "type": "array"
              },
              "seriesBookType": {
                "description": "The book type in the context of series. Examples - Single Issue,\nCollection Edition, etc.",
                "type": "string"
              },
              "seriesId": {
                "type": "string",
                "description": "The series id."
              },
              "orderNumber": {
                "type": "integer",
                "format": "int32",
                "description": "The book order number in the series."
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "shortSeriesBookTitle": {
          "description": "Short book title in the context of the series.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Volumeseriesinfo",
      "type": "object"
    },
    "Volumes": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "A list of volumes."
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of volumes found. This might be greater than the number of\nvolumes returned in this response if results have been paginated.",
          "type": "integer"
        }
      },
      "id": "Volumes"
    },
    "Series": {
      "type": "object",
      "properties": {
        "series": {
          "items": {
            "type": "object",
            "properties": {
              "imageUrl": {
                "type": "string"
              },
              "subscriptionId": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "seriesSubscriptionReleaseInfo": {
                "type": "object",
                "properties": {
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "cancelTime": {
                    "type": "string"
                  },
                  "nextReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    }
                  },
                  "currentReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "seriesId": {
                "type": "string"
              },
              "isComplete": {
                "type": "boolean"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Series"
    },
    "Metadata": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of offline dictionary metadata.",
          "items": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "download_url": {
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "version": {
                "format": "int64",
                "type": "string"
              },
              "size": {
                "type": "string",
                "format": "int64"
              }
            }
          },
          "type": "array"
        }
      },
      "id": "Metadata",
      "type": "object"
    },
    "Usersettings": {
      "type": "object",
      "properties": {
        "notification": {
          "type": "object",
          "properties": {
            "rewardExpirations": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromAuthors": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "priceDrop": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromSeries": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "matchMyInterests": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            }
          }
        },
        "notesExport": {
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          },
          "description": "User settings in sub-objects, each for different purposes.",
          "type": "object"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Usersettings"
    },
    "Category": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of onboarding categories.",
          "items": {
            "type": "object",
            "properties": {
              "badgeUrl": {
                "type": "string"
              },
              "categoryId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "type": "array"
        }
      },
      "id": "Category"
    },
    "Volumeannotations": {
      "type": "object",
      "properties": {
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not\njust the ones in this response). Note: the version string\ndoesn't apply to the annotation data, just the information in this response\n(e.g. the location of annotations in the book).",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results.",
          "type": "string"
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of volume annotations found."
        },
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "items": {
          "description": "A list of volume annotations.",
          "items": {
            "$ref": "Volumeannotation"
          },
          "type": "array"
        }
      },
      "id": "Volumeannotations"
    },
    "Layersummaries": {
      "type": "object",
      "properties": {
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of layer summaries found."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of layer summary items.",
          "items": {
            "$ref": "Layersummary"
          },
          "type": "array"
        }
      },
      "id": "Layersummaries"
    },
    "Annotation": {
      "type": "object",
      "properties": {
        "created": {
          "description": "Timestamp for the created time of this annotation.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume that this annotation belongs to.",
          "type": "string"
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "id": {
          "description": "Id of this annotation, in the form of a GUID.",
          "type": "string"
        },
        "clientVersionRanges": {
          "description": "Selection ranges sent from the client.",
          "type": "object",
          "properties": {
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation sent by client."
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation sent by client."
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            }
          }
        },
        "data": {
          "description": "User-created data for this annotation.",
          "type": "string"
        },
        "pageIds": {
          "description": "Pages that this annotation spans.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "layerSummary": {
          "type": "object",
          "properties": {
            "limitType": {
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\"\nlayer.",
              "type": "string"
            },
            "allowedCharacterCount": {
              "format": "int32",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\"\nlayer.",
              "type": "integer"
            },
            "remainingCharacterCount": {
              "type": "integer",
              "format": "int32",
              "description": "Remaining allowed characters on this layer, especially for the \"copy\"\nlayer."
            }
          }
        },
        "beforeSelectedText": {
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "afterSelectedText": {
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "currentVersionRanges": {
          "description": "Selection ranges for the most recent content version.",
          "type": "object",
          "properties": {
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation for version above."
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          }
        },
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this annotation was modified.",
          "type": "string"
        },
        "highlightStyle": {
          "type": "string",
          "description": "The highlight style for this annotation."
        }
      },
      "id": "Annotation"
    },
    "AnnotationsSummary": {
      "type": "object",
      "properties": {
        "layers": {
          "items": {
            "type": "object",
            "properties": {
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "layerId": {
                "type": "string"
              },
              "updated": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              },
              "limitType": {
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "type": "string"
        }
      },
      "id": "AnnotationsSummary"
    },
    "DownloadAccessRestriction": {
      "id": "DownloadAccessRestriction",
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Error/warning reason code.  Additional codes may be added in the future. 0\nOK 100   ACCESS_DENIED_PUBLISHER_LIMIT 101   ACCESS_DENIED_LIMIT 200\nWARNING_USED_LAST_ACCESS",
          "type": "string"
        },
        "restricted": {
          "description": "Whether this volume has any download access restrictions.",
          "type": "boolean"
        },
        "justAcquired": {
          "description": "If deviceAllowed, whether access was just acquired with this request.",
          "type": "boolean"
        },
        "maxDownloadDevices": {
          "format": "int32",
          "description": "If restricted, the maximum number of content download licenses for this\nvolume.",
          "type": "integer"
        },
        "downloadsAcquired": {
          "format": "int32",
          "description": "If restricted, the number of content download licenses already acquired\n(including the requesting client, if licensed).",
          "type": "integer"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and\nclient-validation only.",
          "type": "string"
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "signature": {
          "type": "string",
          "description": "Response signature."
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "deviceAllowed": {
          "description": "If restricted, whether access is granted for this (user, device, volume).",
          "type": "boolean"
        }
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "title": {
          "description": "Title for this review.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type for a review.",
          "type": "string"
        },
        "source": {
          "properties": {
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            },
            "url": {
              "description": "URL of the source of the review.",
              "type": "string"
            },
            "description": {
              "type": "string",
              "description": "Name of the source."
            }
          },
          "description": "Information regarding the source of this review, when the review is not\nfrom a Google Books user.",
          "type": "object"
        },
        "rating": {
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR,\nFIVE or NOT_RATED.",
          "type": "string"
        },
        "author": {
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Name of this person."
            }
          },
          "description": "Author of this review.",
          "type": "object"
        },
        "volumeId": {
          "description": "Volume that this review is for.",
          "type": "string"
        },
        "fullTextUrl": {
          "description": "URL for the full review text, for reviews gathered from the web.",
          "type": "string"
        },
        "type": {
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or\nGOOGLE_USER.",
          "type": "string"
        },
        "content": {
          "description": "Review text.",
          "type": "string"
        },
        "date": {
          "description": "Date of this review.",
          "type": "string"
        }
      },
      "id": "Review"
    },
    "Geolayerdata": {
      "type": "object",
      "properties": {
        "common": {
          "type": "object",
          "properties": {
            "title": {
              "description": "The display title and localized canonical name to use when searching for\nthis entity on Google search.",
              "type": "string"
            },
            "snippetUrl": {
              "description": "The URL for information for this location. Ex: wikipedia link.",
              "type": "string"
            },
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            },
            "previewImageUrl": {
              "description": "The URL for the preview image information.",
              "type": "string"
            },
            "snippet": {
              "description": "The description for this location.",
              "type": "string"
            }
          }
        },
        "kind": {
          "type": "string"
        },
        "geo": {
          "type": "object",
          "properties": {
            "latitude": {
              "format": "double",
              "description": "The latitude of the location.",
              "type": "number"
            },
            "zoom": {
              "format": "int32",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom\nlevel, in which the entire world can be seen on one map) to 21+ (down to\nindividual buildings). See: https:\n//developers.google.com/maps/documentation/staticmaps/#Zoomlevels",
              "type": "integer"
            },
            "longitude": {
              "format": "double",
              "description": "The longitude of the location.",
              "type": "number"
            },
            "mapType": {
              "description": "The type of map that should be used for this location. EX: HYBRID,\nROADMAP, SATELLITE, TERRAIN",
              "type": "string"
            },
            "viewport": {
              "description": "The viewport for showing this location. This is a latitude, longitude\nrectangle.",
              "type": "object",
              "properties": {
                "hi": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                },
                "lo": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                }
              }
            },
            "boundary": {
              "description": "The boundary of the location as a set of loops containing pairs of\nlatitude, longitude coordinates.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cachePolicy": {
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED,\nNEVER",
              "type": "string"
            },
            "countryCode": {
              "description": "The country code of the location.",
              "type": "string"
            }
          }
        }
      },
      "id": "Geolayerdata"
    },
    "Annotations": {
      "id": "Annotations",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results."
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of annotations found. This may be greater than the number of\nnotes returned in this response if results have been paginated."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of annotations.",
          "items": {
            "$ref": "Annotation"
          },
          "type": "array"
        }
      }
    },
    "Bookshelf": {
      "type": "object",
      "properties": {
        "created": {
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond\nresolution).",
          "type": "string"
        },
        "kind": {
          "description": "Resource type for bookshelf metadata.",
          "type": "string"
        },
        "description": {
          "description": "Description of this bookshelf.",
          "type": "string"
        },
        "volumesLastUpdated": {
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC\ntimestamp with millisecond resolution).",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "volumeCount": {
          "format": "int32",
          "description": "Number of volumes in this bookshelf.",
          "type": "integer"
        },
        "updated": {
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with\nmillisecond resolution).",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Id of this bookshelf, only unique by user.",
          "type": "integer"
        },
        "title": {
          "description": "Title of this bookshelf.",
          "type": "string"
        },
        "access": {
          "description": "Whether this bookshelf is PUBLIC or PRIVATE.",
          "type": "string"
        }
      },
      "id": "Bookshelf"
    },
    "GeoAnnotationdata": {
      "type": "object",
      "properties": {
        "encodedData": {
          "format": "byte",
          "description": "Base64 encoded data for this annotation data.",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat).",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "data": {
          "$ref": "Geolayerdata",
          "description": "JSON encoded data for this geo annotation data.\nEmitted with name 'data' in JSON output. Either this or dict_data will\nbe populated."
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        }
      },
      "id": "GeoAnnotationdata"
    },
    "BooksCloudloadingResource": {
      "type": "object",
      "properties": {
        "processingState": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        }
      },
      "id": "BooksCloudloadingResource"
    },
    "Offers": {
      "id": "Offers",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of offers.",
          "items": {
            "type": "object",
            "properties": {
              "gservicesKey": {
                "type": "string"
              },
              "items": {
                "items": {
                  "type": "object",
                  "properties": {
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "coverUrl": {
                      "type": "string"
                    }
                  }
                },
                "type": "array"
              },
              "artUrl": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "type": "array"
        }
      }
    },
    "Discoveryclusters": {
      "type": "object",
      "properties": {
        "clusters": {
          "items": {
            "type": "object",
            "properties": {
              "banner_with_content_container": {
                "type": "object",
                "properties": {
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  }
                }
              },
              "uid": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "volumes": {
                "items": {
                  "$ref": "Volume"
                },
                "type": "array"
              },
              "totalVolumes": {
                "type": "integer",
                "format": "int32"
              },
              "subTitle": {
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "totalClusters": {
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Discoveryclusters"
    },
    "Layersummary": {
      "type": "object",
      "properties": {
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "annotationsLink": {
          "description": "The link to get the annotations for this layer.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "layerId": {
          "type": "string",
          "description": "The layer id for this summary."
        },
        "annotationCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of annotations for this layer."
        },
        "updated": {
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339\nUTC date-time format).",
          "type": "string"
        },
        "volumeAnnotationsVersion": {
          "description": "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the books.layers.volumeAnnotations.*\nresponses. The actual annotation data is versioned separately.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume id this resource is for.",
          "type": "string"
        },
        "id": {
          "description": "Unique id of this layer summary.",
          "type": "string"
        },
        "contentVersion": {
          "description": "The content version this resource is for.",
          "type": "string"
        },
        "annotationsDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        },
        "dataCount": {
          "format": "int32",
          "description": "The number of data items for this layer.",
          "type": "integer"
        }
      },
      "id": "Layersummary"
    },
    "ReadingPosition": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type for a reading position.",
          "type": "string"
        },
        "volumeId": {
          "description": "Volume id associated with this reading position.",
          "type": "string"
        },
        "gbImagePosition": {
          "description": "Position in a volume for image-based content.",
          "type": "string"
        },
        "pdfPosition": {
          "description": "Position in a PDF file.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp when this reading position was last updated (formatted UTC\ntimestamp with millisecond resolution)."
        },
        "gbTextPosition": {
          "description": "Position in a volume for text-based content.",
          "type": "string"
        },
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        }
      },
      "id": "ReadingPosition"
    },
    "ConcurrentAccessRestriction": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Error/warning reason code.",
          "type": "string"
        },
        "restricted": {
          "description": "Whether this volume has any concurrent access restrictions.",
          "type": "boolean"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and\nclient-validation only."
        },
        "timeWindowSeconds": {
          "format": "int32",
          "description": "Time in seconds for license auto-expiration.",
          "type": "integer"
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "signature": {
          "type": "string",
          "description": "Response signature."
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "deviceAllowed": {
          "description": "Whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "maxConcurrentDevices": {
          "format": "int32",
          "description": "The maximum number of concurrent access licenses for this volume.",
          "type": "integer"
        }
      },
      "id": "ConcurrentAccessRestriction"
    },
    "Volume": {
      "id": "Volume",
      "type": "object",
      "properties": {
        "recommendedInfo": {
          "properties": {
            "explanation": {
              "description": "A text explaining why this volume is recommended.",
              "type": "string"
            }
          },
          "description": "Recommendation related information for this volume.",
          "type": "object"
        },
        "userInfo": {
          "properties": {
            "userUploadedVolumeInfo": {
              "type": "object",
              "properties": {
                "processingState": {
                  "type": "string"
                }
              }
            },
            "isInMyBooks": {
              "description": "Whether or not this volume is currently in \"my books.\"",
              "type": "boolean"
            },
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a\nreading position update, volume purchase or writing a review. (RFC 3339\nUTC date-time format)."
            },
            "isPreordered": {
              "description": "Whether or not this volume was pre-ordered by the authenticated user\nmaking the request. (In LITE projection.)",
              "type": "boolean"
            },
            "entitlementType": {
              "format": "int32",
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "type": "integer"
            },
            "acquiredTime": {
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC\ndate-time format) Acquiring includes purchase, user upload, receiving\nfamily sharing, etc.",
              "type": "string"
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "review": {
              "$ref": "Review",
              "description": "This user's review of this volume, if one exists."
            },
            "readingPosition": {
              "$ref": "ReadingPosition",
              "description": "The user's current reading position in the volume, if one is available.\n(In LITE projection.)"
            },
            "rentalState": {
              "description": "Whether this book is an active or an expired rental.",
              "type": "string"
            },
            "isFamilySharingDisabledByFop": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            },
            "copy": {
              "description": "Copy/Paste accounting information.",
              "type": "object",
              "properties": {
                "limitType": {
                  "type": "string"
                },
                "allowedCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "updated": {
                  "type": "string"
                },
                "remainingCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "acquisitionType": {
              "format": "int32",
              "description": "How this volume was acquired.",
              "type": "integer"
            },
            "isUploaded": {
              "description": "Whether or not this volume was user uploaded.",
              "type": "boolean"
            },
            "isFamilySharedFromUser": {
              "description": "Whether or not the user shared this volume with the family.",
              "type": "boolean"
            },
            "isPurchased": {
              "description": "Whether or not this volume was purchased by the authenticated user making\nthe request. (In LITE projection.)",
              "type": "boolean"
            },
            "familySharing": {
              "type": "object",
              "properties": {
                "isSharingAllowed": {
                  "description": "Whether or not this volume can be shared with the family by the user.\nThis includes sharing eligibility of both the volume and the user. If\nthe value is true, the user can initiate a family sharing action.",
                  "type": "boolean"
                },
                "isSharingDisabledByFop": {
                  "description": "Whether or not sharing this volume is temporarily disabled due to\nissues with the Family Wallet.",
                  "type": "boolean"
                },
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                }
              },
              "description": "Information on the ability to share with the family."
            },
            "rentalPeriod": {
              "description": "Period during this book is/was a valid rental.",
              "type": "object",
              "properties": {
                "endUtcSec": {
                  "format": "int64",
                  "type": "string"
                },
                "startUtcSec": {
                  "format": "int64",
                  "type": "string"
                }
              }
            }
          },
          "description": "User specific information related to this volume. (e.g. page this user last\nread or whether they purchased this book)",
          "type": "object"
        },
        "volumeInfo": {
          "type": "object",
          "properties": {
            "pageCount": {
              "type": "integer",
              "format": "int32",
              "description": "Total number of pages as per publisher metadata."
            },
            "canonicalVolumeLink": {
              "description": "Canonical URL for a volume. (In LITE projection.)",
              "type": "string"
            },
            "title": {
              "type": "string",
              "description": "Volume title. (In LITE projection.)"
            },
            "imageLinks": {
              "type": "object",
              "properties": {
                "extraLarge": {
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE\nprojection)",
                  "type": "string"
                },
                "small": {
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)",
                  "type": "string"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                },
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE\nprojection)",
                  "type": "string"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE\nprojection)"
                },
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                }
              },
              "description": "A list of image links for all the sizes that are available. (In LITE\nprojection.)"
            },
            "infoLink": {
              "description": "URL to view information about this volume on the Google Books site. (In\nLITE projection)",
              "type": "string"
            },
            "panelizationSummary": {
              "description": "A top-level summary of the panelization info in this volume.",
              "type": "object",
              "properties": {
                "epubBubbleVersion": {
                  "type": "string"
                },
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "imageBubbleVersion": {
                  "type": "string"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                }
              }
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "mainCategory": {
              "description": "The main category to which this volume belongs. It will be the category\nfrom the categories list returned below that has the highest weight.",
              "type": "string"
            },
            "publisher": {
              "description": "Publisher of this volume. (In LITE projection.)",
              "type": "string"
            },
            "samplePageCount": {
              "type": "integer",
              "format": "int32",
              "description": "Total number of sample pages as per publisher metadata."
            },
            "subtitle": {
              "description": "Volume subtitle. (In LITE projection.)",
              "type": "string"
            },
            "language": {
              "description": "Best language for this volume (based on content). It is the two-letter\nISO 639-1 code such as 'fr', 'en', etc.",
              "type": "string"
            },
            "description": {
              "description": "A synopsis of the volume. The text of the description is formatted in\nHTML and includes simple formatting elements, such as b, i, and br tags.\n(In LITE projection.)",
              "type": "string"
            },
            "maturityRating": {
              "type": "string"
            },
            "publishedDate": {
              "description": "Date of publication. (In LITE projection.)",
              "type": "string"
            },
            "ratingsCount": {
              "format": "int32",
              "description": "The number of review ratings for this volume.",
              "type": "integer"
            },
            "contentVersion": {
              "description": "An identifier for the version of the volume content (text & images). (In\nLITE projection)",
              "type": "string"
            },
            "averageRating": {
              "format": "double",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "type": "number"
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "previewLink": {
              "description": "URL to preview this volume on the Google Books site.",
              "type": "string"
            },
            "printedPageCount": {
              "format": "int32",
              "description": "Total number of printed pages in generated pdf representation.",
              "type": "integer"
            },
            "printType": {
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE.",
              "type": "string"
            },
            "categories": {
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "dimensions": {
              "description": "Physical dimensions of this volume.",
              "type": "object",
              "properties": {
                "thickness": {
                  "description": "Thickness of this volume (in cm).",
                  "type": "string"
                },
                "height": {
                  "description": "Height or length of this volume (in cm).",
                  "type": "string"
                },
                "width": {
                  "description": "Width of this volume (in cm).",
                  "type": "string"
                }
              }
            },
            "industryIdentifiers": {
              "description": "Industry standard identifiers for this volume.",
              "items": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "description": "Industry specific volume identifier.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.",
                    "type": "string"
                  }
                }
              },
              "type": "array"
            },
            "comicsContent": {
              "description": "Whether the volume has comics content.",
              "type": "boolean"
            },
            "authors": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The names of the authors and/or editors for this volume. (In LITE\nprojection)"
            },
            "readingModes": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              },
              "description": "The reading modes available for this volume."
            }
          },
          "description": "General volume information."
        },
        "selfLink": {
          "description": "URL to this resource. (In LITE projection.)",
          "type": "string"
        },
        "searchInfo": {
          "type": "object",
          "properties": {
            "textSnippet": {
              "description": "A text snippet containing the search query.",
              "type": "string"
            }
          },
          "description": "Search result information related to this volume."
        },
        "id": {
          "description": "Unique identifier for a volume. (In LITE projection.)",
          "type": "string"
        },
        "saleInfo": {
          "description": "Any information about a volume related to the eBookstore and/or\npurchaseability. This information can depend on the country where the\nrequest originates from (i.e. books may not be for sale in certain\ncountries).",
          "type": "object",
          "properties": {
            "isEbook": {
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks\nshelf).",
              "type": "boolean"
            },
            "buyLink": {
              "type": "string",
              "description": "URL to purchase this volume on the Google Books site. (In LITE\nprojection)"
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this sale information is\nvalid. (In LITE projection.)",
              "type": "string"
            },
            "onSaleDate": {
              "description": "The date on which this book is available for sale.",
              "type": "string"
            },
            "offers": {
              "description": "Offers available for this volume (sales and rentals).",
              "items": {
                "type": "object",
                "properties": {
                  "finskyOfferType": {
                    "format": "int32",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)",
                    "type": "integer"
                  },
                  "rentalDuration": {
                    "properties": {
                      "unit": {
                        "type": "string"
                      },
                      "count": {
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "description": "The rental duration (for rental offers only).",
                    "type": "object"
                  },
                  "giftable": {
                    "description": "Indicates whether the offer is giftable.",
                    "type": "boolean"
                  },
                  "retailPrice": {
                    "description": "Offer retail (=discounted) price in Micros",
                    "type": "object",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  },
                  "listPrice": {
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "type": "object",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "type": "array"
            },
            "retailPrice": {
              "description": "The actual selling price of the book. This is the same as the suggested\nretail or list price unless there are offers or discounts on this volume.\n(In LITE projection.)",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                }
              }
            },
            "listPrice": {
              "description": "Suggested retail price. (In LITE projection.)",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)"
                },
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                }
              }
            },
            "saleability": {
              "description": "Whether or not this book is available for sale or offered for free in the\nGoogle eBookstore for the country listed above. Possible values are\nFOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or\nFOR_PREORDER.",
              "type": "string"
            }
          }
        },
        "layerInfo": {
          "properties": {
            "layers": {
              "description": "A layer should appear here if and only if the layer exists for this book.",
              "items": {
                "properties": {
                  "layerId": {
                    "description": "The layer id of this layer (e.g. \"geo\").",
                    "type": "string"
                  },
                  "volumeAnnotationsVersion": {
                    "type": "string",
                    "description": "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the\nbooks.layers.volumeAnnotations.* responses. The actual annotation data\nis versioned separately."
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "description": "What layers exist in this volume and high level information about them.",
          "type": "object"
        },
        "kind": {
          "description": "Resource type for a volume. (In LITE projection.)",
          "type": "string"
        },
        "etag": {
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE\nprojection)",
          "type": "string"
        },
        "accessInfo": {
          "description": "Any information about a volume related to reading or obtaining that volume\ntext. This information can depend on country (books may be public domain in\none country but not in another, e.g.).",
          "type": "object",
          "properties": {
            "embeddable": {
              "description": "Whether this volume can be embedded in a viewport using the Embedded\nViewer API.",
              "type": "boolean"
            },
            "viewOrderUrl": {
              "type": "string",
              "description": "For ordered but not yet processed orders, we give a URL that can be used\nto go to the appropriate Google Wallet page."
            },
            "pdf": {
              "description": "Information about pdf content. (In LITE projection.)",
              "type": "object",
              "properties": {
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a scanned image pdf available either as public domain or for\npurchase. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)",
                  "type": "string"
                },
                "downloadLink": {
                  "description": "URL to download pdf. (In LITE projection.)",
                  "type": "string"
                }
              }
            },
            "accessViewStatus": {
              "description": "Combines the access and viewability of this volume into a single status\nfield for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN,\nSAMPLE or NONE. (In LITE projection.)",
              "type": "string"
            },
            "epub": {
              "description": "Information about epub content. (In LITE projection.)",
              "type": "object",
              "properties": {
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download epub. (In LITE projection.)"
                },
                "isAvailable": {
                  "description": "Is a flowing text epub available either as public domain or for\npurchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)",
                  "type": "string"
                }
              }
            },
            "driveImportedContentLink": {
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by\nselecting the file from Google Drive.",
              "type": "string"
            },
            "explicitOfflineLicenseManagement": {
              "description": "Whether this volume requires that the client explicitly request offline\ndownload license rather than have it done automatically when loading the\ncontent, if the client supports it.",
              "type": "boolean"
            },
            "publicDomain": {
              "description": "Whether or not this book is public domain in the country listed above.",
              "type": "boolean"
            },
            "quoteSharingAllowed": {
              "description": "Whether quote sharing is allowed for this volume.",
              "type": "boolean"
            },
            "viewability": {
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES,\nNO_PAGES or UNKNOWN. This value depends on the country listed above. A\nvalue of PARTIAL means that the publisher has allowed some portion of the\nvolume to be viewed publicly, without purchase. This can apply to eBooks\nas well as non-eBooks. Public domain books will always have a value of\nALL_PAGES.",
              "type": "string"
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this access information\nis valid. (In LITE projection.)",
              "type": "string"
            },
            "downloadAccess": {
              "description": "Information about a volume's download license access restrictions.",
              "$ref": "DownloadAccessRestriction"
            },
            "webReaderLink": {
              "description": "URL to read this volume on the Google Books site. Link will not allow\nusers to read non-viewable volumes.",
              "type": "string"
            },
            "textToSpeechPermission": {
              "type": "string",
              "description": "Whether text-to-speech is permitted for this volume. Values can be\nALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."
            }
          }
        }
      }
    },
    "FamilyInfo": {
      "id": "FamilyInfo",
      "type": "object",
      "properties": {
        "membership": {
          "description": "Family membership info of the user that made the request.",
          "type": "object",
          "properties": {
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            },
            "isInFamily": {
              "type": "boolean"
            },
            "allowedMaturityRating": {
              "description": "The maximum allowed maturity rating for the user.",
              "type": "string"
            },
            "acquirePermission": {
              "description": "Restrictions on user buying and acquiring content.",
              "type": "string"
            },
            "ageGroup": {
              "description": "The age group of the user.",
              "type": "string"
            }
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "BooksAnnotationsRange": {
      "type": "object",
      "properties": {
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        },
        "startOffset": {
          "description": "The offset from the starting position.",
          "type": "string"
        },
        "startPosition": {
          "type": "string",
          "description": "The starting position for the range."
        }
      },
      "id": "BooksAnnotationsRange"
    },
    "Dictlayerdata": {
      "type": "object",
      "properties": {
        "common": {
          "type": "object",
          "properties": {
            "title": {
              "description": "The display title and localized canonical name to use when searching for\nthis entity on Google search.",
              "type": "string"
            }
          }
        },
        "dict": {
          "type": "object",
          "properties": {
            "source": {
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "attribution": {
                  "type": "string"
                }
              }
            },
            "words": {
              "items": {
                "properties": {
                  "examples": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "text": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "source": {
                    "description": "The words with different meanings but not related words, e.g. \"go\"\n(game) and \"go\" (verb).",
                    "type": "object",
                    "properties": {
                      "attribution": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "derivatives": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          }
                        },
                        "text": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "senses": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "pronunciation": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "conjugations": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "definitions": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "definition": {
                                "type": "string"
                              },
                              "examples": {
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "source": {
                                      "properties": {
                                        "url": {
                                          "type": "string"
                                        },
                                        "attribution": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "text": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "type": "array"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "synonyms": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "type": "object",
                                "properties": {
                                  "attribution": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              },
                              "text": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "kind": {
          "type": "string"
        }
      },
      "id": "Dictlayerdata"
    },
    "Notification": {
      "type": "object",
      "properties": {
        "iconUrl": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "body": {
          "type": "string"
        },
        "timeToExpireMs": {
          "format": "int64",
          "type": "string"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "crmExperimentIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "The list of crm experiment ids."
        },
        "notification_type": {
          "type": "string"
        },
        "notificationGroup": {
          "type": "string"
        },
        "doc_type": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        }
      },
      "id": "Notification"
    },
    "Annotationsdata": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results."
        },
        "totalItems": {
          "format": "int32",
          "description": "The total number of volume annotations found.",
          "type": "integer"
        },
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "items": {
          "description": "A list of Annotation Data.",
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "type": "array"
        }
      },
      "id": "Annotationsdata",
      "type": "object"
    },
    "RequestAccessData": {
      "type": "object",
      "properties": {
        "concurrentAccess": {
          "$ref": "ConcurrentAccessRestriction",
          "description": "A concurrent access response."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "downloadAccess": {
          "$ref": "DownloadAccessRestriction",
          "description": "A download access response."
        }
      },
      "id": "RequestAccessData"
    },
    "Bookshelves": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of bookshelves.",
          "items": {
            "$ref": "Bookshelf"
          },
          "type": "array"
        }
      },
      "id": "Bookshelves"
    },
    "DictionaryAnnotationdata": {
      "id": "DictionaryAnnotationdata",
      "type": "object",
      "properties": {
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat).",
          "type": "string"
        },
        "data": {
          "$ref": "Dictlayerdata",
          "description": "JSON encoded data for this dictionary annotation data.\nEmitted with name 'data' in JSON output. Either this or geo_data will\nbe populated."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        },
        "encodedData": {
          "format": "byte",
          "description": "Base64 encoded data for this annotation data.",
          "type": "string"
        }
      }
    },
    "BooksVolumesRecommendedRateResponse": {
      "type": "object",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "id": "BooksVolumesRecommendedRateResponse"
    },
    "Volumeannotation": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "annotationDataId": {
          "description": "The annotation data id for this volume annotation.",
          "type": "string"
        },
        "pageIds": {
          "description": "Pages the annotation spans.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer this annotation is for.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC\ndate-time format).",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this is.",
          "type": "string"
        },
        "annotationDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "volumeId": {
          "description": "The Volume this annotation is for.",
          "type": "string"
        },
        "contentRanges": {
          "properties": {
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            }
          },
          "description": "The content ranges to identify the selected text.",
          "type": "object"
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "id": {
          "description": "Unique id of this volume annotation.",
          "type": "string"
        }
      },
      "id": "Volumeannotation"
    }
  },
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  }
}
