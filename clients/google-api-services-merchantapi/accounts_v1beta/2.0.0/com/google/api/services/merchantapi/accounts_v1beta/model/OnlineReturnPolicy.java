/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * [Online return policy](https://support.google.com/merchants/answer/10220642) object. This is
 * currently used to represent return policies for ads and free listings programs.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class OnlineReturnPolicy extends com.google.api.client.json.GenericJson {

  /**
   * This field specifies if merchant only accepts defective products for returns, and this field is
   * required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean acceptDefectiveOnly;

  /**
   * This field specifies if merchant allows customers to exchange products, this field is required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean acceptExchange;

  /**
   * Required. Immutable. The countries of sale where the return policy applies. The values must be
   * a valid 2 letter ISO 3166 code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> countries;

  /**
   * The item conditions accepted for returns must not be empty unless the type of return policy is
   * 'noReturns'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> itemConditions;

  /**
   * Required. Immutable. This field represents the unique user-defined label of the return policy.
   * It is important to note that the same label cannot be used in different return policies for the
   * same country. Unless a product specifies a specific label attribute, policies will be
   * automatically labeled as 'default'. To assign a custom return policy to certain product groups,
   * follow the instructions provided in the [Return policy label]
   * (https://support.google.com/merchants/answer/9445425). The label can contain up to 50
   * characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String label;

  /**
   * Identifier. The name of the `OnlineReturnPolicy` resource. Format:
   * `accounts/{account}/onlineReturnPolicies/{return_policy}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The return policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Policy policy;

  /**
   * The field specifies the number of days it takes for merchants to process refunds, field is
   * optional.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer processRefundDays;

  /**
   * The restocking fee that applies to all return reason categories. This would be treated as a
   * free restocking fee if the value is not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RestockingFee restockingFee;

  /**
   * The return methods of how customers can return an item. This value is required to not be empty
   * unless the type of return policy is noReturns.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> returnMethods;

  /**
   * Output only. Return policy ID generated by Google.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String returnPolicyId;

  /**
   * Required. The return policy uri. This can used by Google to do a sanity check for the policy.
   * It must be a valid URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String returnPolicyUri;

  /**
   * The return shipping fee. Should be set only when customer need to download and print the return
   * label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReturnShippingFee returnShippingFee;

  /**
   * Optional. Overrides to the general policy for orders placed during a specific set of time
   * intervals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SeasonalOverride> seasonalOverrides;

  /**
   * This field specifies if merchant only accepts defective products for returns, and this field is
   * required.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAcceptDefectiveOnly() {
    return acceptDefectiveOnly;
  }

  /**
   * This field specifies if merchant only accepts defective products for returns, and this field is
   * required.
   * @param acceptDefectiveOnly acceptDefectiveOnly or {@code null} for none
   */
  public OnlineReturnPolicy setAcceptDefectiveOnly(java.lang.Boolean acceptDefectiveOnly) {
    this.acceptDefectiveOnly = acceptDefectiveOnly;
    return this;
  }

  /**
   * This field specifies if merchant allows customers to exchange products, this field is required.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAcceptExchange() {
    return acceptExchange;
  }

  /**
   * This field specifies if merchant allows customers to exchange products, this field is required.
   * @param acceptExchange acceptExchange or {@code null} for none
   */
  public OnlineReturnPolicy setAcceptExchange(java.lang.Boolean acceptExchange) {
    this.acceptExchange = acceptExchange;
    return this;
  }

  /**
   * Required. Immutable. The countries of sale where the return policy applies. The values must be
   * a valid 2 letter ISO 3166 code.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCountries() {
    return countries;
  }

  /**
   * Required. Immutable. The countries of sale where the return policy applies. The values must be
   * a valid 2 letter ISO 3166 code.
   * @param countries countries or {@code null} for none
   */
  public OnlineReturnPolicy setCountries(java.util.List<java.lang.String> countries) {
    this.countries = countries;
    return this;
  }

  /**
   * The item conditions accepted for returns must not be empty unless the type of return policy is
   * 'noReturns'.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getItemConditions() {
    return itemConditions;
  }

  /**
   * The item conditions accepted for returns must not be empty unless the type of return policy is
   * 'noReturns'.
   * @param itemConditions itemConditions or {@code null} for none
   */
  public OnlineReturnPolicy setItemConditions(java.util.List<java.lang.String> itemConditions) {
    this.itemConditions = itemConditions;
    return this;
  }

  /**
   * Required. Immutable. This field represents the unique user-defined label of the return policy.
   * It is important to note that the same label cannot be used in different return policies for the
   * same country. Unless a product specifies a specific label attribute, policies will be
   * automatically labeled as 'default'. To assign a custom return policy to certain product groups,
   * follow the instructions provided in the [Return policy label]
   * (https://support.google.com/merchants/answer/9445425). The label can contain up to 50
   * characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getLabel() {
    return label;
  }

  /**
   * Required. Immutable. This field represents the unique user-defined label of the return policy.
   * It is important to note that the same label cannot be used in different return policies for the
   * same country. Unless a product specifies a specific label attribute, policies will be
   * automatically labeled as 'default'. To assign a custom return policy to certain product groups,
   * follow the instructions provided in the [Return policy label]
   * (https://support.google.com/merchants/answer/9445425). The label can contain up to 50
   * characters.
   * @param label label or {@code null} for none
   */
  public OnlineReturnPolicy setLabel(java.lang.String label) {
    this.label = label;
    return this;
  }

  /**
   * Identifier. The name of the `OnlineReturnPolicy` resource. Format:
   * `accounts/{account}/onlineReturnPolicies/{return_policy}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The name of the `OnlineReturnPolicy` resource. Format:
   * `accounts/{account}/onlineReturnPolicies/{return_policy}`
   * @param name name or {@code null} for none
   */
  public OnlineReturnPolicy setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The return policy.
   * @return value or {@code null} for none
   */
  public Policy getPolicy() {
    return policy;
  }

  /**
   * The return policy.
   * @param policy policy or {@code null} for none
   */
  public OnlineReturnPolicy setPolicy(Policy policy) {
    this.policy = policy;
    return this;
  }

  /**
   * The field specifies the number of days it takes for merchants to process refunds, field is
   * optional.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getProcessRefundDays() {
    return processRefundDays;
  }

  /**
   * The field specifies the number of days it takes for merchants to process refunds, field is
   * optional.
   * @param processRefundDays processRefundDays or {@code null} for none
   */
  public OnlineReturnPolicy setProcessRefundDays(java.lang.Integer processRefundDays) {
    this.processRefundDays = processRefundDays;
    return this;
  }

  /**
   * The restocking fee that applies to all return reason categories. This would be treated as a
   * free restocking fee if the value is not set.
   * @return value or {@code null} for none
   */
  public RestockingFee getRestockingFee() {
    return restockingFee;
  }

  /**
   * The restocking fee that applies to all return reason categories. This would be treated as a
   * free restocking fee if the value is not set.
   * @param restockingFee restockingFee or {@code null} for none
   */
  public OnlineReturnPolicy setRestockingFee(RestockingFee restockingFee) {
    this.restockingFee = restockingFee;
    return this;
  }

  /**
   * The return methods of how customers can return an item. This value is required to not be empty
   * unless the type of return policy is noReturns.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getReturnMethods() {
    return returnMethods;
  }

  /**
   * The return methods of how customers can return an item. This value is required to not be empty
   * unless the type of return policy is noReturns.
   * @param returnMethods returnMethods or {@code null} for none
   */
  public OnlineReturnPolicy setReturnMethods(java.util.List<java.lang.String> returnMethods) {
    this.returnMethods = returnMethods;
    return this;
  }

  /**
   * Output only. Return policy ID generated by Google.
   * @return value or {@code null} for none
   */
  public java.lang.String getReturnPolicyId() {
    return returnPolicyId;
  }

  /**
   * Output only. Return policy ID generated by Google.
   * @param returnPolicyId returnPolicyId or {@code null} for none
   */
  public OnlineReturnPolicy setReturnPolicyId(java.lang.String returnPolicyId) {
    this.returnPolicyId = returnPolicyId;
    return this;
  }

  /**
   * Required. The return policy uri. This can used by Google to do a sanity check for the policy.
   * It must be a valid URL.
   * @return value or {@code null} for none
   */
  public java.lang.String getReturnPolicyUri() {
    return returnPolicyUri;
  }

  /**
   * Required. The return policy uri. This can used by Google to do a sanity check for the policy.
   * It must be a valid URL.
   * @param returnPolicyUri returnPolicyUri or {@code null} for none
   */
  public OnlineReturnPolicy setReturnPolicyUri(java.lang.String returnPolicyUri) {
    this.returnPolicyUri = returnPolicyUri;
    return this;
  }

  /**
   * The return shipping fee. Should be set only when customer need to download and print the return
   * label.
   * @return value or {@code null} for none
   */
  public ReturnShippingFee getReturnShippingFee() {
    return returnShippingFee;
  }

  /**
   * The return shipping fee. Should be set only when customer need to download and print the return
   * label.
   * @param returnShippingFee returnShippingFee or {@code null} for none
   */
  public OnlineReturnPolicy setReturnShippingFee(ReturnShippingFee returnShippingFee) {
    this.returnShippingFee = returnShippingFee;
    return this;
  }

  /**
   * Optional. Overrides to the general policy for orders placed during a specific set of time
   * intervals.
   * @return value or {@code null} for none
   */
  public java.util.List<SeasonalOverride> getSeasonalOverrides() {
    return seasonalOverrides;
  }

  /**
   * Optional. Overrides to the general policy for orders placed during a specific set of time
   * intervals.
   * @param seasonalOverrides seasonalOverrides or {@code null} for none
   */
  public OnlineReturnPolicy setSeasonalOverrides(java.util.List<SeasonalOverride> seasonalOverrides) {
    this.seasonalOverrides = seasonalOverrides;
    return this;
  }

  @Override
  public OnlineReturnPolicy set(String fieldName, Object value) {
    return (OnlineReturnPolicy) super.set(fieldName, value);
  }

  @Override
  public OnlineReturnPolicy clone() {
    return (OnlineReturnPolicy) super.clone();
  }

}
