/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workstations.v1.model;

/**
 * A workstation configuration resource in the Cloud Workstations API. Workstation configurations
 * act as templates for workstations. The workstation configuration defines details such as the
 * workstation virtual machine (VM) instance type, persistent storage, container image defining
 * environment, which IDE or Code Editor to use, and more. Administrators and platform teams can
 * also use [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/overview) rules
 * to grant access to teams or to individual developers.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Workstations API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WorkstationConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Client-specified annotations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Output only. Status conditions describing the current resource state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Status> conditions;

  static {
    // hack to force ProGuard to consider Status used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Status.class);
  }

  /**
   * Optional. Container that runs upon startup for each workstation using this workstation
   * configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Container container;

  /**
   * Output only. Time when this workstation configuration was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Whether this resource is degraded, in which case it may require user action to
   * restore full functionality. See also the conditions field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean degraded;

  /**
   * Output only. Time when this workstation configuration was soft-deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String deleteTime;

  /**
   * Optional. Disables support for plain TCP connections in the workstation. By default the service
   * supports TCP connections through a websocket relay. Setting this option to true disables that
   * relay, which prevents the usage of services that require plain TCP connections, such as SSH.
   * When enabled, all communication must occur over HTTPS or WSS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disableTcpConnections;

  /**
   * Optional. Human-readable name for this workstation configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Optional. Whether to enable Linux `auditd` logging on the workstation. When enabled, a service
   * account must also be specified that has `logging.buckets.write` permission on the project.
   * Operating system audit logging is distinct from [Cloud Audit
   * Logs](https://cloud.google.com/workstations/docs/audit-logging).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableAuditAgent;

  /**
   * Immutable. Encrypts resources of this workstation configuration using a customer-managed
   * encryption key (CMEK). If specified, the boot disk of the Compute Engine instance and the
   * persistent disk are encrypted using this encryption key. If this field is not set, the disks
   * are encrypted using a generated key. Customer-managed encryption keys do not protect disk
   * metadata. If the customer-managed encryption key is rotated, when the workstation instance is
   * stopped, the system attempts to recreate the persistent disk with the new version of the key.
   * Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise,
   * data on the persistent disk might be lost. If the encryption key is revoked, the workstation
   * session automatically stops within 7 hours. Immutable after the workstation configuration is
   * created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CustomerEncryptionKey encryptionKey;

  /**
   * Optional. Ephemeral directories which won't persist across workstation sessions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<EphemeralDirectory> ephemeralDirectories;

  static {
    // hack to force ProGuard to consider EphemeralDirectory used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(EphemeralDirectory.class);
  }

  /**
   * Optional. Checksum computed by the server. May be sent on update and delete requests to make
   * sure that the client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. Runtime host for the workstation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Host host;

  /**
   * Optional. Number of seconds to wait before automatically stopping a workstation after it last
   * received user traffic. A value of `"0s"` indicates that Cloud Workstations VMs created with
   * this configuration should never time out due to idleness. Provide
   * [duration](https://developers.google.com/protocol-
   * buffers/docs/reference/google.protobuf#duration) terminated by `s` for seconds—for example,
   * `"7200s"` (2 hours). The default is `"1200s"` (20 minutes).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String idleTimeout;

  /**
   * Optional. [Labels](https://cloud.google.com/workstations/docs/label-resources) that are applied
   * to the workstation configuration and that are also propagated to the underlying Compute Engine
   * resources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. Full name of this workstation configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. Directories to persist across workstation sessions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PersistentDirectory> persistentDirectories;

  static {
    // hack to force ProGuard to consider PersistentDirectory used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(PersistentDirectory.class);
  }

  /**
   * Optional. Readiness checks to perform when starting a workstation using this workstation
   * configuration. Mark a workstation as running only after all specified readiness checks return
   * 200 status codes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ReadinessCheck> readinessChecks;

  static {
    // hack to force ProGuard to consider ReadinessCheck used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ReadinessCheck.class);
  }

  /**
   * Output only. Indicates whether this workstation configuration is currently being updated to
   * match its intended state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean reconciling;

  /**
   * Optional. Immutable. Specifies the zones used to replicate the VM and disk resources within the
   * region. If set, exactly two zones within the workstation cluster's region must be specified—for
   * example, `['us-central1-a', 'us-central1-f']`. If this field is empty, two default zones within
   * the region are used. Immutable after the workstation configuration is created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> replicaZones;

  /**
   * Optional. Number of seconds that a workstation can run until it is automatically shut down. We
   * recommend that workstations be shut down daily to reduce costs and so that security updates can
   * be applied upon restart. The idle_timeout and running_timeout fields are independent of each
   * other. Note that the running_timeout field shuts down VMs after the specified time, regardless
   * of whether or not the VMs are idle. Provide duration terminated by `s` for seconds—for example,
   * `"54000s"` (15 hours). Defaults to `"43200s"` (12 hours). A value of `"0s"` indicates that
   * workstations using this configuration should never time out. If encryption_key is set, it must
   * be greater than `"0s"` and less than `"86400s"` (24 hours). Warning: A value of `"0s"`
   * indicates that Cloud Workstations VMs created with this configuration have no maximum running
   * time. This is strongly discouraged because you incur costs and will not pick up security
   * updates.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String runningTimeout;

  /**
   * Output only. A system-assigned unique identifier for this workstation configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Time when this workstation configuration was most recently updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. Client-specified annotations.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Optional. Client-specified annotations.
   * @param annotations annotations or {@code null} for none
   */
  public WorkstationConfig setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Output only. Status conditions describing the current resource state.
   * @return value or {@code null} for none
   */
  public java.util.List<Status> getConditions() {
    return conditions;
  }

  /**
   * Output only. Status conditions describing the current resource state.
   * @param conditions conditions or {@code null} for none
   */
  public WorkstationConfig setConditions(java.util.List<Status> conditions) {
    this.conditions = conditions;
    return this;
  }

  /**
   * Optional. Container that runs upon startup for each workstation using this workstation
   * configuration.
   * @return value or {@code null} for none
   */
  public Container getContainer() {
    return container;
  }

  /**
   * Optional. Container that runs upon startup for each workstation using this workstation
   * configuration.
   * @param container container or {@code null} for none
   */
  public WorkstationConfig setContainer(Container container) {
    this.container = container;
    return this;
  }

  /**
   * Output only. Time when this workstation configuration was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time when this workstation configuration was created.
   * @param createTime createTime or {@code null} for none
   */
  public WorkstationConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Whether this resource is degraded, in which case it may require user action to
   * restore full functionality. See also the conditions field.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDegraded() {
    return degraded;
  }

  /**
   * Output only. Whether this resource is degraded, in which case it may require user action to
   * restore full functionality. See also the conditions field.
   * @param degraded degraded or {@code null} for none
   */
  public WorkstationConfig setDegraded(java.lang.Boolean degraded) {
    this.degraded = degraded;
    return this;
  }

  /**
   * Output only. Time when this workstation configuration was soft-deleted.
   * @return value or {@code null} for none
   */
  public String getDeleteTime() {
    return deleteTime;
  }

  /**
   * Output only. Time when this workstation configuration was soft-deleted.
   * @param deleteTime deleteTime or {@code null} for none
   */
  public WorkstationConfig setDeleteTime(String deleteTime) {
    this.deleteTime = deleteTime;
    return this;
  }

  /**
   * Optional. Disables support for plain TCP connections in the workstation. By default the service
   * supports TCP connections through a websocket relay. Setting this option to true disables that
   * relay, which prevents the usage of services that require plain TCP connections, such as SSH.
   * When enabled, all communication must occur over HTTPS or WSS.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisableTcpConnections() {
    return disableTcpConnections;
  }

  /**
   * Optional. Disables support for plain TCP connections in the workstation. By default the service
   * supports TCP connections through a websocket relay. Setting this option to true disables that
   * relay, which prevents the usage of services that require plain TCP connections, such as SSH.
   * When enabled, all communication must occur over HTTPS or WSS.
   * @param disableTcpConnections disableTcpConnections or {@code null} for none
   */
  public WorkstationConfig setDisableTcpConnections(java.lang.Boolean disableTcpConnections) {
    this.disableTcpConnections = disableTcpConnections;
    return this;
  }

  /**
   * Optional. Human-readable name for this workstation configuration.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Optional. Human-readable name for this workstation configuration.
   * @param displayName displayName or {@code null} for none
   */
  public WorkstationConfig setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. Whether to enable Linux `auditd` logging on the workstation. When enabled, a service
   * account must also be specified that has `logging.buckets.write` permission on the project.
   * Operating system audit logging is distinct from [Cloud Audit
   * Logs](https://cloud.google.com/workstations/docs/audit-logging).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableAuditAgent() {
    return enableAuditAgent;
  }

  /**
   * Optional. Whether to enable Linux `auditd` logging on the workstation. When enabled, a service
   * account must also be specified that has `logging.buckets.write` permission on the project.
   * Operating system audit logging is distinct from [Cloud Audit
   * Logs](https://cloud.google.com/workstations/docs/audit-logging).
   * @param enableAuditAgent enableAuditAgent or {@code null} for none
   */
  public WorkstationConfig setEnableAuditAgent(java.lang.Boolean enableAuditAgent) {
    this.enableAuditAgent = enableAuditAgent;
    return this;
  }

  /**
   * Immutable. Encrypts resources of this workstation configuration using a customer-managed
   * encryption key (CMEK). If specified, the boot disk of the Compute Engine instance and the
   * persistent disk are encrypted using this encryption key. If this field is not set, the disks
   * are encrypted using a generated key. Customer-managed encryption keys do not protect disk
   * metadata. If the customer-managed encryption key is rotated, when the workstation instance is
   * stopped, the system attempts to recreate the persistent disk with the new version of the key.
   * Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise,
   * data on the persistent disk might be lost. If the encryption key is revoked, the workstation
   * session automatically stops within 7 hours. Immutable after the workstation configuration is
   * created.
   * @return value or {@code null} for none
   */
  public CustomerEncryptionKey getEncryptionKey() {
    return encryptionKey;
  }

  /**
   * Immutable. Encrypts resources of this workstation configuration using a customer-managed
   * encryption key (CMEK). If specified, the boot disk of the Compute Engine instance and the
   * persistent disk are encrypted using this encryption key. If this field is not set, the disks
   * are encrypted using a generated key. Customer-managed encryption keys do not protect disk
   * metadata. If the customer-managed encryption key is rotated, when the workstation instance is
   * stopped, the system attempts to recreate the persistent disk with the new version of the key.
   * Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise,
   * data on the persistent disk might be lost. If the encryption key is revoked, the workstation
   * session automatically stops within 7 hours. Immutable after the workstation configuration is
   * created.
   * @param encryptionKey encryptionKey or {@code null} for none
   */
  public WorkstationConfig setEncryptionKey(CustomerEncryptionKey encryptionKey) {
    this.encryptionKey = encryptionKey;
    return this;
  }

  /**
   * Optional. Ephemeral directories which won't persist across workstation sessions.
   * @return value or {@code null} for none
   */
  public java.util.List<EphemeralDirectory> getEphemeralDirectories() {
    return ephemeralDirectories;
  }

  /**
   * Optional. Ephemeral directories which won't persist across workstation sessions.
   * @param ephemeralDirectories ephemeralDirectories or {@code null} for none
   */
  public WorkstationConfig setEphemeralDirectories(java.util.List<EphemeralDirectory> ephemeralDirectories) {
    this.ephemeralDirectories = ephemeralDirectories;
    return this;
  }

  /**
   * Optional. Checksum computed by the server. May be sent on update and delete requests to make
   * sure that the client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Optional. Checksum computed by the server. May be sent on update and delete requests to make
   * sure that the client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public WorkstationConfig setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. Runtime host for the workstation.
   * @return value or {@code null} for none
   */
  public Host getHost() {
    return host;
  }

  /**
   * Optional. Runtime host for the workstation.
   * @param host host or {@code null} for none
   */
  public WorkstationConfig setHost(Host host) {
    this.host = host;
    return this;
  }

  /**
   * Optional. Number of seconds to wait before automatically stopping a workstation after it last
   * received user traffic. A value of `"0s"` indicates that Cloud Workstations VMs created with
   * this configuration should never time out due to idleness. Provide
   * [duration](https://developers.google.com/protocol-
   * buffers/docs/reference/google.protobuf#duration) terminated by `s` for seconds—for example,
   * `"7200s"` (2 hours). The default is `"1200s"` (20 minutes).
   * @return value or {@code null} for none
   */
  public String getIdleTimeout() {
    return idleTimeout;
  }

  /**
   * Optional. Number of seconds to wait before automatically stopping a workstation after it last
   * received user traffic. A value of `"0s"` indicates that Cloud Workstations VMs created with
   * this configuration should never time out due to idleness. Provide
   * [duration](https://developers.google.com/protocol-
   * buffers/docs/reference/google.protobuf#duration) terminated by `s` for seconds—for example,
   * `"7200s"` (2 hours). The default is `"1200s"` (20 minutes).
   * @param idleTimeout idleTimeout or {@code null} for none
   */
  public WorkstationConfig setIdleTimeout(String idleTimeout) {
    this.idleTimeout = idleTimeout;
    return this;
  }

  /**
   * Optional. [Labels](https://cloud.google.com/workstations/docs/label-resources) that are applied
   * to the workstation configuration and that are also propagated to the underlying Compute Engine
   * resources.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. [Labels](https://cloud.google.com/workstations/docs/label-resources) that are applied
   * to the workstation configuration and that are also propagated to the underlying Compute Engine
   * resources.
   * @param labels labels or {@code null} for none
   */
  public WorkstationConfig setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. Full name of this workstation configuration.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. Full name of this workstation configuration.
   * @param name name or {@code null} for none
   */
  public WorkstationConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. Directories to persist across workstation sessions.
   * @return value or {@code null} for none
   */
  public java.util.List<PersistentDirectory> getPersistentDirectories() {
    return persistentDirectories;
  }

  /**
   * Optional. Directories to persist across workstation sessions.
   * @param persistentDirectories persistentDirectories or {@code null} for none
   */
  public WorkstationConfig setPersistentDirectories(java.util.List<PersistentDirectory> persistentDirectories) {
    this.persistentDirectories = persistentDirectories;
    return this;
  }

  /**
   * Optional. Readiness checks to perform when starting a workstation using this workstation
   * configuration. Mark a workstation as running only after all specified readiness checks return
   * 200 status codes.
   * @return value or {@code null} for none
   */
  public java.util.List<ReadinessCheck> getReadinessChecks() {
    return readinessChecks;
  }

  /**
   * Optional. Readiness checks to perform when starting a workstation using this workstation
   * configuration. Mark a workstation as running only after all specified readiness checks return
   * 200 status codes.
   * @param readinessChecks readinessChecks or {@code null} for none
   */
  public WorkstationConfig setReadinessChecks(java.util.List<ReadinessCheck> readinessChecks) {
    this.readinessChecks = readinessChecks;
    return this;
  }

  /**
   * Output only. Indicates whether this workstation configuration is currently being updated to
   * match its intended state.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReconciling() {
    return reconciling;
  }

  /**
   * Output only. Indicates whether this workstation configuration is currently being updated to
   * match its intended state.
   * @param reconciling reconciling or {@code null} for none
   */
  public WorkstationConfig setReconciling(java.lang.Boolean reconciling) {
    this.reconciling = reconciling;
    return this;
  }

  /**
   * Optional. Immutable. Specifies the zones used to replicate the VM and disk resources within the
   * region. If set, exactly two zones within the workstation cluster's region must be specified—for
   * example, `['us-central1-a', 'us-central1-f']`. If this field is empty, two default zones within
   * the region are used. Immutable after the workstation configuration is created.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getReplicaZones() {
    return replicaZones;
  }

  /**
   * Optional. Immutable. Specifies the zones used to replicate the VM and disk resources within the
   * region. If set, exactly two zones within the workstation cluster's region must be specified—for
   * example, `['us-central1-a', 'us-central1-f']`. If this field is empty, two default zones within
   * the region are used. Immutable after the workstation configuration is created.
   * @param replicaZones replicaZones or {@code null} for none
   */
  public WorkstationConfig setReplicaZones(java.util.List<java.lang.String> replicaZones) {
    this.replicaZones = replicaZones;
    return this;
  }

  /**
   * Optional. Number of seconds that a workstation can run until it is automatically shut down. We
   * recommend that workstations be shut down daily to reduce costs and so that security updates can
   * be applied upon restart. The idle_timeout and running_timeout fields are independent of each
   * other. Note that the running_timeout field shuts down VMs after the specified time, regardless
   * of whether or not the VMs are idle. Provide duration terminated by `s` for seconds—for example,
   * `"54000s"` (15 hours). Defaults to `"43200s"` (12 hours). A value of `"0s"` indicates that
   * workstations using this configuration should never time out. If encryption_key is set, it must
   * be greater than `"0s"` and less than `"86400s"` (24 hours). Warning: A value of `"0s"`
   * indicates that Cloud Workstations VMs created with this configuration have no maximum running
   * time. This is strongly discouraged because you incur costs and will not pick up security
   * updates.
   * @return value or {@code null} for none
   */
  public String getRunningTimeout() {
    return runningTimeout;
  }

  /**
   * Optional. Number of seconds that a workstation can run until it is automatically shut down. We
   * recommend that workstations be shut down daily to reduce costs and so that security updates can
   * be applied upon restart. The idle_timeout and running_timeout fields are independent of each
   * other. Note that the running_timeout field shuts down VMs after the specified time, regardless
   * of whether or not the VMs are idle. Provide duration terminated by `s` for seconds—for example,
   * `"54000s"` (15 hours). Defaults to `"43200s"` (12 hours). A value of `"0s"` indicates that
   * workstations using this configuration should never time out. If encryption_key is set, it must
   * be greater than `"0s"` and less than `"86400s"` (24 hours). Warning: A value of `"0s"`
   * indicates that Cloud Workstations VMs created with this configuration have no maximum running
   * time. This is strongly discouraged because you incur costs and will not pick up security
   * updates.
   * @param runningTimeout runningTimeout or {@code null} for none
   */
  public WorkstationConfig setRunningTimeout(String runningTimeout) {
    this.runningTimeout = runningTimeout;
    return this;
  }

  /**
   * Output only. A system-assigned unique identifier for this workstation configuration.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. A system-assigned unique identifier for this workstation configuration.
   * @param uid uid or {@code null} for none
   */
  public WorkstationConfig setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. Time when this workstation configuration was most recently updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Time when this workstation configuration was most recently updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public WorkstationConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public WorkstationConfig set(String fieldName, Object value) {
    return (WorkstationConfig) super.set(fieldName, value);
  }

  @Override
  public WorkstationConfig clone() {
    return (WorkstationConfig) super.clone();
  }

}
