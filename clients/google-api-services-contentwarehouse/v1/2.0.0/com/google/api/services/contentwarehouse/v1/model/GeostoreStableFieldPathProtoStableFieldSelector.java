/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for GeostoreStableFieldPathProtoStableFieldSelector.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreStableFieldPathProtoStableFieldSelector extends com.google.api.client.json.GenericJson {

  /**
   * Field number to select.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer fieldNum;

  /**
   * Select repeated field entry by its version token. If this is used, then the message referenced
   * by field_num must have a token field annotated with the (version_token) field option. Must be
   * omitted for leaf non-repeated fields. If unset for a repeated field, we consider this selector
   * to apply equally to all descendants.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String versionToken;

  /**
   * Field number to select.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFieldNum() {
    return fieldNum;
  }

  /**
   * Field number to select.
   * @param fieldNum fieldNum or {@code null} for none
   */
  public GeostoreStableFieldPathProtoStableFieldSelector setFieldNum(java.lang.Integer fieldNum) {
    this.fieldNum = fieldNum;
    return this;
  }

  /**
   * Select repeated field entry by its version token. If this is used, then the message referenced
   * by field_num must have a token field annotated with the (version_token) field option. Must be
   * omitted for leaf non-repeated fields. If unset for a repeated field, we consider this selector
   * to apply equally to all descendants.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersionToken() {
    return versionToken;
  }

  /**
   * Select repeated field entry by its version token. If this is used, then the message referenced
   * by field_num must have a token field annotated with the (version_token) field option. Must be
   * omitted for leaf non-repeated fields. If unset for a repeated field, we consider this selector
   * to apply equally to all descendants.
   * @param versionToken versionToken or {@code null} for none
   */
  public GeostoreStableFieldPathProtoStableFieldSelector setVersionToken(java.lang.String versionToken) {
    this.versionToken = versionToken;
    return this;
  }

  @Override
  public GeostoreStableFieldPathProtoStableFieldSelector set(String fieldName, Object value) {
    return (GeostoreStableFieldPathProtoStableFieldSelector) super.set(fieldName, value);
  }

  @Override
  public GeostoreStableFieldPathProtoStableFieldSelector clone() {
    return (GeostoreStableFieldPathProtoStableFieldSelector) super.clone();
  }

}
