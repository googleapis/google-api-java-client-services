/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmwareengine.v1.model;

/**
 * Management cluster configuration.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VMware Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ManagementCluster extends com.google.api.client.json.GenericJson {

  /**
   * Required. The user-provided identifier of the new `Cluster`. The identifier must meet the
   * following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with
   * an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID *
   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clusterId;

  /**
   * Required. The map of cluster node types in this cluster, where the key is canonical identifier
   * of the node type (corresponds to the `NodeType`).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, NodeTypeConfig> nodeTypeConfigs;

  /**
   * Optional. Configuration of a stretched cluster. Required for STRETCHED private clouds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StretchedClusterConfig stretchedClusterConfig;

  /**
   * Required. The user-provided identifier of the new `Cluster`. The identifier must meet the
   * following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with
   * an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID *
   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
   * @return value or {@code null} for none
   */
  public java.lang.String getClusterId() {
    return clusterId;
  }

  /**
   * Required. The user-provided identifier of the new `Cluster`. The identifier must meet the
   * following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with
   * an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID *
   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
   * @param clusterId clusterId or {@code null} for none
   */
  public ManagementCluster setClusterId(java.lang.String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

  /**
   * Required. The map of cluster node types in this cluster, where the key is canonical identifier
   * of the node type (corresponds to the `NodeType`).
   * @return value or {@code null} for none
   */
  public java.util.Map<String, NodeTypeConfig> getNodeTypeConfigs() {
    return nodeTypeConfigs;
  }

  /**
   * Required. The map of cluster node types in this cluster, where the key is canonical identifier
   * of the node type (corresponds to the `NodeType`).
   * @param nodeTypeConfigs nodeTypeConfigs or {@code null} for none
   */
  public ManagementCluster setNodeTypeConfigs(java.util.Map<String, NodeTypeConfig> nodeTypeConfigs) {
    this.nodeTypeConfigs = nodeTypeConfigs;
    return this;
  }

  /**
   * Optional. Configuration of a stretched cluster. Required for STRETCHED private clouds.
   * @return value or {@code null} for none
   */
  public StretchedClusterConfig getStretchedClusterConfig() {
    return stretchedClusterConfig;
  }

  /**
   * Optional. Configuration of a stretched cluster. Required for STRETCHED private clouds.
   * @param stretchedClusterConfig stretchedClusterConfig or {@code null} for none
   */
  public ManagementCluster setStretchedClusterConfig(StretchedClusterConfig stretchedClusterConfig) {
    this.stretchedClusterConfig = stretchedClusterConfig;
    return this;
  }

  @Override
  public ManagementCluster set(String fieldName, Object value) {
    return (ManagementCluster) super.set(fieldName, value);
  }

  @Override
  public ManagementCluster clone() {
    return (ManagementCluster) super.clone();
  }

}
