/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.solar.v1.model;

/**
 * Financial information that's shared between different financing methods.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Solar API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SavingsOverTime extends com.google.api.client.json.GenericJson {

  /**
   * Indicates whether this scenario is financially viable. Will be false for scenarios with poor
   * financial viability (e.g., money-losing).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean financiallyViable;

  /**
   * Using the assumed discount rate, what is the present value of the cumulative lifetime savings?
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Money presentValueOfSavingsLifetime;

  /**
   * Using the assumed discount rate, what is the present value of the cumulative 20-year savings?
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Money presentValueOfSavingsYear20;

  /**
   * Savings in the entire panel lifetime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Money savingsLifetime;

  /**
   * Savings in the first year after panel installation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Money savingsYear1;

  /**
   * Savings in the first twenty years after panel installation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Money savingsYear20;

  /**
   * Indicates whether this scenario is financially viable. Will be false for scenarios with poor
   * financial viability (e.g., money-losing).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFinanciallyViable() {
    return financiallyViable;
  }

  /**
   * Indicates whether this scenario is financially viable. Will be false for scenarios with poor
   * financial viability (e.g., money-losing).
   * @param financiallyViable financiallyViable or {@code null} for none
   */
  public SavingsOverTime setFinanciallyViable(java.lang.Boolean financiallyViable) {
    this.financiallyViable = financiallyViable;
    return this;
  }

  /**
   * Using the assumed discount rate, what is the present value of the cumulative lifetime savings?
   * @return value or {@code null} for none
   */
  public Money getPresentValueOfSavingsLifetime() {
    return presentValueOfSavingsLifetime;
  }

  /**
   * Using the assumed discount rate, what is the present value of the cumulative lifetime savings?
   * @param presentValueOfSavingsLifetime presentValueOfSavingsLifetime or {@code null} for none
   */
  public SavingsOverTime setPresentValueOfSavingsLifetime(Money presentValueOfSavingsLifetime) {
    this.presentValueOfSavingsLifetime = presentValueOfSavingsLifetime;
    return this;
  }

  /**
   * Using the assumed discount rate, what is the present value of the cumulative 20-year savings?
   * @return value or {@code null} for none
   */
  public Money getPresentValueOfSavingsYear20() {
    return presentValueOfSavingsYear20;
  }

  /**
   * Using the assumed discount rate, what is the present value of the cumulative 20-year savings?
   * @param presentValueOfSavingsYear20 presentValueOfSavingsYear20 or {@code null} for none
   */
  public SavingsOverTime setPresentValueOfSavingsYear20(Money presentValueOfSavingsYear20) {
    this.presentValueOfSavingsYear20 = presentValueOfSavingsYear20;
    return this;
  }

  /**
   * Savings in the entire panel lifetime.
   * @return value or {@code null} for none
   */
  public Money getSavingsLifetime() {
    return savingsLifetime;
  }

  /**
   * Savings in the entire panel lifetime.
   * @param savingsLifetime savingsLifetime or {@code null} for none
   */
  public SavingsOverTime setSavingsLifetime(Money savingsLifetime) {
    this.savingsLifetime = savingsLifetime;
    return this;
  }

  /**
   * Savings in the first year after panel installation.
   * @return value or {@code null} for none
   */
  public Money getSavingsYear1() {
    return savingsYear1;
  }

  /**
   * Savings in the first year after panel installation.
   * @param savingsYear1 savingsYear1 or {@code null} for none
   */
  public SavingsOverTime setSavingsYear1(Money savingsYear1) {
    this.savingsYear1 = savingsYear1;
    return this;
  }

  /**
   * Savings in the first twenty years after panel installation.
   * @return value or {@code null} for none
   */
  public Money getSavingsYear20() {
    return savingsYear20;
  }

  /**
   * Savings in the first twenty years after panel installation.
   * @param savingsYear20 savingsYear20 or {@code null} for none
   */
  public SavingsOverTime setSavingsYear20(Money savingsYear20) {
    this.savingsYear20 = savingsYear20;
    return this;
  }

  @Override
  public SavingsOverTime set(String fieldName, Object value) {
    return (SavingsOverTime) super.set(fieldName, value);
  }

  @Override
  public SavingsOverTime clone() {
    return (SavingsOverTime) super.clone();
  }

}
