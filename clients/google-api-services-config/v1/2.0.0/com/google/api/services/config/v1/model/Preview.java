/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.config.v1.model;

/**
 * A preview represents a set of actions Infra Manager would perform to move the resources towards
 * the desired state as specified in the configuration.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Infrastructure Manager API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Preview extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Arbitrary key-value metadata storage e.g. to help client tools identifiy preview
   * during automation. See https://google.aip.dev/148#annotations for details on format and size
   * limitations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Optional. User-defined location of Cloud Build logs, artifacts, and in Google Cloud Storage.
   * Format: `gs://{bucket}/{folder}` A default bucket will be bootstrapped if the field is not set
   * or empty Default Bucket Format: `gs://--blueprint-config` Constraints: - The bucket needs to be
   * in the same project as the deployment - The path cannot be within the path of `gcs_source` If
   * omitted and deployment resource ref provided has artifacts_gcs_bucket defined, that artifact
   * bucket is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String artifactsGcsBucket;

  /**
   * Output only. Cloud Build instance UUID associated with this preview.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String build;

  /**
   * Output only. Time the preview was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Optional deployment reference. If specified, the preview will be performed using the
   * provided deployment's current state and use any relevant fields from the deployment unless
   * explicitly specified in the preview create request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deployment;

  /**
   * Output only. Code describing any errors that may have occurred.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String errorCode;

  /**
   * Output only. Link to tf-error.ndjson file, which contains the full list of the errors
   * encountered during a Terraform preview. Format: `gs://{bucket}/{object}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String errorLogs;

  /**
   * Output only. Additional information regarding the current state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Status errorStatus;

  /**
   * Optional. User-defined labels for the preview.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. Location of preview logs in `gs://{bucket}/{object}` format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String logs;

  /**
   * Identifier. Resource name of the preview. Resource name can be user provided or server
   * generated ID if unspecified. Format:
   * `projects/{project}/locations/{location}/previews/{preview}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Artifacts from preview.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PreviewArtifacts previewArtifacts;

  /**
   * Optional. Current mode of preview.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String previewMode;

  /**
   * Required. User-specified Service Account (SA) credentials to be used when previewing resources.
   * Format: `projects/{projectID}/serviceAccounts/{serviceAccount}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * Output only. Current state of the preview.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The terraform blueprint to preview.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TerraformBlueprint terraformBlueprint;

  /**
   * Output only. Summary of errors encountered during Terraform preview. It has a size limit of 10,
   * i.e. only top 10 errors will be summarized here.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TerraformError> tfErrors;

  /**
   * Output only. The current Terraform version set on the preview. It is in the format of
   * "Major.Minor.Patch", for example, "1.3.10".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tfVersion;

  /**
   * Optional. The user-specified Terraform version constraint. Example: "=1.3.10".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tfVersionConstraint;

  /**
   * Optional. The user-specified Worker Pool resource in which the Cloud Build job will execute.
   * Format projects/{project}/locations/{location}/workerPools/{workerPoolId} If this field is
   * unspecified, the default Cloud Build worker pool will be used. If omitted and deployment
   * resource ref provided has worker_pool defined, that worker pool is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String workerPool;

  /**
   * Optional. Arbitrary key-value metadata storage e.g. to help client tools identifiy preview
   * during automation. See https://google.aip.dev/148#annotations for details on format and size
   * limitations.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Optional. Arbitrary key-value metadata storage e.g. to help client tools identifiy preview
   * during automation. See https://google.aip.dev/148#annotations for details on format and size
   * limitations.
   * @param annotations annotations or {@code null} for none
   */
  public Preview setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Optional. User-defined location of Cloud Build logs, artifacts, and in Google Cloud Storage.
   * Format: `gs://{bucket}/{folder}` A default bucket will be bootstrapped if the field is not set
   * or empty Default Bucket Format: `gs://--blueprint-config` Constraints: - The bucket needs to be
   * in the same project as the deployment - The path cannot be within the path of `gcs_source` If
   * omitted and deployment resource ref provided has artifacts_gcs_bucket defined, that artifact
   * bucket is used.
   * @return value or {@code null} for none
   */
  public java.lang.String getArtifactsGcsBucket() {
    return artifactsGcsBucket;
  }

  /**
   * Optional. User-defined location of Cloud Build logs, artifacts, and in Google Cloud Storage.
   * Format: `gs://{bucket}/{folder}` A default bucket will be bootstrapped if the field is not set
   * or empty Default Bucket Format: `gs://--blueprint-config` Constraints: - The bucket needs to be
   * in the same project as the deployment - The path cannot be within the path of `gcs_source` If
   * omitted and deployment resource ref provided has artifacts_gcs_bucket defined, that artifact
   * bucket is used.
   * @param artifactsGcsBucket artifactsGcsBucket or {@code null} for none
   */
  public Preview setArtifactsGcsBucket(java.lang.String artifactsGcsBucket) {
    this.artifactsGcsBucket = artifactsGcsBucket;
    return this;
  }

  /**
   * Output only. Cloud Build instance UUID associated with this preview.
   * @return value or {@code null} for none
   */
  public java.lang.String getBuild() {
    return build;
  }

  /**
   * Output only. Cloud Build instance UUID associated with this preview.
   * @param build build or {@code null} for none
   */
  public Preview setBuild(java.lang.String build) {
    this.build = build;
    return this;
  }

  /**
   * Output only. Time the preview was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time the preview was created.
   * @param createTime createTime or {@code null} for none
   */
  public Preview setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Optional deployment reference. If specified, the preview will be performed using the
   * provided deployment's current state and use any relevant fields from the deployment unless
   * explicitly specified in the preview create request.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeployment() {
    return deployment;
  }

  /**
   * Optional. Optional deployment reference. If specified, the preview will be performed using the
   * provided deployment's current state and use any relevant fields from the deployment unless
   * explicitly specified in the preview create request.
   * @param deployment deployment or {@code null} for none
   */
  public Preview setDeployment(java.lang.String deployment) {
    this.deployment = deployment;
    return this;
  }

  /**
   * Output only. Code describing any errors that may have occurred.
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorCode() {
    return errorCode;
  }

  /**
   * Output only. Code describing any errors that may have occurred.
   * @param errorCode errorCode or {@code null} for none
   */
  public Preview setErrorCode(java.lang.String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Output only. Link to tf-error.ndjson file, which contains the full list of the errors
   * encountered during a Terraform preview. Format: `gs://{bucket}/{object}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorLogs() {
    return errorLogs;
  }

  /**
   * Output only. Link to tf-error.ndjson file, which contains the full list of the errors
   * encountered during a Terraform preview. Format: `gs://{bucket}/{object}`.
   * @param errorLogs errorLogs or {@code null} for none
   */
  public Preview setErrorLogs(java.lang.String errorLogs) {
    this.errorLogs = errorLogs;
    return this;
  }

  /**
   * Output only. Additional information regarding the current state.
   * @return value or {@code null} for none
   */
  public Status getErrorStatus() {
    return errorStatus;
  }

  /**
   * Output only. Additional information regarding the current state.
   * @param errorStatus errorStatus or {@code null} for none
   */
  public Preview setErrorStatus(Status errorStatus) {
    this.errorStatus = errorStatus;
    return this;
  }

  /**
   * Optional. User-defined labels for the preview.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. User-defined labels for the preview.
   * @param labels labels or {@code null} for none
   */
  public Preview setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. Location of preview logs in `gs://{bucket}/{object}` format.
   * @return value or {@code null} for none
   */
  public java.lang.String getLogs() {
    return logs;
  }

  /**
   * Output only. Location of preview logs in `gs://{bucket}/{object}` format.
   * @param logs logs or {@code null} for none
   */
  public Preview setLogs(java.lang.String logs) {
    this.logs = logs;
    return this;
  }

  /**
   * Identifier. Resource name of the preview. Resource name can be user provided or server
   * generated ID if unspecified. Format:
   * `projects/{project}/locations/{location}/previews/{preview}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. Resource name of the preview. Resource name can be user provided or server
   * generated ID if unspecified. Format:
   * `projects/{project}/locations/{location}/previews/{preview}`
   * @param name name or {@code null} for none
   */
  public Preview setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Artifacts from preview.
   * @return value or {@code null} for none
   */
  public PreviewArtifacts getPreviewArtifacts() {
    return previewArtifacts;
  }

  /**
   * Output only. Artifacts from preview.
   * @param previewArtifacts previewArtifacts or {@code null} for none
   */
  public Preview setPreviewArtifacts(PreviewArtifacts previewArtifacts) {
    this.previewArtifacts = previewArtifacts;
    return this;
  }

  /**
   * Optional. Current mode of preview.
   * @return value or {@code null} for none
   */
  public java.lang.String getPreviewMode() {
    return previewMode;
  }

  /**
   * Optional. Current mode of preview.
   * @param previewMode previewMode or {@code null} for none
   */
  public Preview setPreviewMode(java.lang.String previewMode) {
    this.previewMode = previewMode;
    return this;
  }

  /**
   * Required. User-specified Service Account (SA) credentials to be used when previewing resources.
   * Format: `projects/{projectID}/serviceAccounts/{serviceAccount}`
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * Required. User-specified Service Account (SA) credentials to be used when previewing resources.
   * Format: `projects/{projectID}/serviceAccounts/{serviceAccount}`
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public Preview setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Output only. Current state of the preview.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Current state of the preview.
   * @param state state or {@code null} for none
   */
  public Preview setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * The terraform blueprint to preview.
   * @return value or {@code null} for none
   */
  public TerraformBlueprint getTerraformBlueprint() {
    return terraformBlueprint;
  }

  /**
   * The terraform blueprint to preview.
   * @param terraformBlueprint terraformBlueprint or {@code null} for none
   */
  public Preview setTerraformBlueprint(TerraformBlueprint terraformBlueprint) {
    this.terraformBlueprint = terraformBlueprint;
    return this;
  }

  /**
   * Output only. Summary of errors encountered during Terraform preview. It has a size limit of 10,
   * i.e. only top 10 errors will be summarized here.
   * @return value or {@code null} for none
   */
  public java.util.List<TerraformError> getTfErrors() {
    return tfErrors;
  }

  /**
   * Output only. Summary of errors encountered during Terraform preview. It has a size limit of 10,
   * i.e. only top 10 errors will be summarized here.
   * @param tfErrors tfErrors or {@code null} for none
   */
  public Preview setTfErrors(java.util.List<TerraformError> tfErrors) {
    this.tfErrors = tfErrors;
    return this;
  }

  /**
   * Output only. The current Terraform version set on the preview. It is in the format of
   * "Major.Minor.Patch", for example, "1.3.10".
   * @return value or {@code null} for none
   */
  public java.lang.String getTfVersion() {
    return tfVersion;
  }

  /**
   * Output only. The current Terraform version set on the preview. It is in the format of
   * "Major.Minor.Patch", for example, "1.3.10".
   * @param tfVersion tfVersion or {@code null} for none
   */
  public Preview setTfVersion(java.lang.String tfVersion) {
    this.tfVersion = tfVersion;
    return this;
  }

  /**
   * Optional. The user-specified Terraform version constraint. Example: "=1.3.10".
   * @return value or {@code null} for none
   */
  public java.lang.String getTfVersionConstraint() {
    return tfVersionConstraint;
  }

  /**
   * Optional. The user-specified Terraform version constraint. Example: "=1.3.10".
   * @param tfVersionConstraint tfVersionConstraint or {@code null} for none
   */
  public Preview setTfVersionConstraint(java.lang.String tfVersionConstraint) {
    this.tfVersionConstraint = tfVersionConstraint;
    return this;
  }

  /**
   * Optional. The user-specified Worker Pool resource in which the Cloud Build job will execute.
   * Format projects/{project}/locations/{location}/workerPools/{workerPoolId} If this field is
   * unspecified, the default Cloud Build worker pool will be used. If omitted and deployment
   * resource ref provided has worker_pool defined, that worker pool is used.
   * @return value or {@code null} for none
   */
  public java.lang.String getWorkerPool() {
    return workerPool;
  }

  /**
   * Optional. The user-specified Worker Pool resource in which the Cloud Build job will execute.
   * Format projects/{project}/locations/{location}/workerPools/{workerPoolId} If this field is
   * unspecified, the default Cloud Build worker pool will be used. If omitted and deployment
   * resource ref provided has worker_pool defined, that worker pool is used.
   * @param workerPool workerPool or {@code null} for none
   */
  public Preview setWorkerPool(java.lang.String workerPool) {
    this.workerPool = workerPool;
    return this;
  }

  @Override
  public Preview set(String fieldName, Object value) {
    return (Preview) super.set(fieldName, value);
  }

  @Override
  public Preview clone() {
    return (Preview) super.clone();
  }

}
