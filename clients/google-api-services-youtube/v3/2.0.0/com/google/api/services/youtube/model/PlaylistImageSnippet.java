/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.youtube.model;

/**
 * A *playlistImage* resource identifies another resource, such as a image, that is associated with
 * a playlist. In addition, the playlistImage resource contains details about the included resource
 * that pertain specifically to how that resource is used in that playlist. YouTube uses playlists
 * to identify special collections of videos for a channel, such as: - uploaded videos - favorite
 * videos - positively rated (liked) videos - watch history To be more specific, these lists are
 * associated with a channel, which is a collection of a person, group, or company's videos,
 * playlists, and other YouTube information. You can retrieve the playlist IDs for each of these
 * lists from the channel resource for a given channel. You can then use the playlistImages.list
 * method to retrieve image data for any of those playlists. You can also add or remove images from
 * those lists by calling the playlistImages.insert and playlistImages.delete methods.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the YouTube Data API v3. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PlaylistImageSnippet extends com.google.api.client.json.GenericJson {

  /**
   * The image height.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer height;

  /**
   * The Playlist ID of the playlist this image is associated with.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String playlistId;

  /**
   * The image type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The image width.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer width;

  /**
   * The image height.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getHeight() {
    return height;
  }

  /**
   * The image height.
   * @param height height or {@code null} for none
   */
  public PlaylistImageSnippet setHeight(java.lang.Integer height) {
    this.height = height;
    return this;
  }

  /**
   * The Playlist ID of the playlist this image is associated with.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlaylistId() {
    return playlistId;
  }

  /**
   * The Playlist ID of the playlist this image is associated with.
   * @param playlistId playlistId or {@code null} for none
   */
  public PlaylistImageSnippet setPlaylistId(java.lang.String playlistId) {
    this.playlistId = playlistId;
    return this;
  }

  /**
   * The image type.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The image type.
   * @param type type or {@code null} for none
   */
  public PlaylistImageSnippet setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * The image width.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getWidth() {
    return width;
  }

  /**
   * The image width.
   * @param width width or {@code null} for none
   */
  public PlaylistImageSnippet setWidth(java.lang.Integer width) {
    this.width = width;
    return this;
  }

  @Override
  public PlaylistImageSnippet set(String fieldName, Object value) {
    return (PlaylistImageSnippet) super.set(fieldName, value);
  }

  @Override
  public PlaylistImageSnippet clone() {
    return (PlaylistImageSnippet) super.clone();
  }

}
