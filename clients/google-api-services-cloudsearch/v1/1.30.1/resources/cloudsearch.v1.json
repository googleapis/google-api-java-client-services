{
  "version_module": true,
  "schemas": {
    "IntegerPropertyOptions": {
      "description": "Options for integer properties.",
      "type": "object",
      "properties": {
        "orderedRanking": {
          "type": "string",
          "enumDescriptions": [
            "There is no ranking order for the property. Results will not be adjusted\nby this property's value.",
            "This property is ranked in ascending order. Lower values indicate lower\nranking.",
            "This property is ranked in descending order. Lower values indicate\nhigher ranking."
          ],
          "enum": [
            "NO_ORDER",
            "ASCENDING",
            "DESCENDING"
          ],
          "description": "Used to specify the ordered ranking for the integer. Can only be used if\nisRepeatable\nis false."
        },
        "maximumValue": {
          "type": "string",
          "description": "The maximum value of the property. The minimum and maximum values for the\nproperty are used to rank results according to the\nordered ranking.\nIndexing requests with values greater than the maximum are accepted and\nranked with the same weight as items indexed with the maximum value.",
          "format": "int64"
        },
        "minimumValue": {
          "description": "The minimum value of the property. The minimum and maximum values for the\nproperty are used to rank results according to the\nordered ranking.\nIndexing requests with values less than the minimum are accepted and\nranked with the same weight as items indexed with the minimum value.",
          "format": "int64",
          "type": "string"
        },
        "operatorOptions": {
          "description": "If set, describes how the integer should be used as a search operator.",
          "$ref": "IntegerOperatorOptions"
        }
      },
      "id": "IntegerPropertyOptions"
    },
    "ItemMetadata": {
      "description": "Available metadata fields for the item.",
      "type": "object",
      "properties": {
        "objectType": {
          "description": "The type of the item.  This should correspond to the name of an object\ndefinition in the schema registered for the data source.  For example, if\nthe schema for the data source contains an object definition with name\n'document', then item indexing requests for objects of that type should set\nobjectType to 'document'.\nThe maximum length is 256 characters.",
          "type": "string"
        },
        "hash": {
          "description": "Hashing value provided by the API caller.\nThis can be used with the\nitems.push\nmethod to calculate modified state.\nThe maximum length is 2048 characters.",
          "type": "string"
        },
        "searchQualityMetadata": {
          "$ref": "SearchQualityMetadata",
          "description": "Additional search quality metadata of the item"
        },
        "interactions": {
          "description": "A list of interactions for the item.  Interactions are used to improve\nSearch quality, but are not exposed to end users.\nThe maximum number of elements is 1000.",
          "type": "array",
          "items": {
            "$ref": "Interaction"
          }
        },
        "keywords": {
          "description": "Additional keywords or phrases that should match the item.\nUsed internally for user generated content.\nThe maximum number of elements is 100.\nThe maximum length is 8192 characters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mimeType": {
          "description": "The original mime-type of\nItemContent.content\nin the source repository.\nThe maximum length is 256 characters.",
          "type": "string"
        },
        "title": {
          "description": "The title of the item.  If given, this will be the displayed title of the\nSearch result.\nThe maximum length is 2048 characters.",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the item was created in the source repository.",
          "format": "google-datetime",
          "type": "string"
        },
        "contentLanguage": {
          "description": "The BCP-47 language code for the item, such as \"en-US\" or \"sr-Latn\". For\nmore information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\nThe maximum length is 32 characters.",
          "type": "string"
        },
        "sourceRepositoryUrl": {
          "description": "Link to the source repository serving the data.  &#83;earch results apply\nthis link to the title.\nThe maximum length is 2048 characters.",
          "type": "string"
        },
        "updateTime": {
          "description": "The time when the item was last modified in the source repository.",
          "format": "google-datetime",
          "type": "string"
        },
        "containerName": {
          "description": "The name of the container for this item.\nDeletion of the container item leads to automatic deletion of this\nitem.  Note: ACLs are not inherited from a container item.\nTo provide ACL inheritance for an item, use the\ninheritAclFrom\nfield. The maximum length is 1536 characters.",
          "type": "string"
        }
      },
      "id": "ItemMetadata"
    },
    "CustomerQueryStats": {
      "type": "object",
      "properties": {
        "date": {
          "description": "Date for which query stats were calculated. Stats calculated on the next\nday close to midnight are returned.",
          "$ref": "Date"
        },
        "queryCountByStatus": {
          "type": "array",
          "items": {
            "$ref": "QueryCountByStatus"
          }
        }
      },
      "id": "CustomerQueryStats"
    },
    "IndexItemOptions": {
      "type": "object",
      "properties": {
        "allowUnknownGsuitePrincipals": {
          "type": "boolean",
          "description": "Specifies if the index request should allow gsuite principals that do not\nexist or are deleted in the index request."
        }
      },
      "id": "IndexItemOptions"
    },
    "StructuredDataObject": {
      "id": "StructuredDataObject",
      "description": "A structured data object consisting of named properties.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties for the object.\nThe maximum number of elements is 1000.",
          "type": "array",
          "items": {
            "$ref": "NamedProperty"
          }
        }
      }
    },
    "EnumPropertyOptions": {
      "type": "object",
      "properties": {
        "orderedRanking": {
          "type": "string",
          "enumDescriptions": [
            "There is no ranking order for the property. Results will not be adjusted\nby this property's value.",
            "This property is ranked in ascending order. Lower values indicate lower\nranking.",
            "This property is ranked in descending order. Lower values indicate\nhigher ranking."
          ],
          "enum": [
            "NO_ORDER",
            "ASCENDING",
            "DESCENDING"
          ],
          "description": "Used to specify the ordered ranking for the enumeration that determines how\nthe integer values provided in the possible EnumValuePairs are used to rank\nresults. If specified, integer values must be provided for all possible\nEnumValuePair values given for this property. Can only be used if\nisRepeatable\nis false."
        },
        "operatorOptions": {
          "$ref": "EnumOperatorOptions",
          "description": "If set, describes how the enum should be used as a search operator."
        },
        "possibleValues": {
          "description": "The list of possible values for the enumeration property. All\nEnumValuePairs must provide a string value. If you specify an integer value\nfor one EnumValuePair, then all possible EnumValuePairs must provide an\ninteger value. Both the string value and integer value must be unique over\nall possible values. Once set, possible values cannot be removed or\nmodified. If you supply an ordered ranking and think you might insert\nadditional enum values in the future, leave gaps in the initial integer\nvalues to allow adding a value in between previously registered values.\nThe maximum number of elements is 100.",
          "type": "array",
          "items": {
            "$ref": "EnumValuePair"
          }
        }
      },
      "id": "EnumPropertyOptions",
      "description": "Options for enum properties, which allow you to define a restricted set of\nstrings to match user queries, set rankings for those string values, and\ndefine an operator name to be paired with those strings so that users can\nnarrow results to only items with a specific value. For example, for items in\na request tracking system with priority information, you could define *p0* as\nan allowable enum value and tie this enum to the operator name *priority* so\nthat search users could add *priority:p0* to their query to restrict the set\nof results to only those items indexed with the value *p0*."
    },
    "SourceResultCount": {
      "id": "SourceResultCount",
      "description": "Per source result count information.",
      "type": "object",
      "properties": {
        "source": {
          "description": "The source the result count information is associated with.",
          "$ref": "Source"
        },
        "resultCountExact": {
          "type": "string",
          "description": "The exact result count for this source.",
          "format": "int64"
        },
        "resultCountEstimate": {
          "type": "string",
          "description": "The estimated result count for this source.",
          "format": "int64"
        },
        "hasMoreResults": {
          "description": "Whether there are more search results for this source.",
          "type": "boolean"
        }
      }
    },
    "GetCustomerIndexStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "description": "Summary of indexed item counts, one for each day in the requested range.",
          "type": "array",
          "items": {
            "$ref": "CustomerIndexStats"
          }
        }
      },
      "id": "GetCustomerIndexStatsResponse"
    },
    "QuerySource": {
      "type": "object",
      "properties": {
        "operators": {
          "type": "array",
          "items": {
            "$ref": "QueryOperator"
          },
          "description": "List of all operators applicable for this source."
        },
        "shortName": {
          "description": "A short name or alias for the source.  This value can be used with the\n'source' operator.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the data source.",
          "type": "string"
        },
        "source": {
          "$ref": "Source",
          "description": "Name of the source"
        }
      },
      "id": "QuerySource",
      "description": "List of sources that the user can search using the query API."
    },
    "QueryInterpretation": {
      "type": "object",
      "properties": {
        "interpretationType": {
          "enum": [
            "NONE",
            "BLEND",
            "REPLACE"
          ],
          "type": "string",
          "enumDescriptions": [
            "No natural language interpretation or the natural language interpretation\nis not used to fetch the search results.",
            "The natural language results is mixed with results from original query.",
            "The results from original query are replaced. The reason for replacing\nthe results from original query is populated in the 'Reason' field below."
          ]
        },
        "reason": {
          "enum": [
            "UNSPECIFIED",
            "QUERY_HAS_NATURAL_LANGUAGE_INTENT",
            "NOT_ENOUGH_RESULTS_FOUND_FOR_USER_QUERY",
            "NO_RESULTS_FOUND_FOR_USER_QUERY"
          ],
          "description": "The reason for interpretation of the query. This field will not be\nUNSPECIFIED if the interpretation type is not NONE.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Natural language interpretation of the query is used to fetch the search\nresults.",
            "A much broader version of the query is used to retrieve the search\nresults since enough results were not found for the user query.\nInterpreted query will be empty for this case.",
            ""
          ]
        },
        "interpretedQuery": {
          "description": "The interpretation of the query used in search. For example, queries with\nnatural language intent like \"email from john\" will be interpreted as\n\"from:john source:mail\". This field will not be filled when the reason is\nNO_RESULTS_FOUND_FOR_USER_QUERY.",
          "type": "string"
        }
      },
      "id": "QueryInterpretation"
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "Source"
        },
        "errorMessage": {
          "type": "string"
        }
      },
      "id": "ErrorMessage",
      "description": "Error message per source response."
    },
    "TextOperatorOptions": {
      "description": "Used to provide a search operator for text properties. This is optional.\nSearch operators let users restrict the query to specific fields relevant\nto the type of item being searched.",
      "type": "object",
      "properties": {
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the\ntext property. For example, if operatorName is *subject* and the\nproperty's name is *subjectLine*, then queries like\n*subject:&lt;value&gt;* will show results only where the value of the\nproperty named *subjectLine* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any\ntext properties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
          "type": "string"
        },
        "exactMatchWithOperator": {
          "type": "boolean",
          "description": "If true, the text value will be tokenized as one atomic value in\noperator searches and facet matches. For example, if the operator name is\n\"genre\" and the value is \"science-fiction\" the query restrictions\n\"genre:science\" and \"genre:fiction\" will not match the item;\n\"genre:science-fiction\" will. Value matching is case-sensitive\nand does not remove special characters.\nIf false, the text will be tokenized. For example, if the value is\n\"science-fiction\" the queries \"genre:science\" and \"genre:fiction\" will\nmatch the item."
        }
      },
      "id": "TextOperatorOptions"
    },
    "ResultDisplayField": {
      "id": "ResultDisplayField",
      "description": "Display Fields for Search Results",
      "type": "object",
      "properties": {
        "operatorName": {
          "description": "The operator name of the property.",
          "type": "string"
        },
        "label": {
          "description": "The display label for the property.",
          "type": "string"
        },
        "property": {
          "description": "The name value pair for the property.",
          "$ref": "NamedProperty"
        }
      }
    },
    "ListQuerySourcesResponse": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "$ref": "QuerySource"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "id": "ListQuerySourcesResponse",
      "description": "List sources response."
    },
    "Media": {
      "type": "object",
      "properties": {
        "resourceName": {
          "description": "Name of the media resource.",
          "type": "string"
        }
      },
      "id": "Media",
      "description": "Media resource."
    },
    "FacetBucket": {
      "description": "A bucket in a facet is the basic unit of operation. A bucket can comprise\neither a single value OR a contiguous range of values, depending on the\ntype of the field bucketed.\nFacetBucket is currently used only for returning the response object.",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "Value"
        },
        "count": {
          "description": "Number of results that match the bucket value. Counts are only returned\nfor searches when count accuracy is ensured. Can be empty.",
          "format": "int32",
          "type": "integer"
        },
        "percentage": {
          "type": "integer",
          "description": "Percent of results that match the bucket value. This value is between\n(0-100]. Percentages are returned for all searches, but are an estimate.\nBecause percentages are always returned, you should render percentages\ninstead of counts.",
          "format": "int32"
        }
      },
      "id": "FacetBucket"
    },
    "Filter": {
      "description": "A generic way of expressing filters in a query, which supports two\napproaches: \u003cbr/\u003e\u003cbr/\u003e\n**1. Setting a ValueFilter.** The name must match an operator_name defined in\nthe schema for your data source.\n\u003cbr/\u003e\n**2. Setting a CompositeFilter.** The filters are evaluated\nusing the logical operator. The top-level operators can only be either an AND\nor a NOT. AND can appear only at the top-most level. OR can appear only under\na top-level AND.",
      "type": "object",
      "properties": {
        "valueFilter": {
          "$ref": "ValueFilter"
        },
        "compositeFilter": {
          "$ref": "CompositeFilter"
        }
      },
      "id": "Filter"
    },
    "GetSearchApplicationSessionStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "$ref": "SearchApplicationSessionStats"
          }
        }
      },
      "id": "GetSearchApplicationSessionStatsResponse"
    },
    "IntegerOperatorOptions": {
      "id": "IntegerOperatorOptions",
      "description": "Used to provide a search operator for integer properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched.",
      "type": "object",
      "properties": {
        "lessThanOperatorName": {
          "type": "string",
          "description": "Indicates the operator name required in the query in order to isolate the\ninteger property using the less-than operator. For example, if\nlessThanOperatorName is *prioritybelow* and the property's name is\n*priorityVal*, then queries like *prioritybelow:&lt;value&gt;* will\nshow results only where the value of the property named *priorityVal* is\nless than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters."
        },
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the\ninteger property. For example, if operatorName is *priority* and the\nproperty's name is *priorityVal*, then queries like\n*priority:&lt;value&gt;* will show results only where the value of the\nproperty named *priorityVal* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any String\nproperties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
          "type": "string"
        },
        "greaterThanOperatorName": {
          "type": "string",
          "description": "Indicates the operator name required in the query in order to isolate the\ninteger property using the greater-than operator. For example, if\ngreaterThanOperatorName is *priorityabove* and the property's name is\n*priorityVal*, then queries like *priorityabove:&lt;value&gt;* will\nshow results only where the value of the property named *priorityVal* is\ngreater than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters."
        }
      }
    },
    "Name": {
      "id": "Name",
      "description": "A person's name.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The read-only display name formatted according to the locale specified by\nthe viewer's account or the \u003ccode\u003eAccept-Language\u003c/code\u003e HTTP header.",
          "type": "string"
        }
      }
    },
    "ResetSearchApplicationRequest": {
      "type": "object",
      "properties": {
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        }
      },
      "id": "ResetSearchApplicationRequest"
    },
    "FilterOptions": {
      "id": "FilterOptions",
      "description": "Filter options to be applied on query.",
      "type": "object",
      "properties": {
        "objectType": {
          "description": "If object_type is set, only objects of that type are returned. This should\ncorrespond to the name of the object that was registered within the\ndefinition of schema. The maximum length is 256 characters.",
          "type": "string"
        },
        "filter": {
          "description": "Generic filter to restrict the search, such as `lang:en`, `site:xyz`.",
          "$ref": "Filter"
        }
      }
    },
    "CustomerUserStats": {
      "id": "CustomerUserStats",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date for which session stats were calculated. Stats calculated on the next\nday close to midnight are returned.",
          "$ref": "Date"
        },
        "thirtyDaysActiveUsersCount": {
          "type": "string",
          "description": "The count of unique active users in the past thirty days",
          "format": "int64"
        },
        "sevenDaysActiveUsersCount": {
          "description": "The count of unique active users in the past seven days",
          "format": "int64",
          "type": "string"
        },
        "oneDayActiveUsersCount": {
          "type": "string",
          "description": "The count of unique active users in the past one day",
          "format": "int64"
        }
      }
    },
    "ProcessingError": {
      "type": "object",
      "properties": {
        "fieldViolations": {
          "description": "In case the item fields are invalid, this field contains the details\nabout the validation errors.",
          "type": "array",
          "items": {
            "$ref": "FieldViolation"
          }
        },
        "code": {
          "type": "string",
          "enumDescriptions": [
            "Input only value.  Use this value in Items.",
            "Item's ACL, metadata, or content is malformed or in invalid state.\nFieldViolations contains more details on where the problem is.",
            "Countent format is unsupported.",
            "Items with incomplete ACL information due to inheriting other\nitems with broken ACL or having groups with unmapped descendants.",
            "ACL inheritance graph formed a cycle."
          ],
          "enum": [
            "PROCESSING_ERROR_CODE_UNSPECIFIED",
            "MALFORMED_REQUEST",
            "UNSUPPORTED_CONTENT_FORMAT",
            "INDIRECT_BROKEN_ACL",
            "ACL_CYCLE"
          ],
          "description": "Error code indicating the nature of the error."
        },
        "errorMessage": {
          "description": "Description of the error.",
          "type": "string"
        }
      },
      "id": "ProcessingError"
    },
    "EnumValues": {
      "description": "List of enum values.",
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The maximum allowable length for string values is 32 characters."
        }
      },
      "id": "EnumValues"
    },
    "ResultDisplayLine": {
      "description": "The collection of fields that make up a displayed line",
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "ResultDisplayField"
          }
        }
      },
      "id": "ResultDisplayLine"
    },
    "SearchApplicationUserStats": {
      "type": "object",
      "properties": {
        "sevenDaysActiveUsersCount": {
          "description": "The count of unique active users in the past seven days",
          "format": "int64",
          "type": "string"
        },
        "oneDayActiveUsersCount": {
          "description": "The count of unique active users in the past one day",
          "format": "int64",
          "type": "string"
        },
        "date": {
          "$ref": "Date",
          "description": "Date for which session stats were calculated. Stats calculated on the next\nday close to midnight are returned."
        },
        "thirtyDaysActiveUsersCount": {
          "description": "The count of unique active users in the past thirty days",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "SearchApplicationUserStats"
    },
    "ListUnmappedIdentitiesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        },
        "unmappedIdentities": {
          "type": "array",
          "items": {
            "$ref": "UnmappedIdentity"
          }
        }
      },
      "id": "ListUnmappedIdentitiesResponse"
    },
    "DataSourceIndexStats": {
      "id": "DataSourceIndexStats",
      "description": "Aggregation of items by status code as of the specified date.",
      "type": "object",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "Date for which index stats were calculated. If the date of request is not\nthe current date then stats calculated on the next day are returned. Stats\nare calculated close to mid night in this case. If date of request is\ncurrent date, then real time stats are returned."
        },
        "itemCountByStatus": {
          "description": "Number of items aggregrated by status code.",
          "type": "array",
          "items": {
            "$ref": "ItemCountByStatus"
          }
        }
      }
    },
    "ItemStructuredData": {
      "id": "ItemStructuredData",
      "description": "Available structured data fields for the item.",
      "type": "object",
      "properties": {
        "object": {
          "$ref": "StructuredDataObject",
          "description": "The structured data object that should conform to a registered object\ndefinition in the schema for the data source."
        },
        "hash": {
          "description": "Hashing value provided by the API caller.\nThis can be used with the\nitems.push\nmethod to calculate modified state.\nThe maximum length is 2048 characters.",
          "type": "string"
        }
      }
    },
    "DebugOptions": {
      "description": "Shared request debug options for all cloudsearch RPC methods.",
      "type": "object",
      "properties": {
        "enableDebugging": {
          "type": "boolean",
          "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field."
        }
      },
      "id": "DebugOptions"
    },
    "Item": {
      "type": "object",
      "properties": {
        "queue": {
          "type": "string",
          "description": "Queue this item belongs to.\nThe maximum length is 100 characters."
        },
        "version": {
          "description": "Required. The indexing system stores the version from the datasource as a\nbyte string and compares the Item version in the index\nto the version of the queued Item using lexical ordering.\n\u003cbr /\u003e\u003cbr /\u003e\nCloud Search Indexing won't index or delete any queued item with\na version value that is less than or equal to the version of the\ncurrently indexed item.\nThe maximum length for this field is 1024 bytes.",
          "format": "byte",
          "type": "string"
        },
        "itemType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "An item that is indexed for the only purpose of serving information.\nThese items cannot be referred in\ncontainerName\nor inheritAclFrom\nfields.",
            "An item that gets indexed and whose purpose is to supply other items\nwith ACLs and/or contain other items.",
            "An item that does not get indexed, but otherwise has the same purpose\nas CONTAINER_ITEM."
          ],
          "enum": [
            "UNSPECIFIED",
            "CONTENT_ITEM",
            "CONTAINER_ITEM",
            "VIRTUAL_CONTAINER_ITEM"
          ],
          "description": "Type for this item."
        },
        "structuredData": {
          "$ref": "ItemStructuredData",
          "description": "The structured data for the item that should conform to a registered\nobject definition in the schema for the data source."
        },
        "status": {
          "description": "Status of the item.\nOutput only field.",
          "$ref": "ItemStatus"
        },
        "name": {
          "description": "Name of the Item. Format:\ndatasources/{source_id}/items/{item_id}\n\u003cbr /\u003eThis is a required field.\nThe maximum length is 1536 characters.",
          "type": "string"
        },
        "payload": {
          "type": "string",
          "description": "Additional state connector can store for this item.\nThe maximum length is 10000 bytes.",
          "format": "byte"
        },
        "acl": {
          "description": "Access control list for this item.",
          "$ref": "ItemAcl"
        },
        "content": {
          "description": "Item content to be indexed and made text searchable.",
          "$ref": "ItemContent"
        },
        "metadata": {
          "$ref": "ItemMetadata",
          "description": "Metadata information."
        }
      },
      "id": "Item",
      "description": "Represents a single object that is an item in the search index, such as a\nfile, folder, or a database record."
    },
    "Interaction": {
      "description": "Represents an interaction between a user and an item.",
      "type": "object",
      "properties": {
        "interactionTime": {
          "type": "string",
          "description": "The time when the user acted on the item.  If multiple actions of the same\ntype exist for a single user, only the most recent action is recorded.",
          "format": "google-datetime"
        },
        "principal": {
          "$ref": "Principal",
          "description": "The user that acted on the item."
        },
        "type": {
          "enum": [
            "UNSPECIFIED",
            "VIEW",
            "EDIT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "This interaction indicates the user viewed the item.",
            "This interaction indicates the user edited the item."
          ]
        }
      },
      "id": "Interaction"
    },
    "Value": {
      "type": "object",
      "properties": {
        "doubleValue": {
          "type": "number",
          "format": "double"
        },
        "timestampValue": {
          "format": "google-datetime",
          "type": "string"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "integerValue": {
          "type": "string",
          "format": "int64"
        },
        "stringValue": {
          "type": "string"
        },
        "dateValue": {
          "$ref": "Date"
        }
      },
      "id": "Value",
      "description": "Definition of a single value with generic type."
    },
    "StartUploadItemRequest": {
      "description": "Start upload file request.",
      "type": "object",
      "properties": {
        "connectorName": {
          "description": "Name of connector making this call.\n\u003cbr /\u003eFormat: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "debugOptions": {
          "description": "Common debug options.",
          "$ref": "DebugOptions"
        }
      },
      "id": "StartUploadItemRequest"
    },
    "Photo": {
      "id": "Photo",
      "description": "A person's photo.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of the photo."
        }
      }
    },
    "ItemAcl": {
      "description": "Access control list information for the item. For more information see\nhttps://developers.google.com/cloud-search/docs/guides/index-your-data#acls",
      "type": "object",
      "properties": {
        "aclInheritanceType": {
          "enum": [
            "NOT_APPLICABLE",
            "CHILD_OVERRIDE",
            "PARENT_OVERRIDE",
            "BOTH_PERMIT"
          ],
          "description": "Sets the type of access rules to apply when an item inherits its ACL from a\nparent. This should always be set in tandem with the\ninheritAclFrom\nfield. Also, when the\ninheritAclFrom field\nis set, this field should be set to a valid AclInheritanceType.",
          "type": "string",
          "enumDescriptions": [
            "The default value when this item does not inherit an ACL.\nUse NOT_APPLICABLE when\ninheritAclFrom\nis empty.  An item without ACL inheritance can still have ACLs supplied\nby its own readers and\ndeniedReaders fields.",
            "During an authorization conflict, the ACL of the child item determines\nits read access.",
            "During an authorization conflict, the ACL of the parent item\nspecified in the\ninheritAclFrom\nfield determines read access.",
            "Access is granted only if this item and the parent item specified in\nthe inheritAclFrom\nfield both permit read access."
          ]
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "Principal"
          },
          "description": "Optional. List of owners for the item. This field has no bearing on\ndocument access permissions. It does, however, offer\na slight ranking boosts items where the querying user is an owner.\nThe maximum number of elements is 5."
        },
        "inheritAclFrom": {
          "type": "string",
          "description": "Name of the item to inherit the Access Permission List (ACL) from.\nNote: ACL inheritance *only* provides access permissions\nto child items and does not define structural relationships, nor does it\nprovide convenient ways to delete large groups of items.\nDeleting an ACL parent from the index only alters the access permissions of\nchild items that reference the parent in the\ninheritAclFrom\nfield. The item is still in the index, but may not\nvisible in search results. By contrast, deletion of a container item\nalso deletes all items that reference the container via the\ncontainerName\nfield.\nThe maximum length for this field is 1536 characters."
        },
        "deniedReaders": {
          "description": "List of principals who are explicitly denied access to the item in search\nresults. While principals are denied access by default, use denied readers\nto handle exceptions and override the list allowed readers.\nThe maximum number of elements is 100.",
          "type": "array",
          "items": {
            "$ref": "Principal"
          }
        },
        "readers": {
          "type": "array",
          "items": {
            "$ref": "Principal"
          },
          "description": "List of principals who are allowed to see the item in search results.\nOptional if inheriting permissions from another item or if the item\nis not intended to be visible, such as\nvirtual\ncontainers.\nThe maximum number of elements is 1000."
        }
      },
      "id": "ItemAcl"
    },
    "RepositoryError": {
      "id": "RepositoryError",
      "description": "Errors when the connector is communicating to the source repository.",
      "type": "object",
      "properties": {
        "httpStatusCode": {
          "description": "Error codes.  Matches the definition of HTTP status codes.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "UNKNOWN",
            "NETWORK_ERROR",
            "DNS_ERROR",
            "CONNECTION_ERROR",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "SERVER_ERROR",
            "QUOTA_EXCEEDED",
            "SERVICE_UNAVAILABLE",
            "CLIENT_ERROR"
          ],
          "description": "Type of error.",
          "type": "string",
          "enumDescriptions": [
            "Unknown error.",
            "Unknown or unreachable host.",
            "DNS problem, such as the DNS server is not responding.",
            "Cannot connect to the repository server.",
            "Failed authentication due to incorrect credentials.",
            "Service account is not authorized for the repository.",
            "Repository server error.",
            "Quota exceeded.",
            "Server temporarily unavailable.",
            "Client-related error, such as an invalid request from the connector to\nthe repository server."
          ]
        },
        "errorMessage": {
          "type": "string",
          "description": "Message that describes the error. The maximum allowable length\nof the message is 8192 characters."
        }
      }
    },
    "Principal": {
      "description": "Reference to a user, group, or domain.",
      "type": "object",
      "properties": {
        "groupResourceName": {
          "description": "This principal is a group identified using an external identity.\nThe name field must specify the group resource name with this format:\nidentitysources/{source_id}/groups/{ID}",
          "type": "string"
        },
        "userResourceName": {
          "description": "This principal is a user identified using an external identity.\nThe name field must specify the user resource name with this format:\nidentitysources/{source_id}/users/{ID}",
          "type": "string"
        },
        "gsuitePrincipal": {
          "$ref": "GSuitePrincipal",
          "description": "This principal is a GSuite user, group or domain."
        }
      },
      "id": "Principal"
    },
    "GetSearchApplicationQueryStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "$ref": "SearchApplicationQueryStats"
          }
        }
      },
      "id": "GetSearchApplicationQueryStatsResponse"
    },
    "ResultDebugInfo": {
      "description": "Debugging information about the result.",
      "type": "object",
      "properties": {
        "formattedDebugInfo": {
          "description": "General debug info formatted for display.",
          "type": "string"
        }
      },
      "id": "ResultDebugInfo"
    },
    "SortOptions": {
      "type": "object",
      "properties": {
        "operatorName": {
          "description": "Name of the operator corresponding to the field to sort on.\nThe corresponding property must be marked as\nsortable.",
          "type": "string"
        },
        "sortOrder": {
          "enumDescriptions": [
            "",
            ""
          ],
          "enum": [
            "ASCENDING",
            "DESCENDING"
          ],
          "description": "Ascending is the default sort order",
          "type": "string"
        }
      },
      "id": "SortOptions"
    },
    "Schema": {
      "description": "The schema definition for a data source.",
      "type": "object",
      "properties": {
        "operationIds": {
          "description": "IDs of the Long Running Operations (LROs) currently running for this\nschema. After modifying the schema, wait for operations to complete\nbefore indexing additional content.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "objectDefinitions": {
          "description": "The list of top-level objects for the data source.\nThe maximum number of elements is 10.",
          "type": "array",
          "items": {
            "$ref": "ObjectDefinition"
          }
        }
      },
      "id": "Schema"
    },
    "PropertyDefinition": {
      "id": "PropertyDefinition",
      "description": "The definition of a property within an object.",
      "type": "object",
      "properties": {
        "isWildcardSearchable": {
          "description": "Indicates that users can perform wildcard search for this\nproperty. Only supported for Text properties. IsReturnable must be true to\nset this option. In a given datasource maximum of 5 properties can be\nmarked as is_wildcard_searchable.\n\nNote: This is an alpha feature and is enabled for whitelisted users only.",
          "type": "boolean"
        },
        "isRepeatable": {
          "description": "Indicates that multiple values are allowed for the property. For example, a\ndocument only has one description but can have multiple comments. Cannot be\ntrue for properties whose type is a boolean.\nIf set to false, properties that contain more than one value will cause the\nindexing request for that item to be rejected.",
          "type": "boolean"
        },
        "objectPropertyOptions": {
          "$ref": "ObjectPropertyOptions"
        },
        "isSuggestable": {
          "description": "Indicates that the property can be used for generating query suggestions.",
          "type": "boolean"
        },
        "integerPropertyOptions": {
          "$ref": "IntegerPropertyOptions"
        },
        "htmlPropertyOptions": {
          "$ref": "HtmlPropertyOptions"
        },
        "enumPropertyOptions": {
          "$ref": "EnumPropertyOptions"
        },
        "displayOptions": {
          "$ref": "PropertyDisplayOptions",
          "description": "Options that determine how the property is displayed in the Cloud Search\nresults page if it is specified to be displayed in the object's\ndisplay options\n."
        },
        "datePropertyOptions": {
          "$ref": "DatePropertyOptions"
        },
        "isSortable": {
          "description": "Indicates that the property can be used for sorting. Cannot be true for\nproperties that are repeatable. Cannot be true for properties whose type\nis object or user identifier. IsReturnable must be true to set this option.\nOnly supported for Boolean, Date, Double, Integer, and Timestamp\nproperties.",
          "type": "boolean"
        },
        "isFacetable": {
          "description": "Indicates that the property can be used for generating facets. Cannot be\ntrue for properties whose type is object. IsReturnable must be true to set\nthis option.\nOnly supported for Boolean, Enum, and Text properties.",
          "type": "boolean"
        },
        "isReturnable": {
          "description": "Indicates that the property identifies data that should be returned in\nsearch results via the Query API. If set to *true*, indicates that Query\nAPI users can use matching property fields in results. However, storing\nfields requires more space allocation and uses more bandwidth for search\nqueries, which impacts performance over large datasets. Set to *true* here\nonly if the field is needed for search results. Cannot be true for\nproperties whose type is an object.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the property. Item indexing requests sent to the Indexing API\nshould set the property name\nequal to this value. For example, if name is *subject_line*, then indexing\nrequests for document items with subject fields should set the\nname for that field equal to\n*subject_line*. Use the name as the identifier for the object property.\nOnce registered as a property for an object, you cannot re-use this name\nfor another property within that object.\nThe name must start with a letter and can only contain letters (A-Z, a-z)\nor numbers (0-9).\nThe maximum length is 256 characters.",
          "type": "string"
        },
        "booleanPropertyOptions": {
          "$ref": "BooleanPropertyOptions"
        },
        "timestampPropertyOptions": {
          "$ref": "TimestampPropertyOptions"
        },
        "doublePropertyOptions": {
          "$ref": "DoublePropertyOptions"
        },
        "textPropertyOptions": {
          "$ref": "TextPropertyOptions"
        }
      }
    },
    "GSuitePrincipal": {
      "type": "object",
      "properties": {
        "gsuiteDomain": {
          "description": "This principal represents all users of the G Suite domain of the\ncustomer.",
          "type": "boolean"
        },
        "gsuiteUserEmail": {
          "type": "string",
          "description": "This principal references a G Suite user account"
        },
        "gsuiteGroupEmail": {
          "type": "string",
          "description": "This principal references a G Suite group account"
        }
      },
      "id": "GSuitePrincipal"
    },
    "TextPropertyOptions": {
      "description": "Options for text properties.",
      "type": "object",
      "properties": {
        "retrievalImportance": {
          "$ref": "RetrievalImportance",
          "description": "Indicates the search quality importance of the tokens within the\nfield when used for retrieval."
        },
        "operatorOptions": {
          "$ref": "TextOperatorOptions",
          "description": "If set, describes how the property should be used as a search operator."
        }
      },
      "id": "TextPropertyOptions"
    },
    "SuggestResponse": {
      "description": "Response of the suggest API.",
      "type": "object",
      "properties": {
        "suggestResults": {
          "type": "array",
          "items": {
            "$ref": "SuggestResult"
          },
          "description": "List of suggestions."
        }
      },
      "id": "SuggestResponse"
    },
    "PeopleSuggestion": {
      "description": "This field contains information about the person being suggested.",
      "type": "object",
      "properties": {
        "person": {
          "$ref": "Person",
          "description": "Suggested person. All fields of the person object might not be populated."
        }
      },
      "id": "PeopleSuggestion"
    },
    "IndexItemRequest": {
      "type": "object",
      "properties": {
        "connectorName": {
          "description": "Name of connector making this call.\n\u003cbr /\u003eFormat: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "indexItemOptions": {
          "$ref": "IndexItemOptions"
        },
        "mode": {
          "type": "string",
          "enumDescriptions": [
            "Priority is not specified in the update request.\nLeaving priority unspecified results in an update failure.",
            "For real-time updates.",
            "For changes that are executed after the response is sent back to the\ncaller."
          ],
          "enum": [
            "UNSPECIFIED",
            "SYNCHRONOUS",
            "ASYNCHRONOUS"
          ],
          "description": "Required. The RequestMode for this request."
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "item": {
          "$ref": "Item",
          "description": "Name of the item.  Format:\ndatasources/{source_id}/items/{item_id}"
        }
      },
      "id": "IndexItemRequest"
    },
    "QueryInterpretationOptions": {
      "description": "Options to interpret user query.",
      "type": "object",
      "properties": {
        "enableVerbatimMode": {
          "description": "Enable this flag to turn off all internal optimizations like natural\nlanguage (NL) interpretation of queries, supplemental result retrieval,\nand usage of synonyms including custom ones.\nNl interpretation will be disabled if either one of the two flags is true.",
          "type": "boolean"
        },
        "disableNlInterpretation": {
          "type": "boolean",
          "description": "Flag to disable natural language (NL) interpretation of queries. Default is\nfalse, Set to true to disable natural language interpretation. NL\ninterpretation only applies to predefined datasources."
        }
      },
      "id": "QueryInterpretationOptions"
    },
    "Snippet": {
      "id": "Snippet",
      "description": "Snippet of the search result, which summarizes the content of the resulting\npage.",
      "type": "object",
      "properties": {
        "snippet": {
          "description": "The snippet of the document.\nThe snippet of the document. May contain escaped HTML character that\nshould be unescaped prior to rendering.",
          "type": "string"
        },
        "matchRanges": {
          "type": "array",
          "items": {
            "$ref": "MatchRange"
          },
          "description": "The matched ranges in the snippet."
        }
      }
    },
    "DriveFollowUpRestrict": {
      "description": "Drive follow-up search restricts (e.g. \"followup:suggestions\").",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "UNSPECIFIED",
            "FOLLOWUP_SUGGESTIONS",
            "FOLLOWUP_ACTION_ITEMS"
          ]
        }
      },
      "id": "DriveFollowUpRestrict"
    },
    "IntegerValues": {
      "description": "List of integer values.",
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        }
      },
      "id": "IntegerValues"
    },
    "DoublePropertyOptions": {
      "type": "object",
      "properties": {
        "operatorOptions": {
          "$ref": "DoubleOperatorOptions",
          "description": "If set, describes how the double should be used as a search operator."
        }
      },
      "id": "DoublePropertyOptions",
      "description": "Options for double properties."
    },
    "SearchApplicationSessionStats": {
      "id": "SearchApplicationSessionStats",
      "type": "object",
      "properties": {
        "searchSessionsCount": {
          "description": "The count of search sessions on the day",
          "format": "int64",
          "type": "string"
        },
        "date": {
          "$ref": "Date",
          "description": "Date for which session stats were calculated. Stats calculated on the next\nday close to midnight are returned."
        }
      }
    },
    "BooleanPropertyOptions": {
      "type": "object",
      "properties": {
        "operatorOptions": {
          "$ref": "BooleanOperatorOptions",
          "description": "If set, describes how the boolean should be used as a search operator."
        }
      },
      "id": "BooleanPropertyOptions",
      "description": "Options for boolean properties."
    },
    "SearchRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "The raw query string.\nSee supported search operators in the [Cloud search\nCheat\nSheet](https://gsuite.google.com/learning-center/products/cloudsearch/cheat-sheet/)"
        },
        "start": {
          "description": "Starting index of the results.",
          "format": "int32",
          "type": "integer"
        },
        "queryInterpretationOptions": {
          "$ref": "QueryInterpretationOptions",
          "description": "Options to interpret the user query."
        },
        "requestOptions": {
          "description": "Request options, such as the search application and user timezone.",
          "$ref": "RequestOptions"
        },
        "dataSourceRestrictions": {
          "type": "array",
          "items": {
            "$ref": "DataSourceRestriction"
          },
          "description": "The sources to use for querying. If not specified, all data sources\nfrom the current search application are used."
        },
        "facetOptions": {
          "type": "array",
          "items": {
            "$ref": "FacetOptions"
          }
        },
        "sortOptions": {
          "$ref": "SortOptions",
          "description": "The options for sorting the search results"
        },
        "pageSize": {
          "description": "Maximum number of search results to return in one page.\nValid values are between 1 and 100, inclusive.\nDefault value is 10.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "SearchRequest",
      "description": "The search API request."
    },
    "CompositeFilter": {
      "type": "object",
      "properties": {
        "subFilters": {
          "description": "Sub filters.",
          "type": "array",
          "items": {
            "$ref": "Filter"
          }
        },
        "logicOperator": {
          "description": "The logic operator of the sub filter.",
          "type": "string",
          "enumDescriptions": [
            "Logical operators, which can only be applied to sub filters.",
            "",
            "NOT can only be applied on a single sub filter."
          ],
          "enum": [
            "AND",
            "OR",
            "NOT"
          ]
        }
      },
      "id": "CompositeFilter"
    },
    "EnumValuePair": {
      "type": "object",
      "properties": {
        "integerValue": {
          "description": "The integer value of the EnumValuePair which must be non-negative.\nOptional.",
          "format": "int32",
          "type": "integer"
        },
        "stringValue": {
          "type": "string",
          "description": "The string value of the EnumValuePair.\nThe maximum length is 32 characters."
        }
      },
      "id": "EnumValuePair",
      "description": "The enumeration value pair defines two things: a required string value and\nan optional integer value. The string value defines the necessary query\nterm required to retrieve that item, such as *p0* for a priority item.\nThe integer value determines the ranking of that string value relative\nto other enumerated values for the same property. For example, you might\nassociate *p0* with *0* and define another enum pair such as *p1* and *1*.\nYou must use the integer value in combination with\nordered\nranking to\nset the ranking of a given value relative to other enumerated values for\nthe same property name. Here, a ranking order of DESCENDING for *priority*\nproperties results in a ranking boost for items indexed with a value of\n*p0* compared to items indexed with a value of *p1*. Without a specified\nranking order, the integer value has no effect on item ranking."
    },
    "SearchItemsByViewUrlResponse": {
      "id": "SearchItemsByViewUrlResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Item"
          }
        }
      }
    },
    "ObjectOptions": {
      "type": "object",
      "properties": {
        "displayOptions": {
          "$ref": "ObjectDisplayOptions",
          "description": "Options that determine how the object is displayed in the Cloud Search\nresults page."
        },
        "freshnessOptions": {
          "$ref": "FreshnessOptions",
          "description": "The freshness options for an object."
        }
      },
      "id": "ObjectOptions",
      "description": "The options for an object."
    },
    "GetCustomerUserStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "$ref": "CustomerUserStats"
          }
        }
      },
      "id": "GetCustomerUserStatsResponse"
    },
    "DeleteQueueItemsRequest": {
      "type": "object",
      "properties": {
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "connectorName": {
          "description": "Name of connector making this call.\n\u003cbr /\u003eFormat: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "queue": {
          "description": "Name of a queue to delete items from.",
          "type": "string"
        }
      },
      "id": "DeleteQueueItemsRequest"
    },
    "DriveTimeSpanRestrict": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "Not Enabled",
            "Not Enabled"
          ],
          "enum": [
            "UNSPECIFIED",
            "TODAY",
            "YESTERDAY",
            "LAST_7_DAYS",
            "LAST_30_DAYS",
            "LAST_90_DAYS"
          ]
        }
      },
      "id": "DriveTimeSpanRestrict",
      "description": "The time span search restrict (e.g. \"after:2017-09-11 before:2017-09-12\")."
    },
    "FacetOptions": {
      "id": "FacetOptions",
      "description": "Specifies operators to return facet results for. There will be one\nFacetResult for every source_name/object_type/operator_name combination.",
      "type": "object",
      "properties": {
        "sourceName": {
          "description": "Source name to facet on. Format: datasources/{source_id}\nIf empty, all data sources will be used.",
          "type": "string"
        },
        "numFacetBuckets": {
          "type": "integer",
          "description": "Maximum number of facet buckets that should be returned for this facet.\nDefaults to 10.\nMaximum value is 100.",
          "format": "int32"
        },
        "operatorName": {
          "description": "Name of the operator chosen for faceting. @see\ncloudsearch.SchemaPropertyOptions",
          "type": "string"
        },
        "objectType": {
          "description": "If object_type is set, only those objects of that type will be used to\ncompute facets. If empty, then all objects will be used to compute facets.",
          "type": "string"
        }
      }
    },
    "Person": {
      "description": "Object to represent a person.",
      "type": "object",
      "properties": {
        "photos": {
          "description": "A person's read-only photo. A picture shown next to the person's name to\nhelp others recognize the person in search results.",
          "type": "array",
          "items": {
            "$ref": "Photo"
          }
        },
        "personNames": {
          "description": "The person's name",
          "type": "array",
          "items": {
            "$ref": "Name"
          }
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "$ref": "EmailAddress"
          },
          "description": "The person's email addresses"
        },
        "name": {
          "description": "The resource name of the person to provide information about.\nSee \u003ca href=\"https://developers.google.com/people/api/rest/v1/people/get\"\u003e\nPeople.get\u003c/a\u003e from Google People API.",
          "type": "string"
        },
        "obfuscatedId": {
          "type": "string",
          "description": "Obfuscated ID of a person."
        }
      },
      "id": "Person"
    },
    "GetDataSourceIndexStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "$ref": "DataSourceIndexStats"
          },
          "description": "Summary of indexed item counts, one for each day in the requested range."
        }
      },
      "id": "GetDataSourceIndexStatsResponse"
    },
    "StructuredResult": {
      "type": "object",
      "properties": {
        "person": {
          "$ref": "Person",
          "description": "Representation of a person"
        }
      },
      "id": "StructuredResult",
      "description": "Structured results that are returned as part of search request."
    },
    "ResultDisplayMetadata": {
      "id": "ResultDisplayMetadata",
      "type": "object",
      "properties": {
        "objectTypeLabel": {
          "description": "The display label for the object.",
          "type": "string"
        },
        "metalines": {
          "description": "The metalines content to be displayed with the result.",
          "type": "array",
          "items": {
            "$ref": "ResultDisplayLine"
          }
        }
      }
    },
    "SpellResult": {
      "type": "object",
      "properties": {
        "suggestedQuery": {
          "type": "string",
          "description": "The suggested spelling of the query."
        }
      },
      "id": "SpellResult"
    },
    "SearchApplication": {
      "id": "SearchApplication",
      "description": "SearchApplication",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Search Application.\n\u003cbr /\u003eFormat: searchapplications/{application_id}.",
          "type": "string"
        },
        "operationIds": {
          "description": "IDs of the Long Running Operations (LROs) currently running for this\nschema. Output only field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataSourceRestrictions": {
          "description": "Retrictions applied to the configurations.\nThe maximum number of elements is 10.",
          "type": "array",
          "items": {
            "$ref": "DataSourceRestriction"
          }
        },
        "sourceConfig": {
          "description": "Configuration for a sources specified in data_source_restrictions.",
          "type": "array",
          "items": {
            "$ref": "SourceConfig"
          }
        },
        "defaultSortOptions": {
          "$ref": "SortOptions",
          "description": "The default options for sorting the search results"
        },
        "displayName": {
          "description": "Display name of the Search Application.\nThe maximum length is 300 characters.",
          "type": "string"
        },
        "defaultFacetOptions": {
          "description": "The default fields for returning facet results.\nThe sources specified here also have been included in\ndata_source_restrictions\nabove.",
          "type": "array",
          "items": {
            "$ref": "FacetOptions"
          }
        },
        "scoringConfig": {
          "$ref": "ScoringConfig",
          "description": "Configuration for ranking results."
        }
      }
    },
    "DoubleOperatorOptions": {
      "description": "Used to provide a search operator for double properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched.",
      "type": "object",
      "properties": {
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to use the\ndouble property in sorting or as a facet.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
          "type": "string"
        }
      },
      "id": "DoubleOperatorOptions"
    },
    "QuerySuggestion": {
      "description": "This field does not contain anything as of now and is just used as an\nindicator that the suggest result was a phrase completion.",
      "type": "object",
      "properties": {},
      "id": "QuerySuggestion"
    },
    "PollItemsRequest": {
      "id": "PollItemsRequest",
      "type": "object",
      "properties": {
        "connectorName": {
          "description": "Name of connector making this call.\n\u003cbr /\u003eFormat: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "queue": {
          "description": "Queue name to fetch items from.  If unspecified, PollItems will\nfetch from 'default' queue.\nThe maximum length is 100 characters.",
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "description": "Maximum number of items to return.\n\u003cbr /\u003eThe maximum value is 100 and the default value is 20.",
          "format": "int32"
        },
        "statusCodes": {
          "description": "Limit the items polled to the ones with these statuses.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CODE_UNSPECIFIED",
              "ERROR",
              "MODIFIED",
              "NEW_ITEM",
              "ACCEPTED"
            ]
          },
          "enumDescriptions": [
            "Input-only value.  Used with\nItems.list\nto list all items in the queue, regardless of status.",
            "Error encountered by Cloud Search while processing this item.\nDetails of the error are in\nrepositoryError.",
            "Item has been modified in the repository, and is out of date with\nthe version previously accepted into Cloud Search.",
            "Item is known to exist in the repository, but is not yet accepted by\nCloud Search.\nAn item can be in this state when\nItems.push\nhas been called for\nan item of this name that did not exist previously.",
            "API has accepted the up-to-date data of this item."
          ]
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        }
      }
    },
    "EnumOperatorOptions": {
      "description": "Used to provide a search operator for enum properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched. For example, if you provide no\noperator for a *priority* enum property with possible values *p0* and *p1*,\na query that contains the term *p0* will return items that have *p0* as the\nvalue of the *priority* property, as well as any items that contain the\nstring *p0* in other fields. If you provide an operator name for the enum,\nsuch as *priority*, then search users can use that operator to refine\nresults to only items that have *p0* as this property's value, with the\nquery *priority:p0*.",
      "type": "object",
      "properties": {
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the\nenum property. For example, if operatorName is *priority* and the\nproperty's name is *priorityVal*, then queries like\n*priority:&lt;value&gt;* will show results only where the value of the\nproperty named *priorityVal* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any String\nproperties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
          "type": "string"
        }
      },
      "id": "EnumOperatorOptions"
    },
    "SearchResponse": {
      "id": "SearchResponse",
      "description": "The search API response.",
      "type": "object",
      "properties": {
        "resultCountEstimate": {
          "description": "The estimated result count for this query.",
          "format": "int64",
          "type": "string"
        },
        "debugInfo": {
          "$ref": "ResponseDebugInfo",
          "description": "Debugging information about the response."
        },
        "resultCounts": {
          "$ref": "ResultCounts",
          "description": "Expanded result count information."
        },
        "facetResults": {
          "description": "Repeated facet results.",
          "type": "array",
          "items": {
            "$ref": "FacetResult"
          }
        },
        "spellResults": {
          "description": "Suggested spelling for the query.",
          "type": "array",
          "items": {
            "$ref": "SpellResult"
          }
        },
        "structuredResults": {
          "description": "Structured results for the user query. These results are not counted\nagainst the page_size.",
          "type": "array",
          "items": {
            "$ref": "StructuredResult"
          }
        },
        "resultCountExact": {
          "description": "The exact result count for this query.",
          "format": "int64",
          "type": "string"
        },
        "errorInfo": {
          "$ref": "ErrorInfo",
          "description": "Error information about the response."
        },
        "hasMoreResults": {
          "description": "Whether there are more search results matching the query.",
          "type": "boolean"
        },
        "queryInterpretation": {
          "description": "Query interpretation result for user query. Empty if query interpretation\nis disabled.",
          "$ref": "QueryInterpretation"
        },
        "results": {
          "description": "Results from a search query.",
          "type": "array",
          "items": {
            "$ref": "SearchResult"
          }
        }
      }
    },
    "PropertyDisplayOptions": {
      "description": "The display options for a property.",
      "type": "object",
      "properties": {
        "displayLabel": {
          "type": "string",
          "description": "The user friendly label for the property that will be used if the property\nis specified to be displayed in ObjectDisplayOptions. If given, the display\nlabel will be shown in front of the property values when the property is\npart of the object display options. For example, if the property value is\n'1', the value by itself may not be useful context for the user. If the\ndisplay name given was 'priority', then the user will see 'priority : 1' in\nthe search results which provides clear conext to search users. This is\nOPTIONAL; if not given, only the property values will be displayed.\nThe maximum length is 32 characters."
        }
      },
      "id": "PropertyDisplayOptions"
    },
    "ObjectDefinition": {
      "description": "The definition for an object within a data source.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for the object, which then defines its type. Item indexing requests\nshould set the\nobjectType field\nequal to this value. For example, if *name* is *Document*, then indexing\nrequests for items of type Document should set\nobjectType equal to\n*Document*. Each object definition must be uniquely named within a schema.\nThe name must start with a letter and can only contain letters (A-Z, a-z)\nor numbers (0-9).\nThe maximum length is 256 characters."
        },
        "options": {
          "$ref": "ObjectOptions",
          "description": "The optional object-specific options."
        },
        "propertyDefinitions": {
          "description": "The property definitions for the object.\nThe maximum number of elements is 1000.",
          "type": "array",
          "items": {
            "$ref": "PropertyDefinition"
          }
        }
      },
      "id": "ObjectDefinition"
    },
    "FreshnessOptions": {
      "id": "FreshnessOptions",
      "description": "Indicates which freshness property to use when adjusting search ranking for\nan item. Fresher, more recent dates indicate higher quality. Use the\nfreshness option property that best works with your data. For fileshare\ndocuments, last modified time is most relevant. For calendar event data,\nthe time when the event occurs is a more relevant freshness indicator. In\nthis way, calendar events that occur closer to the time of the search query\nare considered higher quality and ranked accordingly.",
      "type": "object",
      "properties": {
        "freshnessDuration": {
          "description": "The duration after which an object should be considered\nstale. The default value is 180 days (in seconds).",
          "format": "google-duration",
          "type": "string"
        },
        "freshnessProperty": {
          "description": "This property indicates the freshness level of the object in the index.\nIf set, this property must be a top-level property within the\nproperty definitions\nand it must be a\ntimestamp type\nor\ndate type.\nOtherwise, the Indexing API uses\nupdateTime\nas the freshness indicator.\nThe maximum length is 256 characters.\n\nWhen a property is used to calculate fresheness, the value defaults\nto 2 years from the current time.",
          "type": "string"
        }
      }
    },
    "UploadItemRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the content reference.\nThe maximum length is 2048 characters."
        }
      },
      "id": "UploadItemRef",
      "description": "Represents an upload session reference.\nThis reference is created via upload\nmethod.\nUpdating of item content may refer to this uploaded content via\ncontentDataRef."
    },
    "SearchApplicationQueryStats": {
      "id": "SearchApplicationQueryStats",
      "type": "object",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "Date for which query stats were calculated. Stats calculated on the next\nday close to midnight are returned."
        },
        "queryCountByStatus": {
          "type": "array",
          "items": {
            "$ref": "QueryCountByStatus"
          }
        }
      }
    },
    "EmailAddress": {
      "description": "A person's email address.",
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "The email address."
        }
      },
      "id": "EmailAddress"
    },
    "HtmlOperatorOptions": {
      "description": "Used to provide a search operator for html properties. This is optional.\nSearch operators let users restrict the query to specific fields relevant\nto the type of item being searched.",
      "type": "object",
      "properties": {
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the\nhtml property. For example, if operatorName is *subject* and the\nproperty's name is *subjectLine*, then queries like\n*subject:&lt;value&gt;* will show results only where the value of the\nproperty named *subjectLine* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any\nhtml properties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
          "type": "string"
        }
      },
      "id": "HtmlOperatorOptions"
    },
    "QueryItem": {
      "type": "object",
      "properties": {
        "isSynthetic": {
          "type": "boolean",
          "description": "True if the text was generated by means other than a previous user search."
        }
      },
      "id": "QueryItem",
      "description": "Information relevant only to a query entry."
    },
    "ItemContent": {
      "type": "object",
      "properties": {
        "contentFormat": {
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "contentFormat is HTML.",
            "contentFormat is free text.",
            "contentFormat is raw bytes."
          ],
          "enum": [
            "UNSPECIFIED",
            "HTML",
            "TEXT",
            "RAW"
          ]
        },
        "hash": {
          "description": "Hashing info calculated and provided by the API client for content.\nCan be used with the items.push method to calculate modified state.\nThe maximum length is 2048 characters.",
          "type": "string"
        },
        "inlineContent": {
          "description": "Content that is supplied inlined within the update method.\nThe maximum length is 102400 bytes (100 KiB).",
          "format": "byte",
          "type": "string"
        },
        "contentDataRef": {
          "description": "Upload reference ID of a previously uploaded content via write method.",
          "$ref": "UploadItemRef"
        }
      },
      "id": "ItemContent",
      "description": "Content of an item to be indexed and surfaced by Cloud Search."
    },
    "CustomerIndexStats": {
      "id": "CustomerIndexStats",
      "description": "Aggregation of items by status code as of the specified date.",
      "type": "object",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "Date for which statistics were calculated."
        },
        "itemCountByStatus": {
          "description": "Number of items aggregrated by status code.",
          "type": "array",
          "items": {
            "$ref": "ItemCountByStatus"
          }
        }
      }
    },
    "SourceCrowdingConfig": {
      "id": "SourceCrowdingConfig",
      "description": "Set search results crowding limits. Crowding is a situation in which\nmultiple results from the same source or host \"crowd out\" other results,\ndiminishing the quality of search for users. To foster better search quality\nand source diversity in search results, you can set a condition to reduce\nrepetitive results by source.",
      "type": "object",
      "properties": {
        "numSuggestions": {
          "type": "integer",
          "description": "Maximum number of suggestions allowed from a source.\nNo limits will be set on results if this value is less than or equal to 0.",
          "format": "int32"
        },
        "numResults": {
          "description": "Maximum number of results allowed from a source.\nNo limits will be set on results if this value is less than or equal to 0.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PushItem": {
      "type": "object",
      "properties": {
        "queue": {
          "type": "string",
          "description": "Queue to which this item belongs to.  The \u003ccode\u003edefault\u003c/code\u003e queue is\nchosen if this field is not specified. The maximum length is\n512 characters."
        },
        "structuredDataHash": {
          "type": "string",
          "description": "Structured data hash of the item according to the repository. If specified,\nthis is used to determine how to modify this item's status. Setting this\nfield and the type field\nresults in argument error.\nThe maximum length is 2048 characters."
        },
        "contentHash": {
          "description": "Content hash of the item according to the repository. If specified, this is\nused to determine how to modify this\nitem's status. Setting this field and the\ntype field results in argument\nerror.\nThe maximum length is 2048 characters.",
          "type": "string"
        },
        "metadataHash": {
          "description": "Metadata hash of the item according to the repository. If specified, this\nis used to determine how to modify this\nitem's status. Setting this field and the\ntype field results in argument\nerror.\nThe maximum length is 2048 characters.",
          "type": "string"
        },
        "payload": {
          "type": "string",
          "description": "Provides additional document state information for the connector,\nsuch as an alternate repository ID and other metadata.\nThe maximum length is 8192 bytes.",
          "format": "byte"
        },
        "repositoryError": {
          "$ref": "RepositoryError",
          "description": "Populate this field to store Connector or repository error details.\nThis information is displayed in the Admin Console.\nThis field may only be populated when the\nType is\nREPOSITORY_ERROR."
        },
        "type": {
          "enum": [
            "UNSPECIFIED",
            "MODIFIED",
            "NOT_MODIFIED",
            "REPOSITORY_ERROR",
            "REQUEUE"
          ],
          "description": "The type of the push operation that defines the push behavior.",
          "type": "string",
          "enumDescriptions": [
            "Default UNSPECIFIED.  Specifies that the push operation should not modify\nItemStatus",
            "Indicates that the repository document has been modified or updated since\nthe previous\nupdate\ncall. This changes status to\nMODIFIED state for\nan existing item. If this is called on a non existing item, the status is\nchanged to\nNEW_ITEM.",
            "Item in the repository has not been modified since the last update\ncall.  This push operation will set status to\nACCEPTED state.",
            "Connector is facing a repository error regarding this item.  Change\nstatus to\nREPOSITORY_ERROR\nstate. Item is unreserved and rescheduled at a future time determined by\nexponential backoff.",
            "Call push with REQUEUE only for items that have been reserved.\nThis action unreserves the item and resets its available time to the\nwall clock time."
          ]
        }
      },
      "id": "PushItem",
      "description": "Represents an item to be pushed to the indexing queue."
    },
    "Date": {
      "description": "Represents a whole calendar date, for example a date of birth. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the [Proleptic Gregorian Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar). The date must be a valid calendar date between the year 1 and 9999.",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "type": "integer",
          "description": "Month of date. Must be from 1 to 12.",
          "format": "int32"
        }
      },
      "id": "Date"
    },
    "CheckAccessResponse": {
      "id": "CheckAccessResponse",
      "type": "object",
      "properties": {
        "hasAccess": {
          "description": "Returns true if principal has access.  Returns false otherwise.",
          "type": "boolean"
        }
      }
    },
    "ObjectDisplayOptions": {
      "description": "The display options for an object.",
      "type": "object",
      "properties": {
        "objectDisplayLabel": {
          "description": "The user friendly label to display in the search result to inidicate the\ntype of the item. This is OPTIONAL; if not given, an object label will not\nbe displayed on the context line of the search results. The maximum length\nis 32 characters.",
          "type": "string"
        },
        "metalines": {
          "type": "array",
          "items": {
            "$ref": "Metaline"
          },
          "description": "Defines the properties that will be displayed in the metalines of the\nsearch results. The property values will be displayed in the order given\nhere. If a property holds multiple values, all of the values will be\ndiplayed before the next properties. For this reason, it is a good practice\nto specify singular properties before repeated properties in this list. All\nof the properties must set\nis_returnable\nto true. The maximum number of metalines is 3."
        }
      },
      "id": "ObjectDisplayOptions"
    },
    "ListSearchApplicationsResponse": {
      "type": "object",
      "properties": {
        "searchApplications": {
          "type": "array",
          "items": {
            "$ref": "SearchApplication"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      },
      "id": "ListSearchApplicationsResponse"
    },
    "HtmlValues": {
      "description": "List of html values.",
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The maximum allowable length for html values is 2048 characters."
        }
      },
      "id": "HtmlValues"
    },
    "TimestampOperatorOptions": {
      "type": "object",
      "properties": {
        "greaterThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the\ntimestamp property using the greater-than operator. For example, if\ngreaterThanOperatorName is *closedafter* and the property's name is\n*closeDate*, then queries like *closedafter:&lt;value&gt;* will\nshow results only where the value of the property named *closeDate* is\nlater than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
          "type": "string"
        },
        "lessThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the\ntimestamp property using the less-than operator. For example, if\nlessThanOperatorName is *closedbefore* and the property's name is\n*closeDate*, then queries like *closedbefore:&lt;value&gt;* will\nshow results only where the value of the property named *closeDate* is\nearlier than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
          "type": "string"
        },
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the\ntimestamp property. For example, if operatorName is *closedon* and the\nproperty's name is *closeDate*, then queries like\n*closedon:&lt;value&gt;* will show results only where the value of the\nproperty named *closeDate* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any String\nproperties or text within the content field for the item. The operator\nname can only contain lowercase letters (a-z). The maximum length is 32\ncharacters.",
          "type": "string"
        }
      },
      "id": "TimestampOperatorOptions",
      "description": "Used to provide a search operator for timestamp properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched."
    },
    "SearchResult": {
      "id": "SearchResult",
      "description": "Results containing indexed information for a document.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "Metadata",
          "description": "Metadata of the search result."
        },
        "snippet": {
          "$ref": "Snippet",
          "description": "The concatenation of all snippets (summaries) available for this result."
        },
        "title": {
          "description": "Title of the search result.",
          "type": "string"
        },
        "debugInfo": {
          "description": "Debugging information about this search result.",
          "$ref": "ResultDebugInfo"
        },
        "clusteredResults": {
          "description": "If source is clustered, provide list of clustered results. There will only\nbe one level of clustered results. If current source is not enabled for\nclustering, this field will be empty.",
          "type": "array",
          "items": {
            "$ref": "SearchResult"
          }
        },
        "url": {
          "description": "The URL of the search result. The URL contains a Google redirect to the\nactual item. This URL is signed and shouldn't be changed.",
          "type": "string"
        }
      }
    },
    "DoubleValues": {
      "description": "List of double values.",
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "id": "DoubleValues"
    },
    "ListDataSourceResponse": {
      "id": "ListDataSourceResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "DataSource"
          }
        }
      }
    },
    "ErrorInfo": {
      "id": "ErrorInfo",
      "description": "Error information about the response.",
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "$ref": "ErrorMessage"
          }
        }
      }
    },
    "ObjectValues": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "StructuredDataObject"
          }
        }
      },
      "id": "ObjectValues",
      "description": "List of object values."
    },
    "DateValues": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "Date"
          }
        }
      },
      "id": "DateValues",
      "description": "List of date values."
    },
    "Source": {
      "id": "Source",
      "description": "Defines sources for the suggest/search APIs.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Source name for content indexed by the\nIndexing API."
        },
        "predefinedSource": {
          "description": "Predefined content source for Google Apps.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Suggests queries issued by the user in the past. Only valid when used\nwith the suggest API. Ignored when used in the query API.",
            "Suggests people in the organization. Only valid when used\nwith the suggest API. Results in an error when used in the query API.",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "NONE",
            "QUERY_HISTORY",
            "PERSON",
            "GOOGLE_DRIVE",
            "GOOGLE_GMAIL",
            "GOOGLE_SITES",
            "GOOGLE_GROUPS",
            "GOOGLE_CALENDAR",
            "GOOGLE_KEEP"
          ]
        }
      }
    },
    "MatchRange": {
      "description": "Matched range of a snippet [start, end).",
      "type": "object",
      "properties": {
        "start": {
          "description": "Starting position of the match in the snippet.",
          "format": "int32",
          "type": "integer"
        },
        "end": {
          "type": "integer",
          "description": "End of the match in the snippet.",
          "format": "int32"
        }
      },
      "id": "MatchRange"
    },
    "Metadata": {
      "description": "Metadata of a matched search result.",
      "type": "object",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Object type of the search result."
        },
        "mimeType": {
          "type": "string",
          "description": "Mime type of the search result."
        },
        "displayOptions": {
          "$ref": "ResultDisplayMetadata",
          "description": "Options that specify how to display a structured data search result."
        },
        "source": {
          "$ref": "Source",
          "description": "The named source for the result, such as Gmail."
        },
        "createTime": {
          "description": "The creation time for this document or object in the search result.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "The last modified date for the object in the search result. If not\nset in the item, the value returned here is empty. When\n`updateTime` is used for calculating freshness and is not set, this\nvalue defaults to 2 years from the current time.",
          "format": "google-datetime"
        },
        "owner": {
          "$ref": "Person",
          "description": "Owner (usually creator) of the document or object of the search result."
        },
        "fields": {
          "description": "Indexed fields in structured data, returned as a generic named property.",
          "type": "array",
          "items": {
            "$ref": "NamedProperty"
          }
        }
      },
      "id": "Metadata"
    },
    "SuggestResult": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "Source",
          "description": "The source of the suggestion."
        },
        "querySuggestion": {
          "$ref": "QuerySuggestion",
          "description": "This field will be present if the suggested query is a word/phrase\ncompletion."
        },
        "suggestedQuery": {
          "description": "The suggested query that will be used for search, when the user\nclicks on the suggestion",
          "type": "string"
        },
        "peopleSuggestion": {
          "$ref": "PeopleSuggestion",
          "description": "This is present when the suggestion indicates a person. It\ncontains more information about the person - like their email ID,\nname etc."
        }
      },
      "id": "SuggestResult",
      "description": "One suggestion result."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "id": "Operation"
    },
    "DataSourceRestriction": {
      "type": "object",
      "properties": {
        "filterOptions": {
          "description": "Filter options restricting the results. If multiple filters\nare present, they are grouped by object type before joining.\nFilters with the same object type are joined conjunctively, then\nthe resulting expressions are joined disjunctively.\n\nThe maximum number of elements is 20.\n\nNOTE: Suggest API supports only few filters at the moment:\n  \"objecttype\", \"type\" and \"mimetype\".\nFor now, schema specific filters cannot be used to filter suggestions.",
          "type": "array",
          "items": {
            "$ref": "FilterOptions"
          }
        },
        "source": {
          "$ref": "Source",
          "description": "The source of restriction."
        }
      },
      "id": "DataSourceRestriction",
      "description": "Restriction on Datasource."
    },
    "CustomerSessionStats": {
      "type": "object",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "Date for which session stats were calculated. Stats calculated on the next\nday close to midnight are returned."
        },
        "searchSessionsCount": {
          "description": "The count of search sessions on the day",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "CustomerSessionStats"
    },
    "UpdateSchemaRequest": {
      "type": "object",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "If true, the request will be validated without side effects."
        },
        "schema": {
          "$ref": "Schema",
          "description": "The new schema for the source."
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        }
      },
      "id": "UpdateSchemaRequest"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      },
      "id": "Status"
    },
    "DriveLocationRestrict": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "UNSPECIFIED",
            "TRASHED",
            "STARRED"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "id": "DriveLocationRestrict",
      "description": "Drive location search restricts (e.g. \"is:starred\")."
    },
    "RetrievalImportance": {
      "type": "object",
      "properties": {
        "importance": {
          "enumDescriptions": [
            "Treat the match like a body text match.",
            "Treat the match like a match against title of the item.",
            "Treat the match with higher importance than body text.",
            "Treat the match with lower importance than body text.",
            "Do not match against this field during retrieval. The property can still\nbe used for operator matching, faceting, and suggest if\ndesired."
          ],
          "enum": [
            "DEFAULT",
            "HIGHEST",
            "HIGH",
            "LOW",
            "NONE"
          ],
          "description": "Indicates the ranking importance given to property when it is matched\nduring retrieval. Once set, the token importance of a property cannot be\nchanged.",
          "type": "string"
        }
      },
      "id": "RetrievalImportance"
    },
    "GetCustomerQueryStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "$ref": "CustomerQueryStats"
          }
        }
      },
      "id": "GetCustomerQueryStatsResponse"
    },
    "DisplayedProperty": {
      "description": "A reference to a top-level property within the object that should be\ndisplayed in search results. The values of the chosen properties will be\ndisplayed in the search results along with the\ndislpay label\nfor that property if one is specified. If a display label is not specified,\nonly the values will be shown.",
      "type": "object",
      "properties": {
        "propertyName": {
          "description": "The name of the top-level property as defined in a property definition\nfor the object. If the name is not a defined property in the schema, an\nerror will be given when attempting to update the schema.",
          "type": "string"
        }
      },
      "id": "DisplayedProperty"
    },
    "ItemStatus": {
      "type": "object",
      "properties": {
        "code": {
          "enum": [
            "CODE_UNSPECIFIED",
            "ERROR",
            "MODIFIED",
            "NEW_ITEM",
            "ACCEPTED"
          ],
          "description": "Status code.",
          "type": "string",
          "enumDescriptions": [
            "Input-only value.  Used with\nItems.list\nto list all items in the queue, regardless of status.",
            "Error encountered by Cloud Search while processing this item.\nDetails of the error are in\nrepositoryError.",
            "Item has been modified in the repository, and is out of date with\nthe version previously accepted into Cloud Search.",
            "Item is known to exist in the repository, but is not yet accepted by\nCloud Search.\nAn item can be in this state when\nItems.push\nhas been called for\nan item of this name that did not exist previously.",
            "API has accepted the up-to-date data of this item."
          ]
        },
        "repositoryErrors": {
          "type": "array",
          "items": {
            "$ref": "RepositoryError"
          },
          "description": "Repository error reported by connector."
        },
        "processingErrors": {
          "type": "array",
          "items": {
            "$ref": "ProcessingError"
          },
          "description": "Error details in case the item is in ERROR state."
        }
      },
      "id": "ItemStatus",
      "description": "This contains item's status and any errors."
    },
    "FieldViolation": {
      "id": "FieldViolation",
      "type": "object",
      "properties": {
        "field": {
          "description": "Path of field with violation.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description of the error."
        }
      }
    },
    "TextValues": {
      "description": "List of text values.",
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The maximum allowable length for text values is 2048 characters."
        }
      },
      "id": "TextValues"
    },
    "SourceScoringConfig": {
      "id": "SourceScoringConfig",
      "description": "Set the scoring configuration. This allows modifying the ranking of results\nfor a source.",
      "type": "object",
      "properties": {
        "sourceImportance": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "DEFAULT",
            "LOW",
            "HIGH"
          ],
          "description": "Importance of the source.",
          "type": "string"
        }
      }
    },
    "ObjectPropertyOptions": {
      "description": "Options for object properties.",
      "type": "object",
      "properties": {
        "subobjectProperties": {
          "description": "The properties of the sub-object. These properties represent a nested\nobject. For example, if this property represents a postal address, the\nsubobjectProperties might be named *street*, *city*, and *state*.\nThe maximum number of elements is 1000.",
          "type": "array",
          "items": {
            "$ref": "PropertyDefinition"
          }
        }
      },
      "id": "ObjectPropertyOptions"
    },
    "DateOperatorOptions": {
      "type": "object",
      "properties": {
        "lessThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the\ndate property using the less-than operator. For example, if\nlessThanOperatorName is *closedbefore* and the property's name is\n*closeDate*, then queries like *closedbefore:&lt;value&gt;* will\nshow results only where the value of the property named *closeDate* is\nearlier than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
          "type": "string"
        },
        "operatorName": {
          "type": "string",
          "description": "Indicates the actual string required in the query in order to isolate the\ndate property. For example, suppose an issue tracking schema object\nhas a property named *closeDate* that specifies an operator with an\noperatorName of *closedon*. For searches on that data, queries like\n*closedon:&lt;value&gt;* will show results only where the value of the\n*closeDate* property matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any String\nproperties or text within the content field for the indexed datasource.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters."
        },
        "greaterThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the\ndate property using the greater-than operator. For example, if\ngreaterThanOperatorName is *closedafter* and the property's name is\n*closeDate*, then queries like *closedafter:&lt;value&gt;* will\nshow results only where the value of the property named *closeDate* is\nlater than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
          "type": "string"
        }
      },
      "id": "DateOperatorOptions",
      "description": "Optional. Provides a search operator for date properties.\nSearch operators let users restrict the query to specific fields relevant\nto the type of item being searched."
    },
    "RequestOptions": {
      "description": "Shared request options for all RPC methods.",
      "type": "object",
      "properties": {
        "searchApplicationId": {
          "type": "string",
          "description": "Id of the application created using SearchApplicationsService."
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\nFor translations.\n\nSet this field using the language set in browser or for the page. In the\nevent that the user's language preference is known, set this field to the\nknown user language.\n\nWhen specified, the documents in search results are biased towards the\nspecified language.\n\nThe suggest API does not use this parameter. Instead, suggest autocompletes\nonly based on characters in the query.",
          "type": "string"
        },
        "timeZone": {
          "description": "Current user's time zone id, such as \"America/Los_Angeles\" or\n\"Australia/Sydney\". These IDs are defined by\n[Unicode Common Locale Data Repository (CLDR)](http://cldr.unicode.org/)\nproject, and currently available in the file\n[timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml).\nThis field is used to correctly interpret date and time queries.\nIf this field is not specified, the default time zone (UTC) is used.",
          "type": "string"
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Debug options of the request"
        }
      },
      "id": "RequestOptions"
    },
    "GetSearchApplicationUserStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "$ref": "SearchApplicationUserStats"
          }
        }
      },
      "id": "GetSearchApplicationUserStatsResponse"
    },
    "ResultCounts": {
      "description": "Result count information",
      "type": "object",
      "properties": {
        "sourceResultCounts": {
          "description": "Result count information for each source with results.",
          "type": "array",
          "items": {
            "$ref": "SourceResultCount"
          }
        }
      },
      "id": "ResultCounts"
    },
    "SuggestRequest": {
      "id": "SuggestRequest",
      "description": "Request of suggest API.",
      "type": "object",
      "properties": {
        "requestOptions": {
          "$ref": "RequestOptions",
          "description": "Request options, such as the search application and user timezone."
        },
        "query": {
          "type": "string",
          "description": "Partial query for which autocomplete suggestions will be shown.\nFor example, if the query is \"sea\", then the server might return\n\"season\", \"search\", \"seagull\" and so on."
        },
        "dataSourceRestrictions": {
          "description": "The sources to use for suggestions. If not specified, the data sources\nare taken from the current search application.\n\nNOTE: Suggestions are supported only for third party data sources and\npeople (i.e. PredefinedSource.PERSON).",
          "type": "array",
          "items": {
            "$ref": "DataSourceRestriction"
          }
        }
      }
    },
    "TimestampPropertyOptions": {
      "type": "object",
      "properties": {
        "operatorOptions": {
          "$ref": "TimestampOperatorOptions",
          "description": "If set, describes how the timestamp should be used as a search operator."
        }
      },
      "id": "TimestampPropertyOptions",
      "description": "Options for timestamp properties."
    },
    "ScoringConfig": {
      "id": "ScoringConfig",
      "description": "Scoring configurations for a source while processing a\nSearch or\nSuggest request.",
      "type": "object",
      "properties": {
        "disableFreshness": {
          "description": "Whether to use freshness as a ranking signal. By default, freshness is used\nas a ranking signal. Note that this setting is not available in the Admin\nUI.",
          "type": "boolean"
        },
        "disablePersonalization": {
          "description": "Whether to personalize the results. By default, personal signals will\nbe used to boost results.",
          "type": "boolean"
        }
      }
    },
    "ValueFilter": {
      "id": "ValueFilter",
      "type": "object",
      "properties": {
        "operatorName": {
          "description": "The `operator_name` applied to the query, such as *price_greater_than*.\nThe filter can work against both types of filters defined in the schema\nfor your data source:\n\u003cbr/\u003e\u003cbr/\u003e\n1. `operator_name`, where the query filters results by the property\nthat matches the value.\n\u003cbr/\u003e\n2. `greater_than_operator_name` or `less_than_operator_name` in your\nschema. The query filters the results for the property values that are\ngreater than or less than  the supplied value in the query.",
          "type": "string"
        },
        "value": {
          "$ref": "Value",
          "description": "The value to be compared with."
        }
      }
    },
    "ListItemNamesForUnmappedIdentityResponse": {
      "type": "object",
      "properties": {
        "itemNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list."
        }
      },
      "id": "ListItemNamesForUnmappedIdentityResponse"
    },
    "ResponseDebugInfo": {
      "description": "Debugging information about the response.",
      "type": "object",
      "properties": {
        "formattedDebugInfo": {
          "description": "General debug info formatted for display.",
          "type": "string"
        }
      },
      "id": "ResponseDebugInfo"
    },
    "NamedProperty": {
      "type": "object",
      "properties": {
        "timestampValues": {
          "$ref": "TimestampValues"
        },
        "objectValues": {
          "$ref": "ObjectValues"
        },
        "dateValues": {
          "$ref": "DateValues"
        },
        "enumValues": {
          "$ref": "EnumValues"
        },
        "integerValues": {
          "$ref": "IntegerValues"
        },
        "doubleValues": {
          "$ref": "DoubleValues"
        },
        "name": {
          "description": "The name of the property.  This name should correspond to the name of the\nproperty that was registered for object definition in the schema.\nThe maximum allowable length for this property is 256 characters.",
          "type": "string"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "textValues": {
          "$ref": "TextValues"
        },
        "htmlValues": {
          "$ref": "HtmlValues"
        }
      },
      "id": "NamedProperty",
      "description": "A typed name-value pair for structured data.  The type of the value should\nbe the same as the registered type for the `name` property in the object\ndefinition of `objectType`."
    },
    "UnmappedIdentity": {
      "id": "UnmappedIdentity",
      "type": "object",
      "properties": {
        "externalIdentity": {
          "$ref": "Principal",
          "description": "The resource name for an external user."
        },
        "resolutionStatusCode": {
          "type": "string",
          "enumDescriptions": [
            "Input-only value.  Used to list all unmapped identities regardless of\nstatus.",
            "The unmapped identity was not found in IDaaS, and needs to be provided by\nthe user.",
            "The identity source associated with the identity was either not found or\ndeleted.",
            "IDaaS does not understand the identity source, probably because the\nschema was modified in a non compatible way.",
            "The number of users associated with the external identity is too large.",
            "Internal error."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "NOT_FOUND",
            "IDENTITY_SOURCE_NOT_FOUND",
            "IDENTITY_SOURCE_MISCONFIGURED",
            "TOO_MANY_MAPPINGS_FOUND",
            "INTERNAL_ERROR"
          ],
          "description": "The resolution status for the external identity."
        }
      }
    },
    "PushItemRequest": {
      "id": "PushItemRequest",
      "type": "object",
      "properties": {
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "item": {
          "description": "Item to push onto the queue.",
          "$ref": "PushItem"
        },
        "connectorName": {
          "type": "string",
          "description": "Name of connector making this call.\n\u003cbr /\u003eFormat: datasources/{source_id}/connectors/{ID}"
        }
      }
    },
    "SearchItemsByViewUrlRequest": {
      "type": "object",
      "properties": {
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "pageToken": {
          "description": "The next_page_token value returned from a previous request, if any.",
          "type": "string"
        },
        "viewUrl": {
          "description": "Specify the full view URL to find the corresponding item.\nThe maximum length is 2048 characters.",
          "type": "string"
        }
      },
      "id": "SearchItemsByViewUrlRequest"
    },
    "PollItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Set of items from the queue available for connector to process.\n\u003cbr /\u003eThese items have the following subset of fields populated: \u003cbr /\u003e\n\u003cbr /\u003eversion\n\u003cbr /\u003emetadata.hash\n\u003cbr /\u003estructured_data.hash\n\u003cbr /\u003econtent.hash\n\u003cbr /\u003epayload\n\u003cbr /\u003estatus\n\u003cbr /\u003equeue",
          "type": "array",
          "items": {
            "$ref": "Item"
          }
        }
      },
      "id": "PollItemsResponse"
    },
    "ListItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "Item"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      },
      "id": "ListItemsResponse"
    },
    "GetCustomerSessionStatsResponse": {
      "id": "GetCustomerSessionStatsResponse",
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "$ref": "CustomerSessionStats"
          }
        }
      }
    },
    "UnreserveItemsRequest": {
      "type": "object",
      "properties": {
        "connectorName": {
          "type": "string",
          "description": "Name of connector making this call.\n\u003cbr /\u003eFormat: datasources/{source_id}/connectors/{ID}"
        },
        "queue": {
          "description": "Name of a queue to unreserve items from.",
          "type": "string"
        },
        "debugOptions": {
          "description": "Common debug options.",
          "$ref": "DebugOptions"
        }
      },
      "id": "UnreserveItemsRequest"
    },
    "HtmlPropertyOptions": {
      "id": "HtmlPropertyOptions",
      "description": "Options for html properties.",
      "type": "object",
      "properties": {
        "operatorOptions": {
          "$ref": "HtmlOperatorOptions",
          "description": "If set, describes how the property should be used as a search operator."
        },
        "retrievalImportance": {
          "description": "Indicates the search quality importance of the tokens within the\nfield when used for retrieval. Can only be set to DEFAULT or NONE.",
          "$ref": "RetrievalImportance"
        }
      }
    },
    "QueryOperator": {
      "id": "QueryOperator",
      "description": "The definition of a operator that can be used in a Search/Suggest request.",
      "type": "object",
      "properties": {
        "isReturnable": {
          "description": "Will the property associated with this facet be returned as part of search\nresults.",
          "type": "boolean"
        },
        "isFacetable": {
          "description": "Can this operator be used to get facets.",
          "type": "boolean"
        },
        "isSortable": {
          "type": "boolean",
          "description": "Can this operator be used to sort results."
        },
        "operatorName": {
          "description": "The name of the operator.",
          "type": "string"
        },
        "isRepeatable": {
          "description": "Indicates if multiple values can be set for this property.",
          "type": "boolean"
        },
        "greaterThanOperatorName": {
          "description": "Indicates the operator name that can be used to  isolate the property using\nthe greater-than operator.",
          "type": "string"
        },
        "enumValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Potential list of values for the opeatror field. This field is only filled\nwhen we can safely enumerate all the possible values of this operator."
        },
        "lessThanOperatorName": {
          "description": "Indicates the operator name that can be used to  isolate the property using\nthe less-than operator.",
          "type": "string"
        },
        "isSuggestable": {
          "type": "boolean",
          "description": "Can get suggestions for this field."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "UNKNOWN",
            "INTEGER",
            "DOUBLE",
            "TIMESTAMP",
            "BOOLEAN",
            "ENUM",
            "DATE",
            "TEXT",
            "HTML"
          ],
          "description": "Type of the operator."
        },
        "displayName": {
          "description": "Display name of the operator",
          "type": "string"
        }
      }
    },
    "TimestampValues": {
      "description": "List of timestamp values.",
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "format": "google-datetime",
            "type": "string"
          }
        }
      },
      "id": "TimestampValues"
    },
    "SearchQualityMetadata": {
      "type": "object",
      "properties": {
        "quality": {
          "description": "An indication of the quality of the item, used to influence search quality.\nValue should be between 0.0 (lowest quality) and 1.0 (highest quality). The\ndefault value is 0.0.",
          "format": "double",
          "type": "number"
        }
      },
      "id": "SearchQualityMetadata",
      "description": "Additional search quality metadata of the item."
    },
    "DatePropertyOptions": {
      "description": "Options for date properties.",
      "type": "object",
      "properties": {
        "operatorOptions": {
          "description": "If set, describes how the date should be used as a search operator.",
          "$ref": "DateOperatorOptions"
        }
      },
      "id": "DatePropertyOptions"
    },
    "RestrictItem": {
      "type": "object",
      "properties": {
        "searchOperator": {
          "description": "The search restrict (e.g. \"after:2017-09-11 before:2017-09-12\").",
          "type": "string"
        },
        "driveFollowUpRestrict": {
          "$ref": "DriveFollowUpRestrict",
          "description": "LINT.ThenChange(//depot/google3/java/com/google/apps/search/quality/itemsuggest/utils/SubtypeRerankingUtils.java)"
        },
        "driveLocationRestrict": {
          "$ref": "DriveLocationRestrict"
        },
        "driveTimeSpanRestrict": {
          "$ref": "DriveTimeSpanRestrict"
        },
        "driveMimeTypeRestrict": {
          "$ref": "DriveMimeTypeRestrict",
          "description": "LINT.IfChange\nDrive Types."
        }
      },
      "id": "RestrictItem",
      "description": "Information relevant only to a restrict entry.\nNextId: 12"
    },
    "DriveMimeTypeRestrict": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "UNSPECIFIED",
            "PDF",
            "DOCUMENT",
            "PRESENTATION",
            "SPREADSHEET",
            "FORM",
            "DRAWING",
            "SCRIPT",
            "MAP",
            "IMAGE",
            "AUDIO",
            "VIDEO",
            "FOLDER",
            "ARCHIVE",
            "SITE"
          ]
        }
      },
      "id": "DriveMimeTypeRestrict",
      "description": "Drive mime-type search restricts (e.g. \"type:pdf\")."
    },
    "QueryCountByStatus": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "statusCode": {
          "description": "This represents the http status code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "QueryCountByStatus"
    },
    "Metaline": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "$ref": "DisplayedProperty"
          },
          "description": "The list of displayed properties for the metaline. The maxiumum number of\nproperties is 5."
        }
      },
      "id": "Metaline",
      "description": "A metaline is a list of properties that are displayed along with the search\nresult to provide context."
    },
    "BooleanOperatorOptions": {
      "type": "object",
      "properties": {
        "operatorName": {
          "type": "string",
          "description": "Indicates the operator name required in the query in order to isolate the\nboolean property. For example, if operatorName is *closed* and the\nproperty's name is *isClosed*, then queries like\n*closed:&lt;value&gt;* will show results only where the value of the\nproperty named *isClosed* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any\nString properties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters."
        }
      },
      "id": "BooleanOperatorOptions",
      "description": "Used to provide a search operator for boolean properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched."
    },
    "SourceConfig": {
      "description": "Configurations for a source while processing a\nSearch or\nSuggest request.",
      "type": "object",
      "properties": {
        "source": {
          "description": "The source for which this configuration is to be used.",
          "$ref": "Source"
        },
        "scoringConfig": {
          "description": "The scoring configuration for the source.",
          "$ref": "SourceScoringConfig"
        },
        "crowdingConfig": {
          "$ref": "SourceCrowdingConfig",
          "description": "The crowding configuration for the source."
        }
      },
      "id": "SourceConfig"
    },
    "DataSource": {
      "description": "Datasource is a logical namespace for items to be indexed.\nAll items must belong to a datasource.  This is the prerequisite before\nitems can be indexed into Cloud Search.",
      "type": "object",
      "properties": {
        "itemsVisibility": {
          "description": "This field restricts visibility to items at the datasource level. Items\nwithin the datasource are restricted to the union of users and groups\nincluded in this field. Note that, this does not ensure access to a\nspecific item, as users need to have ACL permissions on the contained\nitems. This ensures a high level access on the entire datasource, and\nthat the individual items are not shared outside this visibility.",
          "type": "array",
          "items": {
            "$ref": "GSuitePrincipal"
          }
        },
        "shortName": {
          "type": "string",
          "description": "A short name or alias for the source.  This value will be used to match the\n'source' operator. For example, if the short name is *&lt;value&gt;* then\nqueries like *source:&lt;value&gt;* will only return results for this\nsource. The value must be unique across all datasources. The value must\nonly contain alphanumeric characters (a-zA-Z0-9). The value cannot start\nwith 'google' and cannot be one of the following: mail, gmail, docs, drive,\ngroups, sites, calendar, hangouts, gplus, keep, people, teams.\nIts maximum length is 32 characters."
        },
        "name": {
          "description": "Name of the datasource resource.\nFormat: datasources/{source_id}.\n\u003cbr /\u003eThe name is ignored when creating a datasource.",
          "type": "string"
        },
        "operationIds": {
          "description": "IDs of the Long Running Operations (LROs) currently running for this\nschema.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableModifications": {
          "type": "boolean",
          "description": "If true, Indexing API rejects any modification calls to this datasource\nsuch as create, update, and delete.\nDisabling this does not imply halting process of previously\naccepted data."
        },
        "indexingServiceAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of service accounts that have indexing access."
        },
        "disableServing": {
          "description": "Disable serving any search or assist results.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name of the datasource\nThe maximum length is 300 characters."
        }
      },
      "id": "DataSource"
    },
    "UpdateDataSourceRequest": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "DataSource"
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        }
      },
      "id": "UpdateDataSourceRequest"
    },
    "ItemCountByStatus": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "string",
          "enumDescriptions": [
            "Input-only value.  Used with\nItems.list\nto list all items in the queue, regardless of status.",
            "Error encountered by Cloud Search while processing this item.\nDetails of the error are in\nrepositoryError.",
            "Item has been modified in the repository, and is out of date with\nthe version previously accepted into Cloud Search.",
            "Item is known to exist in the repository, but is not yet accepted by\nCloud Search.\nAn item can be in this state when\nItems.push\nhas been called for\nan item of this name that did not exist previously.",
            "API has accepted the up-to-date data of this item."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "ERROR",
            "MODIFIED",
            "NEW_ITEM",
            "ACCEPTED"
          ],
          "description": "Status of the items."
        },
        "count": {
          "description": "Number of items matching the status code.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "ItemCountByStatus"
    },
    "FacetResult": {
      "description": "Source specific facet response",
      "type": "object",
      "properties": {
        "objectType": {
          "description": "Object type for which facet results are returned. Can be empty.",
          "type": "string"
        },
        "sourceName": {
          "description": "Source name for which facet results are returned. Will not be empty.",
          "type": "string"
        },
        "buckets": {
          "description": "FacetBuckets for values in response containing at least a single result.",
          "type": "array",
          "items": {
            "$ref": "FacetBucket"
          }
        },
        "operatorName": {
          "description": "Name of the operator chosen for faceting. @see\ncloudsearch.SchemaPropertyOptions",
          "type": "string"
        }
      },
      "id": "FacetResult"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Cloud Search",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud_search.debug": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.settings.indexing": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.indexing": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.stats.indexing": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.settings.query": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.stats": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.query": {
          "description": "Search your organization's data in the Cloud Search index"
        },
        "https://www.googleapis.com/auth/cloud_search.settings": {
          "description": "Index and serve your organization's data with Cloud Search"
        }
      }
    }
  },
  "rootUrl": "https://cloudsearch.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "cloudsearch",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Search API",
  "ownerName": "Google",
  "resources": {
    "media": {
      "methods": {
        "upload": {
          "request": {
            "$ref": "Media"
          },
          "description": "Uploads media for indexing.\n\nThe upload endpoint supports direct and resumable upload protocols and\nis intended for large items that can not be\n[inlined during index requests](https://developers.google.com/cloud-search/docs/reference/rest/v1/indexing.datasources.items#itemcontent).\nTo index large content:\n\n1. Call\n   indexing.datasources.items.upload\n   with the resource name to begin an upload session and retrieve the\n   UploadItemRef.\n1. Call media.upload to upload the content using the same resource name from step 1.\n1. Call indexing.datasources.items.index\n   to index the item. Populate the\n   [ItemContent](/cloud-search/docs/reference/rest/v1/indexing.datasources.items#ItemContent)\n   with the UploadItemRef from step 1.\n\n\nFor additional information, see\n[Create a content connector using the REST API](https://developers.google.com/cloud-search/docs/guides/content-connector#rest).\n\n  **Note:** This API requires a service account to execute.",
          "supportsMediaUpload": true,
          "parameterOrder": [
            "resourceName"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "Media"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.indexing"
          ],
          "mediaUpload": {
            "accept": [
              "*/*"
            ],
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/v1/media/{+resourceName}"
              }
            }
          },
          "id": "cloudsearch.media.upload",
          "parameters": {
            "resourceName": {
              "location": "path",
              "description": "Name of the media that is being downloaded.  See\nReadRequest.resource_name.",
              "required": true,
              "type": "string",
              "pattern": "^.+$"
            }
          },
          "flatPath": "v1/media/{mediaId}",
          "path": "v1/media/{+resourceName}"
        }
      }
    },
    "stats": {
      "methods": {
        "getQuery": {
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "GetCustomerQueryStatsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.stats",
            "https://www.googleapis.com/auth/cloud_search.stats.indexing"
          ],
          "parameters": {
            "fromDate.year": {
              "location": "query",
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "type": "integer"
            },
            "toDate.day": {
              "location": "query",
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "type": "integer"
            },
            "toDate.month": {
              "location": "query",
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "type": "integer"
            },
            "toDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "fromDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "fromDate.day": {
              "location": "query",
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "type": "integer"
            }
          },
          "flatPath": "v1/stats/query",
          "id": "cloudsearch.stats.getQuery",
          "path": "v1/stats/query",
          "description": "Get the query statistics for customer.\n\n**Note:** This API requires a standard end user account to execute."
        },
        "getSession": {
          "response": {
            "$ref": "GetCustomerSessionStatsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.stats",
            "https://www.googleapis.com/auth/cloud_search.stats.indexing"
          ],
          "parameters": {
            "toDate.month": {
              "type": "integer",
              "location": "query",
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32"
            },
            "toDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "fromDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "fromDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "fromDate.year": {
              "type": "integer",
              "location": "query",
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32"
            },
            "toDate.day": {
              "location": "query",
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "type": "integer"
            }
          },
          "flatPath": "v1/stats/session",
          "path": "v1/stats/session",
          "id": "cloudsearch.stats.getSession",
          "description": "Get the # of search sessions, % of successful sessions with a click query\nstatistics for customer.\n\n**Note:** This API requires a standard end user account to execute."
        },
        "getUser": {
          "flatPath": "v1/stats/user",
          "path": "v1/stats/user",
          "id": "cloudsearch.stats.getUser",
          "description": "Get the users statistics for customer.\n\n**Note:** This API requires a standard end user account to execute.",
          "response": {
            "$ref": "GetCustomerUserStatsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.stats",
            "https://www.googleapis.com/auth/cloud_search.stats.indexing"
          ],
          "parameters": {
            "fromDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "fromDate.day": {
              "location": "query",
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "type": "integer"
            },
            "fromDate.year": {
              "type": "integer",
              "location": "query",
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32"
            },
            "toDate.day": {
              "location": "query",
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "type": "integer"
            },
            "toDate.month": {
              "type": "integer",
              "location": "query",
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32"
            },
            "toDate.year": {
              "type": "integer",
              "location": "query",
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32"
            }
          }
        },
        "getIndex": {
          "description": "Gets indexed item statistics aggreggated across all data sources. This\nAPI only returns statistics for previous dates; it doesn't return\nstatistics for the current day.\n\n**Note:** This API requires a standard end user account to execute.",
          "response": {
            "$ref": "GetCustomerIndexStatsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.stats",
            "https://www.googleapis.com/auth/cloud_search.stats.indexing"
          ],
          "parameters": {
            "toDate.year": {
              "type": "integer",
              "location": "query",
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32"
            },
            "fromDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "fromDate.day": {
              "location": "query",
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "type": "integer"
            },
            "fromDate.year": {
              "location": "query",
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "type": "integer"
            },
            "toDate.day": {
              "location": "query",
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "type": "integer"
            },
            "toDate.month": {
              "type": "integer",
              "location": "query",
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32"
            }
          },
          "flatPath": "v1/stats/index",
          "path": "v1/stats/index",
          "id": "cloudsearch.stats.getIndex"
        }
      },
      "resources": {
        "user": {
          "resources": {
            "searchapplications": {
              "methods": {
                "get": {
                  "path": "v1/stats/user/{+name}",
                  "id": "cloudsearch.stats.user.searchapplications.get",
                  "description": "Get the users statistics for search application.\n\n**Note:** This API requires a standard end user account to execute.",
                  "response": {
                    "$ref": "GetSearchApplicationUserStatsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "fromDate.year": {
                      "type": "integer",
                      "location": "query",
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32"
                    },
                    "toDate.day": {
                      "location": "query",
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "location": "path",
                      "description": "The resource id of the search application session stats, in the following\nformat: searchapplications/{application_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^searchapplications/[^/]+$"
                    },
                    "toDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "toDate.year": {
                      "location": "query",
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "fromDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "fromDate.day": {
                      "type": "integer",
                      "location": "query",
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.stats",
                    "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                  ],
                  "flatPath": "v1/stats/user/searchapplications/{searchapplicationsId}"
                }
              }
            }
          }
        },
        "query": {
          "resources": {
            "searchapplications": {
              "methods": {
                "get": {
                  "path": "v1/stats/query/{+name}",
                  "id": "cloudsearch.stats.query.searchapplications.get",
                  "description": "Get the query statistics for search application.\n\n**Note:** This API requires a standard end user account to execute.",
                  "response": {
                    "$ref": "GetSearchApplicationQueryStatsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "fromDate.year": {
                      "location": "query",
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "toDate.day": {
                      "location": "query",
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The resource id of the search application query stats, in the following\nformat: searchapplications/{application_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^searchapplications/[^/]+$",
                      "location": "path"
                    },
                    "toDate.month": {
                      "location": "query",
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "toDate.year": {
                      "location": "query",
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "fromDate.month": {
                      "location": "query",
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "fromDate.day": {
                      "location": "query",
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.stats",
                    "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                  ],
                  "flatPath": "v1/stats/query/searchapplications/{searchapplicationsId}"
                }
              }
            }
          }
        },
        "index": {
          "resources": {
            "datasources": {
              "methods": {
                "get": {
                  "path": "v1/stats/index/{+name}",
                  "id": "cloudsearch.stats.index.datasources.get",
                  "description": "Gets indexed item statistics for a single data source.\n\n**Note:** This API requires a standard end user account to execute.",
                  "response": {
                    "$ref": "GetDataSourceIndexStatsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.stats",
                    "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^datasources/[^/]+$",
                      "location": "path",
                      "description": "The resource id of the data source to retrieve statistics for,\nin the following format: \"datasources/{source_id}\"",
                      "required": true,
                      "type": "string"
                    },
                    "toDate.month": {
                      "location": "query",
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "toDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "fromDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "fromDate.day": {
                      "type": "integer",
                      "location": "query",
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32"
                    },
                    "fromDate.year": {
                      "location": "query",
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "toDate.day": {
                      "location": "query",
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v1/stats/index/datasources/{datasourcesId}"
                }
              }
            }
          }
        },
        "session": {
          "resources": {
            "searchapplications": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.stats",
                    "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                  ],
                  "parameters": {
                    "fromDate.month": {
                      "type": "integer",
                      "location": "query",
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32"
                    },
                    "fromDate.day": {
                      "type": "integer",
                      "location": "query",
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32"
                    },
                    "fromDate.year": {
                      "location": "query",
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "toDate.day": {
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^searchapplications/[^/]+$",
                      "location": "path",
                      "description": "The resource id of the search application session stats, in the following\nformat: searchapplications/{application_id}"
                    },
                    "toDate.month": {
                      "location": "query",
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "toDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/stats/session/searchapplications/{searchapplicationsId}",
                  "path": "v1/stats/session/{+name}",
                  "id": "cloudsearch.stats.session.searchapplications.get",
                  "description": "Get the # of search sessions, % of successful sessions with a click query\nstatistics for search application.\n\n**Note:** This API requires a standard end user account to execute.",
                  "response": {
                    "$ref": "GetSearchApplicationSessionStatsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                }
              }
            }
          }
        }
      }
    },
    "settings": {
      "resources": {
        "datasources": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "DataSource"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Name of the datasource resource.\nFormat: datasources/{source_id}.",
                  "required": true,
                  "type": "string",
                  "pattern": "^datasources/[^/]+$"
                },
                "debugOptions.enableDebugging": {
                  "location": "query",
                  "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                  "type": "boolean"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ],
              "flatPath": "v1/settings/datasources/{datasourcesId}",
              "id": "cloudsearch.settings.datasources.get",
              "path": "v1/settings/{+name}",
              "description": "Gets a datasource.\n\n**Note:** This API requires an admin account to execute."
            },
            "list": {
              "description": "Lists datasources.\n\n**Note:** This API requires an admin account to execute.",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListDataSourceResponse"
              },
              "parameterOrder": [],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "location": "query",
                  "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                  "type": "boolean"
                },
                "pageToken": {
                  "description": "Starting index of the results.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Maximum number of datasources to fetch in a request.\nThe max value is 100.\n\u003cbr /\u003eThe default value is 10",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ],
              "flatPath": "v1/settings/datasources",
              "id": "cloudsearch.settings.datasources.list",
              "path": "v1/settings/datasources"
            },
            "update": {
              "description": "Updates a datasource.\n\n**Note:** This API requires an admin account to execute.",
              "request": {
                "$ref": "UpdateDataSourceRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "description": "Name of the datasource resource.\nFormat: datasources/{source_id}.\n\u003cbr /\u003eThe name is ignored when creating a datasource.",
                  "required": true,
                  "type": "string",
                  "pattern": "^datasources/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ],
              "flatPath": "v1/settings/datasources/{datasourcesId}",
              "path": "v1/settings/{+name}",
              "id": "cloudsearch.settings.datasources.update"
            },
            "create": {
              "flatPath": "v1/settings/datasources",
              "id": "cloudsearch.settings.datasources.create",
              "path": "v1/settings/datasources",
              "request": {
                "$ref": "DataSource"
              },
              "description": "Creates a datasource.\n\n**Note:** This API requires an admin account to execute.",
              "httpMethod": "POST",
              "parameterOrder": [],
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ],
              "parameters": {}
            },
            "delete": {
              "description": "Deletes a datasource.\n\n**Note:** This API requires an admin account to execute.",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "location": "query",
                  "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the datasource.\nFormat: datasources/{source_id}.",
                  "required": true,
                  "type": "string",
                  "pattern": "^datasources/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ],
              "flatPath": "v1/settings/datasources/{datasourcesId}",
              "id": "cloudsearch.settings.datasources.delete",
              "path": "v1/settings/{+name}"
            }
          }
        },
        "searchapplications": {
          "methods": {
            "create": {
              "request": {
                "$ref": "SearchApplication"
              },
              "description": "Creates a search application.\n\n**Note:** This API requires an admin account to execute.",
              "httpMethod": "POST",
              "parameterOrder": [],
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ],
              "parameters": {},
              "flatPath": "v1/settings/searchapplications",
              "id": "cloudsearch.settings.searchapplications.create",
              "path": "v1/settings/searchapplications"
            },
            "get": {
              "flatPath": "v1/settings/searchapplications/{searchapplicationsId}",
              "path": "v1/settings/{+name}",
              "id": "cloudsearch.settings.searchapplications.get",
              "description": "Gets the specified search application.\n\n**Note:** This API requires an admin account to execute.",
              "response": {
                "$ref": "SearchApplication"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "type": "boolean",
                  "location": "query",
                  "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field."
                },
                "name": {
                  "description": "Name of the search application.\n\u003cbr /\u003eFormat: applications/{application_id}.",
                  "required": true,
                  "type": "string",
                  "pattern": "^searchapplications/[^/]+$",
                  "location": "path"
                }
              }
            },
            "update": {
              "request": {
                "$ref": "SearchApplication"
              },
              "description": "Updates a search application.\n\n**Note:** This API requires an admin account to execute.",
              "httpMethod": "PUT",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ],
              "parameters": {
                "name": {
                  "pattern": "^searchapplications/[^/]+$",
                  "location": "path",
                  "description": "Name of the Search Application.\n\u003cbr /\u003eFormat: searchapplications/{application_id}.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/settings/searchapplications/{searchapplicationsId}",
              "id": "cloudsearch.settings.searchapplications.update",
              "path": "v1/settings/{+name}"
            },
            "delete": {
              "path": "v1/settings/{+name}",
              "id": "cloudsearch.settings.searchapplications.delete",
              "description": "Deletes a search application.\n\n**Note:** This API requires an admin account to execute.",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "type": "boolean",
                  "location": "query",
                  "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field."
                },
                "name": {
                  "description": "The name of the search application to be deleted.\n\u003cbr /\u003eFormat: applications/{application_id}.",
                  "required": true,
                  "type": "string",
                  "pattern": "^searchapplications/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/settings/searchapplications/{searchapplicationsId}"
            },
            "reset": {
              "flatPath": "v1/settings/searchapplications/{searchapplicationsId}:reset",
              "id": "cloudsearch.settings.searchapplications.reset",
              "path": "v1/settings/{+name}:reset",
              "description": "Resets a search application to default settings. This will return an empty\nresponse.\n\n**Note:** This API requires an admin account to execute.",
              "request": {
                "$ref": "ResetSearchApplicationRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "name": {
                  "description": "The name of the search application to be reset.\n\u003cbr /\u003eFormat: applications/{application_id}.",
                  "required": true,
                  "type": "string",
                  "pattern": "^searchapplications/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ]
            },
            "list": {
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The next_page_token value returned from a previous List request, if any.\n\u003cbr/\u003e The default value is 10"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of items to return.",
                  "format": "int32"
                },
                "debugOptions.enableDebugging": {
                  "location": "query",
                  "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                  "type": "boolean"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ],
              "flatPath": "v1/settings/searchapplications",
              "path": "v1/settings/searchapplications",
              "id": "cloudsearch.settings.searchapplications.list",
              "description": "Lists all search applications.\n\n**Note:** This API requires an admin account to execute.",
              "response": {
                "$ref": "ListSearchApplicationsResponse"
              },
              "parameterOrder": [],
              "httpMethod": "GET"
            }
          }
        }
      }
    },
    "indexing": {
      "resources": {
        "datasources": {
          "methods": {
            "updateSchema": {
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^datasources/[^/]+$",
                  "location": "path",
                  "description": "Name of the data source to update Schema.  Format:\ndatasources/{source_id}"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ],
              "flatPath": "v1/indexing/datasources/{datasourcesId}/schema",
              "id": "cloudsearch.indexing.datasources.updateSchema",
              "path": "v1/indexing/{+name}/schema",
              "description": "Updates the schema of a data source. This method does not perform\nincremental updates to the schema. Instead, this method updates the schema\nby overwriting the entire schema.\n\n**Note:** This API requires an admin or service account to execute.",
              "request": {
                "$ref": "UpdateSchemaRequest"
              },
              "httpMethod": "PUT",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              }
            },
            "deleteSchema": {
              "description": "Deletes the schema of a data source.\n\n**Note:** This API requires an admin or service account to execute.",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                  "type": "boolean",
                  "location": "query"
                },
                "name": {
                  "pattern": "^datasources/[^/]+$",
                  "location": "path",
                  "description": "Name of the data source to delete Schema.  Format:\ndatasources/{source_id}",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/indexing/datasources/{datasourcesId}/schema",
              "path": "v1/indexing/{+name}/schema",
              "id": "cloudsearch.indexing.datasources.deleteSchema"
            },
            "getSchema": {
              "parameters": {
                "name": {
                  "pattern": "^datasources/[^/]+$",
                  "location": "path",
                  "description": "Name of the data source to get Schema.  Format:\ndatasources/{source_id}",
                  "required": true,
                  "type": "string"
                },
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                  "type": "boolean",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ],
              "flatPath": "v1/indexing/datasources/{datasourcesId}/schema",
              "path": "v1/indexing/{+name}/schema",
              "id": "cloudsearch.indexing.datasources.getSchema",
              "description": "Gets the schema of a data source.\n\n**Note:** This API requires an admin or service account to execute.",
              "response": {
                "$ref": "Schema"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET"
            }
          },
          "resources": {
            "items": {
              "methods": {
                "upload": {
                  "path": "v1/indexing/{+name}:upload",
                  "id": "cloudsearch.indexing.datasources.items.upload",
                  "description": "Creates an upload session for uploading item content. For items smaller\nthan 100 KB, it's easier to embed the content\ninline within\nan index request.\n\nThis API requires an admin or service account to execute. The service\naccount used is the one whitelisted in the corresponding data source.",
                  "request": {
                    "$ref": "StartUploadItemRequest"
                  },
                  "response": {
                    "$ref": "UploadItemRef"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the Item to start a resumable upload.\nFormat: datasources/{source_id}/items/{item_id}.",
                      "required": true,
                      "type": "string",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ],
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}:upload"
                },
                "deleteQueueItems": {
                  "request": {
                    "$ref": "DeleteQueueItemsRequest"
                  },
                  "description": "Deletes all items in a queue. This method is useful for deleting stale\nitems.\n\nThis API requires an admin or service account to execute. The service\naccount used is the one whitelisted in the corresponding data source.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^datasources/[^/]+$",
                      "location": "path",
                      "description": "Name of the Data Source to delete items in a queue.\nFormat: datasources/{source_id}",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items:deleteQueueItems",
                  "path": "v1/indexing/{+name}/items:deleteQueueItems",
                  "id": "cloudsearch.indexing.datasources.items.deleteQueueItems"
                },
                "get": {
                  "id": "cloudsearch.indexing.datasources.items.get",
                  "path": "v1/indexing/{+name}",
                  "description": "Gets Item resource by item name.\n\nThis API requires an admin or service account to execute.  The service\naccount used is the one whitelisted in the corresponding data source.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Item"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Name of the item to get info.\nFormat: datasources/{source_id}/items/{item_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^datasources/[^/]+/items/[^/]+$"
                    },
                    "connectorName": {
                      "type": "string",
                      "location": "query",
                      "description": "Name of connector making this call.\n\u003cbr /\u003eFormat: datasources/{source_id}/connectors/{ID}"
                    },
                    "debugOptions.enableDebugging": {
                      "location": "query",
                      "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ],
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}"
                },
                "unreserve": {
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items:unreserve",
                  "path": "v1/indexing/{+name}/items:unreserve",
                  "id": "cloudsearch.indexing.datasources.items.unreserve",
                  "description": "Unreserves all items from a queue, making them all eligible to be\npolled.  This method is useful for resetting the indexing queue\nafter a connector has been restarted.\n\nThis API requires an admin or service account to execute. The service\naccount used is the one whitelisted in the corresponding data source.",
                  "request": {
                    "$ref": "UnreserveItemsRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^datasources/[^/]+$",
                      "location": "path",
                      "description": "Name of the Data Source to unreserve all items.\nFormat: datasources/{source_id}"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                },
                "index": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "location": "path",
                      "description": "Name of the Item. Format:\ndatasources/{source_id}/items/{item_id}\n\u003cbr /\u003eThis is a required field.\nThe maximum length is 1536 characters."
                    }
                  },
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}:index",
                  "path": "v1/indexing/{+name}:index",
                  "id": "cloudsearch.indexing.datasources.items.index",
                  "request": {
                    "$ref": "IndexItemRequest"
                  },
                  "description": "Updates Item ACL, metadata, and\ncontent. It will insert the Item if it\ndoes not exist.\nThis method does not support partial updates.  Fields with no provided\nvalues are cleared out in the Cloud Search index.\n\nThis API requires an admin or service account to execute. The service\naccount used is the one whitelisted in the corresponding data source."
                },
                "poll": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Name of the Data Source to poll items.\nFormat: datasources/{source_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^datasources/[^/]+$"
                    }
                  },
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items:poll",
                  "path": "v1/indexing/{+name}/items:poll",
                  "id": "cloudsearch.indexing.datasources.items.poll",
                  "request": {
                    "$ref": "PollItemsRequest"
                  },
                  "description": "Polls for unreserved items from the indexing queue and marks a\nset as reserved, starting with items that have\nthe oldest timestamp from the highest priority\nItemStatus.\nThe priority order is as follows: \u003cbr /\u003e\nERROR\n\u003cbr /\u003e\nMODIFIED\n\u003cbr /\u003e\nNEW_ITEM\n\u003cbr /\u003e\nACCEPTED\n\u003cbr /\u003e\nReserving items ensures that polling from other threads\ncannot create overlapping sets.\n\nAfter handling the reserved items, the client should put items back\ninto the unreserved state, either by calling\nindex,\nor by calling\npush with\nthe type REQUEUE.\n\nItems automatically become available (unreserved) after 4 hours even if no\nupdate or push method is called.\n\nThis API requires an admin or service account to execute. The service\naccount used is the one whitelisted in the corresponding data source.",
                  "response": {
                    "$ref": "PollItemsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "delete": {
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}",
                  "id": "cloudsearch.indexing.datasources.items.delete",
                  "path": "v1/indexing/{+name}",
                  "description": "Deletes Item resource for the\nspecified resource name. This API requires an admin or service account\nto execute. The service account used is the one whitelisted in the\ncorresponding data source.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the item to delete.\nFormat: datasources/{source_id}/items/{item_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "location": "path"
                    },
                    "connectorName": {
                      "location": "query",
                      "description": "Name of connector making this call.\n\u003cbr /\u003eFormat: datasources/{source_id}/connectors/{ID}",
                      "type": "string"
                    },
                    "version": {
                      "location": "query",
                      "description": "Required. The incremented version of the item to delete from the index.\nThe indexing system stores the version from the datasource as a\nbyte string and compares the Item version in the index\nto the version of the queued Item using lexical ordering.\n\u003cbr /\u003e\u003cbr /\u003e\nCloud Search Indexing won't delete any queued item with\na version value that is less than or equal to\nthe version of the currently indexed item.\nThe maximum length for this field is 1024 bytes.",
                      "format": "byte",
                      "type": "string"
                    },
                    "debugOptions.enableDebugging": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field."
                    },
                    "mode": {
                      "description": "Required. The RequestMode for this request.",
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "UNSPECIFIED",
                        "SYNCHRONOUS",
                        "ASYNCHRONOUS"
                      ]
                    }
                  }
                },
                "push": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Item"
                  },
                  "parameters": {
                    "name": {
                      "description": "Name of the item to\npush into the indexing queue.\u003cbr /\u003e\nFormat: datasources/{source_id}/items/{ID}\n\u003cbr /\u003eThis is a required field.\nThe maximum length is 1536 characters.",
                      "required": true,
                      "type": "string",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ],
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}:push",
                  "id": "cloudsearch.indexing.datasources.items.push",
                  "path": "v1/indexing/{+name}:push",
                  "description": "Pushes an item onto a queue for later polling and updating.\n\nThis API requires an admin or service account to execute. The service\naccount used is the one whitelisted in the corresponding data source.",
                  "request": {
                    "$ref": "PushItemRequest"
                  }
                },
                "list": {
                  "description": "Lists all or a subset of Item resources.\n\nThis API requires an admin or service account to execute. The service\naccount used is the one whitelisted in the corresponding data source.",
                  "response": {
                    "$ref": "ListItemsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ],
                  "parameters": {
                    "brief": {
                      "type": "boolean",
                      "location": "query",
                      "description": "When set to true, the indexing system only populates the following fields:\nname,\nversion,\nqueue.\nmetadata.hash,\nmetadata.title,\nmetadata.sourceRepositoryURL,\nmetadata.objectType,\nmetadata.createTime,\nmetadata.updateTime,\nmetadata.contentLanguage,\nmetadata.mimeType,\nstructured_data.hash,\ncontent.hash,\nitemType,\nitemStatus.code,\nitemStatus.processingError.code,\nitemStatus.repositoryError.type,\n\u003cbr /\u003eIf this value is false, then all the fields are populated in Item."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of items to fetch in a request.\nThe max value is 1000 when brief is true.  The max value is 10 if brief\nis false.\n\u003cbr /\u003eThe default value is 10",
                      "format": "int32",
                      "type": "integer"
                    },
                    "debugOptions.enableDebugging": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field."
                    },
                    "name": {
                      "pattern": "^datasources/[^/]+$",
                      "location": "path",
                      "description": "Name of the Data Source to list Items.  Format:\ndatasources/{source_id}",
                      "required": true,
                      "type": "string"
                    },
                    "connectorName": {
                      "type": "string",
                      "location": "query",
                      "description": "Name of connector making this call.\n\u003cbr /\u003eFormat: datasources/{source_id}/connectors/{ID}"
                    }
                  },
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items",
                  "path": "v1/indexing/{+name}/items",
                  "id": "cloudsearch.indexing.datasources.items.list"
                }
              }
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.debug",
            "https://www.googleapis.com/auth/cloud_search.indexing",
            "https://www.googleapis.com/auth/cloud_search.settings",
            "https://www.googleapis.com/auth/cloud_search.settings.indexing",
            "https://www.googleapis.com/auth/cloud_search.settings.query"
          ],
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string",
              "pattern": "^operations/.+$",
              "location": "path"
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "id": "cloudsearch.operations.get",
          "path": "v1/{+name}"
        }
      }
    },
    "query": {
      "methods": {
        "search": {
          "response": {
            "$ref": "SearchResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.query"
          ],
          "flatPath": "v1/query/search",
          "path": "v1/query/search",
          "id": "cloudsearch.query.search",
          "description": "The Cloud Search Query API provides the search method, which returns\nthe most relevant results from a user query.  The results can come from\nG Suite Apps, such as Gmail or Google Drive, or they can come from data\nthat you have indexed from a third party.\n\n**Note:** This API requires a standard end user account to execute.",
          "request": {
            "$ref": "SearchRequest"
          }
        },
        "suggest": {
          "path": "v1/query/suggest",
          "id": "cloudsearch.query.suggest",
          "description": "Provides suggestions for autocompleting the query.\n\n**Note:** This API requires a standard end user account to execute.",
          "request": {
            "$ref": "SuggestRequest"
          },
          "response": {
            "$ref": "SuggestResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.query"
          ],
          "flatPath": "v1/query/suggest"
        }
      },
      "resources": {
        "sources": {
          "methods": {
            "list": {
              "description": "Returns list of sources that user can use for Search and Suggest APIs.\n\n**Note:** This API requires a standard end user account to execute.",
              "response": {
                "$ref": "ListQuerySourcesResponse"
              },
              "parameterOrder": [],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.query"
              ],
              "parameters": {
                "requestOptions.searchApplicationId": {
                  "location": "query",
                  "description": "Id of the application created using SearchApplicationsService.",
                  "type": "string"
                },
                "requestOptions.timeZone": {
                  "location": "query",
                  "description": "Current user's time zone id, such as \"America/Los_Angeles\" or\n\"Australia/Sydney\". These IDs are defined by\n[Unicode Common Locale Data Repository (CLDR)](http://cldr.unicode.org/)\nproject, and currently available in the file\n[timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml).\nThis field is used to correctly interpret date and time queries.\nIf this field is not specified, the default time zone (UTC) is used.",
                  "type": "string"
                },
                "pageToken": {
                  "description": "Number of sources to return in the response.",
                  "type": "string",
                  "location": "query"
                },
                "requestOptions.debugOptions.enableDebugging": {
                  "location": "query",
                  "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                  "type": "boolean"
                },
                "requestOptions.languageCode": {
                  "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\nFor translations.\n\nSet this field using the language set in browser or for the page. In the\nevent that the user's language preference is known, set this field to the\nknown user language.\n\nWhen specified, the documents in search results are biased towards the\nspecified language.\n\nThe suggest API does not use this parameter. Instead, suggest autocompletes\nonly based on characters in the query.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v1/query/sources",
              "path": "v1/query/sources",
              "id": "cloudsearch.query.sources.list"
            }
          }
        }
      }
    },
    "debug": {
      "resources": {
        "datasources": {
          "resources": {
            "items": {
              "methods": {
                "searchByViewUrl": {
                  "id": "cloudsearch.debug.datasources.items.searchByViewUrl",
                  "path": "v1/debug/{+name}/items:searchByViewUrl",
                  "description": "Fetches the item whose viewUrl exactly matches that of the URL provided\nin the request.\n\n**Note:** This API requires an admin account to execute.",
                  "request": {
                    "$ref": "SearchItemsByViewUrlRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "SearchItemsByViewUrlResponse"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^datasources/[^/]+$",
                      "location": "path",
                      "description": "Source name, format:\ndatasources/{source_id}"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.debug"
                  ],
                  "flatPath": "v1/debug/datasources/{datasourcesId}/items:searchByViewUrl"
                },
                "checkAccess": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "CheckAccessResponse"
                  },
                  "parameters": {
                    "debugOptions.enableDebugging": {
                      "location": "query",
                      "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Item name, format:\ndatasources/{source_id}/items/{item_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.debug"
                  ],
                  "flatPath": "v1/debug/datasources/{datasourcesId}/items/{itemsId}:checkAccess",
                  "id": "cloudsearch.debug.datasources.items.checkAccess",
                  "path": "v1/debug/{+name}:checkAccess",
                  "description": "Checks whether an item is accessible by specified principal.\n\n**Note:** This API requires an admin account to execute.",
                  "request": {
                    "$ref": "Principal"
                  }
                }
              },
              "resources": {
                "unmappedids": {
                  "methods": {
                    "list": {
                      "id": "cloudsearch.debug.datasources.items.unmappedids.list",
                      "path": "v1/debug/{+parent}/unmappedids",
                      "description": "List all unmapped identities for a specific item.\n\n**Note:** This API requires an admin account to execute.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListUnmappedIdentitiesResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "The next_page_token value returned from a previous List request, if any.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Maximum number of items to fetch in a request.\nDefaults to 100.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "parent": {
                          "pattern": "^datasources/[^/]+/items/[^/]+$",
                          "location": "path",
                          "description": "The name of the item, in the following format:\ndatasources/{source_id}/items/{ID}",
                          "required": true,
                          "type": "string"
                        },
                        "debugOptions.enableDebugging": {
                          "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                          "type": "boolean",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud_search",
                        "https://www.googleapis.com/auth/cloud_search.debug"
                      ],
                      "flatPath": "v1/debug/datasources/{datasourcesId}/items/{itemsId}/unmappedids"
                    }
                  }
                }
              }
            }
          }
        },
        "identitysources": {
          "resources": {
            "items": {
              "methods": {
                "listForunmappedidentity": {
                  "response": {
                    "$ref": "ListItemNamesForUnmappedIdentityResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "groupResourceName": {
                      "type": "string",
                      "location": "query"
                    },
                    "userResourceName": {
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of items to fetch in a request.\nDefaults to 100.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^identitysources/[^/]+$",
                      "location": "path",
                      "description": "The name of the identity source, in the following format:\nidentitysources/{source_id}}"
                    },
                    "debugOptions.enableDebugging": {
                      "location": "query",
                      "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field.",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.debug"
                  ],
                  "flatPath": "v1/debug/identitysources/{identitysourcesId}/items:forunmappedidentity",
                  "path": "v1/debug/{+parent}/items:forunmappedidentity",
                  "id": "cloudsearch.debug.identitysources.items.listForunmappedidentity",
                  "description": "Lists names of items associated with an unmapped identity.\n\n**Note:** This API requires an admin account to execute."
                }
              }
            },
            "unmappedids": {
              "methods": {
                "list": {
                  "path": "v1/debug/{+parent}/unmappedids",
                  "id": "cloudsearch.debug.identitysources.unmappedids.list",
                  "description": "Lists unmapped user identities for an identity source.\n\n**Note:** This API requires an admin account to execute.",
                  "response": {
                    "$ref": "ListUnmappedIdentitiesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "resolutionStatusCode": {
                      "location": "query",
                      "enum": [
                        "CODE_UNSPECIFIED",
                        "NOT_FOUND",
                        "IDENTITY_SOURCE_NOT_FOUND",
                        "IDENTITY_SOURCE_MISCONFIGURED",
                        "TOO_MANY_MAPPINGS_FOUND",
                        "INTERNAL_ERROR"
                      ],
                      "description": "Limit users selection to this status.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^identitysources/[^/]+$",
                      "location": "path",
                      "description": "The name of the identity source, in the following format:\nidentitysources/{source_id}"
                    },
                    "debugOptions.enableDebugging": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If you are asked by Google to help with debugging, set this field.\nOtherwise, ignore this field."
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Maximum number of items to fetch in a request.\nDefaults to 100.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.debug"
                  ],
                  "flatPath": "v1/debug/identitysources/{identitysourcesId}/unmappedids"
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "version": "v1",
  "baseUrl": "https://cloudsearch.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Cloud Search provides cloud-based search capabilities over G Suite data.  The Cloud Search API allows indexing of non-G Suite data into Cloud Search.",
  "servicePath": "",
  "basePath": "",
  "id": "cloudsearch:v1",
  "documentationLink": "https://developers.google.com/cloud-search/docs/guides/",
  "revision": "20191112",
  "discoveryVersion": "v1"
}
