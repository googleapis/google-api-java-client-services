/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * This message represents a price range of an attribute. The meaning of the price bounds is domain
 * specific. But mainly they are soft bounds for a normal usage. E.g. "restaurant prices" are
 * subject to an higher level of "soft" bounds than "museum admission price"
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostorePriceRangeProto extends com.google.api.client.json.GenericJson {

  /**
   * Currency code for the price range: a valid currency code from i18n/identifiers/currencycode.h.
   * Lower and upper price are both assumed to use the same currency.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String currency;

  /**
   * This message allows unbounded price ranges. e.g. Lower_price is undefined. At least one of the
   * two prices must be set for the price range to be meaningful.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double lowerPrice;

  /**
   * clang-format on
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String units;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double upperPrice;

  /**
   * Currency code for the price range: a valid currency code from i18n/identifiers/currencycode.h.
   * Lower and upper price are both assumed to use the same currency.
   * @return value or {@code null} for none
   */
  public java.lang.String getCurrency() {
    return currency;
  }

  /**
   * Currency code for the price range: a valid currency code from i18n/identifiers/currencycode.h.
   * Lower and upper price are both assumed to use the same currency.
   * @param currency currency or {@code null} for none
   */
  public GeostorePriceRangeProto setCurrency(java.lang.String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * This message allows unbounded price ranges. e.g. Lower_price is undefined. At least one of the
   * two prices must be set for the price range to be meaningful.
   * @return value or {@code null} for none
   */
  public java.lang.Double getLowerPrice() {
    return lowerPrice;
  }

  /**
   * This message allows unbounded price ranges. e.g. Lower_price is undefined. At least one of the
   * two prices must be set for the price range to be meaningful.
   * @param lowerPrice lowerPrice or {@code null} for none
   */
  public GeostorePriceRangeProto setLowerPrice(java.lang.Double lowerPrice) {
    this.lowerPrice = lowerPrice;
    return this;
  }

  /**
   * clang-format on
   * @return value or {@code null} for none
   */
  public java.lang.String getUnits() {
    return units;
  }

  /**
   * clang-format on
   * @param units units or {@code null} for none
   */
  public GeostorePriceRangeProto setUnits(java.lang.String units) {
    this.units = units;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getUpperPrice() {
    return upperPrice;
  }

  /**
   * @param upperPrice upperPrice or {@code null} for none
   */
  public GeostorePriceRangeProto setUpperPrice(java.lang.Double upperPrice) {
    this.upperPrice = upperPrice;
    return this;
  }

  @Override
  public GeostorePriceRangeProto set(String fieldName, Object value) {
    return (GeostorePriceRangeProto) super.set(fieldName, value);
  }

  @Override
  public GeostorePriceRangeProto clone() {
    return (GeostorePriceRangeProto) super.clone();
  }

}
