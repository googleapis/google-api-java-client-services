{
  "parameters": {
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    }
  },
  "ownerName": "Google",
  "version_module": true,
  "id": "books:v1",
  "revision": "20200603",
  "discoveryVersion": "v1",
  "baseUrl": "https://www.googleapis.com/",
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "rootUrl": "https://www.googleapis.com/",
  "version": "v1",
  "schemas": {
    "Series": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "series": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "bannerImageUrl": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "subscriptionId": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              },
              "seriesSubscriptionReleaseInfo": {
                "type": "object",
                "properties": {
                  "nextReleaseInfo": {
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "releaseNumber": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "cancelTime": {
                    "type": "string"
                  },
                  "currentReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      }
                    }
                  },
                  "seriesSubscriptionType": {
                    "type": "string"
                  }
                }
              },
              "imageUrl": {
                "type": "string"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "seriesId": {
                "type": "string"
              },
              "isComplete": {
                "type": "boolean"
              },
              "title": {
                "type": "string"
              }
            }
          }
        }
      },
      "id": "Series",
      "type": "object"
    },
    "Annotations": {
      "type": "object",
      "id": "Annotations",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "totalItems": {
          "type": "integer",
          "description": "Total number of annotations found. This may be greater than the number of\nnotes returned in this response if results have been paginated.",
          "format": "int32"
        },
        "items": {
          "description": "A list of annotations.",
          "items": {
            "$ref": "Annotation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results.",
          "type": "string"
        }
      }
    },
    "Notification": {
      "id": "Notification",
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "notificationGroup": {
          "type": "string"
        },
        "doc_type": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        },
        "crmExperimentIds": {
          "description": "The list of crm experiment ids.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "iconUrl": {
          "type": "string"
        },
        "timeToExpireMs": {
          "type": "string",
          "format": "int64"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "Volumes": {
      "type": "object",
      "id": "Volumes",
      "properties": {
        "totalItems": {
          "description": "Total number of volumes found. This might be greater than the number of\nvolumes returned in this response if results have been paginated.",
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "items": {
            "$ref": "Volume"
          },
          "description": "A list of volumes.",
          "type": "array"
        }
      }
    },
    "Seriesmembership": {
      "properties": {
        "member": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "Seriesmembership"
    },
    "DictionaryAnnotationdata": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "encodedData": {
          "description": "Base64 encoded data for this annotation data.",
          "type": "string",
          "format": "byte"
        },
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat).",
          "type": "string"
        },
        "data": {
          "description": "JSON encoded data for this dictionary annotation data.\nEmitted with name 'data' in JSON output. Either this or geo_data will\nbe populated.",
          "$ref": "Dictlayerdata"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DictionaryAnnotationdata"
    },
    "FamilyInfo": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "membership": {
          "type": "object",
          "description": "Family membership info of the user that made the request.",
          "properties": {
            "acquirePermission": {
              "description": "Restrictions on user buying and acquiring content.",
              "type": "string"
            },
            "isInFamily": {
              "type": "boolean"
            },
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            },
            "ageGroup": {
              "type": "string",
              "description": "The age group of the user."
            },
            "allowedMaturityRating": {
              "description": "The maximum allowed maturity rating for the user.",
              "type": "string"
            }
          }
        }
      },
      "id": "FamilyInfo",
      "type": "object"
    },
    "Bookshelf": {
      "id": "Bookshelf",
      "properties": {
        "created": {
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond\nresolution).",
          "type": "string"
        },
        "volumesLastUpdated": {
          "type": "string",
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC\ntimestamp with millisecond resolution)."
        },
        "updated": {
          "type": "string",
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with\nmillisecond resolution)."
        },
        "volumeCount": {
          "description": "Number of volumes in this bookshelf.",
          "format": "int32",
          "type": "integer"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for bookshelf metadata."
        },
        "title": {
          "type": "string",
          "description": "Title of this bookshelf."
        },
        "id": {
          "format": "int32",
          "description": "Id of this bookshelf, only unique by user.",
          "type": "integer"
        },
        "access": {
          "type": "string",
          "description": "Whether this bookshelf is PUBLIC or PRIVATE."
        },
        "description": {
          "description": "Description of this bookshelf.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Review": {
      "properties": {
        "fullTextUrl": {
          "type": "string",
          "description": "URL for the full review text, for reviews gathered from the web."
        },
        "rating": {
          "type": "string",
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR,\nFIVE or NOT_RATED."
        },
        "volumeId": {
          "description": "Volume that this review is for.",
          "type": "string"
        },
        "author": {
          "type": "object",
          "description": "Author of this review.",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Name of this person."
            }
          }
        },
        "date": {
          "type": "string",
          "description": "Date of this review."
        },
        "source": {
          "description": "Information regarding the source of this review, when the review is not\nfrom a Google Books user.",
          "type": "object",
          "properties": {
            "url": {
              "description": "URL of the source of the review.",
              "type": "string"
            },
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            },
            "description": {
              "type": "string",
              "description": "Name of the source."
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a review."
        },
        "content": {
          "type": "string",
          "description": "Review text."
        },
        "title": {
          "type": "string",
          "description": "Title for this review."
        },
        "type": {
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or\nGOOGLE_USER.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Review"
    },
    "Geolayerdata": {
      "id": "Geolayerdata",
      "properties": {
        "kind": {
          "type": "string"
        },
        "geo": {
          "properties": {
            "countryCode": {
              "type": "string",
              "description": "The country code of the location."
            },
            "latitude": {
              "description": "The latitude of the location.",
              "format": "double",
              "type": "number"
            },
            "longitude": {
              "format": "double",
              "description": "The longitude of the location.",
              "type": "number"
            },
            "viewport": {
              "type": "object",
              "description": "The viewport for showing this location. This is a latitude, longitude\nrectangle.",
              "properties": {
                "hi": {
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "lo": {
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "zoom": {
              "format": "int32",
              "type": "integer",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom\nlevel, in which the entire world can be seen on one map) to 21+ (down to\nindividual buildings). See: https:\n//developers.google.com/maps/documentation/staticmaps/#Zoomlevels"
            },
            "mapType": {
              "type": "string",
              "description": "The type of map that should be used for this location. EX: HYBRID,\nROADMAP, SATELLITE, TERRAIN"
            },
            "boundary": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The boundary of the location as a set of loops containing pairs of\nlatitude, longitude coordinates."
            },
            "cachePolicy": {
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED,\nNEVER",
              "type": "string"
            }
          },
          "type": "object"
        },
        "common": {
          "type": "object",
          "properties": {
            "snippet": {
              "description": "The description for this location.",
              "type": "string"
            },
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            },
            "snippetUrl": {
              "description": "The URL for information for this location. Ex: wikipedia link.",
              "type": "string"
            },
            "title": {
              "description": "The display title and localized canonical name to use when searching for\nthis entity on Google search.",
              "type": "string"
            },
            "previewImageUrl": {
              "description": "The URL for the preview image information.",
              "type": "string"
            }
          }
        }
      },
      "type": "object"
    },
    "Usersettings": {
      "id": "Usersettings",
      "properties": {
        "notification": {
          "properties": {
            "moreFromAuthors": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "rewardExpirations": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "priceDrop": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "matchMyInterests": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromSeries": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            }
          },
          "type": "object"
        },
        "notesExport": {
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          },
          "type": "object",
          "description": "User settings in sub-objects, each for different purposes."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Category": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "properties": {
              "categoryId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "badgeUrl": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": "A list of onboarding categories."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Category"
    },
    "RequestAccessData": {
      "type": "object",
      "id": "RequestAccessData",
      "properties": {
        "concurrentAccess": {
          "description": "A concurrent access response.",
          "$ref": "ConcurrentAccessRestriction"
        },
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "BooksAnnotationsRange": {
      "id": "BooksAnnotationsRange",
      "properties": {
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "startPosition": {
          "description": "The starting position for the range.",
          "type": "string"
        },
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        },
        "startOffset": {
          "description": "The offset from the starting position.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "ConcurrentAccessRestriction": {
      "id": "ConcurrentAccessRestriction",
      "properties": {
        "maxConcurrentDevices": {
          "type": "integer",
          "description": "The maximum number of concurrent access licenses for this volume.",
          "format": "int32"
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code."
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and\nclient-validation only."
        },
        "timeWindowSeconds": {
          "type": "integer",
          "description": "Time in seconds for license auto-expiration.",
          "format": "int32"
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "deviceAllowed": {
          "description": "Whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any concurrent access restrictions."
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Layersummaries": {
      "type": "object",
      "properties": {
        "totalItems": {
          "description": "The total number of layer summaries found.",
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "description": "A list of layer summary items.",
          "items": {
            "$ref": "Layersummary"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Layersummaries"
    },
    "Bookshelves": {
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "$ref": "Bookshelf"
          },
          "type": "array",
          "description": "A list of bookshelves."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Bookshelves"
    },
    "Offers": {
      "id": "Offers",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "properties": {
              "gservicesKey": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "properties": {
                    "coverUrl": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "id": {
                "type": "string"
              },
              "artUrl": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": "A list of offers."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Dictlayerdata": {
      "id": "Dictlayerdata",
      "type": "object",
      "properties": {
        "common": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for\nthis entity on Google search."
            }
          }
        },
        "dict": {
          "type": "object",
          "properties": {
            "source": {
              "properties": {
                "attribution": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object"
            },
            "words": {
              "items": {
                "type": "object",
                "properties": {
                  "senses": {
                    "items": {
                      "properties": {
                        "pronunciation": {
                          "type": "string"
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "definitions": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "definition": {
                                "type": "string"
                              },
                              "examples": {
                                "items": {
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    },
                                    "source": {
                                      "type": "object",
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "properties": {
                                  "attribution": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "text": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "conjugations": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "source": {
                    "description": "The words with different meanings but not related words, e.g. \"go\"\n(game) and \"go\" (verb).",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "attribution": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "examples": {
                    "items": {
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "derivatives": {
                    "items": {
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "type": "array"
            }
          }
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "ReadingPosition": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type for a reading position."
        },
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC\ntimestamp with millisecond resolution).",
          "type": "string"
        },
        "gbTextPosition": {
          "type": "string",
          "description": "Position in a volume for text-based content."
        },
        "pdfPosition": {
          "type": "string",
          "description": "Position in a PDF file."
        },
        "gbImagePosition": {
          "type": "string",
          "description": "Position in a volume for image-based content."
        },
        "volumeId": {
          "description": "Volume id associated with this reading position.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ReadingPosition"
    },
    "Discoveryclusters": {
      "type": "object",
      "id": "Discoveryclusters",
      "properties": {
        "totalClusters": {
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "clusters": {
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              },
              "banner_with_content_container": {
                "properties": {
                  "imageUrl": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "volumes": {
                "items": {
                  "$ref": "Volume"
                },
                "type": "array"
              },
              "subTitle": {
                "type": "string"
              },
              "uid": {
                "type": "string"
              }
            }
          },
          "type": "array"
        }
      }
    },
    "BooksVolumesRecommendedRateResponse": {
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "BooksVolumesRecommendedRateResponse"
    },
    "Volumeseriesinfo": {
      "id": "Volumeseriesinfo",
      "type": "object",
      "properties": {
        "bookDisplayNumber": {
          "description": "The display number string. This should be used only for display purposes\nand the actual sequence should be inferred from the below orderNumber.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "shortSeriesBookTitle": {
          "description": "Short book title in the context of the series.",
          "type": "string"
        },
        "volumeSeries": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "seriesId": {
                "type": "string",
                "description": "The series id."
              },
              "issue": {
                "items": {
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "description": "List of issues. Applicable only for Collection Edition and Omnibus."
              },
              "seriesBookType": {
                "type": "string",
                "description": "The book type in the context of series. Examples - Single Issue,\nCollection Edition, etc."
              },
              "orderNumber": {
                "type": "integer",
                "format": "int32",
                "description": "The book order number in the series."
              }
            }
          }
        }
      }
    },
    "BooksCloudloadingResource": {
      "properties": {
        "author": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "id": "BooksCloudloadingResource",
      "type": "object"
    },
    "Annotation": {
      "properties": {
        "layerSummary": {
          "type": "object",
          "properties": {
            "limitType": {
              "type": "string",
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\"\nlayer."
            },
            "remainingCharacterCount": {
              "description": "Remaining allowed characters on this layer, especially for the \"copy\"\nlayer.",
              "format": "int32",
              "type": "integer"
            },
            "allowedCharacterCount": {
              "format": "int32",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\"\nlayer.",
              "type": "integer"
            }
          }
        },
        "id": {
          "description": "Id of this annotation, in the form of a GUID.",
          "type": "string"
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "clientVersionRanges": {
          "type": "object",
          "description": "Selection ranges sent from the client.",
          "properties": {
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation sent by client."
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation sent by client."
            }
          }
        },
        "data": {
          "description": "User-created data for this annotation.",
          "type": "string"
        },
        "created": {
          "type": "string",
          "description": "Timestamp for the created time of this annotation."
        },
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this annotation was modified.",
          "type": "string"
        },
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        },
        "beforeSelectedText": {
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "afterSelectedText": {
          "type": "string",
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty."
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume that this annotation belongs to.",
          "type": "string"
        },
        "currentVersionRanges": {
          "description": "Selection ranges for the most recent content version.",
          "properties": {
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation for version above."
            }
          },
          "type": "object"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "pageIds": {
          "description": "Pages that this annotation spans.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "Annotation",
      "type": "object"
    },
    "AnnotationsSummary": {
      "properties": {
        "kind": {
          "type": "string"
        },
        "layers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "updated": {
                "type": "string"
              },
              "layerId": {
                "type": "string"
              },
              "limitType": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              },
              "allowedCharacterCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "type": "object",
      "id": "AnnotationsSummary"
    },
    "Volumeannotation": {
      "properties": {
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "layerId": {
          "type": "string",
          "description": "The Layer this annotation is for."
        },
        "pageIds": {
          "description": "Pages the annotation spans.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "annotationDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "updated": {
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC\ndate-time format).",
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "id": {
          "type": "string",
          "description": "Unique id of this volume annotation."
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "annotationDataId": {
          "type": "string",
          "description": "The annotation data id for this volume annotation."
        },
        "volumeId": {
          "description": "The Volume this annotation is for.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "contentRanges": {
          "properties": {
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "description": "The content ranges to identify the selected text.",
          "type": "object"
        }
      },
      "id": "Volumeannotation",
      "type": "object"
    },
    "Layersummary": {
      "id": "Layersummary",
      "properties": {
        "updated": {
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339\nUTC date-time format).",
          "type": "string"
        },
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "annotationCount": {
          "format": "int32",
          "description": "The number of annotations for this layer.",
          "type": "integer"
        },
        "layerId": {
          "description": "The layer id for this summary.",
          "type": "string"
        },
        "dataCount": {
          "type": "integer",
          "description": "The number of data items for this layer.",
          "format": "int32"
        },
        "annotationsDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version this resource is for."
        },
        "volumeAnnotationsVersion": {
          "type": "string",
          "description": "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the books.layers.volumeAnnotations.*\nresponses. The actual annotation data is versioned separately."
        },
        "id": {
          "type": "string",
          "description": "Unique id of this layer summary."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id this resource is for."
        }
      },
      "type": "object"
    },
    "Annotationsdata": {
      "id": "Annotationsdata",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "description": "A list of Annotation Data."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results."
        },
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Volumeannotations": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results."
        },
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "format": "int32",
          "type": "integer"
        },
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not\njust the ones in this response). Note: the version string\ndoesn't apply to the annotation data, just the information in this response\n(e.g. the location of annotations in the book).",
          "type": "string"
        },
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Volumeannotation"
          },
          "type": "array",
          "description": "A list of volume annotations."
        }
      },
      "type": "object",
      "id": "Volumeannotations"
    },
    "GeoAnnotationdata": {
      "type": "object",
      "properties": {
        "layerId": {
          "type": "string",
          "description": "The Layer id for this data. *"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "data": {
          "description": "JSON encoded data for this geo annotation data.\nEmitted with name 'data' in JSON output. Either this or dict_data will\nbe populated.",
          "$ref": "Geolayerdata"
        },
        "encodedData": {
          "type": "string",
          "description": "Base64 encoded data for this annotation data.",
          "format": "byte"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat).",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        }
      },
      "id": "GeoAnnotationdata"
    },
    "DownloadAccesses": {
      "id": "DownloadAccesses",
      "properties": {
        "downloadAccessList": {
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "description": "A list of download access responses.",
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Volume": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for a volume. (In LITE projection.)"
        },
        "accessInfo": {
          "properties": {
            "pdf": {
              "description": "Information about pdf content. (In LITE projection.)",
              "type": "object",
              "properties": {
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download pdf. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)",
                  "type": "string"
                },
                "isAvailable": {
                  "description": "Is a scanned image pdf available either as public domain or for\npurchase. (In LITE projection.)",
                  "type": "boolean"
                }
              }
            },
            "embeddable": {
              "description": "Whether this volume can be embedded in a viewport using the Embedded\nViewer API.",
              "type": "boolean"
            },
            "downloadAccess": {
              "$ref": "DownloadAccessRestriction",
              "description": "Information about a volume's download license access restrictions."
            },
            "explicitOfflineLicenseManagement": {
              "description": "Whether this volume requires that the client explicitly request offline\ndownload license rather than have it done automatically when loading the\ncontent, if the client supports it.",
              "type": "boolean"
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this access information\nis valid. (In LITE projection.)"
            },
            "accessViewStatus": {
              "type": "string",
              "description": "Combines the access and viewability of this volume into a single status\nfield for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN,\nSAMPLE or NONE. (In LITE projection.)"
            },
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used\nto go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "viewability": {
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES,\nNO_PAGES or UNKNOWN. This value depends on the country listed above. A\nvalue of PARTIAL means that the publisher has allowed some portion of the\nvolume to be viewed publicly, without purchase. This can apply to eBooks\nas well as non-eBooks. Public domain books will always have a value of\nALL_PAGES.",
              "type": "string"
            },
            "driveImportedContentLink": {
              "type": "string",
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by\nselecting the file from Google Drive."
            },
            "quoteSharingAllowed": {
              "description": "Whether quote sharing is allowed for this volume.",
              "type": "boolean"
            },
            "epub": {
              "description": "Information about epub content. (In LITE projection.)",
              "type": "object",
              "properties": {
                "downloadLink": {
                  "description": "URL to download epub. (In LITE projection.)",
                  "type": "string"
                },
                "isAvailable": {
                  "description": "Is a flowing text epub available either as public domain or for\npurchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)"
                }
              }
            },
            "textToSpeechPermission": {
              "type": "string",
              "description": "Whether text-to-speech is permitted for this volume. Values can be\nALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."
            },
            "webReaderLink": {
              "type": "string",
              "description": "URL to read this volume on the Google Books site. Link will not allow\nusers to read non-viewable volumes."
            },
            "publicDomain": {
              "type": "boolean",
              "description": "Whether or not this book is public domain in the country listed above."
            }
          },
          "type": "object",
          "description": "Any information about a volume related to reading or obtaining that volume\ntext. This information can depend on country (books may be public domain in\none country but not in another, e.g.)."
        },
        "etag": {
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE\nprojection)",
          "type": "string"
        },
        "saleInfo": {
          "properties": {
            "offers": {
              "description": "Offers available for this volume (sales and rentals).",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "retailPrice": {
                    "type": "object",
                    "description": "Offer retail (=discounted) price in Micros",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  },
                  "giftable": {
                    "type": "boolean",
                    "description": "Indicates whether the offer is giftable."
                  },
                  "rentalDuration": {
                    "description": "The rental duration (for rental offers only).",
                    "type": "object",
                    "properties": {
                      "unit": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "listPrice": {
                    "properties": {
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "description": "Offer list (=undiscounted) price in Micros."
                  },
                  "finskyOfferType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)"
                  }
                }
              }
            },
            "onSaleDate": {
              "type": "string",
              "description": "The date on which this book is available for sale."
            },
            "buyLink": {
              "type": "string",
              "description": "URL to purchase this volume on the Google Books site. (In LITE\nprojection)"
            },
            "isEbook": {
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks\nshelf).",
              "type": "boolean"
            },
            "retailPrice": {
              "properties": {
                "amount": {
                  "format": "double",
                  "type": "number",
                  "description": "Amount in the currency listed below. (In LITE projection.)"
                },
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                }
              },
              "description": "The actual selling price of the book. This is the same as the suggested\nretail or list price unless there are offers or discounts on this volume.\n(In LITE projection.)",
              "type": "object"
            },
            "saleability": {
              "description": "Whether or not this book is available for sale or offered for free in the\nGoogle eBookstore for the country listed above. Possible values are\nFOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or\nFOR_PREORDER.",
              "type": "string"
            },
            "listPrice": {
              "type": "object",
              "description": "Suggested retail price. (In LITE projection.)",
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "format": "double"
                },
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                }
              }
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this sale information is\nvalid. (In LITE projection.)",
              "type": "string"
            }
          },
          "type": "object",
          "description": "Any information about a volume related to the eBookstore and/or\npurchaseability. This information can depend on the country where the\nrequest originates from (i.e. books may not be for sale in certain\ncountries)."
        },
        "userInfo": {
          "properties": {
            "readingPosition": {
              "description": "The user's current reading position in the volume, if one is available.\n(In LITE projection.)",
              "$ref": "ReadingPosition"
            },
            "isUploaded": {
              "description": "Whether or not this volume was user uploaded.",
              "type": "boolean"
            },
            "acquisitionType": {
              "description": "How this volume was acquired.",
              "type": "integer",
              "format": "int32"
            },
            "isInMyBooks": {
              "description": "Whether or not this volume is currently in \"my books.\"",
              "type": "boolean"
            },
            "isFamilySharedToUser": {
              "type": "boolean",
              "description": "Whether or not the user received this volume through family sharing."
            },
            "rentalState": {
              "type": "string",
              "description": "Whether this book is an active or an expired rental."
            },
            "isFamilySharingAllowed": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            },
            "review": {
              "$ref": "Review",
              "description": "This user's review of this volume, if one exists."
            },
            "entitlementType": {
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "type": "integer",
              "format": "int32"
            },
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a\nreading position update, volume purchase or writing a review. (RFC 3339\nUTC date-time format)."
            },
            "isFamilySharingDisabledByFop": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            },
            "isPreordered": {
              "type": "boolean",
              "description": "Whether or not this volume was pre-ordered by the authenticated user\nmaking the request. (In LITE projection.)"
            },
            "isPurchased": {
              "type": "boolean",
              "description": "Whether or not this volume was purchased by the authenticated user making\nthe request. (In LITE projection.)"
            },
            "copy": {
              "properties": {
                "limitType": {
                  "type": "string"
                },
                "allowedCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "updated": {
                  "type": "string"
                },
                "remainingCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "description": "Copy/Paste accounting information.",
              "type": "object"
            },
            "familySharing": {
              "description": "Information on the ability to share with the family.",
              "type": "object",
              "properties": {
                "isSharingDisabledByFop": {
                  "description": "Whether or not sharing this volume is temporarily disabled due to\nissues with the Family Wallet.",
                  "type": "boolean"
                },
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                },
                "isSharingAllowed": {
                  "description": "Whether or not this volume can be shared with the family by the user.\nThis includes sharing eligibility of both the volume and the user. If\nthe value is true, the user can initiate a family sharing action.",
                  "type": "boolean"
                }
              }
            },
            "isFamilySharedFromUser": {
              "description": "Whether or not the user shared this volume with the family.",
              "type": "boolean"
            },
            "userUploadedVolumeInfo": {
              "properties": {
                "processingState": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "acquiredTime": {
              "type": "string",
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC\ndate-time format) Acquiring includes purchase, user upload, receiving\nfamily sharing, etc."
            },
            "rentalPeriod": {
              "properties": {
                "endUtcSec": {
                  "type": "string",
                  "format": "int64"
                },
                "startUtcSec": {
                  "type": "string",
                  "format": "int64"
                }
              },
              "type": "object",
              "description": "Period during this book is/was a valid rental."
            }
          },
          "type": "object",
          "description": "User specific information related to this volume. (e.g. page this user last\nread or whether they purchased this book)"
        },
        "volumeInfo": {
          "description": "General volume information.",
          "type": "object",
          "properties": {
            "maturityRating": {
              "type": "string"
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "canonicalVolumeLink": {
              "description": "Canonical URL for a volume. (In LITE projection.)",
              "type": "string"
            },
            "samplePageCount": {
              "type": "integer",
              "format": "int32",
              "description": "Total number of sample pages as per publisher metadata."
            },
            "language": {
              "type": "string",
              "description": "Best language for this volume (based on content). It is the two-letter\nISO 639-1 code such as 'fr', 'en', etc."
            },
            "description": {
              "type": "string",
              "description": "A synopsis of the volume. The text of the description is formatted in\nHTML and includes simple formatting elements, such as b, i, and br tags.\n(In LITE projection.)"
            },
            "printType": {
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE.",
              "type": "string"
            },
            "comicsContent": {
              "description": "Whether the volume has comics content.",
              "type": "boolean"
            },
            "dimensions": {
              "type": "object",
              "properties": {
                "width": {
                  "type": "string",
                  "description": "Width of this volume (in cm)."
                },
                "height": {
                  "type": "string",
                  "description": "Height or length of this volume (in cm)."
                },
                "thickness": {
                  "description": "Thickness of this volume (in cm).",
                  "type": "string"
                }
              },
              "description": "Physical dimensions of this volume."
            },
            "printedPageCount": {
              "type": "integer",
              "description": "Total number of printed pages in generated pdf representation.",
              "format": "int32"
            },
            "readingModes": {
              "description": "The reading modes available for this volume.",
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "publisher": {
              "type": "string",
              "description": "Publisher of this volume. (In LITE projection.)"
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "publishedDate": {
              "type": "string",
              "description": "Date of publication. (In LITE projection.)"
            },
            "contentVersion": {
              "description": "An identifier for the version of the volume content (text & images). (In\nLITE projection)",
              "type": "string"
            },
            "panelizationSummary": {
              "description": "A top-level summary of the panelization info in this volume.",
              "type": "object",
              "properties": {
                "imageBubbleVersion": {
                  "type": "string"
                },
                "epubBubbleVersion": {
                  "type": "string"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                },
                "containsImageBubbles": {
                  "type": "boolean"
                }
              }
            },
            "averageRating": {
              "format": "double",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "type": "number"
            },
            "industryIdentifiers": {
              "type": "array",
              "items": {
                "properties": {
                  "type": {
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.",
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Industry specific volume identifier."
                  }
                },
                "type": "object"
              },
              "description": "Industry standard identifiers for this volume."
            },
            "ratingsCount": {
              "format": "int32",
              "type": "integer",
              "description": "The number of review ratings for this volume."
            },
            "title": {
              "description": "Volume title. (In LITE projection.)",
              "type": "string"
            },
            "mainCategory": {
              "description": "The main category to which this volume belongs. It will be the category\nfrom the categories list returned below that has the highest weight.",
              "type": "string"
            },
            "categories": {
              "items": {
                "type": "string"
              },
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "type": "array"
            },
            "subtitle": {
              "type": "string",
              "description": "Volume subtitle. (In LITE projection.)"
            },
            "pageCount": {
              "type": "integer",
              "description": "Total number of pages as per publisher metadata.",
              "format": "int32"
            },
            "previewLink": {
              "type": "string",
              "description": "URL to preview this volume on the Google Books site."
            },
            "imageLinks": {
              "type": "object",
              "properties": {
                "thumbnail": {
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE\nprojection)",
                  "type": "string"
                },
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                },
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE\nprojection)"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                },
                "small": {
                  "type": "string",
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)"
                },
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE\nprojection)",
                  "type": "string"
                }
              },
              "description": "A list of image links for all the sizes that are available. (In LITE\nprojection.)"
            },
            "authors": {
              "type": "array",
              "description": "The names of the authors and/or editors for this volume. (In LITE\nprojection)",
              "items": {
                "type": "string"
              }
            },
            "infoLink": {
              "description": "URL to view information about this volume on the Google Books site. (In\nLITE projection)",
              "type": "string"
            }
          }
        },
        "kind": {
          "description": "Resource type for a volume. (In LITE projection.)",
          "type": "string"
        },
        "recommendedInfo": {
          "properties": {
            "explanation": {
              "description": "A text explaining why this volume is recommended.",
              "type": "string"
            }
          },
          "type": "object",
          "description": "Recommendation related information for this volume."
        },
        "layerInfo": {
          "type": "object",
          "properties": {
            "layers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "volumeAnnotationsVersion": {
                    "type": "string",
                    "description": "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the\nbooks.layers.volumeAnnotations.* responses. The actual annotation data\nis versioned separately."
                  },
                  "layerId": {
                    "description": "The layer id of this layer (e.g. \"geo\").",
                    "type": "string"
                  }
                }
              },
              "description": "A layer should appear here if and only if the layer exists for this book."
            }
          },
          "description": "What layers exist in this volume and high level information about them."
        },
        "searchInfo": {
          "description": "Search result information related to this volume.",
          "type": "object",
          "properties": {
            "textSnippet": {
              "type": "string",
              "description": "A text snippet containing the search query."
            }
          }
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource. (In LITE projection.)"
        }
      },
      "type": "object",
      "id": "Volume"
    },
    "DownloadAccessRestriction": {
      "type": "object",
      "id": "DownloadAccessRestriction",
      "properties": {
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "justAcquired": {
          "type": "boolean",
          "description": "If deviceAllowed, whether access was just acquired with this request."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "maxDownloadDevices": {
          "type": "integer",
          "format": "int32",
          "description": "If restricted, the maximum number of content download licenses for this\nvolume."
        },
        "downloadsAcquired": {
          "format": "int32",
          "description": "If restricted, the number of content download licenses already acquired\n(including the requesting client, if licensed).",
          "type": "integer"
        },
        "deviceAllowed": {
          "description": "If restricted, whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and\nclient-validation only.",
          "type": "string"
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code.  Additional codes may be added in the future. 0\nOK 100   ACCESS_DENIED_PUBLISHER_LIMIT 101   ACCESS_DENIED_LIMIT 200\nWARNING_USED_LAST_ACCESS"
        },
        "restricted": {
          "description": "Whether this volume has any download access restrictions.",
          "type": "boolean"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "signature": {
          "type": "string",
          "description": "Response signature."
        }
      }
    },
    "Metadata": {
      "properties": {
        "items": {
          "description": "A list of offline dictionary metadata.",
          "items": {
            "type": "object",
            "properties": {
              "size": {
                "format": "int64",
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "download_url": {
                "type": "string"
              },
              "version": {
                "format": "int64",
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "Metadata"
    },
    "Volume2": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of volumes.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "id": "Volume2"
    }
  },
  "batchPath": "batch/books/v1",
  "basePath": "",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "servicePath": "",
  "name": "books",
  "resources": {
    "promooffer": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/promooffer/get",
          "httpMethod": "GET",
          "response": {
            "$ref": "Offers"
          },
          "id": "books.promooffer.get",
          "parameters": {
            "product": {
              "description": "device product",
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "location": "query",
              "type": "string",
              "description": "device android_id"
            },
            "manufacturer": {
              "description": "device manufacturer",
              "type": "string",
              "location": "query"
            },
            "model": {
              "location": "query",
              "type": "string",
              "description": "device model"
            },
            "serial": {
              "type": "string",
              "description": "device serial",
              "location": "query"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "path": "books/v1/promooffer/get",
          "description": "Returns a list of promo offers available to the user"
        },
        "dismiss": {
          "description": "Marks the promo offer as dismissed.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "parameters": {
            "serial": {
              "type": "string",
              "location": "query",
              "description": "device serial"
            },
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "manufacturer": {
              "type": "string",
              "description": "device manufacturer",
              "location": "query"
            },
            "model": {
              "type": "string",
              "location": "query",
              "description": "device model"
            },
            "offerId": {
              "type": "string",
              "location": "query",
              "description": "Offer to dimiss"
            },
            "androidId": {
              "type": "string",
              "location": "query",
              "description": "device android_id"
            },
            "product": {
              "description": "device product",
              "location": "query",
              "type": "string"
            }
          },
          "id": "books.promooffer.dismiss",
          "path": "books/v1/promooffer/dismiss",
          "httpMethod": "POST",
          "flatPath": "books/v1/promooffer/dismiss",
          "response": {
            "$ref": "Empty"
          }
        },
        "accept": {
          "path": "books/v1/promooffer/accept",
          "httpMethod": "POST",
          "id": "books.promooffer.accept",
          "description": "Accepts the promo offer.",
          "flatPath": "books/v1/promooffer/accept",
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "offerId": {
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "type": "string",
              "location": "query",
              "description": "device android_id"
            },
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "model": {
              "location": "query",
              "description": "device model",
              "type": "string"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "manufacturer": {
              "description": "device manufacturer",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "Volume id to exercise the offer"
            },
            "product": {
              "description": "device product",
              "type": "string",
              "location": "query"
            }
          }
        }
      }
    },
    "series": {
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "parameters": {
                "series_id": {
                  "location": "query",
                  "type": "string",
                  "description": "String that identifies the series"
                },
                "page_size": {
                  "description": "Number of maximum results per page to be included in the response.",
                  "format": "uint32",
                  "location": "query",
                  "type": "integer"
                },
                "page_token": {
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/series/membership/get",
              "path": "books/v1/series/membership/get",
              "id": "books.series.membership.get",
              "httpMethod": "GET",
              "description": "Returns Series membership data given the series id.",
              "response": {
                "$ref": "Seriesmembership"
              },
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        }
      },
      "methods": {
        "get": {
          "description": "Returns Series metadata for the given series ids.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/series/get",
          "parameters": {
            "series_id": {
              "description": "String that identifies the series",
              "location": "query",
              "repeated": true,
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "Series"
          },
          "parameterOrder": [],
          "flatPath": "books/v1/series/get",
          "id": "books.series.get"
        }
      }
    },
    "familysharing": {
      "methods": {
        "getFamilyInfo": {
          "path": "books/v1/familysharing/getFamilyInfo",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "parameterOrder": [],
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "description": "Gets information regarding the family that the user is part of.",
          "id": "books.familysharing.getFamilyInfo",
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "response": {
            "$ref": "FamilyInfo"
          }
        },
        "unshare": {
          "parameters": {
            "docId": {
              "location": "query",
              "description": "The docid to unshare.",
              "type": "string"
            },
            "volumeId": {
              "description": "The volume to unshare.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          },
          "httpMethod": "POST",
          "flatPath": "books/v1/familysharing/unshare",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "description": "Initiates revoking content that has already been shared with the user's\nfamily. Empty response indicates success.",
          "response": {
            "$ref": "Empty"
          },
          "id": "books.familysharing.unshare",
          "path": "books/v1/familysharing/unshare"
        },
        "share": {
          "path": "books/v1/familysharing/share",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "parameters": {
            "volumeId": {
              "location": "query",
              "description": "The volume to share.",
              "type": "string"
            },
            "docId": {
              "description": "The docid to share.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          },
          "description": "Initiates sharing of the content with the user's family. Empty response\nindicates success.",
          "id": "books.familysharing.share",
          "flatPath": "books/v1/familysharing/share"
        }
      }
    },
    "layers": {
      "methods": {
        "get": {
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "description": "Gets the layer summary for a volume.",
          "response": {
            "$ref": "Layersummary"
          },
          "id": "books.layers.get",
          "parameters": {
            "summaryId": {
              "location": "path",
              "description": "The ID for the layer to get the summary for.",
              "required": true,
              "type": "string"
            },
            "contentVersion": {
              "location": "query",
              "type": "string",
              "description": "The content version for the requested volume."
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "volumeId": {
              "type": "string",
              "description": "The volume to retrieve layers for.",
              "location": "path",
              "required": true
            }
          }
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "List the layer summaries for a volume.",
          "parameterOrder": [
            "volumeId"
          ],
          "id": "books.layers.list",
          "parameters": {
            "maxResults": {
              "location": "query",
              "description": "Maximum number of results to return",
              "type": "integer",
              "format": "uint32"
            },
            "contentVersion": {
              "description": "The content version for the requested volume.",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string",
              "required": true
            },
            "pageToken": {
              "description": "The value of the nextToken from the previous page.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "response": {
            "$ref": "Layersummaries"
          },
          "flatPath": "books/v1/volumes/{volumeId}/layersummary"
        }
      },
      "resources": {
        "annotationData": {
          "methods": {
            "get": {
              "parameters": {
                "scale": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The requested scale for the image."
                },
                "annotationDataId": {
                  "description": "The ID of the annotation data to retrieve.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "allowWebDefinitions": {
                  "description": "For the dictionary layer. Whether or not to allow web definitions.",
                  "location": "query",
                  "type": "boolean"
                },
                "volumeId": {
                  "required": true,
                  "type": "string",
                  "description": "The volume to retrieve annotations for.",
                  "location": "path"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "w": {
                  "type": "integer",
                  "description": "The requested pixel width for any images. If width is provided height must\nalso be provided.",
                  "location": "query",
                  "format": "int32"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "layerId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The ID for the layer to get the annotations."
                },
                "contentVersion": {
                  "location": "query",
                  "description": "The content version for the volume you are trying to retrieve.",
                  "type": "string"
                },
                "h": {
                  "location": "query",
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must\nalso be provided.",
                  "type": "integer"
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Gets the annotation data.",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "httpMethod": "GET",
              "id": "books.layers.annotationData.get",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}"
            },
            "list": {
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "response": {
                "$ref": "Annotationsdata"
              },
              "parameters": {
                "h": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must\nalso be provided."
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "description": "The volume to retrieve annotation data for.",
                  "required": true
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "maxResults": {
                  "type": "integer",
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "location": "query"
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query",
                  "type": "string"
                },
                "w": {
                  "description": "The requested pixel width for any images. If width is provided height must\nalso be provided.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "locale": {
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "type": "string"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive).",
                  "location": "query",
                  "type": "string"
                },
                "updatedMax": {
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive).",
                  "type": "string",
                  "location": "query"
                },
                "layerId": {
                  "required": true,
                  "description": "The ID for the layer to get the annotation data.",
                  "location": "path",
                  "type": "string"
                },
                "annotationDataId": {
                  "location": "query",
                  "type": "string",
                  "repeated": true,
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this\nis set."
                },
                "scale": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The requested scale for the image.",
                  "location": "query"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "type": "string",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.annotationData.list",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "description": "Gets the annotation data for a volume and layer."
            }
          }
        },
        "volumeAnnotations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "response": {
                "$ref": "Volumeannotation"
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "parameters": {
                "annotationId": {
                  "type": "string",
                  "description": "The ID of the volume annotation to retrieve.",
                  "location": "path",
                  "required": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "layerId": {
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "description": "The volume to retrieve annotations for.",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Gets the volume annotation.",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "id": "books.layers.volumeAnnotations.get"
            },
            "list": {
              "id": "books.layers.volumeAnnotations.list",
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "startPosition": {
                  "type": "string",
                  "location": "query",
                  "description": "The start position to start retrieving data from."
                },
                "endOffset": {
                  "type": "string",
                  "description": "The end offset to end retrieving data from.",
                  "location": "query"
                },
                "locale": {
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "type": "string"
                },
                "volumeAnnotationsVersion": {
                  "description": "The version of the volume annotations that you are requesting.",
                  "location": "query",
                  "type": "string"
                },
                "updatedMax": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive)."
                },
                "layerId": {
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                },
                "endPosition": {
                  "description": "The end position to end retrieving data from.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "The content version for the requested volume.",
                  "location": "query"
                },
                "startOffset": {
                  "description": "The start offset to start retrieving data from.",
                  "location": "query",
                  "type": "string"
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return",
                  "format": "uint32",
                  "type": "integer"
                },
                "showDeleted": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false."
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive).",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Gets the volume annotations for a volume and layer.",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "response": {
                "$ref": "Volumeannotations"
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}"
            }
          }
        }
      }
    },
    "cloudloading": {
      "methods": {
        "addBook": {
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "id": "books.cloudloading.addBook",
          "httpMethod": "POST",
          "parameters": {
            "upload_client_token": {
              "location": "query",
              "type": "string",
              "description": "Scotty upload token."
            },
            "name": {
              "type": "string",
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "location": "query"
            },
            "drive_document_id": {
              "type": "string",
              "description": "A drive document id. The upload_client_token must not be set.",
              "location": "query"
            },
            "mime_type": {
              "type": "string",
              "location": "query",
              "description": "The document MIME type. It can be set only if the drive_document_id is set."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "flatPath": "books/v1/cloudloading/addBook",
          "description": "Add a user-upload volume and triggers processing.",
          "path": "books/v1/cloudloading/addBook"
        },
        "deleteBook": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Empty"
          },
          "description": "Remove the book and its contents",
          "flatPath": "books/v1/cloudloading/deleteBook",
          "id": "books.cloudloading.deleteBook",
          "httpMethod": "POST",
          "path": "books/v1/cloudloading/deleteBook",
          "parameterOrder": [],
          "parameters": {
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The id of the book to be removed."
            }
          }
        },
        "updateBook": {
          "httpMethod": "POST",
          "flatPath": "books/v1/cloudloading/updateBook",
          "path": "books/v1/cloudloading/updateBook",
          "id": "books.cloudloading.updateBook",
          "description": "Updates a user-upload volume.",
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "parameterOrder": [],
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "BooksCloudloadingResource"
          }
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "path": "books/v1/dictionary/listOfflineMetadata",
          "description": "Returns a list of offline dictionary metadata available",
          "parameterOrder": [],
          "parameters": {
            "cpksver": {
              "description": "The device/version ID from which to request the data.",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Metadata"
          },
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.dictionary.listOfflineMetadata"
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Discoveryclusters"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "maxAllowedMaturityRating": {
              "type": "string",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
              "location": "query",
              "type": "string"
            }
          },
          "id": "books.personalizedstream.get",
          "description": "Returns a stream of personalized book clusters",
          "path": "books/v1/personalizedstream/get",
          "flatPath": "books/v1/personalizedstream/get",
          "httpMethod": "GET",
          "parameterOrder": []
        }
      }
    },
    "volumes": {
      "resources": {
        "useruploaded": {
          "methods": {
            "list": {
              "description": "Return a list of books uploaded by the current user.",
              "parameterOrder": [],
              "id": "books.volumes.useruploaded.list",
              "path": "books/v1/volumes/useruploaded",
              "parameters": {
                "startIndex": {
                  "format": "uint32",
                  "location": "query",
                  "type": "integer",
                  "description": "Index of the first result to return (starts at 0)"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string"
                },
                "volumeId": {
                  "repeated": true,
                  "description": "The ids of the volumes to be returned. If not specified all that match the\nprocessingState are returned.",
                  "location": "query",
                  "type": "string"
                },
                "processingState": {
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "type": "string",
                  "location": "query",
                  "repeated": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "maxResults": {
                  "description": "Maximum number of results to return.",
                  "location": "query",
                  "format": "uint32",
                  "type": "integer"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "Volumes"
              },
              "flatPath": "books/v1/volumes/useruploaded",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        },
        "associated": {
          "methods": {
            "list": {
              "description": "Return a list of associated books.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "description": "ID of the source volume.",
                  "required": true,
                  "location": "path"
                },
                "maxAllowedMaturityRating": {
                  "location": "query",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
                  "type": "string"
                },
                "association": {
                  "location": "query",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ],
                  "description": "Association type.",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "path": "books/v1/volumes/{volumeId}/associated",
              "id": "books.volumes.associated.list",
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [
                "volumeId"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "httpMethod": "GET"
            }
          }
        },
        "recommended": {
          "methods": {
            "rate": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "parameterOrder": [],
              "description": "Rate a recommended book for the current user.",
              "id": "books.volumes.recommended.rate",
              "httpMethod": "POST",
              "parameters": {
                "rating": {
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "description": "Rating to be given to the volume.",
                  "type": "string",
                  "location": "query"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "description": "ID of the source volume.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "books/v1/volumes/recommended/rate",
              "flatPath": "books/v1/volumes/recommended/rate"
            },
            "list": {
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string"
                },
                "maxAllowedMaturityRating": {
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/recommended",
              "httpMethod": "GET",
              "description": "Return a list of recommended books for the current user.",
              "response": {
                "$ref": "Volumes"
              },
              "id": "books.volumes.recommended.list",
              "path": "books/v1/volumes/recommended",
              "parameterOrder": []
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/volumes/mybooks",
              "flatPath": "books/v1/volumes/mybooks",
              "parameters": {
                "country": {
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for\ngenerating recommendations."
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return.",
                  "format": "uint32",
                  "type": "integer"
                },
                "acquireMethod": {
                  "repeated": true,
                  "description": "How the book was acquired",
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "type": "string",
                  "location": "query"
                },
                "processingState": {
                  "type": "string",
                  "description": "The processing state of the user uploaded volumes to be returned.\nApplicable only if the UPLOADED is specified in the acquireMethod.",
                  "location": "query",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "repeated": true
                },
                "startIndex": {
                  "location": "query",
                  "type": "integer",
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)"
                }
              },
              "description": "Return a list of books in My Library.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.mybooks.list",
              "parameterOrder": [],
              "httpMethod": "GET"
            }
          }
        }
      },
      "methods": {
        "get": {
          "path": "books/v1/volumes/{volumeId}",
          "flatPath": "books/v1/volumes/{volumeId}",
          "id": "books.volumes.get",
          "parameters": {
            "partner": {
              "location": "query",
              "type": "string",
              "description": "Brand results for partner ID."
            },
            "volumeId": {
              "required": true,
              "type": "string",
              "description": "ID of volume to retrieve.",
              "location": "path"
            },
            "source": {
              "description": "string  to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "projection": {
              "description": "Restrict information returned to a set of selected fields.",
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string"
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "user_library_consistent_read": {
              "location": "query",
              "type": "boolean"
            },
            "country": {
              "type": "string",
              "description": "ISO-3166-1 code to override the IP-based location.",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Volume"
          },
          "parameterOrder": [
            "volumeId"
          ],
          "description": "Gets volume information for a single volume."
        },
        "list": {
          "flatPath": "books/v1/volumes",
          "description": "Performs a book search.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes",
          "parameters": {
            "libraryRestrict": {
              "location": "query",
              "type": "string",
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ],
              "description": "Restrict search to this user's library."
            },
            "filter": {
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "description": "Filter search results.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "projection": {
              "location": "query",
              "description": "Restrict information returned to a set of selected fields.",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string"
            },
            "q": {
              "description": "Full-text search query string.",
              "location": "query",
              "type": "string"
            },
            "showPreorders": {
              "type": "boolean",
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "location": "query"
            },
            "maxResults": {
              "format": "uint32",
              "description": "Maximum number of results to return.",
              "location": "query",
              "type": "integer"
            },
            "langRestrict": {
              "location": "query",
              "description": "Restrict results to books with this language code.",
              "type": "string"
            },
            "partner": {
              "type": "string",
              "description": "Restrict and brand results for partner ID.",
              "location": "query"
            },
            "maxAllowedMaturityRating": {
              "location": "query",
              "type": "string",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "printType": {
              "description": "Restrict to books or magazines.",
              "location": "query",
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "type": "string"
            },
            "download": {
              "type": "string",
              "location": "query",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "description": "Restrict to volumes by download availability."
            },
            "orderBy": {
              "location": "query",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "description": "Sort search results.",
              "type": "string"
            },
            "startIndex": {
              "format": "uint32",
              "description": "Index of the first result to return (starts at 0)",
              "type": "integer",
              "location": "query"
            }
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "response": {
            "$ref": "Volumes"
          },
          "id": "books.volumes.list"
        }
      }
    },
    "mylibrary": {
      "resources": {
        "annotations": {
          "methods": {
            "delete": {
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "annotationId"
              ],
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "response": {
                "$ref": "Empty"
              },
              "description": "Deletes an annotation.",
              "parameters": {
                "annotationId": {
                  "required": true,
                  "location": "path",
                  "description": "The ID for the annotation to delete.",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "id": "books.mylibrary.annotations.delete",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "summary": {
              "parameters": {
                "layerIds": {
                  "type": "string",
                  "location": "query",
                  "description": "Array of layer IDs to get the summary for.",
                  "repeated": true
                },
                "volumeId": {
                  "type": "string",
                  "description": "Volume id to get the summary for.",
                  "location": "query"
                }
              },
              "httpMethod": "POST",
              "id": "books.mylibrary.annotations.summary",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "path": "books/v1/mylibrary/annotations/summary",
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Gets the summary of specified layers.",
              "parameterOrder": []
            },
            "insert": {
              "parameters": {
                "annotationId": {
                  "description": "The ID for the annotation to insert.",
                  "type": "string",
                  "location": "query"
                },
                "country": {
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "showOnlySummaryInResponse": {
                  "description": "Requests that only the summary of the specified layer be provided in the\nresponse.",
                  "type": "boolean",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "Annotation"
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [],
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/annotations",
              "description": "Inserts a new annotation.",
              "request": {
                "$ref": "Annotation"
              },
              "id": "books.mylibrary.annotations.insert"
            },
            "list": {
              "response": {
                "$ref": "Annotations"
              },
              "id": "books.mylibrary.annotations.list",
              "path": "books/v1/mylibrary/annotations",
              "parameterOrder": [],
              "parameters": {
                "showDeleted": {
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false.",
                  "location": "query"
                },
                "volumeId": {
                  "description": "The volume to restrict annotations to.",
                  "type": "string",
                  "location": "query"
                },
                "maxResults": {
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "format": "uint32",
                  "location": "query"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "updatedMax": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive).",
                  "location": "query"
                },
                "layerId": {
                  "description": "The layer ID to limit annotation by.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The value of the nextToken from the previous page."
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The content version for the requested volume."
                },
                "layerIds": {
                  "location": "query",
                  "repeated": true,
                  "type": "string",
                  "description": "The layer ID(s) to limit annotation by."
                }
              },
              "httpMethod": "GET",
              "description": "Retrieves a list of annotations, possibly filtered.",
              "flatPath": "books/v1/mylibrary/annotations",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "update": {
              "httpMethod": "PUT",
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "response": {
                "$ref": "Annotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "request": {
                "$ref": "Annotation"
              },
              "parameters": {
                "annotationId": {
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the annotation to update.",
                  "required": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "description": "Updates an existing annotation.",
              "parameterOrder": [
                "annotationId"
              ],
              "id": "books.mylibrary.annotations.update",
              "path": "books/v1/mylibrary/annotations/{annotationId}"
            }
          }
        },
        "readingpositions": {
          "methods": {
            "get": {
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "parameterOrder": [
                "volumeId"
              ],
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "id": "books.mylibrary.readingpositions.get",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "ReadingPosition"
              },
              "parameters": {
                "volumeId": {
                  "location": "path",
                  "required": true,
                  "description": "ID of volume for which to retrieve a reading position.",
                  "type": "string"
                },
                "contentVersion": {
                  "description": "Volume content version for which this reading position is requested.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "description": "Retrieves my reading position information for a volume."
            },
            "setPosition": {
              "httpMethod": "POST",
              "description": "Sets my reading position information for a volume.",
              "id": "books.mylibrary.readingpositions.setPosition",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameters": {
                "action": {
                  "description": "Action that caused this reading position to be set.",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "contentVersion": {
                  "location": "query",
                  "description": "Volume content version for which this reading position applies.",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of volume for which to update the reading position.",
                  "required": true
                },
                "deviceCookie": {
                  "type": "string",
                  "description": "Random persistent device cookie optional on set position.",
                  "location": "query"
                },
                "timestamp": {
                  "type": "string",
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "location": "query"
                },
                "position": {
                  "type": "string",
                  "description": "Position string for the new volume reading position.",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "volumeId"
              ],
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "response": {
                "$ref": "Empty"
              }
            }
          }
        },
        "bookshelves": {
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "httpMethod": "GET",
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "parameterOrder": [
                    "shelf"
                  ],
                  "parameters": {
                    "source": {
                      "description": "String to identify the originator of this request.",
                      "location": "query",
                      "type": "string"
                    },
                    "startIndex": {
                      "location": "query",
                      "description": "Index of the first element to return (starts at 0)",
                      "format": "uint32",
                      "type": "integer"
                    },
                    "q": {
                      "location": "query",
                      "description": "Full-text search query string in this bookshelf.",
                      "type": "string"
                    },
                    "projection": {
                      "location": "query",
                      "type": "string",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "description": "Restrict information returned to a set of selected fields."
                    },
                    "shelf": {
                      "description": "The bookshelf ID or name retrieve volumes for.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "maxResults": {
                      "description": "Maximum number of results to return",
                      "location": "query",
                      "type": "integer",
                      "format": "uint32"
                    },
                    "country": {
                      "location": "query",
                      "description": "ISO-3166-1 code to override the IP-based location.",
                      "type": "string"
                    },
                    "showPreorders": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Set to true to show pre-ordered books. Defaults to false."
                    }
                  },
                  "response": {
                    "$ref": "Volumes"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ]
                }
              }
            }
          },
          "methods": {
            "list": {
              "id": "books.mylibrary.bookshelves.list",
              "httpMethod": "GET",
              "parameterOrder": [],
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "path": "books/v1/mylibrary/bookshelves",
              "response": {
                "$ref": "Bookshelves"
              },
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves"
            },
            "moveVolume": {
              "description": "Moves a volume within a bookshelf.",
              "parameterOrder": [
                "shelf"
              ],
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "location": "query",
                  "description": "ID of volume to move.",
                  "type": "string"
                },
                "volumePosition": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Position on shelf to move the item (0 puts the item before the current\nfirst item, 1 puts it between the first and the second and so on.)",
                  "location": "query"
                },
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf with the volume.",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.bookshelves.moveVolume",
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume"
            },
            "clearVolumes": {
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "ID of bookshelf from which to remove a volume."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "description": "Clears all volumes from a bookshelf.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "shelf"
              ],
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "httpMethod": "POST"
            },
            "removeVolume": {
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "description": "ID of volume to remove.",
                  "type": "string"
                },
                "reason": {
                  "location": "query",
                  "description": "The reason for which the book is removed from the library.",
                  "type": "string",
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ]
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "shelf": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "ID of bookshelf from which to remove a volume."
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "shelf"
              ],
              "description": "Removes a volume from a bookshelf.",
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "id": "books.mylibrary.bookshelves.removeVolume"
            },
            "get": {
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated\nuser.",
              "response": {
                "$ref": "Bookshelf"
              },
              "httpMethod": "GET",
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "id": "books.mylibrary.bookshelves.get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "parameterOrder": [
                "shelf"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "shelf": {
                  "type": "string",
                  "required": true,
                  "description": "ID of bookshelf to retrieve.",
                  "location": "path"
                }
              }
            },
            "addVolume": {
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "POST",
              "description": "Adds a volume to a bookshelf.",
              "parameterOrder": [
                "shelf"
              ],
              "id": "books.mylibrary.bookshelves.addVolume",
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "reason": {
                  "description": "The reason for which the book is added to the library.",
                  "type": "string",
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "location": "query"
                },
                "volumeId": {
                  "description": "ID of volume to add.",
                  "type": "string",
                  "location": "query"
                },
                "shelf": {
                  "type": "string",
                  "required": true,
                  "description": "ID of bookshelf to which to add a volume.",
                  "location": "path"
                }
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume"
            }
          }
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategoryVolumes": {
          "httpMethod": "GET",
          "parameterOrder": [],
          "path": "books/v1/onboarding/listCategoryVolumes",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The value of the nextToken from the previous page."
            },
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "type": "string",
              "location": "query",
              "description": "The maximum allowed maturity rating of returned volumes. Books with a\nhigher maturity rating are filtered out."
            },
            "categoryId": {
              "repeated": true,
              "type": "string",
              "description": "List of category ids requested.",
              "location": "query"
            },
            "pageSize": {
              "location": "query",
              "type": "integer",
              "format": "uint32",
              "description": "Number of maximum results per page to be included in the response."
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "location": "query"
            }
          },
          "id": "books.onboarding.listCategoryVolumes",
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "response": {
            "$ref": "Volume2"
          },
          "description": "List available volumes under categories for onboarding experience."
        },
        "listCategories": {
          "id": "books.onboarding.listCategories",
          "description": "List categories for onboarding experience.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "parameterOrder": [],
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "books/v1/onboarding/listCategories",
          "path": "books/v1/onboarding/listCategories",
          "response": {
            "$ref": "Category"
          }
        }
      }
    },
    "bookshelves": {
      "methods": {
        "get": {
          "parameters": {
            "userId": {
              "location": "path",
              "required": true,
              "description": "ID of user for whom to retrieve bookshelves.",
              "type": "string"
            },
            "shelf": {
              "required": true,
              "description": "ID of bookshelf to retrieve.",
              "type": "string",
              "location": "path"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "id": "books.bookshelves.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "response": {
            "$ref": "Bookshelf"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "userId",
            "shelf"
          ]
        },
        "list": {
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "path": "books/v1/users/{userId}/bookshelves",
          "id": "books.bookshelves.list",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "response": {
            "$ref": "Bookshelves"
          },
          "parameterOrder": [
            "userId"
          ],
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "userId": {
              "type": "string",
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves.",
              "required": true
            }
          }
        }
      },
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "parameters": {
                "maxResults": {
                  "type": "integer",
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "showPreorders": {
                  "type": "boolean",
                  "description": "Set to true to show pre-ordered books. Defaults to false.",
                  "location": "query"
                },
                "userId": {
                  "required": true,
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "location": "path",
                  "type": "string"
                },
                "startIndex": {
                  "type": "integer",
                  "description": "Index of the first element to return (starts at 0)",
                  "location": "query",
                  "format": "uint32"
                },
                "shelf": {
                  "type": "string",
                  "description": "ID of bookshelf to retrieve volumes.",
                  "location": "path",
                  "required": true
                }
              },
              "id": "books.bookshelves.volumes.list",
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "httpMethod": "GET",
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes"
            }
          }
        }
      }
    },
    "myconfig": {
      "methods": {
        "syncVolumeLicenses": {
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "parameters": {
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "nonce": {
              "location": "query",
              "type": "string",
              "description": "The client nonce value."
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "cpksver": {
              "location": "query",
              "type": "string",
              "description": "The device/version ID from which to release the restriction."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "features": {
              "repeated": true,
              "description": "List of features supported by the client, i.e., 'RENTALS'",
              "location": "query",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "type": "string"
            },
            "showPreorders": {
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "volumeIds": {
              "location": "query",
              "description": "The volume(s) to request download restrictions for.",
              "type": "string",
              "repeated": true
            }
          },
          "id": "books.myconfig.syncVolumeLicenses",
          "parameterOrder": [],
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "httpMethod": "POST",
          "response": {
            "$ref": "Volumes"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Request downloaded content access for specified volumes on the My eBooks\nshelf."
        },
        "requestAccess": {
          "response": {
            "$ref": "RequestAccessData"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "parameters": {
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "cpksver": {
              "description": "The device/version ID from which to request the restrictions.",
              "location": "query",
              "type": "string"
            },
            "nonce": {
              "type": "string",
              "location": "query",
              "description": "The client nonce value."
            },
            "volumeId": {
              "description": "The volume to request concurrent/download restrictions for.",
              "location": "query",
              "type": "string"
            },
            "licenseTypes": {
              "type": "string",
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "description": "The type of access license to request. If not specified, the default is\nBOTH.",
              "location": "query"
            }
          },
          "path": "books/v1/myconfig/requestAccess",
          "description": "Request concurrent and download access restrictions.",
          "id": "books.myconfig.requestAccess",
          "httpMethod": "POST",
          "flatPath": "books/v1/myconfig/requestAccess"
        },
        "getUserSettings": {
          "id": "books.myconfig.getUserSettings",
          "parameters": {
            "country": {
              "description": "Unused. Added only to workaround TEX mandatory request template requirement",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Usersettings"
          },
          "parameterOrder": [],
          "path": "books/v1/myconfig/getUserSettings",
          "description": "Gets the current settings for the user.",
          "httpMethod": "GET",
          "flatPath": "books/v1/myconfig/getUserSettings"
        },
        "releaseDownloadAccess": {
          "description": "Release downloaded content access restriction.",
          "parameterOrder": [],
          "httpMethod": "POST",
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.myconfig.releaseDownloadAccess",
          "response": {
            "$ref": "DownloadAccesses"
          },
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "parameters": {
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "volumeIds": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "The volume(s) to release restrictions for."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "cpksver": {
              "description": "The device/version ID from which to release the restriction.",
              "location": "query",
              "type": "string"
            }
          }
        },
        "updateUserSettings": {
          "path": "books/v1/myconfig/updateUserSettings",
          "parameterOrder": [],
          "parameters": {},
          "request": {
            "$ref": "Usersettings"
          },
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "description": "Sets the settings for the user. If a sub-object is specified, it will\noverwrite the existing sub-object stored in the server. Unspecified\nsub-objects will retain the existing value.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Usersettings"
          },
          "id": "books.myconfig.updateUserSettings"
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "id": "books.notification.get",
          "flatPath": "books/v1/notification/get",
          "response": {
            "$ref": "Notification"
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating notification title and body.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "notification_id": {
              "location": "query",
              "type": "string",
              "description": "String to identify the notification."
            }
          },
          "description": "Returns notification details for a given notification id.",
          "path": "books/v1/notification/get"
        }
      }
    }
  },
  "title": "Books API"
}
