/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.products_v1.model;

/**
 * Carrier-based shipping configuration. Allows for setting shipping speed or shipping cost based on
 * a carrier's provided info.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CarrierShipping extends com.google.api.client.json.GenericJson {

  /**
   * Selected carrier to calculate the shipping price from. Select a carrier from the [available
   * carriers list](https://support.google.com/merchants/answer/15449142#Supported), for example
   * `AUSTRALIA_POST_REGULAR`. Price will be calculated by this selected carrier, the location
   * expressed in originPostalCode, along with the user location to determine the accurate shipping
   * price. Carrier is represented by a carrier service name or a carrier service ID. Cannot be set
   * together with flatPrice.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String carrierPrice;

  /**
   * A flat adjustment on the carrier price. Can be either positive or negative. Cannot be zero.
   * Requires `carrier_price` to be present. Cannot be set together with flatPrice and
   * carrierPricePercentageAdjustment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Price carrierPriceFlatAdjustment;

  /**
   * A percentual adjustment on the carrier price. Can be either positive or negative. Cannot be
   * zero. Requires `carrier_price` to be present. Cannot be set together with flatPrice and
   * carrierPriceFlatAdjustment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double carrierPricePercentageAdjustment;

  /**
   * Selected carrier to calculate the shipping speed from. Select a carrier from the [available
   * carriers list](https://support.google.com/merchants/answer/15449142#Supported), for example
   * `AUSTRALIA_POST_REGULAR`. Speed will be calculated by this selected carrier, the location
   * expressed in originPostalCode, along with the user location to determine the accurate delivery
   * speed. Carrier is represented by a carrier service name or a carrier service ID. Cannot be set
   * together with fixedMaxTransitTime or fixedMinTransitTime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String carrierTransitTime;

  /**
   * The [CLDR territory code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) of
   * the country to which an item will ship.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String country;

  /**
   * Maximum transit time (inclusive) between when the order has shipped and when it is delivered in
   * business days. 0 means that the order is delivered on the same day as it ships. Needs to be
   * provided together with maxHandlingTime. Cannot be set if carrierTransitTime is present.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long fixedMaxTransitTime;

  /**
   * Minimum transit time (inclusive) between when the order has shipped and when it is delivered in
   * business days. 0 means that the order is delivered on the same day as it ships.
   * fixedMinTransitTime can only be set if fixedMaxTransitTime is set. Cannot be set if
   * carrierTransitTime is present.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long fixedMinTransitTime;

  /**
   * Fixed shipping price, represented as a number with currency. Cannot be set together with
   * carrierPrice or its adjustments (carrierPriceFlatAdjustment, carrierPricePercentageAdjustment).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Price flatPrice;

  /**
   * Maximum handling time (inclusive) between when the order is received and shipped in business
   * days. 0 means that the order is shipped on the same day as it is received if it happens before
   * the cut-off time. Both maxHandlingTime and fixedMaxTransitTime or carrierTransitTime are
   * required if providing shipping speeds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long maxHandlingTime;

  /**
   * Minimum handling time (inclusive) between when the order is received and shipped in business
   * days. 0 means that the order is shipped on the same day as it is received if it happens before
   * the cut-off time. minHandlingTime can only be set if maxHandlingTime is also set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long minHandlingTime;

  /**
   * The source location postal code from which this offer ships. Represented only by a full-length
   * postal code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String originPostalCode;

  /**
   * The postal code range that the shipping rate applies to, represented by a postal code (eg.
   * `94043`), a postal code prefix followed by a * wildcard (eg. `94*`), a range between two postal
   * codes (eg. `94043-98033`) or two postal code prefixes of equal length (eg. `94*-98*`).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String postalCode;

  /**
   * The geographic region to which a shipping rate applies. See
   * [region](https://support.google.com/merchants/answer/6324484) for more information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String region;

  /**
   * Selected carrier to calculate the shipping price from. Select a carrier from the [available
   * carriers list](https://support.google.com/merchants/answer/15449142#Supported), for example
   * `AUSTRALIA_POST_REGULAR`. Price will be calculated by this selected carrier, the location
   * expressed in originPostalCode, along with the user location to determine the accurate shipping
   * price. Carrier is represented by a carrier service name or a carrier service ID. Cannot be set
   * together with flatPrice.
   * @return value or {@code null} for none
   */
  public java.lang.String getCarrierPrice() {
    return carrierPrice;
  }

  /**
   * Selected carrier to calculate the shipping price from. Select a carrier from the [available
   * carriers list](https://support.google.com/merchants/answer/15449142#Supported), for example
   * `AUSTRALIA_POST_REGULAR`. Price will be calculated by this selected carrier, the location
   * expressed in originPostalCode, along with the user location to determine the accurate shipping
   * price. Carrier is represented by a carrier service name or a carrier service ID. Cannot be set
   * together with flatPrice.
   * @param carrierPrice carrierPrice or {@code null} for none
   */
  public CarrierShipping setCarrierPrice(java.lang.String carrierPrice) {
    this.carrierPrice = carrierPrice;
    return this;
  }

  /**
   * A flat adjustment on the carrier price. Can be either positive or negative. Cannot be zero.
   * Requires `carrier_price` to be present. Cannot be set together with flatPrice and
   * carrierPricePercentageAdjustment.
   * @return value or {@code null} for none
   */
  public Price getCarrierPriceFlatAdjustment() {
    return carrierPriceFlatAdjustment;
  }

  /**
   * A flat adjustment on the carrier price. Can be either positive or negative. Cannot be zero.
   * Requires `carrier_price` to be present. Cannot be set together with flatPrice and
   * carrierPricePercentageAdjustment.
   * @param carrierPriceFlatAdjustment carrierPriceFlatAdjustment or {@code null} for none
   */
  public CarrierShipping setCarrierPriceFlatAdjustment(Price carrierPriceFlatAdjustment) {
    this.carrierPriceFlatAdjustment = carrierPriceFlatAdjustment;
    return this;
  }

  /**
   * A percentual adjustment on the carrier price. Can be either positive or negative. Cannot be
   * zero. Requires `carrier_price` to be present. Cannot be set together with flatPrice and
   * carrierPriceFlatAdjustment.
   * @return value or {@code null} for none
   */
  public java.lang.Double getCarrierPricePercentageAdjustment() {
    return carrierPricePercentageAdjustment;
  }

  /**
   * A percentual adjustment on the carrier price. Can be either positive or negative. Cannot be
   * zero. Requires `carrier_price` to be present. Cannot be set together with flatPrice and
   * carrierPriceFlatAdjustment.
   * @param carrierPricePercentageAdjustment carrierPricePercentageAdjustment or {@code null} for none
   */
  public CarrierShipping setCarrierPricePercentageAdjustment(java.lang.Double carrierPricePercentageAdjustment) {
    this.carrierPricePercentageAdjustment = carrierPricePercentageAdjustment;
    return this;
  }

  /**
   * Selected carrier to calculate the shipping speed from. Select a carrier from the [available
   * carriers list](https://support.google.com/merchants/answer/15449142#Supported), for example
   * `AUSTRALIA_POST_REGULAR`. Speed will be calculated by this selected carrier, the location
   * expressed in originPostalCode, along with the user location to determine the accurate delivery
   * speed. Carrier is represented by a carrier service name or a carrier service ID. Cannot be set
   * together with fixedMaxTransitTime or fixedMinTransitTime.
   * @return value or {@code null} for none
   */
  public java.lang.String getCarrierTransitTime() {
    return carrierTransitTime;
  }

  /**
   * Selected carrier to calculate the shipping speed from. Select a carrier from the [available
   * carriers list](https://support.google.com/merchants/answer/15449142#Supported), for example
   * `AUSTRALIA_POST_REGULAR`. Speed will be calculated by this selected carrier, the location
   * expressed in originPostalCode, along with the user location to determine the accurate delivery
   * speed. Carrier is represented by a carrier service name or a carrier service ID. Cannot be set
   * together with fixedMaxTransitTime or fixedMinTransitTime.
   * @param carrierTransitTime carrierTransitTime or {@code null} for none
   */
  public CarrierShipping setCarrierTransitTime(java.lang.String carrierTransitTime) {
    this.carrierTransitTime = carrierTransitTime;
    return this;
  }

  /**
   * The [CLDR territory code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) of
   * the country to which an item will ship.
   * @return value or {@code null} for none
   */
  public java.lang.String getCountry() {
    return country;
  }

  /**
   * The [CLDR territory code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) of
   * the country to which an item will ship.
   * @param country country or {@code null} for none
   */
  public CarrierShipping setCountry(java.lang.String country) {
    this.country = country;
    return this;
  }

  /**
   * Maximum transit time (inclusive) between when the order has shipped and when it is delivered in
   * business days. 0 means that the order is delivered on the same day as it ships. Needs to be
   * provided together with maxHandlingTime. Cannot be set if carrierTransitTime is present.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFixedMaxTransitTime() {
    return fixedMaxTransitTime;
  }

  /**
   * Maximum transit time (inclusive) between when the order has shipped and when it is delivered in
   * business days. 0 means that the order is delivered on the same day as it ships. Needs to be
   * provided together with maxHandlingTime. Cannot be set if carrierTransitTime is present.
   * @param fixedMaxTransitTime fixedMaxTransitTime or {@code null} for none
   */
  public CarrierShipping setFixedMaxTransitTime(java.lang.Long fixedMaxTransitTime) {
    this.fixedMaxTransitTime = fixedMaxTransitTime;
    return this;
  }

  /**
   * Minimum transit time (inclusive) between when the order has shipped and when it is delivered in
   * business days. 0 means that the order is delivered on the same day as it ships.
   * fixedMinTransitTime can only be set if fixedMaxTransitTime is set. Cannot be set if
   * carrierTransitTime is present.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFixedMinTransitTime() {
    return fixedMinTransitTime;
  }

  /**
   * Minimum transit time (inclusive) between when the order has shipped and when it is delivered in
   * business days. 0 means that the order is delivered on the same day as it ships.
   * fixedMinTransitTime can only be set if fixedMaxTransitTime is set. Cannot be set if
   * carrierTransitTime is present.
   * @param fixedMinTransitTime fixedMinTransitTime or {@code null} for none
   */
  public CarrierShipping setFixedMinTransitTime(java.lang.Long fixedMinTransitTime) {
    this.fixedMinTransitTime = fixedMinTransitTime;
    return this;
  }

  /**
   * Fixed shipping price, represented as a number with currency. Cannot be set together with
   * carrierPrice or its adjustments (carrierPriceFlatAdjustment, carrierPricePercentageAdjustment).
   * @return value or {@code null} for none
   */
  public Price getFlatPrice() {
    return flatPrice;
  }

  /**
   * Fixed shipping price, represented as a number with currency. Cannot be set together with
   * carrierPrice or its adjustments (carrierPriceFlatAdjustment, carrierPricePercentageAdjustment).
   * @param flatPrice flatPrice or {@code null} for none
   */
  public CarrierShipping setFlatPrice(Price flatPrice) {
    this.flatPrice = flatPrice;
    return this;
  }

  /**
   * Maximum handling time (inclusive) between when the order is received and shipped in business
   * days. 0 means that the order is shipped on the same day as it is received if it happens before
   * the cut-off time. Both maxHandlingTime and fixedMaxTransitTime or carrierTransitTime are
   * required if providing shipping speeds.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMaxHandlingTime() {
    return maxHandlingTime;
  }

  /**
   * Maximum handling time (inclusive) between when the order is received and shipped in business
   * days. 0 means that the order is shipped on the same day as it is received if it happens before
   * the cut-off time. Both maxHandlingTime and fixedMaxTransitTime or carrierTransitTime are
   * required if providing shipping speeds.
   * @param maxHandlingTime maxHandlingTime or {@code null} for none
   */
  public CarrierShipping setMaxHandlingTime(java.lang.Long maxHandlingTime) {
    this.maxHandlingTime = maxHandlingTime;
    return this;
  }

  /**
   * Minimum handling time (inclusive) between when the order is received and shipped in business
   * days. 0 means that the order is shipped on the same day as it is received if it happens before
   * the cut-off time. minHandlingTime can only be set if maxHandlingTime is also set.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMinHandlingTime() {
    return minHandlingTime;
  }

  /**
   * Minimum handling time (inclusive) between when the order is received and shipped in business
   * days. 0 means that the order is shipped on the same day as it is received if it happens before
   * the cut-off time. minHandlingTime can only be set if maxHandlingTime is also set.
   * @param minHandlingTime minHandlingTime or {@code null} for none
   */
  public CarrierShipping setMinHandlingTime(java.lang.Long minHandlingTime) {
    this.minHandlingTime = minHandlingTime;
    return this;
  }

  /**
   * The source location postal code from which this offer ships. Represented only by a full-length
   * postal code.
   * @return value or {@code null} for none
   */
  public java.lang.String getOriginPostalCode() {
    return originPostalCode;
  }

  /**
   * The source location postal code from which this offer ships. Represented only by a full-length
   * postal code.
   * @param originPostalCode originPostalCode or {@code null} for none
   */
  public CarrierShipping setOriginPostalCode(java.lang.String originPostalCode) {
    this.originPostalCode = originPostalCode;
    return this;
  }

  /**
   * The postal code range that the shipping rate applies to, represented by a postal code (eg.
   * `94043`), a postal code prefix followed by a * wildcard (eg. `94*`), a range between two postal
   * codes (eg. `94043-98033`) or two postal code prefixes of equal length (eg. `94*-98*`).
   * @return value or {@code null} for none
   */
  public java.lang.String getPostalCode() {
    return postalCode;
  }

  /**
   * The postal code range that the shipping rate applies to, represented by a postal code (eg.
   * `94043`), a postal code prefix followed by a * wildcard (eg. `94*`), a range between two postal
   * codes (eg. `94043-98033`) or two postal code prefixes of equal length (eg. `94*-98*`).
   * @param postalCode postalCode or {@code null} for none
   */
  public CarrierShipping setPostalCode(java.lang.String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * The geographic region to which a shipping rate applies. See
   * [region](https://support.google.com/merchants/answer/6324484) for more information.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegion() {
    return region;
  }

  /**
   * The geographic region to which a shipping rate applies. See
   * [region](https://support.google.com/merchants/answer/6324484) for more information.
   * @param region region or {@code null} for none
   */
  public CarrierShipping setRegion(java.lang.String region) {
    this.region = region;
    return this;
  }

  @Override
  public CarrierShipping set(String fieldName, Object value) {
    return (CarrierShipping) super.set(fieldName, value);
  }

  @Override
  public CarrierShipping clone() {
    return (CarrierShipping) super.clone();
  }

}
