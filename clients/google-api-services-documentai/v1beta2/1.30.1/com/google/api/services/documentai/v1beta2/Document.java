/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.documentai.v1beta2;

/**
 * Service definition for Document (v1beta2).
 *
 * <p>
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/document-ai/docs/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DocumentRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Document extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.30.10 of the Cloud Document AI API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://documentai.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Document(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Document(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Document documentai = new Document(...);}
   *   {@code Document.Projects.List request = documentai.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Documents collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Document documentai = new Document(...);}
     *   {@code Document.Documents.List request = documentai.documents().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Documents documents() {
      return new Documents();
    }

    /**
     * The "documents" collection of methods.
     */
    public class Documents {

      /**
       * LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in
       * the [Document] format.
       *
       * Create a request for the method "documents.batchProcess".
       *
       * This request holds the parameters needed by the documentai server.  After setting any optional
       * parameters, call the {@link BatchProcess#execute()} method to invoke the remote operation.
       *
       * @param parent Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`.
       *        If no location is specified, a region will be chosen automatically.
       * @param content the {@link com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest}
       * @return the request
       */
      public BatchProcess batchProcess(java.lang.String parent, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest content) throws java.io.IOException {
        BatchProcess result = new BatchProcess(parent, content);
        initialize(result);
        return result;
      }

      public class BatchProcess extends DocumentRequest<com.google.api.services.documentai.v1beta2.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1beta2/{+parent}/documents:batchProcess";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in
         * the [Document] format.
         *
         * Create a request for the method "documents.batchProcess".
         *
         * This request holds the parameters needed by the the documentai server.  After setting any
         * optional parameters, call the {@link BatchProcess#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchProcess#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`.
       *        If no location is specified, a region will be chosen automatically.
         * @param content the {@link com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest}
         * @since 1.13
         */
        protected BatchProcess(java.lang.String parent, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest content) {
          super(Document.this, "POST", REST_PATH, content, com.google.api.services.documentai.v1beta2.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public BatchProcess set$Xgafv(java.lang.String $Xgafv) {
          return (BatchProcess) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchProcess setAccessToken(java.lang.String accessToken) {
          return (BatchProcess) super.setAccessToken(accessToken);
        }

        @Override
        public BatchProcess setAlt(java.lang.String alt) {
          return (BatchProcess) super.setAlt(alt);
        }

        @Override
        public BatchProcess setCallback(java.lang.String callback) {
          return (BatchProcess) super.setCallback(callback);
        }

        @Override
        public BatchProcess setFields(java.lang.String fields) {
          return (BatchProcess) super.setFields(fields);
        }

        @Override
        public BatchProcess setKey(java.lang.String key) {
          return (BatchProcess) super.setKey(key);
        }

        @Override
        public BatchProcess setOauthToken(java.lang.String oauthToken) {
          return (BatchProcess) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchProcess setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchProcess) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchProcess setQuotaUser(java.lang.String quotaUser) {
          return (BatchProcess) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchProcess setUploadType(java.lang.String uploadType) {
          return (BatchProcess) super.setUploadType(uploadType);
        }

        @Override
        public BatchProcess setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchProcess) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Target project and location to make a call. Format: `projects/{project-id}/locations
         * /{location-id}`. If no location is specified, a region will be chosen automatically.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Target project and location to make a call. Format: `projects/{project-id}/locations/{location-
       id}`. If no location is specified, a region will be chosen automatically.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Target project and location to make a call. Format: `projects/{project-id}/locations
         * /{location-id}`. If no location is specified, a region will be chosen automatically.
         */
        public BatchProcess setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchProcess set(String parameterName, Object value) {
          return (BatchProcess) super.set(parameterName, value);
        }
      }
      /**
       * Processes a single document.
       *
       * Create a request for the method "documents.process".
       *
       * This request holds the parameters needed by the documentai server.  After setting any optional
       * parameters, call the {@link Process#execute()} method to invoke the remote operation.
       *
       * @param parent Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`.
       *        If no location is specified, a region will be chosen automatically. This field is only
       *        populated when used in ProcessDocument method.
       * @param content the {@link com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2ProcessDocumentRequest}
       * @return the request
       */
      public Process process(java.lang.String parent, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2ProcessDocumentRequest content) throws java.io.IOException {
        Process result = new Process(parent, content);
        initialize(result);
        return result;
      }

      public class Process extends DocumentRequest<com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2Document> {

        private static final String REST_PATH = "v1beta2/{+parent}/documents:process";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Processes a single document.
         *
         * Create a request for the method "documents.process".
         *
         * This request holds the parameters needed by the the documentai server.  After setting any
         * optional parameters, call the {@link Process#execute()} method to invoke the remote operation.
         * <p> {@link
         * Process#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`.
       *        If no location is specified, a region will be chosen automatically. This field is only
       *        populated when used in ProcessDocument method.
         * @param content the {@link com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2ProcessDocumentRequest}
         * @since 1.13
         */
        protected Process(java.lang.String parent, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2ProcessDocumentRequest content) {
          super(Document.this, "POST", REST_PATH, content, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2Document.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Process set$Xgafv(java.lang.String $Xgafv) {
          return (Process) super.set$Xgafv($Xgafv);
        }

        @Override
        public Process setAccessToken(java.lang.String accessToken) {
          return (Process) super.setAccessToken(accessToken);
        }

        @Override
        public Process setAlt(java.lang.String alt) {
          return (Process) super.setAlt(alt);
        }

        @Override
        public Process setCallback(java.lang.String callback) {
          return (Process) super.setCallback(callback);
        }

        @Override
        public Process setFields(java.lang.String fields) {
          return (Process) super.setFields(fields);
        }

        @Override
        public Process setKey(java.lang.String key) {
          return (Process) super.setKey(key);
        }

        @Override
        public Process setOauthToken(java.lang.String oauthToken) {
          return (Process) super.setOauthToken(oauthToken);
        }

        @Override
        public Process setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Process) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Process setQuotaUser(java.lang.String quotaUser) {
          return (Process) super.setQuotaUser(quotaUser);
        }

        @Override
        public Process setUploadType(java.lang.String uploadType) {
          return (Process) super.setUploadType(uploadType);
        }

        @Override
        public Process setUploadProtocol(java.lang.String uploadProtocol) {
          return (Process) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Target project and location to make a call. Format: `projects/{project-id}/locations
         * /{location-id}`. If no location is specified, a region will be chosen automatically. This
         * field is only populated when used in ProcessDocument method.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Target project and location to make a call. Format: `projects/{project-id}/locations/{location-
       id}`. If no location is specified, a region will be chosen automatically. This field is only
       populated when used in ProcessDocument method.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Target project and location to make a call. Format: `projects/{project-id}/locations
         * /{location-id}`. If no location is specified, a region will be chosen automatically. This
         * field is only populated when used in ProcessDocument method.
         */
        public Process setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Process set(String parameterName, Object value) {
          return (Process) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Document documentai = new Document(...);}
     *   {@code Document.Locations.List request = documentai.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the Documents collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Document documentai = new Document(...);}
       *   {@code Document.Documents.List request = documentai.documents().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Documents documents() {
        return new Documents();
      }

      /**
       * The "documents" collection of methods.
       */
      public class Documents {

        /**
         * LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in
         * the [Document] format.
         *
         * Create a request for the method "documents.batchProcess".
         *
         * This request holds the parameters needed by the documentai server.  After setting any optional
         * parameters, call the {@link BatchProcess#execute()} method to invoke the remote operation.
         *
         * @param parent Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`.
         *        If no location is specified, a region will be chosen automatically.
         * @param content the {@link com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest}
         * @return the request
         */
        public BatchProcess batchProcess(java.lang.String parent, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest content) throws java.io.IOException {
          BatchProcess result = new BatchProcess(parent, content);
          initialize(result);
          return result;
        }

        public class BatchProcess extends DocumentRequest<com.google.api.services.documentai.v1beta2.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1beta2/{+parent}/documents:batchProcess";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in
           * the [Document] format.
           *
           * Create a request for the method "documents.batchProcess".
           *
           * This request holds the parameters needed by the the documentai server.  After setting any
           * optional parameters, call the {@link BatchProcess#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchProcess#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`.
         *        If no location is specified, a region will be chosen automatically.
           * @param content the {@link com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest}
           * @since 1.13
           */
          protected BatchProcess(java.lang.String parent, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest content) {
            super(Document.this, "POST", REST_PATH, content, com.google.api.services.documentai.v1beta2.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public BatchProcess set$Xgafv(java.lang.String $Xgafv) {
            return (BatchProcess) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchProcess setAccessToken(java.lang.String accessToken) {
            return (BatchProcess) super.setAccessToken(accessToken);
          }

          @Override
          public BatchProcess setAlt(java.lang.String alt) {
            return (BatchProcess) super.setAlt(alt);
          }

          @Override
          public BatchProcess setCallback(java.lang.String callback) {
            return (BatchProcess) super.setCallback(callback);
          }

          @Override
          public BatchProcess setFields(java.lang.String fields) {
            return (BatchProcess) super.setFields(fields);
          }

          @Override
          public BatchProcess setKey(java.lang.String key) {
            return (BatchProcess) super.setKey(key);
          }

          @Override
          public BatchProcess setOauthToken(java.lang.String oauthToken) {
            return (BatchProcess) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchProcess setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchProcess) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchProcess setQuotaUser(java.lang.String quotaUser) {
            return (BatchProcess) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchProcess setUploadType(java.lang.String uploadType) {
            return (BatchProcess) super.setUploadType(uploadType);
          }

          @Override
          public BatchProcess setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchProcess) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Target project and location to make a call. Format: `projects/{project-id}/locations
           * /{location-id}`. If no location is specified, a region will be chosen automatically.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Target project and location to make a call. Format: `projects/{project-id}/locations/{location-
         id}`. If no location is specified, a region will be chosen automatically.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Target project and location to make a call. Format: `projects/{project-id}/locations
           * /{location-id}`. If no location is specified, a region will be chosen automatically.
           */
          public BatchProcess setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchProcess set(String parameterName, Object value) {
            return (BatchProcess) super.set(parameterName, value);
          }
        }
        /**
         * Processes a single document.
         *
         * Create a request for the method "documents.process".
         *
         * This request holds the parameters needed by the documentai server.  After setting any optional
         * parameters, call the {@link Process#execute()} method to invoke the remote operation.
         *
         * @param parent Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`.
         *        If no location is specified, a region will be chosen automatically. This field is only
         *        populated when used in ProcessDocument method.
         * @param content the {@link com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2ProcessDocumentRequest}
         * @return the request
         */
        public Process process(java.lang.String parent, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2ProcessDocumentRequest content) throws java.io.IOException {
          Process result = new Process(parent, content);
          initialize(result);
          return result;
        }

        public class Process extends DocumentRequest<com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2Document> {

          private static final String REST_PATH = "v1beta2/{+parent}/documents:process";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Processes a single document.
           *
           * Create a request for the method "documents.process".
           *
           * This request holds the parameters needed by the the documentai server.  After setting any
           * optional parameters, call the {@link Process#execute()} method to invoke the remote operation.
           * <p> {@link
           * Process#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`.
         *        If no location is specified, a region will be chosen automatically. This field is only
         *        populated when used in ProcessDocument method.
           * @param content the {@link com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2ProcessDocumentRequest}
           * @since 1.13
           */
          protected Process(java.lang.String parent, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2ProcessDocumentRequest content) {
            super(Document.this, "POST", REST_PATH, content, com.google.api.services.documentai.v1beta2.model.GoogleCloudDocumentaiV1beta2Document.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Process set$Xgafv(java.lang.String $Xgafv) {
            return (Process) super.set$Xgafv($Xgafv);
          }

          @Override
          public Process setAccessToken(java.lang.String accessToken) {
            return (Process) super.setAccessToken(accessToken);
          }

          @Override
          public Process setAlt(java.lang.String alt) {
            return (Process) super.setAlt(alt);
          }

          @Override
          public Process setCallback(java.lang.String callback) {
            return (Process) super.setCallback(callback);
          }

          @Override
          public Process setFields(java.lang.String fields) {
            return (Process) super.setFields(fields);
          }

          @Override
          public Process setKey(java.lang.String key) {
            return (Process) super.setKey(key);
          }

          @Override
          public Process setOauthToken(java.lang.String oauthToken) {
            return (Process) super.setOauthToken(oauthToken);
          }

          @Override
          public Process setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Process) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Process setQuotaUser(java.lang.String quotaUser) {
            return (Process) super.setQuotaUser(quotaUser);
          }

          @Override
          public Process setUploadType(java.lang.String uploadType) {
            return (Process) super.setUploadType(uploadType);
          }

          @Override
          public Process setUploadProtocol(java.lang.String uploadProtocol) {
            return (Process) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Target project and location to make a call. Format: `projects/{project-id}/locations
           * /{location-id}`. If no location is specified, a region will be chosen automatically.
           * This field is only populated when used in ProcessDocument method.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Target project and location to make a call. Format: `projects/{project-id}/locations/{location-
         id}`. If no location is specified, a region will be chosen automatically. This field is only
         populated when used in ProcessDocument method.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Target project and location to make a call. Format: `projects/{project-id}/locations
           * /{location-id}`. If no location is specified, a region will be chosen automatically.
           * This field is only populated when used in ProcessDocument method.
           */
          public Process setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Process set(String parameterName, Object value) {
            return (Process) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Document documentai = new Document(...);}
       *   {@code Document.Operations.List request = documentai.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the documentai server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DocumentRequest<com.google.api.services.documentai.v1beta2.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1beta2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the documentai server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Document.this, "GET", REST_PATH, null, com.google.api.services.documentai.v1beta2.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Document documentai = new Document(...);}
     *   {@code Document.Operations.List request = documentai.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the documentai server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DocumentRequest<com.google.api.services.documentai.v1beta2.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1beta2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the documentai server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Document.this, "GET", REST_PATH, null, com.google.api.services.documentai.v1beta2.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Document}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Document}. */
    @Override
    public Document build() {
      return new Document(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DocumentRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDocumentRequestInitializer(
        DocumentRequestInitializer documentRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(documentRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
