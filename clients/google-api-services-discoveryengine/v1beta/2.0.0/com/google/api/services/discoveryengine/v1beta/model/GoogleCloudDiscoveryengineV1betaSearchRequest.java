/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1beta.model;

/**
 * Request message for SearchService.Search method.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1betaSearchRequest extends com.google.api.client.json.GenericJson {

  /**
   * Boost specification to boost certain documents. For more information on boosting, see
   * [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec boostSpec;

  /**
   * The branch resource name, such as `projects/locations/global/collections/default_collection/dat
   * aStores/default_data_store/branches/0`. Use `default_branch` as the branch ID or leave this
   * field empty, to search documents under the default branch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String branch;

  /**
   * The default filter that is applied when a user performs a search without checking any filters
   * on the search page. The filter applied to every search request when quality improvement such as
   * query expansion is needed. In the case a query does not have a sufficient amount of results
   * this filter will be used to determine whether or not to enable the query expansion flow. The
   * original filter will still be used for the query expanded search. This field is strongly
   * recommended to achieve high search quality. For more information about filter syntax, see
   * SearchRequest.filter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String canonicalFilter;

  /**
   * A specification for configuring the behavior of content search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec contentSearchSpec;

  /**
   * Uses the provided embedding to do additional semantic document retrieval. The retrieval is
   * based on the dot product of SearchRequest.embedding_spec.embedding_vectors.vector and the
   * document embedding that is provided in
   * SearchRequest.embedding_spec.embedding_vectors.field_path. If
   * SearchRequest.embedding_spec.embedding_vectors.field_path is not provided, it will use
   * ServingConfig.embedding_config.field_paths.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec embeddingSpec;

  /**
   * Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100
   * values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec> facetSpecs;

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or
   * more fields of the documents being filtered. Filter expression is case-sensitive. If this field
   * is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
   * mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this
   * mapping is defined by the customer in their schema. For example a media customer might have a
   * field 'name' in their schema. In this case the filter would look like this: filter -->
   * name:'ANY("king kong")' For more information about filtering including syntax and filter
   * operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-
   * metadata)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * Raw image query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery imageQuery;

  /**
   * A 0-indexed integer that specifies the current offset (that is, starting result location,
   * amongst the Documents deemed by the API as relevant) in search results. This field is only
   * considered if page_token is unset. If this field is negative, an `INVALID_ARGUMENT` is
   * returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer offset;

  /**
   * The order in which documents are returned. Documents can be ordered by a field in an Document
   * object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For
   * more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-
   * order#order) If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String orderBy;

  /**
   * Maximum number of Documents to return. If unspecified, defaults to a reasonable value. The
   * maximum allowed value is 100. Values above 100 are coerced to 100. If this field is negative,
   * an `INVALID_ARGUMENT` is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer pageSize;

  /**
   * A page token received from a previous SearchService.Search call. Provide this to retrieve the
   * subsequent page. When paginating, all other parameters provided to SearchService.Search must
   * match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is
   * returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pageToken;

  /**
   * Additional search parameters. For public website search only, supported values are: *
   * `user_country_code`: string. Default empty. If set to non-empty, results are restricted or
   * boosted based on the location provided. Example: user_country_code: "au" For available codes
   * see [Country Codes](https://developers.google.com/custom-
   * search/docs/json_api_reference#countryCodes) * `search_type`: double. Default empty. Enables
   * non-webpage searching depending on the value. The only valid non-default value is 1, which
   * enables image searching. Example: search_type: 1
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> params;

  /**
   * Raw search query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String query;

  /**
   * The query expansion specification that specifies the conditions under which query expansion
   * occurs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec queryExpansionSpec;

  /**
   * The ranking expression controls the customized ranking on retrieval documents. This overrides
   * ServingConfig.ranking_expression. The ranking expression is a single function or multiple
   * functions that are joint by "+". * ranking_expression = function, { " + ", function };
   * Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path)
   * Function variables: `relevance_score`: pre-defined keywords, used for measure relevance between
   * query and document. `embedding_field_path`: the document embedding field used with query
   * embedding vector. `dotProduct`: embedding function between embedding_field_path and query
   * embedding vector. Example ranking expression: If document has an embedding field doc_embedding,
   * the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rankingExpression;

  /**
   * Whether to turn on safe search. This is only supported for website search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean safeSearch;

  /**
   * The spell correction specification that specifies the mode under which spell correction takes
   * effect.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec spellCorrectionSpec;

  /**
   * Information about the end user. Highly recommended for analytics. UserInfo.user_agent is used
   * to deduce `device_type` for analytics.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1betaUserInfo userInfo;

  /**
   * The user labels applied to a resource must meet the following requirements: * Each resource can
   * have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have
   * a minimum length of 1 character and a maximum length of 63 characters and cannot be empty.
   * Values can be empty and have a maximum length of 63 characters. * Keys and values can contain
   * only lowercase letters, numeric characters, underscores, and dashes. All characters must use
   * UTF-8 encoding, and international characters are allowed. * The key portion of a label must be
   * unique. However, you can use the same key with multiple resources. * Keys must start with a
   * lowercase letter or international character. See [Google Cloud
   * Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
   * for more details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> userLabels;

  /**
   * A unique identifier for tracking visitors. For example, this could be implemented with an HTTP
   * cookie, which should be able to uniquely identify a visitor on a single device. This unique
   * identifier should not change if the visitor logs in or out of the website. This field should
   * NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as
   * UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field must be a UTF-8
   * encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is
   * returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userPseudoId;

  /**
   * Boost specification to boost certain documents. For more information on boosting, see
   * [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec getBoostSpec() {
    return boostSpec;
  }

  /**
   * Boost specification to boost certain documents. For more information on boosting, see
   * [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
   * @param boostSpec boostSpec or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setBoostSpec(GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec boostSpec) {
    this.boostSpec = boostSpec;
    return this;
  }

  /**
   * The branch resource name, such as `projects/locations/global/collections/default_collection/dat
   * aStores/default_data_store/branches/0`. Use `default_branch` as the branch ID or leave this
   * field empty, to search documents under the default branch.
   * @return value or {@code null} for none
   */
  public java.lang.String getBranch() {
    return branch;
  }

  /**
   * The branch resource name, such as `projects/locations/global/collections/default_collection/dat
   * aStores/default_data_store/branches/0`. Use `default_branch` as the branch ID or leave this
   * field empty, to search documents under the default branch.
   * @param branch branch or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setBranch(java.lang.String branch) {
    this.branch = branch;
    return this;
  }

  /**
   * The default filter that is applied when a user performs a search without checking any filters
   * on the search page. The filter applied to every search request when quality improvement such as
   * query expansion is needed. In the case a query does not have a sufficient amount of results
   * this filter will be used to determine whether or not to enable the query expansion flow. The
   * original filter will still be used for the query expanded search. This field is strongly
   * recommended to achieve high search quality. For more information about filter syntax, see
   * SearchRequest.filter.
   * @return value or {@code null} for none
   */
  public java.lang.String getCanonicalFilter() {
    return canonicalFilter;
  }

  /**
   * The default filter that is applied when a user performs a search without checking any filters
   * on the search page. The filter applied to every search request when quality improvement such as
   * query expansion is needed. In the case a query does not have a sufficient amount of results
   * this filter will be used to determine whether or not to enable the query expansion flow. The
   * original filter will still be used for the query expanded search. This field is strongly
   * recommended to achieve high search quality. For more information about filter syntax, see
   * SearchRequest.filter.
   * @param canonicalFilter canonicalFilter or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setCanonicalFilter(java.lang.String canonicalFilter) {
    this.canonicalFilter = canonicalFilter;
    return this;
  }

  /**
   * A specification for configuring the behavior of content search.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec getContentSearchSpec() {
    return contentSearchSpec;
  }

  /**
   * A specification for configuring the behavior of content search.
   * @param contentSearchSpec contentSearchSpec or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setContentSearchSpec(GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec contentSearchSpec) {
    this.contentSearchSpec = contentSearchSpec;
    return this;
  }

  /**
   * Uses the provided embedding to do additional semantic document retrieval. The retrieval is
   * based on the dot product of SearchRequest.embedding_spec.embedding_vectors.vector and the
   * document embedding that is provided in
   * SearchRequest.embedding_spec.embedding_vectors.field_path. If
   * SearchRequest.embedding_spec.embedding_vectors.field_path is not provided, it will use
   * ServingConfig.embedding_config.field_paths.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec getEmbeddingSpec() {
    return embeddingSpec;
  }

  /**
   * Uses the provided embedding to do additional semantic document retrieval. The retrieval is
   * based on the dot product of SearchRequest.embedding_spec.embedding_vectors.vector and the
   * document embedding that is provided in
   * SearchRequest.embedding_spec.embedding_vectors.field_path. If
   * SearchRequest.embedding_spec.embedding_vectors.field_path is not provided, it will use
   * ServingConfig.embedding_config.field_paths.
   * @param embeddingSpec embeddingSpec or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setEmbeddingSpec(GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec embeddingSpec) {
    this.embeddingSpec = embeddingSpec;
    return this;
  }

  /**
   * Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100
   * values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec> getFacetSpecs() {
    return facetSpecs;
  }

  /**
   * Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100
   * values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
   * @param facetSpecs facetSpecs or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setFacetSpecs(java.util.List<GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec> facetSpecs) {
    this.facetSpecs = facetSpecs;
    return this;
  }

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or
   * more fields of the documents being filtered. Filter expression is case-sensitive. If this field
   * is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
   * mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this
   * mapping is defined by the customer in their schema. For example a media customer might have a
   * field 'name' in their schema. In this case the filter would look like this: filter -->
   * name:'ANY("king kong")' For more information about filtering including syntax and filter
   * operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-
   * metadata)
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or
   * more fields of the documents being filtered. Filter expression is case-sensitive. If this field
   * is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
   * mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this
   * mapping is defined by the customer in their schema. For example a media customer might have a
   * field 'name' in their schema. In this case the filter would look like this: filter -->
   * name:'ANY("king kong")' For more information about filtering including syntax and filter
   * operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-
   * metadata)
   * @param filter filter or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Raw image query.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery getImageQuery() {
    return imageQuery;
  }

  /**
   * Raw image query.
   * @param imageQuery imageQuery or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setImageQuery(GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery imageQuery) {
    this.imageQuery = imageQuery;
    return this;
  }

  /**
   * A 0-indexed integer that specifies the current offset (that is, starting result location,
   * amongst the Documents deemed by the API as relevant) in search results. This field is only
   * considered if page_token is unset. If this field is negative, an `INVALID_ARGUMENT` is
   * returned.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOffset() {
    return offset;
  }

  /**
   * A 0-indexed integer that specifies the current offset (that is, starting result location,
   * amongst the Documents deemed by the API as relevant) in search results. This field is only
   * considered if page_token is unset. If this field is negative, an `INVALID_ARGUMENT` is
   * returned.
   * @param offset offset or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setOffset(java.lang.Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * The order in which documents are returned. Documents can be ordered by a field in an Document
   * object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For
   * more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-
   * order#order) If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrderBy() {
    return orderBy;
  }

  /**
   * The order in which documents are returned. Documents can be ordered by a field in an Document
   * object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For
   * more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-
   * order#order) If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
   * @param orderBy orderBy or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setOrderBy(java.lang.String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

  /**
   * Maximum number of Documents to return. If unspecified, defaults to a reasonable value. The
   * maximum allowed value is 100. Values above 100 are coerced to 100. If this field is negative,
   * an `INVALID_ARGUMENT` is returned.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPageSize() {
    return pageSize;
  }

  /**
   * Maximum number of Documents to return. If unspecified, defaults to a reasonable value. The
   * maximum allowed value is 100. Values above 100 are coerced to 100. If this field is negative,
   * an `INVALID_ARGUMENT` is returned.
   * @param pageSize pageSize or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setPageSize(java.lang.Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * A page token received from a previous SearchService.Search call. Provide this to retrieve the
   * subsequent page. When paginating, all other parameters provided to SearchService.Search must
   * match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is
   * returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getPageToken() {
    return pageToken;
  }

  /**
   * A page token received from a previous SearchService.Search call. Provide this to retrieve the
   * subsequent page. When paginating, all other parameters provided to SearchService.Search must
   * match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is
   * returned.
   * @param pageToken pageToken or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setPageToken(java.lang.String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * Additional search parameters. For public website search only, supported values are: *
   * `user_country_code`: string. Default empty. If set to non-empty, results are restricted or
   * boosted based on the location provided. Example: user_country_code: "au" For available codes
   * see [Country Codes](https://developers.google.com/custom-
   * search/docs/json_api_reference#countryCodes) * `search_type`: double. Default empty. Enables
   * non-webpage searching depending on the value. The only valid non-default value is 1, which
   * enables image searching. Example: search_type: 1
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getParams() {
    return params;
  }

  /**
   * Additional search parameters. For public website search only, supported values are: *
   * `user_country_code`: string. Default empty. If set to non-empty, results are restricted or
   * boosted based on the location provided. Example: user_country_code: "au" For available codes
   * see [Country Codes](https://developers.google.com/custom-
   * search/docs/json_api_reference#countryCodes) * `search_type`: double. Default empty. Enables
   * non-webpage searching depending on the value. The only valid non-default value is 1, which
   * enables image searching. Example: search_type: 1
   * @param params params or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setParams(java.util.Map<String, java.lang.Object> params) {
    this.params = params;
    return this;
  }

  /**
   * Raw search query.
   * @return value or {@code null} for none
   */
  public java.lang.String getQuery() {
    return query;
  }

  /**
   * Raw search query.
   * @param query query or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setQuery(java.lang.String query) {
    this.query = query;
    return this;
  }

  /**
   * The query expansion specification that specifies the conditions under which query expansion
   * occurs.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec getQueryExpansionSpec() {
    return queryExpansionSpec;
  }

  /**
   * The query expansion specification that specifies the conditions under which query expansion
   * occurs.
   * @param queryExpansionSpec queryExpansionSpec or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setQueryExpansionSpec(GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec queryExpansionSpec) {
    this.queryExpansionSpec = queryExpansionSpec;
    return this;
  }

  /**
   * The ranking expression controls the customized ranking on retrieval documents. This overrides
   * ServingConfig.ranking_expression. The ranking expression is a single function or multiple
   * functions that are joint by "+". * ranking_expression = function, { " + ", function };
   * Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path)
   * Function variables: `relevance_score`: pre-defined keywords, used for measure relevance between
   * query and document. `embedding_field_path`: the document embedding field used with query
   * embedding vector. `dotProduct`: embedding function between embedding_field_path and query
   * embedding vector. Example ranking expression: If document has an embedding field doc_embedding,
   * the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.
   * @return value or {@code null} for none
   */
  public java.lang.String getRankingExpression() {
    return rankingExpression;
  }

  /**
   * The ranking expression controls the customized ranking on retrieval documents. This overrides
   * ServingConfig.ranking_expression. The ranking expression is a single function or multiple
   * functions that are joint by "+". * ranking_expression = function, { " + ", function };
   * Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path)
   * Function variables: `relevance_score`: pre-defined keywords, used for measure relevance between
   * query and document. `embedding_field_path`: the document embedding field used with query
   * embedding vector. `dotProduct`: embedding function between embedding_field_path and query
   * embedding vector. Example ranking expression: If document has an embedding field doc_embedding,
   * the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.
   * @param rankingExpression rankingExpression or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setRankingExpression(java.lang.String rankingExpression) {
    this.rankingExpression = rankingExpression;
    return this;
  }

  /**
   * Whether to turn on safe search. This is only supported for website search.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSafeSearch() {
    return safeSearch;
  }

  /**
   * Whether to turn on safe search. This is only supported for website search.
   * @param safeSearch safeSearch or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setSafeSearch(java.lang.Boolean safeSearch) {
    this.safeSearch = safeSearch;
    return this;
  }

  /**
   * The spell correction specification that specifies the mode under which spell correction takes
   * effect.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec getSpellCorrectionSpec() {
    return spellCorrectionSpec;
  }

  /**
   * The spell correction specification that specifies the mode under which spell correction takes
   * effect.
   * @param spellCorrectionSpec spellCorrectionSpec or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setSpellCorrectionSpec(GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec spellCorrectionSpec) {
    this.spellCorrectionSpec = spellCorrectionSpec;
    return this;
  }

  /**
   * Information about the end user. Highly recommended for analytics. UserInfo.user_agent is used
   * to deduce `device_type` for analytics.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaUserInfo getUserInfo() {
    return userInfo;
  }

  /**
   * Information about the end user. Highly recommended for analytics. UserInfo.user_agent is used
   * to deduce `device_type` for analytics.
   * @param userInfo userInfo or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setUserInfo(GoogleCloudDiscoveryengineV1betaUserInfo userInfo) {
    this.userInfo = userInfo;
    return this;
  }

  /**
   * The user labels applied to a resource must meet the following requirements: * Each resource can
   * have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have
   * a minimum length of 1 character and a maximum length of 63 characters and cannot be empty.
   * Values can be empty and have a maximum length of 63 characters. * Keys and values can contain
   * only lowercase letters, numeric characters, underscores, and dashes. All characters must use
   * UTF-8 encoding, and international characters are allowed. * The key portion of a label must be
   * unique. However, you can use the same key with multiple resources. * Keys must start with a
   * lowercase letter or international character. See [Google Cloud
   * Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
   * for more details.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getUserLabels() {
    return userLabels;
  }

  /**
   * The user labels applied to a resource must meet the following requirements: * Each resource can
   * have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have
   * a minimum length of 1 character and a maximum length of 63 characters and cannot be empty.
   * Values can be empty and have a maximum length of 63 characters. * Keys and values can contain
   * only lowercase letters, numeric characters, underscores, and dashes. All characters must use
   * UTF-8 encoding, and international characters are allowed. * The key portion of a label must be
   * unique. However, you can use the same key with multiple resources. * Keys must start with a
   * lowercase letter or international character. See [Google Cloud
   * Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
   * for more details.
   * @param userLabels userLabels or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setUserLabels(java.util.Map<String, java.lang.String> userLabels) {
    this.userLabels = userLabels;
    return this;
  }

  /**
   * A unique identifier for tracking visitors. For example, this could be implemented with an HTTP
   * cookie, which should be able to uniquely identify a visitor on a single device. This unique
   * identifier should not change if the visitor logs in or out of the website. This field should
   * NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as
   * UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field must be a UTF-8
   * encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is
   * returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserPseudoId() {
    return userPseudoId;
  }

  /**
   * A unique identifier for tracking visitors. For example, this could be implemented with an HTTP
   * cookie, which should be able to uniquely identify a visitor on a single device. This unique
   * identifier should not change if the visitor logs in or out of the website. This field should
   * NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as
   * UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field must be a UTF-8
   * encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is
   * returned.
   * @param userPseudoId userPseudoId or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequest setUserPseudoId(java.lang.String userPseudoId) {
    this.userPseudoId = userPseudoId;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaSearchRequest set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1betaSearchRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaSearchRequest clone() {
    return (GoogleCloudDiscoveryengineV1betaSearchRequest) super.clone();
  }

}
