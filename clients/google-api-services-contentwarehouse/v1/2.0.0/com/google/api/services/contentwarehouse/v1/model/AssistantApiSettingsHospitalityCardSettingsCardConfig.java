/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Configuration for hospitality card.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiSettingsHospitalityCardSettingsCardConfig extends com.google.api.client.json.GenericJson {

  /**
   * Whether the UI module requires user action. If true, the UI module can peek on to the top of
   * Ambient. See SmartDisplayModuleState::ACTIVE_ACTION_REQUIRED.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean activeActionRequired;

  /**
   * Whether the UI module is dismissable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean dismissable;

  /**
   * The time that the module is effective and visible to the user. If not set, the module is
   * effective immediately.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiTimestamp effectiveTime;

  /**
   * The time that the module is expired and invisible to the user. If not set, the module never
   * expires.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiTimestamp expiryTime;

  /**
   * The image URL for the UI module.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageUrl;

  /**
   * Module ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String moduleId;

  /**
   * Payload query to the partner AoG action when user responds to UI Module, e.g. “Tell the hotel
   * how my stay is going”.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String payloadQuery;

  /**
   * Title of the message to be shown to user at the top of the UI Module.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Whether the UI module requires user action. If true, the UI module can peek on to the top of
   * Ambient. See SmartDisplayModuleState::ACTIVE_ACTION_REQUIRED.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getActiveActionRequired() {
    return activeActionRequired;
  }

  /**
   * Whether the UI module requires user action. If true, the UI module can peek on to the top of
   * Ambient. See SmartDisplayModuleState::ACTIVE_ACTION_REQUIRED.
   * @param activeActionRequired activeActionRequired or {@code null} for none
   */
  public AssistantApiSettingsHospitalityCardSettingsCardConfig setActiveActionRequired(java.lang.Boolean activeActionRequired) {
    this.activeActionRequired = activeActionRequired;
    return this;
  }

  /**
   * Whether the UI module is dismissable.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDismissable() {
    return dismissable;
  }

  /**
   * Whether the UI module is dismissable.
   * @param dismissable dismissable or {@code null} for none
   */
  public AssistantApiSettingsHospitalityCardSettingsCardConfig setDismissable(java.lang.Boolean dismissable) {
    this.dismissable = dismissable;
    return this;
  }

  /**
   * The time that the module is effective and visible to the user. If not set, the module is
   * effective immediately.
   * @return value or {@code null} for none
   */
  public AssistantApiTimestamp getEffectiveTime() {
    return effectiveTime;
  }

  /**
   * The time that the module is effective and visible to the user. If not set, the module is
   * effective immediately.
   * @param effectiveTime effectiveTime or {@code null} for none
   */
  public AssistantApiSettingsHospitalityCardSettingsCardConfig setEffectiveTime(AssistantApiTimestamp effectiveTime) {
    this.effectiveTime = effectiveTime;
    return this;
  }

  /**
   * The time that the module is expired and invisible to the user. If not set, the module never
   * expires.
   * @return value or {@code null} for none
   */
  public AssistantApiTimestamp getExpiryTime() {
    return expiryTime;
  }

  /**
   * The time that the module is expired and invisible to the user. If not set, the module never
   * expires.
   * @param expiryTime expiryTime or {@code null} for none
   */
  public AssistantApiSettingsHospitalityCardSettingsCardConfig setExpiryTime(AssistantApiTimestamp expiryTime) {
    this.expiryTime = expiryTime;
    return this;
  }

  /**
   * The image URL for the UI module.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageUrl() {
    return imageUrl;
  }

  /**
   * The image URL for the UI module.
   * @param imageUrl imageUrl or {@code null} for none
   */
  public AssistantApiSettingsHospitalityCardSettingsCardConfig setImageUrl(java.lang.String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * Module ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getModuleId() {
    return moduleId;
  }

  /**
   * Module ID.
   * @param moduleId moduleId or {@code null} for none
   */
  public AssistantApiSettingsHospitalityCardSettingsCardConfig setModuleId(java.lang.String moduleId) {
    this.moduleId = moduleId;
    return this;
  }

  /**
   * Payload query to the partner AoG action when user responds to UI Module, e.g. “Tell the hotel
   * how my stay is going”.
   * @return value or {@code null} for none
   */
  public java.lang.String getPayloadQuery() {
    return payloadQuery;
  }

  /**
   * Payload query to the partner AoG action when user responds to UI Module, e.g. “Tell the hotel
   * how my stay is going”.
   * @param payloadQuery payloadQuery or {@code null} for none
   */
  public AssistantApiSettingsHospitalityCardSettingsCardConfig setPayloadQuery(java.lang.String payloadQuery) {
    this.payloadQuery = payloadQuery;
    return this;
  }

  /**
   * Title of the message to be shown to user at the top of the UI Module.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Title of the message to be shown to user at the top of the UI Module.
   * @param title title or {@code null} for none
   */
  public AssistantApiSettingsHospitalityCardSettingsCardConfig setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  @Override
  public AssistantApiSettingsHospitalityCardSettingsCardConfig set(String fieldName, Object value) {
    return (AssistantApiSettingsHospitalityCardSettingsCardConfig) super.set(fieldName, value);
  }

  @Override
  public AssistantApiSettingsHospitalityCardSettingsCardConfig clone() {
    return (AssistantApiSettingsHospitalityCardSettingsCardConfig) super.clone();
  }

}
