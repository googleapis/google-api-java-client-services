/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkehub.v1alpha.model;

/**
 * KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes
 * resources in the cluster. After CreateMembership or UpdateMembership, these resources should be
 * re-applied in the cluster.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the GKE Hub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KubernetesResource extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The Kubernetes resources for installing the GKE Connect agent This field is only
   * populated in the Membership returned from a successful long-running operation from
   * CreateMembership or UpdateMembership. It is not populated during normal GetMembership or
   * ListMemberships requests. To get the resource manifest after the initial registration, the
   * caller should make a UpdateMembership call with an empty field mask.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ResourceManifest> connectResources;

  /**
   * Input only. The YAML representation of the Membership CR. This field is ignored for GKE
   * clusters where Hub can read the CR directly. Callers should provide the CR that is currently
   * present in the cluster during CreateMembership or UpdateMembership, or leave this field empty
   * if none exists. The CR manifest is used to validate the cluster has not been registered with
   * another Membership.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String membershipCrManifest;

  /**
   * Output only. Additional Kubernetes resources that need to be applied to the cluster after
   * Membership creation, and after every update. This field is only populated in the Membership
   * returned from a successful long-running operation from CreateMembership or UpdateMembership. It
   * is not populated during normal GetMembership or ListMemberships requests. To get the resource
   * manifest after the initial registration, the caller should make a UpdateMembership call with an
   * empty field mask.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ResourceManifest> membershipResources;

  /**
   * Optional. Options for Kubernetes resource generation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceOptions resourceOptions;

  /**
   * Output only. The Kubernetes resources for installing the GKE Connect agent This field is only
   * populated in the Membership returned from a successful long-running operation from
   * CreateMembership or UpdateMembership. It is not populated during normal GetMembership or
   * ListMemberships requests. To get the resource manifest after the initial registration, the
   * caller should make a UpdateMembership call with an empty field mask.
   * @return value or {@code null} for none
   */
  public java.util.List<ResourceManifest> getConnectResources() {
    return connectResources;
  }

  /**
   * Output only. The Kubernetes resources for installing the GKE Connect agent This field is only
   * populated in the Membership returned from a successful long-running operation from
   * CreateMembership or UpdateMembership. It is not populated during normal GetMembership or
   * ListMemberships requests. To get the resource manifest after the initial registration, the
   * caller should make a UpdateMembership call with an empty field mask.
   * @param connectResources connectResources or {@code null} for none
   */
  public KubernetesResource setConnectResources(java.util.List<ResourceManifest> connectResources) {
    this.connectResources = connectResources;
    return this;
  }

  /**
   * Input only. The YAML representation of the Membership CR. This field is ignored for GKE
   * clusters where Hub can read the CR directly. Callers should provide the CR that is currently
   * present in the cluster during CreateMembership or UpdateMembership, or leave this field empty
   * if none exists. The CR manifest is used to validate the cluster has not been registered with
   * another Membership.
   * @return value or {@code null} for none
   */
  public java.lang.String getMembershipCrManifest() {
    return membershipCrManifest;
  }

  /**
   * Input only. The YAML representation of the Membership CR. This field is ignored for GKE
   * clusters where Hub can read the CR directly. Callers should provide the CR that is currently
   * present in the cluster during CreateMembership or UpdateMembership, or leave this field empty
   * if none exists. The CR manifest is used to validate the cluster has not been registered with
   * another Membership.
   * @param membershipCrManifest membershipCrManifest or {@code null} for none
   */
  public KubernetesResource setMembershipCrManifest(java.lang.String membershipCrManifest) {
    this.membershipCrManifest = membershipCrManifest;
    return this;
  }

  /**
   * Output only. Additional Kubernetes resources that need to be applied to the cluster after
   * Membership creation, and after every update. This field is only populated in the Membership
   * returned from a successful long-running operation from CreateMembership or UpdateMembership. It
   * is not populated during normal GetMembership or ListMemberships requests. To get the resource
   * manifest after the initial registration, the caller should make a UpdateMembership call with an
   * empty field mask.
   * @return value or {@code null} for none
   */
  public java.util.List<ResourceManifest> getMembershipResources() {
    return membershipResources;
  }

  /**
   * Output only. Additional Kubernetes resources that need to be applied to the cluster after
   * Membership creation, and after every update. This field is only populated in the Membership
   * returned from a successful long-running operation from CreateMembership or UpdateMembership. It
   * is not populated during normal GetMembership or ListMemberships requests. To get the resource
   * manifest after the initial registration, the caller should make a UpdateMembership call with an
   * empty field mask.
   * @param membershipResources membershipResources or {@code null} for none
   */
  public KubernetesResource setMembershipResources(java.util.List<ResourceManifest> membershipResources) {
    this.membershipResources = membershipResources;
    return this;
  }

  /**
   * Optional. Options for Kubernetes resource generation.
   * @return value or {@code null} for none
   */
  public ResourceOptions getResourceOptions() {
    return resourceOptions;
  }

  /**
   * Optional. Options for Kubernetes resource generation.
   * @param resourceOptions resourceOptions or {@code null} for none
   */
  public KubernetesResource setResourceOptions(ResourceOptions resourceOptions) {
    this.resourceOptions = resourceOptions;
    return this;
  }

  @Override
  public KubernetesResource set(String fieldName, Object value) {
    return (KubernetesResource) super.set(fieldName, value);
  }

  @Override
  public KubernetesResource clone() {
    return (KubernetesResource) super.clone();
  }

}
