/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Represents the invitees or other users associated with a Babel Chat (see http://goto/babel).
 * Corresponds to GroupType CHAT in //social/graph/storage/proto/data.proto.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SecurityCredentialsChatProto extends com.google.api.client.json.GenericJson {

  /**
   * Chat IDs consist of alphanumeric characters and colons. Currently required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String chatId;

  /**
   * The type of Chat members to consider, e.g. "all members" vs. "invitee" These are defined by
   * legacy_relation_id values in social.graph.storage.EdgeTypeEnum.EdgeType enum options in
   * social/graph/storage/proto/id.proto. See chat.pb (defined in
   * production/config/cdd/socialgraph/mixer_config/prod/node_type_config) for all valid edge types
   * associated with chat. Currently required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer memberType;

  /**
   * Chat IDs consist of alphanumeric characters and colons. Currently required.
   * @return value or {@code null} for none
   */
  public java.lang.String getChatId() {
    return chatId;
  }

  /**
   * Chat IDs consist of alphanumeric characters and colons. Currently required.
   * @param chatId chatId or {@code null} for none
   */
  public SecurityCredentialsChatProto setChatId(java.lang.String chatId) {
    this.chatId = chatId;
    return this;
  }

  /**
   * The type of Chat members to consider, e.g. "all members" vs. "invitee" These are defined by
   * legacy_relation_id values in social.graph.storage.EdgeTypeEnum.EdgeType enum options in
   * social/graph/storage/proto/id.proto. See chat.pb (defined in
   * production/config/cdd/socialgraph/mixer_config/prod/node_type_config) for all valid edge types
   * associated with chat. Currently required.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMemberType() {
    return memberType;
  }

  /**
   * The type of Chat members to consider, e.g. "all members" vs. "invitee" These are defined by
   * legacy_relation_id values in social.graph.storage.EdgeTypeEnum.EdgeType enum options in
   * social/graph/storage/proto/id.proto. See chat.pb (defined in
   * production/config/cdd/socialgraph/mixer_config/prod/node_type_config) for all valid edge types
   * associated with chat. Currently required.
   * @param memberType memberType or {@code null} for none
   */
  public SecurityCredentialsChatProto setMemberType(java.lang.Integer memberType) {
    this.memberType = memberType;
    return this;
  }

  @Override
  public SecurityCredentialsChatProto set(String fieldName, Object value) {
    return (SecurityCredentialsChatProto) super.set(fieldName, value);
  }

  @Override
  public SecurityCredentialsChatProto clone() {
    return (SecurityCredentialsChatProto) super.clone();
  }

}
