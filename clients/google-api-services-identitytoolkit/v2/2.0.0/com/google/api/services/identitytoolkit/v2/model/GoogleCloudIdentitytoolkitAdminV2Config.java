/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.identitytoolkit.v2.model;

/**
 * Represents an Identity Toolkit project.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Identity Toolkit API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIdentitytoolkitAdminV2Config extends com.google.api.client.json.GenericJson {

  /**
   * List of domains authorized for OAuth redirects
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> authorizedDomains;

  /**
   * Whether anonymous users will be auto-deleted after a period of 30 days.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean autodeleteAnonymousUsers;

  /**
   * Configuration related to blocking functions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig blockingFunctions;

  /**
   * Options related to how clients making requests on behalf of a project should be configured.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2ClientConfig client;

  /**
   * Configuration for settings related to email privacy and public visibility.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig emailPrivacyConfig;

  /**
   * Configuration for this project's multi-factor authentication, including whether it is active
   * and what factors can be used for the second factor
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig mfa;

  /**
   * Configuration related to monitoring project activity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2MonitoringConfig monitoring;

  /**
   * Configuration related to multi-tenant functionality.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig multiTenant;

  /**
   * Output only. The name of the Config resource. Example: "projects/my-awesome-project/config"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Configuration related to sending notifications to users.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2NotificationConfig notification;

  /**
   * Configuration related to quotas.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2QuotaConfig quota;

  /**
   * Configuration related to local sign in methods.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2SignInConfig signIn;

  /**
   * Configures which regions are enabled for SMS verification code sending.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig smsRegionConfig;

  /**
   * Output only. The subtype of this config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subtype;

  /**
   * List of domains authorized for OAuth redirects
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAuthorizedDomains() {
    return authorizedDomains;
  }

  /**
   * List of domains authorized for OAuth redirects
   * @param authorizedDomains authorizedDomains or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setAuthorizedDomains(java.util.List<java.lang.String> authorizedDomains) {
    this.authorizedDomains = authorizedDomains;
    return this;
  }

  /**
   * Whether anonymous users will be auto-deleted after a period of 30 days.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAutodeleteAnonymousUsers() {
    return autodeleteAnonymousUsers;
  }

  /**
   * Whether anonymous users will be auto-deleted after a period of 30 days.
   * @param autodeleteAnonymousUsers autodeleteAnonymousUsers or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setAutodeleteAnonymousUsers(java.lang.Boolean autodeleteAnonymousUsers) {
    this.autodeleteAnonymousUsers = autodeleteAnonymousUsers;
    return this;
  }

  /**
   * Configuration related to blocking functions.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig getBlockingFunctions() {
    return blockingFunctions;
  }

  /**
   * Configuration related to blocking functions.
   * @param blockingFunctions blockingFunctions or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setBlockingFunctions(GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig blockingFunctions) {
    this.blockingFunctions = blockingFunctions;
    return this;
  }

  /**
   * Options related to how clients making requests on behalf of a project should be configured.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2ClientConfig getClient() {
    return client;
  }

  /**
   * Options related to how clients making requests on behalf of a project should be configured.
   * @param client client or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setClient(GoogleCloudIdentitytoolkitAdminV2ClientConfig client) {
    this.client = client;
    return this;
  }

  /**
   * Configuration for settings related to email privacy and public visibility.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig getEmailPrivacyConfig() {
    return emailPrivacyConfig;
  }

  /**
   * Configuration for settings related to email privacy and public visibility.
   * @param emailPrivacyConfig emailPrivacyConfig or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setEmailPrivacyConfig(GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig emailPrivacyConfig) {
    this.emailPrivacyConfig = emailPrivacyConfig;
    return this;
  }

  /**
   * Configuration for this project's multi-factor authentication, including whether it is active
   * and what factors can be used for the second factor
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig getMfa() {
    return mfa;
  }

  /**
   * Configuration for this project's multi-factor authentication, including whether it is active
   * and what factors can be used for the second factor
   * @param mfa mfa or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setMfa(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig mfa) {
    this.mfa = mfa;
    return this;
  }

  /**
   * Configuration related to monitoring project activity.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2MonitoringConfig getMonitoring() {
    return monitoring;
  }

  /**
   * Configuration related to monitoring project activity.
   * @param monitoring monitoring or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setMonitoring(GoogleCloudIdentitytoolkitAdminV2MonitoringConfig monitoring) {
    this.monitoring = monitoring;
    return this;
  }

  /**
   * Configuration related to multi-tenant functionality.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig getMultiTenant() {
    return multiTenant;
  }

  /**
   * Configuration related to multi-tenant functionality.
   * @param multiTenant multiTenant or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setMultiTenant(GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig multiTenant) {
    this.multiTenant = multiTenant;
    return this;
  }

  /**
   * Output only. The name of the Config resource. Example: "projects/my-awesome-project/config"
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The name of the Config resource. Example: "projects/my-awesome-project/config"
   * @param name name or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Configuration related to sending notifications to users.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2NotificationConfig getNotification() {
    return notification;
  }

  /**
   * Configuration related to sending notifications to users.
   * @param notification notification or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setNotification(GoogleCloudIdentitytoolkitAdminV2NotificationConfig notification) {
    this.notification = notification;
    return this;
  }

  /**
   * Configuration related to quotas.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2QuotaConfig getQuota() {
    return quota;
  }

  /**
   * Configuration related to quotas.
   * @param quota quota or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setQuota(GoogleCloudIdentitytoolkitAdminV2QuotaConfig quota) {
    this.quota = quota;
    return this;
  }

  /**
   * Configuration related to local sign in methods.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2SignInConfig getSignIn() {
    return signIn;
  }

  /**
   * Configuration related to local sign in methods.
   * @param signIn signIn or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setSignIn(GoogleCloudIdentitytoolkitAdminV2SignInConfig signIn) {
    this.signIn = signIn;
    return this;
  }

  /**
   * Configures which regions are enabled for SMS verification code sending.
   * @return value or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig getSmsRegionConfig() {
    return smsRegionConfig;
  }

  /**
   * Configures which regions are enabled for SMS verification code sending.
   * @param smsRegionConfig smsRegionConfig or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setSmsRegionConfig(GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig smsRegionConfig) {
    this.smsRegionConfig = smsRegionConfig;
    return this;
  }

  /**
   * Output only. The subtype of this config.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubtype() {
    return subtype;
  }

  /**
   * Output only. The subtype of this config.
   * @param subtype subtype or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitAdminV2Config setSubtype(java.lang.String subtype) {
    this.subtype = subtype;
    return this;
  }

  @Override
  public GoogleCloudIdentitytoolkitAdminV2Config set(String fieldName, Object value) {
    return (GoogleCloudIdentitytoolkitAdminV2Config) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIdentitytoolkitAdminV2Config clone() {
    return (GoogleCloudIdentitytoolkitAdminV2Config) super.clone();
  }

}
