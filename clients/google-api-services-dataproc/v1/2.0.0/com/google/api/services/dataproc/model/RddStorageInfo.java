/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * Overall data about RDD storage.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RddStorageInfo extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RddDataDistribution> dataDistribution;

  static {
    // hack to force ProGuard to consider RddDataDistribution used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RddDataDistribution.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long diskUsed;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long memoryUsed;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numCachedPartitions;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numPartitions;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RddPartitionInfo> partitions;

  static {
    // hack to force ProGuard to consider RddPartitionInfo used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RddPartitionInfo.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer rddStorageId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storageLevel;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<RddDataDistribution> getDataDistribution() {
    return dataDistribution;
  }

  /**
   * @param dataDistribution dataDistribution or {@code null} for none
   */
  public RddStorageInfo setDataDistribution(java.util.List<RddDataDistribution> dataDistribution) {
    this.dataDistribution = dataDistribution;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getDiskUsed() {
    return diskUsed;
  }

  /**
   * @param diskUsed diskUsed or {@code null} for none
   */
  public RddStorageInfo setDiskUsed(java.lang.Long diskUsed) {
    this.diskUsed = diskUsed;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getMemoryUsed() {
    return memoryUsed;
  }

  /**
   * @param memoryUsed memoryUsed or {@code null} for none
   */
  public RddStorageInfo setMemoryUsed(java.lang.Long memoryUsed) {
    this.memoryUsed = memoryUsed;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public RddStorageInfo setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumCachedPartitions() {
    return numCachedPartitions;
  }

  /**
   * @param numCachedPartitions numCachedPartitions or {@code null} for none
   */
  public RddStorageInfo setNumCachedPartitions(java.lang.Integer numCachedPartitions) {
    this.numCachedPartitions = numCachedPartitions;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumPartitions() {
    return numPartitions;
  }

  /**
   * @param numPartitions numPartitions or {@code null} for none
   */
  public RddStorageInfo setNumPartitions(java.lang.Integer numPartitions) {
    this.numPartitions = numPartitions;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<RddPartitionInfo> getPartitions() {
    return partitions;
  }

  /**
   * @param partitions partitions or {@code null} for none
   */
  public RddStorageInfo setPartitions(java.util.List<RddPartitionInfo> partitions) {
    this.partitions = partitions;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRddStorageId() {
    return rddStorageId;
  }

  /**
   * @param rddStorageId rddStorageId or {@code null} for none
   */
  public RddStorageInfo setRddStorageId(java.lang.Integer rddStorageId) {
    this.rddStorageId = rddStorageId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getStorageLevel() {
    return storageLevel;
  }

  /**
   * @param storageLevel storageLevel or {@code null} for none
   */
  public RddStorageInfo setStorageLevel(java.lang.String storageLevel) {
    this.storageLevel = storageLevel;
    return this;
  }

  @Override
  public RddStorageInfo set(String fieldName, Object value) {
    return (RddStorageInfo) super.set(fieldName, value);
  }

  @Override
  public RddStorageInfo clone() {
    return (RddStorageInfo) super.clone();
  }

}
