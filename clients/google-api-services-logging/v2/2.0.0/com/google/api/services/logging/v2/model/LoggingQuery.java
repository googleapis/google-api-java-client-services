/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.logging.v2.model;

/**
 * Describes a Cloud Logging query that can be run in Logs Explorer UI or via the logging API.In
 * addition to the query itself, additional information may be stored to capture the display
 * configuration and other UI state used in association with analysis of query results.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Logging API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LoggingQuery extends com.google.api.client.json.GenericJson {

  /**
   * Required. An advanced query using the Logging Query Language
   * (https://cloud.google.com/logging/docs/view/logging-query-language). The maximum length of the
   * filter is 20000 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * Characters will be counted from the end of the string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer summaryFieldEnd;

  /**
   * Characters will be counted from the start of the string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer summaryFieldStart;

  /**
   * Optional. The set of summary fields to display for this saved query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SummaryField> summaryFields;

  /**
   * Required. An advanced query using the Logging Query Language
   * (https://cloud.google.com/logging/docs/view/logging-query-language). The maximum length of the
   * filter is 20000 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * Required. An advanced query using the Logging Query Language
   * (https://cloud.google.com/logging/docs/view/logging-query-language). The maximum length of the
   * filter is 20000 characters.
   * @param filter filter or {@code null} for none
   */
  public LoggingQuery setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Characters will be counted from the end of the string.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSummaryFieldEnd() {
    return summaryFieldEnd;
  }

  /**
   * Characters will be counted from the end of the string.
   * @param summaryFieldEnd summaryFieldEnd or {@code null} for none
   */
  public LoggingQuery setSummaryFieldEnd(java.lang.Integer summaryFieldEnd) {
    this.summaryFieldEnd = summaryFieldEnd;
    return this;
  }

  /**
   * Characters will be counted from the start of the string.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSummaryFieldStart() {
    return summaryFieldStart;
  }

  /**
   * Characters will be counted from the start of the string.
   * @param summaryFieldStart summaryFieldStart or {@code null} for none
   */
  public LoggingQuery setSummaryFieldStart(java.lang.Integer summaryFieldStart) {
    this.summaryFieldStart = summaryFieldStart;
    return this;
  }

  /**
   * Optional. The set of summary fields to display for this saved query.
   * @return value or {@code null} for none
   */
  public java.util.List<SummaryField> getSummaryFields() {
    return summaryFields;
  }

  /**
   * Optional. The set of summary fields to display for this saved query.
   * @param summaryFields summaryFields or {@code null} for none
   */
  public LoggingQuery setSummaryFields(java.util.List<SummaryField> summaryFields) {
    this.summaryFields = summaryFields;
    return this;
  }

  @Override
  public LoggingQuery set(String fieldName, Object value) {
    return (LoggingQuery) super.set(fieldName, value);
  }

  @Override
  public LoggingQuery clone() {
    return (LoggingQuery) super.clone();
  }

}
