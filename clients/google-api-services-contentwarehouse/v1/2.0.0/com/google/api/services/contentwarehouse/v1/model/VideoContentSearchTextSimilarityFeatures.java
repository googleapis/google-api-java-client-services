/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for VideoContentSearchTextSimilarityFeatures.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoContentSearchTextSimilarityFeatures extends com.google.api.client.json.GenericJson {

  /**
   * The hypothesis text that was used for the token overlap calculation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hypothesisText;

  /**
   * The time in ms for the hypothesis_text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long hypothesisTextTime;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String referenceText;

  /**
   * Similarity scorer name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scoringMethodName;

  /**
   * The similarity score given by the scoring method specified by the message scoring_method_name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float similarityScore;

  /**
   * Token by token matching stats. Exact matched token count.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer tokenMatchCount;

  /**
   * The token_overlap_count divided by the number of tokens in the hypothesis text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float tokenMatchPercent;

  /**
   * Word by word alignment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<VideoContentSearchTokenAlignment> wordAlignment;

  /**
   * The hypothesis text that was used for the token overlap calculation.
   * @return value or {@code null} for none
   */
  public java.lang.String getHypothesisText() {
    return hypothesisText;
  }

  /**
   * The hypothesis text that was used for the token overlap calculation.
   * @param hypothesisText hypothesisText or {@code null} for none
   */
  public VideoContentSearchTextSimilarityFeatures setHypothesisText(java.lang.String hypothesisText) {
    this.hypothesisText = hypothesisText;
    return this;
  }

  /**
   * The time in ms for the hypothesis_text.
   * @return value or {@code null} for none
   */
  public java.lang.Long getHypothesisTextTime() {
    return hypothesisTextTime;
  }

  /**
   * The time in ms for the hypothesis_text.
   * @param hypothesisTextTime hypothesisTextTime or {@code null} for none
   */
  public VideoContentSearchTextSimilarityFeatures setHypothesisTextTime(java.lang.Long hypothesisTextTime) {
    this.hypothesisTextTime = hypothesisTextTime;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getReferenceText() {
    return referenceText;
  }

  /**
   * @param referenceText referenceText or {@code null} for none
   */
  public VideoContentSearchTextSimilarityFeatures setReferenceText(java.lang.String referenceText) {
    this.referenceText = referenceText;
    return this;
  }

  /**
   * Similarity scorer name.
   * @return value or {@code null} for none
   */
  public java.lang.String getScoringMethodName() {
    return scoringMethodName;
  }

  /**
   * Similarity scorer name.
   * @param scoringMethodName scoringMethodName or {@code null} for none
   */
  public VideoContentSearchTextSimilarityFeatures setScoringMethodName(java.lang.String scoringMethodName) {
    this.scoringMethodName = scoringMethodName;
    return this;
  }

  /**
   * The similarity score given by the scoring method specified by the message scoring_method_name.
   * @return value or {@code null} for none
   */
  public java.lang.Float getSimilarityScore() {
    return similarityScore;
  }

  /**
   * The similarity score given by the scoring method specified by the message scoring_method_name.
   * @param similarityScore similarityScore or {@code null} for none
   */
  public VideoContentSearchTextSimilarityFeatures setSimilarityScore(java.lang.Float similarityScore) {
    this.similarityScore = similarityScore;
    return this;
  }

  /**
   * Token by token matching stats. Exact matched token count.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTokenMatchCount() {
    return tokenMatchCount;
  }

  /**
   * Token by token matching stats. Exact matched token count.
   * @param tokenMatchCount tokenMatchCount or {@code null} for none
   */
  public VideoContentSearchTextSimilarityFeatures setTokenMatchCount(java.lang.Integer tokenMatchCount) {
    this.tokenMatchCount = tokenMatchCount;
    return this;
  }

  /**
   * The token_overlap_count divided by the number of tokens in the hypothesis text.
   * @return value or {@code null} for none
   */
  public java.lang.Float getTokenMatchPercent() {
    return tokenMatchPercent;
  }

  /**
   * The token_overlap_count divided by the number of tokens in the hypothesis text.
   * @param tokenMatchPercent tokenMatchPercent or {@code null} for none
   */
  public VideoContentSearchTextSimilarityFeatures setTokenMatchPercent(java.lang.Float tokenMatchPercent) {
    this.tokenMatchPercent = tokenMatchPercent;
    return this;
  }

  /**
   * Word by word alignment.
   * @return value or {@code null} for none
   */
  public java.util.List<VideoContentSearchTokenAlignment> getWordAlignment() {
    return wordAlignment;
  }

  /**
   * Word by word alignment.
   * @param wordAlignment wordAlignment or {@code null} for none
   */
  public VideoContentSearchTextSimilarityFeatures setWordAlignment(java.util.List<VideoContentSearchTokenAlignment> wordAlignment) {
    this.wordAlignment = wordAlignment;
    return this;
  }

  @Override
  public VideoContentSearchTextSimilarityFeatures set(String fieldName, Object value) {
    return (VideoContentSearchTextSimilarityFeatures) super.set(fieldName, value);
  }

  @Override
  public VideoContentSearchTextSimilarityFeatures clone() {
    return (VideoContentSearchTextSimilarityFeatures) super.clone();
  }

}
