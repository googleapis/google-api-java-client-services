/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * a message containing information about the source of this triple. Note for freebase data: that
 * this is an unpacking of the creator/attribution chain. The creator below is the actual creator of
 * the attribution node, and the rest of the attribution data sits along side. Next id: 22
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StorageGraphBfgTripleProvenance extends com.google.api.client.json.GenericJson {

  /**
   * Data providers shall use this to specify access requirement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accessRequired;

  /**
   * For KE internal use only. Data providers shall *not* set this. At ingress, LG Record service
   * will read access_required and properly translate it to access_required_int. KE horizontal
   * systems shall use this field instead of access_required; so that binaries would not depend on
   * the release of a newly introduced AccessRequirement enum. (go/easy-ar-onboarding)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer accessRequiredInt;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long authoringTimestamp;

  /**
   * Freebase: the freebase user id in the form '/user/userid' KG: the Google LDAP of the developer
   * or MDB group that set up the triplification and import pipeline for this data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String creator;

  /**
   * Freebase & KG: the dataset the assertion was loaded from
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataset;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String extractionPattern;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long extractionTimestamp;

  /**
   * Below are deprecated Provenance fields. They are not indexed or served in KE infrastructure
   * (they are stripped at ingress in Livegraph).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String freebaseAttribution;

  /**
   * Indicates that the corresponding data is supporting evidence for reconciliation only, and is
   * *not* an assertion that should be visible to other systems or to external users. Note that this
   * also means that no provenances indicating supporting data will be visible in the composed
   * graph. Please see go/supporting-kg-triples-design-doc for additional details and background. If
   * a triple is sent to Livegraph with multiple provenances each of them must have
   * is_supporting_data bit set for it to be considered valid supporting evidence triple.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isSupportingData;

  /**
   * Internal metadata used by Livegraph and possibly other horizontal KG infra systems. This is not
   * part of the logical triple or its provenance, and contents may not be visible downstream of LG.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StorageGraphBfgLivegraphProvenanceMetadata lgMetadata;

  /**
   * Metadata specifying data governance policies. This information will be processed and enforced
   * in KE systems. For more context, see go/ke-triple-dg-policy-and-metadata. WARNING: This field
   * is WIP and please do not populate it without consulting ke-data-governance@.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StorageGraphBfgPolicyMetadata policyMetadata;

  /**
   * Used to uniquely identify data sources. Freebase: the OAuth application KG: the name of the
   * source directory the triple was loaded from (eg, "amg", "tms ", "collections"). KV: identifier
   * of an extraction system, e.g., SAFT or Tractzor.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String process;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Proto2BridgeMessageSet provenanceExtension;

  /**
   * 'ranking_token' (which must be accompanied by the 'process' field above or will be ignored) is
   * used to distinguish subsets of data within a single process, solely for the purposes of
   * composition in Livegraph. This field is useful when partitioning of data is needed, but using a
   * separate process is intractable due to organizational or infrastructure limitations. For
   * example, if a process such as "geo" wishes to distinguish some of their /type/object/name
   * triples as higher priority in Composer's conflict resolution rules, then they can add a config
   * entry with a dedicated ranking_token and tag the relevant triples with that ranking_token. This
   * field should only be used in conjunction with a Composer-side configuration to use it for value
   * selection. It is not appropriate to use this field as free-form metadata. This value must match
   * [[:alnum:]][[:alnum:]_-]{0,127} (i.e., [a-zA-Z0-9]+[a-zA-Z0-9_-]* and must be less than 128
   * characters in length) , or else its containing triple will be considered malformed and will be
   * rejected by Livegraph at ingress. As of 2018-02-14, this field is used within Livegraph's
   * Composer and is exposed in Livegraph's Lookup APIs to aid debugging, but it is not indexed or
   * served by TopicServer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rankingToken;

  /**
   * When specified as part of triples input to Livegraph (go/livegraph), this indicates that the
   * triple needs to be triangulated by 3 different sources before it can be served in production. A
   * triple's source is identified by its URL(provenance.source).host(). Please see go/baike-
   * triangulation for more background on this. WARNING: If you're a new client trying to enable
   * triangulation for your feed, please contact lg-composition@/kashk@ before using this feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean requiresTriangulation;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> restrictions;

  /**
   * Freebase & KG: if the triples were extracted from the web, the source URL where the assertion
   * was found. (generally empty in freebase-sourced triples) TopicServer will serve/populate/retain
   * if REQUIRES_CITATION is also set, or if the process is explicitly allowed. http://g/topic-
   * server/vn9PBWtVKqI/arQEDqKTAgAJ
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String source;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> sourceCategory;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> sourceDocId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StorageGraphBfgSpiiCertification spiiCertification;

  /**
   * Data providers shall use this to specify access requirement.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccessRequired() {
    return accessRequired;
  }

  /**
   * Data providers shall use this to specify access requirement.
   * @param accessRequired accessRequired or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setAccessRequired(java.lang.String accessRequired) {
    this.accessRequired = accessRequired;
    return this;
  }

  /**
   * For KE internal use only. Data providers shall *not* set this. At ingress, LG Record service
   * will read access_required and properly translate it to access_required_int. KE horizontal
   * systems shall use this field instead of access_required; so that binaries would not depend on
   * the release of a newly introduced AccessRequirement enum. (go/easy-ar-onboarding)
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAccessRequiredInt() {
    return accessRequiredInt;
  }

  /**
   * For KE internal use only. Data providers shall *not* set this. At ingress, LG Record service
   * will read access_required and properly translate it to access_required_int. KE horizontal
   * systems shall use this field instead of access_required; so that binaries would not depend on
   * the release of a newly introduced AccessRequirement enum. (go/easy-ar-onboarding)
   * @param accessRequiredInt accessRequiredInt or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setAccessRequiredInt(java.lang.Integer accessRequiredInt) {
    this.accessRequiredInt = accessRequiredInt;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getAuthoringTimestamp() {
    return authoringTimestamp;
  }

  /**
   * @param authoringTimestamp authoringTimestamp or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setAuthoringTimestamp(java.lang.Long authoringTimestamp) {
    this.authoringTimestamp = authoringTimestamp;
    return this;
  }

  /**
   * Freebase: the freebase user id in the form '/user/userid' KG: the Google LDAP of the developer
   * or MDB group that set up the triplification and import pipeline for this data source.
   * @return value or {@code null} for none
   */
  public java.lang.String getCreator() {
    return creator;
  }

  /**
   * Freebase: the freebase user id in the form '/user/userid' KG: the Google LDAP of the developer
   * or MDB group that set up the triplification and import pipeline for this data source.
   * @param creator creator or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setCreator(java.lang.String creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Freebase & KG: the dataset the assertion was loaded from
   * @return value or {@code null} for none
   */
  public java.lang.String getDataset() {
    return dataset;
  }

  /**
   * Freebase & KG: the dataset the assertion was loaded from
   * @param dataset dataset or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setDataset(java.lang.String dataset) {
    this.dataset = dataset;
    return this;
  }

  /**
   * @see #decodeExtractionPattern()
   * @return value or {@code null} for none
   */
  public java.lang.String getExtractionPattern() {
    return extractionPattern;
  }

  /**

   * @see #getExtractionPattern()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeExtractionPattern() {
    return com.google.api.client.util.Base64.decodeBase64(extractionPattern);
  }

  /**
   * @see #encodeExtractionPattern()
   * @param extractionPattern extractionPattern or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setExtractionPattern(java.lang.String extractionPattern) {
    this.extractionPattern = extractionPattern;
    return this;
  }

  /**

   * @see #setExtractionPattern()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public StorageGraphBfgTripleProvenance encodeExtractionPattern(byte[] extractionPattern) {
    this.extractionPattern = com.google.api.client.util.Base64.encodeBase64URLSafeString(extractionPattern);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getExtractionTimestamp() {
    return extractionTimestamp;
  }

  /**
   * @param extractionTimestamp extractionTimestamp or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setExtractionTimestamp(java.lang.Long extractionTimestamp) {
    this.extractionTimestamp = extractionTimestamp;
    return this;
  }

  /**
   * Below are deprecated Provenance fields. They are not indexed or served in KE infrastructure
   * (they are stripped at ingress in Livegraph).
   * @return value or {@code null} for none
   */
  public java.lang.String getFreebaseAttribution() {
    return freebaseAttribution;
  }

  /**
   * Below are deprecated Provenance fields. They are not indexed or served in KE infrastructure
   * (they are stripped at ingress in Livegraph).
   * @param freebaseAttribution freebaseAttribution or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setFreebaseAttribution(java.lang.String freebaseAttribution) {
    this.freebaseAttribution = freebaseAttribution;
    return this;
  }

  /**
   * Indicates that the corresponding data is supporting evidence for reconciliation only, and is
   * *not* an assertion that should be visible to other systems or to external users. Note that this
   * also means that no provenances indicating supporting data will be visible in the composed
   * graph. Please see go/supporting-kg-triples-design-doc for additional details and background. If
   * a triple is sent to Livegraph with multiple provenances each of them must have
   * is_supporting_data bit set for it to be considered valid supporting evidence triple.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsSupportingData() {
    return isSupportingData;
  }

  /**
   * Indicates that the corresponding data is supporting evidence for reconciliation only, and is
   * *not* an assertion that should be visible to other systems or to external users. Note that this
   * also means that no provenances indicating supporting data will be visible in the composed
   * graph. Please see go/supporting-kg-triples-design-doc for additional details and background. If
   * a triple is sent to Livegraph with multiple provenances each of them must have
   * is_supporting_data bit set for it to be considered valid supporting evidence triple.
   * @param isSupportingData isSupportingData or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setIsSupportingData(java.lang.Boolean isSupportingData) {
    this.isSupportingData = isSupportingData;
    return this;
  }

  /**
   * Internal metadata used by Livegraph and possibly other horizontal KG infra systems. This is not
   * part of the logical triple or its provenance, and contents may not be visible downstream of LG.
   * @return value or {@code null} for none
   */
  public StorageGraphBfgLivegraphProvenanceMetadata getLgMetadata() {
    return lgMetadata;
  }

  /**
   * Internal metadata used by Livegraph and possibly other horizontal KG infra systems. This is not
   * part of the logical triple or its provenance, and contents may not be visible downstream of LG.
   * @param lgMetadata lgMetadata or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setLgMetadata(StorageGraphBfgLivegraphProvenanceMetadata lgMetadata) {
    this.lgMetadata = lgMetadata;
    return this;
  }

  /**
   * Metadata specifying data governance policies. This information will be processed and enforced
   * in KE systems. For more context, see go/ke-triple-dg-policy-and-metadata. WARNING: This field
   * is WIP and please do not populate it without consulting ke-data-governance@.
   * @return value or {@code null} for none
   */
  public StorageGraphBfgPolicyMetadata getPolicyMetadata() {
    return policyMetadata;
  }

  /**
   * Metadata specifying data governance policies. This information will be processed and enforced
   * in KE systems. For more context, see go/ke-triple-dg-policy-and-metadata. WARNING: This field
   * is WIP and please do not populate it without consulting ke-data-governance@.
   * @param policyMetadata policyMetadata or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setPolicyMetadata(StorageGraphBfgPolicyMetadata policyMetadata) {
    this.policyMetadata = policyMetadata;
    return this;
  }

  /**
   * Used to uniquely identify data sources. Freebase: the OAuth application KG: the name of the
   * source directory the triple was loaded from (eg, "amg", "tms ", "collections"). KV: identifier
   * of an extraction system, e.g., SAFT or Tractzor.
   * @return value or {@code null} for none
   */
  public java.lang.String getProcess() {
    return process;
  }

  /**
   * Used to uniquely identify data sources. Freebase: the OAuth application KG: the name of the
   * source directory the triple was loaded from (eg, "amg", "tms ", "collections"). KV: identifier
   * of an extraction system, e.g., SAFT or Tractzor.
   * @param process process or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setProcess(java.lang.String process) {
    this.process = process;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Proto2BridgeMessageSet getProvenanceExtension() {
    return provenanceExtension;
  }

  /**
   * @param provenanceExtension provenanceExtension or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setProvenanceExtension(Proto2BridgeMessageSet provenanceExtension) {
    this.provenanceExtension = provenanceExtension;
    return this;
  }

  /**
   * 'ranking_token' (which must be accompanied by the 'process' field above or will be ignored) is
   * used to distinguish subsets of data within a single process, solely for the purposes of
   * composition in Livegraph. This field is useful when partitioning of data is needed, but using a
   * separate process is intractable due to organizational or infrastructure limitations. For
   * example, if a process such as "geo" wishes to distinguish some of their /type/object/name
   * triples as higher priority in Composer's conflict resolution rules, then they can add a config
   * entry with a dedicated ranking_token and tag the relevant triples with that ranking_token. This
   * field should only be used in conjunction with a Composer-side configuration to use it for value
   * selection. It is not appropriate to use this field as free-form metadata. This value must match
   * [[:alnum:]][[:alnum:]_-]{0,127} (i.e., [a-zA-Z0-9]+[a-zA-Z0-9_-]* and must be less than 128
   * characters in length) , or else its containing triple will be considered malformed and will be
   * rejected by Livegraph at ingress. As of 2018-02-14, this field is used within Livegraph's
   * Composer and is exposed in Livegraph's Lookup APIs to aid debugging, but it is not indexed or
   * served by TopicServer.
   * @return value or {@code null} for none
   */
  public java.lang.String getRankingToken() {
    return rankingToken;
  }

  /**
   * 'ranking_token' (which must be accompanied by the 'process' field above or will be ignored) is
   * used to distinguish subsets of data within a single process, solely for the purposes of
   * composition in Livegraph. This field is useful when partitioning of data is needed, but using a
   * separate process is intractable due to organizational or infrastructure limitations. For
   * example, if a process such as "geo" wishes to distinguish some of their /type/object/name
   * triples as higher priority in Composer's conflict resolution rules, then they can add a config
   * entry with a dedicated ranking_token and tag the relevant triples with that ranking_token. This
   * field should only be used in conjunction with a Composer-side configuration to use it for value
   * selection. It is not appropriate to use this field as free-form metadata. This value must match
   * [[:alnum:]][[:alnum:]_-]{0,127} (i.e., [a-zA-Z0-9]+[a-zA-Z0-9_-]* and must be less than 128
   * characters in length) , or else its containing triple will be considered malformed and will be
   * rejected by Livegraph at ingress. As of 2018-02-14, this field is used within Livegraph's
   * Composer and is exposed in Livegraph's Lookup APIs to aid debugging, but it is not indexed or
   * served by TopicServer.
   * @param rankingToken rankingToken or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setRankingToken(java.lang.String rankingToken) {
    this.rankingToken = rankingToken;
    return this;
  }

  /**
   * When specified as part of triples input to Livegraph (go/livegraph), this indicates that the
   * triple needs to be triangulated by 3 different sources before it can be served in production. A
   * triple's source is identified by its URL(provenance.source).host(). Please see go/baike-
   * triangulation for more background on this. WARNING: If you're a new client trying to enable
   * triangulation for your feed, please contact lg-composition@/kashk@ before using this feature.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRequiresTriangulation() {
    return requiresTriangulation;
  }

  /**
   * When specified as part of triples input to Livegraph (go/livegraph), this indicates that the
   * triple needs to be triangulated by 3 different sources before it can be served in production. A
   * triple's source is identified by its URL(provenance.source).host(). Please see go/baike-
   * triangulation for more background on this. WARNING: If you're a new client trying to enable
   * triangulation for your feed, please contact lg-composition@/kashk@ before using this feature.
   * @param requiresTriangulation requiresTriangulation or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setRequiresTriangulation(java.lang.Boolean requiresTriangulation) {
    this.requiresTriangulation = requiresTriangulation;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRestrictions() {
    return restrictions;
  }

  /**
   * @param restrictions restrictions or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setRestrictions(java.util.List<java.lang.String> restrictions) {
    this.restrictions = restrictions;
    return this;
  }

  /**
   * Freebase & KG: if the triples were extracted from the web, the source URL where the assertion
   * was found. (generally empty in freebase-sourced triples) TopicServer will serve/populate/retain
   * if REQUIRES_CITATION is also set, or if the process is explicitly allowed. http://g/topic-
   * server/vn9PBWtVKqI/arQEDqKTAgAJ
   * @return value or {@code null} for none
   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * Freebase & KG: if the triples were extracted from the web, the source URL where the assertion
   * was found. (generally empty in freebase-sourced triples) TopicServer will serve/populate/retain
   * if REQUIRES_CITATION is also set, or if the process is explicitly allowed. http://g/topic-
   * server/vn9PBWtVKqI/arQEDqKTAgAJ
   * @param source source or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setSource(java.lang.String source) {
    this.source = source;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSourceCategory() {
    return sourceCategory;
  }

  /**
   * @param sourceCategory sourceCategory or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setSourceCategory(java.util.List<java.lang.String> sourceCategory) {
    this.sourceCategory = sourceCategory;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getSourceDocId() {
    return sourceDocId;
  }

  /**
   * @param sourceDocId sourceDocId or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setSourceDocId(java.util.List<java.lang.Long> sourceDocId) {
    this.sourceDocId = sourceDocId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public StorageGraphBfgSpiiCertification getSpiiCertification() {
    return spiiCertification;
  }

  /**
   * @param spiiCertification spiiCertification or {@code null} for none
   */
  public StorageGraphBfgTripleProvenance setSpiiCertification(StorageGraphBfgSpiiCertification spiiCertification) {
    this.spiiCertification = spiiCertification;
    return this;
  }

  @Override
  public StorageGraphBfgTripleProvenance set(String fieldName, Object value) {
    return (StorageGraphBfgTripleProvenance) super.set(fieldName, value);
  }

  @Override
  public StorageGraphBfgTripleProvenance clone() {
    return (StorageGraphBfgTripleProvenance) super.clone();
  }

}
