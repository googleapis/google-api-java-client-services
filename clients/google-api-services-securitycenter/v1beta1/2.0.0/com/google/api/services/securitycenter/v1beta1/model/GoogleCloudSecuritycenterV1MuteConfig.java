/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securitycenter.v1beta1.model;

/**
 * A mute config is a Cloud SCC resource that contains the configuration to mute create/update
 * events of findings.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Security Command Center API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudSecuritycenterV1MuteConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The time at which the mute config was created. This field is set by the server and
   * will be ignored if provided on config creation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * A description of the mute config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The human readable name to be displayed for the mute config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Required. An expression that defines the filter to apply across create/update events of
   * findings. While creating a filter string, be mindful of the scope in which the mute
   * configuration is being created. E.g., If a filter contains project = X but is created under the
   * project = Y scope, it might not match any findings. The following field and operator
   * combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:`
   * * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` *
   * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` *
   * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` *
   * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * Output only. Email address of the user who last edited the mute config. This field is set by
   * the server and will be ignored if provided on config creation or update.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mostRecentEditor;

  /**
   * This field will be ignored if provided on config creation. Format
   * "organizations/{organization}/muteConfigs/{mute_config}"
   * "folders/{folder}/muteConfigs/{mute_config}" "projects/{project}/muteConfigs/{mute_config}"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The most recent time at which the mute config was updated. This field is set by
   * the server and will be ignored if provided on config creation or update.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The time at which the mute config was created. This field is set by the server and
   * will be ignored if provided on config creation.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time at which the mute config was created. This field is set by the server and
   * will be ignored if provided on config creation.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudSecuritycenterV1MuteConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * A description of the mute config.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A description of the mute config.
   * @param description description or {@code null} for none
   */
  public GoogleCloudSecuritycenterV1MuteConfig setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * The human readable name to be displayed for the mute config.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The human readable name to be displayed for the mute config.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudSecuritycenterV1MuteConfig setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. An expression that defines the filter to apply across create/update events of
   * findings. While creating a filter string, be mindful of the scope in which the mute
   * configuration is being created. E.g., If a filter contains project = X but is created under the
   * project = Y scope, it might not match any findings. The following field and operator
   * combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:`
   * * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` *
   * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` *
   * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` *
   * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * Required. An expression that defines the filter to apply across create/update events of
   * findings. While creating a filter string, be mindful of the scope in which the mute
   * configuration is being created. E.g., If a filter contains project = X but is created under the
   * project = Y scope, it might not match any findings. The following field and operator
   * combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:`
   * * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` *
   * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` *
   * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` *
   * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`
   * @param filter filter or {@code null} for none
   */
  public GoogleCloudSecuritycenterV1MuteConfig setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Output only. Email address of the user who last edited the mute config. This field is set by
   * the server and will be ignored if provided on config creation or update.
   * @return value or {@code null} for none
   */
  public java.lang.String getMostRecentEditor() {
    return mostRecentEditor;
  }

  /**
   * Output only. Email address of the user who last edited the mute config. This field is set by
   * the server and will be ignored if provided on config creation or update.
   * @param mostRecentEditor mostRecentEditor or {@code null} for none
   */
  public GoogleCloudSecuritycenterV1MuteConfig setMostRecentEditor(java.lang.String mostRecentEditor) {
    this.mostRecentEditor = mostRecentEditor;
    return this;
  }

  /**
   * This field will be ignored if provided on config creation. Format
   * "organizations/{organization}/muteConfigs/{mute_config}"
   * "folders/{folder}/muteConfigs/{mute_config}" "projects/{project}/muteConfigs/{mute_config}"
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * This field will be ignored if provided on config creation. Format
   * "organizations/{organization}/muteConfigs/{mute_config}"
   * "folders/{folder}/muteConfigs/{mute_config}" "projects/{project}/muteConfigs/{mute_config}"
   * @param name name or {@code null} for none
   */
  public GoogleCloudSecuritycenterV1MuteConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The most recent time at which the mute config was updated. This field is set by
   * the server and will be ignored if provided on config creation or update.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The most recent time at which the mute config was updated. This field is set by
   * the server and will be ignored if provided on config creation or update.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudSecuritycenterV1MuteConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudSecuritycenterV1MuteConfig set(String fieldName, Object value) {
    return (GoogleCloudSecuritycenterV1MuteConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudSecuritycenterV1MuteConfig clone() {
    return (GoogleCloudSecuritycenterV1MuteConfig) super.clone();
  }

}
