/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseml.v2beta.model;

/**
 * Response message for [PredictionService.GenerateContent].
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase ML API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GenerateContentResponse extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Generated candidates.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Candidate> candidates;

  static {
    // hack to force ProGuard to consider Candidate used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Candidate.class);
  }

  /**
   * Output only. Content filter results for a prompt sent in the request. Note: Sent only in the
   * first stream chunk. Only happens when no candidates were generated due to content violations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PromptFeedback promptFeedback;

  /**
   * Usage metadata about the response(s).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UsageMetadata usageMetadata;

  /**
   * Output only. Generated candidates.
   * @return value or {@code null} for none
   */
  public java.util.List<Candidate> getCandidates() {
    return candidates;
  }

  /**
   * Output only. Generated candidates.
   * @param candidates candidates or {@code null} for none
   */
  public GenerateContentResponse setCandidates(java.util.List<Candidate> candidates) {
    this.candidates = candidates;
    return this;
  }

  /**
   * Output only. Content filter results for a prompt sent in the request. Note: Sent only in the
   * first stream chunk. Only happens when no candidates were generated due to content violations.
   * @return value or {@code null} for none
   */
  public PromptFeedback getPromptFeedback() {
    return promptFeedback;
  }

  /**
   * Output only. Content filter results for a prompt sent in the request. Note: Sent only in the
   * first stream chunk. Only happens when no candidates were generated due to content violations.
   * @param promptFeedback promptFeedback or {@code null} for none
   */
  public GenerateContentResponse setPromptFeedback(PromptFeedback promptFeedback) {
    this.promptFeedback = promptFeedback;
    return this;
  }

  /**
   * Usage metadata about the response(s).
   * @return value or {@code null} for none
   */
  public UsageMetadata getUsageMetadata() {
    return usageMetadata;
  }

  /**
   * Usage metadata about the response(s).
   * @param usageMetadata usageMetadata or {@code null} for none
   */
  public GenerateContentResponse setUsageMetadata(UsageMetadata usageMetadata) {
    this.usageMetadata = usageMetadata;
    return this;
  }

  @Override
  public GenerateContentResponse set(String fieldName, Object value) {
    return (GenerateContentResponse) super.set(fieldName, value);
  }

  @Override
  public GenerateContentResponse clone() {
    return (GenerateContentResponse) super.clone();
  }

}
