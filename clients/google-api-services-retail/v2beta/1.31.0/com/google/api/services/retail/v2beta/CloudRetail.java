/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.retail.v2beta;

/**
 * Service definition for CloudRetail (v2beta).
 *
 * <p>
 * Cloud Retail service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/recommendations" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudRetailRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudRetail extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Retail API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://retail.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://retail.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudRetail(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudRetail(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudRetail retail = new CloudRetail(...);}
   *   {@code CloudRetail.Projects.List request = retail.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudRetail retail = new CloudRetail(...);}
     *   {@code CloudRetail.Locations.List request = retail.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the Catalogs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudRetail retail = new CloudRetail(...);}
       *   {@code CloudRetail.Catalogs.List request = retail.catalogs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Catalogs catalogs() {
        return new Catalogs();
      }

      /**
       * The "catalogs" collection of methods.
       */
      public class Catalogs {

        /**
         * Lists all the Catalogs associated with the project.
         *
         * Create a request for the method "catalogs.list".
         *
         * This request holds the parameters needed by the retail server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The account resource name with an associated location. If the caller does not have
         *        permission to list Catalogs under this location, regardless of whether or not this
         *        location exists, a PERMISSION_DENIED error is returned.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaListCatalogsResponse> {

          private static final String REST_PATH = "v2beta/{+parent}/catalogs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all the Catalogs associated with the project.
           *
           * Create a request for the method "catalogs.list".
           *
           * This request holds the parameters needed by the the retail server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The account resource name with an associated location. If the caller does not have
         *        permission to list Catalogs under this location, regardless of whether or not this
         *        location exists, a PERMISSION_DENIED error is returned.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudRetail.this, "GET", REST_PATH, null, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaListCatalogsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The account resource name with an associated location. If the caller does not
           * have permission to list Catalogs under this location, regardless of whether or not this
           * location exists, a PERMISSION_DENIED error is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The account resource name with an associated location. If the caller does not have
         permission to list Catalogs under this location, regardless of whether or not this location exists,
         a PERMISSION_DENIED error is returned.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The account resource name with an associated location. If the caller does not
           * have permission to list Catalogs under this location, regardless of whether or not this
           * location exists, a PERMISSION_DENIED error is returned.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Maximum number of Catalogs to return. If unspecified, defaults to 50. The maximum
           * allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is
           * negative, an INVALID_ARGUMENT is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of Catalogs to return. If unspecified, defaults to 50. The maximum allowed value is
         1000. Values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT is
         returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Maximum number of Catalogs to return. If unspecified, defaults to 50. The maximum
           * allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is
           * negative, an INVALID_ARGUMENT is returned.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token ListCatalogsResponse.next_page_token, received from a previous
           * CatalogService.ListCatalogs call. Provide this to retrieve the subsequent page. When
           * paginating, all other parameters provided to CatalogService.ListCatalogs must match the
           * call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token ListCatalogsResponse.next_page_token, received from a previous
         CatalogService.ListCatalogs call. Provide this to retrieve the subsequent page. When paginating,
         all other parameters provided to CatalogService.ListCatalogs must match the call that provided the
         page token. Otherwise, an INVALID_ARGUMENT error is returned.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token ListCatalogsResponse.next_page_token, received from a previous
           * CatalogService.ListCatalogs call. Provide this to retrieve the subsequent page. When
           * paginating, all other parameters provided to CatalogService.ListCatalogs must match the
           * call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the Catalogs.
         *
         * Create a request for the method "catalogs.patch".
         *
         * This request holds the parameters needed by the retail server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required. Immutable. The fully qualified resource name of the catalog.
         * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaCatalog}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaCatalog content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaCatalog> {

          private static final String REST_PATH = "v2beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");

          /**
           * Updates the Catalogs.
           *
           * Create a request for the method "catalogs.patch".
           *
           * This request holds the parameters needed by the the retail server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Immutable. The fully qualified resource name of the catalog.
           * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaCatalog}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaCatalog content) {
            super(CloudRetail.this, "PATCH", REST_PATH, content, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaCatalog.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Immutable. The fully qualified resource name of the catalog. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Immutable. The fully qualified resource name of the catalog.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Immutable. The fully qualified resource name of the catalog. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Indicates which fields in the provided Catalog to update. If not set, will only update
           * the Catalog.product_level_config field, which is also the only currently supported
           * field to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT
           * error is returned.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Indicates which fields in the provided Catalog to update. If not set, will only update the
         Catalog.product_level_config field, which is also the only currently supported field to update. If
         an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Indicates which fields in the provided Catalog to update. If not set, will only update
           * the Catalog.product_level_config field, which is also the only currently supported
           * field to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT
           * error is returned.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Branches collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudRetail retail = new CloudRetail(...);}
         *   {@code CloudRetail.Branches.List request = retail.branches().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Branches branches() {
          return new Branches();
        }

        /**
         * The "branches" collection of methods.
         */
        public class Branches {

          /**
           * An accessor for creating requests from the Operations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudRetail retail = new CloudRetail(...);}
           *   {@code CloudRetail.Operations.List request = retail.operations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Operations operations() {
            return new Operations();
          }

          /**
           * The "operations" collection of methods.
           */
          public class Operations {

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the retail server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name The name of the operation resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v2beta/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/operations/[^/]+$");

              /**
               * Gets the latest state of a long-running operation. Clients can use this method to poll the
               * operation result at intervals as recommended by the API service.
               *
               * Create a request for the method "operations.get".
               *
               * This request holds the parameters needed by the the retail server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
               * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The name of the operation resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudRetail.this, "GET", REST_PATH, null, com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/operations/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** The name of the operation resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The name of the operation resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** The name of the operation resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/operations/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Products collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudRetail retail = new CloudRetail(...);}
           *   {@code CloudRetail.Products.List request = retail.products().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Products products() {
            return new Products();
          }

          /**
           * The "products" collection of methods.
           */
          public class Products {

            /**
             * Creates a Product.
             *
             * Create a request for the method "products.create".
             *
             * This request holds the parameters needed by the retail server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent catalog resource name, such as
             *        `projects/locations/global/catalogs/default_catalog/branches/default_branch`.
             * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct> {

              private static final String REST_PATH = "v2beta/{+parent}/products";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$");

              /**
               * Creates a Product.
               *
               * Create a request for the method "products.create".
               *
               * This request holds the parameters needed by the the retail server.  After setting any optional
               * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent catalog resource name, such as
             *        `projects/locations/global/catalogs/default_catalog/branches/default_branch`.
               * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct content) {
                super(CloudRetail.this, "POST", REST_PATH, content, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent catalog resource name, such as
               * `projects/locations/global/catalogs/default_catalog/branches/default_branch`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent catalog resource name, such as
             `projects/locations/global/catalogs/default_catalog/branches/default_branch`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent catalog resource name, such as
               * `projects/locations/global/catalogs/default_catalog/branches/default_branch`.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The ID to use for the Product, which will become the final component of
               * the Product.name. If the caller does not have permission to create the Product,
               * regardless of whether or not it exists, a PERMISSION_DENIED error is returned. This
               * field must be unique among all Products with the same parent. Otherwise, an
               * ALREADY_EXISTS error is returned. This field must be a UTF-8 encoded string with a
               * length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String productId;

              /** Required. The ID to use for the Product, which will become the final component of the Product.name.
             If the caller does not have permission to create the Product, regardless of whether or not it
             exists, a PERMISSION_DENIED error is returned. This field must be unique among all Products with
             the same parent. Otherwise, an ALREADY_EXISTS error is returned. This field must be a UTF-8 encoded
             string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
               */
              public java.lang.String getProductId() {
                return productId;
              }

              /**
               * Required. The ID to use for the Product, which will become the final component of
               * the Product.name. If the caller does not have permission to create the Product,
               * regardless of whether or not it exists, a PERMISSION_DENIED error is returned. This
               * field must be unique among all Products with the same parent. Otherwise, an
               * ALREADY_EXISTS error is returned. This field must be a UTF-8 encoded string with a
               * length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
               */
              public Create setProductId(java.lang.String productId) {
                this.productId = productId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a Product.
             *
             * Create a request for the method "products.delete".
             *
             * This request holds the parameters needed by the retail server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. Full resource name of Product, such as `projects/locations/global/catalogs/default_catalog
             *        /branches/default_branch/products/some_product_id`. If the caller does not have permission
             *        to delete the Product, regardless of whether or not it exists, a PERMISSION_DENIED error
             *        is returned. If the Product to delete does not exist, a NOT_FOUND error is returned. The
             *        Product to delete can neither be a Product.Type.COLLECTION Product member nor a
             *        Product.Type.PRIMARY Product with more than one variants. Otherwise, an INVALID_ARGUMENT
             *        error is returned.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v2beta/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$");

              /**
               * Deletes a Product.
               *
               * Create a request for the method "products.delete".
               *
               * This request holds the parameters needed by the the retail server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Full resource name of Product, such as `projects/locations/global/catalogs/default_catalog
             *        /branches/default_branch/products/some_product_id`. If the caller does not have permission
             *        to delete the Product, regardless of whether or not it exists, a PERMISSION_DENIED error
             *        is returned. If the Product to delete does not exist, a NOT_FOUND error is returned. The
             *        Product to delete can neither be a Product.Type.COLLECTION Product member nor a
             *        Product.Type.PRIMARY Product with more than one variants. Otherwise, an INVALID_ARGUMENT
             *        error is returned.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudRetail.this, "DELETE", REST_PATH, null, com.google.api.services.retail.v2beta.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of Product, such as `projects/locations/global/catalog
               * s/default_catalog/branches/default_branch/products/some_product_id`. If the caller
               * does not have permission to delete the Product, regardless of whether or not it
               * exists, a PERMISSION_DENIED error is returned. If the Product to delete does not
               * exist, a NOT_FOUND error is returned. The Product to delete can neither be a
               * Product.Type.COLLECTION Product member nor a Product.Type.PRIMARY Product with more
               * than one variants. Otherwise, an INVALID_ARGUMENT error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Full resource name of Product, such as `projects/locations/global/catalogs/default_catalo
             g/branches/default_branch/products/some_product_id`. If the caller does not have permission to
             delete the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned.
             If the Product to delete does not exist, a NOT_FOUND error is returned. The Product to delete can
             neither be a Product.Type.COLLECTION Product member nor a Product.Type.PRIMARY Product with more
             than one variants. Otherwise, an INVALID_ARGUMENT error is returned.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Full resource name of Product, such as `projects/locations/global/catalog
               * s/default_catalog/branches/default_branch/products/some_product_id`. If the caller
               * does not have permission to delete the Product, regardless of whether or not it
               * exists, a PERMISSION_DENIED error is returned. If the Product to delete does not
               * exist, a NOT_FOUND error is returned. The Product to delete can neither be a
               * Product.Type.COLLECTION Product member nor a Product.Type.PRIMARY Product with more
               * than one variants. Otherwise, an INVALID_ARGUMENT error is returned.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets a Product.
             *
             * Create a request for the method "products.get".
             *
             * This request holds the parameters needed by the retail server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. Full resource name of Product, such as `projects/locations/global/catalogs/default_catalog
             *        /branches/default_branch/products/some_product_id`. If the caller does not have permission
             *        to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error
             *        is returned. If the requested Product does not exist, a NOT_FOUND error is returned.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct> {

              private static final String REST_PATH = "v2beta/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$");

              /**
               * Gets a Product.
               *
               * Create a request for the method "products.get".
               *
               * This request holds the parameters needed by the the retail server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
               * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Full resource name of Product, such as `projects/locations/global/catalogs/default_catalog
             *        /branches/default_branch/products/some_product_id`. If the caller does not have permission
             *        to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error
             *        is returned. If the requested Product does not exist, a NOT_FOUND error is returned.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudRetail.this, "GET", REST_PATH, null, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Full resource name of Product, such as `projects/locations/global/catalog
               * s/default_catalog/branches/default_branch/products/some_product_id`. If the caller
               * does not have permission to access the Product, regardless of whether or not it
               * exists, a PERMISSION_DENIED error is returned. If the requested Product does not
               * exist, a NOT_FOUND error is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Full resource name of Product, such as `projects/locations/global/catalogs/default_catalo
             g/branches/default_branch/products/some_product_id`. If the caller does not have permission to
             access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned.
             If the requested Product does not exist, a NOT_FOUND error is returned.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Full resource name of Product, such as `projects/locations/global/catalog
               * s/default_catalog/branches/default_branch/products/some_product_id`. If the caller
               * does not have permission to access the Product, regardless of whether or not it
               * exists, a PERMISSION_DENIED error is returned. If the requested Product does not
               * exist, a NOT_FOUND error is returned.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Bulk import of multiple Products. Request processing may be synchronous. No partial updating is
             * supported. Non-existing items are created. Note that it is possible for a subset of the Products
             * to be successfully updated.
             *
             * Create a request for the method "products.import".
             *
             * This request holds the parameters needed by the retail server.  After setting any optional
             * parameters, call the {@link CloudRetailImport#execute()} method to invoke the remote operation.
             *
             * @param parent Required. `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch` If no
             *        updateMask is specified, requires products.create permission. If updateMask is specified,
             *        requires products.update permission.
             * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaImportProductsRequest}
             * @return the request
             */
            public CloudRetailImport retailImport(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaImportProductsRequest content) throws java.io.IOException {
              CloudRetailImport result = new CloudRetailImport(parent, content);
              initialize(result);
              return result;
            }

            public class CloudRetailImport extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v2beta/{+parent}/products:import";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$");

              /**
               * Bulk import of multiple Products. Request processing may be synchronous. No partial updating is
               * supported. Non-existing items are created. Note that it is possible for a subset of the
               * Products to be successfully updated.
               *
               * Create a request for the method "products.import".
               *
               * This request holds the parameters needed by the the retail server.  After setting any optional
               * parameters, call the {@link CloudRetailImport#execute()} method to invoke the remote operation.
               * <p> {@link CloudRetailImport#initialize(com.google.api.client.googleapis.services.AbstractGoogl
               * eClientRequest)} must be called to initialize this instance immediately after invoking the
               * constructor. </p>
               *
               * @param parent Required. `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch` If no
             *        updateMask is specified, requires products.create permission. If updateMask is specified,
             *        requires products.update permission.
               * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaImportProductsRequest}
               * @since 1.13
               */
              protected CloudRetailImport(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaImportProductsRequest content) {
                super(CloudRetail.this, "POST", REST_PATH, content, com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$");
                }
              }

              @Override
              public CloudRetailImport set$Xgafv(java.lang.String $Xgafv) {
                return (CloudRetailImport) super.set$Xgafv($Xgafv);
              }

              @Override
              public CloudRetailImport setAccessToken(java.lang.String accessToken) {
                return (CloudRetailImport) super.setAccessToken(accessToken);
              }

              @Override
              public CloudRetailImport setAlt(java.lang.String alt) {
                return (CloudRetailImport) super.setAlt(alt);
              }

              @Override
              public CloudRetailImport setCallback(java.lang.String callback) {
                return (CloudRetailImport) super.setCallback(callback);
              }

              @Override
              public CloudRetailImport setFields(java.lang.String fields) {
                return (CloudRetailImport) super.setFields(fields);
              }

              @Override
              public CloudRetailImport setKey(java.lang.String key) {
                return (CloudRetailImport) super.setKey(key);
              }

              @Override
              public CloudRetailImport setOauthToken(java.lang.String oauthToken) {
                return (CloudRetailImport) super.setOauthToken(oauthToken);
              }

              @Override
              public CloudRetailImport setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (CloudRetailImport) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public CloudRetailImport setQuotaUser(java.lang.String quotaUser) {
                return (CloudRetailImport) super.setQuotaUser(quotaUser);
              }

              @Override
              public CloudRetailImport setUploadType(java.lang.String uploadType) {
                return (CloudRetailImport) super.setUploadType(uploadType);
              }

              @Override
              public CloudRetailImport setUploadProtocol(java.lang.String uploadProtocol) {
                return (CloudRetailImport) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required.
               * `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch`
               * If no updateMask is specified, requires products.create permission. If updateMask
               * is specified, requires products.update permission.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch` If no
             updateMask is specified, requires products.create permission. If updateMask is specified, requires
             products.update permission.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required.
               * `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch`
               * If no updateMask is specified, requires products.create permission. If updateMask
               * is specified, requires products.update permission.
               */
              public CloudRetailImport setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public CloudRetailImport set(String parameterName, Object value) {
                return (CloudRetailImport) super.set(parameterName, value);
              }
            }
            /**
             * Updates a Product.
             *
             * Create a request for the method "products.patch".
             *
             * This request holds the parameters needed by the retail server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. Full resource name of the product, such as
             *        `projects/locations/global/catalogs/default_catalog/branches/default_branch/products/produ
             *        ct_id`. The branch ID must be "default_branch".
             * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct> {

              private static final String REST_PATH = "v2beta/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$");

              /**
               * Updates a Product.
               *
               * Create a request for the method "products.patch".
               *
               * This request holds the parameters needed by the the retail server.  After setting any optional
               * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. Full resource name of the product, such as
             *        `projects/locations/global/catalogs/default_catalog/branches/default_branch/products/produ
             *        ct_id`. The branch ID must be "default_branch".
               * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct content) {
                super(CloudRetail.this, "PATCH", REST_PATH, content, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaProduct.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. Full resource name of the product, such as `projects/locations/global/ca
               * talogs/default_catalog/branches/default_branch/products/product_id`. The branch ID
               * must be "default_branch".
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. Full resource name of the product, such as
             `projects/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
             The branch ID must be "default_branch".
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. Full resource name of the product, such as `projects/locations/global/ca
               * talogs/default_catalog/branches/default_branch/products/product_id`. The branch ID
               * must be "default_branch".
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$");
                }
                this.name = name;
                return this;
              }

              /**
               * If set to true, and the Product is not found, a new Product will be created. In
               * this situation, `update_mask` is ignored.
               */
              @com.google.api.client.util.Key
              private java.lang.Boolean allowMissing;

              /** If set to true, and the Product is not found, a new Product will be created. In this situation,
             `update_mask` is ignored.
               */
              public java.lang.Boolean getAllowMissing() {
                return allowMissing;
              }

              /**
               * If set to true, and the Product is not found, a new Product will be created. In
               * this situation, `update_mask` is ignored.
               */
              public Patch setAllowMissing(java.lang.Boolean allowMissing) {
                this.allowMissing = allowMissing;
                return this;
              }

              /**
               * Indicates which fields in the provided Product to update. The immutable and output
               * only fields are NOT supported. If not set, all supported fields (the fields that
               * are neither immutable nor output only) are updated. If an unsupported or unknown
               * field is provided, an INVALID_ARGUMENT error is returned.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Indicates which fields in the provided Product to update. The immutable and output only fields are
             NOT supported. If not set, all supported fields (the fields that are neither immutable nor output
             only) are updated. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is
             returned.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Indicates which fields in the provided Product to update. The immutable and output
               * only fields are NOT supported. If not set, all supported fields (the fields that
               * are neither immutable nor output only) are updated. If an unsupported or unknown
               * field is provided, an INVALID_ARGUMENT error is returned.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudRetail retail = new CloudRetail(...);}
         *   {@code CloudRetail.Operations.List request = retail.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the retail server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the retail server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudRetail.this, "GET", REST_PATH, null, com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override
           * the binding to use different resource name schemes, such as `users/operations`. To override the
           * binding, API services can add a binding such as `"/v1/{name=users}/operations"` to their service
           * configuration. For backwards compatibility, the default name includes the operations collection
           * id, however overriding users must ensure the name binding is the parent resource, without the
           * operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the retail server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleLongrunningListOperationsResponse> {

            private static final String REST_PATH = "v2beta/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
             * override the binding to use different resource name schemes, such as `users/operations`. To
             * override the binding, API services can add a binding such as `"/v1/{name=users}/operations"` to
             * their service configuration. For backwards compatibility, the default name includes the
             * operations collection id, however overriding users must ensure the name binding is the parent
             * resource, without the operations collection id.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the retail server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(CloudRetail.this, "GET", REST_PATH, null, com.google.api.services.retail.v2beta.model.GoogleLongrunningListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Placements collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudRetail retail = new CloudRetail(...);}
         *   {@code CloudRetail.Placements.List request = retail.placements().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Placements placements() {
          return new Placements();
        }

        /**
         * The "placements" collection of methods.
         */
        public class Placements {

          /**
           * Makes a recommendation prediction.
           *
           * Create a request for the method "placements.predict".
           *
           * This request holds the parameters needed by the retail server.  After setting any optional
           * parameters, call the {@link Predict#execute()} method to invoke the remote operation.
           *
           * @param placement Required. Full resource name of the format:
           *        {name=projects/locations/global/catalogs/default_catalog/placements} The id of the
           *        recommendation engine placement. This id is used to identify the set of models that will
           *        be used to make the prediction. We currently support three placements with the following
           *        IDs by default: * `shopping_cart`: Predicts products frequently bought together with one
           *        or more products in the same shopping session. Commonly displayed after `add-to-cart`
           *        events, on product detail pages, or on the shopping cart page. * `home_page`: Predicts the
           *        next product that a user will most likely engage with or purchase based on the shopping or
           *        viewing history of the specified `userId` or `visitorId`. For example - Recommendations
           *        for you. * `product_detail`: Predicts the next product that a user will most likely engage
           *        with or purchase. The prediction is based on the shopping or viewing history of the
           *        specified `userId` or `visitorId` and its relevance to a specified `CatalogItem`.
           *        Typically used on product detail pages. For example - More products like this. *
           *        `recently_viewed_default`: Returns up to 75 products recently viewed by the specified
           *        `userId` or `visitorId`, most recent ones first. Returns nothing if neither of them has
           *        viewed any products yet. For example - Recently viewed. The full list of available
           *        placements can be seen at
           *        https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
           * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPredictRequest}
           * @return the request
           */
          public Predict predict(java.lang.String placement, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPredictRequest content) throws java.io.IOException {
            Predict result = new Predict(placement, content);
            initialize(result);
            return result;
          }

          public class Predict extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPredictResponse> {

            private static final String REST_PATH = "v2beta/{+placement}:predict";

            private final java.util.regex.Pattern PLACEMENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/placements/[^/]+$");

            /**
             * Makes a recommendation prediction.
             *
             * Create a request for the method "placements.predict".
             *
             * This request holds the parameters needed by the the retail server.  After setting any optional
             * parameters, call the {@link Predict#execute()} method to invoke the remote operation. <p>
             * {@link
             * Predict#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param placement Required. Full resource name of the format:
           *        {name=projects/locations/global/catalogs/default_catalog/placements} The id of the
           *        recommendation engine placement. This id is used to identify the set of models that will
           *        be used to make the prediction. We currently support three placements with the following
           *        IDs by default: * `shopping_cart`: Predicts products frequently bought together with one
           *        or more products in the same shopping session. Commonly displayed after `add-to-cart`
           *        events, on product detail pages, or on the shopping cart page. * `home_page`: Predicts the
           *        next product that a user will most likely engage with or purchase based on the shopping or
           *        viewing history of the specified `userId` or `visitorId`. For example - Recommendations
           *        for you. * `product_detail`: Predicts the next product that a user will most likely engage
           *        with or purchase. The prediction is based on the shopping or viewing history of the
           *        specified `userId` or `visitorId` and its relevance to a specified `CatalogItem`.
           *        Typically used on product detail pages. For example - More products like this. *
           *        `recently_viewed_default`: Returns up to 75 products recently viewed by the specified
           *        `userId` or `visitorId`, most recent ones first. Returns nothing if neither of them has
           *        viewed any products yet. For example - Recently viewed. The full list of available
           *        placements can be seen at
           *        https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
             * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPredictRequest}
             * @since 1.13
             */
            protected Predict(java.lang.String placement, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPredictRequest content) {
              super(CloudRetail.this, "POST", REST_PATH, content, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPredictResponse.class);
              this.placement = com.google.api.client.util.Preconditions.checkNotNull(placement, "Required parameter placement must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PLACEMENT_PATTERN.matcher(placement).matches(),
                    "Parameter placement must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/placements/[^/]+$");
              }
            }

            @Override
            public Predict set$Xgafv(java.lang.String $Xgafv) {
              return (Predict) super.set$Xgafv($Xgafv);
            }

            @Override
            public Predict setAccessToken(java.lang.String accessToken) {
              return (Predict) super.setAccessToken(accessToken);
            }

            @Override
            public Predict setAlt(java.lang.String alt) {
              return (Predict) super.setAlt(alt);
            }

            @Override
            public Predict setCallback(java.lang.String callback) {
              return (Predict) super.setCallback(callback);
            }

            @Override
            public Predict setFields(java.lang.String fields) {
              return (Predict) super.setFields(fields);
            }

            @Override
            public Predict setKey(java.lang.String key) {
              return (Predict) super.setKey(key);
            }

            @Override
            public Predict setOauthToken(java.lang.String oauthToken) {
              return (Predict) super.setOauthToken(oauthToken);
            }

            @Override
            public Predict setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Predict) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Predict setQuotaUser(java.lang.String quotaUser) {
              return (Predict) super.setQuotaUser(quotaUser);
            }

            @Override
            public Predict setUploadType(java.lang.String uploadType) {
              return (Predict) super.setUploadType(uploadType);
            }

            @Override
            public Predict setUploadProtocol(java.lang.String uploadProtocol) {
              return (Predict) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Full resource name of the format:
             * {name=projects/locations/global/catalogs/default_catalog/placements} The id of the
             * recommendation engine placement. This id is used to identify the set of models that
             * will be used to make the prediction. We currently support three placements with the
             * following IDs by default: * `shopping_cart`: Predicts products frequently bought
             * together with one or more products in the same shopping session. Commonly displayed
             * after `add-to-cart` events, on product detail pages, or on the shopping cart page. *
             * `home_page`: Predicts the next product that a user will most likely engage with or
             * purchase based on the shopping or viewing history of the specified `userId` or
             * `visitorId`. For example - Recommendations for you. * `product_detail`: Predicts the
             * next product that a user will most likely engage with or purchase. The prediction is
             * based on the shopping or viewing history of the specified `userId` or `visitorId` and
             * its relevance to a specified `CatalogItem`. Typically used on product detail pages.
             * For example - More products like this. * `recently_viewed_default`: Returns up to 75
             * products recently viewed by the specified `userId` or `visitorId`, most recent ones
             * first. Returns nothing if neither of them has viewed any products yet. For example -
             * Recently viewed. The full list of available placements can be seen at
             * https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
             */
            @com.google.api.client.util.Key
            private java.lang.String placement;

            /** Required. Full resource name of the format:
           {name=projects/locations/global/catalogs/default_catalog/placements} The id of the recommendation
           engine placement. This id is used to identify the set of models that will be used to make the
           prediction. We currently support three placements with the following IDs by default: *
           `shopping_cart`: Predicts products frequently bought together with one or more products in the same
           shopping session. Commonly displayed after `add-to-cart` events, on product detail pages, or on the
           shopping cart page. * `home_page`: Predicts the next product that a user will most likely engage
           with or purchase based on the shopping or viewing history of the specified `userId` or `visitorId`.
           For example - Recommendations for you. * `product_detail`: Predicts the next product that a user
           will most likely engage with or purchase. The prediction is based on the shopping or viewing
           history of the specified `userId` or `visitorId` and its relevance to a specified `CatalogItem`.
           Typically used on product detail pages. For example - More products like this. *
           `recently_viewed_default`: Returns up to 75 products recently viewed by the specified `userId` or
           `visitorId`, most recent ones first. Returns nothing if neither of them has viewed any products
           yet. For example - Recently viewed. The full list of available placements can be seen at
           https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
             */
            public java.lang.String getPlacement() {
              return placement;
            }

            /**
             * Required. Full resource name of the format:
             * {name=projects/locations/global/catalogs/default_catalog/placements} The id of the
             * recommendation engine placement. This id is used to identify the set of models that
             * will be used to make the prediction. We currently support three placements with the
             * following IDs by default: * `shopping_cart`: Predicts products frequently bought
             * together with one or more products in the same shopping session. Commonly displayed
             * after `add-to-cart` events, on product detail pages, or on the shopping cart page. *
             * `home_page`: Predicts the next product that a user will most likely engage with or
             * purchase based on the shopping or viewing history of the specified `userId` or
             * `visitorId`. For example - Recommendations for you. * `product_detail`: Predicts the
             * next product that a user will most likely engage with or purchase. The prediction is
             * based on the shopping or viewing history of the specified `userId` or `visitorId` and
             * its relevance to a specified `CatalogItem`. Typically used on product detail pages.
             * For example - More products like this. * `recently_viewed_default`: Returns up to 75
             * products recently viewed by the specified `userId` or `visitorId`, most recent ones
             * first. Returns nothing if neither of them has viewed any products yet. For example -
             * Recently viewed. The full list of available placements can be seen at
             * https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
             */
            public Predict setPlacement(java.lang.String placement) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PLACEMENT_PATTERN.matcher(placement).matches(),
                    "Parameter placement must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/placements/[^/]+$");
              }
              this.placement = placement;
              return this;
            }

            @Override
            public Predict set(String parameterName, Object value) {
              return (Predict) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the UserEvents collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudRetail retail = new CloudRetail(...);}
         *   {@code CloudRetail.UserEvents.List request = retail.userEvents().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public UserEvents userEvents() {
          return new UserEvents();
        }

        /**
         * The "userEvents" collection of methods.
         */
        public class UserEvents {

          /**
           * Writes a single user event from the browser. This uses a GET request to due to browser
           * restriction of POST-ing to a 3rd party domain. This method is used only by the Retail API
           * JavaScript pixel and Google Tag Manager. Users should not call this method directly.
           *
           * Create a request for the method "userEvents.collect".
           *
           * This request holds the parameters needed by the retail server.  After setting any optional
           * parameters, call the {@link Collect#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent catalog name, such as
           *        `projects/1234/locations/global/catalogs/default_catalog`.
           * @return the request
           */
          public Collect collect(java.lang.String parent) throws java.io.IOException {
            Collect result = new Collect(parent);
            initialize(result);
            return result;
          }

          public class Collect extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v2beta/{+parent}/userEvents:collect";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");

            /**
             * Writes a single user event from the browser. This uses a GET request to due to browser
             * restriction of POST-ing to a 3rd party domain. This method is used only by the Retail API
             * JavaScript pixel and Google Tag Manager. Users should not call this method directly.
             *
             * Create a request for the method "userEvents.collect".
             *
             * This request holds the parameters needed by the the retail server.  After setting any optional
             * parameters, call the {@link Collect#execute()} method to invoke the remote operation. <p>
             * {@link
             * Collect#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent catalog name, such as
           *        `projects/1234/locations/global/catalogs/default_catalog`.
             * @since 1.13
             */
            protected Collect(java.lang.String parent) {
              super(CloudRetail.this, "GET", REST_PATH, null, com.google.api.services.retail.v2beta.model.GoogleApiHttpBody.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Collect set$Xgafv(java.lang.String $Xgafv) {
              return (Collect) super.set$Xgafv($Xgafv);
            }

            @Override
            public Collect setAccessToken(java.lang.String accessToken) {
              return (Collect) super.setAccessToken(accessToken);
            }

            @Override
            public Collect setAlt(java.lang.String alt) {
              return (Collect) super.setAlt(alt);
            }

            @Override
            public Collect setCallback(java.lang.String callback) {
              return (Collect) super.setCallback(callback);
            }

            @Override
            public Collect setFields(java.lang.String fields) {
              return (Collect) super.setFields(fields);
            }

            @Override
            public Collect setKey(java.lang.String key) {
              return (Collect) super.setKey(key);
            }

            @Override
            public Collect setOauthToken(java.lang.String oauthToken) {
              return (Collect) super.setOauthToken(oauthToken);
            }

            @Override
            public Collect setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Collect) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Collect setQuotaUser(java.lang.String quotaUser) {
              return (Collect) super.setQuotaUser(quotaUser);
            }

            @Override
            public Collect setUploadType(java.lang.String uploadType) {
              return (Collect) super.setUploadType(uploadType);
            }

            @Override
            public Collect setUploadProtocol(java.lang.String uploadProtocol) {
              return (Collect) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent catalog name, such as
             * `projects/1234/locations/global/catalogs/default_catalog`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent catalog name, such as
           `projects/1234/locations/global/catalogs/default_catalog`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent catalog name, such as
             * `projects/1234/locations/global/catalogs/default_catalog`.
             */
            public Collect setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The event timestamp in milliseconds. This prevents browser caching of otherwise
             * identical get requests. The name is abbreviated to reduce the payload bytes.
             */
            @com.google.api.client.util.Key
            private java.lang.Long ets;

            /** The event timestamp in milliseconds. This prevents browser caching of otherwise identical get
           requests. The name is abbreviated to reduce the payload bytes.
             */
            public java.lang.Long getEts() {
              return ets;
            }

            /**
             * The event timestamp in milliseconds. This prevents browser caching of otherwise
             * identical get requests. The name is abbreviated to reduce the payload bytes.
             */
            public Collect setEts(java.lang.Long ets) {
              this.ets = ets;
              return this;
            }

            /**
             * The URL including cgi-parameters but excluding the hash fragment with a length limit
             * of 5,000 characters. This is often more useful than the referer URL, because many
             * browsers only send the domain for 3rd party requests.
             */
            @com.google.api.client.util.Key
            private java.lang.String uri;

            /** The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000
           characters. This is often more useful than the referer URL, because many browsers only send the
           domain for 3rd party requests.
             */
            public java.lang.String getUri() {
              return uri;
            }

            /**
             * The URL including cgi-parameters but excluding the hash fragment with a length limit
             * of 5,000 characters. This is often more useful than the referer URL, because many
             * browsers only send the domain for 3rd party requests.
             */
            public Collect setUri(java.lang.String uri) {
              this.uri = uri;
              return this;
            }

            /**
             * Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
             */
            @com.google.api.client.util.Key
            private java.lang.String userEvent;

            /** Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
             */
            public java.lang.String getUserEvent() {
              return userEvent;
            }

            /**
             * Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
             */
            public Collect setUserEvent(java.lang.String userEvent) {
              this.userEvent = userEvent;
              return this;
            }

            @Override
            public Collect set(String parameterName, Object value) {
              return (Collect) super.set(parameterName, value);
            }
          }
          /**
           * Bulk import of User events. Request processing might be synchronous. Events that already exist
           * are skipped. Use this method for backfilling historical user events. Operation.response is of
           * type ImportResponse. Note that it is possible for a subset of the items to be successfully
           * inserted. Operation.metadata is of type ImportMetadata.
           *
           * Create a request for the method "userEvents.import".
           *
           * This request holds the parameters needed by the retail server.  After setting any optional
           * parameters, call the {@link CloudRetailImport#execute()} method to invoke the remote operation.
           *
           * @param parent Required. `projects/1234/locations/global/catalogs/default_catalog`
           * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaImportUserEventsRequest}
           * @return the request
           */
          public CloudRetailImport retailImport(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaImportUserEventsRequest content) throws java.io.IOException {
            CloudRetailImport result = new CloudRetailImport(parent, content);
            initialize(result);
            return result;
          }

          public class CloudRetailImport extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta/{+parent}/userEvents:import";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");

            /**
             * Bulk import of User events. Request processing might be synchronous. Events that already exist
             * are skipped. Use this method for backfilling historical user events. Operation.response is of
             * type ImportResponse. Note that it is possible for a subset of the items to be successfully
             * inserted. Operation.metadata is of type ImportMetadata.
             *
             * Create a request for the method "userEvents.import".
             *
             * This request holds the parameters needed by the the retail server.  After setting any optional
             * parameters, call the {@link CloudRetailImport#execute()} method to invoke the remote operation.
             * <p> {@link CloudRetailImport#initialize(com.google.api.client.googleapis.services.AbstractGoogl
             * eClientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param parent Required. `projects/1234/locations/global/catalogs/default_catalog`
             * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaImportUserEventsRequest}
             * @since 1.13
             */
            protected CloudRetailImport(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaImportUserEventsRequest content) {
              super(CloudRetail.this, "POST", REST_PATH, content, com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
            }

            @Override
            public CloudRetailImport set$Xgafv(java.lang.String $Xgafv) {
              return (CloudRetailImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public CloudRetailImport setAccessToken(java.lang.String accessToken) {
              return (CloudRetailImport) super.setAccessToken(accessToken);
            }

            @Override
            public CloudRetailImport setAlt(java.lang.String alt) {
              return (CloudRetailImport) super.setAlt(alt);
            }

            @Override
            public CloudRetailImport setCallback(java.lang.String callback) {
              return (CloudRetailImport) super.setCallback(callback);
            }

            @Override
            public CloudRetailImport setFields(java.lang.String fields) {
              return (CloudRetailImport) super.setFields(fields);
            }

            @Override
            public CloudRetailImport setKey(java.lang.String key) {
              return (CloudRetailImport) super.setKey(key);
            }

            @Override
            public CloudRetailImport setOauthToken(java.lang.String oauthToken) {
              return (CloudRetailImport) super.setOauthToken(oauthToken);
            }

            @Override
            public CloudRetailImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CloudRetailImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CloudRetailImport setQuotaUser(java.lang.String quotaUser) {
              return (CloudRetailImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public CloudRetailImport setUploadType(java.lang.String uploadType) {
              return (CloudRetailImport) super.setUploadType(uploadType);
            }

            @Override
            public CloudRetailImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (CloudRetailImport) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. `projects/1234/locations/global/catalogs/default_catalog` */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. `projects/1234/locations/global/catalogs/default_catalog`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. `projects/1234/locations/global/catalogs/default_catalog` */
            public CloudRetailImport setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public CloudRetailImport set(String parameterName, Object value) {
              return (CloudRetailImport) super.set(parameterName, value);
            }
          }
          /**
           * Deletes permanently all user events specified by the filter provided. Depending on the number of
           * events specified by the filter, this operation could take hours or days to complete. To test a
           * filter, use the list command first.
           *
           * Create a request for the method "userEvents.purge".
           *
           * This request holds the parameters needed by the retail server.  After setting any optional
           * parameters, call the {@link Purge#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The resource name of the catalog under which the events are created. The format is
           *        `projects/${projectId}/locations/global/catalogs/${catalogId}`
           * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPurgeUserEventsRequest}
           * @return the request
           */
          public Purge purge(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPurgeUserEventsRequest content) throws java.io.IOException {
            Purge result = new Purge(parent, content);
            initialize(result);
            return result;
          }

          public class Purge extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta/{+parent}/userEvents:purge";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");

            /**
             * Deletes permanently all user events specified by the filter provided. Depending on the number
             * of events specified by the filter, this operation could take hours or days to complete. To test
             * a filter, use the list command first.
             *
             * Create a request for the method "userEvents.purge".
             *
             * This request holds the parameters needed by the the retail server.  After setting any optional
             * parameters, call the {@link Purge#execute()} method to invoke the remote operation. <p> {@link
             * Purge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The resource name of the catalog under which the events are created. The format is
           *        `projects/${projectId}/locations/global/catalogs/${catalogId}`
             * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPurgeUserEventsRequest}
             * @since 1.13
             */
            protected Purge(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaPurgeUserEventsRequest content) {
              super(CloudRetail.this, "POST", REST_PATH, content, com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
            }

            @Override
            public Purge set$Xgafv(java.lang.String $Xgafv) {
              return (Purge) super.set$Xgafv($Xgafv);
            }

            @Override
            public Purge setAccessToken(java.lang.String accessToken) {
              return (Purge) super.setAccessToken(accessToken);
            }

            @Override
            public Purge setAlt(java.lang.String alt) {
              return (Purge) super.setAlt(alt);
            }

            @Override
            public Purge setCallback(java.lang.String callback) {
              return (Purge) super.setCallback(callback);
            }

            @Override
            public Purge setFields(java.lang.String fields) {
              return (Purge) super.setFields(fields);
            }

            @Override
            public Purge setKey(java.lang.String key) {
              return (Purge) super.setKey(key);
            }

            @Override
            public Purge setOauthToken(java.lang.String oauthToken) {
              return (Purge) super.setOauthToken(oauthToken);
            }

            @Override
            public Purge setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Purge) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Purge setQuotaUser(java.lang.String quotaUser) {
              return (Purge) super.setQuotaUser(quotaUser);
            }

            @Override
            public Purge setUploadType(java.lang.String uploadType) {
              return (Purge) super.setUploadType(uploadType);
            }

            @Override
            public Purge setUploadProtocol(java.lang.String uploadProtocol) {
              return (Purge) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the catalog under which the events are created. The
             * format is `projects/${projectId}/locations/global/catalogs/${catalogId}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The resource name of the catalog under which the events are created. The format is
           `projects/${projectId}/locations/global/catalogs/${catalogId}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The resource name of the catalog under which the events are created. The
             * format is `projects/${projectId}/locations/global/catalogs/${catalogId}`
             */
            public Purge setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Purge set(String parameterName, Object value) {
              return (Purge) super.set(parameterName, value);
            }
          }
          /**
           * Triggers a user event rejoin operation with latest product catalog. Events will not be annotated
           * with detailed product information if product is missing from the catalog at the time the user
           * event is ingested, and these events are stored as unjoined events with a limited usage on
           * training and serving. This API can be used to trigger a 'join' operation on specified events with
           * latest version of product catalog. It can also be used to correct events joined with wrong
           * product catalog.
           *
           * Create a request for the method "userEvents.rejoin".
           *
           * This request holds the parameters needed by the retail server.  After setting any optional
           * parameters, call the {@link Rejoin#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent catalog resource name, such as
           *        `projects/1234/locations/global/catalogs/default_catalog`.
           * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaRejoinUserEventsRequest}
           * @return the request
           */
          public Rejoin rejoin(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaRejoinUserEventsRequest content) throws java.io.IOException {
            Rejoin result = new Rejoin(parent, content);
            initialize(result);
            return result;
          }

          public class Rejoin extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta/{+parent}/userEvents:rejoin";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");

            /**
             * Triggers a user event rejoin operation with latest product catalog. Events will not be
             * annotated with detailed product information if product is missing from the catalog at the time
             * the user event is ingested, and these events are stored as unjoined events with a limited usage
             * on training and serving. This API can be used to trigger a 'join' operation on specified events
             * with latest version of product catalog. It can also be used to correct events joined with wrong
             * product catalog.
             *
             * Create a request for the method "userEvents.rejoin".
             *
             * This request holds the parameters needed by the the retail server.  After setting any optional
             * parameters, call the {@link Rejoin#execute()} method to invoke the remote operation. <p> {@link
             * Rejoin#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent catalog resource name, such as
           *        `projects/1234/locations/global/catalogs/default_catalog`.
             * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaRejoinUserEventsRequest}
             * @since 1.13
             */
            protected Rejoin(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaRejoinUserEventsRequest content) {
              super(CloudRetail.this, "POST", REST_PATH, content, com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
            }

            @Override
            public Rejoin set$Xgafv(java.lang.String $Xgafv) {
              return (Rejoin) super.set$Xgafv($Xgafv);
            }

            @Override
            public Rejoin setAccessToken(java.lang.String accessToken) {
              return (Rejoin) super.setAccessToken(accessToken);
            }

            @Override
            public Rejoin setAlt(java.lang.String alt) {
              return (Rejoin) super.setAlt(alt);
            }

            @Override
            public Rejoin setCallback(java.lang.String callback) {
              return (Rejoin) super.setCallback(callback);
            }

            @Override
            public Rejoin setFields(java.lang.String fields) {
              return (Rejoin) super.setFields(fields);
            }

            @Override
            public Rejoin setKey(java.lang.String key) {
              return (Rejoin) super.setKey(key);
            }

            @Override
            public Rejoin setOauthToken(java.lang.String oauthToken) {
              return (Rejoin) super.setOauthToken(oauthToken);
            }

            @Override
            public Rejoin setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Rejoin) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Rejoin setQuotaUser(java.lang.String quotaUser) {
              return (Rejoin) super.setQuotaUser(quotaUser);
            }

            @Override
            public Rejoin setUploadType(java.lang.String uploadType) {
              return (Rejoin) super.setUploadType(uploadType);
            }

            @Override
            public Rejoin setUploadProtocol(java.lang.String uploadProtocol) {
              return (Rejoin) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent catalog resource name, such as
             * `projects/1234/locations/global/catalogs/default_catalog`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent catalog resource name, such as
           `projects/1234/locations/global/catalogs/default_catalog`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent catalog resource name, such as
             * `projects/1234/locations/global/catalogs/default_catalog`.
             */
            public Rejoin setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Rejoin set(String parameterName, Object value) {
              return (Rejoin) super.set(parameterName, value);
            }
          }
          /**
           * Writes a single user event.
           *
           * Create a request for the method "userEvents.write".
           *
           * This request holds the parameters needed by the retail server.  After setting any optional
           * parameters, call the {@link Write#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent catalog resource name, such as
           *        `projects/1234/locations/global/catalogs/default_catalog`.
           * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaUserEvent}
           * @return the request
           */
          public Write write(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaUserEvent content) throws java.io.IOException {
            Write result = new Write(parent, content);
            initialize(result);
            return result;
          }

          public class Write extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaUserEvent> {

            private static final String REST_PATH = "v2beta/{+parent}/userEvents:write";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");

            /**
             * Writes a single user event.
             *
             * Create a request for the method "userEvents.write".
             *
             * This request holds the parameters needed by the the retail server.  After setting any optional
             * parameters, call the {@link Write#execute()} method to invoke the remote operation. <p> {@link
             * Write#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent catalog resource name, such as
           *        `projects/1234/locations/global/catalogs/default_catalog`.
             * @param content the {@link com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaUserEvent}
             * @since 1.13
             */
            protected Write(java.lang.String parent, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaUserEvent content) {
              super(CloudRetail.this, "POST", REST_PATH, content, com.google.api.services.retail.v2beta.model.GoogleCloudRetailV2betaUserEvent.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
            }

            @Override
            public Write set$Xgafv(java.lang.String $Xgafv) {
              return (Write) super.set$Xgafv($Xgafv);
            }

            @Override
            public Write setAccessToken(java.lang.String accessToken) {
              return (Write) super.setAccessToken(accessToken);
            }

            @Override
            public Write setAlt(java.lang.String alt) {
              return (Write) super.setAlt(alt);
            }

            @Override
            public Write setCallback(java.lang.String callback) {
              return (Write) super.setCallback(callback);
            }

            @Override
            public Write setFields(java.lang.String fields) {
              return (Write) super.setFields(fields);
            }

            @Override
            public Write setKey(java.lang.String key) {
              return (Write) super.setKey(key);
            }

            @Override
            public Write setOauthToken(java.lang.String oauthToken) {
              return (Write) super.setOauthToken(oauthToken);
            }

            @Override
            public Write setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Write) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Write setQuotaUser(java.lang.String quotaUser) {
              return (Write) super.setQuotaUser(quotaUser);
            }

            @Override
            public Write setUploadType(java.lang.String uploadType) {
              return (Write) super.setUploadType(uploadType);
            }

            @Override
            public Write setUploadProtocol(java.lang.String uploadProtocol) {
              return (Write) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent catalog resource name, such as
             * `projects/1234/locations/global/catalogs/default_catalog`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent catalog resource name, such as
           `projects/1234/locations/global/catalogs/default_catalog`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent catalog resource name, such as
             * `projects/1234/locations/global/catalogs/default_catalog`.
             */
            public Write setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Write set(String parameterName, Object value) {
              return (Write) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudRetail retail = new CloudRetail(...);}
       *   {@code CloudRetail.Operations.List request = retail.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the retail server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the retail server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudRetail.this, "GET", REST_PATH, null, com.google.api.services.retail.v2beta.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override
         * the binding to use different resource name schemes, such as `users/operations`. To override the
         * binding, API services can add a binding such as `"/v1/{name=users}/operations"` to their service
         * configuration. For backwards compatibility, the default name includes the operations collection
         * id, however overriding users must ensure the name binding is the parent resource, without the
         * operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the retail server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends CloudRetailRequest<com.google.api.services.retail.v2beta.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v2beta/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
           * override the binding to use different resource name schemes, such as `users/operations`. To
           * override the binding, API services can add a binding such as `"/v1/{name=users}/operations"` to
           * their service configuration. For backwards compatibility, the default name includes the
           * operations collection id, however overriding users must ensure the name binding is the parent
           * resource, without the operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the retail server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(CloudRetail.this, "GET", REST_PATH, null, com.google.api.services.retail.v2beta.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link CloudRetail}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudRetail}. */
    @Override
    public CloudRetail build() {
      return new CloudRetail(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudRetailRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudRetailRequestInitializer(
        CloudRetailRequestInitializer cloudretailRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudretailRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
