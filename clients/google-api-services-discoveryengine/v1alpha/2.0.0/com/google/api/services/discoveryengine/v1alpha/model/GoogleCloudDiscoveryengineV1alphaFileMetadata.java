/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha.model;

/**
 * Represents a file attached to a session (context file)
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1alphaFileMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The size of the context file in bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long byteSize;

  /**
   * Output only. The AssistantService.DownloadSessionFile URL to download the file. This URL will
   * need the same credentials as AssistantService.ListSessionFileMetadata method and will provide
   * the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String downloadUri;

  /**
   * Output only. The ID of the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileId;

  /**
   * Optional. The origin of the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileOriginType;

  /**
   * Output only. The time the file was added to the session. Note that if a file was added, then
   * modified externally, then added again, the add time will be updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastAddTime;

  /**
   * Optional. Represents metadata related to the file that can suit particular use cases. The
   * prefix "google." is reserved for the key for use by Google, but other prefixes can be freely
   * used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> metadata;

  /**
   * The content type of the file, see https://www.iana.org/assignments/media-types/media-
   * types.xhtml.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mimeType;

  /**
   * Output only. The name of the file uploaded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. The type of the original source of the file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String originalSourceType;

  /**
   * Optional. The original location of the file. It may be a local file path, or any other URI that
   * allows accessing the file in an external system. There are two scenarios in which this url may
   * be empty: 1. If the file was sent as inline data (e.g. pasted from the clipboard). 2. If the
   * original location is not available. Note that there's no guarantee that the URI will be
   * pointing to a valid or actually existing file. For example, a file might have been uploaded to
   * the session, and then deleted from the original source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String originalUri;

  /**
   * Output only. The time the file was uploaded (If this is a file generated by an internal process
   * and then made available to the session, this indicates the moment it happened).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String uploadTime;

  /**
   * Output only. Alternate views of this file object. Each file view is attached to a specific
   * role. Possible example keys: - "thumbnail" - "mobile_thumbnail" - "clip" - "summary" -
   * "translation"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, GoogleCloudDiscoveryengineV1alphaFileView> views;

  /**
   * Output only. The size of the context file in bytes.
   * @return value or {@code null} for none
   */
  public java.lang.Long getByteSize() {
    return byteSize;
  }

  /**
   * Output only. The size of the context file in bytes.
   * @param byteSize byteSize or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setByteSize(java.lang.Long byteSize) {
    this.byteSize = byteSize;
    return this;
  }

  /**
   * Output only. The AssistantService.DownloadSessionFile URL to download the file. This URL will
   * need the same credentials as AssistantService.ListSessionFileMetadata method and will provide
   * the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDownloadUri() {
    return downloadUri;
  }

  /**
   * Output only. The AssistantService.DownloadSessionFile URL to download the file. This URL will
   * need the same credentials as AssistantService.ListSessionFileMetadata method and will provide
   * the resource.
   * @param downloadUri downloadUri or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setDownloadUri(java.lang.String downloadUri) {
    this.downloadUri = downloadUri;
    return this;
  }

  /**
   * Output only. The ID of the file.
   * @return value or {@code null} for none
   */
  public java.lang.String getFileId() {
    return fileId;
  }

  /**
   * Output only. The ID of the file.
   * @param fileId fileId or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setFileId(java.lang.String fileId) {
    this.fileId = fileId;
    return this;
  }

  /**
   * Optional. The origin of the file.
   * @return value or {@code null} for none
   */
  public java.lang.String getFileOriginType() {
    return fileOriginType;
  }

  /**
   * Optional. The origin of the file.
   * @param fileOriginType fileOriginType or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setFileOriginType(java.lang.String fileOriginType) {
    this.fileOriginType = fileOriginType;
    return this;
  }

  /**
   * Output only. The time the file was added to the session. Note that if a file was added, then
   * modified externally, then added again, the add time will be updated.
   * @return value or {@code null} for none
   */
  public String getLastAddTime() {
    return lastAddTime;
  }

  /**
   * Output only. The time the file was added to the session. Note that if a file was added, then
   * modified externally, then added again, the add time will be updated.
   * @param lastAddTime lastAddTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setLastAddTime(String lastAddTime) {
    this.lastAddTime = lastAddTime;
    return this;
  }

  /**
   * Optional. Represents metadata related to the file that can suit particular use cases. The
   * prefix "google." is reserved for the key for use by Google, but other prefixes can be freely
   * used.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getMetadata() {
    return metadata;
  }

  /**
   * Optional. Represents metadata related to the file that can suit particular use cases. The
   * prefix "google." is reserved for the key for use by Google, but other prefixes can be freely
   * used.
   * @param metadata metadata or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setMetadata(java.util.Map<String, java.lang.String> metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * The content type of the file, see https://www.iana.org/assignments/media-types/media-
   * types.xhtml.
   * @return value or {@code null} for none
   */
  public java.lang.String getMimeType() {
    return mimeType;
  }

  /**
   * The content type of the file, see https://www.iana.org/assignments/media-types/media-
   * types.xhtml.
   * @param mimeType mimeType or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setMimeType(java.lang.String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * Output only. The name of the file uploaded.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The name of the file uploaded.
   * @param name name or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The type of the original source of the file.
   * @return value or {@code null} for none
   */
  public java.lang.String getOriginalSourceType() {
    return originalSourceType;
  }

  /**
   * Optional. The type of the original source of the file.
   * @param originalSourceType originalSourceType or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setOriginalSourceType(java.lang.String originalSourceType) {
    this.originalSourceType = originalSourceType;
    return this;
  }

  /**
   * Optional. The original location of the file. It may be a local file path, or any other URI that
   * allows accessing the file in an external system. There are two scenarios in which this url may
   * be empty: 1. If the file was sent as inline data (e.g. pasted from the clipboard). 2. If the
   * original location is not available. Note that there's no guarantee that the URI will be
   * pointing to a valid or actually existing file. For example, a file might have been uploaded to
   * the session, and then deleted from the original source.
   * @return value or {@code null} for none
   */
  public java.lang.String getOriginalUri() {
    return originalUri;
  }

  /**
   * Optional. The original location of the file. It may be a local file path, or any other URI that
   * allows accessing the file in an external system. There are two scenarios in which this url may
   * be empty: 1. If the file was sent as inline data (e.g. pasted from the clipboard). 2. If the
   * original location is not available. Note that there's no guarantee that the URI will be
   * pointing to a valid or actually existing file. For example, a file might have been uploaded to
   * the session, and then deleted from the original source.
   * @param originalUri originalUri or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setOriginalUri(java.lang.String originalUri) {
    this.originalUri = originalUri;
    return this;
  }

  /**
   * Output only. The time the file was uploaded (If this is a file generated by an internal process
   * and then made available to the session, this indicates the moment it happened).
   * @return value or {@code null} for none
   */
  public String getUploadTime() {
    return uploadTime;
  }

  /**
   * Output only. The time the file was uploaded (If this is a file generated by an internal process
   * and then made available to the session, this indicates the moment it happened).
   * @param uploadTime uploadTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setUploadTime(String uploadTime) {
    this.uploadTime = uploadTime;
    return this;
  }

  /**
   * Output only. Alternate views of this file object. Each file view is attached to a specific
   * role. Possible example keys: - "thumbnail" - "mobile_thumbnail" - "clip" - "summary" -
   * "translation"
   * @return value or {@code null} for none
   */
  public java.util.Map<String, GoogleCloudDiscoveryengineV1alphaFileView> getViews() {
    return views;
  }

  /**
   * Output only. Alternate views of this file object. Each file view is attached to a specific
   * role. Possible example keys: - "thumbnail" - "mobile_thumbnail" - "clip" - "summary" -
   * "translation"
   * @param views views or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaFileMetadata setViews(java.util.Map<String, GoogleCloudDiscoveryengineV1alphaFileView> views) {
    this.views = views;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaFileMetadata set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1alphaFileMetadata) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaFileMetadata clone() {
    return (GoogleCloudDiscoveryengineV1alphaFileMetadata) super.clone();
  }

}
