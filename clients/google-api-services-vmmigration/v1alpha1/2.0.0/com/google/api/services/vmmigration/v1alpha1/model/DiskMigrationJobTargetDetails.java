/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmmigration.v1alpha1.model;

/**
 * Details of the target disk in Compute Engine.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VM Migration API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DiskMigrationJobTargetDetails extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The encryption to apply to the disk. If the DiskMigrationJob parent Source resource
   * has an encryption, this field must be set to the same encryption key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Encryption encryption;

  /**
   * Optional. A map of labels to associate with the disk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. The target disk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ComputeEngineDisk targetDisk;

  /**
   * Required. The name of the resource of type TargetProject which represents the Compute Engine
   * project in which to create the disk. Should be of the form:
   * projects/{project}/locations/global/targetProjects/{target-project}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetProject;

  /**
   * Optional. The encryption to apply to the disk. If the DiskMigrationJob parent Source resource
   * has an encryption, this field must be set to the same encryption key.
   * @return value or {@code null} for none
   */
  public Encryption getEncryption() {
    return encryption;
  }

  /**
   * Optional. The encryption to apply to the disk. If the DiskMigrationJob parent Source resource
   * has an encryption, this field must be set to the same encryption key.
   * @param encryption encryption or {@code null} for none
   */
  public DiskMigrationJobTargetDetails setEncryption(Encryption encryption) {
    this.encryption = encryption;
    return this;
  }

  /**
   * Optional. A map of labels to associate with the disk.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. A map of labels to associate with the disk.
   * @param labels labels or {@code null} for none
   */
  public DiskMigrationJobTargetDetails setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. The target disk.
   * @return value or {@code null} for none
   */
  public ComputeEngineDisk getTargetDisk() {
    return targetDisk;
  }

  /**
   * Required. The target disk.
   * @param targetDisk targetDisk or {@code null} for none
   */
  public DiskMigrationJobTargetDetails setTargetDisk(ComputeEngineDisk targetDisk) {
    this.targetDisk = targetDisk;
    return this;
  }

  /**
   * Required. The name of the resource of type TargetProject which represents the Compute Engine
   * project in which to create the disk. Should be of the form:
   * projects/{project}/locations/global/targetProjects/{target-project}
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetProject() {
    return targetProject;
  }

  /**
   * Required. The name of the resource of type TargetProject which represents the Compute Engine
   * project in which to create the disk. Should be of the form:
   * projects/{project}/locations/global/targetProjects/{target-project}
   * @param targetProject targetProject or {@code null} for none
   */
  public DiskMigrationJobTargetDetails setTargetProject(java.lang.String targetProject) {
    this.targetProject = targetProject;
    return this;
  }

  @Override
  public DiskMigrationJobTargetDetails set(String fieldName, Object value) {
    return (DiskMigrationJobTargetDetails) super.set(fieldName, value);
  }

  @Override
  public DiskMigrationJobTargetDetails clone() {
    return (DiskMigrationJobTargetDetails) super.clone();
  }

}
