/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.mybusinesslodging.v1.model;

/**
 * Increased food safety measures implemented by the hotel during COVID-19.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the My Business Lodging API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IncreasedFoodSafety extends com.google.api.client.json.GenericJson {

  /**
   * Additional sanitation in dining areas.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean diningAreasAdditionalSanitation;

  /**
   * Dining areas additional sanitation exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diningAreasAdditionalSanitationException;

  /**
   * Disposable flatware.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disposableFlatware;

  /**
   * Disposable flatware exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String disposableFlatwareException;

  /**
   * Additional safety measures during food prep and serving.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean foodPreparationAndServingAdditionalSafety;

  /**
   * Food preparation and serving additional safety exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String foodPreparationAndServingAdditionalSafetyException;

  /**
   * Individually-packaged meals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean individualPackagedMeals;

  /**
   * Individual packaged meals exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String individualPackagedMealsException;

  /**
   * Single-use menus.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean singleUseFoodMenus;

  /**
   * Single use food menus exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String singleUseFoodMenusException;

  /**
   * Additional sanitation in dining areas.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDiningAreasAdditionalSanitation() {
    return diningAreasAdditionalSanitation;
  }

  /**
   * Additional sanitation in dining areas.
   * @param diningAreasAdditionalSanitation diningAreasAdditionalSanitation or {@code null} for none
   */
  public IncreasedFoodSafety setDiningAreasAdditionalSanitation(java.lang.Boolean diningAreasAdditionalSanitation) {
    this.diningAreasAdditionalSanitation = diningAreasAdditionalSanitation;
    return this;
  }

  /**
   * Dining areas additional sanitation exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiningAreasAdditionalSanitationException() {
    return diningAreasAdditionalSanitationException;
  }

  /**
   * Dining areas additional sanitation exception.
   * @param diningAreasAdditionalSanitationException diningAreasAdditionalSanitationException or {@code null} for none
   */
  public IncreasedFoodSafety setDiningAreasAdditionalSanitationException(java.lang.String diningAreasAdditionalSanitationException) {
    this.diningAreasAdditionalSanitationException = diningAreasAdditionalSanitationException;
    return this;
  }

  /**
   * Disposable flatware.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisposableFlatware() {
    return disposableFlatware;
  }

  /**
   * Disposable flatware.
   * @param disposableFlatware disposableFlatware or {@code null} for none
   */
  public IncreasedFoodSafety setDisposableFlatware(java.lang.Boolean disposableFlatware) {
    this.disposableFlatware = disposableFlatware;
    return this;
  }

  /**
   * Disposable flatware exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisposableFlatwareException() {
    return disposableFlatwareException;
  }

  /**
   * Disposable flatware exception.
   * @param disposableFlatwareException disposableFlatwareException or {@code null} for none
   */
  public IncreasedFoodSafety setDisposableFlatwareException(java.lang.String disposableFlatwareException) {
    this.disposableFlatwareException = disposableFlatwareException;
    return this;
  }

  /**
   * Additional safety measures during food prep and serving.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFoodPreparationAndServingAdditionalSafety() {
    return foodPreparationAndServingAdditionalSafety;
  }

  /**
   * Additional safety measures during food prep and serving.
   * @param foodPreparationAndServingAdditionalSafety foodPreparationAndServingAdditionalSafety or {@code null} for none
   */
  public IncreasedFoodSafety setFoodPreparationAndServingAdditionalSafety(java.lang.Boolean foodPreparationAndServingAdditionalSafety) {
    this.foodPreparationAndServingAdditionalSafety = foodPreparationAndServingAdditionalSafety;
    return this;
  }

  /**
   * Food preparation and serving additional safety exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getFoodPreparationAndServingAdditionalSafetyException() {
    return foodPreparationAndServingAdditionalSafetyException;
  }

  /**
   * Food preparation and serving additional safety exception.
   * @param foodPreparationAndServingAdditionalSafetyException foodPreparationAndServingAdditionalSafetyException or {@code null} for none
   */
  public IncreasedFoodSafety setFoodPreparationAndServingAdditionalSafetyException(java.lang.String foodPreparationAndServingAdditionalSafetyException) {
    this.foodPreparationAndServingAdditionalSafetyException = foodPreparationAndServingAdditionalSafetyException;
    return this;
  }

  /**
   * Individually-packaged meals.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIndividualPackagedMeals() {
    return individualPackagedMeals;
  }

  /**
   * Individually-packaged meals.
   * @param individualPackagedMeals individualPackagedMeals or {@code null} for none
   */
  public IncreasedFoodSafety setIndividualPackagedMeals(java.lang.Boolean individualPackagedMeals) {
    this.individualPackagedMeals = individualPackagedMeals;
    return this;
  }

  /**
   * Individual packaged meals exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getIndividualPackagedMealsException() {
    return individualPackagedMealsException;
  }

  /**
   * Individual packaged meals exception.
   * @param individualPackagedMealsException individualPackagedMealsException or {@code null} for none
   */
  public IncreasedFoodSafety setIndividualPackagedMealsException(java.lang.String individualPackagedMealsException) {
    this.individualPackagedMealsException = individualPackagedMealsException;
    return this;
  }

  /**
   * Single-use menus.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSingleUseFoodMenus() {
    return singleUseFoodMenus;
  }

  /**
   * Single-use menus.
   * @param singleUseFoodMenus singleUseFoodMenus or {@code null} for none
   */
  public IncreasedFoodSafety setSingleUseFoodMenus(java.lang.Boolean singleUseFoodMenus) {
    this.singleUseFoodMenus = singleUseFoodMenus;
    return this;
  }

  /**
   * Single use food menus exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getSingleUseFoodMenusException() {
    return singleUseFoodMenusException;
  }

  /**
   * Single use food menus exception.
   * @param singleUseFoodMenusException singleUseFoodMenusException or {@code null} for none
   */
  public IncreasedFoodSafety setSingleUseFoodMenusException(java.lang.String singleUseFoodMenusException) {
    this.singleUseFoodMenusException = singleUseFoodMenusException;
    return this;
  }

  @Override
  public IncreasedFoodSafety set(String fieldName, Object value) {
    return (IncreasedFoodSafety) super.set(fieldName, value);
  }

  @Override
  public IncreasedFoodSafety clone() {
    return (IncreasedFoodSafety) super.clone();
  }

}
