/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * LINT.IfChange Next ID: 101
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SuperrootPodcastsRecommendationsPodcastRecsFeatures extends com.google.api.client.json.GenericJson {

  /**
   * Average duration listened per episode. Ignores duration < 10s. Computed offline
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long averageDurationSecondsEpisode;

  /**
   * Average duration listened per show. Ignores duration < 10s. Computed offline
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long averageDurationSecondsShow;

  /**
   * Average fraction of podcast listened per episode. Ignores duration < 10s. Computed offline
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double averageFractionEpisode;

  /**
   * Average fraction of podcast listened per show. Ignores duration < 10s. Computed offline
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double averageFractionShow;

  /**
   * Per cluster lift where the lift_squashing_factor is set to 0.4
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double balancedLift;

  /**
   * category_match is a 0 to 1 score depicting how much of the user's listening history matches the
   * categories of this podcast recommendation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double categoryMatch;

  /**
   * The total minutes listened to this podcast show by users in this cluster
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long clusterFeedMinutes;

  /**
   * This captures the probability that this show could have been listened by the user in lieu of
   * what they have subscribed or listened to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float colistenedShowColistenAffinity;

  /**
   * This captures the rank of the podcast show in the colisten candidate generator.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long colistenedShowLevelRank;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float convAiToxicitySevereScore;

  /**
   * Score of csai safe search score go/safesearch
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double csaiScore;

  /**
   * Ordinal rank features like this have been found to be useful in Hermione Recipes, where the top
   * ranked items from a candidate generator is always retained. Ranks are integral values starting
   * with 1 for the highest affinity show.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long dnnShowLevelRank;

  /**
   * Dot product of user embedding and podcast show embedding from the two tower model v2a
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float dnnV2aScore;

  /**
   * Sigmoid of the score obtained by dot product of user embedding and show embedding. See
   * https://b.corp.google.com/issues/158602034#comment2 for intuition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float dnnV2aScoreSigmoid;

  /**
   * Total duration listened for this episode by all users. Ignores duration < 10s. Computed offline
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long durationTotalSecondsEpisode;

  /**
   * Total duration listened for this show by all users. Ignores duration < 10s. Computed offline
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long durationTotalSecondsShow;

  /**
   * The duration of a single episode, in seconds. - For show documents, this is a duration of a
   * typical recent episode, or an approximation thereof. - For episode documents, this is the
   * duration of the episode itself.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long episodeDurationSec;

  /**
   * Number of all episode impressions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long episodeImpressions;

  /**
   * Number of episode impressions during the past week.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long episodeImpressionsPastWeek;

  /**
   * How frequently are podcasts published by this show. To see publishing frequency calculation go
   * here: http://shortn/_6zzfyEpBRq
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long episodesPublishedPerMonth;

  /**
   * Whether the show is marked as explicit by the authors
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String explicitShow;

  /**
   * Scaled pagerank score for the feed url in [0..1]. Not to be confused with pagerank above, which
   * measures the pagerank for the feed's homepage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double feedPagerank;

  /**
   * final reaction boost score computed from positive_reaction_boost_score and
   * negative_reaction_boost_score. The score will be applied as a multiplier on the ranking score
   * to adjust the ranking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float finalReactionBoostScore;

  /**
   * Some of all fraction of this listened by users. Ignores duration < 10s. Computed offline
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double fractionTotalEpisode;

  /**
   * Some of all fraction of this show listened by users. Ignores duration < 10s. Computed offline
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double fractionTotalShow;

  /**
   * Score of fringe safe search score go/safesearch
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double fringeScore;

  /**
   * Probability of a random user listening to this podcast randomly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double globalProb;

  /**
   * Probability of a random user from this cluster listening to this podcast randomly (K-means
   * specific feature)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double inClusterProb;

  /**
   * A binary value based on whether this is a canonical source for a cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isCanonical;

  /**
   * Ranks are integral values starting with 1 for the highest affinity show.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long kmeansShowLevelRank;

  /**
   * How much of user listening history match the language of this episode
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double languageMatch;

  /**
   * Ownership verification status for the episode page URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean linkOwnershipVerified;

  /**
   * Number of minutes of podcasts listened by the user
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer listenTimeMin;

  /**
   * The rank of the show in the top listened shows candidate generator. Ranks are integral values
   * starting with 1 for the highest affinity show.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long listenedShowLevelRank;

  /**
   * This captures the fraction of total listening time accounted for by this show.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float listenedShowListeningAffinity;

  /**
   * Feature ID of a location. For more info, see go/feature-id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locationFeatureId;

  /**
   * Match score between user listening mids and episode webref entities, where the listening can
   * have happened at any time in the past. Values are in a 0.0 to 1.0 range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double longUserListeningWebrefSimilarity;

  /**
   * Score of medical safe search score go/safesearch
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double medicalScore;

  /**
   * Match score between user listening mids and episode webref entities, where the listening is
   * limited to last two mohths activity. Values are in a 0.0 to 1.0 range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double mediumUserListeningWebrefSimilarity;

  /**
   * boost score from the similarity between the candidate and the shows with user negative
   * feedback, currently the score will be applied directly to the final ranking score: go/podcast-
   * reaction-reranking-v1, but can be used as reranker model feature in the future.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float negativeReactionBoostScore;

  /**
   * Per cluster lift where the lift_squashing_factor is set to +2
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double nicheLift;

  /**
   * The number of users in this k-means cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long numListenersInKmeansCluster;

  /**
   * The number of users in the k-means cluster who have listened to this feed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long numListenersToShowInKmeansCluster;

  /**
   * Number of podcasts listened by the user
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numListens;

  /**
   * From: indexing/speech/proto/colisten-matrix.proto The number of subscribers for this podcast
   * series.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long numSubscribersShow;

  /**
   * From: indexing/speech/proto/colisten-matrix.proto Absolute number of unique listeners during
   * the past month.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long numUniqueListenersShow;

  /**
   * Score of offensive safe search score go/safesearch
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double offensiveScore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peDurationScoreEpisode;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peDurationScoreShow;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peDurationTotalScoreEpisode;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peDurationTotalScoreShow;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peFractionScoreEpisode;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peFractionScoreShow;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peFractionTotalScoreEpisode;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peFractionTotalScoreShow;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peListenScoreEpisode;

  /**
   * Anima User Embedding based features. Dot product of Anima User Embedding and podcast embeddings
   * from UserEmbeddingBasedSignals (podcasts/quality/proto/ranking_signals.proto)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peListenScoreShow;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peListenTotalScoreEpisode;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peListenTotalScoreShow;

  /**
   * Per cluster lift where the lift_squashing_factor is set to -3
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double popularLift;

  /**
   * Score of porn safe search score go/safesearch
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double pornScore;

  /**
   * boost score from the similarity between the candidate and the shows with user positive
   * feedback, currently the score will be applied directly to the final ranking score: go/podcast-
   * reaction-reranking-v1, but can be used as reranker model feature in the future.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float positiveReactionBoostScore;

  /**
   * This is the language extracted from the query_language.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String queryLanguage;

  /**
   * The index in the list of most popular podcasts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long rank;

  /**
   * rank_percent_contrib = 100 / ( 1 + rank_percent ) Here rank_percent was derived from show level
   * data in Wernicke corpus So if rank_percent of a feed was 3, then the feature value would be:
   * 100 / (1 + 3) = 25. This indicator falls off quickly from 100 to almost 1 as we go from
   * rank_percent 0 to 100.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double rankPercentContrib;

  /**
   * Match score between user listening mids and episode webref entities, where the listening is
   * limited to recent activity. Values are in a 0.0 to 1.0 range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double recentUserListeningWebrefSimilarity;

  /**
   * A reranking feature showing the age of the episode that is being recommended. This is computed
   * as (current time - publication_time) publication_time of the episode is defined:
   * (http://shortn/_S46Ouk5ZWW) publication_time is specified as seconds since Unix Epoch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long secondsSincePublication;

  /**
   * Base quality of the document, used as a multiplier for the query-specific score. Should be in
   * [0, 1] range. See: http://g3doc/indexing/moonshine/generic/g3doc/doc/scoring
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double showBaseQuality;

  /**
   * Number of show episode impressions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long showImpressions;

  /**
   * Number of show impressions during the past week.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long showImpressionsPastWeek;

  /**
   * Language of the show from show data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String showLanguage;

  /**
   * Show only impressions. Doesn't include shows of episode impressions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long showOnlyImpressions;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long showOnlyImpressionsPastWeek;

  /**
   * Expresses the absolute popularity rank within all documents.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long showPopularRank;

  /**
   * Score of spoof safe search score go/safesearch
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double spoofScore;

  /**
   * This captures the fraction of total listening time accounted for by this subscribed show.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float subscribedShowListeningAffinity;

  /**
   * The rank of the show in the subscription candidate generator. Ranks are integral values
   * starting with 1 for the highest subscribed affinity show.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long subscriptionShowLevelRank;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String surface;

  /**
   * Show level trending score percent from Wernicke corpus.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long trendingScorePercent;

  /**
   * Inferred language preferences of the user with their probabilities.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SuperrootPodcastsRecommendationsPodcastRecsFeaturesUserLanguage> ulpLanguage;

  /**
   * How much of ulp match the language of this episode
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float ulpLanguageMatch;

  /**
   * The distance between user's Anima embedding and the centroid of the cluster in k-means.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float userClusterDistance;

  /**
   * Match score between user interest mids and episode salient entities. in a 0.0 to 1.0 range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double userInterestsSalientSimilarity;

  /**
   * Match score between user interest mids and episode webref entities. in a 0.0 to 1.0 range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double userInterestsWebrefSimilarity;

  /**
   * Language of shows in user history and how much they listened to each.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SuperrootPodcastsRecommendationsPodcastRecsFeaturesUserLanguage> userLanguage;

  /**
   * Score of violence safe search score go/safesearch
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double violenceScore;

  /**
   * Score of vulgar safe search score go/safesearch
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double vulgarScore;

  /**
   * Average duration listened per episode. Ignores duration < 10s. Computed offline
   * @return value or {@code null} for none
   */
  public java.lang.Long getAverageDurationSecondsEpisode() {
    return averageDurationSecondsEpisode;
  }

  /**
   * Average duration listened per episode. Ignores duration < 10s. Computed offline
   * @param averageDurationSecondsEpisode averageDurationSecondsEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setAverageDurationSecondsEpisode(java.lang.Long averageDurationSecondsEpisode) {
    this.averageDurationSecondsEpisode = averageDurationSecondsEpisode;
    return this;
  }

  /**
   * Average duration listened per show. Ignores duration < 10s. Computed offline
   * @return value or {@code null} for none
   */
  public java.lang.Long getAverageDurationSecondsShow() {
    return averageDurationSecondsShow;
  }

  /**
   * Average duration listened per show. Ignores duration < 10s. Computed offline
   * @param averageDurationSecondsShow averageDurationSecondsShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setAverageDurationSecondsShow(java.lang.Long averageDurationSecondsShow) {
    this.averageDurationSecondsShow = averageDurationSecondsShow;
    return this;
  }

  /**
   * Average fraction of podcast listened per episode. Ignores duration < 10s. Computed offline
   * @return value or {@code null} for none
   */
  public java.lang.Double getAverageFractionEpisode() {
    return averageFractionEpisode;
  }

  /**
   * Average fraction of podcast listened per episode. Ignores duration < 10s. Computed offline
   * @param averageFractionEpisode averageFractionEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setAverageFractionEpisode(java.lang.Double averageFractionEpisode) {
    this.averageFractionEpisode = averageFractionEpisode;
    return this;
  }

  /**
   * Average fraction of podcast listened per show. Ignores duration < 10s. Computed offline
   * @return value or {@code null} for none
   */
  public java.lang.Double getAverageFractionShow() {
    return averageFractionShow;
  }

  /**
   * Average fraction of podcast listened per show. Ignores duration < 10s. Computed offline
   * @param averageFractionShow averageFractionShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setAverageFractionShow(java.lang.Double averageFractionShow) {
    this.averageFractionShow = averageFractionShow;
    return this;
  }

  /**
   * Per cluster lift where the lift_squashing_factor is set to 0.4
   * @return value or {@code null} for none
   */
  public java.lang.Double getBalancedLift() {
    return balancedLift;
  }

  /**
   * Per cluster lift where the lift_squashing_factor is set to 0.4
   * @param balancedLift balancedLift or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setBalancedLift(java.lang.Double balancedLift) {
    this.balancedLift = balancedLift;
    return this;
  }

  /**
   * category_match is a 0 to 1 score depicting how much of the user's listening history matches the
   * categories of this podcast recommendation.
   * @return value or {@code null} for none
   */
  public java.lang.Double getCategoryMatch() {
    return categoryMatch;
  }

  /**
   * category_match is a 0 to 1 score depicting how much of the user's listening history matches the
   * categories of this podcast recommendation.
   * @param categoryMatch categoryMatch or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setCategoryMatch(java.lang.Double categoryMatch) {
    this.categoryMatch = categoryMatch;
    return this;
  }

  /**
   * The total minutes listened to this podcast show by users in this cluster
   * @return value or {@code null} for none
   */
  public java.lang.Long getClusterFeedMinutes() {
    return clusterFeedMinutes;
  }

  /**
   * The total minutes listened to this podcast show by users in this cluster
   * @param clusterFeedMinutes clusterFeedMinutes or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setClusterFeedMinutes(java.lang.Long clusterFeedMinutes) {
    this.clusterFeedMinutes = clusterFeedMinutes;
    return this;
  }

  /**
   * This captures the probability that this show could have been listened by the user in lieu of
   * what they have subscribed or listened to.
   * @return value or {@code null} for none
   */
  public java.lang.Float getColistenedShowColistenAffinity() {
    return colistenedShowColistenAffinity;
  }

  /**
   * This captures the probability that this show could have been listened by the user in lieu of
   * what they have subscribed or listened to.
   * @param colistenedShowColistenAffinity colistenedShowColistenAffinity or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setColistenedShowColistenAffinity(java.lang.Float colistenedShowColistenAffinity) {
    this.colistenedShowColistenAffinity = colistenedShowColistenAffinity;
    return this;
  }

  /**
   * This captures the rank of the podcast show in the colisten candidate generator.
   * @return value or {@code null} for none
   */
  public java.lang.Long getColistenedShowLevelRank() {
    return colistenedShowLevelRank;
  }

  /**
   * This captures the rank of the podcast show in the colisten candidate generator.
   * @param colistenedShowLevelRank colistenedShowLevelRank or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setColistenedShowLevelRank(java.lang.Long colistenedShowLevelRank) {
    this.colistenedShowLevelRank = colistenedShowLevelRank;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getConvAiToxicitySevereScore() {
    return convAiToxicitySevereScore;
  }

  /**
   * @param convAiToxicitySevereScore convAiToxicitySevereScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setConvAiToxicitySevereScore(java.lang.Float convAiToxicitySevereScore) {
    this.convAiToxicitySevereScore = convAiToxicitySevereScore;
    return this;
  }

  /**
   * Score of csai safe search score go/safesearch
   * @return value or {@code null} for none
   */
  public java.lang.Double getCsaiScore() {
    return csaiScore;
  }

  /**
   * Score of csai safe search score go/safesearch
   * @param csaiScore csaiScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setCsaiScore(java.lang.Double csaiScore) {
    this.csaiScore = csaiScore;
    return this;
  }

  /**
   * Ordinal rank features like this have been found to be useful in Hermione Recipes, where the top
   * ranked items from a candidate generator is always retained. Ranks are integral values starting
   * with 1 for the highest affinity show.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDnnShowLevelRank() {
    return dnnShowLevelRank;
  }

  /**
   * Ordinal rank features like this have been found to be useful in Hermione Recipes, where the top
   * ranked items from a candidate generator is always retained. Ranks are integral values starting
   * with 1 for the highest affinity show.
   * @param dnnShowLevelRank dnnShowLevelRank or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setDnnShowLevelRank(java.lang.Long dnnShowLevelRank) {
    this.dnnShowLevelRank = dnnShowLevelRank;
    return this;
  }

  /**
   * Dot product of user embedding and podcast show embedding from the two tower model v2a
   * @return value or {@code null} for none
   */
  public java.lang.Float getDnnV2aScore() {
    return dnnV2aScore;
  }

  /**
   * Dot product of user embedding and podcast show embedding from the two tower model v2a
   * @param dnnV2aScore dnnV2aScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setDnnV2aScore(java.lang.Float dnnV2aScore) {
    this.dnnV2aScore = dnnV2aScore;
    return this;
  }

  /**
   * Sigmoid of the score obtained by dot product of user embedding and show embedding. See
   * https://b.corp.google.com/issues/158602034#comment2 for intuition.
   * @return value or {@code null} for none
   */
  public java.lang.Float getDnnV2aScoreSigmoid() {
    return dnnV2aScoreSigmoid;
  }

  /**
   * Sigmoid of the score obtained by dot product of user embedding and show embedding. See
   * https://b.corp.google.com/issues/158602034#comment2 for intuition.
   * @param dnnV2aScoreSigmoid dnnV2aScoreSigmoid or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setDnnV2aScoreSigmoid(java.lang.Float dnnV2aScoreSigmoid) {
    this.dnnV2aScoreSigmoid = dnnV2aScoreSigmoid;
    return this;
  }

  /**
   * Total duration listened for this episode by all users. Ignores duration < 10s. Computed offline
   * @return value or {@code null} for none
   */
  public java.lang.Long getDurationTotalSecondsEpisode() {
    return durationTotalSecondsEpisode;
  }

  /**
   * Total duration listened for this episode by all users. Ignores duration < 10s. Computed offline
   * @param durationTotalSecondsEpisode durationTotalSecondsEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setDurationTotalSecondsEpisode(java.lang.Long durationTotalSecondsEpisode) {
    this.durationTotalSecondsEpisode = durationTotalSecondsEpisode;
    return this;
  }

  /**
   * Total duration listened for this show by all users. Ignores duration < 10s. Computed offline
   * @return value or {@code null} for none
   */
  public java.lang.Long getDurationTotalSecondsShow() {
    return durationTotalSecondsShow;
  }

  /**
   * Total duration listened for this show by all users. Ignores duration < 10s. Computed offline
   * @param durationTotalSecondsShow durationTotalSecondsShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setDurationTotalSecondsShow(java.lang.Long durationTotalSecondsShow) {
    this.durationTotalSecondsShow = durationTotalSecondsShow;
    return this;
  }

  /**
   * The duration of a single episode, in seconds. - For show documents, this is a duration of a
   * typical recent episode, or an approximation thereof. - For episode documents, this is the
   * duration of the episode itself.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEpisodeDurationSec() {
    return episodeDurationSec;
  }

  /**
   * The duration of a single episode, in seconds. - For show documents, this is a duration of a
   * typical recent episode, or an approximation thereof. - For episode documents, this is the
   * duration of the episode itself.
   * @param episodeDurationSec episodeDurationSec or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setEpisodeDurationSec(java.lang.Long episodeDurationSec) {
    this.episodeDurationSec = episodeDurationSec;
    return this;
  }

  /**
   * Number of all episode impressions.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEpisodeImpressions() {
    return episodeImpressions;
  }

  /**
   * Number of all episode impressions.
   * @param episodeImpressions episodeImpressions or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setEpisodeImpressions(java.lang.Long episodeImpressions) {
    this.episodeImpressions = episodeImpressions;
    return this;
  }

  /**
   * Number of episode impressions during the past week.
   * @return value or {@code null} for none
   */
  public java.lang.Long getEpisodeImpressionsPastWeek() {
    return episodeImpressionsPastWeek;
  }

  /**
   * Number of episode impressions during the past week.
   * @param episodeImpressionsPastWeek episodeImpressionsPastWeek or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setEpisodeImpressionsPastWeek(java.lang.Long episodeImpressionsPastWeek) {
    this.episodeImpressionsPastWeek = episodeImpressionsPastWeek;
    return this;
  }

  /**
   * How frequently are podcasts published by this show. To see publishing frequency calculation go
   * here: http://shortn/_6zzfyEpBRq
   * @return value or {@code null} for none
   */
  public java.lang.Long getEpisodesPublishedPerMonth() {
    return episodesPublishedPerMonth;
  }

  /**
   * How frequently are podcasts published by this show. To see publishing frequency calculation go
   * here: http://shortn/_6zzfyEpBRq
   * @param episodesPublishedPerMonth episodesPublishedPerMonth or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setEpisodesPublishedPerMonth(java.lang.Long episodesPublishedPerMonth) {
    this.episodesPublishedPerMonth = episodesPublishedPerMonth;
    return this;
  }

  /**
   * Whether the show is marked as explicit by the authors
   * @return value or {@code null} for none
   */
  public java.lang.String getExplicitShow() {
    return explicitShow;
  }

  /**
   * Whether the show is marked as explicit by the authors
   * @param explicitShow explicitShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setExplicitShow(java.lang.String explicitShow) {
    this.explicitShow = explicitShow;
    return this;
  }

  /**
   * Scaled pagerank score for the feed url in [0..1]. Not to be confused with pagerank above, which
   * measures the pagerank for the feed's homepage.
   * @return value or {@code null} for none
   */
  public java.lang.Double getFeedPagerank() {
    return feedPagerank;
  }

  /**
   * Scaled pagerank score for the feed url in [0..1]. Not to be confused with pagerank above, which
   * measures the pagerank for the feed's homepage.
   * @param feedPagerank feedPagerank or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setFeedPagerank(java.lang.Double feedPagerank) {
    this.feedPagerank = feedPagerank;
    return this;
  }

  /**
   * final reaction boost score computed from positive_reaction_boost_score and
   * negative_reaction_boost_score. The score will be applied as a multiplier on the ranking score
   * to adjust the ranking.
   * @return value or {@code null} for none
   */
  public java.lang.Float getFinalReactionBoostScore() {
    return finalReactionBoostScore;
  }

  /**
   * final reaction boost score computed from positive_reaction_boost_score and
   * negative_reaction_boost_score. The score will be applied as a multiplier on the ranking score
   * to adjust the ranking.
   * @param finalReactionBoostScore finalReactionBoostScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setFinalReactionBoostScore(java.lang.Float finalReactionBoostScore) {
    this.finalReactionBoostScore = finalReactionBoostScore;
    return this;
  }

  /**
   * Some of all fraction of this listened by users. Ignores duration < 10s. Computed offline
   * @return value or {@code null} for none
   */
  public java.lang.Double getFractionTotalEpisode() {
    return fractionTotalEpisode;
  }

  /**
   * Some of all fraction of this listened by users. Ignores duration < 10s. Computed offline
   * @param fractionTotalEpisode fractionTotalEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setFractionTotalEpisode(java.lang.Double fractionTotalEpisode) {
    this.fractionTotalEpisode = fractionTotalEpisode;
    return this;
  }

  /**
   * Some of all fraction of this show listened by users. Ignores duration < 10s. Computed offline
   * @return value or {@code null} for none
   */
  public java.lang.Double getFractionTotalShow() {
    return fractionTotalShow;
  }

  /**
   * Some of all fraction of this show listened by users. Ignores duration < 10s. Computed offline
   * @param fractionTotalShow fractionTotalShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setFractionTotalShow(java.lang.Double fractionTotalShow) {
    this.fractionTotalShow = fractionTotalShow;
    return this;
  }

  /**
   * Score of fringe safe search score go/safesearch
   * @return value or {@code null} for none
   */
  public java.lang.Double getFringeScore() {
    return fringeScore;
  }

  /**
   * Score of fringe safe search score go/safesearch
   * @param fringeScore fringeScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setFringeScore(java.lang.Double fringeScore) {
    this.fringeScore = fringeScore;
    return this;
  }

  /**
   * Probability of a random user listening to this podcast randomly
   * @return value or {@code null} for none
   */
  public java.lang.Double getGlobalProb() {
    return globalProb;
  }

  /**
   * Probability of a random user listening to this podcast randomly
   * @param globalProb globalProb or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setGlobalProb(java.lang.Double globalProb) {
    this.globalProb = globalProb;
    return this;
  }

  /**
   * Probability of a random user from this cluster listening to this podcast randomly (K-means
   * specific feature)
   * @return value or {@code null} for none
   */
  public java.lang.Double getInClusterProb() {
    return inClusterProb;
  }

  /**
   * Probability of a random user from this cluster listening to this podcast randomly (K-means
   * specific feature)
   * @param inClusterProb inClusterProb or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setInClusterProb(java.lang.Double inClusterProb) {
    this.inClusterProb = inClusterProb;
    return this;
  }

  /**
   * A binary value based on whether this is a canonical source for a cluster.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsCanonical() {
    return isCanonical;
  }

  /**
   * A binary value based on whether this is a canonical source for a cluster.
   * @param isCanonical isCanonical or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setIsCanonical(java.lang.Boolean isCanonical) {
    this.isCanonical = isCanonical;
    return this;
  }

  /**
   * Ranks are integral values starting with 1 for the highest affinity show.
   * @return value or {@code null} for none
   */
  public java.lang.Long getKmeansShowLevelRank() {
    return kmeansShowLevelRank;
  }

  /**
   * Ranks are integral values starting with 1 for the highest affinity show.
   * @param kmeansShowLevelRank kmeansShowLevelRank or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setKmeansShowLevelRank(java.lang.Long kmeansShowLevelRank) {
    this.kmeansShowLevelRank = kmeansShowLevelRank;
    return this;
  }

  /**
   * How much of user listening history match the language of this episode
   * @return value or {@code null} for none
   */
  public java.lang.Double getLanguageMatch() {
    return languageMatch;
  }

  /**
   * How much of user listening history match the language of this episode
   * @param languageMatch languageMatch or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setLanguageMatch(java.lang.Double languageMatch) {
    this.languageMatch = languageMatch;
    return this;
  }

  /**
   * Ownership verification status for the episode page URL.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLinkOwnershipVerified() {
    return linkOwnershipVerified;
  }

  /**
   * Ownership verification status for the episode page URL.
   * @param linkOwnershipVerified linkOwnershipVerified or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setLinkOwnershipVerified(java.lang.Boolean linkOwnershipVerified) {
    this.linkOwnershipVerified = linkOwnershipVerified;
    return this;
  }

  /**
   * Number of minutes of podcasts listened by the user
   * @return value or {@code null} for none
   */
  public java.lang.Integer getListenTimeMin() {
    return listenTimeMin;
  }

  /**
   * Number of minutes of podcasts listened by the user
   * @param listenTimeMin listenTimeMin or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setListenTimeMin(java.lang.Integer listenTimeMin) {
    this.listenTimeMin = listenTimeMin;
    return this;
  }

  /**
   * The rank of the show in the top listened shows candidate generator. Ranks are integral values
   * starting with 1 for the highest affinity show.
   * @return value or {@code null} for none
   */
  public java.lang.Long getListenedShowLevelRank() {
    return listenedShowLevelRank;
  }

  /**
   * The rank of the show in the top listened shows candidate generator. Ranks are integral values
   * starting with 1 for the highest affinity show.
   * @param listenedShowLevelRank listenedShowLevelRank or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setListenedShowLevelRank(java.lang.Long listenedShowLevelRank) {
    this.listenedShowLevelRank = listenedShowLevelRank;
    return this;
  }

  /**
   * This captures the fraction of total listening time accounted for by this show.
   * @return value or {@code null} for none
   */
  public java.lang.Float getListenedShowListeningAffinity() {
    return listenedShowListeningAffinity;
  }

  /**
   * This captures the fraction of total listening time accounted for by this show.
   * @param listenedShowListeningAffinity listenedShowListeningAffinity or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setListenedShowListeningAffinity(java.lang.Float listenedShowListeningAffinity) {
    this.listenedShowListeningAffinity = listenedShowListeningAffinity;
    return this;
  }

  /**
   * Feature ID of a location. For more info, see go/feature-id.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocationFeatureId() {
    return locationFeatureId;
  }

  /**
   * Feature ID of a location. For more info, see go/feature-id.
   * @param locationFeatureId locationFeatureId or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setLocationFeatureId(java.lang.String locationFeatureId) {
    this.locationFeatureId = locationFeatureId;
    return this;
  }

  /**
   * Match score between user listening mids and episode webref entities, where the listening can
   * have happened at any time in the past. Values are in a 0.0 to 1.0 range.
   * @return value or {@code null} for none
   */
  public java.lang.Double getLongUserListeningWebrefSimilarity() {
    return longUserListeningWebrefSimilarity;
  }

  /**
   * Match score between user listening mids and episode webref entities, where the listening can
   * have happened at any time in the past. Values are in a 0.0 to 1.0 range.
   * @param longUserListeningWebrefSimilarity longUserListeningWebrefSimilarity or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setLongUserListeningWebrefSimilarity(java.lang.Double longUserListeningWebrefSimilarity) {
    this.longUserListeningWebrefSimilarity = longUserListeningWebrefSimilarity;
    return this;
  }

  /**
   * Score of medical safe search score go/safesearch
   * @return value or {@code null} for none
   */
  public java.lang.Double getMedicalScore() {
    return medicalScore;
  }

  /**
   * Score of medical safe search score go/safesearch
   * @param medicalScore medicalScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setMedicalScore(java.lang.Double medicalScore) {
    this.medicalScore = medicalScore;
    return this;
  }

  /**
   * Match score between user listening mids and episode webref entities, where the listening is
   * limited to last two mohths activity. Values are in a 0.0 to 1.0 range.
   * @return value or {@code null} for none
   */
  public java.lang.Double getMediumUserListeningWebrefSimilarity() {
    return mediumUserListeningWebrefSimilarity;
  }

  /**
   * Match score between user listening mids and episode webref entities, where the listening is
   * limited to last two mohths activity. Values are in a 0.0 to 1.0 range.
   * @param mediumUserListeningWebrefSimilarity mediumUserListeningWebrefSimilarity or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setMediumUserListeningWebrefSimilarity(java.lang.Double mediumUserListeningWebrefSimilarity) {
    this.mediumUserListeningWebrefSimilarity = mediumUserListeningWebrefSimilarity;
    return this;
  }

  /**
   * boost score from the similarity between the candidate and the shows with user negative
   * feedback, currently the score will be applied directly to the final ranking score: go/podcast-
   * reaction-reranking-v1, but can be used as reranker model feature in the future.
   * @return value or {@code null} for none
   */
  public java.lang.Float getNegativeReactionBoostScore() {
    return negativeReactionBoostScore;
  }

  /**
   * boost score from the similarity between the candidate and the shows with user negative
   * feedback, currently the score will be applied directly to the final ranking score: go/podcast-
   * reaction-reranking-v1, but can be used as reranker model feature in the future.
   * @param negativeReactionBoostScore negativeReactionBoostScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setNegativeReactionBoostScore(java.lang.Float negativeReactionBoostScore) {
    this.negativeReactionBoostScore = negativeReactionBoostScore;
    return this;
  }

  /**
   * Per cluster lift where the lift_squashing_factor is set to +2
   * @return value or {@code null} for none
   */
  public java.lang.Double getNicheLift() {
    return nicheLift;
  }

  /**
   * Per cluster lift where the lift_squashing_factor is set to +2
   * @param nicheLift nicheLift or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setNicheLift(java.lang.Double nicheLift) {
    this.nicheLift = nicheLift;
    return this;
  }

  /**
   * The number of users in this k-means cluster.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumListenersInKmeansCluster() {
    return numListenersInKmeansCluster;
  }

  /**
   * The number of users in this k-means cluster.
   * @param numListenersInKmeansCluster numListenersInKmeansCluster or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setNumListenersInKmeansCluster(java.lang.Long numListenersInKmeansCluster) {
    this.numListenersInKmeansCluster = numListenersInKmeansCluster;
    return this;
  }

  /**
   * The number of users in the k-means cluster who have listened to this feed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumListenersToShowInKmeansCluster() {
    return numListenersToShowInKmeansCluster;
  }

  /**
   * The number of users in the k-means cluster who have listened to this feed.
   * @param numListenersToShowInKmeansCluster numListenersToShowInKmeansCluster or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setNumListenersToShowInKmeansCluster(java.lang.Long numListenersToShowInKmeansCluster) {
    this.numListenersToShowInKmeansCluster = numListenersToShowInKmeansCluster;
    return this;
  }

  /**
   * Number of podcasts listened by the user
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumListens() {
    return numListens;
  }

  /**
   * Number of podcasts listened by the user
   * @param numListens numListens or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setNumListens(java.lang.Integer numListens) {
    this.numListens = numListens;
    return this;
  }

  /**
   * From: indexing/speech/proto/colisten-matrix.proto The number of subscribers for this podcast
   * series.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumSubscribersShow() {
    return numSubscribersShow;
  }

  /**
   * From: indexing/speech/proto/colisten-matrix.proto The number of subscribers for this podcast
   * series.
   * @param numSubscribersShow numSubscribersShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setNumSubscribersShow(java.lang.Long numSubscribersShow) {
    this.numSubscribersShow = numSubscribersShow;
    return this;
  }

  /**
   * From: indexing/speech/proto/colisten-matrix.proto Absolute number of unique listeners during
   * the past month.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumUniqueListenersShow() {
    return numUniqueListenersShow;
  }

  /**
   * From: indexing/speech/proto/colisten-matrix.proto Absolute number of unique listeners during
   * the past month.
   * @param numUniqueListenersShow numUniqueListenersShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setNumUniqueListenersShow(java.lang.Long numUniqueListenersShow) {
    this.numUniqueListenersShow = numUniqueListenersShow;
    return this;
  }

  /**
   * Score of offensive safe search score go/safesearch
   * @return value or {@code null} for none
   */
  public java.lang.Double getOffensiveScore() {
    return offensiveScore;
  }

  /**
   * Score of offensive safe search score go/safesearch
   * @param offensiveScore offensiveScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setOffensiveScore(java.lang.Double offensiveScore) {
    this.offensiveScore = offensiveScore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeDurationScoreEpisode() {
    return peDurationScoreEpisode;
  }

  /**
   * @param peDurationScoreEpisode peDurationScoreEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeDurationScoreEpisode(java.lang.Float peDurationScoreEpisode) {
    this.peDurationScoreEpisode = peDurationScoreEpisode;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeDurationScoreShow() {
    return peDurationScoreShow;
  }

  /**
   * @param peDurationScoreShow peDurationScoreShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeDurationScoreShow(java.lang.Float peDurationScoreShow) {
    this.peDurationScoreShow = peDurationScoreShow;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeDurationTotalScoreEpisode() {
    return peDurationTotalScoreEpisode;
  }

  /**
   * @param peDurationTotalScoreEpisode peDurationTotalScoreEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeDurationTotalScoreEpisode(java.lang.Float peDurationTotalScoreEpisode) {
    this.peDurationTotalScoreEpisode = peDurationTotalScoreEpisode;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeDurationTotalScoreShow() {
    return peDurationTotalScoreShow;
  }

  /**
   * @param peDurationTotalScoreShow peDurationTotalScoreShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeDurationTotalScoreShow(java.lang.Float peDurationTotalScoreShow) {
    this.peDurationTotalScoreShow = peDurationTotalScoreShow;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeFractionScoreEpisode() {
    return peFractionScoreEpisode;
  }

  /**
   * @param peFractionScoreEpisode peFractionScoreEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeFractionScoreEpisode(java.lang.Float peFractionScoreEpisode) {
    this.peFractionScoreEpisode = peFractionScoreEpisode;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeFractionScoreShow() {
    return peFractionScoreShow;
  }

  /**
   * @param peFractionScoreShow peFractionScoreShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeFractionScoreShow(java.lang.Float peFractionScoreShow) {
    this.peFractionScoreShow = peFractionScoreShow;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeFractionTotalScoreEpisode() {
    return peFractionTotalScoreEpisode;
  }

  /**
   * @param peFractionTotalScoreEpisode peFractionTotalScoreEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeFractionTotalScoreEpisode(java.lang.Float peFractionTotalScoreEpisode) {
    this.peFractionTotalScoreEpisode = peFractionTotalScoreEpisode;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeFractionTotalScoreShow() {
    return peFractionTotalScoreShow;
  }

  /**
   * @param peFractionTotalScoreShow peFractionTotalScoreShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeFractionTotalScoreShow(java.lang.Float peFractionTotalScoreShow) {
    this.peFractionTotalScoreShow = peFractionTotalScoreShow;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeListenScoreEpisode() {
    return peListenScoreEpisode;
  }

  /**
   * @param peListenScoreEpisode peListenScoreEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeListenScoreEpisode(java.lang.Float peListenScoreEpisode) {
    this.peListenScoreEpisode = peListenScoreEpisode;
    return this;
  }

  /**
   * Anima User Embedding based features. Dot product of Anima User Embedding and podcast embeddings
   * from UserEmbeddingBasedSignals (podcasts/quality/proto/ranking_signals.proto)
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeListenScoreShow() {
    return peListenScoreShow;
  }

  /**
   * Anima User Embedding based features. Dot product of Anima User Embedding and podcast embeddings
   * from UserEmbeddingBasedSignals (podcasts/quality/proto/ranking_signals.proto)
   * @param peListenScoreShow peListenScoreShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeListenScoreShow(java.lang.Float peListenScoreShow) {
    this.peListenScoreShow = peListenScoreShow;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeListenTotalScoreEpisode() {
    return peListenTotalScoreEpisode;
  }

  /**
   * @param peListenTotalScoreEpisode peListenTotalScoreEpisode or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeListenTotalScoreEpisode(java.lang.Float peListenTotalScoreEpisode) {
    this.peListenTotalScoreEpisode = peListenTotalScoreEpisode;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeListenTotalScoreShow() {
    return peListenTotalScoreShow;
  }

  /**
   * @param peListenTotalScoreShow peListenTotalScoreShow or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPeListenTotalScoreShow(java.lang.Float peListenTotalScoreShow) {
    this.peListenTotalScoreShow = peListenTotalScoreShow;
    return this;
  }

  /**
   * Per cluster lift where the lift_squashing_factor is set to -3
   * @return value or {@code null} for none
   */
  public java.lang.Double getPopularLift() {
    return popularLift;
  }

  /**
   * Per cluster lift where the lift_squashing_factor is set to -3
   * @param popularLift popularLift or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPopularLift(java.lang.Double popularLift) {
    this.popularLift = popularLift;
    return this;
  }

  /**
   * Score of porn safe search score go/safesearch
   * @return value or {@code null} for none
   */
  public java.lang.Double getPornScore() {
    return pornScore;
  }

  /**
   * Score of porn safe search score go/safesearch
   * @param pornScore pornScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPornScore(java.lang.Double pornScore) {
    this.pornScore = pornScore;
    return this;
  }

  /**
   * boost score from the similarity between the candidate and the shows with user positive
   * feedback, currently the score will be applied directly to the final ranking score: go/podcast-
   * reaction-reranking-v1, but can be used as reranker model feature in the future.
   * @return value or {@code null} for none
   */
  public java.lang.Float getPositiveReactionBoostScore() {
    return positiveReactionBoostScore;
  }

  /**
   * boost score from the similarity between the candidate and the shows with user positive
   * feedback, currently the score will be applied directly to the final ranking score: go/podcast-
   * reaction-reranking-v1, but can be used as reranker model feature in the future.
   * @param positiveReactionBoostScore positiveReactionBoostScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setPositiveReactionBoostScore(java.lang.Float positiveReactionBoostScore) {
    this.positiveReactionBoostScore = positiveReactionBoostScore;
    return this;
  }

  /**
   * This is the language extracted from the query_language.
   * @return value or {@code null} for none
   */
  public java.lang.String getQueryLanguage() {
    return queryLanguage;
  }

  /**
   * This is the language extracted from the query_language.
   * @param queryLanguage queryLanguage or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setQueryLanguage(java.lang.String queryLanguage) {
    this.queryLanguage = queryLanguage;
    return this;
  }

  /**
   * The index in the list of most popular podcasts.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRank() {
    return rank;
  }

  /**
   * The index in the list of most popular podcasts.
   * @param rank rank or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setRank(java.lang.Long rank) {
    this.rank = rank;
    return this;
  }

  /**
   * rank_percent_contrib = 100 / ( 1 + rank_percent ) Here rank_percent was derived from show level
   * data in Wernicke corpus So if rank_percent of a feed was 3, then the feature value would be:
   * 100 / (1 + 3) = 25. This indicator falls off quickly from 100 to almost 1 as we go from
   * rank_percent 0 to 100.
   * @return value or {@code null} for none
   */
  public java.lang.Double getRankPercentContrib() {
    return rankPercentContrib;
  }

  /**
   * rank_percent_contrib = 100 / ( 1 + rank_percent ) Here rank_percent was derived from show level
   * data in Wernicke corpus So if rank_percent of a feed was 3, then the feature value would be:
   * 100 / (1 + 3) = 25. This indicator falls off quickly from 100 to almost 1 as we go from
   * rank_percent 0 to 100.
   * @param rankPercentContrib rankPercentContrib or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setRankPercentContrib(java.lang.Double rankPercentContrib) {
    this.rankPercentContrib = rankPercentContrib;
    return this;
  }

  /**
   * Match score between user listening mids and episode webref entities, where the listening is
   * limited to recent activity. Values are in a 0.0 to 1.0 range.
   * @return value or {@code null} for none
   */
  public java.lang.Double getRecentUserListeningWebrefSimilarity() {
    return recentUserListeningWebrefSimilarity;
  }

  /**
   * Match score between user listening mids and episode webref entities, where the listening is
   * limited to recent activity. Values are in a 0.0 to 1.0 range.
   * @param recentUserListeningWebrefSimilarity recentUserListeningWebrefSimilarity or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setRecentUserListeningWebrefSimilarity(java.lang.Double recentUserListeningWebrefSimilarity) {
    this.recentUserListeningWebrefSimilarity = recentUserListeningWebrefSimilarity;
    return this;
  }

  /**
   * A reranking feature showing the age of the episode that is being recommended. This is computed
   * as (current time - publication_time) publication_time of the episode is defined:
   * (http://shortn/_S46Ouk5ZWW) publication_time is specified as seconds since Unix Epoch.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSecondsSincePublication() {
    return secondsSincePublication;
  }

  /**
   * A reranking feature showing the age of the episode that is being recommended. This is computed
   * as (current time - publication_time) publication_time of the episode is defined:
   * (http://shortn/_S46Ouk5ZWW) publication_time is specified as seconds since Unix Epoch.
   * @param secondsSincePublication secondsSincePublication or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setSecondsSincePublication(java.lang.Long secondsSincePublication) {
    this.secondsSincePublication = secondsSincePublication;
    return this;
  }

  /**
   * Base quality of the document, used as a multiplier for the query-specific score. Should be in
   * [0, 1] range. See: http://g3doc/indexing/moonshine/generic/g3doc/doc/scoring
   * @return value or {@code null} for none
   */
  public java.lang.Double getShowBaseQuality() {
    return showBaseQuality;
  }

  /**
   * Base quality of the document, used as a multiplier for the query-specific score. Should be in
   * [0, 1] range. See: http://g3doc/indexing/moonshine/generic/g3doc/doc/scoring
   * @param showBaseQuality showBaseQuality or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setShowBaseQuality(java.lang.Double showBaseQuality) {
    this.showBaseQuality = showBaseQuality;
    return this;
  }

  /**
   * Number of show episode impressions.
   * @return value or {@code null} for none
   */
  public java.lang.Long getShowImpressions() {
    return showImpressions;
  }

  /**
   * Number of show episode impressions.
   * @param showImpressions showImpressions or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setShowImpressions(java.lang.Long showImpressions) {
    this.showImpressions = showImpressions;
    return this;
  }

  /**
   * Number of show impressions during the past week.
   * @return value or {@code null} for none
   */
  public java.lang.Long getShowImpressionsPastWeek() {
    return showImpressionsPastWeek;
  }

  /**
   * Number of show impressions during the past week.
   * @param showImpressionsPastWeek showImpressionsPastWeek or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setShowImpressionsPastWeek(java.lang.Long showImpressionsPastWeek) {
    this.showImpressionsPastWeek = showImpressionsPastWeek;
    return this;
  }

  /**
   * Language of the show from show data.
   * @return value or {@code null} for none
   */
  public java.lang.String getShowLanguage() {
    return showLanguage;
  }

  /**
   * Language of the show from show data.
   * @param showLanguage showLanguage or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setShowLanguage(java.lang.String showLanguage) {
    this.showLanguage = showLanguage;
    return this;
  }

  /**
   * Show only impressions. Doesn't include shows of episode impressions.
   * @return value or {@code null} for none
   */
  public java.lang.Long getShowOnlyImpressions() {
    return showOnlyImpressions;
  }

  /**
   * Show only impressions. Doesn't include shows of episode impressions.
   * @param showOnlyImpressions showOnlyImpressions or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setShowOnlyImpressions(java.lang.Long showOnlyImpressions) {
    this.showOnlyImpressions = showOnlyImpressions;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getShowOnlyImpressionsPastWeek() {
    return showOnlyImpressionsPastWeek;
  }

  /**
   * @param showOnlyImpressionsPastWeek showOnlyImpressionsPastWeek or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setShowOnlyImpressionsPastWeek(java.lang.Long showOnlyImpressionsPastWeek) {
    this.showOnlyImpressionsPastWeek = showOnlyImpressionsPastWeek;
    return this;
  }

  /**
   * Expresses the absolute popularity rank within all documents.
   * @return value or {@code null} for none
   */
  public java.lang.Long getShowPopularRank() {
    return showPopularRank;
  }

  /**
   * Expresses the absolute popularity rank within all documents.
   * @param showPopularRank showPopularRank or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setShowPopularRank(java.lang.Long showPopularRank) {
    this.showPopularRank = showPopularRank;
    return this;
  }

  /**
   * Score of spoof safe search score go/safesearch
   * @return value or {@code null} for none
   */
  public java.lang.Double getSpoofScore() {
    return spoofScore;
  }

  /**
   * Score of spoof safe search score go/safesearch
   * @param spoofScore spoofScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setSpoofScore(java.lang.Double spoofScore) {
    this.spoofScore = spoofScore;
    return this;
  }

  /**
   * This captures the fraction of total listening time accounted for by this subscribed show.
   * @return value or {@code null} for none
   */
  public java.lang.Float getSubscribedShowListeningAffinity() {
    return subscribedShowListeningAffinity;
  }

  /**
   * This captures the fraction of total listening time accounted for by this subscribed show.
   * @param subscribedShowListeningAffinity subscribedShowListeningAffinity or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setSubscribedShowListeningAffinity(java.lang.Float subscribedShowListeningAffinity) {
    this.subscribedShowListeningAffinity = subscribedShowListeningAffinity;
    return this;
  }

  /**
   * The rank of the show in the subscription candidate generator. Ranks are integral values
   * starting with 1 for the highest subscribed affinity show.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSubscriptionShowLevelRank() {
    return subscriptionShowLevelRank;
  }

  /**
   * The rank of the show in the subscription candidate generator. Ranks are integral values
   * starting with 1 for the highest subscribed affinity show.
   * @param subscriptionShowLevelRank subscriptionShowLevelRank or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setSubscriptionShowLevelRank(java.lang.Long subscriptionShowLevelRank) {
    this.subscriptionShowLevelRank = subscriptionShowLevelRank;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSurface() {
    return surface;
  }

  /**
   * @param surface surface or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setSurface(java.lang.String surface) {
    this.surface = surface;
    return this;
  }

  /**
   * Show level trending score percent from Wernicke corpus.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTrendingScorePercent() {
    return trendingScorePercent;
  }

  /**
   * Show level trending score percent from Wernicke corpus.
   * @param trendingScorePercent trendingScorePercent or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setTrendingScorePercent(java.lang.Long trendingScorePercent) {
    this.trendingScorePercent = trendingScorePercent;
    return this;
  }

  /**
   * Inferred language preferences of the user with their probabilities.
   * @return value or {@code null} for none
   */
  public java.util.List<SuperrootPodcastsRecommendationsPodcastRecsFeaturesUserLanguage> getUlpLanguage() {
    return ulpLanguage;
  }

  /**
   * Inferred language preferences of the user with their probabilities.
   * @param ulpLanguage ulpLanguage or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setUlpLanguage(java.util.List<SuperrootPodcastsRecommendationsPodcastRecsFeaturesUserLanguage> ulpLanguage) {
    this.ulpLanguage = ulpLanguage;
    return this;
  }

  /**
   * How much of ulp match the language of this episode
   * @return value or {@code null} for none
   */
  public java.lang.Float getUlpLanguageMatch() {
    return ulpLanguageMatch;
  }

  /**
   * How much of ulp match the language of this episode
   * @param ulpLanguageMatch ulpLanguageMatch or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setUlpLanguageMatch(java.lang.Float ulpLanguageMatch) {
    this.ulpLanguageMatch = ulpLanguageMatch;
    return this;
  }

  /**
   * The distance between user's Anima embedding and the centroid of the cluster in k-means.
   * @return value or {@code null} for none
   */
  public java.lang.Float getUserClusterDistance() {
    return userClusterDistance;
  }

  /**
   * The distance between user's Anima embedding and the centroid of the cluster in k-means.
   * @param userClusterDistance userClusterDistance or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setUserClusterDistance(java.lang.Float userClusterDistance) {
    this.userClusterDistance = userClusterDistance;
    return this;
  }

  /**
   * Match score between user interest mids and episode salient entities. in a 0.0 to 1.0 range.
   * @return value or {@code null} for none
   */
  public java.lang.Double getUserInterestsSalientSimilarity() {
    return userInterestsSalientSimilarity;
  }

  /**
   * Match score between user interest mids and episode salient entities. in a 0.0 to 1.0 range.
   * @param userInterestsSalientSimilarity userInterestsSalientSimilarity or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setUserInterestsSalientSimilarity(java.lang.Double userInterestsSalientSimilarity) {
    this.userInterestsSalientSimilarity = userInterestsSalientSimilarity;
    return this;
  }

  /**
   * Match score between user interest mids and episode webref entities. in a 0.0 to 1.0 range.
   * @return value or {@code null} for none
   */
  public java.lang.Double getUserInterestsWebrefSimilarity() {
    return userInterestsWebrefSimilarity;
  }

  /**
   * Match score between user interest mids and episode webref entities. in a 0.0 to 1.0 range.
   * @param userInterestsWebrefSimilarity userInterestsWebrefSimilarity or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setUserInterestsWebrefSimilarity(java.lang.Double userInterestsWebrefSimilarity) {
    this.userInterestsWebrefSimilarity = userInterestsWebrefSimilarity;
    return this;
  }

  /**
   * Language of shows in user history and how much they listened to each.
   * @return value or {@code null} for none
   */
  public java.util.List<SuperrootPodcastsRecommendationsPodcastRecsFeaturesUserLanguage> getUserLanguage() {
    return userLanguage;
  }

  /**
   * Language of shows in user history and how much they listened to each.
   * @param userLanguage userLanguage or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setUserLanguage(java.util.List<SuperrootPodcastsRecommendationsPodcastRecsFeaturesUserLanguage> userLanguage) {
    this.userLanguage = userLanguage;
    return this;
  }

  /**
   * Score of violence safe search score go/safesearch
   * @return value or {@code null} for none
   */
  public java.lang.Double getViolenceScore() {
    return violenceScore;
  }

  /**
   * Score of violence safe search score go/safesearch
   * @param violenceScore violenceScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setViolenceScore(java.lang.Double violenceScore) {
    this.violenceScore = violenceScore;
    return this;
  }

  /**
   * Score of vulgar safe search score go/safesearch
   * @return value or {@code null} for none
   */
  public java.lang.Double getVulgarScore() {
    return vulgarScore;
  }

  /**
   * Score of vulgar safe search score go/safesearch
   * @param vulgarScore vulgarScore or {@code null} for none
   */
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures setVulgarScore(java.lang.Double vulgarScore) {
    this.vulgarScore = vulgarScore;
    return this;
  }

  @Override
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures set(String fieldName, Object value) {
    return (SuperrootPodcastsRecommendationsPodcastRecsFeatures) super.set(fieldName, value);
  }

  @Override
  public SuperrootPodcastsRecommendationsPodcastRecsFeatures clone() {
    return (SuperrootPodcastsRecommendationsPodcastRecsFeatures) super.clone();
  }

}
