/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securitycenter.v1beta2.model;

/**
 * Resource capturing the settings for Security Center.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Security Command Center API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SecurityCenterSettings extends com.google.api.client.json.GenericJson {

  /**
   * The resource name of the project to send logs to. This project must be part of the organization
   * this resource resides in. The format is `projects/{project_id}`. An empty value disables
   * logging. This value is only referenced by services that support log sink. Please refer to the
   * documentation for an updated list of compatible services.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String logSinkProject;

  /**
   * The resource name of the SecurityCenterSettings. Format:
   * organizations/{organization}/securityCenterSettings
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The organization level service account to be used for security center components.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String orgServiceAccount;

  /**
   * The resource name of the project to send logs to. This project must be part of the organization
   * this resource resides in. The format is `projects/{project_id}`. An empty value disables
   * logging. This value is only referenced by services that support log sink. Please refer to the
   * documentation for an updated list of compatible services.
   * @return value or {@code null} for none
   */
  public java.lang.String getLogSinkProject() {
    return logSinkProject;
  }

  /**
   * The resource name of the project to send logs to. This project must be part of the organization
   * this resource resides in. The format is `projects/{project_id}`. An empty value disables
   * logging. This value is only referenced by services that support log sink. Please refer to the
   * documentation for an updated list of compatible services.
   * @param logSinkProject logSinkProject or {@code null} for none
   */
  public SecurityCenterSettings setLogSinkProject(java.lang.String logSinkProject) {
    this.logSinkProject = logSinkProject;
    return this;
  }

  /**
   * The resource name of the SecurityCenterSettings. Format:
   * organizations/{organization}/securityCenterSettings
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name of the SecurityCenterSettings. Format:
   * organizations/{organization}/securityCenterSettings
   * @param name name or {@code null} for none
   */
  public SecurityCenterSettings setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The organization level service account to be used for security center components.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrgServiceAccount() {
    return orgServiceAccount;
  }

  /**
   * The organization level service account to be used for security center components.
   * @param orgServiceAccount orgServiceAccount or {@code null} for none
   */
  public SecurityCenterSettings setOrgServiceAccount(java.lang.String orgServiceAccount) {
    this.orgServiceAccount = orgServiceAccount;
    return this;
  }

  @Override
  public SecurityCenterSettings set(String fieldName, Object value) {
    return (SecurityCenterSettings) super.set(fieldName, value);
  }

  @Override
  public SecurityCenterSettings clone() {
    return (SecurityCenterSettings) super.clone();
  }

}
