/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.managedkafka.v1.model;

/**
 * Task Retry Policy is implemented on a best-effort basis. Retry delay will be exponential based on
 * provided minimum and maximum backoffs. https://en.wikipedia.org/wiki/Exponential_backoff. Note
 * that the delay between consecutive task restarts may not always precisely match the configured
 * settings. This can happen when the ConnectCluster is in rebalancing state or if the
 * ConnectCluster is unresponsive etc. The default values for minimum and maximum backoffs are 60
 * seconds and 30 minutes respectively.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Managed Service for Apache Kafka API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TaskRetryPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The maximum amount of time to wait before retrying a failed task. This sets an upper
   * bound for the backoff delay.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String maximumBackoff;

  /**
   * Optional. The minimum amount of time to wait before retrying a failed task. This sets a lower
   * bound for the backoff delay.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String minimumBackoff;

  /**
   * Optional. The maximum amount of time to wait before retrying a failed task. This sets an upper
   * bound for the backoff delay.
   * @return value or {@code null} for none
   */
  public String getMaximumBackoff() {
    return maximumBackoff;
  }

  /**
   * Optional. The maximum amount of time to wait before retrying a failed task. This sets an upper
   * bound for the backoff delay.
   * @param maximumBackoff maximumBackoff or {@code null} for none
   */
  public TaskRetryPolicy setMaximumBackoff(String maximumBackoff) {
    this.maximumBackoff = maximumBackoff;
    return this;
  }

  /**
   * Optional. The minimum amount of time to wait before retrying a failed task. This sets a lower
   * bound for the backoff delay.
   * @return value or {@code null} for none
   */
  public String getMinimumBackoff() {
    return minimumBackoff;
  }

  /**
   * Optional. The minimum amount of time to wait before retrying a failed task. This sets a lower
   * bound for the backoff delay.
   * @param minimumBackoff minimumBackoff or {@code null} for none
   */
  public TaskRetryPolicy setMinimumBackoff(String minimumBackoff) {
    this.minimumBackoff = minimumBackoff;
    return this;
  }

  @Override
  public TaskRetryPolicy set(String fieldName, Object value) {
    return (TaskRetryPolicy) super.set(fieldName, value);
  }

  @Override
  public TaskRetryPolicy clone() {
    return (TaskRetryPolicy) super.clone();
  }

}
