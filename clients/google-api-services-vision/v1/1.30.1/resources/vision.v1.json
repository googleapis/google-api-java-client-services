{
  "title": "Cloud Vision API",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "resources": {
        "files": {
          "methods": {
            "asyncBatchAnnotate": {
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/files:asyncBatchAnnotate",
              "path": "v1/{+parent}/files:asyncBatchAnnotate",
              "id": "vision.projects.files.asyncBatchAnnotate",
              "request": {
                "$ref": "AsyncBatchAnnotateFilesRequest"
              },
              "description": "Run asynchronous image detection and annotation for a list of generic\nfiles, such as PDF files, which may contain multiple pages and multiple\nimages per page. Progress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results)."
            },
            "annotate": {
              "response": {
                "$ref": "BatchAnnotateFilesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "parameters": {
                "parent": {
                  "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/files:annotate",
              "path": "v1/{+parent}/files:annotate",
              "id": "vision.projects.files.annotate",
              "request": {
                "$ref": "BatchAnnotateFilesRequest"
              },
              "description": "Service that performs image detection and annotation for a batch of files.\nNow only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported.\n\nThis service will extract at most 5 (customers can specify which 5 in\nAnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each\nfile provided and perform detection and annotation for each image\nextracted."
            }
          }
        },
        "images": {
          "methods": {
            "asyncBatchAnnotate": {
              "description": "Run asynchronous image detection and annotation for a list of images.\n\nProgress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results).\n\nThis service will write image annotation outputs to json files in customer\nGCS bucket, each json file containing BatchAnnotateImagesResponse proto.",
              "request": {
                "$ref": "AsyncBatchAnnotateImagesRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "flatPath": "v1/projects/{projectsId}/images:asyncBatchAnnotate",
              "path": "v1/{+parent}/images:asyncBatchAnnotate",
              "id": "vision.projects.images.asyncBatchAnnotate"
            },
            "annotate": {
              "description": "Run image detection and annotation for a batch of images.",
              "request": {
                "$ref": "BatchAnnotateImagesRequest"
              },
              "response": {
                "$ref": "BatchAnnotateImagesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "flatPath": "v1/projects/{projectsId}/images:annotate",
              "path": "v1/{+parent}/images:annotate",
              "id": "vision.projects.images.annotate"
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "location": "path",
                  "description": "The name of the operation resource."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}",
              "path": "v1/{+name}",
              "id": "vision.projects.operations.get",
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
            }
          }
        },
        "locations": {
          "resources": {
            "productSets": {
              "methods": {
                "delete": {
                  "id": "vision.projects.locations.productSets.delete",
                  "path": "v1/{+name}",
                  "description": "Permanently deletes a ProductSet. Products and ReferenceImages in the\nProductSet are not deleted.\n\nThe actual image files are not deleted from Google Cloud Storage.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/productSets/[^/]+$",
                      "location": "path",
                      "description": "Resource name of the ProductSet to delete.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}"
                },
                "import": {
                  "id": "vision.projects.locations.productSets.import",
                  "path": "v1/{+parent}/productSets:import",
                  "description": "Asynchronous API that imports a list of reference images to specified\nproduct sets based on a list of image information.\n\nThe google.longrunning.Operation API can be used to keep track of the\nprogress and results of the request.\n`Operation.metadata` contains `BatchOperationMetadata`. (progress)\n`Operation.response` contains `ImportProductSetsResponse`. (results)\n\nThe input source of this method is a csv file on Google Cloud Storage.\nFor the format of the csv file please see\nImportProductSetsGcsSource.csv_file_uri.",
                  "request": {
                    "$ref": "ImportProductSetsRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "description": "The project in which the ProductSets should be imported.\n\nFormat is `projects/PROJECT_ID/locations/LOC_ID`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/productSets:import"
                },
                "list": {
                  "description": "Lists ProductSets in an unspecified order.\n\nPossible errors:\n\n* Returns INVALID_ARGUMENT if page_size is greater than 100, or less\n  than 1.",
                  "response": {
                    "$ref": "ListProductSetsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "The next_page_token returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of items to return. Default 10, maximum 100.",
                      "format": "int32"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The project from which ProductSets should be listed.\n\nFormat is `projects/PROJECT_ID/locations/LOC_ID`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/productSets",
                  "path": "v1/{+parent}/productSets",
                  "id": "vision.projects.locations.productSets.list"
                },
                "addProduct": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/productSets/[^/]+$",
                      "location": "path",
                      "description": "The resource name for the ProductSet to modify.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:addProduct",
                  "path": "v1/{+name}:addProduct",
                  "id": "vision.projects.locations.productSets.addProduct",
                  "description": "Adds a Product to the specified ProductSet. If the Product is already\npresent, no change is made.\n\nOne Product can be added to at most 100 ProductSets.\n\nPossible errors:\n\n* Returns NOT_FOUND if the Product or the ProductSet doesn't exist.",
                  "request": {
                    "$ref": "AddProductToProductSetRequest"
                  }
                },
                "create": {
                  "response": {
                    "$ref": "ProductSet"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameters": {
                    "productSetId": {
                      "description": "A user-supplied resource id for this ProductSet. If set, the server will\nattempt to use this value as the resource id. If it is already in use, an\nerror is returned with code ALREADY_EXISTS. Must be at most 128 characters\nlong. It cannot contain the character `/`.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The project in which the ProductSet should be created.\n\nFormat is `projects/PROJECT_ID/locations/LOC_ID`."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/productSets",
                  "path": "v1/{+parent}/productSets",
                  "id": "vision.projects.locations.productSets.create",
                  "request": {
                    "$ref": "ProductSet"
                  },
                  "description": "Creates and returns a new ProductSet resource.\n\nPossible errors:\n\n* Returns INVALID_ARGUMENT if display_name is missing, or is longer than\n  4096 characters."
                },
                "removeProduct": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:removeProduct",
                  "path": "v1/{+name}:removeProduct",
                  "id": "vision.projects.locations.productSets.removeProduct",
                  "request": {
                    "$ref": "RemoveProductFromProductSetRequest"
                  },
                  "description": "Removes a Product from the specified ProductSet.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/productSets/[^/]+$",
                      "location": "path",
                      "description": "The resource name for the ProductSet to modify.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`"
                    }
                  }
                },
                "get": {
                  "description": "Gets information associated with a ProductSet.\n\nPossible errors:\n\n* Returns NOT_FOUND if the ProductSet does not exist.",
                  "response": {
                    "$ref": "ProductSet"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Resource name of the ProductSet to get.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOG_ID/productSets/PRODUCT_SET_ID`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/productSets/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}",
                  "path": "v1/{+name}",
                  "id": "vision.projects.locations.productSets.get"
                },
                "patch": {
                  "request": {
                    "$ref": "ProductSet"
                  },
                  "description": "Makes changes to a ProductSet resource.\nOnly display_name can be updated currently.\n\nPossible errors:\n\n* Returns NOT_FOUND if the ProductSet does not exist.\n* Returns INVALID_ARGUMENT if display_name is present in update_mask but\n  missing from the request or longer than 4096 characters.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ProductSet"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The FieldMask that specifies which fields to\nupdate.\nIf update_mask isn't specified, all mutable fields are to be updated.\nValid mask path is `display_name`.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/productSets/[^/]+$",
                      "location": "path",
                      "description": "The resource name of the ProductSet.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.\n\nThis field is ignored when creating a ProductSet.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}",
                  "id": "vision.projects.locations.productSets.patch",
                  "path": "v1/{+name}"
                }
              },
              "resources": {
                "products": {
                  "methods": {
                    "list": {
                      "id": "vision.projects.locations.productSets.products.list",
                      "path": "v1/{+name}/products",
                      "description": "Lists the Products in a ProductSet, in an unspecified order. If the\nProductSet does not exist, the products field of the response will be\nempty.\n\nPossible errors:\n\n* Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListProductsInProductSetResponse"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "The ProductSet resource for which to retrieve Products.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/productSets/[^/]+$"
                        },
                        "pageToken": {
                          "description": "The next_page_token returned from a previous List request, if any.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of items to return. Default 10, maximum 100.",
                          "format": "int32"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-vision"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}/products"
                    }
                  }
                }
              }
            },
            "images": {
              "methods": {
                "asyncBatchAnnotate": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/images:asyncBatchAnnotate",
                  "path": "v1/{+parent}/images:asyncBatchAnnotate",
                  "id": "vision.projects.locations.images.asyncBatchAnnotate",
                  "request": {
                    "$ref": "AsyncBatchAnnotateImagesRequest"
                  },
                  "description": "Run asynchronous image detection and annotation for a list of images.\n\nProgress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results).\n\nThis service will write image annotation outputs to json files in customer\nGCS bucket, each json file containing BatchAnnotateImagesResponse proto."
                },
                "annotate": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/images:annotate",
                  "path": "v1/{+parent}/images:annotate",
                  "id": "vision.projects.locations.images.annotate",
                  "request": {
                    "$ref": "BatchAnnotateImagesRequest"
                  },
                  "description": "Run image detection and annotation for a batch of images.",
                  "response": {
                    "$ref": "BatchAnnotateImagesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST"
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1/{+name}",
                  "id": "vision.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "products": {
              "methods": {
                "delete": {
                  "description": "Permanently deletes a product and its reference images.\n\nMetadata of the product and all its images will be deleted right away, but\nsearch queries against ProductSets containing the product may still work\nuntil all related caches are refreshed.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/products/[^/]+$",
                      "location": "path",
                      "description": "Resource name of product to delete.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}",
                  "path": "v1/{+name}",
                  "id": "vision.projects.locations.products.delete"
                },
                "list": {
                  "path": "v1/{+parent}/products",
                  "id": "vision.projects.locations.products.list",
                  "description": "Lists products in an unspecified order.\n\nPossible errors:\n\n* Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.",
                  "response": {
                    "$ref": "ListProductsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The project OR ProductSet from which Products should be listed.\n\nFormat:\n`projects/PROJECT_ID/locations/LOC_ID`",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The next_page_token returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return. Default 10, maximum 100.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products"
                },
                "create": {
                  "description": "Creates and returns a new product resource.\n\nPossible errors:\n\n* Returns INVALID_ARGUMENT if display_name is missing or longer than 4096\n  characters.\n* Returns INVALID_ARGUMENT if description is longer than 4096 characters.\n* Returns INVALID_ARGUMENT if product_category is missing or invalid.",
                  "request": {
                    "$ref": "Product"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Product"
                  },
                  "parameters": {
                    "productId": {
                      "location": "query",
                      "description": "A user-supplied resource id for this Product. If set, the server will\nattempt to use this value as the resource id. If it is already in use, an\nerror is returned with code ALREADY_EXISTS. Must be at most 128 characters\nlong. It cannot contain the character `/`.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "The project in which the Product should be created.\n\nFormat is\n`projects/PROJECT_ID/locations/LOC_ID`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products",
                  "id": "vision.projects.locations.products.create",
                  "path": "v1/{+parent}/products"
                },
                "get": {
                  "response": {
                    "$ref": "Product"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Resource name of the Product to get.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/products/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}",
                  "path": "v1/{+name}",
                  "id": "vision.projects.locations.products.get",
                  "description": "Gets information associated with a Product.\n\nPossible errors:\n\n* Returns NOT_FOUND if the Product does not exist."
                },
                "patch": {
                  "description": "Makes changes to a Product resource.\nOnly the `display_name`, `description`, and `labels` fields can be updated\nright now.\n\nIf labels are updated, the change will not be reflected in queries until\nthe next index time.\n\nPossible errors:\n\n* Returns NOT_FOUND if the Product does not exist.\n* Returns INVALID_ARGUMENT if display_name is present in update_mask but is\n  missing from the request or longer than 4096 characters.\n* Returns INVALID_ARGUMENT if description is present in update_mask but is\n  longer than 4096 characters.\n* Returns INVALID_ARGUMENT if product_category is present in update_mask.",
                  "request": {
                    "$ref": "Product"
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Product"
                  },
                  "parameters": {
                    "name": {
                      "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/products/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "The FieldMask that specifies which fields\nto update.\nIf update_mask isn't specified, all mutable fields are to be updated.\nValid mask paths include `product_labels`, `display_name`, and\n`description`.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}",
                  "id": "vision.projects.locations.products.patch",
                  "path": "v1/{+name}"
                },
                "purge": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "The project and location in which the Products should be deleted.\n\nFormat is `projects/PROJECT_ID/locations/LOC_ID`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products:purge",
                  "path": "v1/{+parent}/products:purge",
                  "id": "vision.projects.locations.products.purge",
                  "description": "Asynchronous API to delete all Products in a ProductSet or all Products\nthat are in no ProductSet.\n\nIf a Product is a member of the specified ProductSet in addition to other\nProductSets, the Product will still be deleted.\n\nIt is recommended to not delete the specified ProductSet until after this\noperation has completed. It is also recommended to not add any of the\nProducts involved in the batch delete to a new ProductSet while this\noperation is running because those Products may still end up deleted.\n\nIt's not possible to undo the PurgeProducts operation. Therefore, it is\nrecommended to keep the csv files used in ImportProductSets (if that was\nhow you originally built the Product Set) before starting PurgeProducts, in\ncase you need to re-import the data after deletion.\n\nIf the plan is to purge all of the Products from a ProductSet and then\nre-use the empty ProductSet to re-import new Products into the empty\nProductSet, you must wait until the PurgeProducts operation has finished\nfor that ProductSet.\n\nThe google.longrunning.Operation API can be used to keep track of the\nprogress and results of the request.\n`Operation.metadata` contains `BatchOperationMetadata`. (progress)",
                  "request": {
                    "$ref": "PurgeProductsRequest"
                  }
                }
              },
              "resources": {
                "referenceImages": {
                  "methods": {
                    "create": {
                      "description": "Creates and returns a new ReferenceImage resource.\n\nThe `bounding_poly` field is optional. If `bounding_poly` is not specified,\nthe system will try to detect regions of interest in the image that are\ncompatible with the product_category on the parent product. If it is\nspecified, detection is ALWAYS skipped. The system converts polygons into\nnon-rotated rectangles.\n\nNote that the pipeline will resize the image if the image resolution is too\nlarge to process (above 50MP).\n\nPossible errors:\n\n* Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096\n  characters.\n* Returns INVALID_ARGUMENT if the product does not exist.\n* Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing\n  compatible with the parent product's product_category is detected.\n* Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.",
                      "request": {
                        "$ref": "ReferenceImage"
                      },
                      "response": {
                        "$ref": "ReferenceImage"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "referenceImageId": {
                          "location": "query",
                          "description": "A user-supplied resource id for the ReferenceImage to be added. If set,\nthe server will attempt to use this value as the resource id. If it is\nalready in use, an error is returned with code ALREADY_EXISTS. Must be at\nmost 128 characters long. It cannot contain the character `/`.",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Resource name of the product in which to create the reference image.\n\nFormat is\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/products/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-vision"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages",
                      "path": "v1/{+parent}/referenceImages",
                      "id": "vision.projects.locations.products.referenceImages.create"
                    },
                    "delete": {
                      "description": "Permanently deletes a reference image.\n\nThe image metadata will be deleted right away, but search queries\nagainst ProductSets containing the image may still work until all related\ncaches are refreshed.\n\nThe actual image files are not deleted from Google Cloud Storage.",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "The resource name of the reference image to delete.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/products/[^/]+/referenceImages/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-vision"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages/{referenceImagesId}",
                      "id": "vision.projects.locations.products.referenceImages.delete",
                      "path": "v1/{+name}"
                    },
                    "list": {
                      "description": "Lists reference images.\n\nPossible errors:\n\n* Returns NOT_FOUND if the parent product does not exist.\n* Returns INVALID_ARGUMENT if the page_size is greater than 100, or less\n  than 1.",
                      "response": {
                        "$ref": "ListReferenceImagesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-vision"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/products/[^/]+$",
                          "location": "path",
                          "description": "Resource name of the product containing the reference images.\n\nFormat is\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.",
                          "required": true,
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results to be returned. This is the value\nof `nextPageToken` returned in a previous reference image list request.\n\nDefaults to the first page if not specified.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of items to return. Default 10, maximum 100.",
                          "format": "int32"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages",
                      "path": "v1/{+parent}/referenceImages",
                      "id": "vision.projects.locations.products.referenceImages.list"
                    },
                    "get": {
                      "description": "Gets information associated with a ReferenceImage.\n\nPossible errors:\n\n* Returns NOT_FOUND if the specified image does not exist.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ReferenceImage"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "The resource name of the ReferenceImage to get.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/products/[^/]+/referenceImages/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-vision"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages/{referenceImagesId}",
                      "id": "vision.projects.locations.products.referenceImages.get",
                      "path": "v1/{+name}"
                    }
                  }
                }
              }
            },
            "files": {
              "methods": {
                "annotate": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/files:annotate",
                  "path": "v1/{+parent}/files:annotate",
                  "id": "vision.projects.locations.files.annotate",
                  "request": {
                    "$ref": "BatchAnnotateFilesRequest"
                  },
                  "description": "Service that performs image detection and annotation for a batch of files.\nNow only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported.\n\nThis service will extract at most 5 (customers can specify which 5 in\nAnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each\nfile provided and perform detection and annotation for each image\nextracted.",
                  "response": {
                    "$ref": "BatchAnnotateFilesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                },
                "asyncBatchAnnotate": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/files:asyncBatchAnnotate",
                  "id": "vision.projects.locations.files.asyncBatchAnnotate",
                  "path": "v1/{+parent}/files:asyncBatchAnnotate",
                  "description": "Run asynchronous image detection and annotation for a list of generic\nfiles, such as PDF files, which may contain multiple pages and multiple\nimages per page. Progress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).",
                  "request": {
                    "$ref": "AsyncBatchAnnotateFilesRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-vision"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "files": {
      "methods": {
        "asyncBatchAnnotate": {
          "flatPath": "v1/files:asyncBatchAnnotate",
          "id": "vision.files.asyncBatchAnnotate",
          "path": "v1/files:asyncBatchAnnotate",
          "description": "Run asynchronous image detection and annotation for a list of generic\nfiles, such as PDF files, which may contain multiple pages and multiple\nimages per page. Progress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results).",
          "request": {
            "$ref": "AsyncBatchAnnotateFilesRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ]
        },
        "annotate": {
          "response": {
            "$ref": "BatchAnnotateFilesResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "flatPath": "v1/files:annotate",
          "path": "v1/files:annotate",
          "id": "vision.files.annotate",
          "description": "Service that performs image detection and annotation for a batch of files.\nNow only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported.\n\nThis service will extract at most 5 (customers can specify which 5 in\nAnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each\nfile provided and perform detection and annotation for each image\nextracted.",
          "request": {
            "$ref": "BatchAnnotateFilesRequest"
          }
        }
      }
    },
    "images": {
      "methods": {
        "annotate": {
          "response": {
            "$ref": "BatchAnnotateImagesResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "parameters": {},
          "flatPath": "v1/images:annotate",
          "path": "v1/images:annotate",
          "id": "vision.images.annotate",
          "request": {
            "$ref": "BatchAnnotateImagesRequest"
          },
          "description": "Run image detection and annotation for a batch of images."
        },
        "asyncBatchAnnotate": {
          "description": "Run asynchronous image detection and annotation for a list of images.\n\nProgress and results can be retrieved through the\n`google.longrunning.Operations` interface.\n`Operation.metadata` contains `OperationMetadata` (metadata).\n`Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results).\n\nThis service will write image annotation outputs to json files in customer\nGCS bucket, each json file containing BatchAnnotateImagesResponse proto.",
          "request": {
            "$ref": "AsyncBatchAnnotateImagesRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "flatPath": "v1/images:asyncBatchAnnotate",
          "path": "v1/images:asyncBatchAnnotate",
          "id": "vision.images.asyncBatchAnnotate"
        }
      }
    },
    "operations": {
      "methods": {
        "cancel": {
          "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "pattern": "^operations/.+$",
              "location": "path",
              "description": "The name of the operation resource to be cancelled.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "flatPath": "v1/operations/{operationsId}:cancel",
          "path": "v1/{+name}:cancel",
          "id": "vision.operations.cancel"
        },
        "delete": {
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^operations/.+$",
              "location": "path",
              "description": "The name of the operation resource to be deleted."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "path": "v1/{+name}",
          "id": "vision.operations.delete",
          "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE"
        },
        "list": {
          "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "parameters": {
            "filter": {
              "location": "query",
              "description": "The standard list filter.",
              "type": "string"
            },
            "name": {
              "location": "path",
              "description": "The name of the operation's parent resource.",
              "required": true,
              "type": "string",
              "pattern": "^operations$"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The standard list page token."
            },
            "pageSize": {
              "type": "integer",
              "location": "query",
              "description": "The standard list page size.",
              "format": "int32"
            }
          },
          "flatPath": "v1/operations",
          "path": "v1/{+name}",
          "id": "vision.operations.list"
        },
        "get": {
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "name": {
              "location": "path",
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string",
              "pattern": "^operations/[^/]+$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-vision"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "id": "vision.operations.get",
          "path": "v1/{+name}"
        }
      }
    },
    "locations": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "path": "v1/{+name}",
              "id": "vision.locations.operations.get",
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "required": true,
                  "type": "string",
                  "pattern": "^locations/[^/]+/operations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-vision"
              ],
              "flatPath": "v1/locations/{locationsId}/operations/{operationsId}"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    }
  },
  "version": "v1",
  "baseUrl": "https://vision.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.",
  "servicePath": "",
  "basePath": "",
  "id": "vision:v1",
  "documentationLink": "https://cloud.google.com/vision/",
  "revision": "20190823",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "ProductSearchParams": {
      "id": "ProductSearchParams",
      "description": "Parameters for a product search request.",
      "type": "object",
      "properties": {
        "productCategories": {
          "description": "The list of product categories to search in. Currently, we only consider\nthe first category, and either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\"\nshould be specified. The legacy categories \"homegoods\", \"apparel\", and\n\"toys\" are still supported but will be deprecated. For new products, please\nuse \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\" for better product search\naccuracy. It is recommended to migrate existing products to these\ncategories as well.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "description": "The filtering expression. This can be used to restrict search results based\non Product labels. We currently support an AND of OR of key-value\nexpressions, where each expression within an OR must have the same key. An\n'=' should be used to connect the key and value.\n\nFor example, \"(color = red OR color = blue) AND brand = Google\" is\nacceptable, but \"(color = red OR brand = Google)\" is not acceptable.\n\"color: red\" is not acceptable because it uses a ':' instead of an '='.",
          "type": "string"
        },
        "productSet": {
          "description": "The resource name of a ProductSet to be searched for similar images.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "BoundingPoly",
          "description": "The bounding polygon around the area of interest in the image.\nOptional. If it is not specified, system discretion will be applied."
        }
      }
    },
    "GoogleCloudVisionV1p5beta1TextAnnotation": {
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object",
      "properties": {
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        },
        "pages": {
          "description": "List of pages detected by OCR.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1Page"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1TextAnnotation"
    },
    "GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak": {
      "description": "Detected start or end of a structural component.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Detected break type.",
          "type": "string",
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ]
        },
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak"
    },
    "GoogleCloudVisionV1p4beta1ImageProperties": {
      "description": "Stores image properties, such as dominant colors.",
      "type": "object",
      "properties": {
        "dominantColors": {
          "$ref": "GoogleCloudVisionV1p4beta1DominantColorsAnnotation",
          "description": "If present, dominant colors completed successfully."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ImageProperties"
    },
    "GoogleCloudVisionV1p1beta1InputConfig": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests.",
          "format": "byte"
        },
        "gcsSource": {
          "$ref": "GoogleCloudVisionV1p1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mimeType": {
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1InputConfig",
      "description": "The desired input location and metadata."
    },
    "GoogleCloudVisionV1p4beta1Word": {
      "type": "object",
      "properties": {
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Symbol"
          }
        },
        "property": {
          "description": "Additional information detected for the word.",
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty"
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1Word",
      "description": "A word representation."
    },
    "GoogleCloudVisionV1p5beta1AsyncAnnotateFileResponse": {
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "The output location and metadata from AsyncAnnotateFileRequest.",
          "$ref": "GoogleCloudVisionV1p5beta1OutputConfig"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1AsyncAnnotateFileResponse",
      "description": "The response for a single offline file annotation request."
    },
    "ProductSearchResults": {
      "type": "object",
      "properties": {
        "productGroupedResults": {
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results.",
          "type": "array",
          "items": {
            "$ref": "GroupedResult"
          }
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "Result"
          }
        },
        "indexTime": {
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "ProductSearchResults",
      "description": "Results for a product search request."
    },
    "GoogleCloudVisionV1p4beta1LocationInfo": {
      "type": "object",
      "properties": {
        "latLng": {
          "$ref": "LatLng",
          "description": "lat/long location coordinates."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1LocationInfo",
      "description": "Detected entity location information."
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebLabel": {
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebLabel",
      "description": "Label to provide extra metadata for the web detection.",
      "type": "object",
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1DominantColorsAnnotation": {
      "description": "Set of dominant colors and their corresponding scores.",
      "type": "object",
      "properties": {
        "colors": {
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ColorInfo"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1DominantColorsAnnotation"
    },
    "GoogleCloudVisionV1p5beta1AnnotateImageResponse": {
      "description": "Response to an image annotation request.",
      "type": "object",
      "properties": {
        "localizedObjectAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1LocalizedObjectAnnotation"
          },
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score."
        },
        "productSearchResults": {
          "$ref": "GoogleCloudVisionV1p5beta1ProductSearchResults",
          "description": "If present, product search has completed successfully."
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "fullTextAnnotation": {
          "$ref": "GoogleCloudVisionV1p5beta1TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        },
        "textAnnotations": {
          "description": "If present, text (OCR) detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1EntityAnnotation"
          }
        },
        "imagePropertiesAnnotation": {
          "$ref": "GoogleCloudVisionV1p5beta1ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "context": {
          "$ref": "GoogleCloudVisionV1p5beta1ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1EntityAnnotation"
          }
        },
        "webDetection": {
          "$ref": "GoogleCloudVisionV1p5beta1WebDetection",
          "description": "If present, web detection has completed successfully."
        },
        "safeSearchAnnotation": {
          "$ref": "GoogleCloudVisionV1p5beta1SafeSearchAnnotation",
          "description": "If present, safe-search annotation has completed successfully."
        },
        "landmarkAnnotations": {
          "description": "If present, landmark detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1EntityAnnotation"
          }
        },
        "faceAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1FaceAnnotation"
          },
          "description": "If present, face detection has completed successfully."
        },
        "cropHintsAnnotation": {
          "$ref": "GoogleCloudVisionV1p5beta1CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        },
        "labelAnnotations": {
          "description": "If present, label detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1EntityAnnotation"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1AnnotateImageResponse"
    },
    "GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation": {
      "id": "GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation",
      "description": "Set of detected objects with bounding boxes.",
      "type": "object",
      "properties": {
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Object name, expressed in its `language_code` language."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "Image region to which this object belongs. This must be populated."
        },
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1LocationInfo": {
      "description": "Detected entity location information.",
      "type": "object",
      "properties": {
        "latLng": {
          "$ref": "LatLng",
          "description": "lat/long location coordinates."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1LocationInfo"
    },
    "GoogleCloudVisionV1p2beta1WebDetection": {
      "description": "Relevant information for the image from the Internet.",
      "type": "object",
      "properties": {
        "visuallySimilarImages": {
          "description": "The visually similar image results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          }
        },
        "bestGuessLabels": {
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebLabel"
          }
        },
        "fullMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          },
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image."
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebPage"
          }
        },
        "partialMatchingImages": {
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetection"
    },
    "GoogleCloudVisionV1p1beta1OutputConfig": {
      "id": "GoogleCloudVisionV1p1beta1OutputConfig",
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudVisionV1p1beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        },
        "batchSize": {
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1ColorInfo": {
      "id": "GoogleCloudVisionV1p3beta1ColorInfo",
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "type": "object",
      "properties": {
        "pixelFraction": {
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        },
        "score": {
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float",
          "type": "number"
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "GoogleCloudVisionV1p2beta1FaceAnnotation": {
      "description": "A face annotation object contains the results of face detection.",
      "type": "object",
      "properties": {
        "tiltAngle": {
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "fdBoundingPoly": {
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix.",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "angerLikelihood": {
          "description": "Anger likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "landmarks": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark"
          },
          "description": "Detected face landmarks."
        },
        "surpriseLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Surprise likelihood.",
          "type": "string"
        },
        "joyLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Joy likelihood.",
          "type": "string"
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "format": "float",
          "type": "number"
        },
        "underExposedLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Under-exposed likelihood.",
          "type": "string"
        },
        "blurredLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Blurred likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "headwearLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Headwear likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "boundingPoly": {
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated.",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "rollAngle": {
          "type": "number",
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float"
        },
        "sorrowLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1FaceAnnotation"
    },
    "GoogleCloudVisionV1p2beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "X coordinate.",
          "format": "float"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1NormalizedVertex"
    },
    "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark": {
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type.",
          "type": "string"
        },
        "position": {
          "$ref": "GoogleCloudVisionV1p2beta1Position",
          "description": "Face landmark position."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark",
      "description": "A face-specific landmark (for example, a face feature)."
    },
    "GoogleCloudVisionV1p4beta1FaceAnnotationLandmark": {
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type.",
          "type": "string"
        },
        "position": {
          "$ref": "GoogleCloudVisionV1p4beta1Position",
          "description": "Face landmark position."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1FaceAnnotationLandmark",
      "description": "A face-specific landmark (for example, a face feature)."
    },
    "Position": {
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "z": {
          "description": "Z coordinate (or depth).",
          "format": "float",
          "type": "number"
        }
      },
      "id": "Position"
    },
    "ImportProductSetsInputConfig": {
      "description": "The input content for the `ImportProductSets` method.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "ImportProductSetsGcsSource",
          "description": "The Google Cloud Storage location for a csv file which preserves a list\nof ImportProductSetRequests in each line."
        }
      },
      "id": "ImportProductSetsInputConfig"
    },
    "BatchAnnotateFilesResponse": {
      "description": "A list of file annotation responses.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, each response corresponding to each\nAnnotateFileRequest in BatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "AnnotateFileResponse"
          }
        }
      },
      "id": "BatchAnnotateFilesResponse"
    },
    "GoogleCloudVisionV1p3beta1Paragraph": {
      "description": "Structural unit of text representing a number of words in certain order.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "words": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Word"
          },
          "description": "List of all words in this paragraph."
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the paragraph."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Paragraph"
    },
    "GcsDestination": {
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      },
      "id": "GcsDestination",
      "description": "The Google Cloud Storage location where the output will be written to."
    },
    "GoogleCloudVisionV1p3beta1BatchOperationMetadata": {
      "description": "Metadata for the batch operations such as the current state.\n\nThis is included in the `metadata` field of the `Operation` returned by the\n`GetOperation` call of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "The time when the batch request is finished and\ngoogle.longrunning.Operation.done is set to true.",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is actively being processed.",
            "The request is done and at least one item has been successfully\nprocessed.",
            "The request is done and no item has been successfully processed.",
            "The request is done after the longrunning.Operations.CancelOperation has\nbeen called by the user.  Any records that were processed before the\ncancel command are output as specified in the request."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROCESSING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The current state of the batch operation."
        },
        "submitTime": {
          "description": "The time when the batch request was submitted to the server.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1BatchOperationMetadata"
    },
    "GoogleCloudVisionV1p5beta1ProductSearchResults": {
      "id": "GoogleCloudVisionV1p5beta1ProductSearchResults",
      "description": "Results for a product search request.",
      "type": "object",
      "properties": {
        "indexTime": {
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "format": "google-datetime",
          "type": "string"
        },
        "productGroupedResults": {
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1ProductSearchResultsGroupedResult"
          }
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1ProductSearchResultsResult"
          }
        }
      }
    },
    "GoogleCloudVisionV1p4beta1WebDetectionWebEntity": {
      "id": "GoogleCloudVisionV1p4beta1WebDetectionWebEntity",
      "description": "Entity deduced from similar images on the Internet.",
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string",
          "description": "Opaque entity ID."
        },
        "description": {
          "type": "string",
          "description": "Canonical description of the entity, in English."
        },
        "score": {
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "Landmark": {
      "description": "A face-specific landmark (for example, a face feature).",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type.",
          "type": "string",
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ]
        },
        "position": {
          "description": "Face landmark position.",
          "$ref": "Position"
        }
      },
      "id": "Landmark"
    },
    "GoogleCloudVisionV1p3beta1ImageAnnotationContext": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the file used to produce the image."
        },
        "pageNumber": {
          "type": "integer",
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ImageAnnotationContext",
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image."
    },
    "GoogleCloudVisionV1p3beta1Block": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the block."
        },
        "blockType": {
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ],
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ]
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Paragraph"
          }
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Block",
      "description": "Logical element on the page."
    },
    "Word": {
      "description": "A word representation.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "Symbol"
          }
        },
        "property": {
          "$ref": "TextProperty",
          "description": "Additional information detected for the word."
        }
      },
      "id": "Word"
    },
    "GoogleCloudVisionV1p4beta1OutputConfig": {
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "batchSize": {
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32",
          "type": "integer"
        },
        "gcsDestination": {
          "$ref": "GoogleCloudVisionV1p4beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1OutputConfig"
    },
    "GoogleCloudVisionV1p3beta1ImageProperties": {
      "type": "object",
      "properties": {
        "dominantColors": {
          "$ref": "GoogleCloudVisionV1p3beta1DominantColorsAnnotation",
          "description": "If present, dominant colors completed successfully."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ImageProperties",
      "description": "Stores image properties, such as dominant colors."
    },
    "GoogleCloudVisionV1p2beta1ColorInfo": {
      "type": "object",
      "properties": {
        "pixelFraction": {
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        },
        "score": {
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1ColorInfo",
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image."
    },
    "PurgeProductsRequest": {
      "description": "Request message for the `PurgeProducts` method.",
      "type": "object",
      "properties": {
        "productSetPurgeConfig": {
          "description": "Specify which ProductSet contains the Products to be deleted.",
          "$ref": "ProductSetPurgeConfig"
        },
        "force": {
          "type": "boolean",
          "description": "The default value is false. Override this value to true to actually perform\nthe purge."
        },
        "deleteOrphanProducts": {
          "description": "If delete_orphan_products is true, all Products that are not in any\nProductSet will be deleted.",
          "type": "boolean"
        }
      },
      "id": "PurgeProductsRequest"
    },
    "GoogleCloudVisionV1p5beta1TableTableRow": {
      "description": "A row of table cells.",
      "type": "object",
      "properties": {
        "cells": {
          "description": "Cells that make up this row.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1TableTableCell"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1TableTableRow"
    },
    "GoogleCloudVisionV1p2beta1SafeSearchAnnotation": {
      "type": "object",
      "properties": {
        "racy": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas."
        },
        "violence": {
          "description": "Likelihood that this image contains violent content.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "adult": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "type": "string"
        },
        "spoof": {
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "medical": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1SafeSearchAnnotation",
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence)."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "id": "Operation"
    },
    "GoogleCloudVisionV1p1beta1Paragraph": {
      "id": "GoogleCloudVisionV1p1beta1Paragraph",
      "description": "Structural unit of text representing a number of words in certain order.",
      "type": "object",
      "properties": {
        "property": {
          "description": "Additional information detected for the paragraph.",
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"
        },
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "words": {
          "description": "List of all words in this paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Word"
          }
        }
      }
    },
    "GoogleCloudVisionV1p1beta1LocationInfo": {
      "type": "object",
      "properties": {
        "latLng": {
          "$ref": "LatLng",
          "description": "lat/long location coordinates."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1LocationInfo",
      "description": "Detected entity location information."
    },
    "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty": {
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedBreak": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"
    },
    "GoogleCloudVisionV1p4beta1Paragraph": {
      "description": "Structural unit of text representing a number of words in certain order.",
      "type": "object",
      "properties": {
        "words": {
          "description": "List of all words in this paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Word"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the paragraph."
        },
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1Paragraph"
    },
    "GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "score": {
          "type": "number",
          "description": "Score of the result. Range [0, 1].",
          "format": "float"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation",
      "description": "Prediction for what the object in the bounding box is."
    },
    "GoogleCloudVisionV1p4beta1ColorInfo": {
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "type": "object",
      "properties": {
        "pixelFraction": {
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        },
        "score": {
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ColorInfo"
    },
    "ImportProductSetsGcsSource": {
      "id": "ImportProductSetsGcsSource",
      "description": "The Google Cloud Storage location for a csv file which preserves a list of\nImportProductSetRequests in each line.",
      "type": "object",
      "properties": {
        "csvFileUri": {
          "type": "string",
          "description": "The Google Cloud Storage URI of the input csv file.\n\nThe URI must start with `gs://`.\n\nThe format of the input csv file should be one image per line.\nIn each line, there are 8 columns.\n\n1.  image-uri\n2.  image-id\n3.  product-set-id\n4.  product-id\n5.  product-category\n6.  product-display-name\n7.  labels\n8.  bounding-poly\n\nThe `image-uri`, `product-set-id`, `product-id`, and `product-category`\ncolumns are required. All other columns are optional.\n\nIf the `ProductSet` or `Product` specified by the `product-set-id` and\n`product-id` values does not exist, then the system will create a new\n`ProductSet` or `Product` for the image. In this case, the\n`product-display-name` column refers to\ndisplay_name, the\n`product-category` column refers to\nproduct_category, and the\n`labels` column refers to product_labels.\n\nThe `image-id` column is optional but must be unique if provided. If it is\nempty, the system will automatically assign a unique id to the image.\n\nThe `product-display-name` column is optional. If it is empty, the system\nsets the display_name field for the product to a\nspace (\" \"). You can update the `display_name` later by using the API.\n\nIf a `Product` with the specified `product-id` already exists, then the\nsystem ignores the `product-display-name`, `product-category`, and `labels`\ncolumns.\n\nThe `labels` column (optional) is a line containing a list of\ncomma-separated key-value pairs, in the following format:\n\n    \"key_1=value_1,key_2=value_2,...,key_n=value_n\"\n\nThe `bounding-poly` column (optional) identifies one region of\ninterest from the image in the same manner as `CreateReferenceImage`. If\nyou do not specify the `bounding-poly` column, then the system will try to\ndetect regions of interest automatically.\n\nAt most one `bounding-poly` column is allowed per line. If the image\ncontains multiple regions of interest, add a line to the CSV file that\nincludes the same product information, and the `bounding-poly` values for\neach region of interest.\n\nThe `bounding-poly` column must contain an even number of comma-separated\nnumbers, in the format \"p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y\". Use\nnon-negative integers for absolute bounding polygons, and float values\nin [0, 1] for normalized bounding polygons.\n\nThe system will resize the image if the image resolution is too\nlarge to process (larger than 20MP)."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebPage": {
      "type": "object",
      "properties": {
        "url": {
          "description": "The result web page URL.",
          "type": "string"
        },
        "pageTitle": {
          "type": "string",
          "description": "Title for the web page, may contain HTML markups."
        },
        "fullMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          },
          "description": "Fully matching images on the page.\nCan include resized copies of the query image."
        },
        "score": {
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float"
        },
        "partialMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          },
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebPage",
      "description": "Metadata for web pages."
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListOperationsResponse"
    },
    "GoogleCloudVisionV1p2beta1BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Vertex"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1BoundingPoly"
    },
    "GoogleCloudVisionV1p1beta1GcsSource": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1GcsSource",
      "description": "The Google Cloud Storage location where the input will be read from."
    },
    "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak": {
      "type": "object",
      "properties": {
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "description": "Detected break type."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak",
      "description": "Detected start or end of a structural component."
    },
    "GoogleCloudVisionV1p4beta1ReferenceImage": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the reference image.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.\n\nThis field is ignored when creating a reference image.",
          "type": "string"
        },
        "uri": {
          "description": "The Google Cloud Storage URI of the reference image.\n\nThe URI must start with `gs://`.\n\nRequired.",
          "type": "string"
        },
        "boundingPolys": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly"
          },
          "description": "Bounding polygons around the areas of interest in the reference image.\nOptional. If this field is empty, the system will try to detect regions of\ninterest. At most 10 bounding polygons will be used.\n\nThe provided shape is converted into a non-rotated rectangle. Once\nconverted, the small edge of the rectangle must be greater than or equal\nto 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5\nis not)."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ReferenceImage",
      "description": "A `ReferenceImage` represents a product image and its associated metadata,\nsuch as bounding boxes."
    },
    "GroupedResult": {
      "id": "GroupedResult",
      "description": "Information about the products similar to a single product in a query\nimage.",
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "BoundingPoly",
          "description": "The bounding polygon around the product detected in the query image."
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "Result"
          }
        },
        "objectAnnotations": {
          "description": "List of generic predictions for the object in the bounding box.",
          "type": "array",
          "items": {
            "$ref": "ObjectAnnotation"
          }
        }
      }
    },
    "ListProductsResponse": {
      "description": "Response message for the `ListProducts` method.",
      "type": "object",
      "properties": {
        "products": {
          "description": "List of products.",
          "type": "array",
          "items": {
            "$ref": "Product"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
          "type": "string"
        }
      },
      "id": "ListProductsResponse"
    },
    "GoogleCloudVisionV1p1beta1Property": {
      "id": "GoogleCloudVisionV1p1beta1Property",
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the property.",
          "type": "string"
        },
        "uint64Value": {
          "type": "string",
          "description": "Value of numeric properties.",
          "format": "uint64"
        },
        "name": {
          "type": "string",
          "description": "Name of the property."
        }
      }
    },
    "SafeSearchAnnotation": {
      "id": "SafeSearchAnnotation",
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).",
      "type": "object",
      "properties": {
        "adultConfidence": {
          "description": "Confidence of adult_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float",
          "type": "number"
        },
        "adult": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities."
        },
        "violenceConfidence": {
          "description": "Confidence of violence_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float",
          "type": "number"
        },
        "racy": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas."
        },
        "spoofConfidence": {
          "description": "Confidence of spoof_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float",
          "type": "number"
        },
        "violence": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this image contains violent content.",
          "type": "string"
        },
        "medicalConfidence": {
          "description": "Confidence of medical_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float",
          "type": "number"
        },
        "nsfwConfidence": {
          "description": "Confidence of nsfw_score. Range [0, 1]. 0 means not confident, 1 means very\nconfident.",
          "format": "float",
          "type": "number"
        },
        "spoof": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "medical": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image.",
          "type": "string"
        },
        "racyConfidence": {
          "type": "number",
          "description": "Confidence of racy_score. Range [0, 1]. 0 means not confident, 1 means very\nconfident.",
          "format": "float"
        }
      }
    },
    "ProductSetPurgeConfig": {
      "description": "Config to control which ProductSet contains the Products to be deleted.",
      "type": "object",
      "properties": {
        "productSetId": {
          "description": "The ProductSet that contains the Products to delete. If a Product is a\nmember of product_set_id in addition to other ProductSets, the Product will\nstill be deleted.",
          "type": "string"
        }
      },
      "id": "ProductSetPurgeConfig"
    },
    "BatchOperationMetadata": {
      "description": "Metadata for the batch operations such as the current state.\n\nThis is included in the `metadata` field of the `Operation` returned by the\n`GetOperation` call of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The time when the batch request is finished and\ngoogle.longrunning.Operation.done is set to true.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROCESSING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The current state of the batch operation.",
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is actively being processed.",
            "The request is done and at least one item has been successfully\nprocessed.",
            "The request is done and no item has been successfully processed.",
            "The request is done after the longrunning.Operations.CancelOperation has\nbeen called by the user.  Any records that were processed before the\ncancel command are output as specified in the request."
          ]
        },
        "submitTime": {
          "description": "The time when the batch request was submitted to the server.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "BatchOperationMetadata"
    },
    "Vertex": {
      "id": "Vertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudVisionV1p5beta1Paragraph": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p5beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the paragraph."
        },
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float"
        },
        "mergedText": {
          "type": "string",
          "description": "All UTF-8 text detected in this paragraph. This field is by default not\nreturned unless specified in TextDetectionParams.paragraph_filter."
        },
        "words": {
          "description": "List of all words in this paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1Word"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Paragraph",
      "description": "Structural unit of text representing a number of words in certain order."
    },
    "GoogleCloudVisionV1p1beta1Product": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product.",
          "type": "string"
        },
        "displayName": {
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
        },
        "productCategory": {
          "description": "The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products.\n\nThis field is immutable.",
          "type": "string"
        },
        "productLabels": {
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductKeyValue"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Product",
      "description": "A Product contains ReferenceImages."
    },
    "AnnotateFileRequest": {
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "InputConfig",
          "description": "Required. Information about the input file."
        },
        "features": {
          "description": "Required. Requested features.",
          "type": "array",
          "items": {
            "$ref": "Feature"
          }
        },
        "imageContext": {
          "$ref": "ImageContext",
          "description": "Additional context that may accompany the image(s) in the file."
        },
        "pages": {
          "description": "Pages of the file to perform image annotation.\n\nPages starts from 1, we assume the first page of the file is page 1.\nAt most 5 pages are supported per request. Pages can be negative.\n\nPage 1 means the first page.\nPage 2 means the second page.\nPage -1 means the last page.\nPage -2 means the second to the last page.\n\nIf the file is GIF instead of PDF or TIFF, page refers to GIF frames.\n\nIf this field is empty, by default the service performs image annotation\nfor the first 5 pages of the file.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "id": "AnnotateFileRequest",
      "description": "A request to annotate one single file, e.g. a PDF, TIFF or GIF file."
    },
    "GoogleCloudVisionV1p4beta1ProductSearchResults": {
      "description": "Results for a product search request.",
      "type": "object",
      "properties": {
        "indexTime": {
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "format": "google-datetime",
          "type": "string"
        },
        "productGroupedResults": {
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult"
          }
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResultsResult"
          }
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ProductSearchResults"
    },
    "GoogleCloudVisionV1p3beta1CropHint": {
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale."
        },
        "confidence": {
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "importanceFraction": {
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1CropHint",
      "description": "Single crop hint that is used to generate a new crop when serving an image."
    },
    "GoogleCloudVisionV1p5beta1ProductSearchResultsResult": {
      "type": "object",
      "properties": {
        "score": {
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence).",
          "format": "float",
          "type": "number"
        },
        "image": {
          "type": "string",
          "description": "The resource name of the image from the product that is the closest match\nto the query."
        },
        "product": {
          "$ref": "GoogleCloudVisionV1p5beta1Product",
          "description": "The Product."
        }
      },
      "id": "GoogleCloudVisionV1p5beta1ProductSearchResultsResult",
      "description": "Information about a product."
    },
    "GoogleCloudVisionV1p2beta1ProductSearchResultsResult": {
      "id": "GoogleCloudVisionV1p2beta1ProductSearchResultsResult",
      "description": "Information about a product.",
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "The resource name of the image from the product that is the closest match\nto the query."
        },
        "product": {
          "description": "The Product.",
          "$ref": "GoogleCloudVisionV1p2beta1Product"
        },
        "score": {
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence).",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1ImageProperties": {
      "description": "Stores image properties, such as dominant colors.",
      "type": "object",
      "properties": {
        "dominantColors": {
          "$ref": "GoogleCloudVisionV1p1beta1DominantColorsAnnotation",
          "description": "If present, dominant colors completed successfully."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ImageProperties"
    },
    "GoogleCloudVisionV1p4beta1TextAnnotation": {
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object",
      "properties": {
        "pages": {
          "description": "List of pages detected by OCR.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Page"
          }
        },
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1TextAnnotation"
    },
    "GoogleCloudVisionV1p5beta1AnnotateFileResponse": {
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case."
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1AnnotateImageResponse"
          },
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set."
        },
        "inputConfig": {
          "description": "Information about the file for which this response is generated.",
          "$ref": "GoogleCloudVisionV1p5beta1InputConfig"
        },
        "totalPages": {
          "description": "This field gives the total number of pages in the file.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1AnnotateFileResponse"
    },
    "GoogleCloudVisionV1p2beta1AnnotateFileResponse": {
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case."
        },
        "responses": {
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1AnnotateImageResponse"
          }
        },
        "inputConfig": {
          "description": "Information about the file for which this response is generated.",
          "$ref": "GoogleCloudVisionV1p2beta1InputConfig"
        },
        "totalPages": {
          "description": "This field gives the total number of pages in the file.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1AnnotateFileResponse"
    },
    "GoogleCloudVisionV1p3beta1ImportProductSetsResponse": {
      "type": "object",
      "properties": {
        "referenceImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ReferenceImage"
          },
          "description": "The list of reference_images that are imported successfully."
        },
        "statuses": {
          "description": "The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ImportProductSetsResponse",
      "description": "Response message for the `ImportProductSets` method.\n\nThis message is returned by the\ngoogle.longrunning.Operations.GetOperation method in the returned\ngoogle.longrunning.Operation.response field."
    },
    "GoogleCloudVisionV1p3beta1GcsSource": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1GcsSource",
      "description": "The Google Cloud Storage location where the input will be read from."
    },
    "Image": {
      "id": "Image",
      "description": "Client image to perform Google Cloud Vision API tasks over.",
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "Image content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.",
          "format": "byte"
        },
        "source": {
          "description": "Google Cloud Storage image location, or publicly-accessible image\nURL. If both `content` and `source` are provided for an image, `content`\ntakes precedence and is used to perform the image annotation request.",
          "$ref": "ImageSource"
        }
      }
    },
    "Paragraph": {
      "description": "Structural unit of text representing a number of words in certain order.",
      "type": "object",
      "properties": {
        "words": {
          "type": "array",
          "items": {
            "$ref": "Word"
          },
          "description": "List of all words in this paragraph."
        },
        "property": {
          "description": "Additional information detected for the paragraph.",
          "$ref": "TextProperty"
        },
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "Paragraph"
    },
    "GcsSource": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported."
        }
      },
      "id": "GcsSource",
      "description": "The Google Cloud Storage location where the input will be read from."
    },
    "GoogleCloudVisionV1p1beta1Block": {
      "id": "GoogleCloudVisionV1p1beta1Block",
      "description": "Logical element on the page.",
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the block."
        },
        "blockType": {
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ],
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ],
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string"
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Paragraph"
          }
        }
      }
    },
    "GoogleCloudVisionV1p3beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "y": {
          "type": "number",
          "description": "Y coordinate.",
          "format": "float"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1NormalizedVertex"
    },
    "GoogleCloudVisionV1p1beta1TextAnnotation": {
      "id": "GoogleCloudVisionV1p1beta1TextAnnotation",
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object",
      "properties": {
        "pages": {
          "description": "List of pages detected by OCR.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Page"
          }
        },
        "text": {
          "type": "string",
          "description": "UTF-8 text detected on the pages."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1GcsSource": {
      "description": "The Google Cloud Storage location where the input will be read from.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1GcsSource"
    },
    "GoogleCloudVisionV1p3beta1AnnotateFileResponse": {
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1AnnotateImageResponse"
          },
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set."
        },
        "inputConfig": {
          "description": "Information about the file for which this response is generated.",
          "$ref": "GoogleCloudVisionV1p3beta1InputConfig"
        },
        "totalPages": {
          "description": "This field gives the total number of pages in the file.",
          "format": "int32",
          "type": "integer"
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1AnnotateFileResponse"
    },
    "GoogleCloudVisionV1p5beta1ImageAnnotationContext": {
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the file used to produce the image."
        },
        "pageNumber": {
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1ImageAnnotationContext"
    },
    "LatLongRect": {
      "type": "object",
      "properties": {
        "minLatLng": {
          "$ref": "LatLng",
          "description": "Min lat/long pair."
        },
        "maxLatLng": {
          "description": "Max lat/long pair.",
          "$ref": "LatLng"
        }
      },
      "id": "LatLongRect",
      "description": "Rectangle determined by min and max `LatLng` pairs."
    },
    "AnnotateFileResponse": {
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set.",
          "type": "array",
          "items": {
            "$ref": "AnnotateImageResponse"
          }
        },
        "inputConfig": {
          "$ref": "InputConfig",
          "description": "Information about the file for which this response is generated."
        },
        "totalPages": {
          "type": "integer",
          "description": "This field gives the total number of pages in the file.",
          "format": "int32"
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case."
        }
      },
      "id": "AnnotateFileResponse"
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebLabel": {
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebLabel",
      "description": "Label to provide extra metadata for the web detection.",
      "type": "object",
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      }
    },
    "ObjectAnnotation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "score": {
          "type": "number",
          "description": "Score of the result. Range [0, 1].",
          "format": "float"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        }
      },
      "id": "ObjectAnnotation",
      "description": "Prediction for what the object in the bounding box is."
    },
    "LatLng": {
      "description": "An object representing a latitude/longitude pair. This is expressed as a pair\nof doubles representing degrees latitude and degrees longitude. Unless\nspecified otherwise, this must conform to the\n\u003ca href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\"\u003eWGS84\nstandard\u003c/a\u003e. Values must be within normalized ranges.",
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "format": "double"
        }
      },
      "id": "LatLng"
    },
    "GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse"
          },
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse",
      "description": "Response to an async batch file annotation request."
    },
    "GoogleCloudVisionV1p2beta1Symbol": {
      "id": "GoogleCloudVisionV1p2beta1Symbol",
      "description": "A single symbol representation.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the symbol."
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float"
        }
      }
    },
    "GoogleCloudVisionV1p5beta1ImportProductSetsResponse": {
      "type": "object",
      "properties": {
        "referenceImages": {
          "description": "The list of reference_images that are imported successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1ReferenceImage"
          }
        },
        "statuses": {
          "description": "The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1ImportProductSetsResponse",
      "description": "Response message for the `ImportProductSets` method.\n\nThis message is returned by the\ngoogle.longrunning.Operations.GetOperation method in the returned\ngoogle.longrunning.Operation.response field."
    },
    "Result": {
      "id": "Result",
      "description": "Information about a product.",
      "type": "object",
      "properties": {
        "image": {
          "description": "The resource name of the image from the product that is the closest match\nto the query.",
          "type": "string"
        },
        "product": {
          "$ref": "Product",
          "description": "The Product."
        },
        "score": {
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence).",
          "format": "float",
          "type": "number"
        }
      }
    },
    "Feature": {
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified feature type.",
            "Run face detection.",
            "Run landmark detection.",
            "Run logo detection.",
            "Run label detection.",
            "Run text detection / optical character recognition (OCR). Text detection\nis optimized for areas of text within a larger image; if the image is\na document, use `DOCUMENT_TEXT_DETECTION` instead.",
            "Run dense text document OCR. Takes precedence when both\n`DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` are present.",
            "Run Safe Search to detect potentially unsafe\nor undesirable content.",
            "Compute a set of image properties, such as the\nimage's dominant colors.",
            "Run crop hints.",
            "Run web detection.",
            "Run Product Search.",
            "Run localizer for object detection."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FACE_DETECTION",
            "LANDMARK_DETECTION",
            "LOGO_DETECTION",
            "LABEL_DETECTION",
            "TEXT_DETECTION",
            "DOCUMENT_TEXT_DETECTION",
            "SAFE_SEARCH_DETECTION",
            "IMAGE_PROPERTIES",
            "CROP_HINTS",
            "WEB_DETECTION",
            "PRODUCT_SEARCH",
            "OBJECT_LOCALIZATION"
          ],
          "description": "The feature type.",
          "type": "string"
        },
        "maxResults": {
          "type": "integer",
          "description": "Maximum number of results of this type. Does not apply to\n`TEXT_DETECTION`, `DOCUMENT_TEXT_DETECTION`, or `CROP_HINTS`.",
          "format": "int32"
        },
        "model": {
          "description": "Model to use for the feature.\nSupported values: \"builtin/stable\" (the default if unset) and\n\"builtin/latest\".",
          "type": "string"
        }
      },
      "id": "Feature",
      "description": "The type of Google Cloud Vision API detection to perform, and the maximum\nnumber of results to return for that type. Multiple `Feature` objects can\nbe specified in the `features` list."
    },
    "AsyncAnnotateFileResponse": {
      "id": "AsyncAnnotateFileResponse",
      "description": "The response for a single offline file annotation request.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "OutputConfig",
          "description": "The output location and metadata from AsyncAnnotateFileRequest."
        }
      }
    },
    "ListReferenceImagesResponse": {
      "description": "Response message for the `ListReferenceImages` method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The next_page_token returned from a previous List request, if any.",
          "type": "string"
        },
        "referenceImages": {
          "description": "The list of reference images.",
          "type": "array",
          "items": {
            "$ref": "ReferenceImage"
          }
        },
        "pageSize": {
          "type": "integer",
          "description": "The maximum number of items to return. Default 10, maximum 100.",
          "format": "int32"
        }
      },
      "id": "ListReferenceImagesResponse"
    },
    "GoogleCloudVisionV1p4beta1SafeSearchAnnotation": {
      "type": "object",
      "properties": {
        "nsfwConfidence": {
          "description": "Confidence of nsfw_score. Range [0, 1]. 0 means not confident, 1 means very\nconfident.",
          "format": "float",
          "type": "number"
        },
        "spoof": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "medical": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "racyConfidence": {
          "description": "Confidence of racy_score. Range [0, 1]. 0 means not confident, 1 means very\nconfident.",
          "format": "float",
          "type": "number"
        },
        "adultConfidence": {
          "type": "number",
          "description": "Confidence of adult_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float"
        },
        "adult": {
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "violenceConfidence": {
          "description": "Confidence of violence_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float",
          "type": "number"
        },
        "racy": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "violence": {
          "description": "Likelihood that this image contains violent content.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "spoofConfidence": {
          "type": "number",
          "description": "Confidence of spoof_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float"
        },
        "medicalConfidence": {
          "description": "Confidence of medical_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1SafeSearchAnnotation",
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence)."
    },
    "GoogleCloudVisionV1p3beta1Word": {
      "description": "A word representation.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float"
        },
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Symbol"
          }
        },
        "property": {
          "description": "Additional information detected for the word.",
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Word"
    },
    "DetectedLanguage": {
      "description": "Detected language for a structural component.",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "DetectedLanguage"
    },
    "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage": {
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage",
      "description": "Detected language for a structural component."
    },
    "OutputConfig": {
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "batchSize": {
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32",
          "type": "integer"
        },
        "gcsDestination": {
          "$ref": "GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        }
      },
      "id": "OutputConfig"
    },
    "GoogleCloudVisionV1p2beta1Product": {
      "description": "A Product contains ReferenceImages.",
      "type": "object",
      "properties": {
        "productCategory": {
          "type": "string",
          "description": "The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products.\n\nThis field is immutable."
        },
        "productLabels": {
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductKeyValue"
          }
        },
        "name": {
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product.",
          "type": "string"
        },
        "displayName": {
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Product"
    },
    "GoogleCloudVisionV1p3beta1ReferenceImage": {
      "description": "A `ReferenceImage` represents a product image and its associated metadata,\nsuch as bounding boxes.",
      "type": "object",
      "properties": {
        "boundingPolys": {
          "description": "Bounding polygons around the areas of interest in the reference image.\nOptional. If this field is empty, the system will try to detect regions of\ninterest. At most 10 bounding polygons will be used.\n\nThe provided shape is converted into a non-rotated rectangle. Once\nconverted, the small edge of the rectangle must be greater than or equal\nto 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5\nis not).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
          }
        },
        "name": {
          "description": "The resource name of the reference image.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.\n\nThis field is ignored when creating a reference image.",
          "type": "string"
        },
        "uri": {
          "description": "The Google Cloud Storage URI of the reference image.\n\nThe URI must start with `gs://`.\n\nRequired.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ReferenceImage"
    },
    "KeyValue": {
      "description": "A product label represented as a key-value pair.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes.",
          "type": "string"
        },
        "key": {
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes.",
          "type": "string"
        }
      },
      "id": "KeyValue"
    },
    "WebDetection": {
      "description": "Relevant information for the image from the Internet.",
      "type": "object",
      "properties": {
        "fullMatchingImages": {
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "WebImage"
          }
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "WebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "WebPage"
          }
        },
        "partialMatchingImages": {
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array",
          "items": {
            "$ref": "WebImage"
          }
        },
        "visuallySimilarImages": {
          "type": "array",
          "items": {
            "$ref": "WebImage"
          },
          "description": "The visually similar image results."
        },
        "bestGuessLabels": {
          "type": "array",
          "items": {
            "$ref": "WebLabel"
          },
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web."
        }
      },
      "id": "WebDetection"
    },
    "GoogleCloudVisionV1p3beta1CropHintsAnnotation": {
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "type": "object",
      "properties": {
        "cropHints": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1CropHint"
          },
          "description": "Crop hint results."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1CropHintsAnnotation"
    },
    "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse": {
      "id": "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse",
      "description": "The response for a single offline file annotation request.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudVisionV1p2beta1OutputConfig",
          "description": "The output location and metadata from AsyncAnnotateFileRequest."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation": {
      "description": "Prediction for what the object in the bounding box is.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "score": {
          "type": "number",
          "description": "Score of the result. Range [0, 1].",
          "format": "float"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "mid": {
          "type": "string",
          "description": "Object ID that should align with EntityAnnotation mid."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation"
    },
    "GoogleCloudVisionV1p1beta1AnnotateImageResponse": {
      "id": "GoogleCloudVisionV1p1beta1AnnotateImageResponse",
      "description": "Response to an image annotation request.",
      "type": "object",
      "properties": {
        "landmarkAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          },
          "description": "If present, landmark detection has completed successfully."
        },
        "faceAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1FaceAnnotation"
          },
          "description": "If present, face detection has completed successfully."
        },
        "cropHintsAnnotation": {
          "description": "If present, crop hints have completed successfully.",
          "$ref": "GoogleCloudVisionV1p1beta1CropHintsAnnotation"
        },
        "labelAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          },
          "description": "If present, label detection has completed successfully."
        },
        "productSearchResults": {
          "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResults",
          "description": "If present, product search has completed successfully."
        },
        "localizedObjectAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation"
          },
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score."
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "fullTextAnnotation": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        },
        "textAnnotations": {
          "description": "If present, text (OCR) detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          }
        },
        "imagePropertiesAnnotation": {
          "$ref": "GoogleCloudVisionV1p1beta1ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1EntityAnnotation"
          }
        },
        "context": {
          "$ref": "GoogleCloudVisionV1p1beta1ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        },
        "webDetection": {
          "$ref": "GoogleCloudVisionV1p1beta1WebDetection",
          "description": "If present, web detection has completed successfully."
        },
        "safeSearchAnnotation": {
          "$ref": "GoogleCloudVisionV1p1beta1SafeSearchAnnotation",
          "description": "If present, safe-search annotation has completed successfully."
        }
      }
    },
    "GoogleCloudVisionV1p5beta1FaceAnnotationLandmark": {
      "description": "A face-specific landmark (for example, a face feature).",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type."
        },
        "position": {
          "description": "Face landmark position.",
          "$ref": "GoogleCloudVisionV1p5beta1Position"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1FaceAnnotationLandmark"
    },
    "GoogleCloudVisionV1p5beta1NormalizedVertex": {
      "id": "GoogleCloudVisionV1p5beta1NormalizedVertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1WebDetectionWebImage": {
      "description": "Metadata for online images.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The result image URL."
        },
        "score": {
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
    },
    "GoogleCloudVisionV1p2beta1Property": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the property.",
          "type": "string"
        },
        "uint64Value": {
          "description": "Value of numeric properties.",
          "format": "uint64",
          "type": "string"
        },
        "name": {
          "description": "Name of the property.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Property",
      "description": "A `Property` consists of a user-supplied name/value pair."
    },
    "BatchAnnotateImagesRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
          "type": "string"
        },
        "requests": {
          "description": "Individual image annotation requests for this batch.",
          "type": "array",
          "items": {
            "$ref": "AnnotateImageRequest"
          }
        }
      },
      "id": "BatchAnnotateImagesRequest",
      "description": "Multiple image annotation requests are batched into a single service call."
    },
    "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse": {
      "id": "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse",
      "description": "Response to an async batch file annotation request.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse"
          }
        }
      }
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "CancelOperationRequest"
    },
    "ImageContext": {
      "type": "object",
      "properties": {
        "languageHints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of languages to use for TEXT_DETECTION. In most cases, an empty value\nyields the best results since it enables automatic language detection. For\nlanguages based on the Latin alphabet, setting `language_hints` is not\nneeded. In rare cases, when the language of the text in the image is known,\nsetting a hint will help get better results (although it will be a\nsignificant hindrance if the hint is wrong). Text detection returns an\nerror if one or more of the specified languages is not one of the\n[supported languages](/vision/docs/languages)."
        },
        "webDetectionParams": {
          "$ref": "WebDetectionParams",
          "description": "Parameters for web detection."
        },
        "latLongRect": {
          "description": "Not used.",
          "$ref": "LatLongRect"
        },
        "cropHintsParams": {
          "$ref": "CropHintsParams",
          "description": "Parameters for crop hints annotation request."
        },
        "productSearchParams": {
          "description": "Parameters for product search.",
          "$ref": "ProductSearchParams"
        }
      },
      "id": "ImageContext",
      "description": "Image context and/or feature-specific parameters."
    },
    "GoogleCloudVisionV1p3beta1Symbol": {
      "description": "A single symbol representation.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the symbol."
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Symbol"
    },
    "GoogleCloudVisionV1p1beta1ImageAnnotationContext": {
      "id": "GoogleCloudVisionV1p1beta1ImageAnnotationContext",
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the file used to produce the image."
        },
        "pageNumber": {
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse": {
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "The output location and metadata from AsyncAnnotateFileRequest.",
          "$ref": "GoogleCloudVisionV1p1beta1OutputConfig"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse",
      "description": "The response for a single offline file annotation request."
    },
    "ReferenceImage": {
      "description": "A `ReferenceImage` represents a product image and its associated metadata,\nsuch as bounding boxes.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The Google Cloud Storage URI of the reference image.\n\nThe URI must start with `gs://`.\n\nRequired.",
          "type": "string"
        },
        "boundingPolys": {
          "type": "array",
          "items": {
            "$ref": "BoundingPoly"
          },
          "description": "Bounding polygons around the areas of interest in the reference image.\nOptional. If this field is empty, the system will try to detect regions of\ninterest. At most 10 bounding polygons will be used.\n\nThe provided shape is converted into a non-rotated rectangle. Once\nconverted, the small edge of the rectangle must be greater than or equal\nto 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5\nis not)."
        },
        "name": {
          "description": "The resource name of the reference image.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.\n\nThis field is ignored when creating a reference image.",
          "type": "string"
        }
      },
      "id": "ReferenceImage"
    },
    "GoogleCloudVisionV1p5beta1WebDetectionWebLabel": {
      "type": "object",
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      },
      "id": "GoogleCloudVisionV1p5beta1WebDetectionWebLabel",
      "description": "Label to provide extra metadata for the web detection."
    },
    "GoogleCloudVisionV1p4beta1DominantColorsAnnotation": {
      "type": "object",
      "properties": {
        "colors": {
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ColorInfo"
          }
        }
      },
      "id": "GoogleCloudVisionV1p4beta1DominantColorsAnnotation",
      "description": "Set of dominant colors and their corresponding scores."
    },
    "GoogleCloudVisionV1p5beta1BatchAnnotateFilesResponse": {
      "description": "A list of file annotation responses.",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1AnnotateFileResponse"
          },
          "description": "The list of file annotation responses, each response corresponding to each\nAnnotateFileRequest in BatchAnnotateFilesRequest."
        }
      },
      "id": "GoogleCloudVisionV1p5beta1BatchAnnotateFilesResponse"
    },
    "GoogleCloudVisionV1p5beta1Symbol": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p5beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the symbol."
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Symbol",
      "description": "A single symbol representation."
    },
    "CropHintsAnnotation": {
      "type": "object",
      "properties": {
        "cropHints": {
          "description": "Crop hint results.",
          "type": "array",
          "items": {
            "$ref": "CropHint"
          }
        }
      },
      "id": "CropHintsAnnotation",
      "description": "Set of crop hints that are used to generate new crops when serving images."
    },
    "GoogleCloudVisionV1p4beta1Page": {
      "description": "Detected page from OCR.",
      "type": "object",
      "properties": {
        "height": {
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Block"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty",
          "description": "Additional information detected on the page."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1Page"
    },
    "Product": {
      "id": "Product",
      "description": "A Product contains ReferenceImages.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product."
        },
        "displayName": {
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long."
        },
        "productCategory": {
          "description": "The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products.\n\nThis field is immutable.",
          "type": "string"
        },
        "productLabels": {
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet.",
          "type": "array",
          "items": {
            "$ref": "KeyValue"
          }
        }
      }
    },
    "GoogleCloudVisionV1p4beta1ProductSearchResultsResult": {
      "description": "Information about a product.",
      "type": "object",
      "properties": {
        "score": {
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence).",
          "format": "float",
          "type": "number"
        },
        "image": {
          "description": "The resource name of the image from the product that is the closest match\nto the query.",
          "type": "string"
        },
        "product": {
          "description": "The Product.",
          "$ref": "GoogleCloudVisionV1p4beta1Product"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ProductSearchResultsResult"
    },
    "GoogleCloudVisionV1p5beta1TextAnnotationDetectedLanguage": {
      "id": "GoogleCloudVisionV1p5beta1TextAnnotationDetectedLanguage",
      "description": "Detected language for a structural component.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      }
    },
    "BatchAnnotateFilesRequest": {
      "description": "A list of requests to annotate files using the BatchAnnotateFiles API.",
      "type": "object",
      "properties": {
        "parent": {
          "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
          "type": "string"
        },
        "requests": {
          "description": "The list of file annotation requests. Right now we support only one\nAnnotateFileRequest in BatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "AnnotateFileRequest"
          }
        }
      },
      "id": "BatchAnnotateFilesRequest"
    },
    "GoogleCloudVisionV1p4beta1QualityOptimizationResult": {
      "description": "Stores enhanced image bytes.",
      "type": "object",
      "properties": {
        "qualityOptimizationType": {
          "type": "string",
          "enumDescriptions": [
            "Invalid. Customer must select one Type.",
            "Reduce image file size. Detailed params specified in CompressionConfig.\nIf customer do not specify CompressionConfig, it will reduce image file\nsize while not reducing image quality. If customer specify\nCompressionConfig, we will reduce file size while keeping\nCompressionParams.target_quality.",
            "Denoise, sharpening, HDR and upscaling. Detailed params specified in\nEnhancementConfig. If customer do not specify EnhancmentConfig, it will\ndo image enhancement using default values. If upscale_ratio not\nspecified, the output image will have the same resolution as input image.",
            "Query quality score for an image. Detailed params specified in\nQualityScoreConfig. If customer does not specify QualityScoreConfig,\naesthetic score of image will be returned."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "COMPRESSION",
            "ENHANCEMENT",
            "QUALITY_SCORE"
          ],
          "description": "Required optimization type."
        },
        "image": {
          "description": "Optimized image bytes.",
          "format": "byte",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the output image.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1QualityOptimizationResult"
    },
    "GoogleCloudVisionV1p3beta1Page": {
      "description": "Detected page from OCR.",
      "type": "object",
      "properties": {
        "width": {
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Block"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty",
          "description": "Additional information detected on the page."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float"
        },
        "height": {
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Page"
    },
    "ProductSet": {
      "type": "object",
      "properties": {
        "indexTime": {
          "description": "Output only. The time at which this ProductSet was last indexed. Query\nresults will reflect all updates before this time. If this ProductSet has\nnever been indexed, this timestamp is the default value\n\"1970-01-01T00:00:00Z\".\n\nThis field is ignored when creating a ProductSet.",
          "format": "google-datetime",
          "type": "string"
        },
        "indexError": {
          "$ref": "Status",
          "description": "Output only. If there was an error with indexing the product set, the field\nis populated.\n\nThis field is ignored when creating a ProductSet."
        },
        "name": {
          "description": "The resource name of the ProductSet.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.\n\nThis field is ignored when creating a ProductSet.",
          "type": "string"
        },
        "displayName": {
          "description": "The user-provided name for this ProductSet. Must not be empty. Must be at\nmost 4096 characters long.",
          "type": "string"
        }
      },
      "id": "ProductSet",
      "description": "A ProductSet contains Products. A ProductSet can contain a maximum of 1\nmillion reference images. If the limit is exceeded, periodic indexing will\nfail."
    },
    "GoogleCloudVisionV1p3beta1DominantColorsAnnotation": {
      "type": "object",
      "properties": {
        "colors": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ColorInfo"
          },
          "description": "RGB color values with their score and pixel fraction."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1DominantColorsAnnotation",
      "description": "Set of dominant colors and their corresponding scores."
    },
    "BoundingPoly": {
      "type": "object",
      "properties": {
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "Vertex"
          }
        },
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "NormalizedVertex"
          }
        }
      },
      "id": "BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudVisionV1p3beta1OutputConfig": {
      "id": "GoogleCloudVisionV1p3beta1OutputConfig",
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudVisionV1p3beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        },
        "batchSize": {
          "type": "integer",
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1GcsSource": {
      "description": "The Google Cloud Storage location where the input will be read from.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1GcsSource"
    },
    "GoogleCloudVisionV1p5beta1CropHint": {
      "description": "Single crop hint that is used to generate a new crop when serving an image.",
      "type": "object",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "format": "float"
        },
        "importanceFraction": {
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float",
          "type": "number"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly",
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale."
        }
      },
      "id": "GoogleCloudVisionV1p5beta1CropHint"
    },
    "GoogleCloudVisionV1p5beta1Table": {
      "description": "A table representation similar to HTML table structure.",
      "type": "object",
      "properties": {
        "headerRows": {
          "description": "Header rows of the table",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1TableTableRow"
          }
        },
        "bodyRows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1TableTableRow"
          },
          "description": "Body rows of the table"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Table"
    },
    "GoogleCloudVisionV1p5beta1ImageProperties": {
      "description": "Stores image properties, such as dominant colors.",
      "type": "object",
      "properties": {
        "dominantColors": {
          "description": "If present, dominant colors completed successfully.",
          "$ref": "GoogleCloudVisionV1p5beta1DominantColorsAnnotation"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1ImageProperties"
    },
    "GoogleCloudVisionV1p2beta1EntityAnnotation": {
      "description": "Set of detected entity features.",
      "type": "object",
      "properties": {
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "confidence": {
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "boundingPoly": {
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features.",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "locale": {
          "description": "The language code for the locale in which the entity textual\n`description` is expressed.",
          "type": "string"
        },
        "topicality": {
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Entity textual description, expressed in its `locale` language.",
          "type": "string"
        },
        "properties": {
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Property"
          }
        },
        "score": {
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1LocationInfo"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1EntityAnnotation"
    },
    "GoogleCloudVisionV1p5beta1ProductSearchResultsObjectAnnotation": {
      "type": "object",
      "properties": {
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        },
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1ProductSearchResultsObjectAnnotation",
      "description": "Prediction for what the object in the bounding box is."
    },
    "WebPage": {
      "id": "WebPage",
      "description": "Metadata for web pages.",
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float",
          "type": "number"
        },
        "partialMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "WebImage"
          },
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops."
        },
        "url": {
          "description": "The result web page URL.",
          "type": "string"
        },
        "pageTitle": {
          "description": "Title for the web page, may contain HTML markups.",
          "type": "string"
        },
        "fullMatchingImages": {
          "description": "Fully matching images on the page.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "WebImage"
          }
        }
      }
    },
    "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Detected break type.",
          "type": "string",
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ]
        },
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak",
      "description": "Detected start or end of a structural component."
    },
    "GoogleCloudVisionV1p5beta1EntityAnnotation": {
      "description": "Set of detected entity features.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1Property"
          }
        },
        "score": {
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1LocationInfo"
          }
        },
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float"
        },
        "locale": {
          "type": "string",
          "description": "The language code for the locale in which the entity textual\n`description` is expressed."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features."
        },
        "description": {
          "type": "string",
          "description": "Entity textual description, expressed in its `locale` language."
        },
        "topicality": {
          "type": "number",
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1EntityAnnotation"
    },
    "GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation": {
      "type": "object",
      "properties": {
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        },
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "Image region to which this object belongs. This must be populated."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation",
      "description": "Set of detected objects with bounding boxes."
    },
    "GoogleCloudVisionV1p5beta1Block": {
      "description": "Logical element on the page.",
      "type": "object",
      "properties": {
        "keyValuePair": {
          "$ref": "GoogleCloudVisionV1p5beta1KeyValuePair",
          "description": "Detected pair for KEY_VALUE_PAIR block_type. This detection can be turned\noff by explicitly setting desired fields in\nDocumentParsingParams.block_filter."
        },
        "blockType": {
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block.",
            "A key-value pair block."
          ],
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE",
            "KEY_VALUE_PAIR"
          ],
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string"
        },
        "table": {
          "description": "Detected table for TABLE block_type. This detection can be turned off by\nexplicitly setting desired fields in DocumentParsingParams.block_filter.",
          "$ref": "GoogleCloudVisionV1p5beta1Table"
        },
        "boundingBox": {
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly"
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1Paragraph"
          },
          "description": "List of paragraphs in this block (if this blocks is of type text)."
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p5beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the block."
        },
        "mergedText": {
          "type": "string",
          "description": "All UTF-8 text detected in this block. This field is by default not\nreturned unless specified in TextDetectionParams.block_filter or\nDocumentParsingParams.block_filter."
        },
        "confidence": {
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Block"
    },
    "GoogleCloudVisionV1p3beta1AnnotateImageResponse": {
      "type": "object",
      "properties": {
        "webDetection": {
          "$ref": "GoogleCloudVisionV1p3beta1WebDetection",
          "description": "If present, web detection has completed successfully."
        },
        "safeSearchAnnotation": {
          "$ref": "GoogleCloudVisionV1p3beta1SafeSearchAnnotation",
          "description": "If present, safe-search annotation has completed successfully."
        },
        "landmarkAnnotations": {
          "description": "If present, landmark detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1EntityAnnotation"
          }
        },
        "faceAnnotations": {
          "description": "If present, face detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1FaceAnnotation"
          }
        },
        "cropHintsAnnotation": {
          "$ref": "GoogleCloudVisionV1p3beta1CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        },
        "labelAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1EntityAnnotation"
          },
          "description": "If present, label detection has completed successfully."
        },
        "productSearchResults": {
          "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResults",
          "description": "If present, product search has completed successfully."
        },
        "localizedObjectAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation"
          },
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score."
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "fullTextAnnotation": {
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        },
        "textAnnotations": {
          "description": "If present, text (OCR) detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1EntityAnnotation"
          }
        },
        "imagePropertiesAnnotation": {
          "$ref": "GoogleCloudVisionV1p3beta1ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1EntityAnnotation"
          }
        },
        "context": {
          "description": "If present, contextual information is needed to understand where this image\ncomes from.",
          "$ref": "GoogleCloudVisionV1p3beta1ImageAnnotationContext"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1AnnotateImageResponse",
      "description": "Response to an image annotation request."
    },
    "GoogleCloudVisionV1p2beta1Block": {
      "description": "Logical element on the page.",
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the block."
        },
        "blockType": {
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ],
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ],
          "description": "Detected block type (text, image etc) for this block."
        },
        "boundingBox": {
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Paragraph"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Block"
    },
    "GoogleCloudVisionV1p4beta1CropHintsAnnotation": {
      "id": "GoogleCloudVisionV1p4beta1CropHintsAnnotation",
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "type": "object",
      "properties": {
        "cropHints": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1CropHint"
          },
          "description": "Crop hint results."
        }
      }
    },
    "InputConfig": {
      "type": "object",
      "properties": {
        "content": {
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests.",
          "format": "byte",
          "type": "string"
        },
        "gcsSource": {
          "$ref": "GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mimeType": {
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported.",
          "type": "string"
        }
      },
      "id": "InputConfig",
      "description": "The desired input location and metadata."
    },
    "GoogleCloudVisionV1p2beta1Vertex": {
      "id": "GoogleCloudVisionV1p2beta1Vertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "type": "integer",
          "description": "Y coordinate.",
          "format": "int32"
        },
        "x": {
          "type": "integer",
          "description": "X coordinate.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1WebDetectionWebLabel": {
      "description": "Label to provide extra metadata for the web detection.",
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for extra metadata."
        },
        "languageCode": {
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1WebDetectionWebLabel"
    },
    "GoogleCloudVisionV1p3beta1WebDetectionWebPage": {
      "description": "Metadata for web pages.",
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float",
          "type": "number"
        },
        "partialMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          },
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops."
        },
        "url": {
          "type": "string",
          "description": "The result web page URL."
        },
        "pageTitle": {
          "type": "string",
          "description": "Title for the web page, may contain HTML markups."
        },
        "fullMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          },
          "description": "Fully matching images on the page.\nCan include resized copies of the query image."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1WebDetectionWebPage"
    },
    "AsyncAnnotateFileRequest": {
      "id": "AsyncAnnotateFileRequest",
      "description": "An offline file annotation request.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "InputConfig",
          "description": "Required. Information about the input file."
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "Feature"
          },
          "description": "Required. Requested features."
        },
        "imageContext": {
          "$ref": "ImageContext",
          "description": "Additional context that may accompany the image(s) in the file."
        },
        "outputConfig": {
          "$ref": "OutputConfig",
          "description": "Required. The desired output location and metadata (e.g. format)."
        }
      }
    },
    "GoogleCloudVisionV1p3beta1TextAnnotation": {
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object",
      "properties": {
        "pages": {
          "description": "List of pages detected by OCR.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Page"
          }
        },
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1TextAnnotation"
    },
    "GoogleCloudVisionV1p1beta1ProductKeyValue": {
      "description": "A product label represented as a key-value pair.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes.",
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ProductKeyValue"
    },
    "GoogleCloudVisionV1p3beta1GcsDestination": {
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1GcsDestination",
      "description": "The Google Cloud Storage location where the output will be written to."
    },
    "GoogleCloudVisionV1p4beta1Position": {
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "type": "number",
          "description": "X coordinate.",
          "format": "float"
        },
        "z": {
          "type": "number",
          "description": "Z coordinate (or depth).",
          "format": "float"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1Position"
    },
    "AnnotateImageRequest": {
      "id": "AnnotateImageRequest",
      "description": "Request for performing Google Cloud Vision API tasks over a user-provided\nimage, with user-requested features, and with context information.",
      "type": "object",
      "properties": {
        "imageContext": {
          "description": "Additional context that may accompany the image.",
          "$ref": "ImageContext"
        },
        "image": {
          "$ref": "Image",
          "description": "The image to be processed."
        },
        "features": {
          "description": "Requested features.",
          "type": "array",
          "items": {
            "$ref": "Feature"
          }
        }
      }
    },
    "GoogleCloudVisionV1p3beta1ProductKeyValue": {
      "description": "A product label represented as a key-value pair.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes.",
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ProductKeyValue"
    },
    "GoogleCloudVisionV1p2beta1OperationMetadata": {
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "description": "Current state of the batch operation.",
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ]
        },
        "updateTime": {
          "type": "string",
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "The time when the batch request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1OperationMetadata"
    },
    "ListProductsInProductSetResponse": {
      "description": "Response message for the `ListProductsInProductSet` method.",
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "Product"
          },
          "description": "The list of Products."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
          "type": "string"
        }
      },
      "id": "ListProductsInProductSetResponse"
    },
    "GoogleCloudVisionV1p5beta1AsyncBatchAnnotateFilesResponse": {
      "description": "Response to an async batch file annotation request.",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1AsyncAnnotateFileResponse"
          },
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest."
        }
      },
      "id": "GoogleCloudVisionV1p5beta1AsyncBatchAnnotateFilesResponse"
    },
    "GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult": {
      "description": "Information about the products similar to a single product in a query\nimage.",
      "type": "object",
      "properties": {
        "objectAnnotations": {
          "description": "List of generic predictions for the object in the bounding box.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation"
          }
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The bounding polygon around the product detected in the query image."
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResultsResult"
          }
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult"
    },
    "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty": {
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedBreak": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"
    },
    "GoogleCloudVisionV1p2beta1Page": {
      "description": "Detected page from OCR.",
      "type": "object",
      "properties": {
        "width": {
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Block"
          }
        },
        "property": {
          "description": "Additional information detected on the page.",
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"
        },
        "confidence": {
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "height": {
          "type": "integer",
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Page"
    },
    "GoogleCloudVisionV1p4beta1NormalizedVertex": {
      "id": "GoogleCloudVisionV1p4beta1NormalizedVertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "y": {
          "type": "number",
          "description": "Y coordinate.",
          "format": "float"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudVisionV1p1beta1CropHintsAnnotation": {
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "type": "object",
      "properties": {
        "cropHints": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1CropHint"
          },
          "description": "Crop hint results."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1CropHintsAnnotation"
    },
    "GoogleCloudVisionV1p5beta1LocalizedObjectAnnotation": {
      "description": "Set of detected objects with bounding boxes.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "mid": {
          "type": "string",
          "description": "Object ID that should align with EntityAnnotation mid."
        },
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly",
          "description": "Image region to which this object belongs. This must be populated."
        },
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1LocalizedObjectAnnotation"
    },
    "GoogleCloudVisionV1p5beta1LocationInfo": {
      "id": "GoogleCloudVisionV1p5beta1LocationInfo",
      "description": "Detected entity location information.",
      "type": "object",
      "properties": {
        "latLng": {
          "$ref": "LatLng",
          "description": "lat/long location coordinates."
        }
      }
    },
    "GoogleCloudVisionV1p5beta1InputConfig": {
      "id": "GoogleCloudVisionV1p5beta1InputConfig",
      "description": "The desired input location and metadata.",
      "type": "object",
      "properties": {
        "content": {
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests.",
          "format": "byte",
          "type": "string"
        },
        "gcsSource": {
          "$ref": "GoogleCloudVisionV1p5beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mimeType": {
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult": {
      "description": "Information about the products similar to a single product in a query\nimage.",
      "type": "object",
      "properties": {
        "objectAnnotations": {
          "description": "List of generic predictions for the object in the bounding box.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation"
          }
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "The bounding polygon around the product detected in the query image."
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResultsResult"
          }
        }
      },
      "id": "GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult"
    },
    "GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak": {
      "description": "Detected start or end of a structural component.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "description": "Detected break type."
        },
        "isPrefix": {
          "type": "boolean",
          "description": "True if break prepends the element."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak"
    },
    "GoogleCloudVisionV1p5beta1ReferenceImage": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the reference image.\n\nFormat is:\n\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.\n\nThis field is ignored when creating a reference image.",
          "type": "string"
        },
        "uri": {
          "description": "The Google Cloud Storage URI of the reference image.\n\nThe URI must start with `gs://`.\n\nRequired.",
          "type": "string"
        },
        "boundingPolys": {
          "description": "Bounding polygons around the areas of interest in the reference image.\nOptional. If this field is empty, the system will try to detect regions of\ninterest. At most 10 bounding polygons will be used.\n\nThe provided shape is converted into a non-rotated rectangle. Once\nconverted, the small edge of the rectangle must be greater than or equal\nto 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5\nis not).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1ReferenceImage",
      "description": "A `ReferenceImage` represents a product image and its associated metadata,\nsuch as bounding boxes."
    },
    "ImportProductSetsResponse": {
      "type": "object",
      "properties": {
        "referenceImages": {
          "description": "The list of reference_images that are imported successfully.",
          "type": "array",
          "items": {
            "$ref": "ReferenceImage"
          }
        },
        "statuses": {
          "description": "The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        }
      },
      "id": "ImportProductSetsResponse",
      "description": "Response message for the `ImportProductSets` method.\n\nThis message is returned by the\ngoogle.longrunning.Operations.GetOperation method in the returned\ngoogle.longrunning.Operation.response field."
    },
    "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse": {
      "id": "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse",
      "description": "Response to an async batch image annotation request.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "The output location and metadata from AsyncBatchAnnotateImagesRequest.",
          "$ref": "GoogleCloudVisionV1p4beta1OutputConfig"
        }
      }
    },
    "ImageAnnotationContext": {
      "id": "ImageAnnotationContext",
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32",
          "type": "integer"
        },
        "uri": {
          "type": "string",
          "description": "The URI of the file used to produce the image."
        }
      }
    },
    "GoogleCloudVisionV1p5beta1KeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "description": "The key string value.",
          "type": "string"
        },
        "valueType": {
          "description": "Type of the value. Valid strings are the following:\n\n \"generic\" - For generic text that is mapped to a value.\n \"number\" - for numeric types\n \"id\" - for generic identifiers.\n \"currency\" - for currency values.\n \"date\" - for dates.\n \"time\" - for time and duration values.\n \"date_range\" - for date ranges.\n \"address\" - for address values (can be long).\n \"person\" - for names of people or other personal identifiers.\n \"phone\" - for phone numbers.",
          "type": "string"
        },
        "keyBlock": {
          "description": "Key block of the pair containing the normalized bounding box and key text.",
          "$ref": "GoogleCloudVisionV1p5beta1Block"
        },
        "valueBlock": {
          "$ref": "GoogleCloudVisionV1p5beta1Block",
          "description": "Value block of the pair containing the normalized bounding box and value\ntext, including potentially deeper structures within the value text."
        },
        "normalizedKey": {
          "description": "Optional. The translation of key text if the text is not in English.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1KeyValuePair",
      "description": "Proto for a key value pair."
    },
    "WebEntity": {
      "description": "Entity deduced from similar images on the Internet.",
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string",
          "description": "Opaque entity ID."
        },
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "score": {
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "WebEntity"
    },
    "GoogleCloudVisionV1p5beta1CropHintsAnnotation": {
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "type": "object",
      "properties": {
        "cropHints": {
          "description": "Crop hint results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1CropHint"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1CropHintsAnnotation"
    },
    "GoogleCloudVisionV1p3beta1BoundingPoly": {
      "id": "GoogleCloudVisionV1p3beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Vertex"
          }
        }
      }
    },
    "GoogleCloudVisionV1p2beta1LocationInfo": {
      "description": "Detected entity location information.",
      "type": "object",
      "properties": {
        "latLng": {
          "$ref": "LatLng",
          "description": "lat/long location coordinates."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1LocationInfo"
    },
    "NormalizedVertex": {
      "id": "NormalizedVertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "Block": {
      "description": "Logical element on the page.",
      "type": "object",
      "properties": {
        "property": {
          "$ref": "TextProperty",
          "description": "Additional information detected for the block."
        },
        "blockType": {
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ],
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ]
        },
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array",
          "items": {
            "$ref": "Paragraph"
          }
        }
      },
      "id": "Block"
    },
    "GoogleCloudVisionV1p3beta1Property": {
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the property."
        },
        "uint64Value": {
          "type": "string",
          "description": "Value of numeric properties.",
          "format": "uint64"
        },
        "name": {
          "description": "Name of the property.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Property"
    },
    "GoogleCloudVisionV1p3beta1Product": {
      "description": "A Product contains ReferenceImages.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product."
        },
        "displayName": {
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long.",
          "type": "string"
        },
        "description": {
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long.",
          "type": "string"
        },
        "productCategory": {
          "type": "string",
          "description": "The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products.\n\nThis field is immutable."
        },
        "productLabels": {
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductKeyValue"
          }
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Product"
    },
    "GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse": {
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "The output location and metadata from AsyncAnnotateFileRequest.",
          "$ref": "GoogleCloudVisionV1p3beta1OutputConfig"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse",
      "description": "The response for a single offline file annotation request."
    },
    "ColorInfo": {
      "id": "ColorInfo",
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float"
        },
        "pixelFraction": {
          "type": "number",
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float"
        },
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1ImportProductSetsResponse": {
      "description": "Response message for the `ImportProductSets` method.\n\nThis message is returned by the\ngoogle.longrunning.Operations.GetOperation method in the returned\ngoogle.longrunning.Operation.response field.",
      "type": "object",
      "properties": {
        "referenceImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ReferenceImage"
          },
          "description": "The list of reference_images that are imported successfully."
        },
        "statuses": {
          "description": "The rpc status for each ImportProductSet request, including both successes\nand errors.\n\nThe number of statuses here matches the number of lines in the csv file,\nand statuses[i] stores the success or failure status of processing the i-th\nline of the csv, starting from line 0.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ImportProductSetsResponse"
    },
    "GoogleCloudVisionV1p1beta1WebDetection": {
      "description": "Relevant information for the image from the Internet.",
      "type": "object",
      "properties": {
        "visuallySimilarImages": {
          "description": "The visually similar image results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          }
        },
        "bestGuessLabels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebLabel"
          },
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web."
        },
        "fullMatchingImages": {
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          }
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebPage"
          }
        },
        "partialMatchingImages": {
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1WebDetectionWebImage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetection"
    },
    "GoogleCloudVisionV1p4beta1Symbol": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the symbol."
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float"
        },
        "text": {
          "type": "string",
          "description": "The actual UTF-8 representation of the symbol."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1Symbol",
      "description": "A single symbol representation."
    },
    "GoogleCloudVisionV1p1beta1SafeSearchAnnotation": {
      "type": "object",
      "properties": {
        "medical": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image."
        },
        "racy": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas."
        },
        "violence": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this image contains violent content."
        },
        "adult": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities.",
          "type": "string"
        },
        "spoof": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1SafeSearchAnnotation",
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence)."
    },
    "GoogleCloudVisionV1p1beta1GcsDestination": {
      "description": "The Google Cloud Storage location where the output will be written to.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1GcsDestination"
    },
    "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty": {
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage"
          }
        },
        "detectedBreak": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty"
    },
    "GoogleCloudVisionV1p2beta1AnnotateImageResponse": {
      "type": "object",
      "properties": {
        "landmarkAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          },
          "description": "If present, landmark detection has completed successfully."
        },
        "faceAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1FaceAnnotation"
          },
          "description": "If present, face detection has completed successfully."
        },
        "cropHintsAnnotation": {
          "$ref": "GoogleCloudVisionV1p2beta1CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        },
        "labelAnnotations": {
          "description": "If present, label detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          }
        },
        "localizedObjectAnnotations": {
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation"
          }
        },
        "productSearchResults": {
          "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResults",
          "description": "If present, product search has completed successfully."
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "fullTextAnnotation": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        },
        "textAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          },
          "description": "If present, text (OCR) detection has completed successfully."
        },
        "imagePropertiesAnnotation": {
          "$ref": "GoogleCloudVisionV1p2beta1ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "logoAnnotations": {
          "description": "If present, logo detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1EntityAnnotation"
          }
        },
        "context": {
          "$ref": "GoogleCloudVisionV1p2beta1ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        },
        "webDetection": {
          "$ref": "GoogleCloudVisionV1p2beta1WebDetection",
          "description": "If present, web detection has completed successfully."
        },
        "safeSearchAnnotation": {
          "$ref": "GoogleCloudVisionV1p2beta1SafeSearchAnnotation",
          "description": "If present, safe-search annotation has completed successfully."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1AnnotateImageResponse",
      "description": "Response to an image annotation request."
    },
    "GoogleCloudVisionV1p2beta1ProductKeyValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes."
        },
        "key": {
          "type": "string",
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1ProductKeyValue",
      "description": "A product label represented as a key-value pair."
    },
    "GoogleCloudVisionV1p2beta1ImageProperties": {
      "description": "Stores image properties, such as dominant colors.",
      "type": "object",
      "properties": {
        "dominantColors": {
          "$ref": "GoogleCloudVisionV1p2beta1DominantColorsAnnotation",
          "description": "If present, dominant colors completed successfully."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1ImageProperties"
    },
    "GoogleCloudVisionV1p5beta1AsyncBatchAnnotateImagesResponse": {
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudVisionV1p5beta1OutputConfig",
          "description": "The output location and metadata from AsyncBatchAnnotateImagesRequest."
        }
      },
      "id": "GoogleCloudVisionV1p5beta1AsyncBatchAnnotateImagesResponse",
      "description": "Response to an async batch image annotation request."
    },
    "GoogleCloudVisionV1p4beta1WebDetectionWebPage": {
      "id": "GoogleCloudVisionV1p4beta1WebDetectionWebPage",
      "description": "Metadata for web pages.",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float"
        },
        "partialMatchingImages": {
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          }
        },
        "url": {
          "type": "string",
          "description": "The result web page URL."
        },
        "pageTitle": {
          "description": "Title for the web page, may contain HTML markups.",
          "type": "string"
        },
        "fullMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          },
          "description": "Fully matching images on the page.\nCan include resized copies of the query image."
        }
      }
    },
    "GoogleCloudVisionV1p5beta1BatchOperationMetadata": {
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The time when the batch request is finished and\ngoogle.longrunning.Operation.done is set to true.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is actively being processed.",
            "The request is done and at least one item has been successfully\nprocessed.",
            "The request is done and no item has been successfully processed.",
            "The request is done after the longrunning.Operations.CancelOperation has\nbeen called by the user.  Any records that were processed before the\ncancel command are output as specified in the request."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROCESSING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The current state of the batch operation."
        },
        "submitTime": {
          "description": "The time when the batch request was submitted to the server.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1BatchOperationMetadata",
      "description": "Metadata for the batch operations such as the current state.\n\nThis is included in the `metadata` field of the `Operation` returned by the\n`GetOperation` call of the `google::longrunning::Operations` service."
    },
    "GoogleCloudVisionV1p2beta1InputConfig": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests.",
          "format": "byte"
        },
        "gcsSource": {
          "$ref": "GoogleCloudVisionV1p2beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mimeType": {
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1InputConfig",
      "description": "The desired input location and metadata."
    },
    "Page": {
      "id": "Page",
      "description": "Detected page from OCR.",
      "type": "object",
      "properties": {
        "height": {
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "type": "integer",
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32"
        },
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "Block"
          },
          "description": "List of blocks of text, images etc on this page."
        },
        "property": {
          "description": "Additional information detected on the page.",
          "$ref": "TextProperty"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float"
        }
      }
    },
    "AsyncBatchAnnotateFilesRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`.",
          "type": "string"
        },
        "requests": {
          "description": "Individual async file annotation requests for this batch.",
          "type": "array",
          "items": {
            "$ref": "AsyncAnnotateFileRequest"
          }
        }
      },
      "id": "AsyncBatchAnnotateFilesRequest",
      "description": "Multiple async file annotation requests are batched into a single service\ncall."
    },
    "GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse": {
      "description": "The response for a single offline file annotation request.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudVisionV1p4beta1OutputConfig",
          "description": "The output location and metadata from AsyncAnnotateFileRequest."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse"
    },
    "GoogleCloudVisionV1p4beta1AnnotateImageResponse": {
      "type": "object",
      "properties": {
        "webDetection": {
          "$ref": "GoogleCloudVisionV1p4beta1WebDetection",
          "description": "If present, web detection has completed successfully."
        },
        "safeSearchAnnotation": {
          "$ref": "GoogleCloudVisionV1p4beta1SafeSearchAnnotation",
          "description": "If present, safe-search annotation has completed successfully."
        },
        "landmarkAnnotations": {
          "description": "If present, landmark detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1EntityAnnotation"
          }
        },
        "faceAnnotations": {
          "description": "If present, face detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1FaceAnnotation"
          }
        },
        "cropHintsAnnotation": {
          "description": "If present, crop hints have completed successfully.",
          "$ref": "GoogleCloudVisionV1p4beta1CropHintsAnnotation"
        },
        "labelAnnotations": {
          "description": "If present, label detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1EntityAnnotation"
          }
        },
        "productSearchResults": {
          "$ref": "GoogleCloudVisionV1p4beta1ProductSearchResults",
          "description": "If present, product search has completed successfully."
        },
        "localizedObjectAnnotations": {
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation"
          }
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "fullTextAnnotation": {
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        },
        "qualityOptimizationResult": {
          "$ref": "GoogleCloudVisionV1p4beta1QualityOptimizationResult",
          "description": "If present, image quality optimization has completed successfully."
        },
        "textAnnotations": {
          "description": "If present, text (OCR) detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1EntityAnnotation"
          }
        },
        "imageQualityAnnotation": {
          "$ref": "GoogleCloudVisionV1p4beta1ImageQuality",
          "description": "If present, image quality calculation has completed successfully."
        },
        "imagePropertiesAnnotation": {
          "$ref": "GoogleCloudVisionV1p4beta1ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "logoAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1EntityAnnotation"
          },
          "description": "If present, logo detection has completed successfully."
        },
        "context": {
          "$ref": "GoogleCloudVisionV1p4beta1ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1AnnotateImageResponse",
      "description": "Response to an image annotation request."
    },
    "RemoveProductFromProductSetRequest": {
      "id": "RemoveProductFromProductSetRequest",
      "description": "Request message for the `RemoveProductFromProductSet` method.",
      "type": "object",
      "properties": {
        "product": {
          "description": "The resource name for the Product to be removed from this ProductSet.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`",
          "type": "string"
        }
      }
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        }
      },
      "id": "Status"
    },
    "WebDetectionParams": {
      "id": "WebDetectionParams",
      "description": "Parameters for web detection request.",
      "type": "object",
      "properties": {
        "includeGeoResults": {
          "description": "Whether to include results derived from the geo information in the image.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudVisionV1p5beta1GcsDestination": {
      "description": "The Google Cloud Storage location where the output will be written to.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1GcsDestination"
    },
    "GoogleCloudVisionV1p3beta1InputConfig": {
      "type": "object",
      "properties": {
        "content": {
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests.",
          "format": "byte",
          "type": "string"
        },
        "gcsSource": {
          "$ref": "GoogleCloudVisionV1p3beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mimeType": {
          "type": "string",
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1InputConfig",
      "description": "The desired input location and metadata."
    },
    "AsyncBatchAnnotateImagesRequest": {
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "Required. The desired output location and metadata (e.g. format).",
          "$ref": "OutputConfig"
        },
        "requests": {
          "description": "Individual image annotation requests for this batch.",
          "type": "array",
          "items": {
            "$ref": "AnnotateImageRequest"
          }
        },
        "parent": {
          "type": "string",
          "description": "Optional. Target project and location to make a call.\n\nFormat: `projects/{project-id}/locations/{location-id}`.\n\nIf no parent is specified, a region will be chosen automatically.\n\nSupported location-ids:\n    `us`: USA country only,\n    `asia`: East asia areas, like Japan, Taiwan,\n    `eu`: The European Union.\n\nExample: `projects/project-A/locations/eu`."
        }
      },
      "id": "AsyncBatchAnnotateImagesRequest",
      "description": "Request for async image annotation for a list of images."
    },
    "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty": {
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "detectedBreak": {
          "$ref": "GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty"
    },
    "AsyncBatchAnnotateFilesResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "AsyncAnnotateFileResponse"
          },
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest."
        }
      },
      "id": "AsyncBatchAnnotateFilesResponse",
      "description": "Response to an async batch file annotation request."
    },
    "GoogleCloudVisionV1p3beta1ProductSearchResultsResult": {
      "id": "GoogleCloudVisionV1p3beta1ProductSearchResultsResult",
      "description": "Information about a product.",
      "type": "object",
      "properties": {
        "image": {
          "description": "The resource name of the image from the product that is the closest match\nto the query.",
          "type": "string"
        },
        "product": {
          "description": "The Product.",
          "$ref": "GoogleCloudVisionV1p3beta1Product"
        },
        "score": {
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence).",
          "format": "float",
          "type": "number"
        }
      }
    },
    "WebLabel": {
      "description": "Label to provide extra metadata for the web detection.",
      "type": "object",
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "id": "WebLabel"
    },
    "GoogleCloudVisionV1p5beta1WebDetectionWebPage": {
      "id": "GoogleCloudVisionV1p5beta1WebDetectionWebPage",
      "description": "Metadata for web pages.",
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float",
          "type": "number"
        },
        "partialMatchingImages": {
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1WebDetectionWebImage"
          }
        },
        "url": {
          "description": "The result web page URL.",
          "type": "string"
        },
        "pageTitle": {
          "description": "Title for the web page, may contain HTML markups.",
          "type": "string"
        },
        "fullMatchingImages": {
          "description": "Fully matching images on the page.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1WebDetectionWebImage"
          }
        }
      }
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebEntity": {
      "type": "object",
      "properties": {
        "score": {
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries.",
          "format": "float",
          "type": "number"
        },
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Canonical description of the entity, in English."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebEntity",
      "description": "Entity deduced from similar images on the Internet."
    },
    "GoogleCloudVisionV1p2beta1ProductSearchResults": {
      "id": "GoogleCloudVisionV1p2beta1ProductSearchResults",
      "description": "Results for a product search request.",
      "type": "object",
      "properties": {
        "indexTime": {
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "format": "google-datetime",
          "type": "string"
        },
        "productGroupedResults": {
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult"
          }
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResultsResult"
          }
        }
      }
    },
    "TextProperty": {
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "DetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "detectedBreak": {
          "$ref": "DetectedBreak",
          "description": "Detected start or end of a text segment."
        }
      },
      "id": "TextProperty"
    },
    "GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation": {
      "description": "Prediction for what the object in the bounding box is.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "mid": {
          "type": "string",
          "description": "Object ID that should align with EntityAnnotation mid."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation"
    },
    "GoogleCloudVisionV1p4beta1Property": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the property."
        },
        "value": {
          "description": "Value of the property.",
          "type": "string"
        },
        "uint64Value": {
          "description": "Value of numeric properties.",
          "format": "uint64",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1Property",
      "description": "A `Property` consists of a user-supplied name/value pair."
    },
    "GoogleCloudVisionV1p4beta1OperationMetadata": {
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time when the batch request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "description": "Current state of the batch operation.",
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ]
        },
        "updateTime": {
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1OperationMetadata"
    },
    "GoogleCloudVisionV1p1beta1Symbol": {
      "id": "GoogleCloudVisionV1p1beta1Symbol",
      "description": "A single symbol representation.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the symbol."
        },
        "boundingBox": {
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudVisionV1p5beta1TextAnnotationTextProperty": {
      "id": "GoogleCloudVisionV1p5beta1TextAnnotationTextProperty",
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1TextAnnotationDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "detectedBreak": {
          "description": "Detected start or end of a text segment.",
          "$ref": "GoogleCloudVisionV1p5beta1TextAnnotationDetectedBreak"
        }
      }
    },
    "GoogleCloudVisionV1p4beta1ProductKeyValue": {
      "description": "A product label represented as a key-value pair.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes.",
          "type": "string"
        },
        "key": {
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ProductKeyValue"
    },
    "GoogleCloudVisionV1p5beta1TextAnnotationDetectedBreak": {
      "type": "object",
      "properties": {
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        },
        "type": {
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "description": "Detected break type.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1TextAnnotationDetectedBreak",
      "description": "Detected start or end of a structural component."
    },
    "GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse",
      "description": "Response to an async batch file annotation request."
    },
    "GoogleCloudVisionV1p1beta1ColorInfo": {
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image.",
      "type": "object",
      "properties": {
        "pixelFraction": {
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "color": {
          "description": "RGB components of the color.",
          "$ref": "Color"
        },
        "score": {
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ColorInfo"
    },
    "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark": {
      "description": "A face-specific landmark (for example, a face feature).",
      "type": "object",
      "properties": {
        "position": {
          "$ref": "GoogleCloudVisionV1p1beta1Position",
          "description": "Face landmark position."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark"
    },
    "CropHint": {
      "description": "Single crop hint that is used to generate a new crop when serving an image.",
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "BoundingPoly",
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale."
        },
        "confidence": {
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "importanceFraction": {
          "type": "number",
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float"
        }
      },
      "id": "CropHint"
    },
    "GoogleCloudVisionV1p5beta1WebDetectionWebEntity": {
      "description": "Entity deduced from similar images on the Internet.",
      "type": "object",
      "properties": {
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        },
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "score": {
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1WebDetectionWebEntity"
    },
    "GoogleCloudVisionV1p3beta1FaceAnnotation": {
      "type": "object",
      "properties": {
        "fdBoundingPoly": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix."
        },
        "surpriseLikelihood": {
          "description": "Surprise likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "landmarks": {
          "description": "Detected face landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1FaceAnnotationLandmark"
          }
        },
        "angerLikelihood": {
          "description": "Anger likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "joyLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Joy likelihood.",
          "type": "string"
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "format": "float",
          "type": "number"
        },
        "underExposedLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Under-exposed likelihood."
        },
        "blurredLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Blurred likelihood.",
          "type": "string"
        },
        "headwearLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Headwear likelihood.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated."
        },
        "rollAngle": {
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "sorrowLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "tiltAngle": {
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1FaceAnnotation",
      "description": "A face annotation object contains the results of face detection."
    },
    "GoogleCloudVisionV1p5beta1Word": {
      "description": "A word representation.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "mergedText": {
          "description": "All UTF-8 text detected in this word. This field is by default not\nreturned unless specified in TextDetectionParams.word_filter.",
          "type": "string"
        },
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1Symbol"
          }
        },
        "property": {
          "description": "Additional information detected for the word.",
          "$ref": "GoogleCloudVisionV1p5beta1TextAnnotationTextProperty"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Word"
    },
    "GoogleCloudVisionV1p3beta1Position": {
      "id": "GoogleCloudVisionV1p3beta1Position",
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "type": "number",
          "description": "Y coordinate.",
          "format": "float"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "z": {
          "type": "number",
          "description": "Z coordinate (or depth).",
          "format": "float"
        }
      }
    },
    "GoogleCloudVisionV1p5beta1Property": {
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the property.",
          "type": "string"
        },
        "uint64Value": {
          "description": "Value of numeric properties.",
          "format": "uint64",
          "type": "string"
        },
        "name": {
          "description": "Name of the property.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Property"
    },
    "GoogleCloudVisionV1p1beta1Vertex": {
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Vertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image."
    },
    "GoogleCloudVisionV1p4beta1Product": {
      "id": "GoogleCloudVisionV1p4beta1Product",
      "description": "A Product contains ReferenceImages.",
      "type": "object",
      "properties": {
        "productCategory": {
          "description": "The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products.\n\nThis field is immutable.",
          "type": "string"
        },
        "productLabels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1ProductKeyValue"
          },
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet."
        },
        "name": {
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long."
        },
        "description": {
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1GcsDestination": {
      "description": "The Google Cloud Storage location where the output will be written to.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1GcsDestination"
    },
    "GoogleCloudVisionV1p1beta1AnnotateFileResponse": {
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudVisionV1p1beta1InputConfig",
          "description": "Information about the file for which this response is generated."
        },
        "totalPages": {
          "description": "This field gives the total number of pages in the file.",
          "format": "int32",
          "type": "integer"
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case."
        },
        "responses": {
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AnnotateImageResponse"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1AnnotateFileResponse"
    },
    "Color": {
      "description": "Represents a color in the RGBA color space. This representation is designed\nfor simplicity of conversion to/from color representations in various\nlanguages over compactness; for example, the fields of this representation\ncan be trivially provided to the constructor of \"java.awt.Color\" in Java; it\ncan also be trivially provided to UIColor's \"+colorWithRed:green:blue:alpha\"\nmethod in iOS; and, with just a little work, it can be easily formatted into\na CSS \"rgba()\" string in JavaScript, as well.\n\nNote: this proto does not carry information about the absolute color space\nthat should be used to interpret the RGB value (e.g. sRGB, Adobe RGB,\nDCI-P3, BT.2020, etc.). By default, applications SHOULD assume the sRGB color\nspace.\n\nExample (Java):\n\n     import com.google.type.Color;\n\n     // ...\n     public static java.awt.Color fromProto(Color protocolor) {\n       float alpha = protocolor.hasAlpha()\n           ? protocolor.getAlpha().getValue()\n           : 1.0;\n\n       return new java.awt.Color(\n           protocolor.getRed(),\n           protocolor.getGreen(),\n           protocolor.getBlue(),\n           alpha);\n     }\n\n     public static Color toProto(java.awt.Color color) {\n       float red = (float) color.getRed();\n       float green = (float) color.getGreen();\n       float blue = (float) color.getBlue();\n       float denominator = 255.0;\n       Color.Builder resultBuilder =\n           Color\n               .newBuilder()\n               .setRed(red / denominator)\n               .setGreen(green / denominator)\n               .setBlue(blue / denominator);\n       int alpha = color.getAlpha();\n       if (alpha != 255) {\n         result.setAlpha(\n             FloatValue\n                 .newBuilder()\n                 .setValue(((float) alpha) / denominator)\n                 .build());\n       }\n       return resultBuilder.build();\n     }\n     // ...\n\nExample (iOS / Obj-C):\n\n     // ...\n     static UIColor* fromProto(Color* protocolor) {\n        float red = [protocolor red];\n        float green = [protocolor green];\n        float blue = [protocolor blue];\n        FloatValue* alpha_wrapper = [protocolor alpha];\n        float alpha = 1.0;\n        if (alpha_wrapper != nil) {\n          alpha = [alpha_wrapper value];\n        }\n        return [UIColor colorWithRed:red green:green blue:blue alpha:alpha];\n     }\n\n     static Color* toProto(UIColor* color) {\n         CGFloat red, green, blue, alpha;\n         if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) {\n           return nil;\n         }\n         Color* result = [[Color alloc] init];\n         [result setRed:red];\n         [result setGreen:green];\n         [result setBlue:blue];\n         if (alpha \u003c= 0.9999) {\n           [result setAlpha:floatWrapperWithValue(alpha)];\n         }\n         [result autorelease];\n         return result;\n    }\n    // ...\n\n Example (JavaScript):\n\n    // ...\n\n    var protoToCssColor = function(rgb_color) {\n       var redFrac = rgb_color.red || 0.0;\n       var greenFrac = rgb_color.green || 0.0;\n       var blueFrac = rgb_color.blue || 0.0;\n       var red = Math.floor(redFrac * 255);\n       var green = Math.floor(greenFrac * 255);\n       var blue = Math.floor(blueFrac * 255);\n\n       if (!('alpha' in rgb_color)) {\n          return rgbToCssColor_(red, green, blue);\n       }\n\n       var alphaFrac = rgb_color.alpha.value || 0.0;\n       var rgbParams = [red, green, blue].join(',');\n       return ['rgba(', rgbParams, ',', alphaFrac, ')'].join('');\n    };\n\n    var rgbToCssColor_ = function(red, green, blue) {\n      var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue);\n      var hexString = rgbNumber.toString(16);\n      var missingZeros = 6 - hexString.length;\n      var resultBuilder = ['#'];\n      for (var i = 0; i \u003c missingZeros; i++) {\n         resultBuilder.push('0');\n      }\n      resultBuilder.push(hexString);\n      return resultBuilder.join('');\n    };\n\n    // ...",
      "type": "object",
      "properties": {
        "green": {
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "blue": {
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "alpha": {
          "description": "The fraction of this color that should be applied to the pixel. That is,\nthe final pixel color is defined by the equation:\n\n  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).",
          "format": "float",
          "type": "number"
        },
        "red": {
          "type": "number",
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "format": "float"
        }
      },
      "id": "Color"
    },
    "GoogleCloudVisionV1p5beta1OperationMetadata": {
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Current state of the batch operation.",
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ]
        },
        "updateTime": {
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the batch request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1OperationMetadata"
    },
    "ImageProperties": {
      "id": "ImageProperties",
      "description": "Stores image properties, such as dominant colors.",
      "type": "object",
      "properties": {
        "dominantColors": {
          "$ref": "DominantColorsAnnotation",
          "description": "If present, dominant colors completed successfully."
        }
      }
    },
    "GoogleCloudVisionV1p5beta1Position": {
      "type": "object",
      "properties": {
        "y": {
          "type": "number",
          "description": "Y coordinate.",
          "format": "float"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "z": {
          "type": "number",
          "description": "Z coordinate (or depth).",
          "format": "float"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Position",
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image."
    },
    "GoogleCloudVisionV1p1beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1.",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "X coordinate.",
          "format": "float"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1NormalizedVertex"
    },
    "GoogleCloudVisionV1p5beta1OutputConfig": {
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudVisionV1p5beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        },
        "batchSize": {
          "type": "integer",
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1OutputConfig"
    },
    "GoogleCloudVisionV1p5beta1Product": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the product.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n\nThis field is ignored when creating a product.",
          "type": "string"
        },
        "displayName": {
          "description": "The user-provided name for this Product. Must not be empty. Must be at most\n4096 characters long.",
          "type": "string"
        },
        "description": {
          "description": "User-provided metadata to be stored with this product. Must be at most 4096\ncharacters long.",
          "type": "string"
        },
        "productCategory": {
          "description": "The category for the product identified by the reference image. This should\nbe either \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\". The legacy categories\n\"homegoods\", \"apparel\", and \"toys\" are still supported, but these should\nnot be used for new products.\n\nThis field is immutable.",
          "type": "string"
        },
        "productLabels": {
          "description": "Key-value pairs that can be attached to a product. At query time,\nconstraints can be specified based on the product_labels.\n\nNote that integer values can be provided as strings, e.g. \"1199\". Only\nstrings with integer values can match a range-based restriction which is\nto be supported soon.\n\nMultiple values can be assigned to the same key. One product may have up to\n500 product_labels.\n\nNotice that the total number of distinct product_labels over all products\nin one ProductSet cannot exceed 1M, otherwise the product search pipeline\nwill refuse to work for that ProductSet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1ProductKeyValue"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Product",
      "description": "A Product contains ReferenceImages."
    },
    "GoogleCloudVisionV1p5beta1GcsSource": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Google Cloud Storage URI for the input file. This must only be a\nGoogle Cloud Storage object. Wildcards are not currently supported."
        }
      },
      "id": "GoogleCloudVisionV1p5beta1GcsSource",
      "description": "The Google Cloud Storage location where the input will be read from."
    },
    "GoogleCloudVisionV1p1beta1OperationMetadata": {
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time when the batch request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "description": "Current state of the batch operation.",
          "type": "string"
        },
        "updateTime": {
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1OperationMetadata"
    },
    "GoogleCloudVisionV1p4beta1BatchOperationMetadata": {
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The time when the batch request is finished and\ngoogle.longrunning.Operation.done is set to true.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "description": "The current state of the batch operation.",
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is actively being processed.",
            "The request is done and at least one item has been successfully\nprocessed.",
            "The request is done and no item has been successfully processed.",
            "The request is done after the longrunning.Operations.CancelOperation has\nbeen called by the user.  Any records that were processed before the\ncancel command are output as specified in the request."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROCESSING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ]
        },
        "submitTime": {
          "type": "string",
          "description": "The time when the batch request was submitted to the server.",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1BatchOperationMetadata",
      "description": "Metadata for the batch operations such as the current state.\n\nThis is included in the `metadata` field of the `Operation` returned by the\n`GetOperation` call of the `google::longrunning::Operations` service."
    },
    "GoogleCloudVisionV1p3beta1WebDetection": {
      "type": "object",
      "properties": {
        "fullMatchingImages": {
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          }
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "description": "Web pages containing the matching images from the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebPage"
          }
        },
        "partialMatchingImages": {
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          }
        },
        "visuallySimilarImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebImage"
          },
          "description": "The visually similar image results."
        },
        "bestGuessLabels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1WebDetectionWebLabel"
          },
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1WebDetection",
      "description": "Relevant information for the image from the Internet."
    },
    "GoogleCloudVisionV1p5beta1FaceAnnotation": {
      "id": "GoogleCloudVisionV1p5beta1FaceAnnotation",
      "description": "A face annotation object contains the results of face detection.",
      "type": "object",
      "properties": {
        "fdBoundingPoly": {
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly",
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix."
        },
        "angerLikelihood": {
          "description": "Anger likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "landmarks": {
          "description": "Detected face landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1FaceAnnotationLandmark"
          }
        },
        "surpriseLikelihood": {
          "description": "Surprise likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "joyLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Joy likelihood."
        },
        "underExposedLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Under-exposed likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "format": "float",
          "type": "number"
        },
        "detectionConfidence": {
          "type": "number",
          "description": "Detection confidence. Range [0, 1].",
          "format": "float"
        },
        "blurredLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Blurred likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "headwearLikelihood": {
          "description": "Headwear likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly",
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated."
        },
        "rollAngle": {
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "sorrowLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood.",
          "type": "string"
        },
        "tiltAngle": {
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudVisionV1p2beta1TextAnnotation": {
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object",
      "properties": {
        "pages": {
          "description": "List of pages detected by OCR.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Page"
          }
        },
        "text": {
          "type": "string",
          "description": "UTF-8 text detected on the pages."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotation"
    },
    "GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation": {
      "id": "GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation",
      "description": "Set of detected objects with bounding boxes.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "mid": {
          "type": "string",
          "description": "Object ID that should align with EntityAnnotation mid."
        },
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "Image region to which this object belongs. This must be populated."
        },
        "score": {
          "type": "number",
          "description": "Score of the result. Range [0, 1].",
          "format": "float"
        }
      }
    },
    "AnnotateImageResponse": {
      "description": "Response to an image annotation request.",
      "type": "object",
      "properties": {
        "faceAnnotations": {
          "type": "array",
          "items": {
            "$ref": "FaceAnnotation"
          },
          "description": "If present, face detection has completed successfully."
        },
        "cropHintsAnnotation": {
          "$ref": "CropHintsAnnotation",
          "description": "If present, crop hints have completed successfully."
        },
        "labelAnnotations": {
          "description": "If present, label detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "EntityAnnotation"
          }
        },
        "localizedObjectAnnotations": {
          "description": "If present, localized object detection has completed successfully.\nThis will be sorted descending by confidence score.",
          "type": "array",
          "items": {
            "$ref": "LocalizedObjectAnnotation"
          }
        },
        "productSearchResults": {
          "description": "If present, product search has completed successfully.",
          "$ref": "ProductSearchResults"
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the operation.\nNote that filled-in image annotations are guaranteed to be\ncorrect, even when `error` is set."
        },
        "fullTextAnnotation": {
          "$ref": "TextAnnotation",
          "description": "If present, text (OCR) detection or document (OCR) text detection has\ncompleted successfully.\nThis annotation provides the structural hierarchy for the OCR detected\ntext."
        },
        "textAnnotations": {
          "description": "If present, text (OCR) detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "EntityAnnotation"
          }
        },
        "imagePropertiesAnnotation": {
          "$ref": "ImageProperties",
          "description": "If present, image properties were extracted successfully."
        },
        "context": {
          "$ref": "ImageAnnotationContext",
          "description": "If present, contextual information is needed to understand where this image\ncomes from."
        },
        "logoAnnotations": {
          "type": "array",
          "items": {
            "$ref": "EntityAnnotation"
          },
          "description": "If present, logo detection has completed successfully."
        },
        "webDetection": {
          "$ref": "WebDetection",
          "description": "If present, web detection has completed successfully."
        },
        "safeSearchAnnotation": {
          "description": "If present, safe-search annotation has completed successfully.",
          "$ref": "SafeSearchAnnotation"
        },
        "landmarkAnnotations": {
          "description": "If present, landmark detection has completed successfully.",
          "type": "array",
          "items": {
            "$ref": "EntityAnnotation"
          }
        }
      },
      "id": "AnnotateImageResponse"
    },
    "GoogleCloudVisionV1p4beta1InputConfig": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "File content, represented as a stream of bytes.\nNote: As with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.\n\nCurrently, this field only works for BatchAnnotateFiles requests. It does\nnot work for AsyncBatchAnnotateFiles requests.",
          "format": "byte"
        },
        "gcsSource": {
          "$ref": "GoogleCloudVisionV1p4beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from."
        },
        "mimeType": {
          "description": "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and\n\"image/gif\" are supported. Wildcards are not supported.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1InputConfig",
      "description": "The desired input location and metadata."
    },
    "GoogleCloudVisionV1p2beta1CropHintsAnnotation": {
      "description": "Set of crop hints that are used to generate new crops when serving images.",
      "type": "object",
      "properties": {
        "cropHints": {
          "description": "Crop hint results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1CropHint"
          }
        }
      },
      "id": "GoogleCloudVisionV1p2beta1CropHintsAnnotation"
    },
    "GoogleCloudVisionV1p4beta1EntityAnnotation": {
      "description": "Set of detected entity features.",
      "type": "object",
      "properties": {
        "mid": {
          "type": "string",
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/)."
        },
        "confidence": {
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locale": {
          "description": "The language code for the locale in which the entity textual\n`description` is expressed.",
          "type": "string"
        },
        "boundingPoly": {
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features.",
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly"
        },
        "description": {
          "type": "string",
          "description": "Entity textual description, expressed in its `locale` language."
        },
        "topicality": {
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Property"
          },
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity."
        },
        "score": {
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1LocationInfo"
          }
        }
      },
      "id": "GoogleCloudVisionV1p4beta1EntityAnnotation"
    },
    "GoogleCloudVisionV1p5beta1SafeSearchAnnotation": {
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).",
      "type": "object",
      "properties": {
        "adultConfidence": {
          "type": "number",
          "description": "Confidence of adult_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float"
        },
        "adult": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities."
        },
        "violenceConfidence": {
          "description": "Confidence of violence_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float",
          "type": "number"
        },
        "racy": {
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "spoofConfidence": {
          "description": "Confidence of spoof_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float",
          "type": "number"
        },
        "violence": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this image contains violent content.",
          "type": "string"
        },
        "medicalConfidence": {
          "description": "Confidence of medical_score. Range [0, 1]. 0 means not confident, 1 means\nvery confident.",
          "format": "float",
          "type": "number"
        },
        "nsfwConfidence": {
          "description": "Confidence of nsfw_score. Range [0, 1]. 0 means not confident, 1 means very\nconfident.",
          "format": "float",
          "type": "number"
        },
        "spoof": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.",
          "type": "string"
        },
        "medical": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image."
        },
        "racyConfidence": {
          "description": "Confidence of racy_score. Range [0, 1]. 0 means not confident, 1 means very\nconfident.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1SafeSearchAnnotation"
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebImage": {
      "description": "Metadata for online images.",
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float",
          "type": "number"
        },
        "url": {
          "description": "The result image URL.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
    },
    "LocalizedObjectAnnotation": {
      "type": "object",
      "properties": {
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        },
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        },
        "boundingPoly": {
          "description": "Image region to which this object belongs. This must be populated.",
          "$ref": "BoundingPoly"
        }
      },
      "id": "LocalizedObjectAnnotation",
      "description": "Set of detected objects with bounding boxes."
    },
    "Property": {
      "id": "Property",
      "description": "A `Property` consists of a user-supplied name/value pair.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the property.",
          "type": "string"
        },
        "uint64Value": {
          "description": "Value of numeric properties.",
          "format": "uint64",
          "type": "string"
        },
        "name": {
          "description": "Name of the property.",
          "type": "string"
        }
      }
    },
    "ImageSource": {
      "id": "ImageSource",
      "description": "External image source (Google Cloud Storage or web URL image location).",
      "type": "object",
      "properties": {
        "gcsImageUri": {
          "description": "**Use `image_uri` instead.**\n\nThe Google Cloud Storage  URI of the form\n`gs://bucket_name/object_name`. Object versioning is not supported. See\n[Google Cloud Storage Request\nURIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "imageUri": {
          "description": "The URI of the source image. Can be either:\n\n1. A Google Cloud Storage URI of the form\n   `gs://bucket_name/object_name`. Object versioning is not supported. See\n   [Google Cloud Storage Request\n   URIs](https://cloud.google.com/storage/docs/reference-uris) for more\n   info.\n\n2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from\n   HTTP/HTTPS URLs, Google cannot guarantee that the request will be\n   completed. Your request may fail if the specified host denies the\n   request (e.g. due to request throttling or DOS prevention), or if Google\n   throttles requests to the site for abuse prevention. You should not\n   depend on externally-hosted images for production applications.\n\nWhen both `gcs_image_uri` and `image_uri` are specified, `image_uri` takes\nprecedence.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage": {
      "type": "object",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage",
      "description": "Detected language for a structural component."
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebEntity": {
      "type": "object",
      "properties": {
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        },
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "score": {
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebEntity",
      "description": "Entity deduced from similar images on the Internet."
    },
    "AddProductToProductSetRequest": {
      "description": "Request message for the `AddProductToProductSet` method.",
      "type": "object",
      "properties": {
        "product": {
          "description": "The resource name for the Product to be added to this ProductSet.\n\nFormat is:\n`projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`",
          "type": "string"
        }
      },
      "id": "AddProductToProductSetRequest"
    },
    "GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult": {
      "id": "GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult",
      "description": "Information about the products similar to a single product in a query\nimage.",
      "type": "object",
      "properties": {
        "objectAnnotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation"
          },
          "description": "List of generic predictions for the object in the bounding box."
        },
        "boundingPoly": {
          "description": "The bounding polygon around the product detected in the query image.",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1ProductSearchResultsResult"
          }
        }
      }
    },
    "GoogleCloudVisionV1p5beta1Vertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "y": {
          "description": "Y coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Vertex"
    },
    "GoogleCloudVisionV1p4beta1Block": {
      "description": "Logical element on the page.",
      "type": "object",
      "properties": {
        "blockType": {
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string",
          "enumDescriptions": [
            "Unknown block type.",
            "Regular text block.",
            "Table block.",
            "Image block.",
            "Horizontal/vertical line box.",
            "Barcode block."
          ],
          "enum": [
            "UNKNOWN",
            "TEXT",
            "TABLE",
            "PICTURE",
            "RULER",
            "BARCODE"
          ]
        },
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n\n* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results on the block. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Paragraph"
          }
        },
        "property": {
          "description": "Additional information detected for the block.",
          "$ref": "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1Block"
    },
    "GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult": {
      "type": "object",
      "properties": {
        "objectAnnotations": {
          "description": "List of generic predictions for the object in the bounding box.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation"
          }
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "The bounding polygon around the product detected in the query image."
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResultsResult"
          },
          "description": "List of results, one for each product match."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult",
      "description": "Information about the products similar to a single product in a query\nimage."
    },
    "GoogleCloudVisionV1p4beta1ImageAnnotationContext": {
      "id": "GoogleCloudVisionV1p4beta1ImageAnnotationContext",
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of the file used to produce the image.",
          "type": "string"
        },
        "pageNumber": {
          "type": "integer",
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudVisionV1p5beta1WebDetectionWebImage": {
      "id": "GoogleCloudVisionV1p5beta1WebDetectionWebImage",
      "description": "Metadata for online images.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The result image URL.",
          "type": "string"
        },
        "score": {
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "DetectedBreak": {
      "description": "Detected start or end of a structural component.",
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unknown break label type.",
            "Regular space.",
            "Sure space (very wide).",
            "Line-wrapping break.",
            "End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.",
            "Line break that ends a paragraph."
          ],
          "enum": [
            "UNKNOWN",
            "SPACE",
            "SURE_SPACE",
            "EOL_SURE_SPACE",
            "HYPHEN",
            "LINE_BREAK"
          ],
          "description": "Detected break type.",
          "type": "string"
        },
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        }
      },
      "id": "DetectedBreak"
    },
    "GoogleCloudVisionV1p1beta1EntityAnnotation": {
      "type": "object",
      "properties": {
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "confidence": {
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features."
        },
        "locale": {
          "type": "string",
          "description": "The language code for the locale in which the entity textual\n`description` is expressed."
        },
        "description": {
          "description": "Entity textual description, expressed in its `locale` language.",
          "type": "string"
        },
        "topicality": {
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "properties": {
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Property"
          }
        },
        "score": {
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1LocationInfo"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1EntityAnnotation",
      "description": "Set of detected entity features."
    },
    "GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse": {
      "description": "A list of file annotation responses.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, each response corresponding to each\nAnnotateFileRequest in BatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1AnnotateFileResponse"
          }
        }
      },
      "id": "GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse"
    },
    "GoogleCloudVisionV1p3beta1FaceAnnotationLandmark": {
      "description": "A face-specific landmark (for example, a face feature).",
      "type": "object",
      "properties": {
        "position": {
          "description": "Face landmark position.",
          "$ref": "GoogleCloudVisionV1p3beta1Position"
        },
        "type": {
          "enumDescriptions": [
            "Unknown face landmark detected. Should not be filled.",
            "Left eye.",
            "Right eye.",
            "Left of left eyebrow.",
            "Right of left eyebrow.",
            "Left of right eyebrow.",
            "Right of right eyebrow.",
            "Midpoint between eyes.",
            "Nose tip.",
            "Upper lip.",
            "Lower lip.",
            "Mouth left.",
            "Mouth right.",
            "Mouth center.",
            "Nose, bottom right.",
            "Nose, bottom left.",
            "Nose, bottom center.",
            "Left eye, top boundary.",
            "Left eye, right corner.",
            "Left eye, bottom boundary.",
            "Left eye, left corner.",
            "Right eye, top boundary.",
            "Right eye, right corner.",
            "Right eye, bottom boundary.",
            "Right eye, left corner.",
            "Left eyebrow, upper midpoint.",
            "Right eyebrow, upper midpoint.",
            "Left ear tragion.",
            "Right ear tragion.",
            "Left eye pupil.",
            "Right eye pupil.",
            "Forehead glabella.",
            "Chin gnathion.",
            "Chin left gonion.",
            "Chin right gonion."
          ],
          "enum": [
            "UNKNOWN_LANDMARK",
            "LEFT_EYE",
            "RIGHT_EYE",
            "LEFT_OF_LEFT_EYEBROW",
            "RIGHT_OF_LEFT_EYEBROW",
            "LEFT_OF_RIGHT_EYEBROW",
            "RIGHT_OF_RIGHT_EYEBROW",
            "MIDPOINT_BETWEEN_EYES",
            "NOSE_TIP",
            "UPPER_LIP",
            "LOWER_LIP",
            "MOUTH_LEFT",
            "MOUTH_RIGHT",
            "MOUTH_CENTER",
            "NOSE_BOTTOM_RIGHT",
            "NOSE_BOTTOM_LEFT",
            "NOSE_BOTTOM_CENTER",
            "LEFT_EYE_TOP_BOUNDARY",
            "LEFT_EYE_RIGHT_CORNER",
            "LEFT_EYE_BOTTOM_BOUNDARY",
            "LEFT_EYE_LEFT_CORNER",
            "RIGHT_EYE_TOP_BOUNDARY",
            "RIGHT_EYE_RIGHT_CORNER",
            "RIGHT_EYE_BOTTOM_BOUNDARY",
            "RIGHT_EYE_LEFT_CORNER",
            "LEFT_EYEBROW_UPPER_MIDPOINT",
            "RIGHT_EYEBROW_UPPER_MIDPOINT",
            "LEFT_EAR_TRAGION",
            "RIGHT_EAR_TRAGION",
            "LEFT_EYE_PUPIL",
            "RIGHT_EYE_PUPIL",
            "FOREHEAD_GLABELLA",
            "CHIN_GNATHION",
            "CHIN_LEFT_GONION",
            "CHIN_RIGHT_GONION"
          ],
          "description": "Face landmark type.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1FaceAnnotationLandmark"
    },
    "GoogleCloudVisionV1p2beta1Paragraph": {
      "type": "object",
      "properties": {
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3).",
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1].",
          "format": "float"
        },
        "words": {
          "description": "List of all words in this paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Word"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the paragraph."
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Paragraph",
      "description": "Structural unit of text representing a number of words in certain order."
    },
    "GoogleCloudVisionV1p1beta1ProductSearchResultsResult": {
      "description": "Information about a product.",
      "type": "object",
      "properties": {
        "image": {
          "description": "The resource name of the image from the product that is the closest match\nto the query.",
          "type": "string"
        },
        "product": {
          "description": "The Product.",
          "$ref": "GoogleCloudVisionV1p1beta1Product"
        },
        "score": {
          "description": "A confidence level on the match, ranging from 0 (no confidence) to\n1 (full confidence).",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ProductSearchResultsResult"
    },
    "GoogleCloudVisionV1p1beta1Word": {
      "description": "A word representation.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Symbol"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the word."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Word"
    },
    "GoogleCloudVisionV1p3beta1SafeSearchAnnotation": {
      "description": "Set of features pertaining to the image, computed by computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).",
      "type": "object",
      "properties": {
        "violence": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this image contains violent content.",
          "type": "string"
        },
        "adult": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Represents the adult content likelihood for the image. Adult content may\ncontain elements such as nudity, pornographic images or cartoons, or\nsexual activities."
        },
        "spoof": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Spoof likelihood. The likelihood that an modification\nwas made to the image's canonical version to make it appear\nfunny or offensive."
        },
        "medical": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that this is a medical image."
        },
        "racy": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood that the request image contains racy content. Racy content may\ninclude (but is not limited to) skimpy or sheer clothing, strategically\ncovered nudity, lewd or provocative poses, or close-ups of sensitive\nbody areas."
        }
      },
      "id": "GoogleCloudVisionV1p3beta1SafeSearchAnnotation"
    },
    "GoogleCloudVisionV1p3beta1ProductSearchResults": {
      "id": "GoogleCloudVisionV1p3beta1ProductSearchResults",
      "description": "Results for a product search request.",
      "type": "object",
      "properties": {
        "productGroupedResults": {
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult"
          }
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1ProductSearchResultsResult"
          }
        },
        "indexTime": {
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p5beta1ColorInfo": {
      "type": "object",
      "properties": {
        "color": {
          "$ref": "Color",
          "description": "RGB components of the color."
        },
        "score": {
          "type": "number",
          "description": "Image-specific score for this color. Value in range [0, 1].",
          "format": "float"
        },
        "pixelFraction": {
          "description": "The fraction of pixels the color occupies in the image.\nValue in range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1ColorInfo",
      "description": "Color information consists of RGB channels, score, and the fraction of\nthe image that the color occupies in the image."
    },
    "GoogleCloudVisionV1p3beta1EntityAnnotation": {
      "id": "GoogleCloudVisionV1p3beta1EntityAnnotation",
      "description": "Set of detected entity features.",
      "type": "object",
      "properties": {
        "score": {
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1LocationInfo"
          },
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks."
        },
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "confidence": {
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locale": {
          "description": "The language code for the locale in which the entity textual\n`description` is expressed.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features."
        },
        "description": {
          "type": "string",
          "description": "Entity textual description, expressed in its `locale` language."
        },
        "topicality": {
          "type": "number",
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p3beta1Property"
          },
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity."
        }
      }
    },
    "OperationMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time when the batch request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "description": "Current state of the batch operation.",
          "type": "string"
        },
        "updateTime": {
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "OperationMetadata",
      "description": "Contains metadata for the BatchAnnotateImages operation."
    },
    "GoogleCloudVisionV1p3beta1OperationMetadata": {
      "description": "Contains metadata for the BatchAnnotateImages operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The time when the batch request was received.",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "description": "Current state of the batch operation.",
          "type": "string",
          "enumDescriptions": [
            "Invalid.",
            "Request is received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ]
        },
        "updateTime": {
          "description": "The time when the operation result was last updated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1OperationMetadata"
    },
    "GoogleCloudVisionV1p1beta1Position": {
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "type": "number",
          "description": "Y coordinate.",
          "format": "float"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "z": {
          "description": "Z coordinate (or depth).",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Position"
    },
    "GoogleCloudVisionV1p4beta1Vertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "type": "integer",
          "description": "Y coordinate.",
          "format": "int32"
        },
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1Vertex"
    },
    "GoogleCloudVisionV1p5beta1DominantColorsAnnotation": {
      "id": "GoogleCloudVisionV1p5beta1DominantColorsAnnotation",
      "description": "Set of dominant colors and their corresponding scores.",
      "type": "object",
      "properties": {
        "colors": {
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1ColorInfo"
          }
        }
      }
    },
    "GoogleCloudVisionV1p4beta1AnnotateFileResponse": {
      "type": "object",
      "properties": {
        "inputConfig": {
          "description": "Information about the file for which this response is generated.",
          "$ref": "GoogleCloudVisionV1p4beta1InputConfig"
        },
        "totalPages": {
          "type": "integer",
          "description": "This field gives the total number of pages in the file.",
          "format": "int32"
        },
        "error": {
          "$ref": "Status",
          "description": "If set, represents the error message for the failed request. The\n`responses` field will not be set in this case."
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1AnnotateImageResponse"
          },
          "description": "Individual responses to images found within the file. This field will be\nempty if the `error` field is set."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1AnnotateFileResponse",
      "description": "Response to a single file annotation request. A file may contain one or more\nimages, which individually have their own responses."
    },
    "GoogleCloudVisionV1p5beta1Page": {
      "description": "Detected page from OCR.",
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32"
        },
        "width": {
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1Block"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p5beta1TextAnnotationTextProperty",
          "description": "Additional information detected on the page."
        },
        "mergedText": {
          "description": "All UTF-8 text detected in this page. This field is by default not\nreturned unless specified in TextDetectionParams.page_filter.",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1Page"
    },
    "GoogleCloudVisionV1p1beta1WebDetectionWebImage": {
      "type": "object",
      "properties": {
        "score": {
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float",
          "type": "number"
        },
        "url": {
          "type": "string",
          "description": "The result image URL."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1WebDetectionWebImage",
      "description": "Metadata for online images."
    },
    "GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation": {
      "description": "Set of detected objects with bounding boxes.",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "mid": {
          "type": "string",
          "description": "Object ID that should align with EntityAnnotation mid."
        },
        "name": {
          "type": "string",
          "description": "Object name, expressed in its `language_code` language."
        },
        "boundingPoly": {
          "description": "Image region to which this object belongs. This must be populated.",
          "$ref": "GoogleCloudVisionV1p3beta1BoundingPoly"
        },
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation"
    },
    "GoogleCloudVisionV1p2beta1ImageAnnotationContext": {
      "description": "If an image was produced from a file (e.g. a PDF), this message gives\ninformation about the source of that image.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of the file used to produce the image.",
          "type": "string"
        },
        "pageNumber": {
          "type": "integer",
          "description": "If the file was a PDF or TIFF, this field gives the page number within\nthe file used to produce the image.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1ImageAnnotationContext"
    },
    "GoogleCloudVisionV1p2beta1Position": {
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate.",
          "format": "float",
          "type": "number"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "z": {
          "type": "number",
          "description": "Z coordinate (or depth).",
          "format": "float"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1Position",
      "description": "A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image."
    },
    "GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation": {
      "description": "Prediction for what the object in the bounding box is.",
      "type": "object",
      "properties": {
        "score": {
          "description": "Score of the result. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "mid": {
          "description": "Object ID that should align with EntityAnnotation mid.",
          "type": "string"
        },
        "name": {
          "description": "Object name, expressed in its `language_code` language.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation"
    },
    "DominantColorsAnnotation": {
      "id": "DominantColorsAnnotation",
      "description": "Set of dominant colors and their corresponding scores.",
      "type": "object",
      "properties": {
        "colors": {
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array",
          "items": {
            "$ref": "ColorInfo"
          }
        }
      }
    },
    "TextAnnotation": {
      "id": "TextAnnotation",
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the TextAnnotation.TextProperty message definition below for more\ndetail.",
      "type": "object",
      "properties": {
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        },
        "pages": {
          "type": "array",
          "items": {
            "$ref": "Page"
          },
          "description": "List of pages detected by OCR."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1GcsDestination": {
      "description": "The Google Cloud Storage location where the output will be written to.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Google Cloud Storage URI prefix where the results will be stored. Results\nwill be in JSON format and preceded by its corresponding input URI prefix.\nThis field can either represent a gcs file prefix or gcs directory. In\neither case, the uri should be unique because in order to get all of the\noutput files, you will need to do a wildcard gcs search on the uri prefix\nyou provide.\n\nExamples:\n\n*    File Prefix: gs://bucket-name/here/filenameprefix   The output files\nwill be created in gs://bucket-name/here/ and the names of the\noutput files will begin with \"filenameprefix\".\n\n*    Directory Prefix: gs://bucket-name/some/location/   The output files\nwill be created in gs://bucket-name/some/location/ and the names of the\noutput files could be anything because there was no filename prefix\nspecified.\n\nIf multiple outputs, each response is still AnnotateFileResponse, each of\nwhich contains some subset of the full list of AnnotateImageResponse.\nMultiple outputs can happen if, for example, the output JSON is too large\nand overflows into multiple sharded files.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1GcsDestination"
    },
    "GoogleCloudVisionV1p5beta1TableTableCell": {
      "type": "object",
      "properties": {
        "textBlock": {
          "description": "Text block for this cell which also contains the normalized bounding box\nfor the cell and deeper structures within a cell if present.",
          "$ref": "GoogleCloudVisionV1p5beta1Block"
        },
        "rowSpan": {
          "type": "integer",
          "description": "How many rows this cell spans.",
          "format": "int32"
        },
        "colSpan": {
          "description": "How many columns this cell spans.",
          "format": "int32",
          "type": "integer"
        },
        "text": {
          "description": "The merged text value of this cell, omitting any deeper structural\ninformation unlike `text_block`. This is useful for simple cells.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p5beta1TableTableCell",
      "description": "A cell representation inside of tables."
    },
    "GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage"
    },
    "ListProductSetsResponse": {
      "type": "object",
      "properties": {
        "productSets": {
          "description": "List of ProductSets.",
          "type": "array",
          "items": {
            "$ref": "ProductSet"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
          "type": "string"
        }
      },
      "id": "ListProductSetsResponse",
      "description": "Response message for the `ListProductSets` method."
    },
    "CropHintsParams": {
      "id": "CropHintsParams",
      "description": "Parameters for crop hints annotation request.",
      "type": "object",
      "properties": {
        "aspectRatios": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "Aspect ratios in floats, representing the ratio of the width to the height\nof the image. For example, if the desired aspect ratio is 4/3, the\ncorresponding float value should be 1.33333.  If not specified, the\nbest possible crop is returned. The number of provided aspect ratios is\nlimited to a maximum of 16; any aspect ratios provided after the 16th are\nignored."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1WebDetection": {
      "description": "Relevant information for the image from the Internet.",
      "type": "object",
      "properties": {
        "visuallySimilarImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          },
          "description": "The visually similar image results."
        },
        "bestGuessLabels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebLabel"
          },
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web."
        },
        "fullMatchingImages": {
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          }
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebPage"
          },
          "description": "Web pages containing the matching images from the Internet."
        },
        "partialMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
          },
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1WebDetection"
    },
    "ImportProductSetsRequest": {
      "description": "Request message for the `ImportProductSets` method.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "description": "The input content for the list of requests.",
          "$ref": "ImportProductSetsInputConfig"
        }
      },
      "id": "ImportProductSetsRequest"
    },
    "BatchAnnotateImagesResponse": {
      "description": "Response to a batch image annotation request.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "Individual responses to image annotation requests within the batch.",
          "type": "array",
          "items": {
            "$ref": "AnnotateImageResponse"
          }
        }
      },
      "id": "BatchAnnotateImagesResponse"
    },
    "LocationInfo": {
      "description": "Detected entity location information.",
      "type": "object",
      "properties": {
        "latLng": {
          "$ref": "LatLng",
          "description": "lat/long location coordinates."
        }
      },
      "id": "LocationInfo"
    },
    "EntityAnnotation": {
      "description": "Set of detected entity features.",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Overall score of the result. Range [0, 1].",
          "format": "float"
        },
        "locations": {
          "description": "The location information for the detected entity. Multiple\n`LocationInfo` elements can be present because one location may\nindicate the location of the scene in the image, and another location\nmay indicate the location of the place where the image was taken.\nLocation information is usually present for landmarks.",
          "type": "array",
          "items": {
            "$ref": "LocationInfo"
          }
        },
        "mid": {
          "description": "Opaque entity ID. Some IDs may be available in\n[Google Knowledge Graph Search\nAPI](https://developers.google.com/knowledge-graph/).",
          "type": "string"
        },
        "confidence": {
          "description": "**Deprecated. Use `score` instead.**\nThe accuracy of the entity detection in an image.\nFor example, for an image in which the \"Eiffel Tower\" entity is detected,\nthis field represents the confidence that there is a tower in the query\nimage. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "locale": {
          "type": "string",
          "description": "The language code for the locale in which the entity textual\n`description` is expressed."
        },
        "boundingPoly": {
          "$ref": "BoundingPoly",
          "description": "Image region to which this entity belongs. Not produced\nfor `LABEL_DETECTION` features."
        },
        "description": {
          "type": "string",
          "description": "Entity textual description, expressed in its `locale` language."
        },
        "topicality": {
          "description": "The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of \"tower\" is likely higher to an image\ncontaining the detected \"Eiffel Tower\" than to an image containing a\ndetected distant towering building, even though the confidence that\nthere is a tower in each image may be the same. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "Property"
          },
          "description": "Some entities may have optional user-supplied `Property` (name/value)\nfields, such a score or string that qualifies the entity."
        }
      },
      "id": "EntityAnnotation"
    },
    "GoogleCloudVisionV1p5beta1ProductKeyValue": {
      "id": "GoogleCloudVisionV1p5beta1ProductKeyValue",
      "description": "A product label represented as a key-value pair.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The key of the label attached to the product. Cannot be empty and cannot\nexceed 128 bytes.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "The value of the label attached to the product. Cannot be empty and\ncannot exceed 128 bytes."
        }
      }
    },
    "GoogleCloudVisionV1p4beta1ImageQuality": {
      "description": "Stores image quality scores, could be aesthetic quality or technical quality.",
      "type": "object",
      "properties": {
        "qualityScore": {
          "description": "A score representing the aesthetic/technical quality of the image. The\nscore is in range [0, 1]. Higher value corresponds to more professional\nlooking photos. 0 means the image looks very bad, 1 means the image with\nvery high quality.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1ImageQuality"
    },
    "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage"
    },
    "GoogleCloudVisionV1p1beta1FaceAnnotation": {
      "type": "object",
      "properties": {
        "sorrowLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood.",
          "type": "string"
        },
        "tiltAngle": {
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "fdBoundingPoly": {
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly",
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix."
        },
        "surpriseLikelihood": {
          "description": "Surprise likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "landmarks": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark"
          },
          "description": "Detected face landmarks."
        },
        "angerLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Anger likelihood."
        },
        "landmarkingConfidence": {
          "type": "number",
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float"
        },
        "joyLikelihood": {
          "description": "Joy likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "format": "float",
          "type": "number"
        },
        "underExposedLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Under-exposed likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "blurredLikelihood": {
          "description": "Blurred likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "headwearLikelihood": {
          "description": "Headwear likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "boundingPoly": {
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "rollAngle": {
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1FaceAnnotation",
      "description": "A face annotation object contains the results of face detection."
    },
    "WebImage": {
      "type": "object",
      "properties": {
        "url": {
          "description": "The result image URL.",
          "type": "string"
        },
        "score": {
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float"
        }
      },
      "id": "WebImage",
      "description": "Metadata for online images."
    },
    "GoogleCloudVisionV1p2beta1WebDetectionWebPage": {
      "type": "object",
      "properties": {
        "pageTitle": {
          "description": "Title for the web page, may contain HTML markups.",
          "type": "string"
        },
        "fullMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          },
          "description": "Fully matching images on the page.\nCan include resized copies of the query image."
        },
        "score": {
          "description": "(Deprecated) Overall relevancy score for the web page.",
          "format": "float",
          "type": "number"
        },
        "partialMatchingImages": {
          "description": "Partial matching images on the page.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its\ncrops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1WebDetectionWebImage"
          }
        },
        "url": {
          "description": "The result web page URL.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p2beta1WebDetectionWebPage",
      "description": "Metadata for web pages."
    },
    "GoogleCloudVisionV1p2beta1CropHint": {
      "id": "GoogleCloudVisionV1p2beta1CropHint",
      "description": "Single crop hint that is used to generate a new crop when serving an image.",
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "importanceFraction": {
          "type": "number",
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale."
        }
      }
    },
    "FaceAnnotation": {
      "type": "object",
      "properties": {
        "underExposedLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Under-exposed likelihood."
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "format": "float",
          "type": "number"
        },
        "detectionConfidence": {
          "description": "Detection confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "blurredLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Blurred likelihood.",
          "type": "string"
        },
        "headwearLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Headwear likelihood."
        },
        "boundingPoly": {
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated.",
          "$ref": "BoundingPoly"
        },
        "rollAngle": {
          "type": "number",
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float"
        },
        "sorrowLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood."
        },
        "tiltAngle": {
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "fdBoundingPoly": {
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix.",
          "$ref": "BoundingPoly"
        },
        "angerLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Anger likelihood.",
          "type": "string"
        },
        "landmarks": {
          "type": "array",
          "items": {
            "$ref": "Landmark"
          },
          "description": "Detected face landmarks."
        },
        "surpriseLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Surprise likelihood."
        },
        "landmarkingConfidence": {
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "joyLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Joy likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        }
      },
      "id": "FaceAnnotation",
      "description": "A face annotation object contains the results of face detection."
    },
    "GoogleCloudVisionV1p5beta1ProductSearchResultsGroupedResult": {
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p5beta1BoundingPoly",
          "description": "The bounding polygon around the product detected in the query image."
        },
        "results": {
          "description": "List of results, one for each product match.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1ProductSearchResultsResult"
          }
        },
        "objectAnnotations": {
          "description": "List of generic predictions for the object in the bounding box.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1ProductSearchResultsObjectAnnotation"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1ProductSearchResultsGroupedResult",
      "description": "Information about the products similar to a single product in a query\nimage."
    },
    "GoogleCloudVisionV1p4beta1WebDetectionWebImage": {
      "description": "Metadata for online images.",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "(Deprecated) Overall relevancy score for the image.",
          "format": "float"
        },
        "url": {
          "type": "string",
          "description": "The result image URL."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1WebDetectionWebImage"
    },
    "GoogleCloudVisionV1p1beta1Page": {
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence of the OCR results on the page. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "height": {
          "type": "integer",
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32"
        },
        "width": {
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels.",
          "format": "int32",
          "type": "integer"
        },
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Block"
          }
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty",
          "description": "Additional information detected on the page."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1Page",
      "description": "Detected page from OCR."
    },
    "GoogleCloudVisionV1p4beta1FaceAnnotation": {
      "description": "A face annotation object contains the results of face detection.",
      "type": "object",
      "properties": {
        "tiltAngle": {
          "description": "Pitch angle, which indicates the upwards/downwards angle that the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "fdBoundingPoly": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The `fd_bounding_poly` bounding polygon is tighter than the\n`boundingPoly`, and encloses only the skin part of the face. Typically, it\nis used to eliminate the face from any image analysis that detects the\n\"amount of skin\" visible in an image. It is not based on the\nlandmarker results, only on the initial face detection, hence\nthe \u003ccode\u003efd\u003c/code\u003e (face detection) prefix."
        },
        "angerLikelihood": {
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Anger likelihood.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ]
        },
        "landmarks": {
          "description": "Detected face landmarks.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1FaceAnnotationLandmark"
          }
        },
        "surpriseLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Surprise likelihood.",
          "type": "string"
        },
        "landmarkingConfidence": {
          "type": "number",
          "description": "Face landmarking confidence. Range [0, 1].",
          "format": "float"
        },
        "joyLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Joy likelihood."
        },
        "underExposedLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Under-exposed likelihood.",
          "type": "string"
        },
        "panAngle": {
          "description": "Yaw angle, which indicates the leftward/rightward angle that the face is\npointing relative to the vertical plane perpendicular to the image. Range\n[-180,180].",
          "format": "float",
          "type": "number"
        },
        "detectionConfidence": {
          "type": "number",
          "description": "Detection confidence. Range [0, 1].",
          "format": "float"
        },
        "blurredLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Blurred likelihood."
        },
        "headwearLikelihood": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Headwear likelihood.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The bounding polygon around the face. The coordinates of the bounding box\nare in the original image's scale.\nThe bounding box is computed to \"frame\" the face in accordance with human\nexpectations. It is based on the landmarker results.\nNote that one or more x and/or y coordinates may not be generated in the\n`BoundingPoly` (the polygon will be unbounded) if only a partial face\nappears in the image to be annotated."
        },
        "rollAngle": {
          "description": "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation\nof the face relative to the image vertical about the axis perpendicular to\nthe face. Range [-180,180].",
          "format": "float",
          "type": "number"
        },
        "sorrowLikelihood": {
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "It is very unlikely.",
            "It is unlikely.",
            "It is possible.",
            "It is likely.",
            "It is very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Sorrow likelihood."
        }
      },
      "id": "GoogleCloudVisionV1p4beta1FaceAnnotation"
    },
    "GoogleCloudVisionV1p3beta1WebDetectionWebEntity": {
      "type": "object",
      "properties": {
        "entityId": {
          "description": "Opaque entity ID.",
          "type": "string"
        },
        "description": {
          "description": "Canonical description of the entity, in English.",
          "type": "string"
        },
        "score": {
          "description": "Overall relevancy score for the entity.\nNot normalized and not comparable across different image queries.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1WebDetectionWebEntity",
      "description": "Entity deduced from similar images on the Internet."
    },
    "GoogleCloudVisionV1p1beta1BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1NormalizedVertex"
          }
        },
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1Vertex"
          },
          "description": "The bounding polygon vertices."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1BoundingPoly"
    },
    "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse": {
      "id": "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse",
      "description": "Response to an async batch file annotation request.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of file annotation responses, one for each request in\nAsyncBatchAnnotateFilesRequest.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse"
          }
        }
      }
    },
    "GoogleCloudVisionV1p3beta1Vertex": {
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "type": "integer",
          "description": "Y coordinate.",
          "format": "int32"
        },
        "x": {
          "description": "X coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVisionV1p3beta1Vertex"
    },
    "GoogleCloudVisionV1p5beta1WebDetection": {
      "description": "Relevant information for the image from the Internet.",
      "type": "object",
      "properties": {
        "visuallySimilarImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1WebDetectionWebImage"
          },
          "description": "The visually similar image results."
        },
        "bestGuessLabels": {
          "description": "The service's best guess as to the topic of the request image.\nInferred from similar images on the open web.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1WebDetectionWebLabel"
          }
        },
        "fullMatchingImages": {
          "description": "Fully matching images from the Internet.\nCan include resized copies of the query image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1WebDetectionWebImage"
          }
        },
        "webEntities": {
          "description": "Deduced entities from similar images on the Internet.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1WebDetectionWebEntity"
          }
        },
        "pagesWithMatchingImages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1WebDetectionWebPage"
          },
          "description": "Web pages containing the matching images from the Internet."
        },
        "partialMatchingImages": {
          "description": "Partial matching images from the Internet.\nThose images are similar enough to share some key-point features. For\nexample an original image will likely have partial matching for its crops.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1WebDetectionWebImage"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1WebDetection"
    },
    "GoogleCloudVisionV1p4beta1BoundingPoly": {
      "id": "GoogleCloudVisionV1p4beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1NormalizedVertex"
          }
        },
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p4beta1Vertex"
          },
          "description": "The bounding polygon vertices."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1ProductSearchResults": {
      "type": "object",
      "properties": {
        "indexTime": {
          "description": "Timestamp of the index which provided these results. Products added to the\nproduct set and products removed from the product set after this time are\nnot reflected in the current results.",
          "format": "google-datetime",
          "type": "string"
        },
        "productGroupedResults": {
          "description": "List of results grouped by products detected in the query image. Each entry\ncorresponds to one bounding polygon in the query image, and contains the\nmatching products specific to that region. There may be duplicate product\nmatches in the union of all the per-product results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult"
          }
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ProductSearchResultsResult"
          },
          "description": "List of results, one for each product match."
        }
      },
      "id": "GoogleCloudVisionV1p1beta1ProductSearchResults",
      "description": "Results for a product search request."
    },
    "Symbol": {
      "id": "Symbol",
      "description": "A single symbol representation.",
      "type": "object",
      "properties": {
        "property": {
          "description": "Additional information detected for the symbol.",
          "$ref": "TextProperty"
        },
        "boundingBox": {
          "$ref": "BoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the symbol. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        }
      }
    },
    "GoogleCloudVisionV1p5beta1BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1NormalizedVertex"
          }
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p5beta1Vertex"
          }
        }
      },
      "id": "GoogleCloudVisionV1p5beta1BoundingPoly"
    },
    "GoogleCloudVisionV1p4beta1WebDetectionWebLabel": {
      "type": "object",
      "properties": {
        "label": {
          "description": "Label for extra metadata.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVisionV1p4beta1WebDetectionWebLabel",
      "description": "Label to provide extra metadata for the web detection."
    },
    "GoogleCloudVisionV1p4beta1CropHint": {
      "id": "GoogleCloudVisionV1p4beta1CropHint",
      "description": "Single crop hint that is used to generate a new crop when serving an image.",
      "type": "object",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "format": "float"
        },
        "importanceFraction": {
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float",
          "type": "number"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudVisionV1p4beta1BoundingPoly",
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale."
        }
      }
    },
    "AsyncBatchAnnotateImagesResponse": {
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "OutputConfig",
          "description": "The output location and metadata from AsyncBatchAnnotateImagesRequest."
        }
      },
      "id": "AsyncBatchAnnotateImagesResponse",
      "description": "Response to an async batch image annotation request."
    },
    "GoogleCloudVisionV1p1beta1DominantColorsAnnotation": {
      "type": "object",
      "properties": {
        "colors": {
          "description": "RGB color values with their score and pixel fraction.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p1beta1ColorInfo"
          }
        }
      },
      "id": "GoogleCloudVisionV1p1beta1DominantColorsAnnotation",
      "description": "Set of dominant colors and their corresponding scores."
    },
    "GoogleCloudVisionV1p2beta1OutputConfig": {
      "id": "GoogleCloudVisionV1p2beta1OutputConfig",
      "description": "The desired output location and metadata.",
      "type": "object",
      "properties": {
        "batchSize": {
          "description": "The max number of response protos to put into each output JSON file on\nGoogle Cloud Storage.\nThe valid range is [1, 100]. If not specified, the default value is 20.\n\nFor example, for one pdf file with 100 pages, 100 response protos will\nbe generated. If `batch_size` = 20, then 5 json files each\ncontaining 20 response protos will be written under the prefix\n`gcs_destination`.`uri`.\n\nCurrently, batch_size only applies to GcsDestination, with potential future\nsupport for other output configurations.",
          "format": "int32",
          "type": "integer"
        },
        "gcsDestination": {
          "$ref": "GoogleCloudVisionV1p2beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output(s) to."
        }
      }
    },
    "GoogleCloudVisionV1p2beta1Word": {
      "id": "GoogleCloudVisionV1p2beta1Word",
      "description": "A word representation.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "$ref": "GoogleCloudVisionV1p2beta1BoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "confidence": {
          "description": "Confidence of the OCR results for the word. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "symbols": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVisionV1p2beta1Symbol"
          },
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order."
        },
        "property": {
          "$ref": "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty",
          "description": "Additional information detected for the word."
        }
      }
    },
    "GoogleCloudVisionV1p1beta1CropHint": {
      "description": "Single crop hint that is used to generate a new crop when serving an image.",
      "type": "object",
      "properties": {
        "boundingPoly": {
          "description": "The bounding polygon for the crop region. The coordinates of the bounding\nbox are in the original image's scale.",
          "$ref": "GoogleCloudVisionV1p1beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of this being a salient region.  Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "importanceFraction": {
          "type": "number",
          "description": "Fraction of importance of this salient region with respect to the original\nimage.",
          "format": "float"
        }
      },
      "id": "GoogleCloudVisionV1p1beta1CropHint"
    }
  },
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "canonicalName": "Vision",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-vision": {
          "description": "Apply machine learning models to understand and label images"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://vision.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "vision",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true
}
