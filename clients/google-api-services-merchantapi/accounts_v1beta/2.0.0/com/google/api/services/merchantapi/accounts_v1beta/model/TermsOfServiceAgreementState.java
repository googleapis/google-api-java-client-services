/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * This resource represents the agreement state for a given account and terms of service kind. The
 * state is as follows: * If the merchant has accepted a terms of service:
 * [accepted](TermsOfServiceAggrementState.accepted) will be populated, otherwise it will be empty *
 * If the merchant must sign a terms of service: [required](TermsOfServiceAggrementState.required)
 * will be populated, otherwise it will be empty. Note that both
 * [required](TermsOfServiceAggrementState.required) and
 * [accepted](TermsOfServiceAggrementState.accepted) can be present. In this case the `accepted`
 * terms of services will have an expiration date set in the [valid_until](Accepted.valid_until)
 * field. The `required` terms of services need to be accepted before `valid_until` in order for the
 * account to continue having a valid agreement. When accepting new terms of services we expect 3Ps
 * to display the text associated with the given terms of service agreement (the url to the file
 * containing the text is added in the Required message below as
 * [tos_file_uri](Accepted.tos_file_uri). The actual acceptance of the terms of service is done by
 * calling accept on the [TermsOfService](TermsOfService) resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TermsOfServiceAgreementState extends com.google.api.client.json.GenericJson {

  /**
   * The accepted terms of service of this kind and for the associated region_code
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Accepted accepted;

  /**
   * Identifier. The resource name of the terms of service version. Format:
   * `accounts/{account}/termsOfServiceAgreementState/{identifier}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Region code as defined by https://cldr.unicode.org/. This is the country the current state
   * applies to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * The required terms of service
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Required required;

  /**
   * Terms of Service kind associated with the particular version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String termsOfServiceKind;

  /**
   * The accepted terms of service of this kind and for the associated region_code
   * @return value or {@code null} for none
   */
  public Accepted getAccepted() {
    return accepted;
  }

  /**
   * The accepted terms of service of this kind and for the associated region_code
   * @param accepted accepted or {@code null} for none
   */
  public TermsOfServiceAgreementState setAccepted(Accepted accepted) {
    this.accepted = accepted;
    return this;
  }

  /**
   * Identifier. The resource name of the terms of service version. Format:
   * `accounts/{account}/termsOfServiceAgreementState/{identifier}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the terms of service version. Format:
   * `accounts/{account}/termsOfServiceAgreementState/{identifier}`
   * @param name name or {@code null} for none
   */
  public TermsOfServiceAgreementState setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Region code as defined by https://cldr.unicode.org/. This is the country the current state
   * applies to.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * Region code as defined by https://cldr.unicode.org/. This is the country the current state
   * applies to.
   * @param regionCode regionCode or {@code null} for none
   */
  public TermsOfServiceAgreementState setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * The required terms of service
   * @return value or {@code null} for none
   */
  public Required getRequired() {
    return required;
  }

  /**
   * The required terms of service
   * @param required required or {@code null} for none
   */
  public TermsOfServiceAgreementState setRequired(Required required) {
    this.required = required;
    return this;
  }

  /**
   * Terms of Service kind associated with the particular version.
   * @return value or {@code null} for none
   */
  public java.lang.String getTermsOfServiceKind() {
    return termsOfServiceKind;
  }

  /**
   * Terms of Service kind associated with the particular version.
   * @param termsOfServiceKind termsOfServiceKind or {@code null} for none
   */
  public TermsOfServiceAgreementState setTermsOfServiceKind(java.lang.String termsOfServiceKind) {
    this.termsOfServiceKind = termsOfServiceKind;
    return this;
  }

  @Override
  public TermsOfServiceAgreementState set(String fieldName, Object value) {
    return (TermsOfServiceAgreementState) super.set(fieldName, value);
  }

  @Override
  public TermsOfServiceAgreementState clone() {
    return (TermsOfServiceAgreementState) super.clone();
  }

}
