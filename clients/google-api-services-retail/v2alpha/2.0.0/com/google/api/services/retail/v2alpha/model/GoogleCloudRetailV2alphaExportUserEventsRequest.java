/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.retail.v2alpha.model;

/**
 * Request message for the `ExportUserEvents` method.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI Search for Retail API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRetailV2alphaExportUserEventsRequest extends com.google.api.client.json.GenericJson {

  /**
   * A filtering expression to specify restrictions on returned events. The expression is a sequence
   * of terms. Each term applies a restriction to the returned user events. Use this expression to
   * restrict results to a specific time range or to filter events by eventType. For example,
   * `eventTime > "2012-04-23T18:25:43.511Z" eventsMissingCatalogItems
   * eventTime<"2012-04-23T18:25:43.511Z" eventType=search` We expect only three types of fields: *
   * `eventTime`: This can be specified twice, once with a less than operator and once with a
   * greater than operator. The `eventTime` restriction should result in one, contiguous, valid,
   * `eventTime` range. * `eventType`: Boolean operators `OR` and `NOT` are supported if the
   * expression is enclosed in parentheses and the operators are separated from the tag values by a
   * space. * `eventsMissingCatalogItems`: This restricts results to events for which catalog items
   * were not found in the catalog. The default behavior is to return only those events for which
   * catalog items were found. Some examples of valid filters expressions: * Example 1: `eventTime >
   * "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z"` * Example 2: `eventTime >
   * "2012-04-23T18:25:43.511Z" eventType = detail-page-view` * Example 3:
   * `eventsMissingCatalogItems eventType = (NOT search) eventTime < "2018-04-23T18:30:43.511Z"` *
   * Example 4: `eventTime > "2012-04-23T18:25:43.511Z"` * Example 5: `eventType = (detail-page-view
   * OR search)` * Example 6: `eventsMissingCatalogItems`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * Required. The output location of the data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRetailV2alphaOutputConfig outputConfig;

  /**
   * A filtering expression to specify restrictions on returned events. The expression is a sequence
   * of terms. Each term applies a restriction to the returned user events. Use this expression to
   * restrict results to a specific time range or to filter events by eventType. For example,
   * `eventTime > "2012-04-23T18:25:43.511Z" eventsMissingCatalogItems
   * eventTime<"2012-04-23T18:25:43.511Z" eventType=search` We expect only three types of fields: *
   * `eventTime`: This can be specified twice, once with a less than operator and once with a
   * greater than operator. The `eventTime` restriction should result in one, contiguous, valid,
   * `eventTime` range. * `eventType`: Boolean operators `OR` and `NOT` are supported if the
   * expression is enclosed in parentheses and the operators are separated from the tag values by a
   * space. * `eventsMissingCatalogItems`: This restricts results to events for which catalog items
   * were not found in the catalog. The default behavior is to return only those events for which
   * catalog items were found. Some examples of valid filters expressions: * Example 1: `eventTime >
   * "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z"` * Example 2: `eventTime >
   * "2012-04-23T18:25:43.511Z" eventType = detail-page-view` * Example 3:
   * `eventsMissingCatalogItems eventType = (NOT search) eventTime < "2018-04-23T18:30:43.511Z"` *
   * Example 4: `eventTime > "2012-04-23T18:25:43.511Z"` * Example 5: `eventType = (detail-page-view
   * OR search)` * Example 6: `eventsMissingCatalogItems`
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * A filtering expression to specify restrictions on returned events. The expression is a sequence
   * of terms. Each term applies a restriction to the returned user events. Use this expression to
   * restrict results to a specific time range or to filter events by eventType. For example,
   * `eventTime > "2012-04-23T18:25:43.511Z" eventsMissingCatalogItems
   * eventTime<"2012-04-23T18:25:43.511Z" eventType=search` We expect only three types of fields: *
   * `eventTime`: This can be specified twice, once with a less than operator and once with a
   * greater than operator. The `eventTime` restriction should result in one, contiguous, valid,
   * `eventTime` range. * `eventType`: Boolean operators `OR` and `NOT` are supported if the
   * expression is enclosed in parentheses and the operators are separated from the tag values by a
   * space. * `eventsMissingCatalogItems`: This restricts results to events for which catalog items
   * were not found in the catalog. The default behavior is to return only those events for which
   * catalog items were found. Some examples of valid filters expressions: * Example 1: `eventTime >
   * "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z"` * Example 2: `eventTime >
   * "2012-04-23T18:25:43.511Z" eventType = detail-page-view` * Example 3:
   * `eventsMissingCatalogItems eventType = (NOT search) eventTime < "2018-04-23T18:30:43.511Z"` *
   * Example 4: `eventTime > "2012-04-23T18:25:43.511Z"` * Example 5: `eventType = (detail-page-view
   * OR search)` * Example 6: `eventsMissingCatalogItems`
   * @param filter filter or {@code null} for none
   */
  public GoogleCloudRetailV2alphaExportUserEventsRequest setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Required. The output location of the data.
   * @return value or {@code null} for none
   */
  public GoogleCloudRetailV2alphaOutputConfig getOutputConfig() {
    return outputConfig;
  }

  /**
   * Required. The output location of the data.
   * @param outputConfig outputConfig or {@code null} for none
   */
  public GoogleCloudRetailV2alphaExportUserEventsRequest setOutputConfig(GoogleCloudRetailV2alphaOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  @Override
  public GoogleCloudRetailV2alphaExportUserEventsRequest set(String fieldName, Object value) {
    return (GoogleCloudRetailV2alphaExportUserEventsRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRetailV2alphaExportUserEventsRequest clone() {
    return (GoogleCloudRetailV2alphaExportUserEventsRequest) super.clone();
  }

}
