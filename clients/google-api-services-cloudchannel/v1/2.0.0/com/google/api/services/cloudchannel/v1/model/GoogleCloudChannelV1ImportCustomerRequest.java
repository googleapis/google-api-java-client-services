/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudchannel.v1.model;

/**
 * Request message for CloudChannelService.ImportCustomer
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Channel API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudChannelV1ImportCustomerRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The super admin of the resold customer generates this token to authorize a reseller
   * to access their Cloud Identity and purchase entitlements on their behalf. You can omit this
   * token after authorization. See https://support.google.com/a/answer/7643790 for more details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authToken;

  /**
   * Optional. Cloud Identity ID of a channel partner who will be the direct reseller for the
   * customer's order. This field is required for 2-tier transfer scenarios and can be provided via
   * the request Parent binding as well.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String channelPartnerId;

  /**
   * Required. Customer's Cloud Identity ID
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cloudIdentityId;

  /**
   * Optional. Specifies the customer that will receive imported Cloud Identity information. Format:
   * accounts/{account_id}/customers/{customer_id}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String customer;

  /**
   * Required. Customer domain.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String domain;

  /**
   * Required. Choose to overwrite an existing customer if found. This must be set to true if there
   * is an existing customer with a conflicting region code or domain.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean overwriteIfExists;

  /**
   * Optional. The super admin of the resold customer generates this token to authorize a reseller
   * to access their Cloud Identity and purchase entitlements on their behalf. You can omit this
   * token after authorization. See https://support.google.com/a/answer/7643790 for more details.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthToken() {
    return authToken;
  }

  /**
   * Optional. The super admin of the resold customer generates this token to authorize a reseller
   * to access their Cloud Identity and purchase entitlements on their behalf. You can omit this
   * token after authorization. See https://support.google.com/a/answer/7643790 for more details.
   * @param authToken authToken or {@code null} for none
   */
  public GoogleCloudChannelV1ImportCustomerRequest setAuthToken(java.lang.String authToken) {
    this.authToken = authToken;
    return this;
  }

  /**
   * Optional. Cloud Identity ID of a channel partner who will be the direct reseller for the
   * customer's order. This field is required for 2-tier transfer scenarios and can be provided via
   * the request Parent binding as well.
   * @return value or {@code null} for none
   */
  public java.lang.String getChannelPartnerId() {
    return channelPartnerId;
  }

  /**
   * Optional. Cloud Identity ID of a channel partner who will be the direct reseller for the
   * customer's order. This field is required for 2-tier transfer scenarios and can be provided via
   * the request Parent binding as well.
   * @param channelPartnerId channelPartnerId or {@code null} for none
   */
  public GoogleCloudChannelV1ImportCustomerRequest setChannelPartnerId(java.lang.String channelPartnerId) {
    this.channelPartnerId = channelPartnerId;
    return this;
  }

  /**
   * Required. Customer's Cloud Identity ID
   * @return value or {@code null} for none
   */
  public java.lang.String getCloudIdentityId() {
    return cloudIdentityId;
  }

  /**
   * Required. Customer's Cloud Identity ID
   * @param cloudIdentityId cloudIdentityId or {@code null} for none
   */
  public GoogleCloudChannelV1ImportCustomerRequest setCloudIdentityId(java.lang.String cloudIdentityId) {
    this.cloudIdentityId = cloudIdentityId;
    return this;
  }

  /**
   * Optional. Specifies the customer that will receive imported Cloud Identity information. Format:
   * accounts/{account_id}/customers/{customer_id}
   * @return value or {@code null} for none
   */
  public java.lang.String getCustomer() {
    return customer;
  }

  /**
   * Optional. Specifies the customer that will receive imported Cloud Identity information. Format:
   * accounts/{account_id}/customers/{customer_id}
   * @param customer customer or {@code null} for none
   */
  public GoogleCloudChannelV1ImportCustomerRequest setCustomer(java.lang.String customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Required. Customer domain.
   * @return value or {@code null} for none
   */
  public java.lang.String getDomain() {
    return domain;
  }

  /**
   * Required. Customer domain.
   * @param domain domain or {@code null} for none
   */
  public GoogleCloudChannelV1ImportCustomerRequest setDomain(java.lang.String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Required. Choose to overwrite an existing customer if found. This must be set to true if there
   * is an existing customer with a conflicting region code or domain.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOverwriteIfExists() {
    return overwriteIfExists;
  }

  /**
   * Required. Choose to overwrite an existing customer if found. This must be set to true if there
   * is an existing customer with a conflicting region code or domain.
   * @param overwriteIfExists overwriteIfExists or {@code null} for none
   */
  public GoogleCloudChannelV1ImportCustomerRequest setOverwriteIfExists(java.lang.Boolean overwriteIfExists) {
    this.overwriteIfExists = overwriteIfExists;
    return this;
  }

  @Override
  public GoogleCloudChannelV1ImportCustomerRequest set(String fieldName, Object value) {
    return (GoogleCloudChannelV1ImportCustomerRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudChannelV1ImportCustomerRequest clone() {
    return (GoogleCloudChannelV1ImportCustomerRequest) super.clone();
  }

}
