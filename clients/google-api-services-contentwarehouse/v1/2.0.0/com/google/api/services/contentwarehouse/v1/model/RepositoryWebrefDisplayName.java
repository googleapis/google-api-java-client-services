/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Per language display name from reliable sources (e.g. Freebase, Wikipedia). The name can be
 * ambiguous (e.g. "Springfield" rather than "Springfield, Idaho"), and is thus to be used in a
 * context which provides sufficient disambiguation. See: http://go/entity-names WARNING: This data
 * is DEPRECATED and any user-visible entity names need to be fetched from TopicServer. Note that
 * any display names included in this proto are merely a pass-through from KG and have no freshness
 * guarantees.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefDisplayName extends com.google.api.client.json.GenericJson {

  /**
   * An encylopedia style topic name (e.g. "Dog", not "Dogs"). Corresponds to Freebase
   * /type/object/name and similar sources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String canonicalName;

  /**
   * The language of this name. See http://goto/iii for all the details on the language identifiers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String language;

  /**
   * A name as it would be used for a news topic, an interest, the subject of a story. E.g. in list
   * of things ("Related topics: Smartphones, computers, accidents". "Interests: Dogs"). *Fall
   * back:* If the field is not populated, fall back to the "canonical_name" field. This field is
   * usually not populated since (a) in most cases the subject form name is the same as the
   * canonical name, and (b) data coverage of subject-form names is currently much lower than data
   * coverage of canonical names. Note: In some languages (e.g. French) the difference between
   * canonical names and subject names is larger than in English (not just plural vs. singular), but
   * still strictly grammatical (including an article, capitalization, plural vs. singular).
   * Corresponds to Freebase /freebase/linguistic_hint/subject_form.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subjectName;

  /**
   * An encylopedia style topic name (e.g. "Dog", not "Dogs"). Corresponds to Freebase
   * /type/object/name and similar sources.
   * @return value or {@code null} for none
   */
  public java.lang.String getCanonicalName() {
    return canonicalName;
  }

  /**
   * An encylopedia style topic name (e.g. "Dog", not "Dogs"). Corresponds to Freebase
   * /type/object/name and similar sources.
   * @param canonicalName canonicalName or {@code null} for none
   */
  public RepositoryWebrefDisplayName setCanonicalName(java.lang.String canonicalName) {
    this.canonicalName = canonicalName;
    return this;
  }

  /**
   * The language of this name. See http://goto/iii for all the details on the language identifiers.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguage() {
    return language;
  }

  /**
   * The language of this name. See http://goto/iii for all the details on the language identifiers.
   * @param language language or {@code null} for none
   */
  public RepositoryWebrefDisplayName setLanguage(java.lang.String language) {
    this.language = language;
    return this;
  }

  /**
   * A name as it would be used for a news topic, an interest, the subject of a story. E.g. in list
   * of things ("Related topics: Smartphones, computers, accidents". "Interests: Dogs"). *Fall
   * back:* If the field is not populated, fall back to the "canonical_name" field. This field is
   * usually not populated since (a) in most cases the subject form name is the same as the
   * canonical name, and (b) data coverage of subject-form names is currently much lower than data
   * coverage of canonical names. Note: In some languages (e.g. French) the difference between
   * canonical names and subject names is larger than in English (not just plural vs. singular), but
   * still strictly grammatical (including an article, capitalization, plural vs. singular).
   * Corresponds to Freebase /freebase/linguistic_hint/subject_form.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubjectName() {
    return subjectName;
  }

  /**
   * A name as it would be used for a news topic, an interest, the subject of a story. E.g. in list
   * of things ("Related topics: Smartphones, computers, accidents". "Interests: Dogs"). *Fall
   * back:* If the field is not populated, fall back to the "canonical_name" field. This field is
   * usually not populated since (a) in most cases the subject form name is the same as the
   * canonical name, and (b) data coverage of subject-form names is currently much lower than data
   * coverage of canonical names. Note: In some languages (e.g. French) the difference between
   * canonical names and subject names is larger than in English (not just plural vs. singular), but
   * still strictly grammatical (including an article, capitalization, plural vs. singular).
   * Corresponds to Freebase /freebase/linguistic_hint/subject_form.
   * @param subjectName subjectName or {@code null} for none
   */
  public RepositoryWebrefDisplayName setSubjectName(java.lang.String subjectName) {
    this.subjectName = subjectName;
    return this;
  }

  @Override
  public RepositoryWebrefDisplayName set(String fieldName, Object value) {
    return (RepositoryWebrefDisplayName) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefDisplayName clone() {
    return (RepositoryWebrefDisplayName) super.clone();
  }

}
