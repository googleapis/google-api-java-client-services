/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.managedidentities.v1.model;

/**
 * DenyMaintenancePeriod definition. Maintenance is forbidden within the deny period. The start_date
 * must be less than the end_date.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Managed Service for Microsoft Active Directory API.
 * For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DenyMaintenancePeriod extends com.google.api.client.json.GenericJson {

  /**
   * Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A
   * month and day value, with a zero year. Allows recurring deny periods each year. Date matching
   * this period will have to be before the end.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Date endDate;

  /**
   * Deny period start date. This can be: * A full date, with non-zero year, month and day values. *
   * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching
   * this period will have to be the same or after the start.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Date startDate;

  /**
   * Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: *
   * Full time. * All zeros for 00:00:00 UTC
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeOfDay time;

  /**
   * Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A
   * month and day value, with a zero year. Allows recurring deny periods each year. Date matching
   * this period will have to be before the end.
   * @return value or {@code null} for none
   */
  public Date getEndDate() {
    return endDate;
  }

  /**
   * Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A
   * month and day value, with a zero year. Allows recurring deny periods each year. Date matching
   * this period will have to be before the end.
   * @param endDate endDate or {@code null} for none
   */
  public DenyMaintenancePeriod setEndDate(Date endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Deny period start date. This can be: * A full date, with non-zero year, month and day values. *
   * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching
   * this period will have to be the same or after the start.
   * @return value or {@code null} for none
   */
  public Date getStartDate() {
    return startDate;
  }

  /**
   * Deny period start date. This can be: * A full date, with non-zero year, month and day values. *
   * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching
   * this period will have to be the same or after the start.
   * @param startDate startDate or {@code null} for none
   */
  public DenyMaintenancePeriod setStartDate(Date startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: *
   * Full time. * All zeros for 00:00:00 UTC
   * @return value or {@code null} for none
   */
  public TimeOfDay getTime() {
    return time;
  }

  /**
   * Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: *
   * Full time. * All zeros for 00:00:00 UTC
   * @param time time or {@code null} for none
   */
  public DenyMaintenancePeriod setTime(TimeOfDay time) {
    this.time = time;
    return this;
  }

  @Override
  public DenyMaintenancePeriod set(String fieldName, Object value) {
    return (DenyMaintenancePeriod) super.set(fieldName, value);
  }

  @Override
  public DenyMaintenancePeriod clone() {
    return (DenyMaintenancePeriod) super.clone();
  }

}
