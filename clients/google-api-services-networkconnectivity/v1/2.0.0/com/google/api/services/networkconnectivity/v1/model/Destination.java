/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkconnectivity.v1.model;

/**
 * The `Destination` resource. It specifies the IP prefix and the associated autonomous system
 * numbers (ASN) that you want to include in a `MulticloudDataTransferConfig` resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Connectivity API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Destination extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Time when the `Destination` resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. A description of this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. Unordered list. The list of `DestinationEndpoint` resources configured for the IP
   * prefix.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DestinationEndpoint> endpoints;

  /**
   * The etag is computed by the server, and might be sent with update and delete requests so that
   * the client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Required. Immutable. The IP prefix that represents your workload on another CSP.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ipPrefix;

  /**
   * Optional. User-defined labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. The name of the `Destination` resource. Format: `projects/{project}/locations/{loca
   * tion}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}/destinations/{destination
   * }`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The timeline of the expected `Destination` states or the current rest state. If a
   * state change is expected, the value is `ADDING`, `DELETING` or `SUSPENDING`, depending on the
   * action specified. Example: "state_timeline": { "states": [ { // The time when the `Destination`
   * resource will be activated. "effectiveTime": "2024-12-01T08:00:00Z", "state": "ADDING" }, { //
   * The time when the `Destination` resource will be suspended. "effectiveTime":
   * "2024-12-01T20:00:00Z", "state": "SUSPENDING" } ] }
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StateTimeline stateTimeline;

  /**
   * Output only. The Google-generated unique ID for the `Destination` resource. This value is
   * unique across all `Destination` resources. If a resource is deleted and another with the same
   * name is created, the new resource is assigned a different and unique ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Time when the `Destination` resource was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Time when the `Destination` resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time when the `Destination` resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public Destination setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. A description of this resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. A description of this resource.
   * @param description description or {@code null} for none
   */
  public Destination setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. Unordered list. The list of `DestinationEndpoint` resources configured for the IP
   * prefix.
   * @return value or {@code null} for none
   */
  public java.util.List<DestinationEndpoint> getEndpoints() {
    return endpoints;
  }

  /**
   * Required. Unordered list. The list of `DestinationEndpoint` resources configured for the IP
   * prefix.
   * @param endpoints endpoints or {@code null} for none
   */
  public Destination setEndpoints(java.util.List<DestinationEndpoint> endpoints) {
    this.endpoints = endpoints;
    return this;
  }

  /**
   * The etag is computed by the server, and might be sent with update and delete requests so that
   * the client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * The etag is computed by the server, and might be sent with update and delete requests so that
   * the client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public Destination setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Required. Immutable. The IP prefix that represents your workload on another CSP.
   * @return value or {@code null} for none
   */
  public java.lang.String getIpPrefix() {
    return ipPrefix;
  }

  /**
   * Required. Immutable. The IP prefix that represents your workload on another CSP.
   * @param ipPrefix ipPrefix or {@code null} for none
   */
  public Destination setIpPrefix(java.lang.String ipPrefix) {
    this.ipPrefix = ipPrefix;
    return this;
  }

  /**
   * Optional. User-defined labels.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. User-defined labels.
   * @param labels labels or {@code null} for none
   */
  public Destination setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. The name of the `Destination` resource. Format: `projects/{project}/locations/{loca
   * tion}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}/destinations/{destination
   * }`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The name of the `Destination` resource. Format: `projects/{project}/locations/{loca
   * tion}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}/destinations/{destination
   * }`.
   * @param name name or {@code null} for none
   */
  public Destination setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The timeline of the expected `Destination` states or the current rest state. If a
   * state change is expected, the value is `ADDING`, `DELETING` or `SUSPENDING`, depending on the
   * action specified. Example: "state_timeline": { "states": [ { // The time when the `Destination`
   * resource will be activated. "effectiveTime": "2024-12-01T08:00:00Z", "state": "ADDING" }, { //
   * The time when the `Destination` resource will be suspended. "effectiveTime":
   * "2024-12-01T20:00:00Z", "state": "SUSPENDING" } ] }
   * @return value or {@code null} for none
   */
  public StateTimeline getStateTimeline() {
    return stateTimeline;
  }

  /**
   * Output only. The timeline of the expected `Destination` states or the current rest state. If a
   * state change is expected, the value is `ADDING`, `DELETING` or `SUSPENDING`, depending on the
   * action specified. Example: "state_timeline": { "states": [ { // The time when the `Destination`
   * resource will be activated. "effectiveTime": "2024-12-01T08:00:00Z", "state": "ADDING" }, { //
   * The time when the `Destination` resource will be suspended. "effectiveTime":
   * "2024-12-01T20:00:00Z", "state": "SUSPENDING" } ] }
   * @param stateTimeline stateTimeline or {@code null} for none
   */
  public Destination setStateTimeline(StateTimeline stateTimeline) {
    this.stateTimeline = stateTimeline;
    return this;
  }

  /**
   * Output only. The Google-generated unique ID for the `Destination` resource. This value is
   * unique across all `Destination` resources. If a resource is deleted and another with the same
   * name is created, the new resource is assigned a different and unique ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. The Google-generated unique ID for the `Destination` resource. This value is
   * unique across all `Destination` resources. If a resource is deleted and another with the same
   * name is created, the new resource is assigned a different and unique ID.
   * @param uid uid or {@code null} for none
   */
  public Destination setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. Time when the `Destination` resource was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Time when the `Destination` resource was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Destination setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Destination set(String fieldName, Object value) {
    return (Destination) super.set(fieldName, value);
  }

  @Override
  public Destination clone() {
    return (Destination) super.clone();
  }

}
