/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1.model;

/**
 * The details of a database deployment asset.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DatabaseDeploymentDetails extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Aggregated stats for the database deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DatabaseDeploymentDetailsAggregatedStats aggregatedStats;

  /**
   * Optional. The database deployment edition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String edition;

  /**
   * Optional. The database deployment generated ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String generatedId;

  /**
   * Optional. A manual unique ID set by the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String manualUniqueId;

  /**
   * Optional. Details of a MYSQL database deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MysqlDatabaseDeployment mysql;

  /**
   * Optional. Details of a PostgreSQL database deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PostgreSqlDatabaseDeployment postgresql;

  /**
   * Optional. Details of a Microsoft SQL Server database deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SqlServerDatabaseDeployment sqlServer;

  /**
   * Optional. Details of the database deployment topology.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DatabaseDeploymentTopology topology;

  /**
   * Optional. The database deployment version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Output only. Aggregated stats for the database deployment.
   * @return value or {@code null} for none
   */
  public DatabaseDeploymentDetailsAggregatedStats getAggregatedStats() {
    return aggregatedStats;
  }

  /**
   * Output only. Aggregated stats for the database deployment.
   * @param aggregatedStats aggregatedStats or {@code null} for none
   */
  public DatabaseDeploymentDetails setAggregatedStats(DatabaseDeploymentDetailsAggregatedStats aggregatedStats) {
    this.aggregatedStats = aggregatedStats;
    return this;
  }

  /**
   * Optional. The database deployment edition.
   * @return value or {@code null} for none
   */
  public java.lang.String getEdition() {
    return edition;
  }

  /**
   * Optional. The database deployment edition.
   * @param edition edition or {@code null} for none
   */
  public DatabaseDeploymentDetails setEdition(java.lang.String edition) {
    this.edition = edition;
    return this;
  }

  /**
   * Optional. The database deployment generated ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getGeneratedId() {
    return generatedId;
  }

  /**
   * Optional. The database deployment generated ID.
   * @param generatedId generatedId or {@code null} for none
   */
  public DatabaseDeploymentDetails setGeneratedId(java.lang.String generatedId) {
    this.generatedId = generatedId;
    return this;
  }

  /**
   * Optional. A manual unique ID set by the user.
   * @return value or {@code null} for none
   */
  public java.lang.String getManualUniqueId() {
    return manualUniqueId;
  }

  /**
   * Optional. A manual unique ID set by the user.
   * @param manualUniqueId manualUniqueId or {@code null} for none
   */
  public DatabaseDeploymentDetails setManualUniqueId(java.lang.String manualUniqueId) {
    this.manualUniqueId = manualUniqueId;
    return this;
  }

  /**
   * Optional. Details of a MYSQL database deployment.
   * @return value or {@code null} for none
   */
  public MysqlDatabaseDeployment getMysql() {
    return mysql;
  }

  /**
   * Optional. Details of a MYSQL database deployment.
   * @param mysql mysql or {@code null} for none
   */
  public DatabaseDeploymentDetails setMysql(MysqlDatabaseDeployment mysql) {
    this.mysql = mysql;
    return this;
  }

  /**
   * Optional. Details of a PostgreSQL database deployment.
   * @return value or {@code null} for none
   */
  public PostgreSqlDatabaseDeployment getPostgresql() {
    return postgresql;
  }

  /**
   * Optional. Details of a PostgreSQL database deployment.
   * @param postgresql postgresql or {@code null} for none
   */
  public DatabaseDeploymentDetails setPostgresql(PostgreSqlDatabaseDeployment postgresql) {
    this.postgresql = postgresql;
    return this;
  }

  /**
   * Optional. Details of a Microsoft SQL Server database deployment.
   * @return value or {@code null} for none
   */
  public SqlServerDatabaseDeployment getSqlServer() {
    return sqlServer;
  }

  /**
   * Optional. Details of a Microsoft SQL Server database deployment.
   * @param sqlServer sqlServer or {@code null} for none
   */
  public DatabaseDeploymentDetails setSqlServer(SqlServerDatabaseDeployment sqlServer) {
    this.sqlServer = sqlServer;
    return this;
  }

  /**
   * Optional. Details of the database deployment topology.
   * @return value or {@code null} for none
   */
  public DatabaseDeploymentTopology getTopology() {
    return topology;
  }

  /**
   * Optional. Details of the database deployment topology.
   * @param topology topology or {@code null} for none
   */
  public DatabaseDeploymentDetails setTopology(DatabaseDeploymentTopology topology) {
    this.topology = topology;
    return this;
  }

  /**
   * Optional. The database deployment version.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Optional. The database deployment version.
   * @param version version or {@code null} for none
   */
  public DatabaseDeploymentDetails setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public DatabaseDeploymentDetails set(String fieldName, Object value) {
    return (DatabaseDeploymentDetails) super.set(fieldName, value);
  }

  @Override
  public DatabaseDeploymentDetails clone() {
    return (DatabaseDeploymentDetails) super.clone();
  }

}
