/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudidentity.v1.model;

/**
 * A Policy resource binds an instance of a single Setting with the scope of a PolicyQuery. The
 * Setting instance will be applied to all entities that satisfy the query.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Identity API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Policy extends com.google.api.client.json.GenericJson {

  /**
   * Immutable. Customer that the Policy belongs to. The value is in the format
   * 'customers/{customerId}'. The `customerId` must begin with "C" To find your customer ID in
   * Admin Console see https://support.google.com/a/answer/10070793.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String customer;

  /**
   * Output only. Identifier. The [resource
   * name](https://cloud.google.com/apis/design/resource_names) of the Policy. Format:
   * policies/{policy}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. The PolicyQuery the Setting applies to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PolicyQuery policyQuery;

  /**
   * Required. The Setting configured by this Policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Setting setting;

  /**
   * Output only. The type of the policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Immutable. Customer that the Policy belongs to. The value is in the format
   * 'customers/{customerId}'. The `customerId` must begin with "C" To find your customer ID in
   * Admin Console see https://support.google.com/a/answer/10070793.
   * @return value or {@code null} for none
   */
  public java.lang.String getCustomer() {
    return customer;
  }

  /**
   * Immutable. Customer that the Policy belongs to. The value is in the format
   * 'customers/{customerId}'. The `customerId` must begin with "C" To find your customer ID in
   * Admin Console see https://support.google.com/a/answer/10070793.
   * @param customer customer or {@code null} for none
   */
  public Policy setCustomer(java.lang.String customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Output only. Identifier. The [resource
   * name](https://cloud.google.com/apis/design/resource_names) of the Policy. Format:
   * policies/{policy}.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Identifier. The [resource
   * name](https://cloud.google.com/apis/design/resource_names) of the Policy. Format:
   * policies/{policy}.
   * @param name name or {@code null} for none
   */
  public Policy setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. The PolicyQuery the Setting applies to.
   * @return value or {@code null} for none
   */
  public PolicyQuery getPolicyQuery() {
    return policyQuery;
  }

  /**
   * Required. The PolicyQuery the Setting applies to.
   * @param policyQuery policyQuery or {@code null} for none
   */
  public Policy setPolicyQuery(PolicyQuery policyQuery) {
    this.policyQuery = policyQuery;
    return this;
  }

  /**
   * Required. The Setting configured by this Policy.
   * @return value or {@code null} for none
   */
  public Setting getSetting() {
    return setting;
  }

  /**
   * Required. The Setting configured by this Policy.
   * @param setting setting or {@code null} for none
   */
  public Policy setSetting(Setting setting) {
    this.setting = setting;
    return this;
  }

  /**
   * Output only. The type of the policy.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Output only. The type of the policy.
   * @param type type or {@code null} for none
   */
  public Policy setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Policy set(String fieldName, Object value) {
    return (Policy) super.set(fieldName, value);
  }

  @Override
  public Policy clone() {
    return (Policy) super.clone();
  }

}
