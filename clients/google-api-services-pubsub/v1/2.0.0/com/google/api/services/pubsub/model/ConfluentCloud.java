/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.pubsub.model;

/**
 * Ingestion settings for Confluent Cloud.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Pub/Sub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ConfluentCloud extends com.google.api.client.json.GenericJson {

  /**
   * Required. The address of the bootstrap server. The format is url:port.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bootstrapServer;

  /**
   * Required. The id of the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clusterId;

  /**
   * Required. The GCP service account to be used for Federated Identity authentication with
   * `identity_pool_id`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gcpServiceAccount;

  /**
   * Required. The id of the identity pool to be used for Federated Identity authentication with
   * Confluent Cloud. See https://docs.confluent.io/cloud/current/security/authenticate/workload-
   * identities/identity-providers/oauth/identity-pools.html#add-oauth-identity-pools.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String identityPoolId;

  /**
   * Output only. An output-only field that indicates the state of the Confluent Cloud ingestion
   * source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Required. The name of the topic in the Confluent Cloud cluster that Pub/Sub will import from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String topic;

  /**
   * Required. The address of the bootstrap server. The format is url:port.
   * @return value or {@code null} for none
   */
  public java.lang.String getBootstrapServer() {
    return bootstrapServer;
  }

  /**
   * Required. The address of the bootstrap server. The format is url:port.
   * @param bootstrapServer bootstrapServer or {@code null} for none
   */
  public ConfluentCloud setBootstrapServer(java.lang.String bootstrapServer) {
    this.bootstrapServer = bootstrapServer;
    return this;
  }

  /**
   * Required. The id of the cluster.
   * @return value or {@code null} for none
   */
  public java.lang.String getClusterId() {
    return clusterId;
  }

  /**
   * Required. The id of the cluster.
   * @param clusterId clusterId or {@code null} for none
   */
  public ConfluentCloud setClusterId(java.lang.String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

  /**
   * Required. The GCP service account to be used for Federated Identity authentication with
   * `identity_pool_id`.
   * @return value or {@code null} for none
   */
  public java.lang.String getGcpServiceAccount() {
    return gcpServiceAccount;
  }

  /**
   * Required. The GCP service account to be used for Federated Identity authentication with
   * `identity_pool_id`.
   * @param gcpServiceAccount gcpServiceAccount or {@code null} for none
   */
  public ConfluentCloud setGcpServiceAccount(java.lang.String gcpServiceAccount) {
    this.gcpServiceAccount = gcpServiceAccount;
    return this;
  }

  /**
   * Required. The id of the identity pool to be used for Federated Identity authentication with
   * Confluent Cloud. See https://docs.confluent.io/cloud/current/security/authenticate/workload-
   * identities/identity-providers/oauth/identity-pools.html#add-oauth-identity-pools.
   * @return value or {@code null} for none
   */
  public java.lang.String getIdentityPoolId() {
    return identityPoolId;
  }

  /**
   * Required. The id of the identity pool to be used for Federated Identity authentication with
   * Confluent Cloud. See https://docs.confluent.io/cloud/current/security/authenticate/workload-
   * identities/identity-providers/oauth/identity-pools.html#add-oauth-identity-pools.
   * @param identityPoolId identityPoolId or {@code null} for none
   */
  public ConfluentCloud setIdentityPoolId(java.lang.String identityPoolId) {
    this.identityPoolId = identityPoolId;
    return this;
  }

  /**
   * Output only. An output-only field that indicates the state of the Confluent Cloud ingestion
   * source.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. An output-only field that indicates the state of the Confluent Cloud ingestion
   * source.
   * @param state state or {@code null} for none
   */
  public ConfluentCloud setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Required. The name of the topic in the Confluent Cloud cluster that Pub/Sub will import from.
   * @return value or {@code null} for none
   */
  public java.lang.String getTopic() {
    return topic;
  }

  /**
   * Required. The name of the topic in the Confluent Cloud cluster that Pub/Sub will import from.
   * @param topic topic or {@code null} for none
   */
  public ConfluentCloud setTopic(java.lang.String topic) {
    this.topic = topic;
    return this;
  }

  @Override
  public ConfluentCloud set(String fieldName, Object value) {
    return (ConfluentCloud) super.set(fieldName, value);
  }

  @Override
  public ConfluentCloud clone() {
    return (ConfluentCloud) super.clone();
  }

}
