/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.datasources_v1beta.model;

/**
 * The data specific for file data sources. This field is empty for other data source inputs.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FileInput extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Fetch details to deliver the data source. It contains settings for `FETCH` and
   * `GOOGLE_SHEETS` file input types. The required fields vary based on the frequency of fetching.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FetchSettings fetchSettings;

  /**
   * Output only. The type of file input.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileInputType;

  /**
   * Optional. The file name of the data source. Required for `UPLOAD` file input type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileName;

  /**
   * Optional. Fetch details to deliver the data source. It contains settings for `FETCH` and
   * `GOOGLE_SHEETS` file input types. The required fields vary based on the frequency of fetching.
   * @return value or {@code null} for none
   */
  public FetchSettings getFetchSettings() {
    return fetchSettings;
  }

  /**
   * Optional. Fetch details to deliver the data source. It contains settings for `FETCH` and
   * `GOOGLE_SHEETS` file input types. The required fields vary based on the frequency of fetching.
   * @param fetchSettings fetchSettings or {@code null} for none
   */
  public FileInput setFetchSettings(FetchSettings fetchSettings) {
    this.fetchSettings = fetchSettings;
    return this;
  }

  /**
   * Output only. The type of file input.
   * @return value or {@code null} for none
   */
  public java.lang.String getFileInputType() {
    return fileInputType;
  }

  /**
   * Output only. The type of file input.
   * @param fileInputType fileInputType or {@code null} for none
   */
  public FileInput setFileInputType(java.lang.String fileInputType) {
    this.fileInputType = fileInputType;
    return this;
  }

  /**
   * Optional. The file name of the data source. Required for `UPLOAD` file input type.
   * @return value or {@code null} for none
   */
  public java.lang.String getFileName() {
    return fileName;
  }

  /**
   * Optional. The file name of the data source. Required for `UPLOAD` file input type.
   * @param fileName fileName or {@code null} for none
   */
  public FileInput setFileName(java.lang.String fileName) {
    this.fileName = fileName;
    return this;
  }

  @Override
  public FileInput set(String fieldName, Object value) {
    return (FileInput) super.set(fieldName, value);
  }

  @Override
  public FileInput clone() {
    return (FileInput) super.clone();
  }

}
