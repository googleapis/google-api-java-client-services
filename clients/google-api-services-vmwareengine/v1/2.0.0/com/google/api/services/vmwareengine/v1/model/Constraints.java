/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmwareengine.v1.model;

/**
 * Constraints to be applied while editing a schedule. These constraints ensure that `Upgrade`
 * specific requirements are met.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VMware Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Constraints extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Minimum number of hours must be allotted for the upgrade activities for each
   * selected day. This is a minimum; the upgrade schedule can allot more hours for the given day.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer minHoursDay;

  /**
   * Output only. The minimum number of weekly hours must be allotted for the upgrade activities.
   * This is just a minimum; the schedule can assign more weekly hours.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer minHoursWeek;

  /**
   * Output only. Output Only. The user can only reschedule an upgrade that starts within this
   * range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Interval rescheduleDateRange;

  /**
   * Output only. Minimum number of hours must be allotted for the upgrade activities for each
   * selected day. This is a minimum; the upgrade schedule can allot more hours for the given day.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMinHoursDay() {
    return minHoursDay;
  }

  /**
   * Output only. Minimum number of hours must be allotted for the upgrade activities for each
   * selected day. This is a minimum; the upgrade schedule can allot more hours for the given day.
   * @param minHoursDay minHoursDay or {@code null} for none
   */
  public Constraints setMinHoursDay(java.lang.Integer minHoursDay) {
    this.minHoursDay = minHoursDay;
    return this;
  }

  /**
   * Output only. The minimum number of weekly hours must be allotted for the upgrade activities.
   * This is just a minimum; the schedule can assign more weekly hours.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMinHoursWeek() {
    return minHoursWeek;
  }

  /**
   * Output only. The minimum number of weekly hours must be allotted for the upgrade activities.
   * This is just a minimum; the schedule can assign more weekly hours.
   * @param minHoursWeek minHoursWeek or {@code null} for none
   */
  public Constraints setMinHoursWeek(java.lang.Integer minHoursWeek) {
    this.minHoursWeek = minHoursWeek;
    return this;
  }

  /**
   * Output only. Output Only. The user can only reschedule an upgrade that starts within this
   * range.
   * @return value or {@code null} for none
   */
  public Interval getRescheduleDateRange() {
    return rescheduleDateRange;
  }

  /**
   * Output only. Output Only. The user can only reschedule an upgrade that starts within this
   * range.
   * @param rescheduleDateRange rescheduleDateRange or {@code null} for none
   */
  public Constraints setRescheduleDateRange(Interval rescheduleDateRange) {
    this.rescheduleDateRange = rescheduleDateRange;
    return this;
  }

  @Override
  public Constraints set(String fieldName, Object value) {
    return (Constraints) super.set(fieldName, value);
  }

  @Override
  public Constraints clone() {
    return (Constraints) super.clone();
  }

}
