/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v3beta1.model;

/**
 * Parameters to be passed to the LLM. If not set, default values will be used.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowCxV3beta1GeneratorModelParameter extends com.google.api.client.json.GenericJson {

  /**
   * The maximum number of tokens to generate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxDecodeSteps;

  /**
   * The temperature used for sampling. Temperature sampling occurs after both topP and topK have
   * been applied. Valid range: [0.0, 1.0] Low temperature = less random. High temperature = more
   * random.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float temperature;

  /**
   * If set, the sampling process in each step is limited to the top_k tokens with highest
   * probabilities. Valid range: [1, 40] or 1000+. Small topK = less random. Large topK = more
   * random.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer topK;

  /**
   * If set, only the tokens comprising the top top_p probability mass are considered. If both top_p
   * and top_k are set, top_p will be used for further refining candidates selected with top_k.
   * Valid range: (0.0, 1.0]. Small topP = less random. Large topP = more random.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float topP;

  /**
   * The maximum number of tokens to generate.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxDecodeSteps() {
    return maxDecodeSteps;
  }

  /**
   * The maximum number of tokens to generate.
   * @param maxDecodeSteps maxDecodeSteps or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1GeneratorModelParameter setMaxDecodeSteps(java.lang.Integer maxDecodeSteps) {
    this.maxDecodeSteps = maxDecodeSteps;
    return this;
  }

  /**
   * The temperature used for sampling. Temperature sampling occurs after both topP and topK have
   * been applied. Valid range: [0.0, 1.0] Low temperature = less random. High temperature = more
   * random.
   * @return value or {@code null} for none
   */
  public java.lang.Float getTemperature() {
    return temperature;
  }

  /**
   * The temperature used for sampling. Temperature sampling occurs after both topP and topK have
   * been applied. Valid range: [0.0, 1.0] Low temperature = less random. High temperature = more
   * random.
   * @param temperature temperature or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1GeneratorModelParameter setTemperature(java.lang.Float temperature) {
    this.temperature = temperature;
    return this;
  }

  /**
   * If set, the sampling process in each step is limited to the top_k tokens with highest
   * probabilities. Valid range: [1, 40] or 1000+. Small topK = less random. Large topK = more
   * random.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTopK() {
    return topK;
  }

  /**
   * If set, the sampling process in each step is limited to the top_k tokens with highest
   * probabilities. Valid range: [1, 40] or 1000+. Small topK = less random. Large topK = more
   * random.
   * @param topK topK or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1GeneratorModelParameter setTopK(java.lang.Integer topK) {
    this.topK = topK;
    return this;
  }

  /**
   * If set, only the tokens comprising the top top_p probability mass are considered. If both top_p
   * and top_k are set, top_p will be used for further refining candidates selected with top_k.
   * Valid range: (0.0, 1.0]. Small topP = less random. Large topP = more random.
   * @return value or {@code null} for none
   */
  public java.lang.Float getTopP() {
    return topP;
  }

  /**
   * If set, only the tokens comprising the top top_p probability mass are considered. If both top_p
   * and top_k are set, top_p will be used for further refining candidates selected with top_k.
   * Valid range: (0.0, 1.0]. Small topP = less random. Large topP = more random.
   * @param topP topP or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1GeneratorModelParameter setTopP(java.lang.Float topP) {
    this.topP = topP;
    return this;
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1GeneratorModelParameter set(String fieldName, Object value) {
    return (GoogleCloudDialogflowCxV3beta1GeneratorModelParameter) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1GeneratorModelParameter clone() {
    return (GoogleCloudDialogflowCxV3beta1GeneratorModelParameter) super.clone();
  }

}
