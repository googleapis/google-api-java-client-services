/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Results of redacting an image.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2RedactImageResponse extends com.google.api.client.json.GenericJson {

  /**
   * If an image was being inspected and the InspectConfig's include_quote was set to true, then
   * this field will include all text, if any, that was found in the image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String extractedText;

  /**
   * The findings. Populated when include_findings in the request is true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2InspectResult inspectResult;

  /**
   * The redacted image. The type will be the same as the original image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String redactedImage;

  /**
   * If an image was being inspected and the InspectConfig's include_quote was set to true, then
   * this field will include all text, if any, that was found in the image.
   * @return value or {@code null} for none
   */
  public java.lang.String getExtractedText() {
    return extractedText;
  }

  /**
   * If an image was being inspected and the InspectConfig's include_quote was set to true, then
   * this field will include all text, if any, that was found in the image.
   * @param extractedText extractedText or {@code null} for none
   */
  public GooglePrivacyDlpV2RedactImageResponse setExtractedText(java.lang.String extractedText) {
    this.extractedText = extractedText;
    return this;
  }

  /**
   * The findings. Populated when include_findings in the request is true.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2InspectResult getInspectResult() {
    return inspectResult;
  }

  /**
   * The findings. Populated when include_findings in the request is true.
   * @param inspectResult inspectResult or {@code null} for none
   */
  public GooglePrivacyDlpV2RedactImageResponse setInspectResult(GooglePrivacyDlpV2InspectResult inspectResult) {
    this.inspectResult = inspectResult;
    return this;
  }

  /**
   * The redacted image. The type will be the same as the original image.
   * @see #decodeRedactedImage()
   * @return value or {@code null} for none
   */
  public java.lang.String getRedactedImage() {
    return redactedImage;
  }

  /**
   * The redacted image. The type will be the same as the original image.
   * @see #getRedactedImage()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeRedactedImage() {
    return com.google.api.client.util.Base64.decodeBase64(redactedImage);
  }

  /**
   * The redacted image. The type will be the same as the original image.
   * @see #encodeRedactedImage()
   * @param redactedImage redactedImage or {@code null} for none
   */
  public GooglePrivacyDlpV2RedactImageResponse setRedactedImage(java.lang.String redactedImage) {
    this.redactedImage = redactedImage;
    return this;
  }

  /**
   * The redacted image. The type will be the same as the original image.
   * @see #setRedactedImage()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GooglePrivacyDlpV2RedactImageResponse encodeRedactedImage(byte[] redactedImage) {
    this.redactedImage = com.google.api.client.util.Base64.encodeBase64URLSafeString(redactedImage);
    return this;
  }

  @Override
  public GooglePrivacyDlpV2RedactImageResponse set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2RedactImageResponse) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2RedactImageResponse clone() {
    return (GooglePrivacyDlpV2RedactImageResponse) super.clone();
  }

}
