/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Request proto for AutocompletePlaces.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1AutocompletePlacesRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Include pure service area businesses if the field is set to true. Pure service area
   * business is a business that visits or delivers to customers directly but does not serve
   * customers at their business address. For example, businesses like cleaning services or
   * plumbers. Those businesses do not have a physical address or location on Google Maps. Places
   * will not return fields including `location`, `plus_code`, and other location related fields for
   * these businesses.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean includePureServiceAreaBusinesses;

  /**
   * Optional. If true, the response will include both Place and query predictions. Otherwise the
   * response will only return Place predictions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean includeQueryPredictions;

  /**
   * Optional. Included primary Place type (for example, "restaurant" or "gas_station") in Place
   * Types (https://developers.google.com/maps/documentation/places/web-service/place-types), or
   * only `(regions)`, or only `(cities)`. A Place is only returned if its primary type is included
   * in this list. Up to 5 values can be specified. If no types are specified, all Place types are
   * returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> includedPrimaryTypes;

  /**
   * Optional. Only include results in the specified regions, specified as up to 15 CLDR two-
   * character region codes. An empty set will not restrict the results. If both
   * `location_restriction` and `included_region_codes` are set, the results will be located in the
   * area of intersection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> includedRegionCodes;

  /**
   * Required. The text string on which to search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String input;

  /**
   * Optional. A zero-based Unicode character offset of `input` indicating the cursor position in
   * `input`. The cursor position may influence what predictions are returned. If empty, defaults to
   * the length of `input`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer inputOffset;

  /**
   * Optional. The language in which to return results. Defaults to en-US. The results may be in
   * mixed languages if the language used in `input` is different from `language_code` or if the
   * returned Place does not have a translation from the local language to `language_code`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * Optional. Bias results to a specified location. At most one of `location_bias` or
   * `location_restriction` should be set. If neither are set, the results will be biased by IP
   * address, meaning the IP address will be mapped to an imprecise location and used as a biasing
   * signal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias locationBias;

  /**
   * Optional. Restrict results to a specified location. At most one of `location_bias` or
   * `location_restriction` should be set. If neither are set, the results will be biased by IP
   * address, meaning the IP address will be mapped to an imprecise location and used as a biasing
   * signal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction locationRestriction;

  /**
   * Optional. The origin point from which to calculate geodesic distance to the destination
   * (returned as `distance_meters`). If this value is omitted, geodesic distance will not be
   * returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeLatLng origin;

  /**
   * Optional. The region code, specified as a CLDR two-character region code. This affects address
   * formatting, result ranking, and may influence what results are returned. This does not restrict
   * results to the specified region. To restrict results to a region, use
   * `region_code_restriction`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * Optional. A string which identifies an Autocomplete session for billing purposes. Must be a URL
   * and filename safe base64 string with at most 36 ASCII characters in length. Otherwise an
   * INVALID_ARGUMENT error is returned. The session begins when the user starts typing a query, and
   * concludes when they select a place and a call to Place Details or Address Validation is made.
   * Each session can have multiple queries, followed by one Place Details or Address Validation
   * request. The credentials used for each request within a session must belong to the same Google
   * Cloud Console project. Once a session has concluded, the token is no longer valid; your app
   * must generate a fresh token for each session. If the `session_token` parameter is omitted, or
   * if you reuse a session token, the session is charged as if no session token was provided (each
   * request is billed separately). We recommend the following guidelines: * Use session tokens for
   * all Place Autocomplete calls. * Generate a fresh token for each session. Using a version 4 UUID
   * is recommended. * Ensure that the credentials used for all Place Autocomplete, Place Details,
   * and Address Validation requests within a session belong to the same Cloud Console project. * Be
   * sure to pass a unique session token for each new session. Using the same token for more than
   * one session will result in each request being billed individually.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sessionToken;

  /**
   * Optional. Include pure service area businesses if the field is set to true. Pure service area
   * business is a business that visits or delivers to customers directly but does not serve
   * customers at their business address. For example, businesses like cleaning services or
   * plumbers. Those businesses do not have a physical address or location on Google Maps. Places
   * will not return fields including `location`, `plus_code`, and other location related fields for
   * these businesses.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIncludePureServiceAreaBusinesses() {
    return includePureServiceAreaBusinesses;
  }

  /**
   * Optional. Include pure service area businesses if the field is set to true. Pure service area
   * business is a business that visits or delivers to customers directly but does not serve
   * customers at their business address. For example, businesses like cleaning services or
   * plumbers. Those businesses do not have a physical address or location on Google Maps. Places
   * will not return fields including `location`, `plus_code`, and other location related fields for
   * these businesses.
   * @param includePureServiceAreaBusinesses includePureServiceAreaBusinesses or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setIncludePureServiceAreaBusinesses(java.lang.Boolean includePureServiceAreaBusinesses) {
    this.includePureServiceAreaBusinesses = includePureServiceAreaBusinesses;
    return this;
  }

  /**
   * Optional. If true, the response will include both Place and query predictions. Otherwise the
   * response will only return Place predictions.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIncludeQueryPredictions() {
    return includeQueryPredictions;
  }

  /**
   * Optional. If true, the response will include both Place and query predictions. Otherwise the
   * response will only return Place predictions.
   * @param includeQueryPredictions includeQueryPredictions or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setIncludeQueryPredictions(java.lang.Boolean includeQueryPredictions) {
    this.includeQueryPredictions = includeQueryPredictions;
    return this;
  }

  /**
   * Optional. Included primary Place type (for example, "restaurant" or "gas_station") in Place
   * Types (https://developers.google.com/maps/documentation/places/web-service/place-types), or
   * only `(regions)`, or only `(cities)`. A Place is only returned if its primary type is included
   * in this list. Up to 5 values can be specified. If no types are specified, all Place types are
   * returned.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIncludedPrimaryTypes() {
    return includedPrimaryTypes;
  }

  /**
   * Optional. Included primary Place type (for example, "restaurant" or "gas_station") in Place
   * Types (https://developers.google.com/maps/documentation/places/web-service/place-types), or
   * only `(regions)`, or only `(cities)`. A Place is only returned if its primary type is included
   * in this list. Up to 5 values can be specified. If no types are specified, all Place types are
   * returned.
   * @param includedPrimaryTypes includedPrimaryTypes or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setIncludedPrimaryTypes(java.util.List<java.lang.String> includedPrimaryTypes) {
    this.includedPrimaryTypes = includedPrimaryTypes;
    return this;
  }

  /**
   * Optional. Only include results in the specified regions, specified as up to 15 CLDR two-
   * character region codes. An empty set will not restrict the results. If both
   * `location_restriction` and `included_region_codes` are set, the results will be located in the
   * area of intersection.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIncludedRegionCodes() {
    return includedRegionCodes;
  }

  /**
   * Optional. Only include results in the specified regions, specified as up to 15 CLDR two-
   * character region codes. An empty set will not restrict the results. If both
   * `location_restriction` and `included_region_codes` are set, the results will be located in the
   * area of intersection.
   * @param includedRegionCodes includedRegionCodes or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setIncludedRegionCodes(java.util.List<java.lang.String> includedRegionCodes) {
    this.includedRegionCodes = includedRegionCodes;
    return this;
  }

  /**
   * Required. The text string on which to search.
   * @return value or {@code null} for none
   */
  public java.lang.String getInput() {
    return input;
  }

  /**
   * Required. The text string on which to search.
   * @param input input or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setInput(java.lang.String input) {
    this.input = input;
    return this;
  }

  /**
   * Optional. A zero-based Unicode character offset of `input` indicating the cursor position in
   * `input`. The cursor position may influence what predictions are returned. If empty, defaults to
   * the length of `input`.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getInputOffset() {
    return inputOffset;
  }

  /**
   * Optional. A zero-based Unicode character offset of `input` indicating the cursor position in
   * `input`. The cursor position may influence what predictions are returned. If empty, defaults to
   * the length of `input`.
   * @param inputOffset inputOffset or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setInputOffset(java.lang.Integer inputOffset) {
    this.inputOffset = inputOffset;
    return this;
  }

  /**
   * Optional. The language in which to return results. Defaults to en-US. The results may be in
   * mixed languages if the language used in `input` is different from `language_code` or if the
   * returned Place does not have a translation from the local language to `language_code`.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * Optional. The language in which to return results. Defaults to en-US. The results may be in
   * mixed languages if the language used in `input` is different from `language_code` or if the
   * returned Place does not have a translation from the local language to `language_code`.
   * @param languageCode languageCode or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Optional. Bias results to a specified location. At most one of `location_bias` or
   * `location_restriction` should be set. If neither are set, the results will be biased by IP
   * address, meaning the IP address will be mapped to an imprecise location and used as a biasing
   * signal.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias getLocationBias() {
    return locationBias;
  }

  /**
   * Optional. Bias results to a specified location. At most one of `location_bias` or
   * `location_restriction` should be set. If neither are set, the results will be biased by IP
   * address, meaning the IP address will be mapped to an imprecise location and used as a biasing
   * signal.
   * @param locationBias locationBias or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setLocationBias(GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias locationBias) {
    this.locationBias = locationBias;
    return this;
  }

  /**
   * Optional. Restrict results to a specified location. At most one of `location_bias` or
   * `location_restriction` should be set. If neither are set, the results will be biased by IP
   * address, meaning the IP address will be mapped to an imprecise location and used as a biasing
   * signal.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction getLocationRestriction() {
    return locationRestriction;
  }

  /**
   * Optional. Restrict results to a specified location. At most one of `location_bias` or
   * `location_restriction` should be set. If neither are set, the results will be biased by IP
   * address, meaning the IP address will be mapped to an imprecise location and used as a biasing
   * signal.
   * @param locationRestriction locationRestriction or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setLocationRestriction(GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction locationRestriction) {
    this.locationRestriction = locationRestriction;
    return this;
  }

  /**
   * Optional. The origin point from which to calculate geodesic distance to the destination
   * (returned as `distance_meters`). If this value is omitted, geodesic distance will not be
   * returned.
   * @return value or {@code null} for none
   */
  public GoogleTypeLatLng getOrigin() {
    return origin;
  }

  /**
   * Optional. The origin point from which to calculate geodesic distance to the destination
   * (returned as `distance_meters`). If this value is omitted, geodesic distance will not be
   * returned.
   * @param origin origin or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setOrigin(GoogleTypeLatLng origin) {
    this.origin = origin;
    return this;
  }

  /**
   * Optional. The region code, specified as a CLDR two-character region code. This affects address
   * formatting, result ranking, and may influence what results are returned. This does not restrict
   * results to the specified region. To restrict results to a region, use
   * `region_code_restriction`.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * Optional. The region code, specified as a CLDR two-character region code. This affects address
   * formatting, result ranking, and may influence what results are returned. This does not restrict
   * results to the specified region. To restrict results to a region, use
   * `region_code_restriction`.
   * @param regionCode regionCode or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * Optional. A string which identifies an Autocomplete session for billing purposes. Must be a URL
   * and filename safe base64 string with at most 36 ASCII characters in length. Otherwise an
   * INVALID_ARGUMENT error is returned. The session begins when the user starts typing a query, and
   * concludes when they select a place and a call to Place Details or Address Validation is made.
   * Each session can have multiple queries, followed by one Place Details or Address Validation
   * request. The credentials used for each request within a session must belong to the same Google
   * Cloud Console project. Once a session has concluded, the token is no longer valid; your app
   * must generate a fresh token for each session. If the `session_token` parameter is omitted, or
   * if you reuse a session token, the session is charged as if no session token was provided (each
   * request is billed separately). We recommend the following guidelines: * Use session tokens for
   * all Place Autocomplete calls. * Generate a fresh token for each session. Using a version 4 UUID
   * is recommended. * Ensure that the credentials used for all Place Autocomplete, Place Details,
   * and Address Validation requests within a session belong to the same Cloud Console project. * Be
   * sure to pass a unique session token for each new session. Using the same token for more than
   * one session will result in each request being billed individually.
   * @return value or {@code null} for none
   */
  public java.lang.String getSessionToken() {
    return sessionToken;
  }

  /**
   * Optional. A string which identifies an Autocomplete session for billing purposes. Must be a URL
   * and filename safe base64 string with at most 36 ASCII characters in length. Otherwise an
   * INVALID_ARGUMENT error is returned. The session begins when the user starts typing a query, and
   * concludes when they select a place and a call to Place Details or Address Validation is made.
   * Each session can have multiple queries, followed by one Place Details or Address Validation
   * request. The credentials used for each request within a session must belong to the same Google
   * Cloud Console project. Once a session has concluded, the token is no longer valid; your app
   * must generate a fresh token for each session. If the `session_token` parameter is omitted, or
   * if you reuse a session token, the session is charged as if no session token was provided (each
   * request is billed separately). We recommend the following guidelines: * Use session tokens for
   * all Place Autocomplete calls. * Generate a fresh token for each session. Using a version 4 UUID
   * is recommended. * Ensure that the credentials used for all Place Autocomplete, Place Details,
   * and Address Validation requests within a session belong to the same Cloud Console project. * Be
   * sure to pass a unique session token for each new session. Using the same token for more than
   * one session will result in each request being billed individually.
   * @param sessionToken sessionToken or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesRequest setSessionToken(java.lang.String sessionToken) {
    this.sessionToken = sessionToken;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1AutocompletePlacesRequest set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1AutocompletePlacesRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1AutocompletePlacesRequest clone() {
    return (GoogleMapsPlacesV1AutocompletePlacesRequest) super.clone();
  }

}
