/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Policy controlling intent level eval.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KnowledgeAnswersSensitivityIntentEvalPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Policy for all arguments, so no need to repeat on every argument.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersSensitivityArgumentEvalPolicy allArguments;

  /**
   * Controls whether to enabled limited logging (rpc whitelisting + GWS log query redaction) if the
   * intent wins post-fulfillment ranking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enabled;

  /**
   * The eval policy won't apply if the annotated intent is a root. This check is majorly to prevent
   * calling IntentScrubber halfway from InterpretationScrubber via nested intents.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean nestedIntentOnly;

  /**
   * Scrub entire intent before saving to eval storage, leaving only intent name and sensitivity
   * info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean scrubEntireIntent;

  /**
   * Policy for all arguments, so no need to repeat on every argument.
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersSensitivityArgumentEvalPolicy getAllArguments() {
    return allArguments;
  }

  /**
   * Policy for all arguments, so no need to repeat on every argument.
   * @param allArguments allArguments or {@code null} for none
   */
  public KnowledgeAnswersSensitivityIntentEvalPolicy setAllArguments(KnowledgeAnswersSensitivityArgumentEvalPolicy allArguments) {
    this.allArguments = allArguments;
    return this;
  }

  /**
   * Controls whether to enabled limited logging (rpc whitelisting + GWS log query redaction) if the
   * intent wins post-fulfillment ranking.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnabled() {
    return enabled;
  }

  /**
   * Controls whether to enabled limited logging (rpc whitelisting + GWS log query redaction) if the
   * intent wins post-fulfillment ranking.
   * @param enabled enabled or {@code null} for none
   */
  public KnowledgeAnswersSensitivityIntentEvalPolicy setEnabled(java.lang.Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * The eval policy won't apply if the annotated intent is a root. This check is majorly to prevent
   * calling IntentScrubber halfway from InterpretationScrubber via nested intents.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNestedIntentOnly() {
    return nestedIntentOnly;
  }

  /**
   * The eval policy won't apply if the annotated intent is a root. This check is majorly to prevent
   * calling IntentScrubber halfway from InterpretationScrubber via nested intents.
   * @param nestedIntentOnly nestedIntentOnly or {@code null} for none
   */
  public KnowledgeAnswersSensitivityIntentEvalPolicy setNestedIntentOnly(java.lang.Boolean nestedIntentOnly) {
    this.nestedIntentOnly = nestedIntentOnly;
    return this;
  }

  /**
   * Scrub entire intent before saving to eval storage, leaving only intent name and sensitivity
   * info.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getScrubEntireIntent() {
    return scrubEntireIntent;
  }

  /**
   * Scrub entire intent before saving to eval storage, leaving only intent name and sensitivity
   * info.
   * @param scrubEntireIntent scrubEntireIntent or {@code null} for none
   */
  public KnowledgeAnswersSensitivityIntentEvalPolicy setScrubEntireIntent(java.lang.Boolean scrubEntireIntent) {
    this.scrubEntireIntent = scrubEntireIntent;
    return this;
  }

  @Override
  public KnowledgeAnswersSensitivityIntentEvalPolicy set(String fieldName, Object value) {
    return (KnowledgeAnswersSensitivityIntentEvalPolicy) super.set(fieldName, value);
  }

  @Override
  public KnowledgeAnswersSensitivityIntentEvalPolicy clone() {
    return (KnowledgeAnswersSensitivityIntentEvalPolicy) super.clone();
  }

}
