/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.recaptchaenterprise.v1.model;

/**
 * A reCAPTCHA Enterprise assessment resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the reCAPTCHA Enterprise API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRecaptchaenterpriseV1Assessment extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Assessment returned by account defender when an account identifier is provided.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment accountDefenderAssessment;

  /**
   * Optional. Account verification information for identity verification. The assessment event must
   * include a token and site key to use this feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo accountVerification;

  /**
   * Optional. The environment creating the assessment. This describes your environment (the system
   * invoking CreateAssessment), NOT the environment of your user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1AssessmentEnvironment assessmentEnvironment;

  /**
   * Optional. The event being assessed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1Event event;

  /**
   * Output only. Assessment returned when firewall policies belonging to the project are evaluated
   * using the field firewall_policy_evaluation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment firewallPolicyAssessment;

  /**
   * Output only. Assessment returned by Fraud Prevention when TransactionData is provided.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment fraudPreventionAssessment;

  /**
   * Output only. Fraud Signals specific to the users involved in a payment transaction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FraudSignals fraudSignals;

  /**
   * Output only. Identifier. The resource name for the Assessment in the format
   * `projects/{project}/assessments/{assessment}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Assessment returned when a site key, a token, and a phone number as `user_id` are
   * provided. Account defender and SMS toll fraud protection need to be enabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1PhoneFraudAssessment phoneFraudAssessment;

  /**
   * Optional. The private password leak verification field contains the parameters that are used to
   * to check for leaks privately without sharing user credentials.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification privatePasswordLeakVerification;

  /**
   * Output only. The risk analysis result for the event being assessed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1RiskAnalysis riskAnalysis;

  /**
   * Output only. Properties of the provided event token.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1TokenProperties tokenProperties;

  /**
   * Output only. Assessment returned by account defender when an account identifier is provided.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment getAccountDefenderAssessment() {
    return accountDefenderAssessment;
  }

  /**
   * Output only. Assessment returned by account defender when an account identifier is provided.
   * @param accountDefenderAssessment accountDefenderAssessment or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setAccountDefenderAssessment(GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment accountDefenderAssessment) {
    this.accountDefenderAssessment = accountDefenderAssessment;
    return this;
  }

  /**
   * Optional. Account verification information for identity verification. The assessment event must
   * include a token and site key to use this feature.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo getAccountVerification() {
    return accountVerification;
  }

  /**
   * Optional. Account verification information for identity verification. The assessment event must
   * include a token and site key to use this feature.
   * @param accountVerification accountVerification or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setAccountVerification(GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo accountVerification) {
    this.accountVerification = accountVerification;
    return this;
  }

  /**
   * Optional. The environment creating the assessment. This describes your environment (the system
   * invoking CreateAssessment), NOT the environment of your user.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1AssessmentEnvironment getAssessmentEnvironment() {
    return assessmentEnvironment;
  }

  /**
   * Optional. The environment creating the assessment. This describes your environment (the system
   * invoking CreateAssessment), NOT the environment of your user.
   * @param assessmentEnvironment assessmentEnvironment or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setAssessmentEnvironment(GoogleCloudRecaptchaenterpriseV1AssessmentEnvironment assessmentEnvironment) {
    this.assessmentEnvironment = assessmentEnvironment;
    return this;
  }

  /**
   * Optional. The event being assessed.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Event getEvent() {
    return event;
  }

  /**
   * Optional. The event being assessed.
   * @param event event or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setEvent(GoogleCloudRecaptchaenterpriseV1Event event) {
    this.event = event;
    return this;
  }

  /**
   * Output only. Assessment returned when firewall policies belonging to the project are evaluated
   * using the field firewall_policy_evaluation.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment getFirewallPolicyAssessment() {
    return firewallPolicyAssessment;
  }

  /**
   * Output only. Assessment returned when firewall policies belonging to the project are evaluated
   * using the field firewall_policy_evaluation.
   * @param firewallPolicyAssessment firewallPolicyAssessment or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setFirewallPolicyAssessment(GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment firewallPolicyAssessment) {
    this.firewallPolicyAssessment = firewallPolicyAssessment;
    return this;
  }

  /**
   * Output only. Assessment returned by Fraud Prevention when TransactionData is provided.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment getFraudPreventionAssessment() {
    return fraudPreventionAssessment;
  }

  /**
   * Output only. Assessment returned by Fraud Prevention when TransactionData is provided.
   * @param fraudPreventionAssessment fraudPreventionAssessment or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setFraudPreventionAssessment(GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment fraudPreventionAssessment) {
    this.fraudPreventionAssessment = fraudPreventionAssessment;
    return this;
  }

  /**
   * Output only. Fraud Signals specific to the users involved in a payment transaction.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FraudSignals getFraudSignals() {
    return fraudSignals;
  }

  /**
   * Output only. Fraud Signals specific to the users involved in a payment transaction.
   * @param fraudSignals fraudSignals or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setFraudSignals(GoogleCloudRecaptchaenterpriseV1FraudSignals fraudSignals) {
    this.fraudSignals = fraudSignals;
    return this;
  }

  /**
   * Output only. Identifier. The resource name for the Assessment in the format
   * `projects/{project}/assessments/{assessment}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Identifier. The resource name for the Assessment in the format
   * `projects/{project}/assessments/{assessment}`.
   * @param name name or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Assessment returned when a site key, a token, and a phone number as `user_id` are
   * provided. Account defender and SMS toll fraud protection need to be enabled.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1PhoneFraudAssessment getPhoneFraudAssessment() {
    return phoneFraudAssessment;
  }

  /**
   * Output only. Assessment returned when a site key, a token, and a phone number as `user_id` are
   * provided. Account defender and SMS toll fraud protection need to be enabled.
   * @param phoneFraudAssessment phoneFraudAssessment or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setPhoneFraudAssessment(GoogleCloudRecaptchaenterpriseV1PhoneFraudAssessment phoneFraudAssessment) {
    this.phoneFraudAssessment = phoneFraudAssessment;
    return this;
  }

  /**
   * Optional. The private password leak verification field contains the parameters that are used to
   * to check for leaks privately without sharing user credentials.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification getPrivatePasswordLeakVerification() {
    return privatePasswordLeakVerification;
  }

  /**
   * Optional. The private password leak verification field contains the parameters that are used to
   * to check for leaks privately without sharing user credentials.
   * @param privatePasswordLeakVerification privatePasswordLeakVerification or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setPrivatePasswordLeakVerification(GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification privatePasswordLeakVerification) {
    this.privatePasswordLeakVerification = privatePasswordLeakVerification;
    return this;
  }

  /**
   * Output only. The risk analysis result for the event being assessed.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1RiskAnalysis getRiskAnalysis() {
    return riskAnalysis;
  }

  /**
   * Output only. The risk analysis result for the event being assessed.
   * @param riskAnalysis riskAnalysis or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setRiskAnalysis(GoogleCloudRecaptchaenterpriseV1RiskAnalysis riskAnalysis) {
    this.riskAnalysis = riskAnalysis;
    return this;
  }

  /**
   * Output only. Properties of the provided event token.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1TokenProperties getTokenProperties() {
    return tokenProperties;
  }

  /**
   * Output only. Properties of the provided event token.
   * @param tokenProperties tokenProperties or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1Assessment setTokenProperties(GoogleCloudRecaptchaenterpriseV1TokenProperties tokenProperties) {
    this.tokenProperties = tokenProperties;
    return this;
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1Assessment set(String fieldName, Object value) {
    return (GoogleCloudRecaptchaenterpriseV1Assessment) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1Assessment clone() {
    return (GoogleCloudRecaptchaenterpriseV1Assessment) super.clone();
  }

}
