/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * Data hosted at an external location. The data is to be downloaded by Android Device Policy and
 * verified against the hash.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ExternalData extends com.google.api.client.json.GenericJson {

  /**
   * The base-64 encoded SHA-256 hash of the content hosted at url. If the content doesn't match
   * this hash, Android Device Policy won't use the data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sha256Hash;

  /**
   * The absolute URL to the data, which must use either the http or https scheme. Android Device
   * Policy doesn't provide any credentials in the GET request, so the URL must be publicly
   * accessible. Including a long, random component in the URL may be used to prevent attackers from
   * discovering the URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * The base-64 encoded SHA-256 hash of the content hosted at url. If the content doesn't match
   * this hash, Android Device Policy won't use the data.
   * @return value or {@code null} for none
   */
  public java.lang.String getSha256Hash() {
    return sha256Hash;
  }

  /**
   * The base-64 encoded SHA-256 hash of the content hosted at url. If the content doesn't match
   * this hash, Android Device Policy won't use the data.
   * @param sha256Hash sha256Hash or {@code null} for none
   */
  public ExternalData setSha256Hash(java.lang.String sha256Hash) {
    this.sha256Hash = sha256Hash;
    return this;
  }

  /**
   * The absolute URL to the data, which must use either the http or https scheme. Android Device
   * Policy doesn't provide any credentials in the GET request, so the URL must be publicly
   * accessible. Including a long, random component in the URL may be used to prevent attackers from
   * discovering the URL.
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * The absolute URL to the data, which must use either the http or https scheme. Android Device
   * Policy doesn't provide any credentials in the GET request, so the URL must be publicly
   * accessible. Including a long, random component in the URL may be used to prevent attackers from
   * discovering the URL.
   * @param url url or {@code null} for none
   */
  public ExternalData setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  @Override
  public ExternalData set(String fieldName, Object value) {
    return (ExternalData) super.set(fieldName, value);
  }

  @Override
  public ExternalData clone() {
    return (ExternalData) super.clone();
  }

}
