/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.identitytoolkit.v1.model;

/**
 * Federated user identifier at an Identity Provider.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Identity Toolkit API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIdentitytoolkitV1FederatedUserIdentifier extends com.google.api.client.json.GenericJson {

  /**
   * The ID of supported identity providers. This should be a provider ID enabled for sign-in, which
   * is either from the list of [default supported IdPs](https://cloud.google.com/identity-
   * platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*` or
   * `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and `saml.testapp`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String providerId;

  /**
   * The user ID of the account at the third-party Identity Provider specified by `provider_id`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rawId;

  /**
   * The ID of supported identity providers. This should be a provider ID enabled for sign-in, which
   * is either from the list of [default supported IdPs](https://cloud.google.com/identity-
   * platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*` or
   * `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and `saml.testapp`.
   * @return value or {@code null} for none
   */
  public java.lang.String getProviderId() {
    return providerId;
  }

  /**
   * The ID of supported identity providers. This should be a provider ID enabled for sign-in, which
   * is either from the list of [default supported IdPs](https://cloud.google.com/identity-
   * platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*` or
   * `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and `saml.testapp`.
   * @param providerId providerId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1FederatedUserIdentifier setProviderId(java.lang.String providerId) {
    this.providerId = providerId;
    return this;
  }

  /**
   * The user ID of the account at the third-party Identity Provider specified by `provider_id`.
   * @return value or {@code null} for none
   */
  public java.lang.String getRawId() {
    return rawId;
  }

  /**
   * The user ID of the account at the third-party Identity Provider specified by `provider_id`.
   * @param rawId rawId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1FederatedUserIdentifier setRawId(java.lang.String rawId) {
    this.rawId = rawId;
    return this;
  }

  @Override
  public GoogleCloudIdentitytoolkitV1FederatedUserIdentifier set(String fieldName, Object value) {
    return (GoogleCloudIdentitytoolkitV1FederatedUserIdentifier) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIdentitytoolkitV1FederatedUserIdentifier clone() {
    return (GoogleCloudIdentitytoolkitV1FederatedUserIdentifier) super.clone();
  }

}
